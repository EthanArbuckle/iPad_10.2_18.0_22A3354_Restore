void sub_100004800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000048C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100004D44(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("com.apple.Diagnostics.airpodsObservationQueue", 0);
  v2 = (void *)qword_10016E838;
  qword_10016E838 = (uint64_t)v1;

  +[BluetoothManager setSharedInstanceQueue:](BluetoothManager, "setSharedInstanceQueue:", qword_10016E838);
}

void sub_100004D88(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BluetoothManager sharedInstance](BluetoothManager, "sharedInstance"));
  objc_msgSend(*(id *)(a1 + 32), "setBtManager:", v2);

}

void sub_100004E50(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  NSObject *v6;
  dispatch_time_t v7;
  uint64_t v8;
  id v9;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "btManager"));
  if (!v2
    || (v3 = (void *)v2,
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "btManager")),
        v5 = objc_msgSend(v4, "available"),
        v4,
        v3,
        (v5 & 1) == 0))
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "btManagerAvailableSemaphore"));
    v7 = dispatch_time(0, 3000000000);
    dispatch_semaphore_wait(v6, v7);

  }
  objc_msgSend(*(id *)(a1 + 32), "_ensureInitialDevicesFetched");
  objc_msgSend(*(id *)(a1 + 32), "_updateHandlers");
  v8 = *(_QWORD *)(a1 + 40);
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  (*(void (**)(uint64_t, id))(v8 + 16))(v8, v9);

}

id sub_100004FEC(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(a1 + 48), "copy");
  v3 = objc_retainBlock(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handlers"));
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v3, *(_QWORD *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 32), "_beginObserving");
}

void sub_1000050E8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handlers"));
  objc_msgSend(v2, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handlers"));
  v4 = objc_msgSend(v3, "count");

  if (!v4)
    objc_msgSend(*(id *)(a1 + 32), "_endObserving");
}

void sub_10000590C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100005B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_100005EF0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100006144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  id *v16;
  uint64_t v17;

  objc_destroyWeak(v16);
  _Block_object_dispose(&a16, 8);
  objc_destroyWeak((id *)(v17 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_100006174(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100006184(uint64_t a1)
{

}

void sub_10000618C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  id WeakRetained;
  void *v10;
  unsigned int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = a2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i);
        WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "nanoDevice", (_QWORD)v12));
        v11 = objc_msgSend(v8, "isEqual:", v10);

        if (v11)
        {
          objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v8);
          goto LABEL_11;
        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v5)
        continue;
      break;
    }
  }
LABEL_11:

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_100006428(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "nanoDevice"));
  v5 = objc_msgSend(v3, "isEqual:", v4);

  return v5;
}

id sub_10000662C(id result, int a2)
{
  objc_super v2;

  if (a2)
  {
    v2.receiver = (id)*((_QWORD *)result + 4);
    v2.super_class = (Class)DADeviceConnectionWatchProxy;
    return objc_msgSendSuper2(&v2, "start");
  }
  return result;
}

id sub_100006668(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "nanoDevice"));
  v5 = objc_msgSend(v3, "isEqual:", v4);

  return v5;
}

void sub_10000685C(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeDeviceAssertion"));
  objc_msgSend(v3, "invalidate");

  v4 = DiagnosticLogHandleForCategory(10);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = objc_loadWeakRetained(v1);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "activeDeviceAssertion"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "device"));
    v9 = 138412290;
    v10 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Successfully invalidiated Active Device Assertion for Device: %@", (uint8_t *)&v9, 0xCu);

  }
}

void sub_100006ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100006B08(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v12[4];
  id v13;
  uint64_t v14;
  id v15;
  id v16;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(WeakRetained, "setActiveDeviceAssertion:", v6);

  v8 = dispatch_queue_create("com.apple.Diagnostics.quickSwitchQueue", 0);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100006BF8;
  v12[3] = &unk_100132978;
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(void **)(a1 + 40);
  v13 = v5;
  v14 = v9;
  v15 = v10;
  v16 = *(id *)(a1 + 48);
  v11 = v5;
  dispatch_async(v8, v12);

}

uint64_t sub_100006BF8(uint64_t a1)
{
  id *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  int v12;
  uint64_t v13;

  v2 = (id *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = DiagnosticLogHandleForCategory(10);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1000EA31C(a1, v2, v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "state"));
    objc_msgSend(v7, "setPhase:", 0);

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "state"));
    objc_msgSend(v8, "addErrorCode:userInfo:", 6, 0);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "state"));
    objc_msgSend(v9, "removeErrorCode:", 6);

    +[DSAnalytics sendAnalyticsWithEvent:error:](DSAnalytics, "sendAnalyticsWithEvent:error:", 7, *(_QWORD *)(a1 + 32));
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v10 = *(_QWORD *)(a1 + 48);
      v12 = 138412290;
      v13 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Successfully switched to Watch: %@", (uint8_t *)&v12, 0xCu);
    }

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
}

void sub_1000070E4(uint64_t a1)
{
  Class v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  DADeviceRepresentation *v9;
  id v10;

  v2 = NSClassFromString(CFSTR("DADeviceLocal"));
  if (v2)
  {
    v4 = objc_opt_new(v2, v3);
  }
  else
  {
    v5 = (void *)MGCopyAnswer(CFSTR("SerialNumber"), 0);
    v9 = -[DADeviceRepresentation initWithSerialNumber:isLocal:attributes:]([DADeviceRepresentation alloc], "initWithSerialNumber:isLocal:attributes:", v5, 1, &__NSDictionary0__struct);

    v4 = (uint64_t)v9;
  }
  v10 = (id)v4;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[DADeviceDecoratorWithUI decorateWithDevice:](DADeviceDecoratorWithUI, "decorateWithDevice:", v4));
  v7 = *(_QWORD *)(a1 + 32);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", v6));
  (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);

}

void sub_100007314(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_fetchDevices"));
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

id sub_100007430(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(a1 + 48), "copy");
  v3 = objc_retainBlock(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handlers"));
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v3, *(_QWORD *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 32), "_beginObserving");
}

void sub_10000752C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handlers"));
  objc_msgSend(v2, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handlers"));
  v4 = objc_msgSend(v3, "count");

  if (!v4)
    objc_msgSend(*(id *)(a1 + 32), "_endObserving");
}

void sub_100007990(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  id v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  v12 = objc_msgSend(v2, "copy");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_fetchDevices"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  v5 = objc_msgSend(v4, "mutableCopy");

  objc_msgSend(v5, "minusSet:", v3);
  v6 = objc_msgSend(v3, "mutableCopy");
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  objc_msgSend(v6, "minusSet:", v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  objc_msgSend(v8, "minusSet:", v5);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  objc_msgSend(v9, "unionSet:", v6);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  v11 = objc_msgSend(v12, "isEqual:", v10);

  if ((v11 & 1) == 0)
    objc_msgSend(*(id *)(a1 + 32), "_updateHandlers");

}

void sub_100007E9C(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](NSSet, "setWithObjects:", CFSTR("Accessory.SmartBatteryCase"), 0));
  v2 = (void *)qword_10016E840;
  qword_10016E840 = v1;

}

void sub_100008110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000081F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10000832C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000084A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10000902C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000092E4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  v14 = a2;
  v9 = a3;
  v10 = a4;
  v11 = a5;
  if (!v11)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
    objc_msgSend(v12, "setSuiteID:", v14);

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
    objc_msgSend(v13, "setDiagnosticEventID:", v9);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1000097F0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  _UNKNOWN **v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "progressForTest"));
  objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v8, "timeIntervalSinceDate:", *(_QWORD *)(a1 + 56));
  objc_msgSend(*(id *)(a1 + 48), "setTestDuration:");
  if (v5)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "statusCode"));
    objc_msgSend(*(id *)(a1 + 48), "setStatusCode:", v9);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "data"));
    objc_msgSend(*(id *)(a1 + 48), "setData:", v10);

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "files"));
    if (v11)
    {
      v31 = v8;
      v32 = v6;
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "fileSandboxTokens"));
      v13 = objc_claimAutoreleasedReturnValue(+[DKSandboxExtension consumeSandboxExtensionsWithTokens:](DKSandboxExtension, "consumeSandboxExtensionsWithTokens:", v12));

      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sandboxExtensionHandles"));
      v30 = (void *)v13;
      objc_msgSend(v14, "setObject:forKey:", v13, *(_QWORD *)(a1 + 40));

      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "files"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v15, "count")));

      v35 = 0u;
      v36 = 0u;
      v33 = 0u;
      v34 = 0u;
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "files"));
      v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
      if (v17)
      {
        v19 = v17;
        v20 = *(_QWORD *)v34;
        do
        {
          v21 = 0;
          do
          {
            if (*(_QWORD *)v34 != v20)
              objc_enumerationMutation(v16);
            v22 = *(_QWORD *)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)v21);
            v23 = (void *)objc_opt_new(ASTSealableFile, v18);
            objc_msgSend(v23, "setFileURL:", v22);
            objc_msgSend(v11, "addObject:", v23);

            v21 = (char *)v21 + 1;
          }
          while (v19 != v21);
          v19 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
        }
        while (v19);
      }

      v8 = v31;
      v6 = v32;
    }
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "uploadStatus"));

    if (v24)
    {
      v25 = *(void **)(a1 + 48);
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "uploadStatus"));
      objc_msgSend(v25, "setUploadStatusFromSource:withArray:", CFSTR("DiagnosticsApp"), v26);

    }
    objc_msgSend(*(id *)(a1 + 48), "setFiles:", v11);

  }
  else if (v6)
  {
    switch((unint64_t)objc_msgSend(v6, "code"))
    {
      case 0xFFFFFFFFFFFFFC11:
        v27 = *(void **)(a1 + 48);
        v28 = &off_10013EFB0;
        goto LABEL_21;
      case 0xFFFFFFFFFFFFFC12:
        v27 = *(void **)(a1 + 48);
        v28 = &off_10013EF98;
        goto LABEL_21;
      case 0xFFFFFFFFFFFFFC13:
        v27 = *(void **)(a1 + 48);
        v28 = &off_10013EF80;
        goto LABEL_21;
      case 0xFFFFFFFFFFFFFC15:
        v27 = *(void **)(a1 + 48);
        v28 = &off_10013EF68;
        goto LABEL_21;
      case 0xFFFFFFFFFFFFFC18:
        v27 = *(void **)(a1 + 48);
        v28 = &off_10013EFC8;
LABEL_21:
        objc_msgSend(v27, "setStatusCode:", v28);
        break;
      default:
        break;
    }
  }
  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "session"));
  objc_msgSend(v29, "sendTestResult:error:", *(_QWORD *)(a1 + 48), 0);

}

void sub_100009CC4(uint64_t a1, void *a2)
{
  id v3;
  id *v4;
  _QWORD *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  id v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;

  v3 = a2;
  v4 = (id *)(a1 + 32);
  if (*(_QWORD *)(a1 + 32) && (objc_msgSend(*(id *)(a1 + 40), "isDisconnecting") & 1) == 0)
  {
    v13 = DiagnosticLogHandleForCategory(1);
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_1000EA4A8();

    v15 = objc_msgSend(*v4, "code");
    v16 = 4;
    if (v15 == (id)-1001)
      v16 = 1;
    v17 = v15 != (id)-1000 && v15 != (id)-1001;
    if (v15 == (id)-1000)
      v18 = 0;
    else
      v18 = v16;
    objc_msgSend(v3, "setPhase:", v17);
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "userInfo"));
    objc_msgSend(v3, "addErrorCode:userInfo:", v18, v9);
  }
  else
  {
    objc_msgSend(v3, "setErrors:", &__NSArray0__struct);
    objc_msgSend(v3, "setPhase:", 1);
    v6 = *(void **)(a1 + 48);
    v5 = (_QWORD *)(a1 + 48);
    v7 = (unint64_t)objc_msgSend(v6, "sessionEndReason");
    v8 = v7;
    if (v7 > 4)
    {
      v12 = DiagnosticLogHandleForCategory(1);
      v9 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1000EA434(v5, v8, v9);
    }
    else
    {
      v9 = off_100132A08[v7];
      v10 = DiagnosticLogHandleForCategory(1);
      v11 = objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1000EA3CC();

    }
  }

}

void sub_100009F84(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = a2;
  objc_msgSend(v4, "setSuiteName:", v3);
  objc_msgSend(v4, "setSuiteDescription:", *(_QWORD *)(a1 + 40));

}

void sub_10000A444(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD v17[4];
  id v18;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
  v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "suiteID"));
  if (!v8)
    goto LABEL_4;
  v9 = (void *)v8;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  v11 = objc_opt_respondsToSelector(v10, "deviceConnection:didFinishTestSuite:withEntry:error:");

  if ((v11 & 1) != 0)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
    v12 = *(void **)(a1 + 32);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "state"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "suiteID"));
    objc_msgSend(v7, "deviceConnection:didFinishTestSuite:withEntry:error:", v12, v14, v5, v6);

LABEL_4:
  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_10000A5A0;
  v17[3] = &unk_100132B00;
  v18 = v5;
  v16 = v5;
  objc_msgSend(v15, "transactionWithBlock:", v17);

}

void sub_10000A5A0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  if (*(_QWORD *)(a1 + 32))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "history"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "arrayByAddingObject:", *(_QWORD *)(a1 + 32)));
    objc_msgSend(v5, "setHistory:", v4);

  }
  objc_msgSend(v5, "setSuiteID:", 0);
  objc_msgSend(v5, "setSuiteName:", 0);
  objc_msgSend(v5, "setDiagnosticEventID:", 0);

}

void sub_10000A630(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  DAHistoryEntry *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (!v5 || v6)
  {
    v10 = DiagnosticLogHandleForCategory(1);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1000EA514((uint64_t)v7, v11, v12, v13, v14, v15, v16, v17);

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  else
  {
    v8 = *(_QWORD *)(a1 + 40);
    v9 = -[DAHistoryEntry initWithTestSuiteName:skipped:results:]([DAHistoryEntry alloc], "initWithTestSuiteName:skipped:results:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 48), v5);
    (*(void (**)(uint64_t, DAHistoryEntry *, _QWORD))(v8 + 16))(v8, v9, 0);

  }
}

uint64_t sub_10000AC8C(_QWORD *a1, uint64_t a2)
{
  void *v3;
  _QWORD v5[6];

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10000AD04;
  v5[3] = &unk_100132B78;
  v3 = (void *)a1[4];
  v5[4] = a1[5];
  v5[5] = a2;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v5);
  return (*(uint64_t (**)(void))(a1[6] + 16))();
}

void sub_10000AD04(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  if (objc_msgSend(v8, "endpoint") == *(id *)(a1 + 40))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "suites"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
    objc_msgSend(v7, "setSuitesAvailable:", v6);

    *a4 = 1;
  }

}

id sub_10000B0D8(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "sendProfileResult:error:", a2, 0);
}

void sub_10000BB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v11 = a6;
  if (a3)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[ASTAuthInfoResult authInfoResultWithAttestation:certificate:type:error:](ASTAuthInfoResult, "authInfoResultWithAttestation:certificate:type:error:", a2, a3, a4, a5));
    v13 = *(void **)(a1 + 32);
    v27 = v11;
    v14 = objc_msgSend(v13, "sendAuthInfoResult:error:", v12, &v27);
    v15 = v27;

    if ((v14 & 1) == 0)
    {
      v16 = DiagnosticLogHandleForCategory(1);
      v17 = objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        sub_1000EA5E0(v15, v17);

    }
  }
  else
  {
    v18 = DiagnosticLogHandleForCategory(1);
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      sub_1000EA578(v19, v20, v21, v22, v23, v24, v25, v26);

    objc_msgSend(*(id *)(a1 + 32), "sendAuthInfoResult:error:", 0, 0);
    v15 = v11;
  }

}

void sub_10000CCA8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10000CCCC(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_10000CE04(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

id sub_10000CE18(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_10000CE40(uint64_t a1)
{

}

void sub_10000CE48(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  _QWORD v10[6];
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    v4 = DiagnosticLogHandleForCategory(0);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v3)
    {
      if (v6)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Checking for Enhanced Logging Session response", buf, 2u);
      }

      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_10000CFA0;
      v10[3] = &unk_100132C18;
      v7 = *(_QWORD *)(a1 + 32);
      v10[4] = WeakRetained;
      v10[5] = v7;
      xpc_transaction_exit_clean(objc_msgSend(WeakRetained, "checkEnhancedLoggingStateWithReply:", v10));
    }
    else
    {
      if (v6)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "No reply completion is present in dispatch block for checkAvailabilityWithReply", buf, 2u);
      }

    }
  }
  else
  {
    v8 = DiagnosticLogHandleForCategory(0);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Lost reference to self when entering dispatch block for checkAvailabilityWithReply", buf, 2u);
    }

  }
}

void sub_10000CFA0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  int v10;
  id v11;

  v3 = a2;
  v4 = DiagnosticLogHandleForCategory(0);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      v10 = 138412290;
      v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Sending ELSResponse %@ in reply to checkAvailabilityWithReply", (uint8_t *)&v10, 0xCu);
    }

    (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) + 16))();
  }
  else
  {
    if (v6)
    {
      LOWORD(v10) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "No ELS response. Getting session ID", (uint8_t *)&v10, 2u);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "getSessionID"));
    v8 = DiagnosticLogHandleForCategory(0);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = 138412290;
      v11 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Session ID is %@, sending in reply to checkAvailabilityWithReply", (uint8_t *)&v10, 0xCu);
    }

    (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) + 16))();
  }

}

uint64_t sub_10000D1DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10000D2C8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  double v12;
  uint64_t v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint8_t buf[4];
  void *v24;
  _BYTE v25[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serialNumbers"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v2, "count")));
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v4 = v2;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v25, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v20;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v20 != v7)
          objc_enumerationMutation(v4);
        v9 = (void *)objc_claimAutoreleasedReturnValue(+[ASTIdentity identityWithSerialNumber:](ASTIdentity, "identityWithSerialNumber:", *(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)v8)));
        objc_msgSend(v3, "addObject:", v9);

        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v25, 16);
    }
    while (v6);
  }

  v10 = DiagnosticLogHandleForCategory(0);
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v24 = v3;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Checking for sessions with identities %@", buf, 0xCu);
  }

  v12 = *(double *)(a1 + 56);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10000D4F4;
  v15[3] = &unk_100132C90;
  v16 = v4;
  v13 = *(_QWORD *)(a1 + 40);
  v17 = *(id *)(a1 + 48);
  v18 = *(_BYTE *)(a1 + 64);
  v14 = v4;
  +[ASTSession sessionExistsForIdentities:ticketNumber:timeout:completion:](ASTSession, "sessionExistsForIdentities:ticketNumber:timeout:completion:", v3, v13, v15, v12);

}

void sub_10000D4F4(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  id v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  int v11;
  uint64_t v12;
  _DWORD v13[2];

  v6 = a4;
  if ((a2 & 1) == 0)
  {
    v7 = DiagnosticLogHandleForCategory(0);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1000EA7A8(a1, (uint64_t)v6, v8);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v9 = DiagnosticLogHandleForCategory(0);
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = *(unsigned __int8 *)(a1 + 48);
    v13[0] = 67109120;
    v13[1] = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Complete with check for session... exitWhenDone: %d", (uint8_t *)v13, 8u);
  }

  if (*(_BYTE *)(a1 + 48))
    xpc_transaction_exit_clean(v12);

}

void sub_10000D99C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_10000D9D0(uint64_t a1, int a2)
{
  uint64_t v4;
  NSObject *v5;
  _DWORD v7[2];

  v4 = DiagnosticLogHandleForCategory(0);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "checkAvailabilityWithTicketNumber finished. Success: %d", (uint8_t *)v7, 8u);
  }

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10000DAD4(id a1)
{
  byte_10016E850 = os_variant_has_internal_content("com.apple.Diagnostics");
}

uint64_t sub_10000DB88(uint64_t a1, void *a2)
{
  objc_msgSend(a2, "status");
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10000DE60(uint64_t a1, void *a2)
{
  _QWORD v4[4];
  id v5;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000DED8;
  v4[3] = &unk_100132D50;
  v5 = *(id *)(a1 + 32);
  objc_msgSend(a2, "enumerateObjectsUsingBlock:", v4);
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));

}

void sub_10000DED8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char isKindOfClass;
  void *v12;
  id v13;

  v13 = a2;
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "state"));
  if (v3)
  {
    v4 = (void *)v3;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "state"));
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "serialNumber"));
    if (!v6)
    {
LABEL_5:

      goto LABEL_6;
    }
    v7 = (void *)v6;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "state"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "serialNumber"));
    v10 = objc_opt_class(NSString);
    isKindOfClass = objc_opt_isKindOfClass(v9, v10);

    if ((isKindOfClass & 1) != 0)
    {
      v12 = *(void **)(a1 + 32);
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "state"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "serialNumber"));
      objc_msgSend(v12, "addObject:", v5);
      goto LABEL_5;
    }
  }
LABEL_6:

}

void sub_10000E1D4(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "connection"));
  objc_msgSend(v1, "end");

}

void sub_10000EFC4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "clock"));

  if (v2)
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "clock"));
    objc_msgSend(v3, "invalidate");

  }
}

void sub_10000F028(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  int v10;
  void *v11;

  v2 = DiagnosticLogHandleForCategory(11);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "session"));
    v10 = 138412290;
    v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Successfully flushed defaults, ending bug session %@...", (uint8_t *)&v10, 0xCu);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "session"));

  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "session"));
    objc_msgSend(v6, "cancel");

    objc_msgSend(*(id *)(a1 + 32), "setSession:", 0);
    v7 = DiagnosticLogHandleForCategory(11);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "session"));
      v10 = 138412290;
      v11 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Cancelled session %@.", (uint8_t *)&v10, 0xCu);

    }
  }
}

void sub_10000F490(id a1, DADeviceState *a2)
{
  -[DADeviceState setPhase:](a2, "setPhase:", 6);
}

void sub_10000F580(id a1, DADeviceState *a2)
{
  -[DADeviceState setPhase:](a2, "setPhase:", 7);
}

void sub_10000F698(id a1, DADeviceState *a2)
{
  DADeviceState *v2;
  void *v3;
  id v4;

  v2 = a2;
  -[DADeviceState setPhase:](v2, "setPhase:", 8);
  v4 = (id)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "snapshot"));
  objc_msgSend(v3, "durationRemaining");
  -[DADeviceState setDurationRemaining:](v2, "setDurationRemaining:");

}

void sub_10000F700(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSTimer scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:](NSTimer, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", *(_QWORD *)(a1 + 32), "heartbeat", 0, 0, 30.0));
  objc_msgSend(*(id *)(a1 + 32), "setClock:", v2);

}

id sub_10000F87C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setDurationRemaining:", *(double *)(a1 + 32));
}

void sub_10000F888(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSTimer scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:](NSTimer, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", *(_QWORD *)(a1 + 32), "heartbeat", 0, 0, 30.0));
  objc_msgSend(*(id *)(a1 + 32), "setClock:", v2);

}

void sub_10000F9CC(id a1, DADeviceState *a2)
{
  -[DADeviceState setPhase:](a2, "setPhase:", 9);
}

void sub_10000FB08(id a1, DADeviceState *a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  DADeviceState *v6;

  v6 = a2;
  -[DADeviceState setPhase:](v6, "setPhase:", 10);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[DADeviceState progress](v6, "progress"));

  if (!v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "snapshot"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "uploadCompletedPercentage"));
    -[DADeviceState setProgress:](v6, "setProgress:", v5);

  }
}

void sub_10000FC74(id a1, DADeviceState *a2)
{
  -[DADeviceState setPhase:](a2, "setPhase:", 12);
}

void sub_10000FDC0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
  objc_msgSend(v1, "transactionWithBlock:", &stru_100133000);

}

void sub_10000FDF8(id a1, DADeviceState *a2)
{
  -[DADeviceState setPhase:](a2, "setPhase:", 11);
}

void sub_10000FF00(uint64_t a1, void *a2)
{
  id v3;

  objc_msgSend(a2, "setStatus:", 8);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
  objc_msgSend(v3, "transactionWithBlock:", &stru_100133020);

}

void sub_10000FF50(id a1, DADeviceState *a2)
{
  -[DADeviceState setPhase:](a2, "setPhase:", 13);
}

void sub_100010058(uint64_t a1, void *a2, int a3, void *a4, void *a5, uint64_t a6, void *a7)
{
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  NSObject *v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD *v25;
  void *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  NSObject *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  _QWORD v57[5];
  _QWORD v58[5];
  id v59;
  uint8_t buf[4];
  id v61;
  __int16 v62;
  void *v63;

  v12 = a2;
  v13 = a4;
  v14 = a5;
  v15 = a7;
  v16 = DiagnosticLogHandleForCategory(11);
  v17 = objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v61 = v12;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Bug Session Connected = %@", buf, 0xCu);
  }

  v18 = DiagnosticLogHandleForCategory(11);
  v19 = objc_claimAutoreleasedReturnValue(v18);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v61 = v13;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Bug Session Collected = %@", buf, 0xCu);
  }

  v20 = DiagnosticLogHandleForCategory(11);
  v21 = objc_claimAutoreleasedReturnValue(v20);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v61 = v14;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "Bug Session Ongoing   = %@", buf, 0xCu);
  }

  objc_msgSend(*(id *)(a1 + 32), "setSession:", v12);
  v22 = *(void **)(a1 + 32);
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "session"));
  objc_msgSend(v23, "setUploadDelegate:", v22);

  v58[0] = _NSConcreteStackBlock;
  v58[1] = 3221225472;
  v58[2] = sub_100010558;
  v58[3] = &unk_100133048;
  v58[4] = *(_QWORD *)(a1 + 32);
  v24 = v14;
  v59 = v24;
  v25 = objc_retainBlock(v58);
  v26 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "snapshot"));
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "endDate"));

  if (v12 && ((v28 != 0) & ~a3) == 0)
  {
    v29 = objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
    v30 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject snapshot](v29, "snapshot"));
    ((void (*)(_QWORD *, void *))v25[2])(v25, v30);

LABEL_31:
    goto LABEL_32;
  }
  if (v12)
  {
    v56 = v15;
    v31 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "snapshot"));
    v33 = (uint64_t)objc_msgSend(v32, "status");

    v34 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
    v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "snapshot"));
    v36 = (unint64_t)objc_msgSend(v35, "consent");

    v37 = objc_msgSend(v24, "count");
    if (v36 && v37)
    {
      v33 = 3;
    }
    else if (v36 != 1 || v37)
    {
      if (v37)
        v45 = 0;
      else
        v45 = (v36 & 0xFFFFFFFFFFFFFFFELL) == 2;
      if (v45)
        v33 = 5;
    }
    else
    {
      v33 = 4;
    }
    v46 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
    v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "snapshot"));
    v48 = objc_msgSend(v47, "status");

    if ((id)v33 == v48)
    {
      v29 = objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
      v49 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject snapshot](v29, "snapshot"));
      ((void (*)(_QWORD *, void *))v25[2])(v25, v49);

    }
    else
    {
      v50 = DiagnosticLogHandleForCategory(11);
      v51 = objc_claimAutoreleasedReturnValue(v50);
      if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
      {
        v55 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
        v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v55, "snapshot"));
        v52 = (void *)objc_claimAutoreleasedReturnValue(+[ELSSnapshot statusToString:](ELSSnapshot, "statusToString:", objc_msgSend(v54, "status")));
        v53 = (void *)objc_claimAutoreleasedReturnValue(+[ELSSnapshot statusToString:](ELSSnapshot, "statusToString:", v33));
        *(_DWORD *)buf = 138412546;
        v61 = v52;
        v62 = 2112;
        v63 = v53;
        _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "Auto advancing enhanced logging state status from [%@] -> [%@]...", buf, 0x16u);

      }
      v29 = objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
      v57[0] = _NSConcreteStackBlock;
      v57[1] = 3221225472;
      v57[2] = sub_100010598;
      v57[3] = &unk_100133068;
      v57[4] = v33;
      -[NSObject transactionWithBlock:completion:](v29, "transactionWithBlock:completion:", v57, v25);
    }
    v15 = v56;
    goto LABEL_31;
  }
  if (v15)
  {
    v38 = DiagnosticLogHandleForCategory(11);
    v29 = objc_claimAutoreleasedReturnValue(v38);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      sub_1000EA9D8((uint64_t)v15, v29, v39, v40, v41, v42, v43, v44);
    goto LABEL_31;
  }
LABEL_32:

}

id sub_100010558(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "status");
  if (result == (id)3)
    return objc_msgSend(*(id *)(a1 + 32), "unpackQueueWithOngoingExtensions:retry:", *(_QWORD *)(a1 + 40), 0);
  return result;
}

id sub_100010598(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setStatus:", *(_QWORD *)(a1 + 32));
}

void sub_100010D6C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  int v6;
  id v7;

  v3 = a2;
  v4 = DiagnosticLogHandleForCategory(11);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138412290;
    v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "DiagnosticExtension has completed with attachment group: %@", (uint8_t *)&v6, 0xCu);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100010E2C(id a1)
{
  uint64_t v1;
  NSObject *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char *v8;
  void *v9;
  _QWORD v10[5];
  uint8_t buf[16];

  v1 = DiagnosticLogHandleForCategory(11);
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "All diagnostic extensions completed!", buf, 2u);
  }

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "snapshot"));
  v5 = (uint64_t)objc_msgSend(v4, "status");

  if ((unint64_t)(v5 - 1) <= 4)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "snapshot"));
    v8 = (char *)objc_msgSend(v7, "consent");

    if ((unint64_t)(v8 - 2) < 2)
    {
      v5 = 5;
    }
    else if (v8 == (char *)1)
    {
      v5 = 4;
    }
    else if (!v8)
    {
      +[DSAnalytics sendAnalyticsWithEvent:](DSAnalytics, "sendAnalyticsWithEvent:", 18);
    }
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100010F90;
    v10[3] = &unk_100133068;
    v10[4] = v5;
    objc_msgSend(v9, "transactionWithBlock:", v10);

  }
}

id sub_100010F90(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setStatus:", *(_QWORD *)(a1 + 32));
}

void sub_100010F9C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "startDate"));

  if (!v5)
    objc_msgSend(v3, "setStartDate:", v4);
  objc_msgSend(v3, "totalDuration");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "dateByAddingTimeInterval:"));
  objc_msgSend(v3, "setEndDate:", v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100011098;
  v9[3] = &unk_100132B00;
  v10 = v3;
  v8 = v3;
  objc_msgSend(v7, "transactionWithBlock:", v9);

}

void sub_100011098(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "durationRemaining");
  objc_msgSend(v3, "setDurationRemaining:");

}

id sub_1000110D8(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "setIdentifiersToRetry:", *(_QWORD *)(a1 + 32));
}

void sub_1000111B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  NSObject *v9;
  id v10;
  id v11;
  __int128 v12;
  id v13;
  uint64_t v14;
  void *i;
  void *v16;
  void *v17;
  unsigned int v18;
  uint64_t v19;
  NSObject *v20;
  void *v21;
  void *v22;
  dispatch_time_t v23;
  __int128 v24;
  _QWORD v26[5];
  _QWORD block[5];
  NSObject *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint8_t buf[4];
  void *v34;
  _BYTE v35[128];

  v4 = a4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "snapshot"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifiersToRetry"));

  v8 = dispatch_group_create();
  v9 = dispatch_queue_create("com.apple.Diagnostics.retryLocalPersistentDeviceQueue", 0);
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v10 = v4;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v29, v35, 16);
  if (v11)
  {
    v13 = v11;
    v14 = *(_QWORD *)v30;
    *(_QWORD *)&v12 = 138412290;
    v24 = v12;
    do
    {
      for (i = 0; i != v13; i = (char *)i + 1)
      {
        if (*(_QWORD *)v30 != v14)
          objc_enumerationMutation(v10);
        v16 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * (_QWORD)i);
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "stringValue", v24));
        v18 = objc_msgSend(v7, "containsObject:", v17);

        if (v18)
        {
          v19 = DiagnosticLogHandleForCategory(11);
          v20 = objc_claimAutoreleasedReturnValue(v19);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
          {
            v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "stringValue"));
            *(_DWORD *)buf = v24;
            v34 = v21;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Begin cancelling extension (becuase retry): %@", buf, 0xCu);

          }
          dispatch_group_enter(v8);
          v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "session"));
          objc_msgSend(v22, "cancelDiagnosticExtensionWithDEDExtensionIdentifier:", v16);

          v23 = dispatch_time(0, 2000000000);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_10001148C;
          block[3] = &unk_1001328B0;
          block[4] = v16;
          v28 = v8;
          dispatch_after(v23, v9, block);

        }
      }
      v13 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v29, v35, 16);
    }
    while (v13);
  }

  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100011554;
  v26[3] = &unk_100132838;
  v26[4] = *(_QWORD *)(a1 + 32);
  dispatch_group_notify(v8, v9, v26);

}

void sub_10001148C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  v2 = DiagnosticLogHandleForCategory(11);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stringValue"));
    v5 = 138412290;
    v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Finished cancelling extension (becuase retry): %@", (uint8_t *)&v5, 0xCu);

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

id sub_100011554(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = DiagnosticLogHandleForCategory(11);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "All cancelled (becuase retry), moving to unpack", v5, 2u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "unpackQueueWithOngoingExtensions:retry:", 0, 1);
}

void sub_100011684(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7)
{
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v12 = a2;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  v16 = a7;
  v17 = v16;
  if (v12)
  {
    objc_msgSend(*(id *)(a1 + 32), "setSession:", v12);
    if (*(_BYTE *)(a1 + 40))
    {
      v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "session"));
      -[NSObject commit](v18, "commit");
LABEL_7:

    }
  }
  else if (v16)
  {
    v19 = DiagnosticLogHandleForCategory(11);
    v18 = objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      sub_1000EA9D8((uint64_t)v17, v18, v20, v21, v22, v23, v24, v25);
    goto LABEL_7;
  }

}

void sub_100011A74(uint64_t a1, char a2)
{
  uint64_t v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  _QWORD v41[4];
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  __int128 *p_buf;
  uint64_t *v48;
  id v49;
  id location;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  char v54;
  __int128 buf;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  void (*v58)(uint64_t);
  id v59;

  v4 = DiagnosticLogHandleForCategory(11);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "snapshot"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "dedSessionIdentifier"));
    LODWORD(buf) = 138412290;
    *(_QWORD *)((char *)&buf + 4) = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Successfully retrieved %@ bug session activity, starting DEDManager...", (uint8_t *)&buf, 0xCu);

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[DEDManager sharedInstance](DEDManager, "sharedInstance"));
  objc_msgSend(v9, "start");

  v11 = (void *)objc_opt_new(DEDBugSessionConfiguration, v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[DEDCapability allCapabilities](DEDCapability, "allCapabilities"));
  objc_msgSend(v11, "requestCapabilitiesSet:", v12);

  v13 = (void *)objc_claimAutoreleasedReturnValue(+[ELSEnvironment sharedInstance](ELSEnvironment, "sharedInstance"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "cloudKitContainerIdentifier"));

  objc_msgSend(v11, "setFinishingMove:", 3);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "containerIdentifier"));
  objc_msgSend(v11, "setCloudkitContainer:", v15);

  v16 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "snapshot"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "metadata"));
  objc_msgSend(v11, "setCloudkitData:", v18);

  v19 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "snapshot"));
  objc_msgSend(v11, "setAllowsCellularUpload:", objc_msgSend(v20, "consent") == (id)3);

  v21 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "snapshot"));
  LODWORD(v18) = objc_msgSend(v22, "status") == (id)5;

  if ((_DWORD)v18)
    objc_msgSend(v11, "setFinishingMove:", 0);
  objc_msgSend(v11, "setCloudkitUseDevelopmentEnvironment:", objc_msgSend(v14, "environment") == (id)2);
  objc_msgSend(v11, "setNotifyingMove:", 2);
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "notifierConfiguration"));
  objc_msgSend(v11, "setNotifierConfiguration:", v23);

  v51 = 0;
  v52 = &v51;
  v53 = 0x2020000000;
  v54 = a2 ^ 1;
  if ((a2 & 1) != 0)
  {
    v24 = DiagnosticLogHandleForCategory(11);
    v25 = objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      v26 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "snapshot"));
      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "dedSessionIdentifier"));
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v28;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Re-connecting to existing %@ bug session...", (uint8_t *)&buf, 0xCu);

    }
  }
  else
  {
    v29 = DiagnosticLogHandleForCategory(11);
    v25 = objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      v30 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "snapshot"));
      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "dedSessionIdentifier"));
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v32;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Creating new %@ bug session...", (uint8_t *)&buf, 0xCu);

    }
  }

  v33 = (void *)objc_claimAutoreleasedReturnValue(+[DEDManager sharedInstance](DEDManager, "sharedInstance"));
  v34 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v56 = 0x3032000000;
  v57 = sub_10001209C;
  v58 = sub_1000120AC;
  v59 = (id)objc_claimAutoreleasedReturnValue(+[DEDDevice currentDevice](DEDDevice, "currentDevice"));
  v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "snapshot"));
  v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "targetDevices"));

  if (v36)
  {
    v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "snapshot"));
    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "targetDevices"));
    v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "firstObject"));

    if (!v39)
      v39 = (void *)objc_claimAutoreleasedReturnValue(+[DEDDevice currentDevice](DEDDevice, "currentDevice"));
    objc_msgSend(v33, "start");
    objc_initWeak(&location, *(id *)(a1 + 32));
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3221225472;
    v41[2] = sub_1000120B4;
    v41[3] = &unk_100133150;
    objc_copyWeak(&v49, &location);
    v40 = v39;
    v42 = v40;
    v43 = v34;
    p_buf = &buf;
    v44 = v11;
    v48 = &v51;
    v46 = *(id *)(a1 + 40);
    v45 = v33;
    objc_msgSend(v45, "discoverDevicesWithCompletion:", v41);

    objc_destroyWeak(&v49);
    objc_destroyWeak(&location);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "startDEDSessionForDevice:withConfig:withNewSession:completionHandler:", *(_QWORD *)(*((_QWORD *)&buf + 1) + 40), v11, *((unsigned __int8 *)v52 + 24), *(_QWORD *)(a1 + 40));
  }
  _Block_object_dispose(&buf, 8);

  _Block_object_dispose(&v51, 8);
}

void sub_100012034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001209C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000120AC(uint64_t a1)
{

}

void sub_1000120B4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id WeakRetained;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v19;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v19 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "identifier"));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
        if (objc_msgSend(v10, "isEqualToString:", v11))
        {
          v12 = objc_msgSend(v9, "status");

          if (v12 != (id)1)
            continue;
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "bugSessions"));
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "snapshot"));
          v14 = objc_msgSend(v13, "status");

          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "snapshot"));
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "dedSessionIdentifier"));
          if ((objc_msgSend(v10, "containsObject:", v16) & 1) != 0)
          {

          }
          else
          {

            if ((unint64_t)v14 >= 4)
            {
              objc_msgSend(WeakRetained, "uploadFinished");
              goto LABEL_14;
            }
          }
          objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v9);
          objc_msgSend(WeakRetained, "startDEDSessionForDevice:withConfig:withNewSession:completionHandler:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24), *(_QWORD *)(a1 + 64));
        }
        else
        {

        }
LABEL_14:

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    }
    while (v6);
  }

  objc_msgSend(*(id *)(a1 + 56), "stopDiscovery");
}

void sub_10001240C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;
  id v17;
  char v18;
  uint8_t buf[4];
  void *v20;

  v5 = a2;
  v6 = a3;
  v7 = DiagnosticLogHandleForCategory(11);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  if (!v5 || v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1000EAAA8(a1, (uint64_t)v6, v9);

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    +[DSAnalytics sendAnalyticsWithEvent:error:](DSAnalytics, "sendAnalyticsWithEvent:error:", 17, v6);
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "snapshot"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "dedSessionIdentifier"));
      *(_DWORD *)buf = 138412290;
      v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Successfully connected to %@ bug session, synchronizing...", buf, 0xCu);

    }
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1000125F4;
    v13[3] = &unk_1001331A0;
    v14 = *(id *)(a1 + 32);
    v15 = v5;
    v12 = *(id *)(a1 + 40);
    v18 = *(_BYTE *)(a1 + 48);
    v16 = 0;
    v17 = v12;
    objc_msgSend(v15, "synchronizeSessionStatusWithCompletion:", v13);

  }
}

void sub_1000125F4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  void *v20;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = DiagnosticLogHandleForCategory(11);
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "snapshot"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "dedSessionIdentifier"));
    v19 = 138412290;
    v20 = v13;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Successfully synchronized with %@ bug session.", (uint8_t *)&v19, 0xCu);

  }
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "snapshot"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "consentData"));

  if (v15)
  {
    v16 = *(void **)(a1 + 40);
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "snapshot"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "consentData"));
    objc_msgSend(v16, "addData:withFilename:", v18, CFSTR("consent.pdf"));

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();

}

void sub_100012804(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;

  v3 = a2;
  *(float *)&v4 = (float)((float)*(unint64_t *)(a1 + 32) / (float)*(uint64_t *)(a1 + 40)) * 100.0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v4));
  objc_msgSend(v3, "setProgress:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[ELSManager sharedManager](ELSManager, "sharedManager"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000128D8;
  v8[3] = &unk_100132EE0;
  v9 = v3;
  v7 = v3;
  objc_msgSend(v6, "transactionWithBlock:", v8);

}

void sub_1000128D8(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "progress"));
  objc_msgSend(v3, "setUploadCompletedPercentage:", v4);

}

id sub_1000129FC(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;

  v1 = a1;
  v2 = (id)objc_claimAutoreleasedReturnValue(+[ASTLocalization localizedStringForKey:](ASTLocalization, "localizedStringForKey:", v1));
  v3 = DiagnosticLogHandleForCategory(4);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    sub_1000EAB68((uint64_t)v1, (uint64_t)v2, v4);

  if (!v2 || objc_msgSend(v2, "isEqualToString:", v1))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", v1, &stru_10013CDC8, 0));

    v2 = (id)v6;
    if (!v6)
      v2 = v1;
  }

  return v2;
}

id sub_100012AD4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  _QWORD v19[2];

  v10 = a1;
  v11 = a2;
  v12 = sub_1000129FC(v10);
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  v14 = v10;
  v15 = v14;
  if (v13)
  {
    v15 = v14;
    if ((objc_msgSend(v13, "isEqualToString:", v14) & 1) == 0)
    {
      v19[1] = &a9;
      v16 = objc_alloc((Class)NSString);
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](NSLocale, "currentLocale"));
      v19[0] = 0;
      v15 = objc_msgSend(v16, "initWithValidatedFormat:validFormatSpecifiers:locale:arguments:error:", v13, v11, v17, &a9, v19);

    }
  }
  if (!v15)
    v15 = v14;

  return v15;
}

void sub_100012C00(id a1)
{
  DANvramUtil *v1;
  void *v2;

  v1 = objc_alloc_init(DANvramUtil);
  v2 = (void *)qword_10016E860;
  qword_10016E860 = (uint64_t)v1;

}

void sub_1000137E0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "connectedScenes"));

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v8);
        v10 = objc_opt_class(UIWindowScene);
        if ((objc_opt_isKindOfClass(v9, v10) & 1) != 0)
          objc_msgSend(v9, "_setSystemVolumeHUDEnabled:", *(unsigned __int8 *)(a1 + 32), (_QWORD)v11);
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

}

void sub_1000139A0(uint64_t a1)
{
  float Current;
  float v3;
  float v4;
  dispatch_time_t v5;
  dispatch_queue_global_t v6;
  NSObject *v7;
  float v8;
  dispatch_time_t v9;
  dispatch_queue_global_t global_queue;
  NSObject *v11;
  _QWORD v12[4];
  int v13;
  _QWORD v14[4];
  float v15;
  _QWORD block[4];
  float v17;

  if (*(_BYTE *)(a1 + 36))
  {
    Current = BKSDisplayBrightnessGetCurrent();
    v3 = *(float *)(a1 + 32);
    if (Current >= v3)
    {
      if (Current > v3)
      {
        v8 = 0.0002;
        do
        {
          v9 = dispatch_time(0, (uint64_t)(float)(v8 * 1000000000.0));
          global_queue = dispatch_get_global_queue(-2, 0);
          v11 = objc_claimAutoreleasedReturnValue(global_queue);
          v14[0] = _NSConcreteStackBlock;
          v14[1] = 3221225472;
          v14[2] = sub_100013BF8;
          v14[3] = &unk_100133248;
          v15 = Current;
          dispatch_after(v9, v11, v14);

          v8 = v8 + 0.0002;
          Current = Current + -0.01;
        }
        while (Current > *(float *)(a1 + 32));
      }
    }
    else
    {
      v4 = 0.0002;
      do
      {
        v5 = dispatch_time(0, (uint64_t)(float)(v4 * 1000000000.0));
        v6 = dispatch_get_global_queue(-2, 0);
        v7 = objc_claimAutoreleasedReturnValue(v6);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100013B90;
        block[3] = &unk_100133248;
        v17 = Current;
        dispatch_after(v5, v7, block);

        v4 = v4 + 0.0002;
        Current = Current + 0.01;
      }
      while (Current < *(float *)(a1 + 32));
    }
  }
  else
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100013C60;
    v12[3] = &unk_100133248;
    v13 = *(_DWORD *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);
  }
}

void sub_100013B90(uint64_t a1)
{
  _QWORD block[4];
  int v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100013BEC;
  block[3] = &unk_100133248;
  v2 = *(_DWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100013BEC(uint64_t a1)
{
  return BKSDisplayBrightnessSet(0, *(float *)(a1 + 32));
}

void sub_100013BF8(uint64_t a1)
{
  _QWORD block[4];
  int v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100013C54;
  block[3] = &unk_100133248;
  v2 = *(_DWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100013C54(uint64_t a1)
{
  return BKSDisplayBrightnessSet(0, *(float *)(a1 + 32));
}

uint64_t sub_100013C60(uint64_t a1)
{
  return BKSDisplayBrightnessSet(0, *(float *)(a1 + 32));
}

void sub_100013CAC(id a1)
{
  DADeviceImageViewManager *v1;
  void *v2;

  v1 = objc_alloc_init(DADeviceImageViewManager);
  v2 = (void *)qword_10016E870;
  qword_10016E870 = (uint64_t)v1;

}

void sub_100013DC4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  double v24;
  void *v25;
  float v26;
  void *v27;
  double v28;
  void *v29;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "attributes"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("deviceClass")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@"), v3));

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "attributes"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("deviceType")));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@"), v6));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v8, "scale");
  v10 = v9;

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "attributes"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("deviceEnclosureColor")));
  v13 = objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  if (v12 == (void *)v13)
  {

    v17 = 0;
    goto LABEL_5;
  }
  v14 = (void *)v13;
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "attributes"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectForKeyedSubscript:", CFSTR("deviceEnclosureColor")));

  if (v16)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "attributes"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("deviceEnclosureColor")));
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@"), v12));
LABEL_5:

    goto LABEL_7;
  }
  v17 = 0;
LABEL_7:
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "attributes"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("deviceColor")));
  v20 = objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  if (v19 == (void *)v20)
  {

    v25 = 0;
  }
  else
  {
    v21 = (void *)v20;
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "attributes"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "objectForKeyedSubscript:", CFSTR("deviceColor")));

    if (!v23)
    {
      v25 = 0;
      goto LABEL_13;
    }
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "attributes"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("deviceColor")));
    v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@"), v19));
  }

LABEL_13:
  v26 = v10;
  *(float *)&v24 = v26;
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "imageURLForDeviceClass:deviceModel:deviceColor:deviceEnclosureColor:scale:", v4, v7, v25, v17, v24));
  *(float *)&v28 = v26;
  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "imageURLForDeviceClass:deviceModel:deviceColor:deviceEnclosureColor:scale:", v4, v7, 0, 0, v28));
  objc_msgSend(WeakRetained, "downloadAndSetImageForURL:fallbackUrl:withDeviceState:andCompletionHandler:", v27, v29, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_100014360(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100014380(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100014390(uint64_t a1)
{

}

id sub_100014398(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", a2));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  return objc_msgSend(*(id *)(a1 + 32), "setDeviceImage:forDeviceState:withCompletion:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1000143EC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;

  v17 = a2;
  v7 = a3;
  v8 = a4;
  v9 = objc_opt_class(NSHTTPURLResponse);
  if ((objc_opt_isKindOfClass(v7, v9) & 1) != 0
    && objc_msgSend(v7, "statusCode") == (id)200
    && (v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", v17)),
        v10,
        v10))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
  }
  else
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableURLRequest requestWithURL:](NSMutableURLRequest, "requestWithURL:", *(_QWORD *)(a1 + 32)));
    objc_msgSend(v11, "setHTTPMethod:", CFSTR("GET"));
    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "getImageFromCacheWithRequest:", v11));
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40);
    if (v15)
      objc_msgSend(*(id *)(a1 + 40), "setDeviceImage:forDeviceState:withCompletion:", v15, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "dataTaskWithRequest:completionHandler:", v11, *(_QWORD *)(a1 + 64)));
    objc_msgSend(v16, "resume");

  }
}

void sub_1000146F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
  {
    v2 = objc_claimAutoreleasedReturnValue(+[UIImage imageNamed:](UIImage, "imageNamed:", CFSTR("DeviceImagePlaceholder")));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

  }
  v5 = objc_alloc((Class)UIImageView);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "scaledImageToHeight:", 70.0));
  v8 = objc_msgSend(v5, "initWithImage:", v6);

  objc_msgSend(v8, "setContentMode:", 4);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
  objc_msgSend(v8, "setBackgroundColor:", v7);

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100014C80(id a1, NSError *a2)
{
  NSError *v2;
  uint64_t v3;
  NSObject *v4;

  v2 = a2;
  v3 = DiagnosticLogHandleForCategory(8);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_1000EABEC();

  +[DSAnalytics sendAnalyticsWithEvent:error:](DSAnalytics, "sendAnalyticsWithEvent:error:", 5, v2);
}

void sub_100014DB4(id a1, NSError *a2)
{
  NSError *v2;
  uint64_t v3;
  NSObject *v4;

  v2 = a2;
  v3 = DiagnosticLogHandleForCategory(8);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_1000EAC5C();

  +[DSAnalytics sendAnalyticsWithEvent:error:](DSAnalytics, "sendAnalyticsWithEvent:error:", 5, v2);
}

void sub_100014F34(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "receiver"));
  objc_msgSend(v2, "receiveMessage:data:fromDestination:expectsResponse:response:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 72), *(_QWORD *)(a1 + 64));

}

void sub_100015224(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.iosdiagnosticsd"), 0, 0));
  +[DSAnalytics sendAnalyticsWithEvent:error:](DSAnalytics, "sendAnalyticsWithEvent:error:", 3, v1);

}

void sub_100015284(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.iosdiagnosticsd"), 0, 0));
  +[DSAnalytics sendAnalyticsWithEvent:error:](DSAnalytics, "sendAnalyticsWithEvent:error:", 4, v1);

}

void sub_100015324(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSSet *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = objc_opt_class(DADeviceState);
  v15 = objc_opt_class(DKAssetUploadItem);
  v14 = objc_opt_class(DKAssetUploadItems);
  v1 = objc_opt_class(DAIDSMessageObject);
  v2 = objc_opt_class(NSDictionary);
  v3 = objc_opt_class(NSArray);
  v4 = objc_opt_class(NSSet);
  v5 = objc_opt_class(NSOrderedSet);
  v6 = objc_opt_class(NSURL);
  v7 = objc_opt_class(NSString);
  v8 = objc_opt_class(NSNumber);
  v9 = objc_opt_class(NSData);
  v10 = objc_opt_class(NSDate);
  v11 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v16, v15, v14, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, objc_opt_class(NSNull), 0);
  v12 = objc_claimAutoreleasedReturnValue(v11);
  v13 = (void *)qword_10016E880;
  qword_10016E880 = v12;

}

void sub_10001550C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_100015B30(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "diagnosticsManager"));
  objc_msgSend(v2, "cancelAllDiagnostics");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "reportManager"));
  objc_msgSend(v3, "cancelAllReports");

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "connection"));
  objc_msgSend(v4, "end");

}

void sub_100016320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_100016360(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];

  v3 = a2;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    v4 = objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v24 = 0u;
    v25 = 0u;
    v26 = 0u;
    v27 = 0u;
    v23 = v3;
    v5 = v3;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v25;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v25 != v8)
            objc_enumerationMutation(v5);
          v10 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)i);
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "identifier"));
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "version"));
          v13 = (void *)objc_claimAutoreleasedReturnValue(+[ASTTestAttributes attributesWithTestId:version:](ASTTestAttributes, "attributesWithTestId:version:", v11, v12));
          -[NSObject addObject:](v4, "addObject:", v13);

        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
      }
      while (v7);
    }

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "profile"));
    objc_msgSend(v14, "setTests:", v4);

    v3 = v23;
  }
  else
  {
    v15 = DiagnosticLogHandleForCategory(1);
    v4 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1000EACFC(v4, v16, v17, v18, v19, v20, v21, v22);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100016538(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  id v20;
  __int16 v21;
  id v22;

  v5 = a2;
  v6 = a3;
  v7 = DiagnosticLogHandleForCategory(1);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v19 = 138412546;
    v20 = v6;
    v21 = 2112;
    v22 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Error: %@, Report: %@", (uint8_t *)&v19, 0x16u);
  }

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    if (v5)
    {
      v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "arrayForJSON"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "profile"));
      objc_msgSend(v10, "setProperties:", v9);

    }
    else
    {
      v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "profile"));
      -[NSObject setProperties:](v9, "setProperties:", &__NSArray0__struct);
    }
  }
  else
  {
    v11 = DiagnosticLogHandleForCategory(1);
    v9 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1000EAD2C(v9, v12, v13, v14, v15, v16, v17, v18);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1000169DC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;

  v3 = a2;
  if (!v3)
  {
    v4 = DiagnosticLogHandleForCategory(0);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1000EAD5C(a1, v5);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_10001732C(id a1)
{
  id v1;
  void *v2;
  id v3;

  v3 = objc_alloc_init((Class)NSMutableArray);
  objc_msgSend(v3, "addObjectsFromArray:", &off_10013FAC8);
  objc_msgSend(v3, "addObjectsFromArray:", &off_10013FAE0);
  v1 = objc_msgSend(objc_alloc((Class)DKDiagnosticAllowList), "initWithIdentifiers:contactMessage:", v3, CFSTR("Please reach out to Embedded Field Diagnostics for onboarding with new DiagnosticsKit extensions."));
  v2 = (void *)qword_10016E890;
  qword_10016E890 = (uint64_t)v1;

}

void sub_100017E54(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  byte_10016E8A0 = 0;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
  if ((objc_opt_respondsToSelector(v4, "forceTouchCapability") & 1) != 0)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
    v3 = objc_msgSend(v2, "forceTouchCapability");

    if (v3 == (id)2)
      byte_10016E8A0 = 1;
  }
  else
  {

  }
}

void sub_100018E3C(id a1)
{
  id v1;
  unsigned int v2;
  id v3;
  void *v4;
  BOOL v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  uint8_t v10[8];
  id v11;

  v1 = objc_alloc_init((Class)MIBUClient);
  v11 = 0;
  v2 = objc_msgSend(v1, "isInBoxUpdateMode:", &v11);
  v3 = v11;
  v4 = v3;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 0;
  if (v5)
  {
    v8 = DiagnosticLogHandleForCategory(0);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "In-box update mode is active.", v10, 2u);
    }

    byte_10016E8B0 = 1;
  }
  else if (v3)
  {
    v6 = DiagnosticLogHandleForCategory(0);
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1000EADD4(v4, v7);

  }
}

void sub_1000193E0(id a1)
{
  DAUserInterruptAlertFactory *v1;
  void *v2;

  v1 = objc_alloc_init(DAUserInterruptAlertFactory);
  v2 = (void *)qword_10016E8C0;
  qword_10016E8C0 = (uint64_t)v1;

}

void sub_1000196E0(id a1)
{
  DARemoteRunnerManager *v1;
  void *v2;

  v1 = objc_alloc_init(DARemoteRunnerManager);
  v2 = (void *)qword_10016E8D0;
  qword_10016E8D0 = (uint64_t)v1;

}

void sub_100019C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, char a19)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100019CE4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100019CF4(uint64_t a1)
{

}

void sub_100019CFC(uint64_t a1, void *a2)
{
  id v4;
  id *v5;
  id WeakRetained;
  uint64_t v7;
  NSObject *v8;
  id v9;
  int v10;
  id v11;
  __int16 v12;
  id v13;

  v4 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
  v5 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained(v5);

  if (WeakRetained)
  {
    v7 = DiagnosticLogHandleForCategory(8);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = objc_loadWeakRetained(v5);
      v10 = 138412546;
      v11 = v9;
      v12 = 2112;
      v13 = v4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Connection %@ broke with error %@", (uint8_t *)&v10, 0x16u);

    }
  }

}

void sub_10001A408(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint8_t buf[16];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[2];
  _QWORD v28[2];
  _BYTE v29[128];

  v19 = a1;
  v2 = a2;
  v3 = objc_alloc_init((Class)NSMutableArray);
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "tests"));
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v22;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v22 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
        v27[0] = CFSTR("version");
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "version", v19));
        v27[1] = CFSTR("testId");
        v28[0] = v10;
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "testId"));
        v28[1] = v11;
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v28, v27, 2));
        objc_msgSend(v3, "addObject:", v12);

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
    }
    while (v6);
  }

  v13 = DiagnosticLogHandleForCategory(8);
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "System report has finished. Sending to remote runner controlling process", buf, 2u);
  }

  v15 = *(_QWORD *)(v19 + 32);
  v25[0] = CFSTR("properties");
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "properties"));
  v25[1] = CFSTR("tests");
  v26[0] = v16;
  v17 = objc_msgSend(v3, "copy");
  v26[1] = v17;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v26, v25, 2));
  (*(void (**)(uint64_t, void *))(v15 + 16))(v15, v18);

}

void sub_10001A96C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001A990(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id WeakRetained;
  id v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v7 = objc_loadWeakRetained((id *)(a1 + 40));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "state"));
    objc_msgSend(v8, "transactionWithBlock:", &stru_100133590);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_10001AA30(id a1, DADeviceState *a2)
{
  void *v2;
  DAHistoryEntry *v3;
  void *v4;
  DAHistoryEntry *v5;
  void *v6;
  DADeviceState *v7;

  v7 = a2;
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[DADeviceState history](v7, "history"));
  v3 = [DAHistoryEntry alloc];
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[DADeviceState suiteName](v7, "suiteName"));
  v5 = -[DAHistoryEntry initWithTestSuiteName:skipped:](v3, "initWithTestSuiteName:skipped:", v4, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "arrayByAddingObject:", v5));
  -[DADeviceState setHistory:](v7, "setHistory:", v6);

  -[DADeviceState setSuiteName:](v7, "setSuiteName:", 0);
}

void sub_10001AAE0(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = a2;
  objc_msgSend(v4, "setSuiteName:", v3);
  objc_msgSend(v4, "setSuiteDescription:", *(_QWORD *)(a1 + 40));

}

void sub_10001B27C(uint64_t a1, char a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  int v16;
  void *v17;
  __int16 v18;
  id v19;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = v11;
  if (!v9 || (a2 & 1) != 0)
  {
    if (v11)
    {
      v15 = objc_opt_class(DADeviceState);
      if ((objc_opt_isKindOfClass(v12, v15) & 1) != 0)
        objc_msgSend(*(id *)(a1 + 32), "_updateState:", v12);
    }
  }
  else
  {
    v13 = DiagnosticLogHandleForCategory(7);
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v16 = 138412546;
      v17 = v12;
      v18 = 2112;
      v19 = v9;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Failed to recieve message on connect for device state with response: %@. Error: %@", (uint8_t *)&v16, 0x16u);
    }

  }
}

void sub_10001B404(uint64_t a1, char a2, void *a3)
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  if (a3)
  {
    if ((a2 & 1) == 0)
    {
      v4 = *(void **)(a1 + 32);
      v5 = a3;
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "state"));
      objc_msgSend(v6, "setPhase:", 0);

      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
      objc_msgSend(v7, "addErrorCode:userInfo:", objc_msgSend(v5, "code"), 0);

      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
      v8 = objc_msgSend(v5, "code");

      objc_msgSend(v9, "removeErrorCode:", v8);
    }
  }
}

void sub_10001B520(uint64_t a1, char a2, void *a3)
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  if (a3)
  {
    if ((a2 & 1) == 0)
    {
      v4 = *(void **)(a1 + 32);
      v5 = a3;
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "state"));
      objc_msgSend(v6, "setPhase:", 1);

      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
      objc_msgSend(v7, "addErrorCode:userInfo:", objc_msgSend(v5, "code"), 0);

      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
      v8 = objc_msgSend(v5, "code");

      objc_msgSend(v9, "removeErrorCode:", v8);
    }
  }
}

void sub_10001B664(uint64_t a1, char a2, void *a3)
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  if (a3)
  {
    if ((a2 & 1) == 0)
    {
      v4 = *(void **)(a1 + 32);
      v5 = a3;
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "state"));
      objc_msgSend(v6, "setPhase:", 1);

      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
      objc_msgSend(v7, "addErrorCode:userInfo:", objc_msgSend(v5, "code"), 0);

      v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
      v8 = objc_msgSend(v5, "code");

      objc_msgSend(v9, "removeErrorCode:", v8);
    }
  }
}

void sub_10001B780(uint64_t a1, char a2, void *a3, void *a4, void *a5)
{
  id v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;

  v14 = a3;
  v9 = a5;
  if (!v14 || (a2 & 1) != 0)
  {
    if (objc_msgSend(a4, "isEqualToString:", CFSTR("messageReceived")))
    {
      v13 = objc_opt_class(DADeviceState);
      if ((objc_opt_isKindOfClass(v9, v13) & 1) != 0)
        objc_msgSend(*(id *)(a1 + 32), "_updateState:", v9);
    }
  }
  else
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
    objc_msgSend(v10, "setPhase:", 1);

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
    objc_msgSend(v11, "addErrorCode:userInfo:", objc_msgSend(v14, "code"), 0);

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
    objc_msgSend(v12, "removeErrorCode:", objc_msgSend(v14, "code"));

  }
}

void sub_10001BD24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10001BD4C(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_10001BD74(uint64_t a1)
{

}

void sub_10001BD7C(uint64_t a1)
{
  id *v2;
  uint64_t v3;
  dispatch_semaphore_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  _QWORD *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  void *v15;
  _BOOL8 v16;
  void *v17;
  uint64_t v18;
  void *v19;
  dispatch_time_t v20;
  NSObject *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  _QWORD v26[4];
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  id v31;
  id v32;
  NSObject *v33;
  uint64_t v34;
  uint8_t buf[4];
  uint64_t v36;
  __int16 v37;
  void *v38;

  v2 = (id *)(a1 + 32);
  if ((objc_msgSend(*(id *)(a1 + 32), "isCommunicationAvailable") & 1) != 0 || *(_BYTE *)(a1 + 64))
  {
    v3 = *(_QWORD *)(a1 + 48);
    if (v3)
      objc_msgSend(*v2, "_resetDeviceStatePingTimer");
    v4 = dispatch_semaphore_create(0);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_10001C0A8;
    v30[3] = &unk_100133630;
    v6 = *(void **)(a1 + 40);
    v30[4] = *(_QWORD *)(a1 + 32);
    v7 = v6;
    v8 = *(_QWORD *)(a1 + 56);
    v31 = v7;
    v34 = v8;
    v9 = v5;
    v32 = v9;
    v10 = v4;
    v33 = v10;
    v11 = objc_retainBlock(v30);
    v12 = DiagnosticLogHandleForCategory(7);
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v14 = *(_QWORD *)(a1 + 40);
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "destination"));
      *(_DWORD *)buf = 138412546;
      v36 = v14;
      v37 = 2112;
      v38 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Sending message: %@ to destination: %@", buf, 0x16u);

    }
    v16 = v3 != 0;

    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "messenger"));
    v18 = *(_QWORD *)(a1 + 40);
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "destination"));
    objc_msgSend(v17, "sendMessage:data:toDestination:forceLocalDelivery:expectsResponse:response:", v18, 0, v19, 0, v16, v11);

    v20 = dispatch_time(0, 30000000000);
    if (dispatch_semaphore_wait(v10, v20) >= 1)
    {
      v21 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "messageReceivingQueue"));
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      v26[2] = sub_10001C540;
      v26[3] = &unk_100133658;
      v22 = *(id *)(a1 + 40);
      v23 = *(_QWORD *)(a1 + 32);
      v27 = v22;
      v28 = v23;
      v29 = *(_QWORD *)(a1 + 56);
      dispatch_sync(v21, v26);

    }
  }
  else
  {
    v24 = DiagnosticLogHandleForCategory(7);
    v25 = objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      sub_1000EAECC(v2);

    (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40) + 16))();
    v10 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.Diagnostics.DADeviceConnectionIDSProxy"), 6, 0));
    +[DSAnalytics sendAnalyticsWithEvent:error:](DSAnalytics, "sendAnalyticsWithEvent:error:", 7, v10);
  }

}

void sub_10001C0A8(uint64_t a1, char a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  _QWORD block[4];
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  char v27;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "messageReceivingQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10001C1DC;
  block[3] = &unk_100133608;
  v19 = v10;
  v20 = v11;
  v27 = a2;
  v21 = v9;
  v13 = *(id *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 32);
  v22 = v13;
  v23 = v14;
  v26 = *(_QWORD *)(a1 + 64);
  v24 = *(id *)(a1 + 48);
  v25 = *(id *)(a1 + 56);
  v15 = v9;
  v16 = v11;
  v17 = v10;
  dispatch_async(v12, block);

}

void sub_10001C1DC(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  void *v40;
  double v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint8_t buf[4];
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  __int16 v50;
  int v51;
  __int16 v52;
  uint64_t v53;

  v2 = DiagnosticLogHandleForCategory(7);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    v6 = *(unsigned __int8 *)(a1 + 96);
    v7 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 138413058;
    v47 = v4;
    v48 = 2112;
    v49 = v5;
    v50 = 1024;
    v51 = v6;
    v52 = 2112;
    v53 = v7;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Received response message: %@; data: %@; success: %d; error: %@;",
      buf,
      0x26u);
  }

  if (*(_BYTE *)(a1 + 96))
  {
    v8 = objc_msgSend(*(id *)(a1 + 32), "isEqual:", CFSTR("deviceIsLocked"));
    if (v8)
    {
      v9 = DiagnosticLogHandleForCategory(7);
      v10 = objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1000EB0B8(a1, v10, v11, v12, v13, v14, v15, v16);

      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.Diagnostics.DADeviceConnectionIDSProxy"), 5, 0));
    }
    else
    {
      v17 = 0;
    }
    if (objc_msgSend(*(id *)(a1 + 32), "isEqual:", CFSTR("destinationMismatch")))
    {
      v27 = DiagnosticLogHandleForCategory(7);
      v28 = objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        sub_1000EB050(a1, v28, v29, v30, v31, v32, v33, v34);

      v35 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.Diagnostics.DADeviceConnectionIDSProxy"), 8, 0));
      v26 = 0;
      v17 = (void *)v35;
    }
    else
    {
      v26 = v8 ^ 1;
    }
  }
  else
  {
    v18 = DiagnosticLogHandleForCategory(7);
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      sub_1000EAFE8(a1, v19, v20, v21, v22, v23, v24, v25);

    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.Diagnostics.DADeviceConnectionIDSProxy"), 6, 0));
    objc_msgSend(*(id *)(a1 + 64), "_endDeviceStatePingTimer");
    v26 = 0;
  }
  v36 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
  if (v36)
  {
    (*(void (**)(uint64_t, uint64_t, void *, _QWORD, _QWORD))(v36 + 16))(v36, v26, v17, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    v37 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    v38 = *(NSObject **)(v37 + 40);
    *(_QWORD *)(v37 + 40) = 0;
  }
  else
  {
    v39 = DiagnosticLogHandleForCategory(7);
    v38 = objc_claimAutoreleasedReturnValue(v39);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
      sub_1000EAF64(a1);
  }

  if (v17)
    +[DSAnalytics sendAnalyticsWithEvent:error:](DSAnalytics, "sendAnalyticsWithEvent:error:", 7, v17);
  v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v40, "timeIntervalSinceDate:", *(_QWORD *)(a1 + 72));
  v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v41 * 1000.0, kDSAnalyticsIDSDurationKey));
  v45 = v42;
  v43 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v45, &v44, 1));
  +[DSAnalytics sendAnalyticsWithEvent:payloadDict:](DSAnalytics, "sendAnalyticsWithEvent:payloadDict:", 6, v43);

  objc_msgSend(*(id *)(a1 + 64), "setCommunicationAvailable:", 1);
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 80));

}

void sub_10001C540(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = DiagnosticLogHandleForCategory(7);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_1000EB1A0(a1);

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v4 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.Diagnostics.DADeviceConnectionIDSProxy"), 6, 0));
    (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) + 16))();
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v6 = *(void **)(v5 + 40);
    *(_QWORD *)(v5 + 40) = 0;

    +[DSAnalytics sendAnalyticsWithEvent:error:](DSAnalytics, "sendAnalyticsWithEvent:error:", 7, v4);
    objc_msgSend(*(id *)(a1 + 40), "setCommunicationAvailable:", 0);
  }
  else
  {
    v7 = DiagnosticLogHandleForCategory(7);
    v4 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1000EB120(a1);
  }

}

void sub_10001C754(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10001C7C0(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10001C848;
  v3[3] = &unk_1001336A8;
  v3[4] = *(_QWORD *)(a1 + 32);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSTimer scheduledTimerWithTimeInterval:repeats:block:](NSTimer, "scheduledTimerWithTimeInterval:repeats:block:", 0, v3, 30.0));
  objc_msgSend(*(id *)(a1 + 32), "setDeviceStatePingTimer:", v2);

}

id sub_10001C848(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  int v6;
  void *v7;

  v2 = DiagnosticLogHandleForCategory(7);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "destination"));
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Sending ping message to device: %@", (uint8_t *)&v6, 0xCu);

  }
  return objc_msgSend(*(id *)(a1 + 32), "_ping");
}

void sub_10001C968(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deviceStatePingTimer"));
  v3 = objc_msgSend(v2, "isValid");

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deviceStatePingTimer"));
    objc_msgSend(v4, "invalidate");

    objc_msgSend(*(id *)(a1 + 32), "setDeviceStatePingTimer:", 0);
  }
}

void sub_10001CB38(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_10001CF5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10001D00C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10001D16C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), "_nanoRegistryDevicePaired:", NRPairedDeviceRegistryDeviceDidPairNotification, 0);

  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v3, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), "_nanoRegistryDeviceUnpaired:", NRPairedDeviceRegistryDeviceDidUnpairNotification, 0);

}

id sub_10001D204(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateDevicesWithSerialNumber:", 0);
}

void sub_10001D2A8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userInfo"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", NRPairedDeviceRegistryDevice));

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_createDeviceWithNanoDevice:", v3));
    if (v4)
    {
      v5 = DiagnosticLogHandleForCategory(5);
      v6 = objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "state"));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "serialNumber"));
        v10 = 138412290;
        v11 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[%@] Nano device connected", (uint8_t *)&v10, 0xCu);

      }
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "devices"));
      objc_msgSend(v9, "addObject:", v4);

      objc_msgSend(*(id *)(a1 + 40), "_updateHandlers");
    }

  }
}

void sub_10001D48C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userInfo"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", NRPairedDeviceRegistryDevice));

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_createDeviceWithNanoDevice:", v3));
    if (v4)
    {
      v5 = DiagnosticLogHandleForCategory(5);
      v6 = objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "state"));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "serialNumber"));
        v10 = 138412290;
        v11 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[%@] Nano device disconnected", (uint8_t *)&v10, 0xCu);

      }
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "devices"));
      objc_msgSend(v9, "removeObject:", v4);

      objc_msgSend(*(id *)(a1 + 40), "_updateHandlers");
    }

  }
}

void sub_10001D724(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "removeObserver:", *(_QWORD *)(a1 + 32));

}

void sub_10001D7D4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *i;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint8_t buf[4];
  void *v32;
  _BYTE v33[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NRPairedDeviceRegistry sharedInstance](NRPairedDeviceRegistry, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "getPairedDevices"));

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NRPairedDeviceRegistry sharedInstance](NRPairedDeviceRegistry, "sharedInstance"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NRPairedDeviceRegistry pairedDevicesSelectorBlock](NRPairedDeviceRegistry, "pairedDevicesSelectorBlock"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "getAllDevicesWithArchivedAltAccountDevicesMatching:", v5));

  if (objc_msgSend(v6, "count"))
  {
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "arrayByAddingObjectsFromArray:", v6));

    v3 = (void *)v7;
  }
  v26 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithCapacity:](NSMutableSet, "setWithCapacity:", objc_msgSend(v8, "count")));

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v10 = v3;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v28;
    do
    {
      for (i = 0; i != v12; i = (char *)i + 1)
      {
        if (*(_QWORD *)v28 != v13)
          objc_enumerationMutation(v10);
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_createDeviceWithNanoDevice:", *(_QWORD *)(*((_QWORD *)&v27 + 1) + 8 * (_QWORD)i)));
        v16 = DiagnosticLogHandleForCategory(10);
        v17 = objc_claimAutoreleasedReturnValue(v16);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "state"));
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "serialNumber"));
          *(_DWORD *)buf = 138412290;
          v32 = v19;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "[%@] Nano device connected", buf, 0xCu);

        }
        objc_msgSend(v9, "addObject:", v15);

      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
    }
    while (v12);
  }

  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  v21 = objc_msgSend(v20, "mutableCopy");

  objc_msgSend(v21, "minusSet:", v9);
  v22 = objc_msgSend(v9, "mutableCopy");
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  objc_msgSend(v22, "minusSet:", v23);

  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  objc_msgSend(v24, "minusSet:", v21);

  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devices"));
  objc_msgSend(v25, "unionSet:", v22);

  objc_msgSend(*(id *)(a1 + 32), "_updateHandlers");
}

void sub_10001DD80(id a1)
{
  DAMockDeviceImageViewManager *v1;
  void *v2;

  v1 = objc_alloc_init(DAMockDeviceImageViewManager);
  v2 = (void *)qword_10016E8E0;
  qword_10016E8E0 = (uint64_t)v1;

}

void sub_10001DE60(uint64_t a1)
{
  dispatch_semaphore_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  dispatch_time_t v10;
  _QWORD block[4];
  id v12;
  uint64_t *v13;
  _QWORD v14[4];
  id v15;
  NSObject *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t);
  id v23;
  uint8_t buf[4];
  void *v25;

  v2 = dispatch_semaphore_create(0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "attributes"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("imageName")));

  v18 = 0;
  v19 = &v18;
  v20 = 0x3032000000;
  v21 = sub_10001E0E0;
  v22 = sub_10001E0F0;
  v23 = 0;
  if (v4)
  {
    v5 = objc_claimAutoreleasedReturnValue(+[UIImage imageNamed:](UIImage, "imageNamed:", v4));
    v6 = (void *)v19[5];
    v19[5] = v5;

    if (!v19[5])
    {
      v7 = DiagnosticLogHandleForCategory(5);
      v8 = objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v25 = v4;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Requesting device image for [%@]", buf, 0xCu);
      }

      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_10001E0F8;
      v14[3] = &unk_1001336F0;
      v17 = &v18;
      v15 = v4;
      v9 = v2;
      v16 = v9;
      +[ASTSession requestAsset:completionHandler:](ASTSession, "requestAsset:completionHandler:", v15, v14);
      v10 = dispatch_time(0, 15000000000);
      dispatch_semaphore_wait(v9, v10);

    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10001E25C;
  block[3] = &unk_100133328;
  v13 = &v18;
  v12 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  _Block_object_dispose(&v18, 8);
}

void sub_10001E0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001E0E0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10001E0F0(uint64_t a1)
{

}

void sub_10001E0F8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  uint64_t v19;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5 && !v6)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
    objc_msgSend(v8, "scale");
    v9 = objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:scale:](UIImage, "imageWithData:scale:", v5));
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

  }
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v12 = DiagnosticLogHandleForCategory(5);
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v14 = *(_QWORD *)(a1 + 32);
      v18 = 138412290;
      v19 = v14;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Could not download device image: [%@]", (uint8_t *)&v18, 0xCu);
    }

    v15 = objc_claimAutoreleasedReturnValue(+[UIImage imageNamed:](UIImage, "imageNamed:", *(_QWORD *)(a1 + 32)));
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v17 = *(void **)(v16 + 40);
    *(_QWORD *)(v16 + 40) = v15;

  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));

}

void sub_10001E25C(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = objc_msgSend(objc_alloc((Class)UIImageView), "initWithImage:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  objc_msgSend(v3, "setContentMode:", 4);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
  objc_msgSend(v3, "setBackgroundColor:", v2);

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_10001E5A0(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(a1 + 48), "copy");
  v3 = objc_retainBlock(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handlers"));
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v3, *(_QWORD *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 32), "_beginObserving");
}

void sub_10001E69C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handlers"));
  objc_msgSend(v2, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handlers"));
  v4 = objc_msgSend(v3, "count");

  if (!v4)
    objc_msgSend(*(id *)(a1 + 32), "_endObserving");
}

id sub_10001E7CC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateDevicesWithSnapshot:", a2);
}

void sub_10001E9C0(uint64_t a1)
{
  id *v2;
  void *v3;
  id v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;

  if (objc_msgSend(*(id *)(a1 + 32), "status"))
  {
    if ((unint64_t)objc_msgSend(*(id *)(a1 + 32), "status") <= 6)
    {
      v2 = (id *)(a1 + 40);
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "devices"));
      v4 = objc_msgSend(v3, "count");

      if (!v4)
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "devices"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "_spawnPersistentDevice"));
        objc_msgSend(v9, "addObject:", v10);

        goto LABEL_10;
      }
    }
  }
  if (!objc_msgSend(*(id *)(a1 + 32), "status") || (unint64_t)objc_msgSend(*(id *)(a1 + 32), "status") >= 7)
  {
    v6 = *(void **)(a1 + 40);
    v5 = (id *)(a1 + 40);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "devices"));
    v8 = objc_msgSend(v7, "count");

    if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v5, "devices"));
      objc_msgSend(v9, "removeAllObjects");
      v2 = v5;
LABEL_10:

      objc_msgSend(*v2, "_updateHandlers");
    }
  }
}

void sub_10001F0D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001F0F4(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  int v8;
  id v9;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = DiagnosticLogHandleForCategory(1);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "New devices: %@", (uint8_t *)&v8, 0xCu);
  }

  objc_msgSend(WeakRetained, "setDevices:", v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  objc_msgSend(v7, "observerDidChangeDevices:", WeakRetained);

}

void sub_10001F330(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10001F354(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  id WeakRetained;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  objc_msgSend(WeakRetained, "setDevices:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  objc_msgSend(v5, "observerDidChangeDevices:", WeakRetained);

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10001F8F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10001FA24(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[4];
  id v12;
  NSObject *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v3 = dispatch_group_create();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v10 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v15;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v15 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)v8);
        dispatch_group_enter(v3);
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 3221225472;
        v11[2] = sub_10001FBD0;
        v11[3] = &unk_100132D78;
        v12 = v2;
        v13 = v3;
        objc_msgSend(v9, "oneshotWithHandler:", v11);

        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v6);
  }

  dispatch_group_wait(v3, 0xFFFFFFFFFFFFFFFFLL);
  (*(void (**)(void))(*(_QWORD *)(v10 + 40) + 16))();

}

void sub_10001FBD0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a2;
  v3 = *(id *)(a1 + 32);
  objc_sync_enter(v3);
  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "allObjects"));
  objc_msgSend(v4, "addObjectsFromArray:", v5);

  objc_sync_exit(v3);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void sub_10001FC50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002065C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000206B0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000206C0(uint64_t a1)
{

}

void sub_1000206C8(uint64_t a1, void *a2, void *a3)
{
  id v6;
  id v7;

  v7 = a2;
  v6 = a3;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), a3);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    objc_msgSend(*(id *)(a1 + 32), "purgeSecurityKey");
    objc_msgSend(*(id *)(a1 + 32), "setDeviceIdentityKey:", objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "referenceKey"));
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));

}

void sub_100020CA8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 buf, int a14, __int16 a15, __int16 a16, void *a17)
{
  id v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  if (a2 == 1)
  {
    v17 = objc_begin_catch(a1);
    v18 = DiagnosticLogHandleForCategory(1);
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "name"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "reason"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "userInfo"));
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "description"));
      LODWORD(buf) = 138412802;
      *(_QWORD *)((char *)&buf + 4) = v20;
      WORD6(buf) = 2112;
      *(_QWORD *)((char *)&buf + 14) = v21;
      a16 = 2112;
      a17 = v23;
      _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Exception raised while taking SHA256 of file: %@: %@ (%@)", (uint8_t *)&buf, 0x20u);

    }
    objc_end_catch();
    JUMPOUT(0x100020C68);
  }
  _Unwind_Resume(a1);
}

void sub_1000213E4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  __int128 v6;
  _QWORD v7[4];
  id v8;
  __int128 v9;
  uint64_t v10;

  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  v3 = (void *)objc_opt_new(CRCAttestationManager, v2);
  v4 = *(_QWORD *)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000214AC;
  v7[3] = &unk_100133820;
  v10 = *(_QWORD *)(a1 + 64);
  v6 = *(_OWORD *)(a1 + 48);
  v5 = (id)v6;
  v9 = v6;
  v8 = *(id *)(a1 + 32);
  objc_msgSend(v3, "issueClientCertificateWithCompletionOnQueue:withOptions:completion:", 0, v4, v7);

}

void sub_1000214AC(uint64_t a1, int a2, void *a3, void *a4)
{
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id *v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;

  v8 = a3;
  v9 = a4;
  if (!a2)
  {
    v16 = DiagnosticLogHandleForCategory(1);
    v17 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      sub_1000EB664();

    v14 = (id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
    v15 = a4;
    goto LABEL_9;
  }
  v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "certificates"));
  if (v10)
  {
    v11 = (void *)v10;
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "certificates"));
    if (objc_msgSend(v12, "count") == (id)2)
    {
      v13 = objc_msgSend(v8, "referenceKey");

      if (v13)
      {
        v14 = (id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
        v15 = a3;
LABEL_9:
        objc_storeStrong(v14, v15);
        goto LABEL_14;
      }
    }
    else
    {

    }
  }
  v18 = DiagnosticLogHandleForCategory(1);
  v19 = objc_claimAutoreleasedReturnValue(v18);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    sub_1000EB638();

LABEL_14:
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_100021638(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_100021644(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_100021984(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100021A50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100021B64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100021C78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100021F04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100021F84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100023610(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSSet *v8;
  uint64_t v9;
  void *v10;

  v1 = objc_opt_class(NSArray);
  v2 = objc_opt_class(NSDictionary);
  v3 = objc_opt_class(NSNumber);
  v4 = objc_opt_class(NSString);
  v5 = objc_opt_class(NSMutableDictionary);
  v6 = objc_opt_class(NSMutableArray);
  v7 = objc_opt_class(NSMutableString);
  v8 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v1, v2, v3, v4, v5, v6, v7, objc_opt_class(NSNull), 0);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  v10 = (void *)qword_10016E8F8;
  qword_10016E8F8 = v9;

}

void sub_100023DEC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "connection"));
  objc_msgSend(v1, "end");

}

void sub_1000245AC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  int v11;
  id v12;
  __int16 v13;
  id v14;

  v5 = a2;
  v6 = a3;
  v7 = DiagnosticLogHandleForCategory(1);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v11 = 138412546;
    v12 = v6;
    v13 = 2112;
    v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Error: %@, Report: %@", (uint8_t *)&v11, 0x16u);
  }

  if (v5)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "arrayForJSON"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "profile"));
    objc_msgSend(v10, "setProperties:", v9);

  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "profile"));
    objc_msgSend(v9, "setProperties:", &__NSArray0__struct);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100024910(id a1)
{
  DALauncherServiceManager *v1;
  void *v2;

  v1 = objc_alloc_init(DALauncherServiceManager);
  v2 = (void *)qword_10016E908;
  qword_10016E908 = (uint64_t)v1;

}

void sub_100024E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, char a19)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100024E9C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100024EAC(uint64_t a1)
{

}

void sub_100024EB4(uint64_t a1, void *a2)
{
  id v4;
  id *v5;
  id WeakRetained;
  uint64_t v7;
  NSObject *v8;
  id v9;
  int v10;
  id v11;
  __int16 v12;
  id v13;

  v4 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
  v5 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained(v5);

  if (WeakRetained)
  {
    v7 = DiagnosticLogHandleForCategory(8);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = objc_loadWeakRetained(v5);
      v10 = 138412546;
      v11 = v9;
      v12 = 2112;
      v13 = v4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Connection %@ broke with error %@", (uint8_t *)&v10, 0x16u);

    }
  }

}

void sub_10002525C(uint64_t a1)
{
  Class v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  DADeviceRepresentation *v8;
  id v9;

  v2 = NSClassFromString(CFSTR("DADeviceLocal"));
  if (v2)
  {
    v4 = objc_opt_new(v2, v3);
  }
  else
  {
    v5 = (void *)MGCopyAnswer(CFSTR("SerialNumber"), 0);
    v8 = -[DADeviceRepresentation initWithSerialNumber:isLocal:attributes:]([DADeviceRepresentation alloc], "initWithSerialNumber:isLocal:attributes:", v5, 1, &__NSDictionary0__struct);

    v4 = (uint64_t)v8;
  }
  v6 = *(_QWORD *)(a1 + 32);
  v9 = (id)v4;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", v4));
  (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);

}

void sub_1000257A4(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) + 16))();
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0;

}

void sub_100025C6C(uint64_t a1, void *a2)
{
  id v3;
  _QWORD block[5];

  v3 = a2;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "invalidate");
  if (*(_QWORD *)(a1 + 40))
    objc_msgSend(v3, "setConsentData:");
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100025CFC;
  block[3] = &unk_100132838;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_100025CFC(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) + 16))();
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0;

}

void sub_100026C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_100026D30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100026DE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100026E90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100026F40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100026FF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000270A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100027130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1000271E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100027290(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100027340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000273F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002765C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100027730(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002797C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_100027C50(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const __CFString *v6;
  uint64_t v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v6 = CFSTR("info");
  v7 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v7, &v6, 1));
  objc_msgSend(v2, "postNotificationName:object:userInfo:", CFSTR("com.apple.Diagnostics.deviceStateChangedNotification"), v4, v5);

}

void sub_10002866C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void sub_1000288B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

Class sub_100028BA8(uint64_t a1)
{
  Class result;

  sub_100028BFC();
  result = objc_getClass("NRDevice");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_10016E920 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_1000EB75C();
    return (Class)sub_100028BFC();
  }
  return result;
}

uint64_t sub_100028BFC()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_10016E918)
  {
    v4 = off_100133A48;
    v5 = 0;
    qword_10016E918 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_10016E918;
  v1 = v3;
  if (!qword_10016E918)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

Class sub_100028CAC(uint64_t a1)
{
  char *v2;
  Class result;
  char *v4;
  __int128 v5;
  uint64_t v6;

  v4 = 0;
  if (!qword_10016E928)
  {
    v5 = off_100133A88;
    v6 = 0;
    qword_10016E928 = _sl_dlopen(&v5, &v4);
    v2 = v4;
    if (!qword_10016E928)
    {
      abort_report_np("%s", v4);
      goto LABEL_7;
    }
    if (v4)
      goto LABEL_8;
  }
  while (1)
  {
    result = objc_getClass("SFDevice");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_7:
    v2 = (char *)sub_1000EB780();
LABEL_8:
    free(v2);
  }
  qword_10016E930 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

DADeviceAirpods *sub_100028DA0(uint64_t a1)
{
  DADeviceAirpods *result;
  DADeviceAirpods *v3;
  SEL v4;
  id v5;

  sub_100028BFC();
  result = (DADeviceAirpods *)objc_getClass("NRPairedDeviceRegistry");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_10016E940 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (DADeviceAirpods *)sub_1000EB7A4();
    return -[DADeviceAirpods initWithBluetoothDevice:](v3, v4, v5);
  }
  return result;
}

void sub_1000293A4(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "connection"));
  objc_msgSend(v1, "end");

}

void sub_100029C00(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id obj;
  uint64_t v17;
  id v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  obj = v2;
  v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
  if (v18)
  {
    v17 = *(_QWORD *)v25;
    do
    {
      v4 = 0;
      do
      {
        if (*(_QWORD *)v25 != v17)
          objc_enumerationMutation(obj);
        v19 = v4;
        v5 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * v4);
        v20 = 0u;
        v21 = 0u;
        v22 = 0u;
        v23 = 0u;
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "supportedDevices"));
        v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
        if (v7)
        {
          v8 = v7;
          v9 = *(_QWORD *)v21;
          do
          {
            v10 = 0;
            do
            {
              if (*(_QWORD *)v21 != v9)
                objc_enumerationMutation(v6);
              if (objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v10), "isEqualToString:", CFSTR("AirPods")))
              {
                v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "identifier"));
                v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "version"));
                v13 = (void *)objc_claimAutoreleasedReturnValue(+[ASTTestAttributes attributesWithTestId:version:](ASTTestAttributes, "attributesWithTestId:version:", v11, v12));
                objc_msgSend(v3, "addObject:", v13);

              }
              v10 = (char *)v10 + 1;
            }
            while (v8 != v10);
            v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
          }
          while (v8);
        }

        v4 = v19 + 1;
      }
      while ((id)(v19 + 1) != v18);
      v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
    }
    while (v18);
  }

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "profile"));
  objc_msgSend(v14, "setTests:", v3);

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100029E4C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  int v11;
  id v12;
  __int16 v13;
  id v14;

  v5 = a2;
  v6 = a3;
  v7 = DiagnosticLogHandleForCategory(1);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v11 = 138412546;
    v12 = v6;
    v13 = 2112;
    v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Error: %@, Report: %@", (uint8_t *)&v11, 0x16u);
  }

  if (v5)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "arrayForJSON"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "profile"));
    objc_msgSend(v10, "setProperties:", v9);

  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "profile"));
    objc_msgSend(v9, "setProperties:", &__NSArray0__struct);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10002A2B0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;

  v3 = a2;
  if (!v3)
  {
    v4 = DiagnosticLogHandleForCategory(0);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1000EAD5C(a1, v5);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_10002AF20(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned int v8;
  void *v9;
  void *v10;
  void *v11;
  objc_super v12;
  const __CFString *v13;
  void *v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v3 = *(void **)(a1 + 32);
  v13 = CFSTR("DADeviceAirPodsDeviceKey");
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "airpodsDevice"));
  v14 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v14, &v13, 1));
  objc_msgSend(v2, "postNotificationName:object:userInfo:", CFSTR("com.apple.Diagnostics.airPodsSessionWillStart"), v3, v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "airpodsDevice"));
  LOBYTE(v3) = objc_msgSend(v6, "connected");

  if ((v3 & 1) == 0)
    objc_msgSend(*(id *)(a1 + 32), "connect");
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "airpodsDevice"));
  v8 = objc_msgSend(v7, "connected");

  if (v8)
  {
    v12.receiver = *(id *)(a1 + 32);
    v12.super_class = (Class)DADeviceConnectionAirPods;
    objc_msgSendSuper2(&v12, "start");
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
    objc_msgSend(v9, "setPhase:", 0);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
    objc_msgSend(v10, "addErrorCode:userInfo:", 11, 0);

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "state"));
    objc_msgSend(v11, "removeErrorCode:", 11);

  }
}

id sub_10002B128(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  objc_super v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "airpodsDevice"));
  v3 = objc_msgSend(v2, "connected");

  if (v3)
    objc_msgSend(*(id *)(a1 + 32), "disconnect");
  v5.receiver = *(id *)(a1 + 32);
  v5.super_class = (Class)DADeviceConnectionAirPods;
  return objc_msgSendSuper2(&v5, "end");
}

void sub_10002B25C(uint64_t a1)
{
  dispatch_time_t v2;
  dispatch_queue_global_t global_queue;
  NSObject *v4;
  _QWORD block[5];

  objc_msgSend(*(id *)(a1 + 32), "end");
  v2 = dispatch_time(0, 2000000000);
  global_queue = dispatch_get_global_queue(0, 0);
  v4 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002B300;
  block[3] = &unk_100132838;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_after(v2, v4, block);

}

id sub_10002B300(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "unpair");
}

void sub_10002B488(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_10002B49C(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  int v12;
  void *v13;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "btManager"));
  objc_msgSend(v3, "setDevicePairingEnabled:", 1);

  v4 = DiagnosticLogHandleForCategory(10);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = objc_loadWeakRetained(v1);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "airpodsDevice"));
    v12 = 138412290;
    v13 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Requesting unpair of AirPods %@...", (uint8_t *)&v12, 0xCu);

  }
  v8 = objc_loadWeakRetained(v1);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "airpodsDevice"));
  objc_msgSend(v9, "unpair");

  v10 = objc_loadWeakRetained(v1);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "btManager"));
  objc_msgSend(v11, "setDevicePairingEnabled:", 0);

}

id sub_10002C8B0(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "original"));
  objc_msgSend(v2, "end");

  return objc_msgSend(*(id *)(a1 + 32), "_reset");
}

void sub_10002CBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002CBFC(uint64_t a1, int a2)
{
  id *v4;
  id WeakRetained;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[4];
  id v17;
  id v18;

  v4 = (id *)(a1 + 64);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v7 = WeakRetained;
  if (a2)
  {
    BKSDisplayBrightnessGetCurrent(WeakRetained, v6);
    objc_msgSend(*(id *)(a1 + 32), "setOriginalScreenBrightness:");
    objc_msgSend(v7, "setIgnoreButtonEvents:", objc_msgSend(*(id *)(a1 + 40), "isHeadless"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v8, "addObserver:selector:name:object:", v7, "testViewPresented:", CFSTR("com.apple.Diagnostics.DKViewControllerPresented"), 0);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buttonEventMonitor"));
    v10 = objc_msgSend(v9, "hasTarget:", *(_QWORD *)(a1 + 32));

    if ((v10 & 1) == 0)
      objc_msgSend(*(id *)(a1 + 32), "_startInterceptingButtonEvents");
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "original"));
    v12 = *(_QWORD *)(a1 + 40);
    v13 = *(_QWORD *)(a1 + 48);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10002CDC0;
    v16[3] = &unk_1001335B8;
    objc_copyWeak(&v18, v4);
    v17 = *(id *)(a1 + 56);
    objc_msgSend(v11, "executeTestWithTestAttributes:parameters:completion:", v12, v13, v16);

    objc_destroyWeak(&v18);
  }
  else
  {
    v14 = *(_QWORD *)(a1 + 56);
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", DKErrorDomain, -1003, 0));
    (*(void (**)(uint64_t, _QWORD, void *))(v14 + 16))(v14, 0, v15);

    objc_msgSend(v7, "idle");
  }

}

void sub_10002CDAC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10002CDC0(uint64_t a1, void *a2, void *a3)
{
  id *v5;
  id v6;
  id WeakRetained;
  id v8;

  v5 = (id *)(a1 + 40);
  v6 = a3;
  v8 = a2;
  WeakRetained = objc_loadWeakRetained(v5);
  objc_msgSend(WeakRetained, "_reset");

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10002CFAC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v5[4];
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "original"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "state"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "suiteName"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10002D088;
  v5[3] = &unk_100132950;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  +[DAUserInterruptAlertFactory activateAlertForSuiteName:withHandler:](DAUserInterruptAlertFactory, "activateAlertForSuiteName:withHandler:", v4, v5);

  objc_destroyWeak(&v6);
}

void sub_10002D074(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10002D088(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "diagnosticsManager"));
  objc_msgSend(v1, "cancelAllDiagnostics");

}

void sub_10002D170(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10002D194(uint64_t a1)
{
  id *v1;
  void *v2;
  id v3;
  id WeakRetained;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "buttonEventMonitor"));
  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v2, "addTarget:action:forButtonEvents:propagate:", v3, "handleButtonEvent:", 0xFFFFFFFFLL, 0);

}

void sub_10002D2F0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buttonEventMonitor"));
  objc_msgSend(v2, "removeTarget:", *(_QWORD *)(a1 + 32));

}

void sub_10002D330(uint64_t a1)
{
  float v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  objc_msgSend(*(id *)(a1 + 32), "originalScreenBrightness");
  BKSDisplayBrightnessSet(0, v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "connectedScenes"));

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v8);
        v10 = objc_opt_class(UIWindowScene);
        if ((objc_opt_isKindOfClass(v9, v10) & 1) != 0)
          objc_msgSend(v9, "_setSystemVolumeHUDEnabled:", 1, (_QWORD)v11);
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

}

void sub_10002DE30(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;

  v2 = DiagnosticLogHandleForCategory(7);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v8 = 138412290;
    v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Syncing Device State: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "messenger"));
  v6 = *(_QWORD *)(a1 + 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "destination"));
  objc_msgSend(v5, "sendMessage:data:toDestination:forceLocalDelivery:expectsResponse:response:", CFSTR("deviceState"), v6, v7, 1, 0, &stru_100133B48);

}

void sub_10002DF38(id a1, BOOL a2, NSError *a3, NSString *a4, DAIDSMessageObject *a5)
{
  _BOOL4 v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  uint8_t v9[16];

  v5 = a2;
  v6 = DiagnosticLogHandleForCategory(7);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  if (v5)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Synced device state.", v9, 2u);
    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    sub_1000EB960(v8);
  }

}

void sub_10002E2C4(id a1)
{
  DAPlatform_iOS_Swift *v1;
  void *v2;

  v1 = objc_alloc_init(DAPlatform_iOS_Swift);
  v2 = (void *)qword_10016E948;
  qword_10016E948 = (uint64_t)v1;

}

void sub_10002E434(uint64_t a1)
{
  void *v2;
  _BOOL8 v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[4];
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIDevice currentDevice](UIDevice, "currentDevice"));
  v3 = objc_msgSend(v2, "userInterfaceIdiom") == (id)1;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10002E5AC;
  v11[3] = &unk_100133B90;
  v5 = *(_QWORD *)(a1 + 48);
  v12 = *(id *)(a1 + 56);
  v13 = *(id *)(a1 + 72);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v5, 2, v11));
  objc_msgSend(v4, "addAction:", v6);

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10002E5D8;
  v9[3] = &unk_100133BB8;
  v7 = *(_QWORD *)(a1 + 64);
  v10 = *(id *)(a1 + 56);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v7, 1, v9));
  objc_msgSend(v4, "addAction:", v8);

  objc_msgSend(v4, "showOnTopWithAnimated:completion:", 1, 0);
}

uint64_t sub_10002E5AC(uint64_t a1)
{
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

intptr_t sub_10002E5D8(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

int main(int argc, const char **argv, const char **envp)
{
  int v3;
  char **v4;
  uint64_t v5;
  objc_class *ObjCClassFromMetadata;
  NSString *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = static CommandLine.argc.getter(*(_QWORD *)&argc, argv, envp);
  v4 = (char **)static CommandLine.unsafeArgv.getter();
  v5 = type metadata accessor for AppDelegate();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v5);
  v7 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v9 = v8;
    v7 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  UIApplicationMain(v3, v4, 0, v7);

  return 0;
}

void type metadata accessor for ASTInstructionalPromptInstructionsStyle(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A830, (uint64_t)&unk_100134058);
}

__n128 initializeWithTake for DeviceType(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A838, (uint64_t)&unk_1001340D0);
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A840, (uint64_t)&unk_1001340F8);
}

void type metadata accessor for ASTSelfServiceDestinationEndpoint(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A848, (uint64_t)&unk_100134118);
}

void type metadata accessor for SFAirDropDiscoverableMode(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A850, (uint64_t)&unk_100134138);
}

uint64_t sub_10002E6D8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10002E6F8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A858, (uint64_t)&unk_1001341B0);
}

void sub_10002E734(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_10002E73C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

NSNumber sub_10002E748()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_10002E750(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static Float._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_10002E7A0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_10002E7F4(float *a1@<X8>)
{
  *a1 = static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10002E818(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_10010BB38, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

_QWORD *sub_10002E864@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_10002E878(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_10002E8A8(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_10002E8BC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_10002E8D0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10002E8E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_10010BBA8, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

uint64_t sub_10002E930(uint64_t a1, uint64_t a2)
{
  return sub_10002EA0C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10002E948(uint64_t a1, uint64_t a2)
{
  return sub_10002EA0C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10002E95C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10002E99C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_10002EA0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_10002EA48(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_10002EABC(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_10002EB38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

_QWORD *sub_10002EB78@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_10002EB84@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_10002EB98(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10010BB38, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_10002EBD4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10010BB38, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_10002EC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002EDF0(a1, a2, a3, (uint64_t)&unk_10010BB38);
}

uint64_t sub_10002EC28(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

_DWORD *sub_10002ECB0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_10002ECC0@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_10002ECCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10002F158(&qword_10016A9E8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10010BAA8);
  v3 = sub_10002F158((unint64_t *)&unk_10016A9F0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10010BA48);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Float);
}

uint64_t sub_10002ED60(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10010BBA8, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_10002ED9C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10010BBA8, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_10002EDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002EDF0(a1, a2, a3, (uint64_t)&unk_10010BBA8);
}

Swift::Int sub_10002EDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, a1);
  WitnessTable = swift_getWitnessTable(a4, a2);
  _CFObject.hash(into:)(v8, a2, WitnessTable);
  return Hasher._finalize()();
}

uint64_t sub_10002EE54@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10002EE7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10002F158(&qword_10016AA08, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_10010B7B0);
  v3 = sub_10002F158(&qword_10016AA10, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_10010B750);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002EF00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10002F158((unint64_t *)&qword_10016AA18, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10010BBD4);
  v3 = sub_10002F158(&qword_10016AA20, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10010B5BC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002EF84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10002F158(&qword_10016AA50, (uint64_t (*)(uint64_t))type metadata accessor for OptionKey, (uint64_t)&unk_10010BD4C);
  v3 = sub_10002F158(&qword_10016AA58, (uint64_t (*)(uint64_t))type metadata accessor for OptionKey, (uint64_t)&unk_10010BCAC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002F008@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A920, (uint64_t)&unk_1001341D8);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A928, (uint64_t)&unk_100134200);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A930, (uint64_t)&unk_100134230);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A938, (uint64_t)&unk_100134258);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A940, (uint64_t)&unk_100134280);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A948, (uint64_t)&unk_1001342B0);
}

void type metadata accessor for ELSConsentOption(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A950, (uint64_t)&unk_1001342D8);
}

void type metadata accessor for ELSStatus(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A958, (uint64_t)&unk_1001342F8);
}

void type metadata accessor for DADiagnosticsRemoteViewControllerFinishReason(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016A960, (uint64_t)&unk_100134318);
}

uint64_t sub_10002F100()
{
  return sub_10002F158(&qword_10016A968, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10010B580);
}

uint64_t sub_10002F12C()
{
  return sub_10002F158(&qword_10016A970, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10010B554);
}

uint64_t sub_10002F158(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002F198()
{
  return sub_10002F158(&qword_10016A978, (uint64_t (*)(uint64_t))type metadata accessor for CGColor, (uint64_t)&unk_10010B678);
}

uint64_t sub_10002F1C4()
{
  return sub_10002F158(&qword_10016A980, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_10010B714);
}

uint64_t sub_10002F1F0()
{
  return sub_10002F158(&qword_10016A988, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_10010B6E8);
}

uint64_t sub_10002F21C()
{
  return sub_10002F158(&qword_10016A990, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_10010B784);
}

uint64_t sub_10002F248(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10002F158((unint64_t *)&unk_10016C1C0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_10010BB64);
  v3 = sub_10002F158(&qword_10016AA00, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_10010B8A8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002F2CC()
{
  return sub_10002F158(&qword_10016A998, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_10010B86C);
}

uint64_t sub_10002F2F8()
{
  return sub_10002F158(&qword_10016A9A0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_10010B840);
}

uint64_t sub_10002F324()
{
  return sub_10002F158(&qword_10016A9A8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_10010B964);
}

uint64_t sub_10002F350()
{
  return sub_10002F158(&qword_10016A9B0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10010BA0C);
}

uint64_t sub_10002F37C()
{
  return sub_10002F158(&qword_10016A9B8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10010B9E0);
}

uint64_t sub_10002F3A8()
{
  float *v0;

  return Float.hashValue.getter(*v0);
}

void sub_10002F3B0()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;

  if ((*v0 & 0x7FFFFFFF) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_10002F3E0(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFF) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

BOOL sub_10002F3F4(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10002F408()
{
  return sub_10002F158(&qword_10016A9C0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10010BA7C);
}

uint64_t sub_10002F434()
{
  return sub_10002F158(&qword_10016A9C8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_10010B990);
}

uint64_t sub_10002F460()
{
  return sub_10002F158(&qword_10016A9D0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_10010B8DC);
}

uint64_t sub_10002F48C()
{
  return sub_10002F158(&qword_10016A9D8, (uint64_t (*)(uint64_t))type metadata accessor for CGColor, (uint64_t)&unk_10010B6A4);
}

uint64_t sub_10002F4B8()
{
  return sub_10002F158(&qword_10016A9E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10010B5F0);
}

void type metadata accessor for OptionKey(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016AA28, (uint64_t)&unk_100134338);
}

uint64_t initializeBufferWithCopyOfBuffer for Alert(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 initializeWithTake for SelfServiceSuiteResultsComponentView(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002F534(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10002F554(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016AA30, (uint64_t)&unk_1001343B8);
}

uint64_t sub_10002F594()
{
  return sub_10002F158(&qword_10016AA38, (uint64_t (*)(uint64_t))type metadata accessor for OptionKey, (uint64_t)&unk_10010BC74);
}

uint64_t sub_10002F5C0()
{
  return sub_10002F158(&qword_10016AA40, (uint64_t (*)(uint64_t))type metadata accessor for OptionKey, (uint64_t)&unk_10010BC4C);
}

uint64_t sub_10002F5EC()
{
  return sub_10002F158(&qword_10016AA48, (uint64_t (*)(uint64_t))type metadata accessor for OptionKey, (uint64_t)&unk_10010BCDC);
}

void type metadata accessor for UIInterfaceOrientationMask(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016AA60, (uint64_t)&unk_1001343E0);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_10002F640(a1, &qword_10016AA68, (uint64_t)&unk_100134460);
}

void sub_10002F640(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

BOOL sub_10002F6B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10002F6C8()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10002F70C()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10002F734(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

id sub_10002F774()
{
  uint64_t v0;
  id result;

  v0 = type metadata accessor for SetupViewController();
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  qword_1001722E0 = (uint64_t)result;
  return result;
}

id sub_10002F7A4()
{
  return sub_10002F870(&OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___noSessionNavigationController, (uint64_t (*)(_QWORD))type metadata accessor for NoSessionNavigationController);
}

id sub_10002F7B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  _OWORD v10[3];
  char v11;

  v1 = OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController);
  }
  else
  {
    v4 = v0;
    memset(v10, 0, sizeof(v10));
    v11 = 2;
    v5 = objc_allocWithZone((Class)type metadata accessor for FullscreenAlertViewController());
    v6 = sub_10005BD5C((uint64_t)v10);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_10002F848()
{
  return sub_10002F870(&OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___diagnosticsCompletedNavigationController, (uint64_t (*)(_QWORD))type metadata accessor for DiagnosticsCompletedNavigationController);
}

id sub_10002F85C()
{
  return sub_10002F870(&OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___enhancedLoggingCompletedNavigationController, (uint64_t (*)(_QWORD))type metadata accessor for EnhancedLoggingCompletedNavigationController);
}

id sub_10002F870(uint64_t *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = a2(0);
    v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "init");
    v8 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v7;
    v5 = v7;

    v4 = 0;
  }
  v9 = v4;
  return v5;
}

void sub_10002F8E0()
{
  char *v0;
  char *v1;
  char *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  double v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  _QWORD aBlock[5];
  uint64_t v38;

  objc_msgSend(v0, "setModalInPresentation:", 1);
  v1 = (char *)sub_10002F85C();
  v2 = (char *)*(id *)&v1[OBJC_IVAR____TtC11Diagnostics44EnhancedLoggingCompletedNavigationController_enhancedLoggingCompletedViewController];

  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics38EnhancedLoggingCompletedViewController_delegate + 8] = &off_100134600;
  swift_unknownObjectWeakAssign();

  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController];
  v7 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController] = v6;
  v8 = v6;

  v9 = objc_msgSend(v8, "view");
  if (!v9)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v10 = v9;
  objc_msgSend(v9, "setAlpha:", 0.0);

  objc_msgSend(v8, "willMoveToParentViewController:", v0);
  objc_msgSend(v0, "addChildViewController:", v8);
  v11 = objc_msgSend(v8, "view");
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v12 = v11;
  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v14 = v13;
  objc_msgSend(v13, "bounds");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;

  objc_msgSend(v12, "setFrame:", v16, v18, v20, v22);
  v23 = objc_msgSend(v8, "view");
  if (!v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v24 = v23;
  objc_msgSend(v23, "setAutoresizingMask:", 18);

  v25 = objc_msgSend(v0, "view");
  if (!v25)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v26 = v25;
  v27 = objc_msgSend(v8, "view");
  if (!v27)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v28 = v27;
  objc_msgSend(v26, "addSubview:", v27);

  objc_msgSend(v8, "didMoveToParentViewController:", v0);
  v29 = objc_msgSend(v8, "view");
  if (!v29)
  {
LABEL_19:
    __break(1u);
    return;
  }
  v36 = v29;
  objc_msgSend(v29, "alpha");
  if (v30 == 0.0)
  {
    v31 = swift_allocObject(&unk_1001349C8, 24, 7);
    *(_QWORD *)(v31 + 16) = v36;
    v32 = (void *)objc_opt_self(UIView);
    aBlock[4] = sub_100036E1C;
    v38 = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100030658;
    aBlock[3] = &unk_1001349E0;
    v33 = _Block_copy(aBlock);
    v34 = v38;
    v35 = v36;
    swift_retain(v31);
    swift_release(v34);
    objc_msgSend(v32, "animateWithDuration:delay:options:animations:completion:", 0x10000, v33, 0, 0.375, 0.0);
    _Block_release(v33);

    swift_release(v31);
  }
  else
  {

  }
}

void sub_10002FCB4(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for SetupViewController();
  objc_msgSendSuper2(&v7, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setNavigationBarHidden:", 1);

  }
  v5 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v6 = objc_msgSend(v5, "snapshot");

  objc_msgSend(v6, "status");
  __asm { BR              X10 }
}

id sub_100030088(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id result;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for SetupViewController();
  objc_msgSendSuper2(&v6, "viewWillDisappear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setNavigationBarHidden:", 0);

  }
  result = objc_msgSend((id)objc_opt_self(CBSUtilities), "isSSRBootIntentSet");
  if ((_DWORD)result)
  {
    if (qword_10016A658 != -1)
      swift_once(&qword_10016A658, sub_10006E428);
    *(_QWORD *)(qword_100172360 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate + 8) = &off_1001345C8;
    return (id)swift_unknownObjectWeakAssign();
  }
  return result;
}

void sub_1000301AC(unsigned __int8 a1, char *a2, void (*a3)(void))
{
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  char *v9;

  if (a1 - 1 >= 2)
  {
    if (!a1)
      a3();
  }
  else
  {
    v4 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer;
    v5 = *(void **)&a2[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer];
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v6, "invalidate");
      v7 = *(void **)&a2[v4];
      *(_QWORD *)&a2[v4] = 0;

    }
    v8 = swift_allocObject(&unk_1001348B0, 24, 7);
    *(_QWORD *)(v8 + 16) = a2;
    v9 = a2;
    sub_100093BF8((uint64_t)sub_100036DFC, v8);
    swift_release(v8);
  }
}

void sub_100030264(char a1, void *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  if ((a1 & 1) != 0)
  {
    sub_100032F5C();
  }
  else
  {
    v3 = (void *)objc_opt_self(ASTLocalization);
    v4 = swift_allocObject(&unk_1001348D8, 24, 7);
    *(_QWORD *)(v4 + 16) = a2;
    v8[4] = sub_100036E08;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100030684;
    v8[3] = &unk_1001348F0;
    v5 = _Block_copy(v8);
    v6 = v9;
    v7 = a2;
    objc_msgSend(v3, "prepareLocalizedStringsWithCompletionHandler:", v5, swift_release(v6).n128_f64[0]);
    _Block_release(v5);
  }
}

uint64_t sub_100030334(char a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD aBlock[5];
  uint64_t v28;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_10016A670 != -1)
      v11 = swift_once(&qword_10016A670, sub_10008BE84);
    v14 = qword_100172370;
    v15 = static os_log_type_t.error.getter(v11);
    os_log(_:dso:log:type:_:)("Failed to prepare localized strings", 35, 2, &_mh_execute_header, v14, v15, &_swiftEmptyArrayStorage);
  }
  *(_QWORD *)(*(_QWORD *)&a3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsViewController]
            + OBJC_IVAR____TtC11Diagnostics32TermsAndConditionsViewController_delegate
            + 8) = &off_100134610;
  swift_unknownObjectWeakAssign();
  v16 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_100134928, 24, 7);
  *(_QWORD *)(v18 + 16) = a3;
  aBlock[4] = sub_100036E10;
  v28 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100134940;
  v19 = _Block_copy(aBlock);
  v20 = v28;
  v21 = a3;
  v22 = swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v23 = sub_100035C5C();
  v24 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v25 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v5, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v8, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

#error "100030610: call analysis failed (funcsize=41)"

uint64_t sub_100030658(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_100030684(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_1000306E4(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  NSString v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  _QWORD aBlock[5];
  uint64_t v36;

  if ((v18[OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsAccepted] & 1) != 0)
  {
    sub_100033418(*(void **)&v18[OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController], 1, 0, 0);
    v19 = swift_allocObject(&unk_100134FB8, 24, 7);
    *(_QWORD *)(v19 + 16) = v18;
    v20 = qword_10016A678;
    v34 = v18;
    if (v20 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v21 = qword_100172378;
    v22 = ((uint64_t (*)(void))static os_log_type_t.default.getter)();
    v23 = os_log(_:dso:log:type:_:)("Checking cached AST activity", 28, 2, &_mh_execute_header, v21, v22, _swiftEmptyArrayStorage);
    v24 = byte_10016CC90;
    if (byte_10016CC90 != 4)
      goto LABEL_7;
    v25 = static os_log_type_t.default.getter(v23);
    v24 = 2;
    os_log(_:dso:log:type:_:)("No cached AST activity. Performing live session check", 53, 2, &_mh_execute_header, v21, v25, _swiftEmptyArrayStorage);
    v26 = objc_msgSend((id)objc_opt_self(CBSUtilities), "isSSRBootIntentSet");
    if ((_DWORD)v26)
    {
      byte_10016CC90 = 2;
LABEL_7:
      sub_1000309CC(v24);

      swift_release(v19);
      return;
    }
    v27 = static os_log_type_t.default.getter(v26);
    os_log(_:dso:log:type:_:)("Checking AST 2 activity", 23, 2, &_mh_execute_header, v21, v27, _swiftEmptyArrayStorage);
    v28 = objc_msgSend(objc_allocWithZone((Class)DADiagnosticsSessionAvailability), "init");
    v29 = qword_100172388;
    if (qword_100172388)
    {
      swift_bridgeObjectRetain(qword_100172388);
      v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v29);
    }
    else
    {
      v30 = 0;
    }
    v31 = swift_allocObject(&unk_100134FE0, 32, 7);
    *(_QWORD *)(v31 + 16) = sub_100037150;
    *(_QWORD *)(v31 + 24) = v19;
    aBlock[4] = sub_1000372F4;
    v36 = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000A2514;
    aBlock[3] = &unk_100134FF8;
    v32 = _Block_copy(aBlock);
    v33 = v36;
    swift_retain(v19);
    swift_release(v33);
    objc_msgSend(v28, "checkAvailabilityWithTicketNumber:timeout:exitWhenDone:completion:", v30, 0, v32, 30.0);
    _Block_release(v32);

    swift_release(v19);
  }
  else
  {
    sub_100098BDC(1u, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  }
}

uint64_t sub_1000309CC(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[5];
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_100134D38, 32, 7);
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v1;
  aBlock[4] = sub_100036F34;
  v24 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100134D50;
  v15 = _Block_copy(aBlock);
  v16 = v24;
  v17 = v2;
  v18 = swift_release(v16);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_100035C5C();
  v20 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v21 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v4, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_100030BAC(char a1)
{
  type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin();
  type metadata accessor for DispatchQoS(0);
  __chkstk_darwin();
  type metadata accessor for DispatchQoS.QoSClass(0);
  __chkstk_darwin();
  __asm { BR              X10 }
}

void sub_100030CA0()
{
  uint64_t v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  _BYTE *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (objc_class *)type metadata accessor for DashboardViewController();
  v2 = objc_msgSend(objc_allocWithZone(v1), "initWithStyle:", 1);
  *(_QWORD *)(v0 - 160) = v2;
  v3 = swift_dynamicCastClass(v2, v1);
  if (v3)
  {
    v4 = *(_BYTE **)(v3 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager);
    v4[OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly] = 0;
    v5 = *(id *)(v0 - 160);
    v6 = v4;
    sub_1000E16E4();

    v7 = qword_10016A5F8;
    v8 = v5;
    *(_QWORD *)(v0 - 160) = v8;
    if (v7 != -1)
    {
      swift_once(&qword_10016A5F8, sub_100048E78);
      v8 = *(id *)(v0 - 160);
    }
    sub_10004C4A4(v8, 1, 0, 0);

  }
  else
  {
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v9 = qword_100172378;
    v10 = ((uint64_t (*)(void))static os_log_type_t.fault.getter)();
    os_log(_:dso:log:type:_:)("Attempted to finish setup flow in a non-self service session, but the root view controller is not a dashboard view controller!", 126, 2, &_mh_execute_header, v9, v10, _swiftEmptyArrayStorage);
  }

}

uint64_t sub_1000311E8(char *a1)
{
  id v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  id v6;
  unint64_t v7;
  Class isa;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  _BYTE v18[104];

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = sub_100035CA4((uint64_t *)&unk_10016BA20);
  inited = swift_initStackObject(v3, v18);
  *(_OWORD *)(inited + 16) = xmmword_10010BE30;
  v17[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("sessionMode"));
  v17[1] = v5;
  AnyHashable.init<A>(_:)(v17, &type metadata for String, &protocol witness table for String);
  v6 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInt:", 2);
  *(_QWORD *)(inited + 96) = sub_100037118(0, (unint64_t *)&unk_10016DFE0, NSNumber_ptr);
  *(_QWORD *)(inited + 72) = v6;
  v7 = sub_10006DCBC(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v2, "postNotificationName:object:userInfo:", CFSTR("DAOverrideSessionMode"), 0, isa);

  objc_sync_enter(a1);
  v9 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v9)
  {
    v10 = objc_msgSend(v9, "serialNumber");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    sub_1000A20FC(v11, v13);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = static os_log_type_t.error.getter();
    sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v15 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v14, &_mh_execute_header, v15, "Unable to start suite manager, serial number is not available", 61, 2, _swiftEmptyArrayStorage);

  }
  return objc_sync_exit(a1);
}

void sub_100031408(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t *v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  BOOL v58;
  id v59;
  id v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  void *v72;
  Swift::Int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  char v78;
  uint64_t v79;
  id v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char v85;
  Swift::Int v86;
  Swift::Int v87;
  uint64_t v88;
  unint64_t v89;
  id v90;
  char v91;
  uint64_t v92;
  id v93;
  char v94;
  id v95;
  void *v96;
  _OWORD *v97;
  id v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  char *v106;
  __n128 v107;
  char *v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  Swift::Int v117;
  uint64_t v118;
  int v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __n128 v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  id v135;
  id v136;
  char *v137;
  char *v138;
  unint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _OWORD *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t *v146;
  unint64_t v147;
  __int128 v148;
  unint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  char *v158;
  __int128 aBlock;
  __int128 v160;
  void (*v161)();
  uint64_t v162;
  Swift::Int v163;
  _QWORD v164[2];
  unint64_t v165;
  _QWORD v166[4];
  uint64_t v167;
  char v168;

  v5 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v134 - v9;
  v11 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchWorkItemFlags(0);
  v155 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v154 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for DispatchQoS(0);
  v152 = *(_QWORD *)(v153 - 8);
  v17 = __chkstk_darwin(v153);
  v151 = (char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = Notification.userInfo.getter(v17);
  if (!v19)
  {
    v160 = 0u;
    aBlock = 0u;
LABEL_14:
    sub_100036FA0((uint64_t)&aBlock, (uint64_t *)&unk_10016B610);
    return;
  }
  v20 = v19;
  v164[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("info"));
  v164[1] = v21;
  AnyHashable.init<A>(_:)(v164, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v20 + 16) && (v22 = sub_100072B10((uint64_t)&v165), (v23 & 1) != 0))
  {
    sub_1000370B0(*(_QWORD *)(v20 + 56) + 32 * v22, (uint64_t)&aBlock);
  }
  else
  {
    v160 = 0u;
    aBlock = 0u;
  }
  swift_bridgeObjectRelease(v20);
  sub_100036FDC((uint64_t)&v165);
  if (!*((_QWORD *)&v160 + 1))
    goto LABEL_14;
  v24 = sub_100037118(0, &qword_10016BA10, off_100131A98);
  if ((swift_dynamicCast(&v165, &aBlock, (char *)&type metadata for Any + 8, v24, 6) & 1) == 0)
    return;
  v137 = v14;
  v141 = v12;
  v142 = v11;
  v138 = v8;
  v25 = (_QWORD *)v165;
  v26 = objc_msgSend((id)v165, "snapshot");
  if (objc_msgSend(v26, "phase") != (id)1)
  {
    v33 = objc_msgSend(v26, "errors");
    v34 = sub_100035CA4(&qword_10016D600);
    v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v34);

    v36 = sub_1000A1DA0(v35);
    swift_bridgeObjectRelease(v35);
    v37 = (uint64_t *)&a3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_onScreenErrors];
    swift_beginAccess(v37, v164, 0, 0);
    v146 = v37;
    v38 = *v37;
    if ((*v37 & 0xC000000000000001) != 0)
    {
      if (v38 < 0)
        v39 = *v37;
      else
        v39 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*v37, 2);
      v40 = __CocoaSet.count.getter(v39);
      v41 = sub_1000A7208(v39, v40);
      swift_bridgeObjectRelease(v38);
      v38 = v41;
    }
    else
    {
      swift_bridgeObjectRetain(*v37);
    }
    v135 = v26;
    v136 = v25;
    v32 = (uint64_t)sub_1000A4BE4((uint64_t)v36, v38);
    v165 = (unint64_t)v36;
    v47 = swift_bridgeObjectRetain(v32);
    sub_1000B9BB8(v47);
    v48 = v165;
    v156 = v165;
    if (v165 >> 62)
    {
LABEL_113:
      if (v48 < 0)
        v133 = v48;
      else
        v133 = v48 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v48);
      v49 = _CocoaArrayWrapper.endIndex.getter(v133);
      swift_bridgeObjectRelease(v48);
    }
    else
    {
      v49 = *(_QWORD *)((v165 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v25 = v146;
    if (!v49)
    {
LABEL_105:

      swift_bridgeObjectRelease(v156);
      swift_release(v32);

      return;
    }
    v26 = 0;
    v144 = 0;
    v147 = v156 + 32;
    v149 = v32 & 0xC000000000000001;
    v150 = v32 + 56;
    v143 = v166;
    v148 = xmmword_10010BE30;
    v140 = v10;
    v139 = v15;
    v15 = v156 & 0xC000000000000001;
    v157 = v32;
    v158 = (char *)v49;
    v145 = v156 & 0xC000000000000001;
    while (1)
    {
      if (v15)
        v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v156);
      else
        v56 = *(id *)(v147 + 8 * (_QWORD)v26);
      v57 = v56;
      v58 = __OFADD__(v26, 1);
      v26 = (char *)v26 + 1;
      if (v58)
      {
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      v59 = objc_msgSend(v56, "code");
      if (v59 == (id)3)
      {
        sub_100037118(0, (unint64_t *)&unk_10016D870, NSError_ptr);
        if (v149)
        {
          v60 = v57;
          v61 = ((uint64_t (*)(void))__CocoaSet.contains(_:))();

          if ((v61 & 1) != 0)
            goto LABEL_38;
        }
        else if (*(_QWORD *)(v32 + 16))
        {
          v73 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v32 + 40));
          v74 = v32;
          v75 = -1 << *(_BYTE *)(v32 + 32);
          v76 = v73 & ~v75;
          if (((*(_QWORD *)(v150 + ((v76 >> 3) & 0xFFFFFFFFFFFFF8)) >> v76) & 1) != 0)
          {
            v77 = *(id *)(*(_QWORD *)(v74 + 48) + 8 * v76);
            v78 = static NSObject.== infix(_:_:)(v77);

            if ((v78 & 1) != 0)
            {
LABEL_38:
              if (qword_100172358)
              {
                v32 = qword_10016A6D8;
                v10 = (char *)(id)qword_100172358;
                if (v32 != -1)
                  swift_once(&qword_10016A6D8, sub_1000C6380);
                v62 = type metadata accessor for ModalPresentationCoordinator(0);
                v63 = sub_100036D34(v62, (uint64_t)qword_1001723D0);
                swift_beginAccess(v63, &v163, 33, 0);
                v64 = (void *)qword_10016B3C0;
                if (qword_10016B3C0)
                {
                  v65 = type metadata accessor for SelfServiceDestinationPickerViewController();
                  if (!swift_dynamicCastClass(v64, v65))
                  {
                    v98 = v64;
                    goto LABEL_85;
                  }
                }
                if (qword_10016A600 != -1)
                  swift_once(&qword_10016A600, sub_1000490B8);
                v66 = objc_msgSend((id)qword_100172310, "viewControllers");
                v67 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
                v68 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v66, v67);

                if ((unint64_t)v68 >> 62)
                {
                  if (v68 < 0)
                    v99 = v68;
                  else
                    v99 = v68 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain(v68);
                  v69 = _CocoaArrayWrapper.endIndex.getter(v99);
                  swift_bridgeObjectRelease(v68);
                  if (!v69)
                    goto LABEL_82;
LABEL_47:
                  v70 = v69 - 1;
                  if (__OFSUB__(v69, 1))
                    goto LABEL_110;
                  if ((v68 & 0xC000000000000001) != 0)
                  {
                    v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v70, v68);
                  }
                  else
                  {
                    if ((v70 & 0x8000000000000000) != 0)
                      goto LABEL_111;
                    if (v70 >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10))
                      goto LABEL_112;
                    v71 = *(id *)(v68 + 8 * v70 + 32);
                  }
                  v72 = v71;
                  swift_bridgeObjectRelease(v68);
                }
                else
                {
                  v69 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
                  if (v69)
                    goto LABEL_47;
LABEL_82:
                  swift_bridgeObjectRelease(v68);
                  if (qword_10016A5F8 != -1)
                    swift_once(&qword_10016A5F8, sub_100048E78);
                  v98 = (id)qword_100172300;
LABEL_85:
                  v72 = v98;
                }
                v100 = objc_msgSend(v72, "presentedViewController");

                v32 = (uint64_t)v140;
                v15 = v145;
                if (v100)
                {
                  sub_100037118(0, &qword_10016D880, NSObject_ptr);
                  if ((static NSObject.== infix(_:_:)(v10) & 1) != 0)
                  {
                    v101 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
                    v102 = (void *)static OS_dispatch_queue.main.getter(v101);
                    v103 = swift_allocObject(&unk_100134E50, 64, 7);
                    *(_QWORD *)(v103 + 16) = 0;
                    *(_BYTE *)(v103 + 24) = 1;
                    *(_QWORD *)(v103 + 32) = v10;
                    *(_BYTE *)(v103 + 40) = 1;
                    *(_QWORD *)(v103 + 48) = 0;
                    *(_QWORD *)(v103 + 56) = 0;
                    v161 = sub_100037088;
                    v162 = v103;
                    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                    *((_QWORD *)&aBlock + 1) = 1107296256;
                    *(_QWORD *)&v160 = sub_100030658;
                    *((_QWORD *)&v160 + 1) = &unk_100134E68;
                    v104 = _Block_copy(&aBlock);
                    v105 = v162;
                    v48 = (uint64_t)v10;
                    v106 = v10;
                    v107 = swift_release(v105);
                    v108 = v151;
                    static DispatchQoS.unspecified.getter(v107);
                    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
                    v109 = sub_100035C5C();
                    v110 = sub_100035CA4((uint64_t *)&unk_10016AD10);
                    v111 = sub_100035CE4();
                    v112 = v154;
                    v113 = v109;
                    v15 = v145;
                    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v110, v111, v139, v113);
                    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v108, v112, v104);
                    _Block_release(v104);

                    (*(void (**)(char *, unint64_t))(v155 + 8))(v112, v139);
                    (*(void (**)(char *, uint64_t))(v152 + 8))(v108, v153);
                    v25 = v146;
                    goto LABEL_101;
                  }

                }
                v30 = (uint64_t *)(v63 + *(int *)(v62 + 24));
                v114 = *v30;
                v115 = v10;
                v116 = swift_bridgeObjectRetain(v114);
                v48 = v144;
                v117 = sub_1000C8C58(v116, v115);
                v144 = v48;

                v118 = sub_1000C80C8(v117);
                if ((v120 & 1) != 0)
                {
                  __break(1u);
                  return;
                }
                v25 = v146;
                if (*(_DWORD *)(v117 + 36) != v119)
                  goto LABEL_109;
                v121 = 1 << *(_BYTE *)(v117 + 32);
                if (v118 == v121)
                {
                  v48 = (uint64_t)v10;
                  v122 = 1;
                  v123 = v141;
                }
                else
                {
                  if (v118 < 0 || v118 >= v121)
                  {
                    __break(1u);
LABEL_118:
                    __break(1u);
LABEL_119:
                    swift_once(&qword_10016A678, sub_10008BF34);
LABEL_22:
                    v42 = qword_100172378;
                    v43 = static os_log_type_t.default.getter();
                    os_log(_:dso:log:type:_:)("Checking AST 2 activity", 23, 2, &_mh_execute_header, v42, v43, _swiftEmptyArrayStorage);
                    v44 = objc_msgSend(objc_allocWithZone((Class)DADiagnosticsSessionAvailability), "init");
                    v45 = qword_100172388;
                    if (qword_100172388)
                    {
                      swift_bridgeObjectRetain(qword_100172388);
                      v46 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease(v45);
                    }
                    else
                    {
                      v46 = 0;
                    }
                    v130 = swift_allocObject(&unk_100134EC8, 32, 7);
                    *(_QWORD *)(v130 + 16) = sub_1000370A0;
                    *(_QWORD *)(v130 + 24) = v30;
                    v166[3] = sub_1000370A8;
                    v167 = v130;
                    v165 = (unint64_t)_NSConcreteStackBlock;
                    v166[0] = 1107296256;
                    v166[1] = sub_1000A2514;
                    v166[2] = &unk_100134EE0;
                    v131 = _Block_copy(&v165);
                    v132 = v167;
                    swift_retain(v30);
                    swift_release(v132);
                    objc_msgSend(v44, "checkAvailabilityWithTicketNumber:timeout:exitWhenDone:completion:", v46, 0, v131, 30.0);
                    _Block_release(v131);

                    swift_release(v30);
                    return;
                  }
                  if (((*(_QWORD *)(v117 + (((unint64_t)v118 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v118) & 1) == 0)
                    goto LABEL_118;
                  v48 = (uint64_t)v10;
                  v123 = v141;
                  sub_100037010(*(_QWORD *)(v117 + 48) + *(_QWORD *)(v141 + 72) * v118, v32);
                  v122 = 0;
                }
                v124 = v142;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56))(v32, v122, 1, v142);
                v125 = swift_release(v117);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v123 + 48))(v32, 1, v124, v125) == 1)
                {
                  sub_100036FA0(v32, (uint64_t *)&unk_10016AE90);
                }
                else
                {
                  v126 = (uint64_t)v137;
                  sub_100036D7C(v32, (uint64_t)v137);
                  v127 = (uint64_t)v138;
                  sub_1000A7860(v126, (uint64_t)v138);
                  sub_100036FA0(v127, (uint64_t *)&unk_10016AE90);
                  sub_100036DC0(v126);
                }
LABEL_101:
                v10 = v158;
                swift_endAccess(&v163);
                v128 = (void *)qword_100172358;
                qword_100172358 = 0;

              }
              else
              {
                v10 = v158;
              }
              swift_beginAccess(v25, &aBlock, 33, 0);
              v129 = (void *)sub_1000A7BD4(v57);
              swift_endAccess(&aBlock);

              goto LABEL_103;
            }
            v79 = ~v75;
            while (1)
            {
              v76 = (v76 + 1) & v79;
              if (((*(_QWORD *)(v150 + ((v76 >> 3) & 0xFFFFFFFFFFFFF8)) >> v76) & 1) == 0)
                break;
              v80 = *(id *)(*(_QWORD *)(v157 + 48) + 8 * v76);
              v81 = static NSObject.== infix(_:_:)(v80);

              if ((v81 & 1) != 0)
                goto LABEL_38;
            }
          }
        }
        v82 = *v25;
        if ((*v25 & 0xC000000000000001) != 0)
        {
          if (v82 < 0)
            v83 = *v25;
          else
            v83 = v82 & 0xFFFFFFFFFFFFFF8;
          v84 = v57;
          swift_bridgeObjectRetain(v82);
          v85 = __CocoaSet.contains(_:)(v84, v83);
          swift_bridgeObjectRelease(v82);

          if ((v85 & 1) == 0)
          {
LABEL_73:
            v10 = v158;
            goto LABEL_76;
          }

          v32 = v157;
          v10 = v158;
        }
        else
        {
          if (!*(_QWORD *)(v82 + 16))
            goto LABEL_73;
          v86 = *(_QWORD *)(v82 + 40);
          swift_bridgeObjectRetain(*v25);
          v87 = NSObject._rawHashValue(seed:)(v86);
          v88 = -1 << *(_BYTE *)(v82 + 32);
          v89 = v87 & ~v88;
          if (((*(_QWORD *)(v82 + 56 + ((v89 >> 3) & 0xFFFFFFFFFFFFF8)) >> v89) & 1) == 0)
            goto LABEL_75;
          v90 = *(id *)(*(_QWORD *)(v82 + 48) + 8 * v89);
          v91 = static NSObject.== infix(_:_:)(v90);

          if ((v91 & 1) == 0)
          {
            v92 = ~v88;
            while (1)
            {
              v89 = (v89 + 1) & v92;
              if (((*(_QWORD *)(v82 + 56 + ((v89 >> 3) & 0xFFFFFFFFFFFFF8)) >> v89) & 1) == 0)
                break;
              v93 = *(id *)(*(_QWORD *)(v82 + 48) + 8 * v89);
              v94 = static NSObject.== infix(_:_:)(v93);

              if ((v94 & 1) != 0)
                goto LABEL_72;
            }
LABEL_75:
            swift_bridgeObjectRelease(v82);
            v25 = v146;
            v10 = v158;
            v15 = v145;
LABEL_76:
            swift_beginAccess(v25, &aBlock, 33, 0);
            v95 = v57;
            sub_1000A83B8(&v163, v95);
            v96 = (void *)v163;
            swift_endAccess(&aBlock);

            v165 = 1;
            v97 = v143;
            *v143 = 0u;
            v97[1] = 0u;
            *((_QWORD *)v97 + 4) = 0;
            v168 = 2;
            sub_100066B64(0);

LABEL_103:
            v32 = v157;
            goto LABEL_30;
          }
LABEL_72:

          swift_bridgeObjectRelease(v82);
          v25 = v146;
          v32 = v157;
          v10 = v158;
          v15 = v145;
        }
      }
      else
      {
        v50 = v59;
        v51 = static os_log_type_t.error.getter();
        v52 = sub_100035CA4((uint64_t *)&unk_10016BE40);
        v53 = swift_allocObject(v52, 72, 7);
        *(_OWORD *)(v53 + 16) = v148;
        *(_QWORD *)(v53 + 56) = &type metadata for Int;
        *(_QWORD *)(v53 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v53 + 32) = v50;
        v54 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
        v55 = (void *)static OS_os_log.default.getter(v54);
        os_log(_:dso:log:_:_:)(v51, &_mh_execute_header, v55, "Unknown DeviceStateErrorCode: %d", v134);
        v10 = v158;
        swift_bridgeObjectRelease(v53);

      }
LABEL_30:
      if (v26 == v10)
        goto LABEL_105;
    }
  }
  swift_beginAccess(a2 + 16, &aBlock, 0, 0);
  v27 = *(_QWORD *)(a2 + 16);
  if (v27)
  {
    v28 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v27);
    v29 = objc_msgSend(v28, "defaultCenter");
    objc_msgSend(v29, "removeObserver:", v27);
    swift_unknownObjectRelease(v27);

  }
  v30 = (uint64_t *)swift_allocObject(&unk_100134EA0, 24, 7);
  v30[2] = (uint64_t)a3;
  v31 = (void *)objc_opt_self(CBSUtilities);
  v32 = a3;
  if (!objc_msgSend(v31, "isSSRBootIntentSet"))
  {
    if (qword_10016A678 != -1)
      goto LABEL_119;
    goto LABEL_22;
  }
  byte_10016CC90 = 2;
  sub_1000324D8(2, (void *)v32);

  swift_release(v30);
}

uint64_t sub_1000324D8(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[5];
  uint64_t v23;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = swift_allocObject(&unk_100134F18, 32, 7);
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  aBlock[4] = sub_1000370EC;
  v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100134F30;
  v14 = _Block_copy(aBlock);
  v15 = v23;
  v16 = a2;
  v17 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100035C5C();
  v19 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v20 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1000326B8(char a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if (a1 == 1)
  {
    v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
    v3 = v2;
    v4 = sub_10003FFA0(v1, v2, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001CLL, (void *)0x8000000100111A90);
    v6 = v5;
    swift_bridgeObjectRelease(v3);
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
    v9 = v8;
    v10 = sub_10003FFA0(v7, v8, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x8000000100111AB0);
    v12 = v11;
    swift_bridgeObjectRelease(v9);
    sub_10003532C(v4, v6, v10, v12, (uint64_t)sub_10003287C, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    if (qword_10016A5F8 != -1)
      swift_once(&qword_10016A5F8, sub_100048E78);
    v13 = (void *)qword_10016B3C0;
    qword_10016B3C0 = 0;

    if (qword_10016A5E0 != -1)
      swift_once(&qword_10016A5E0, sub_10002F774);
    *(_BYTE *)(qword_1001722E0 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) = 5;
    if (qword_10016A600 != -1)
      swift_once(&qword_10016A600, sub_1000490B8);

  }
}

void sub_10003287C()
{
  void *v0;

  if (qword_10016A5F8 != -1)
    swift_once(&qword_10016A5F8, sub_100048E78);
  v0 = (void *)qword_10016B3C0;
  qword_10016B3C0 = 0;

  if (qword_10016A5E0 != -1)
    swift_once(&qword_10016A5E0, sub_10002F774);
  *(_BYTE *)(qword_1001722E0 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) = 5;
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);

}

uint64_t sub_10003294C()
{
  return sub_100032B84((uint64_t)&unk_100134C20, (uint64_t)sub_100036EFC, (uint64_t)&unk_100134C38);
}

void sub_100032968(char *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  _QWORD v13[5];
  uint64_t v14;

  v2 = sub_10002F7A4();
  sub_100033418(v2, 1, 0, 0);

  v3 = swift_allocObject(&unk_100134C70, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer;
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer])
  {
    v5 = a1;
    swift_release(v3);
  }
  else
  {
    v6 = (void *)objc_opt_self(NSTimer);
    v7 = swift_allocObject(&unk_100134C98, 32, 7);
    *(_QWORD *)(v7 + 16) = sub_100036F04;
    *(_QWORD *)(v7 + 24) = v3;
    v13[4] = sub_1000371AC;
    v14 = v7;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_100040808;
    v13[3] = &unk_100134CB0;
    v8 = _Block_copy(v13);
    v9 = v14;
    v10 = a1;
    swift_retain(v3);
    swift_release(v9);
    v11 = objc_msgSend(v6, "scheduledTimerWithTimeInterval:repeats:block:", 1, v8, 5.0);
    _Block_release(v8);
    v12 = *(void **)&a1[v4];
    *(_QWORD *)&a1[v4] = v11;
    swift_release(v3);

  }
}

double sub_100032AD4(void *a1)
{
  uint64_t v2;
  _QWORD *v3;
  id v4;
  double result;

  v2 = swift_allocObject(&unk_100134CE8, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = (_QWORD *)swift_allocObject(&unk_100134D10, 40, 7);
  v3[2] = a1;
  v3[3] = sub_1000371D8;
  v3[4] = v2;
  v4 = a1;
  swift_retain(v2);
  sub_10008CC14((uint64_t)sub_1000371B4, (uint64_t)v3);
  swift_release(v2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_100032B68()
{
  return sub_100032B84((uint64_t)&unk_100134B08, (uint64_t)sub_100036E80, (uint64_t)&unk_100134B20);
}

uint64_t sub_100032B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v7 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin();
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = swift_allocObject(a1, 24, 7);
  *(_QWORD *)(v15 + 16) = v3;
  aBlock[4] = a2;
  v27 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = a3;
  v16 = _Block_copy(aBlock);
  v17 = v27;
  v18 = v7;
  v19 = swift_release(v17);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  v20 = sub_100035C5C();
  v21 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v22 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v8, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v24);
}

void sub_100032D5C(char *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  _QWORD v13[5];
  uint64_t v14;

  v2 = sub_10002F848();
  sub_100033418(v2, 1, 0, 0);

  v3 = swift_allocObject(&unk_100134B58, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer;
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer])
  {
    v5 = a1;
    swift_release(v3);
  }
  else
  {
    v6 = (void *)objc_opt_self(NSTimer);
    v7 = swift_allocObject(&unk_100134B80, 32, 7);
    *(_QWORD *)(v7 + 16) = sub_100036EAC;
    *(_QWORD *)(v7 + 24) = v3;
    v13[4] = sub_1000371AC;
    v14 = v7;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_100040808;
    v13[3] = &unk_100134B98;
    v8 = _Block_copy(v13);
    v9 = v14;
    v10 = a1;
    swift_retain(v3);
    swift_release(v9);
    v11 = objc_msgSend(v6, "scheduledTimerWithTimeInterval:repeats:block:", 1, v8, 5.0);
    _Block_release(v8);
    v12 = *(void **)&a1[v4];
    *(_QWORD *)&a1[v4] = v11;
    swift_release(v3);

  }
}

double sub_100032EC8(void *a1)
{
  uint64_t v2;
  _QWORD *v3;
  id v4;
  double result;

  v2 = swift_allocObject(&unk_100134BD0, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = (_QWORD *)swift_allocObject(&unk_100134BF8, 40, 7);
  v3[2] = a1;
  v3[3] = sub_100036ED8;
  v3[4] = v2;
  v4 = a1;
  swift_retain(v2);
  sub_10008CC14((uint64_t)sub_1000371B4, (uint64_t)v3);
  swift_release(v2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_100032F5C()
{
  return sub_100032B84((uint64_t)&unk_100134AB8, (uint64_t)sub_100036E78, (uint64_t)&unk_100134AD0);
}

void sub_100032F78()
{
  id v0;

  v0 = sub_10002F7B8();
  sub_100033418(v0, 1, 0, 0);

}

double sub_100032FB8(uint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD *v4;
  id v5;
  double result;

  v3 = swift_allocObject(&unk_100134978, 24, 7);
  *(_QWORD *)(v3 + 16) = a2;
  v4 = (_QWORD *)swift_allocObject(&unk_1001349A0, 40, 7);
  v4[2] = a2;
  v4[3] = sub_1000371D8;
  v4[4] = v3;
  v5 = a2;
  swift_retain(v3);
  sub_10008CC14((uint64_t)sub_1000371B4, (uint64_t)v4);
  swift_release(v3);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_10003304C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for SetupViewController();
  objc_msgSendSuper2(&v5, "applicationWillSuspend");
  v1 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, "invalidate");
    v4 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = 0;

  }
}

void sub_1000330F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  char v14;
  void *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  objc_super v25;

  v1 = v0;
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for SetupViewController();
  objc_msgSendSuper2(&v25, "applicationDidResume");
  v2 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController;
  v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController];
  v4 = v3;
  v5 = sub_10002F7A4();
  v6 = v5;
  if (v3)
  {
    sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v7 = v4;
    v8 = static NSObject.== infix(_:_:)(v7);

    if ((v8 & 1) != 0)
      goto LABEL_7;
  }
  else
  {

  }
  v9 = *(void **)&v1[v2];
  v10 = v9;
  v11 = sub_10002F848();
  v12 = v11;
  if (v9)
  {
    sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v13 = v10;
    v14 = static NSObject.== infix(_:_:)(v13);

    if ((v14 & 1) != 0)
    {
LABEL_7:
      v15 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController];
      v16 = swift_allocObject(&unk_100135030, 24, 7);
      *(_QWORD *)(v16 + 16) = v1;
      v17 = v1;
      sub_100033418(v15, 1, (uint64_t)sub_100037170, v16);
      swift_release(v16);
      return;
    }
  }
  else
  {

  }
  v18 = *(void **)&v1[v2];
  v19 = v18;
  v20 = sub_10002F85C();
  if (v18)
  {
    sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v21 = v19;
    v22 = static NSObject.== infix(_:_:)(v21);

    if ((v22 & 1) == 0)
      return;
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v23 = qword_100172378;
    v24 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("User has resumed app to confirmation pane, flushing...", 54, 2, &_mh_execute_header, v23, v24, _swiftEmptyArrayStorage);
    v20 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
    objc_msgSend(v20, "flush");
  }

}

double sub_100033350(uint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD *v4;
  id v5;
  double result;

  v3 = swift_allocObject(&unk_100135058, 24, 7);
  *(_QWORD *)(v3 + 16) = a2;
  v4 = (_QWORD *)swift_allocObject(&unk_100135080, 40, 7);
  v4[2] = a2;
  v4[3] = sub_1000371D8;
  v4[4] = v3;
  v5 = a2;
  swift_retain(v3);
  sub_10008CC14((uint64_t)sub_1000371B4, (uint64_t)v4);
  swift_release(v3);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_100033418(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v12;
  void *v13;
  char *v14;
  id v15;
  char v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  void *v34;
  double v35;
  _QWORD *v36;
  void *v37;
  _QWORD *v38;
  id v39;
  char *v40;
  id v41;
  id v42;
  _QWORD aBlock[5];
  _QWORD *v44;

  v5 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController;
  v6 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController];
  if (!v6)
    return;
  v7 = v4;
  sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v42 = v6;
  if ((static NSObject.== infix(_:_:)(a1) & 1) != 0)
  {

    return;
  }
  v12 = objc_msgSend(v42, "parentViewController");
  if (!v12
    || (v13 = v12,
        v14 = v4,
        v15 = v13,
        v16 = static NSObject.== infix(_:_:)(v15),
        v15,
        v15,
        v14,
        (v16 & 1) == 0))
  {
    objc_msgSend(v7, "addChildViewController:", v42);
  }
  v17 = objc_msgSend(a1, "view");
  if (!v17)
  {
    __break(1u);
    goto LABEL_17;
  }
  v18 = v17;
  objc_msgSend(v17, "setAlpha:", 0.0);

  v19 = *(void **)&v7[v5];
  *(_QWORD *)&v7[v5] = a1;
  v20 = a1;

  objc_msgSend(v42, "willMoveToParentViewController:", 0);
  objc_msgSend(v7, "addChildViewController:", v20);
  v21 = objc_msgSend(v20, "view");
  if (!v21)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v22 = v21;
  v23 = objc_msgSend(v7, "view");
  if (!v23)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v24 = v23;
  objc_msgSend(v23, "bounds");
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;

  objc_msgSend(v22, "setFrame:", v26, v28, v30, v32);
  v33 = objc_msgSend(v20, "view");
  if (!v33)
  {
LABEL_19:
    __break(1u);
    return;
  }
  v34 = v33;
  objc_msgSend(v33, "setAutoresizingMask:", 18);

  if ((a2 & 1) != 0)
    v35 = 0.375;
  else
    v35 = 0.0;
  v36 = (_QWORD *)swift_allocObject(&unk_100134A18, 56, 7);
  v36[2] = v20;
  v36[3] = v42;
  v36[4] = v7;
  v36[5] = a3;
  v36[6] = a4;
  aBlock[4] = sub_100036E68;
  v44 = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D25FC;
  aBlock[3] = &unk_100134A30;
  v37 = _Block_copy(aBlock);
  v38 = v44;
  v39 = v42;
  v40 = v7;
  v41 = v20;
  sub_100035C4C(a3, a4);
  swift_release(v38);
  objc_msgSend(v40, "transitionFromViewController:toViewController:duration:options:animations:completion:", v39, v41, 5242880, 0, v37, v35);
  _Block_release(v37);

}

id sub_100033754(char a1, id a2, void *a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  id result;
  id v11;
  double v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  double v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  result = objc_msgSend(a2, "view");
  if (result)
  {
    v11 = result;
    objc_msgSend(result, "alpha");
    if (v12 == 0.0)
    {
      v13 = swift_allocObject(&unk_100134A68, 24, 7);
      *(_QWORD *)(v13 + 16) = v11;
      v18 = (id)objc_opt_self(UIView);
      aBlock[4] = sub_1000372B8;
      v20 = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100030658;
      aBlock[3] = &unk_100134A80;
      v14 = _Block_copy(aBlock);
      v15 = v20;
      v16 = v11;
      swift_retain(v13);
      swift_release(v15);
      objc_msgSend(v18, "animateWithDuration:delay:options:animations:completion:", 0x10000, v14, 0, 0.375, 0.0);
      _Block_release(v14);

      *(_QWORD *)&v17 = swift_release(v13).n128_u64[0];
    }
    else
    {

    }
    objc_msgSend(a3, "removeFromParentViewController", v17);
    result = objc_msgSend(a2, "didMoveToParentViewController:", a4);
    if (a5)
      return (id)a5(a1 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100033900(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  objc_super v15;

  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_transitionDuration] = 0x3FD8000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryInterval] = 0x4014000000000000;
  v6 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController;
  v7 = type metadata accessor for LoadingViewController();
  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7));
  v9 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v8, "init");
  v10 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsViewController;
  v11 = objc_allocWithZone((Class)type metadata accessor for TermsAndConditionsViewController());
  *(_QWORD *)&v9[v10] = sub_1000BA788();
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___noSessionNavigationController] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___diagnosticsCompletedNavigationController] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___enhancedLoggingCompletedNavigationController] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics19SetupViewController_onScreenErrors] = &_swiftEmptySetSingleton;
  v9[OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason] = 0;
  v9[OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsAccepted] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer] = 0;

  if (a2)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v12 = 0;
  }
  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for SetupViewController();
  v13 = objc_msgSendSuper2(&v15, "initWithNibName:bundle:", v12, a3);

  return v13;
}

id sub_100033AE4(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_transitionDuration] = 0x3FD8000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryInterval] = 0x4014000000000000;
  v3 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController;
  v4 = type metadata accessor for LoadingViewController();
  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4));
  v6 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsViewController;
  v8 = objc_allocWithZone((Class)type metadata accessor for TermsAndConditionsViewController());
  *(_QWORD *)&v6[v7] = sub_1000BA788();
  *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___noSessionNavigationController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___diagnosticsCompletedNavigationController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___enhancedLoggingCompletedNavigationController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics19SetupViewController_onScreenErrors] = &_swiftEmptySetSingleton;
  v6[OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason] = 0;
  v6[OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsAccepted] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer] = 0;

  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for SetupViewController();
  v9 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);

  return v9;
}

void sub_100033C54()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___noSessionNavigationController));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___diagnosticsCompletedNavigationController));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___enhancedLoggingCompletedNavigationController));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_onScreenErrors));

}

id sub_100033CF0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SetupViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SetupViewController()
{
  return objc_opt_self(_TtC11Diagnostics19SetupViewController);
}

_BYTE *initializeBufferWithCopyOfBuffer for ExitReason(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SetupViewController.EntryReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SetupViewController.EntryReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100033ED0 + 4 * byte_10010BE45[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100033F04 + 4 * byte_10010BE40[v4]))();
}

uint64_t sub_100033F04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100033F0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100033F14);
  return result;
}

uint64_t sub_100033F20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100033F28);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100033F2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100033F34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100033F40(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100033F4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SetupViewController.EntryReason()
{
  return &type metadata for SetupViewController.EntryReason;
}

unint64_t sub_100033F68()
{
  unint64_t result;

  result = qword_10016AB60;
  if (!qword_10016AB60)
  {
    result = swift_getWitnessTable(&unk_10010BEC0, &type metadata for SetupViewController.EntryReason);
    atomic_store(result, (unint64_t *)&qword_10016AB60);
  }
  return result;
}

void sub_100033FAC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  objc_allocWithZone((Class)type metadata accessor for SelfServiceSuiteInProgressViewController());
  v11 = sub_10008F47C(a1, a2);
  v8 = (uint64_t *)&v11[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  v9 = *(_QWORD *)&v11[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  v10 = *(_QWORD *)&v11[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear + 8];
  *v8 = a3;
  v8[1] = a4;
  sub_100035C4C(a3, a4);
  sub_100035D74(v9, v10);
  if (qword_10016A5F8 != -1)
    swift_once(&qword_10016A5F8, sub_100048E78);
  sub_10004C4A4(v11, 1, 0, 0);

}

uint64_t sub_10003408C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;
  char v7;

  v2 = sub_10003F8CC(16, 0);
  v3 = a1 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__presentationTransitionStyle;
  *(_QWORD *)v3 = v2;
  *(_BYTE *)(v3 + 8) = v4 & 1;
  result = sub_10003F8CC(16, 0);
  v6 = a1 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle;
  *(_QWORD *)v6 = result;
  *(_BYTE *)(v6 + 8) = v7 & 1;
  return result;
}

void sub_1000340F0(char a1, void *a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  _QWORD *v21;
  void (*v22)(char *, id, double (*)(), _QWORD *, uint64_t, uint64_t);
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  __n128 v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && (a1 & 1) != 0)
  {
    v14 = *(void **)&a3[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
    if (!v14)
    {
      sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v36 = a2;
      v39 = (id)static OS_os_log.default.getter(v36);
      v37 = static os_log_type_t.default.getter(v39);
      os_log(_:dso:log:type:_:)("[SuiteManager] Device State is nil, suite won't be run", 54, 2, &_mh_execute_header, v39, v37, _swiftEmptyArrayStorage);

      goto LABEL_9;
    }
    v15 = &a3[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&a3[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate]);
    if (Strong)
    {
      v18 = Strong;
      v19 = *((_QWORD *)v15 + 1);
      ObjectType = swift_getObjectType(Strong, v17);
      v21 = (_QWORD *)swift_allocObject(&unk_1001347E8, 40, 7);
      v21[2] = a3;
      v21[3] = v14;
      v21[4] = a2;
      v22 = *(void (**)(char *, id, double (*)(), _QWORD *, uint64_t, uint64_t))(v19 + 48);
      v23 = a2;
      v24 = v14;
      v25 = v23;
      v39 = v24;
      v22(a3, v25, sub_100036644, v21, ObjectType, v19);

      swift_release(v21);
      swift_unknownObjectRelease(v18);
LABEL_9:

    }
  }
  else
  {
    v26 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
    v27 = (void *)static OS_dispatch_queue.main.getter(v26);
    v28 = swift_allocObject(&unk_100134798, 24, 7);
    *(_QWORD *)(v28 + 16) = a3;
    aBlock[4] = sub_100036608;
    v41 = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100030658;
    aBlock[3] = &unk_1001347B0;
    v29 = _Block_copy(aBlock);
    v30 = v41;
    v31 = a3;
    v32 = swift_release(v30);
    static DispatchQoS.unspecified.getter(v32);
    aBlock[0] = _swiftEmptyArrayStorage;
    v33 = sub_100035C5C();
    v34 = sub_100035CA4((uint64_t *)&unk_10016AD10);
    v35 = sub_100035CE4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v6, v33);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_10003441C(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  _BYTE *v5;

  v2 = objc_allocWithZone((Class)type metadata accessor for SelfServiceSuitePickerViewController());
  v5 = sub_1000823E0(a1);
  v3 = OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_hidesBackButton;
  v5[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_hidesBackButton] = 1;
  v4 = objc_msgSend(v5, "navigationItem");
  objc_msgSend(v4, "setHidesBackButton:", v5[v3]);

  if (qword_10016A5F8 != -1)
    swift_once(&qword_10016A5F8, sub_100048E78);
  sub_10004C4A4(v5, 1, 0, 0);

}

void sub_1000344E4(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *Strong;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;
  _BYTE v30[24];
  _BYTE v31[24];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a3 + 16;
  swift_beginAccess(v14, v31, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v14);
  if (!Strong)
    goto LABEL_8;
  v16 = Strong;
  if (!a2 || (a1 & 1) == 0)
  {

LABEL_8:
    v19 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
    v20 = (void *)static OS_dispatch_queue.main.getter(v19);
    v21 = swift_allocObject(&unk_1001346D0, 24, 7);
    swift_beginAccess(v14, v30, 0, 0);
    v22 = (void *)swift_unknownObjectWeakLoadStrong(v14);
    swift_unknownObjectWeakInit(v21 + 16, v22);

    aBlock[4] = sub_100036650;
    v29 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100030658;
    aBlock[3] = &unk_100134800;
    v23 = _Block_copy(aBlock);
    v24 = swift_release(v29);
    static DispatchQoS.unspecified.getter(v24);
    aBlock[0] = _swiftEmptyArrayStorage;
    v25 = sub_100035C5C();
    v26 = sub_100035CA4((uint64_t *)&unk_10016AD10);
    v27 = sub_100035CE4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v6, v25);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return;
  }
  v17 = qword_10016A658;
  v18 = a2;
  if (v17 != -1)
    swift_once(&qword_10016A658, sub_10006E428);
  sub_10006F838(v18);

}

void sub_100034770(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  Class isa;
  uint64_t v20;
  unint64_t v21;
  _BYTE v22[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "navigationController");
    if (v4)
    {
      v5 = v4;
      if (qword_10016A658 != -1)
        swift_once(&qword_10016A658, sub_10006E428);
      v6 = (void *)qword_100172360;
      v7 = objc_allocWithZone((Class)type metadata accessor for SelfServiceSuitePickerViewController());
      v8 = sub_1000823E0(v6);
      v9 = objc_msgSend(v3, "navigationController");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, "pushViewController:animated:", v8, 1);

      }
      v11 = v3;
      v12 = objc_msgSend(v5, "viewControllers");
      v13 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
      v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

      v21 = v14;
      v15 = sub_100036658((uint64_t *)&v21);

      v16 = v21;
      if (v21 >> 62)
      {
        if ((v21 & 0x8000000000000000) != 0)
          v20 = v21;
        else
          v20 = v21 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v21);
        v17 = _CocoaArrayWrapper.endIndex.getter(v20);
        swift_bridgeObjectRelease(v16);
        if (v17 >= v15)
          goto LABEL_9;
      }
      else
      {
        v17 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v17 >= v15)
        {
LABEL_9:
          sub_100036A24(v15, v17);
          v18 = v21;
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v18);
          objc_msgSend(v5, "setViewControllers:", isa);

          return;
        }
      }
      __break(1u);
    }
    else
    {

    }
  }
}

void sub_100034984(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = sub_10002F7A4();
    sub_100033418(v4, 1, 0, 0);

  }
}

void sub_1000349EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  id v9;
  id v10;

  objc_allocWithZone((Class)type metadata accessor for SelfServiceDestinationPickerViewController());
  v8 = a1;
  swift_bridgeObjectRetain(a2);
  swift_retain(a4);
  v9 = sub_1000CF170(v8, a2, a3, a4);
  v10 = v9;
  if (qword_10016A5F8 != -1)
  {
    swift_once(&qword_10016A5F8, sub_100048E78);
    v9 = v10;
  }
  sub_10004C4A4(v9, 1, 0, 0);

}

double sub_100034AB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return sub_100035D84(a2, a3, a4, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_100034AC0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000359C0(a2, a3, a4);
}

_QWORD *sub_100034AD4(_QWORD *a1)
{
  return sub_100091B94(0, a1[2], 0, a1);
}

uint64_t sub_100034AE8(uint64_t a1)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_100034AFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

uint64_t sub_100034B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100034D60(a1, a2, a3, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
}

uint64_t sub_100034B78(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  char v28;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_100091CA0(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v16 + v17 * a1;
  swift_arrayDestroy(v18, v8, v14);
  if (!v9)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    v28 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v28, 1046, 0);
    __break(1u);
    return result;
  }
  v21 = v18 + v17;
  v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack(v21, v22, v20, v14);
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront(v21);
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v9);
  v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1)
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  return sub_100036FA0(a3, (uint64_t *)&unk_10016C190);
}

uint64_t sub_100034D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100034D60(a1, a2, a3, (unint64_t *)&qword_10016D860, UIView_ptr);
}

uint64_t sub_100034D60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v9 = a5;
    v8 = a4;
    v12 = a3;
    v7 = a2;
    v11 = a1;
    v10 = *v6;
    if (!((unint64_t)*v6 >> 62))
    {
      v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v10 < 0)
    v28 = v10;
  else
    v28 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v13 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v10);
  if (v13 < v7)
    goto LABEL_34;
LABEL_4:
  v13 = v7 - v11;
  if (__OFSUB__(v7, v11))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v5 = 1 - v13;
  if (__OFSUB__(1, v13))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v10 = *v6;
  v36 = v8;
  if (!((unint64_t)*v6 >> 62))
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v14 + v5;
    if (!__OFADD__(v14, v5))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v10 < 0)
      v30 = v10;
    else
      v30 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v18 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v10);
    goto LABEL_15;
  }
LABEL_37:
  if (v10 < 0)
    v29 = v10;
  else
    v29 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v14 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v10);
  v15 = v14 + v5;
  if (__OFADD__(v14, v5))
    goto LABEL_42;
LABEL_8:
  v10 = *v6;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v6);
  *v6 = v10;
  v35 = v12;
  v14 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v17 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v15 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v14 = 1;
  }
  if ((unint64_t)v10 >> 62)
    goto LABEL_43;
  v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v18 <= v15)
    v18 = v15;
  swift_bridgeObjectRetain(v10);
  v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v14, v18, 1, v10);
  swift_bridgeObjectRelease(*v6);
  *v6 = v10;
  v17 = v10 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v19 = (_QWORD *)(v17 + 32 + 8 * v11);
  v20 = sub_100037118(0, v36, v9);
  v21 = (char *)swift_arrayDestroy(v19, v13, v20);
  if (!v5)
  {
LABEL_28:
    *v19 = v35;
    return specialized Array._endMutation()(v21);
  }
  if (!((unint64_t)v10 >> 62))
  {
    v22 = *(_QWORD *)(v17 + 16);
    v23 = v22 - v7;
    if (!__OFSUB__(v22, v7))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v10 < 0)
    v31 = v10;
  else
    v31 = v17;
  swift_bridgeObjectRetain(v10);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v10);
  v23 = v32 - v7;
  if (__OFSUB__(v32, v7))
    goto LABEL_52;
LABEL_21:
  if ((v23 & 0x8000000000000000) == 0)
  {
    v21 = (char *)(v19 + 1);
    v24 = (char *)(v17 + 32 + 8 * v7);
    if (v19 + 1 != (_QWORD *)v24 || v21 >= &v24[8 * v23])
      v21 = (char *)memmove(v21, v24, 8 * v23);
    if (!((unint64_t)v10 >> 62))
    {
      v25 = *(_QWORD *)(v17 + 16);
      v26 = v25 + v5;
      if (!__OFADD__(v25, v5))
      {
LABEL_27:
        *(_QWORD *)(v17 + 16) = v26;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v10 < 0)
      v33 = v10;
    else
      v33 = v17;
    swift_bridgeObjectRetain(v10);
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    v21 = (char *)swift_bridgeObjectRelease(v10);
    v26 = v34 + v5;
    if (!__OFADD__(v34, v5))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100035054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  DARootViewController **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  SEL v32;
  id v33;
  int v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  SEL v40;
  id v41;
  int v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  SEL v48;
  id v49;
  int v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  SEL v57;
  id v58;
  int v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  SEL v66;
  id v67;
  int v68;
  id v69;
  id v70;
  id v71;
  id v72;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = (uint64_t)*v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v7 < 0)
    v31 = v7;
  else
    v31 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease((DARootViewController *)v7, v32, v33, v34, v35, v36, v37, v38);
  if (v9 < v5)
    goto LABEL_34;
LABEL_4:
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = (uint64_t)*v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v7 < 0)
      v47 = v7;
    else
      v47 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v14 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease((DARootViewController *)v7, v48, v49, v50, v51, v52, v53, v54);
    goto LABEL_15;
  }
LABEL_37:
  if (v7 < 0)
    v39 = v7;
  else
    v39 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v10 = _CocoaArrayWrapper.endIndex.getter(v39);
  swift_bridgeObjectRelease((DARootViewController *)v7, v40, v41, v42, v43, v44, v45, v46);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_42;
LABEL_8:
  v7 = (uint64_t)*v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = (DARootViewController *)v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if ((unint64_t)v7 >> 62)
    goto LABEL_43;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain(v7);
  v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1, v7);
  swift_bridgeObjectRelease(*v4, v15, v16, v17, v18, v19, v20, v21);
  *v4 = (DARootViewController *)v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v22 = (_QWORD *)(v13 + 32 + 8 * v6);
  v23 = type metadata accessor for CardState();
  v24 = (char *)swift_arrayDestroy(v22, v9, v23);
  if (!v8)
  {
LABEL_28:
    *v22 = v3;
    return specialized Array._endMutation()(v24);
  }
  if (!((unint64_t)v7 >> 62))
  {
    v25 = *(_QWORD *)(v13 + 16);
    v26 = v25 - v5;
    if (!__OFSUB__(v25, v5))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v7 < 0)
    v55 = v7;
  else
    v55 = v13;
  swift_bridgeObjectRetain(v7);
  v56 = _CocoaArrayWrapper.endIndex.getter(v55);
  swift_bridgeObjectRelease((DARootViewController *)v7, v57, v58, v59, v60, v61, v62, v63);
  v26 = v56 - v5;
  if (__OFSUB__(v56, v5))
    goto LABEL_52;
LABEL_21:
  if ((v26 & 0x8000000000000000) == 0)
  {
    v24 = (char *)(v22 + 1);
    v27 = (char *)(v13 + 32 + 8 * v5);
    if (v22 + 1 != (_QWORD *)v27 || v24 >= &v27[8 * v26])
      v24 = (char *)memmove(v24, v27, 8 * v26);
    if (!((unint64_t)v7 >> 62))
    {
      v28 = *(_QWORD *)(v13 + 16);
      v29 = v28 + v8;
      if (!__OFADD__(v28, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v29;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v7 < 0)
      v64 = v7;
    else
      v64 = v13;
    swift_bridgeObjectRetain(v7);
    v65 = _CocoaArrayWrapper.endIndex.getter(v64);
    swift_bridgeObjectRelease((DARootViewController *)v7, v66, v67, v68, v69, v70, v71, v72);
    v29 = v65 + v8;
    if (!__OFADD__(v65, v8))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_10003532C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  id v21;
  _QWORD v22[5];
  uint64_t v23;

  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v12 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v10, v11, 1);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v15 = v14;
  sub_10003FFA0(v13, v14, (uint64_t)_swiftEmptyArrayStorage, 0x5353494D534944, (void *)0xE700000000000000);
  v17 = v16;
  swift_bridgeObjectRelease(v15);
  v18 = swift_allocObject(&unk_100134F68, 32, 7);
  *(_QWORD *)(v18 + 16) = a5;
  *(_QWORD *)(v18 + 24) = a6;
  swift_retain(a6);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v22[4] = sub_1000370F8;
  v23 = v18;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_100040808;
  v22[3] = &unk_100134F80;
  v20 = _Block_copy(v22);
  swift_release(v23);
  v21 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v19, 0, v20);
  _Block_release(v20);

  objc_msgSend(v12, "addAction:", v21);
  objc_msgSend(v12, "showOnTopWithAnimated:completion:", 1, 0);

}

double sub_100035528()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  void *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  const char *v27;
  void *v28;
  int v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  SEL v37;
  id v38;
  int v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  Swift::Int v51;
  __n128 v52;
  void *v53;
  uint64_t v54;
  char *v55;
  double result;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  _BYTE v61[24];

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v3 = __chkstk_darwin(v2);
  v5 = &v61[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v61[-v6 - 8];
  v8 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v61[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = (void *)qword_10016B3C0;
  if (qword_10016B3C0)
  {
    v13 = type metadata accessor for SelfServiceDestinationPickerViewController();
    if (!swift_dynamicCastClass(v12, v13))
    {
      v35 = v12;
LABEL_20:
      v34 = v35;
      goto LABEL_21;
    }
  }
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  v14 = objc_msgSend((id)qword_100172310, "viewControllers");
  v15 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if (!((unint64_t)v16 >> 62))
  {
    v24 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
      goto LABEL_7;
LABEL_18:
    swift_bridgeObjectRelease((DARootViewController *)v16, v17, v18, v19, v20, v21, v22, v23);
    if (qword_10016A5F8 == -1)
    {
LABEL_19:
      v35 = (id)qword_100172300;
      goto LABEL_20;
    }
LABEL_36:
    swift_once(&qword_10016A5F8, sub_100048E78);
    goto LABEL_19;
  }
  if (v16 < 0)
    v36 = v16;
  else
    v36 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v24 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease((DARootViewController *)v16, v37, v38, v39, v40, v41, v42, v43);
  if (!v24)
    goto LABEL_18;
LABEL_7:
  v25 = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_33:
    v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v16);
    goto LABEL_12;
  }
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v25 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v26 = *(id *)(v16 + 8 * v25 + 32);
LABEL_12:
  v34 = v26;
  swift_bridgeObjectRelease((DARootViewController *)v16, v27, v28, v29, v30, v31, v32, v33);
LABEL_21:
  v44 = type metadata accessor for DashboardViewController();
  v45 = swift_dynamicCastClass(v34, v44);
  if (v45
    && v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason] == 3
    && *(uint64_t *)(v45 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount) >= 1)
  {
    if (qword_10016A6D8 != -1)
      swift_once(&qword_10016A6D8, sub_1000C6380);
    v46 = type metadata accessor for ModalPresentationCoordinator(0);
    v47 = sub_100036D34(v46, (uint64_t)qword_1001723D0);
    swift_beginAccess(v47, v61, 33, 0);
    if ((sub_1000C65B4(v1, 1, 0, 1, 0, 0) & 1) == 0)
    {
      v48 = *(_QWORD *)(v47 + *(int *)(v46 + 24));
      v49 = v1;
      v50 = swift_bridgeObjectRetain(v48);
      v51 = sub_1000C8C58(v50, v49);

      sub_1000C4E10(v51, (uint64_t)v7);
      v52 = swift_release(v51);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v52) == 1)
      {
        sub_100036FA0((uint64_t)v7, (uint64_t *)&unk_10016AE90);
      }
      else
      {
        sub_100036D7C((uint64_t)v7, (uint64_t)v11);
        sub_1000A7860((uint64_t)v11, (uint64_t)v5);
        sub_100036FA0((uint64_t)v5, (uint64_t *)&unk_10016AE90);
        sub_100036DC0((uint64_t)v11);
      }
    }
    swift_endAccess(v61);
    v57 = swift_allocObject(&unk_100134860, 24, 7);
    *(_QWORD *)(v57 + 16) = v1;
    v58 = (_QWORD *)swift_allocObject(&unk_100134888, 40, 7);
    v58[2] = v1;
    v58[3] = sub_100036D4C;
    v58[4] = v57;
    v59 = v1;
    swift_retain(v57);
    sub_10008CC14((uint64_t)sub_100036D70, (uint64_t)v58);

    swift_release(v57);
    *(_QWORD *)&result = swift_release(v58).n128_u64[0];
  }
  else
  {

    v53 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController];
    v54 = swift_allocObject(&unk_100134838, 24, 7);
    *(_QWORD *)(v54 + 16) = v1;
    v55 = v1;
    sub_100033418(v53, 1, (uint64_t)sub_100036D2C, v54);
    *(_QWORD *)&result = swift_release(v54).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000359C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  id v19;
  __n128 v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10016A658 != -1)
    swift_once(&qword_10016A658, sub_10006E428);
  v12 = (void *)qword_100172360;
  v13 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_100134630, 48, 7);
  v15[2] = v12;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_100035C28;
  v30 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100134648;
  v16 = _Block_copy(aBlock);
  v17 = v30;
  v18 = v12;
  v19 = a1;
  sub_100035C4C(a2, a3);
  v20 = swift_release(v17);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100035C5C();
  v22 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v23 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v6, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v27);
}

uint64_t sub_100035BEC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100035C28()
{
  uint64_t v0;

  sub_100033FAC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100035C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100035C44(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100035C4C(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

unint64_t sub_100035C5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016B5F0;
  if (!qword_10016B5F0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_10016B5F0);
  }
  return result;
}

uint64_t sub_100035CA4(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_100035CE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016B600;
  if (!qword_10016B600)
  {
    v1 = sub_100035D30((uint64_t *)&unk_10016AD10);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10016B600);
  }
  return result;
}

uint64_t sub_100035D30(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_100035D74(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

double sub_100035D84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v23;
  void (**v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  unsigned int v31;
  void (**v32)(char *, uint64_t);
  id v33;
  uint64_t v34;
  char *v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  id v43;
  double result;
  void (**v45)(char *, uint64_t);
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  __n128 v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  void *v60;
  _QWORD *v61;
  char *v62;
  __n128 v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  _QWORD *v77;
  __n128 v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(_QWORD);
  char *v96;
  char *v97;
  void (**v98)(char *, uint64_t);
  void **aBlock;
  uint64_t v100;
  uint64_t (*v101)(uint64_t);
  void *v102;
  void *v103;
  _QWORD *v104;

  v19 = v18;
  v23 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(void (***)(char *, uint64_t))(v23 - 8);
  __chkstk_darwin(v23);
  v97 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10016A658 != -1)
    goto LABEL_35;
  while (1)
  {
    v30 = (char *)qword_100172360;
    v31 = objc_msgSend((id)objc_opt_self(CBSUtilities), "isSSRBootIntentSet");
    v98 = v24;
    if (v31)
      break;
    if (*(_BYTE *)(v19 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) != 6)
    {
      v58 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
      v95 = (void (*)(_QWORD))static OS_dispatch_queue.main.getter(v58);
      v59 = (_QWORD *)swift_allocObject(&unk_100134680, 48, 7);
      v59[2] = v30;
      v59[3] = a1;
      v59[4] = a2;
      v59[5] = a3;
      v103 = sub_1000365B8;
      v104 = v59;
      aBlock = _NSConcreteStackBlock;
      v100 = 1107296256;
      v101 = sub_100030658;
      v102 = &unk_100134698;
      v60 = _Block_copy(&aBlock);
      v61 = v104;
      swift_bridgeObjectRetain(a1);
      v62 = v30;
      swift_retain(a3);
      v63 = swift_release(v61);
      static DispatchQoS.unspecified.getter(v63);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v64 = sub_100035C5C();
      v65 = sub_100035CA4((uint64_t *)&unk_10016AD10);
      v66 = sub_100035CE4();
      v67 = v97;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v65, v66, v23, v64);
      v68 = v95;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v29, v67, v60);
      _Block_release(v60);

      v98[1](v67, v23);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
      return result;
    }
    v94 = v26;
    v95 = (void (*)(_QWORD))a2;
    v91 = v29;
    v92 = v27;
    v93 = v23;
    v96 = v30;
    a2 = a3;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v90 = a1;
      else
        v90 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v29 = (char *)_CocoaArrayWrapper.endIndex.getter(v90);
      if (!v29)
      {
LABEL_25:
        swift_bridgeObjectRelease(a1);
        v47 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
        v48 = (void *)static OS_dispatch_queue.main.getter(v47);
        v49 = swift_allocObject(&unk_1001346D0, 24, 7);
        swift_unknownObjectWeakInit(v49 + 16, v19);
        v103 = sub_1000365E8;
        v104 = (_QWORD *)v49;
        aBlock = _NSConcreteStackBlock;
        v100 = 1107296256;
        v101 = sub_100030658;
        v102 = &unk_1001346E8;
        v50 = _Block_copy(&aBlock);
        v51 = swift_release(v104);
        v52 = v91;
        static DispatchQoS.unspecified.getter(v51);
        aBlock = (void **)_swiftEmptyArrayStorage;
        v53 = sub_100035C5C();
        v54 = sub_100035CA4((uint64_t *)&unk_10016AD10);
        v55 = sub_100035CE4();
        v56 = v97;
        v57 = v93;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v54, v55, v93, v53);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v52, v56, v50);
        _Block_release(v50);

        v98[1](v56, v57);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v52, v94);
        return result;
      }
    }
    else
    {
      v29 = *(char **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (!v29)
        goto LABEL_25;
    }
    a3 = a1 & 0xC000000000000001;
    v23 = 4;
    while (1)
    {
      v27 = v23 - 4;
      v45 = a3
          ? (void (**)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)(v23 - 4, a1)
          : (void (**)(char *, uint64_t))*(id *)(a1 + 8 * v23);
      v24 = v45;
      v26 = v23 - 3;
      if (__OFADD__(v27, 1))
        break;
      v46 = objc_msgSend(v45, "endpoint");

      if (v46 == (id)1)
      {
        swift_bridgeObjectRelease(a1);
        v95(1);
        v88 = swift_allocObject(&unk_1001346D0, 24, 7);
        swift_unknownObjectWeakInit(v88 + 16, v19);
        sub_10007070C(1, (void (*)(uint64_t, id))sub_1000365F0);
        *(_QWORD *)&result = swift_release(v88).n128_u64[0];
        return result;
      }
      ++v23;
      if ((char *)v26 == v29)
        goto LABEL_25;
    }
LABEL_34:
    __break(1u);
LABEL_35:
    swift_once(&qword_10016A658, sub_10006E428);
  }
  v94 = v26;
  v95 = (void (*)(_QWORD))a2;
  v91 = v29;
  v92 = v27;
  v29 = (char *)a3;
  v93 = v23;
  v96 = v30;
  if (!((unint64_t)a1 >> 62))
  {
    a2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (a2)
      goto LABEL_5;
LABEL_12:
    swift_bridgeObjectRelease(a1);
    v95(0);
    v34 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
    v35 = v96;
    objc_msgSend(*(id *)&v96[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState], "resetState");
    v43 = *(id *)&v35[v34];
    if (v43)
      v43 = objc_msgSend(v43, "setPhase:", 0);
    sub_1000306E4((uint64_t)v43, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    return result;
  }
  if (a1 < 0)
    v89 = a1;
  else
    v89 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  a2 = _CocoaArrayWrapper.endIndex.getter(v89);
  if (!a2)
    goto LABEL_12;
LABEL_5:
  a3 = a1 & 0xC000000000000001;
  v23 = 4;
  while (1)
  {
    v27 = v23 - 4;
    if (a3)
      v32 = (void (**)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)(v23 - 4, a1);
    else
      v32 = (void (**)(char *, uint64_t))*(id *)(a1 + 8 * v23);
    v24 = v32;
    v26 = v23 - 3;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    v33 = objc_msgSend(v32, "endpoint");

    if (v33 == (id)2)
      break;
    ++v23;
    if (v26 == a2)
      goto LABEL_12;
  }
  swift_bridgeObjectRelease(a1);
  if (qword_10016A608 != -1)
    swift_once(&qword_10016A608, sub_10004913C);
  v69 = qword_100172318;
  v70 = type metadata accessor for DKViewControllerDelegateResponder();
  v71 = swift_dynamicCastClass(v69, v70);
  if (v71)
  {
    v72 = v71;
    sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
    v73 = swift_unknownObjectRetain(v69);
    v74 = (void *)static OS_dispatch_queue.main.getter(v73);
    v75 = swift_allocObject(&unk_100134748, 24, 7);
    *(_QWORD *)(v75 + 16) = v72;
    v103 = sub_100036600;
    v104 = (_QWORD *)v75;
    aBlock = _NSConcreteStackBlock;
    v100 = 1107296256;
    v101 = sub_100030658;
    v102 = &unk_100134760;
    v76 = _Block_copy(&aBlock);
    v77 = v104;
    swift_unknownObjectRetain(v69);
    v78 = swift_release(v77);
    v79 = v91;
    static DispatchQoS.unspecified.getter(v78);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v80 = sub_100035C5C();
    v81 = sub_100035CA4((uint64_t *)&unk_10016AD10);
    v82 = sub_100035CE4();
    v83 = v97;
    v84 = v93;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v81, v82, v93, v80);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v79, v83, v76);
    _Block_release(v76);
    swift_unknownObjectRelease(v69);

    v98[1](v83, v84);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v79, v94);
  }
  v95(2);
  v85 = swift_allocObject(&unk_100134720, 24, 7);
  v86 = v96;
  *(_QWORD *)(v85 + 16) = v96;
  v87 = v86;
  sub_10007070C(2, (void (*)(uint64_t, id))sub_1000365F8);
  *(_QWORD *)&result = swift_release(v85).n128_u64[0];
  return result;
}

uint64_t sub_100036584()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1000365B8()
{
  uint64_t v0;

  sub_1000349EC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1000365C4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000365E8()
{
  uint64_t v0;

  sub_100034984(v0);
}

void sub_1000365F0(char a1, void *a2)
{
  uint64_t v2;

  sub_1000344E4(a1, a2, v2);
}

void sub_1000365F8(char a1, void *a2)
{
  uint64_t v2;

  sub_1000340F0(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_100036600()
{
  uint64_t v0;

  return sub_10003408C(*(_QWORD *)(v0 + 16));
}

void sub_100036608()
{
  uint64_t v0;

  sub_10003441C(*(void **)(v0 + 16));
}

uint64_t sub_100036610()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

double sub_100036644()
{
  uint64_t v0;

  return sub_10006F994(*(char **)(v0 + 16), *(id *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_100036650()
{
  uint64_t v0;

  sub_100034770(v0);
}

uint64_t sub_100036658(uint64_t *a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t i;
  unint64_t v13;
  id v14;
  void *v15;
  char v16;
  uint64_t v17;
  id v18;
  id v19;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *a1;
  if ((unint64_t)*a1 >> 62)
    goto LABEL_65;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*a1);
  if (v3)
  {
LABEL_3:
    sub_100037118(0, &qword_10016D880, NSObject_ptr);
    v4 = 0;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2)
         : *(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      v7 = static NSObject.== infix(_:_:)(v5);

      if ((v7 & 1) != 0)
        break;
      v8 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        if ((v2 & 0x8000000000000000) != 0)
          v33 = v2;
        else
          v33 = v2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v2);
        v3 = _CocoaArrayWrapper.endIndex.getter(v33);
        if (!v3)
          goto LABEL_10;
        goto LABEL_3;
      }
      ++v4;
      if (v8 == v3)
        goto LABEL_10;
    }
    swift_bridgeObjectRelease(v2);
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      v7 = *a1;
      if (!((unint64_t)*a1 >> 62))
      {
        if (v11 != *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_16:
          for (i = v4 + 5; ; ++i)
          {
            v2 = i - 4;
            v13 = *a1;
            if ((*a1 & 0xC000000000000001) != 0)
            {
              v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v13);
            }
            else
            {
              if ((v2 & 0x8000000000000000) != 0)
                goto LABEL_55;
              if (v2 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_56;
              v14 = *(id *)(v13 + 8 * i);
            }
            v15 = v14;
            v16 = static NSObject.== infix(_:_:)(v14);

            if ((v16 & 1) != 0)
              goto LABEL_42;
            if (v2 != v4)
              break;
LABEL_41:
            if (__OFADD__(v4++, 1))
              goto LABEL_58;
LABEL_42:
            v29 = i - 3;
            if (__OFADD__(v2, 1))
              goto LABEL_57;
            v30 = *a1;
            if ((unint64_t)*a1 >> 62)
            {
              if (v30 < 0)
                v32 = *a1;
              else
                v32 = v30 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*a1);
              v31 = _CocoaArrayWrapper.endIndex.getter(v32);
              swift_bridgeObjectRelease(v30);
            }
            else
            {
              v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            if (v29 == v31)
              return v4;
          }
          v17 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *a1);
            v17 = *a1;
            if ((*a1 & 0xC000000000000001) == 0)
            {
LABEL_27:
              if ((v2 & 0x8000000000000000) != 0)
                goto LABEL_61;
              if (v2 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_62;
              v19 = *(id *)(v17 + 8 * i);
              goto LABEL_30;
            }
          }
          else
          {
            if ((v4 & 0x8000000000000000) != 0)
              goto LABEL_59;
            if (v4 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_60;
            v18 = *(id *)(v17 + 8 * v4 + 32);
            if ((v17 & 0xC000000000000001) == 0)
              goto LABEL_27;
          }
          v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v17);
          v17 = *a1;
LABEL_30:
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v17);
          *a1 = v17;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v17 < 0 || (v17 & 0x4000000000000000) != 0)
          {
            v17 = sub_100034AFC(v17);
            *a1 = v17;
          }
          v21 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
          *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v19;

          specialized Array._endMutation()(v22);
          v23 = *a1;
          v24 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
          *a1 = v23;
          if (!v24 || v23 < 0 || (v23 & 0x4000000000000000) != 0)
          {
            v23 = sub_100034AFC(v23);
            *a1 = v23;
          }
          if ((v2 & 0x8000000000000000) != 0)
            goto LABEL_63;
          v25 = v23 & 0xFFFFFFFFFFFFFF8;
          if (v2 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_64;
          v26 = *(void **)(v25 + 8 * i);
          *(_QWORD *)(v25 + 8 * i) = v18;

          specialized Array._endMutation()(v27);
          goto LABEL_41;
        }
        return v4;
      }
    }
    if (v7 < 0)
      v36 = v7;
    else
      v36 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v37 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v7);
    if (v11 != v37)
      goto LABEL_16;
    return v4;
  }
LABEL_10:
  swift_bridgeObjectRelease(v2);
  v9 = *a1;
  if (!((unint64_t)*a1 >> 62))
    return *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v9 < 0)
    v34 = *a1;
  else
    v34 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v35 = _CocoaArrayWrapper.endIndex.getter(v34);
  swift_bridgeObjectRelease(v9);
  return v35;
}

uint64_t sub_100036A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v5 < 0)
    v26 = v5;
  else
    v26 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v7 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_34;
LABEL_4:
  v5 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v5))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v5;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v7 < 0)
      v28 = v7;
    else
      v28 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v12 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v7);
    v7 = *v3;
    goto LABEL_15;
  }
LABEL_37:
  if (v7 < 0)
    v27 = v7;
  else
    v27 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v7);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_42;
LABEL_8:
  v7 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v7;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v11 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v7 >> 62)
    goto LABEL_43;
  v12 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain(v7);
  v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v7);
  v14 = *v3;
  *v3 = v13;
  swift_bridgeObjectRelease(v14);
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = v11 + 32;
  v16 = (char *)(v11 + 32 + 8 * v4);
  v17 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v18 = (void *)swift_arrayDestroy(v16, v5, v17);
  if (!v6)
    return specialized Array._endMutation()(v18);
  v19 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    v21 = v20 - v2;
    if (!__OFSUB__(v20, v2))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v19 < 0)
    v29 = *v3;
  else
    v29 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v3);
  v30 = _CocoaArrayWrapper.endIndex.getter(v29);
  v18 = (void *)swift_bridgeObjectRelease(v19);
  v21 = v30 - v2;
  if (__OFSUB__(v30, v2))
    goto LABEL_52;
LABEL_21:
  if ((v21 & 0x8000000000000000) == 0)
  {
    v22 = (char *)(v15 + 8 * v2);
    if (v4 != v2 || v16 >= &v22[8 * v21])
      v18 = memmove(v16, v22, 8 * v21);
    v2 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v23 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      v24 = v23 + v6;
      if (!__OFADD__(v23, v6))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v24;
        return specialized Array._endMutation()(v18);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v2 < 0)
      v31 = v2;
    else
      v31 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    v18 = (void *)swift_bridgeObjectRelease(v2);
    v24 = v32 + v6;
    if (!__OFADD__(v32, v6))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  v33 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v33, 1046, 0);
  __break(1u);
  return result;
}

double sub_100036D2C(uint64_t a1)
{
  uint64_t v1;

  return sub_100032FB8(a1, *(void **)(v1 + 16));
}

uint64_t sub_100036D34(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_100036D4C()
{
  return sub_10003294C();
}

void sub_100036D70(unsigned __int8 a1)
{
  uint64_t v1;

  sub_1000301AC(a1, *(char **)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_100036D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100036DC0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100036DFC(char a1)
{
  uint64_t v1;

  sub_100030264(a1 & 1, *(void **)(v1 + 16));
}

uint64_t sub_100036E08(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100030334(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_100036E10()
{
  uint64_t v0;

  return sub_1000305A4(*(_QWORD *)(v0 + 16));
}

id sub_100036E1C()
{
  uint64_t v0;

  return sub_10004F1D4(*(void **)(v0 + 16));
}

uint64_t sub_100036E24()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

id sub_100036E68(char a1)
{
  uint64_t v1;

  return sub_100033754(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t (**)(_QWORD))(v1 + 40));
}

void sub_100036E78()
{
  sub_100032F78();
}

void sub_100036E80()
{
  uint64_t v0;

  sub_100032D5C(*(char **)(v0 + 16));
}

uint64_t sub_100036E88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100036EAC()
{
  uint64_t v0;

  return sub_100032EC8(*(void **)(v0 + 16));
}

uint64_t sub_100036EB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100036ED8()
{
  return sub_100032B68();
}

void sub_100036EFC()
{
  uint64_t v0;

  sub_100032968(*(char **)(v0 + 16));
}

double sub_100036F04()
{
  uint64_t v0;

  return sub_100032AD4(*(void **)(v0 + 16));
}

uint64_t sub_100036F10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100036F34()
{
  uint64_t v0;

  sub_100030BAC(*(_BYTE *)(v0 + 16));
}

uint64_t sub_100036F40()
{
  uint64_t v0;

  return sub_1000311E8(*(char **)(v0 + 16));
}

uint64_t sub_100036F48()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100036F6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100036F98(uint64_t a1)
{
  uint64_t v1;

  sub_100031408(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_100036FA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100035CA4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100036FDC(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_100037010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037054()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100037088()
{
  uint64_t v0;

  sub_1000C70CC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(id *)(v0 + 32), *(_BYTE *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1000370A0(char a1)
{
  uint64_t v1;

  return sub_1000324D8(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000370A8(char a1, char a2)
{
  uint64_t v2;

  return sub_10008D284(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_1000370B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1000370EC()
{
  uint64_t v0;

  sub_1000326B8(*(_BYTE *)(v0 + 16));
}

uint64_t sub_1000370F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100037118(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100037150(char a1)
{
  return sub_1000309CC(a1);
}

double sub_100037170(uint64_t a1)
{
  uint64_t v1;

  return sub_100033350(a1, *(void **)(v1 + 16));
}

uint64_t sub_100037180()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

BOOL sub_1000372F8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_10003730C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

_QWORD *sub_100037320(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

Swift::Int sub_100037334()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100037378()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1000373A0(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

_QWORD *sub_1000373E0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

void sub_100037480()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  unint64_t v5;
  id v6;
  id v7;
  objc_super v8;
  _OWORD v9[2];
  uint64_t v10;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for DeviceInformationView();
  objc_msgSendSuper2(&v8, "tintColorDidChange");
  v1 = objc_msgSend(v0, "tintAdjustmentMode");
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton];
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  if (v1 == (id)2)
  {
    v3 = sub_10009E1FC((uint64_t)v9, 3uLL);
    objc_msgSend(v2, "setImage:forState:", v3, 0);

    v4 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton];
    v5 = 1;
  }
  else
  {
    v6 = sub_10009E1FC((uint64_t)v9, 2uLL);
    objc_msgSend(v2, "setImage:forState:", v6, 0);

    v4 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton];
    v5 = 0;
  }
  v7 = sub_10009E1FC((uint64_t)v9, v5);
  objc_msgSend(v4, "setImage:forState:", v7, 0);

}

void sub_1000375D4()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  int v48;
  void **v49;
  uint64_t v50;
  void ***v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  int v61;
  void **v62;
  uint64_t v63;
  void ***v64;
  uint64_t v65;
  void *v66;
  void **v67;
  NSString v68;
  double v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  char isEscapingClosureAtFileLocation;
  uint64_t v83;
  void **aBlock;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  void *v87;
  uint64_t (*v88)();
  uint64_t v89;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_state];
  if (!v1)
    return;
  v2 = v0;
  v3 = swift_retain(v1);
  sub_100051EFC(v3, v2);

  v4 = objc_msgSend(*(id *)(v1 + 40), "serialNumber");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_serialNumber];
  v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_serialNumber + 8];
  *v8 = v5;
  v8[1] = v7;
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel];
  v11 = v8[1];
  if (v11)
  {
    swift_bridgeObjectRetain(v8[1]);
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v10, "setText:", v12);

  v13 = objc_msgSend(*(id *)(v1 + 40), "attributes");
  v14 = sub_100035CA4((uint64_t *)&unk_10016ACD0);
  v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, v14, &protocol witness table for String);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("enclosure"));
  v18 = v17;
  if (*(_QWORD *)(v15 + 16) && (v19 = sub_100072A94(v16, v17), (v20 & 1) != 0))
  {
    v21 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v19);
    swift_unknownObjectRetain(v21);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v15);
    v83 = v21;
    if ((swift_dynamicCast(&aBlock, &v83, v14, &type metadata for String, 6) & 1) == 0)
      goto LABEL_16;
    v23 = (uint64_t)aBlock;
    v22 = (void *)v85;
    v24 = objc_msgSend(*(id *)(v1 + 40), "attributes");
    v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v24, &type metadata for String, v14, &protocol witness table for String);

    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("size"));
    v27 = v26;
    if (*(_QWORD *)(v15 + 16))
    {
      v28 = sub_100072A94(v25, v26);
      if ((v29 & 1) != 0)
      {
        v30 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v28);
        swift_unknownObjectRetain(v30);
        swift_bridgeObjectRelease(v27);
        swift_bridgeObjectRelease(v15);
        v83 = v30;
        if ((swift_dynamicCast(&aBlock, &v83, v14, &type metadata for String, 6) & 1) != 0)
        {
          v31 = (uint64_t)aBlock;
          v32 = (void *)v85;
          v33 = sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, v23, v22);
          v35 = v34;
          swift_bridgeObjectRelease(v22);
          v36 = sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, v31, v32);
          v22 = v37;
          swift_bridgeObjectRelease(v32);
          sub_10003C3A4(v33, v35, v36, v22);
          swift_bridgeObjectRelease(v35);
        }
        v38 = (uint64_t)v22;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease(v22);
    v39 = v27;
  }
  else
  {
    v39 = v18;
  }
  swift_bridgeObjectRelease(v39);
  v38 = v15;
LABEL_15:
  swift_bridgeObjectRelease(v38);
LABEL_16:
  v40 = objc_msgSend(*(id *)(v1 + 40), "attributes");
  v41 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v40, &type metadata for String, v14, &protocol witness table for String);

  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("IMEI"));
  v44 = v43;
  if (*(_QWORD *)(v41 + 16) && (v45 = sub_100072A94(v42, v43), (v46 & 1) != 0))
  {
    v47 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v45);
    swift_unknownObjectRetain(v47);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v41);
    v83 = v47;
    v48 = swift_dynamicCast(&aBlock, &v83, v14, &type metadata for String, 6);
    v49 = aBlock;
    v50 = v85;
    if (!v48)
    {
      v49 = 0;
      v50 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v41);
    v49 = 0;
    v50 = 0;
  }
  v51 = (void ***)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei];
  v52 = *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei + 8];
  *v51 = v49;
  v51[1] = (void **)v50;
  swift_bridgeObjectRelease(v52);
  v53 = objc_msgSend(*(id *)(v1 + 40), "attributes");
  v54 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v53, &type metadata for String, v14, &protocol witness table for String);

  v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("marketingName"));
  v57 = v56;
  if (*(_QWORD *)(v54 + 16) && (v58 = sub_100072A94(v55, v56), (v59 & 1) != 0))
  {
    v60 = *(_QWORD *)(*(_QWORD *)(v54 + 56) + 8 * v58);
    swift_unknownObjectRetain(v60);
    swift_bridgeObjectRelease(v57);
    swift_bridgeObjectRelease(v54);
    v83 = v60;
    v61 = swift_dynamicCast(&aBlock, &v83, v14, &type metadata for String, 6);
    v62 = aBlock;
    v63 = v85;
    if (!v61)
    {
      v62 = 0;
      v63 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v57);
    swift_bridgeObjectRelease(v54);
    v62 = 0;
    v63 = 0;
  }
  v64 = (void ***)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingName];
  v65 = *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingName + 8];
  *v64 = v62;
  v64[1] = (void **)v63;
  swift_bridgeObjectRelease(v65);
  v66 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel];
  v67 = v64[1];
  if (v67)
  {
    swift_bridgeObjectRetain(v67);
    v68 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v67);
  }
  else
  {
    v68 = 0;
  }
  objc_msgSend(v66, "setText:", v68);

  objc_msgSend(v66, "frame");
  objc_msgSend(v66, "setPreferredMaxLayoutWidth:", v69);
  v70 = objc_msgSend(*(id *)(v1 + 40), "sessionSettings");
  v71 = objc_msgSend(v70, "deviceIdentifier");

  v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
  v74 = v73;

  sub_100037D74(v72, v74);
  v75 = objc_msgSend(*(id *)(v1 + 40), "sessionSettings");
  LOBYTE(v71) = objc_msgSend(v75, "displayDeviceIdentifier");

  v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierVisible] = (char)v71;
  sub_100037FA4();
  sub_10003AB78();
  sub_1000383B0(*(_QWORD *)(v1 + 24));
  v76 = (void *)objc_opt_self(UIView);
  v77 = swift_allocObject(&unk_100135200, 24, 7);
  *(_QWORD *)(v77 + 16) = v2;
  v78 = swift_allocObject(&unk_100135228, 32, 7);
  *(_QWORD *)(v78 + 16) = sub_10003CDBC;
  *(_QWORD *)(v78 + 24) = v77;
  v88 = sub_10003CDD4;
  v89 = v78;
  aBlock = _NSConcreteStackBlock;
  v85 = 1107296256;
  v86 = sub_100048E58;
  v87 = &unk_100135240;
  v79 = _Block_copy(&aBlock);
  v80 = v89;
  v81 = v2;
  swift_retain(v78);
  objc_msgSend(v76, "performWithoutAnimation:", v79, swift_release(v80).n128_f64[0]);
  swift_release(v1);
  _Block_release(v79);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v78, "", 99, 113, 44, 1);
  swift_release(v77);
  swift_release(v78);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_100037CD8(void *a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView) = a1;
  v3 = a1;

  sub_10003845C();
}

uint64_t sub_100037D24(uint64_t result)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(result
                                      + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler);
  if (v1)
  {
    v2 = *(_QWORD *)(result + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler + 8);
    v3 = swift_retain(v2);
    v1(v3);
    return sub_100035D74((uint64_t)v1, v2);
  }
  return result;
}

uint64_t sub_100037D74(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  _QWORD *v31;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v3[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifier];
  v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifier + 8];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  result = swift_bridgeObjectRelease(v14);
  v16 = *((_QWORD *)v13 + 1);
  if (v16)
  {
    v17 = *(_QWORD *)v13;
    sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
    v18 = swift_bridgeObjectRetain(v16);
    v19 = (void *)static OS_dispatch_queue.main.getter(v18);
    v20 = (_QWORD *)swift_allocObject(&unk_1001356D8, 40, 7);
    v20[2] = v3;
    v20[3] = v17;
    v20[4] = v16;
    aBlock[4] = sub_10003CF48;
    v31 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100030658;
    aBlock[3] = &unk_1001356F0;
    v21 = _Block_copy(aBlock);
    v22 = v31;
    v23 = v3;
    v24 = swift_release(v22);
    static DispatchQoS.unspecified.getter(v24);
    aBlock[0] = _swiftEmptyArrayStorage;
    v25 = sub_10002F158((unint64_t *)&qword_10016B5F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v26 = sub_100035CA4((uint64_t *)&unk_10016AD10);
    v27 = sub_100035CE4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v6, v25);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return result;
}

void sub_100037FA4()
{
  uint64_t v0;
  int v1;
  void *v2;
  double v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  double v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  double v21;
  void *v22;
  uint64_t v23;
  void **v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  id (*v28)();
  uint64_t v29;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierVisible);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel);
  objc_msgSend(v2, "alpha");
  if (v1 == 1)
  {
    if (v3 == 0.0)
    {
      v4 = swift_allocObject(&unk_100135368, 24, 7);
      *(_QWORD *)(v4 + 16) = v2;
      v5 = (void *)objc_opt_self(UIView);
      v28 = sub_1000372B8;
      v29 = v4;
      v24 = _NSConcreteStackBlock;
      v25 = 1107296256;
      v26 = sub_100030658;
      v27 = &unk_100135380;
      v6 = _Block_copy(&v24);
      v7 = v29;
      v8 = v2;
      swift_retain(v4);
      swift_release(v7);
      objc_msgSend(v5, "animateWithDuration:delay:options:animations:completion:", 0x10000, v6, 0, 0.375, 0.0);
      _Block_release(v6);
      swift_release(v4);
    }
    v9 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView);
    objc_msgSend(v9, "alpha");
    if (v10 == 1.0)
    {
      v11 = swift_allocObject(&unk_100135318, 24, 7);
      *(_QWORD *)(v11 + 16) = v9;
      v12 = (void *)objc_opt_self(UIView);
      v28 = sub_10003D030;
      v29 = v11;
      v24 = _NSConcreteStackBlock;
      v25 = 1107296256;
      v26 = sub_100030658;
      v27 = &unk_100135330;
      v13 = _Block_copy(&v24);
      v14 = v29;
      v15 = v9;
      swift_retain(v11);
      swift_release(v14);
      objc_msgSend(v12, "animateWithDuration:delay:options:animations:completion:", 0x20000, v13, 0, 0.125, 0.0);
LABEL_10:
      _Block_release(v13);

      swift_release(v11);
      return;
    }
  }
  else
  {
    if (v3 == 1.0)
    {
      v16 = swift_allocObject(&unk_1001352C8, 24, 7);
      *(_QWORD *)(v16 + 16) = v2;
      v17 = (void *)objc_opt_self(UIView);
      v28 = sub_10003CDF4;
      v29 = v16;
      v24 = _NSConcreteStackBlock;
      v25 = 1107296256;
      v26 = sub_100030658;
      v27 = &unk_1001352E0;
      v18 = _Block_copy(&v24);
      v19 = v29;
      v20 = v2;
      swift_retain(v16);
      swift_release(v19);
      objc_msgSend(v17, "animateWithDuration:delay:options:animations:completion:", 0x20000, v18, 0, 0.125, 0.0);
      _Block_release(v18);
      swift_release(v16);
    }
    v9 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView);
    objc_msgSend(v9, "alpha");
    if (v21 == 0.0)
    {
      v11 = swift_allocObject(&unk_100135278, 24, 7);
      *(_QWORD *)(v11 + 16) = v9;
      v22 = (void *)objc_opt_self(UIView);
      v28 = sub_100036E1C;
      v29 = v11;
      v24 = _NSConcreteStackBlock;
      v25 = 1107296256;
      v26 = sub_100030658;
      v27 = &unk_100135290;
      v13 = _Block_copy(&v24);
      v23 = v29;
      v15 = v9;
      swift_retain(v11);
      swift_release(v23);
      objc_msgSend(v22, "animateWithDuration:delay:options:animations:completion:", 0x10000, v13, 0, 0.375, 0.0);
      goto LABEL_10;
    }
  }

}

void sub_1000383B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelType) = a1;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel);
  v3 = &OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_serialNumber;
  if (a1)
    v3 = &OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei;
  v4 = v1 + *v3;
  v5 = *(_QWORD *)(v4 + 8);
  if (v5)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 8));
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v2, "setText:", v6);

}

void sub_10003845C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  Class isa;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView);
  if (!v1)
    return;
  v2 = v1;
  objc_msgSend(v2, "setContentMode:", 2);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
  v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView), "subviews"));
  v5 = sub_100037118(0, (unint64_t *)&qword_10016D860, UIView_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v11 = v6;
    else
      v11 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (v7)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease_n(v6, 2);
    objc_msgSend(*(id *)(v0 + v3), "addSubview:", v2);
    v12 = (void *)objc_opt_self(NSLayoutConstraint);
    v13 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
    v14 = swift_allocObject(v13, 64, 7);
    *(_OWORD *)(v14 + 16) = xmmword_10010BF30;
    v15 = objc_msgSend(v2, "centerYAnchor");
    v16 = objc_msgSend(*(id *)(v0 + v3), "centerYAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

    *(_QWORD *)(v14 + 32) = v17;
    v18 = objc_msgSend(v2, "leadingAnchor");
    v19 = objc_msgSend(*(id *)(v0 + v3), "leadingAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    *(_QWORD *)(v14 + 40) = v20;
    v21 = objc_msgSend(v2, "trailingAnchor");
    v22 = objc_msgSend(*(id *)(v0 + v3), "trailingAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

    *(_QWORD *)(v14 + 48) = v23;
    v24 = objc_msgSend(v2, "heightAnchor");
    v25 = objc_msgSend(v24, "constraintEqualToConstant:", 70.0);

    *(_QWORD *)(v14 + 56) = v25;
    specialized Array._endMutation()(v26);
    sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v14);
    objc_msgSend(v12, "activateConstraints:", isa);

    return;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v6);
  if (!v7)
    goto LABEL_15;
LABEL_4:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      else
        v9 = *(id *)(v6 + 8 * i + 32);
      v10 = v9;
      objc_msgSend(v9, "removeFromSuperview");

    }
    goto LABEL_15;
  }
  __break(1u);
}

id sub_1000387F4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, _QWORD, uint64_t, uint64_t);
  void *v59;
  id v60;
  void *v61;
  objc_class *v62;
  id v63;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  objc_super v71;

  v68 = type metadata accessor for UIShape(0);
  v66 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v65 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100035CA4((uint64_t *)&unk_10016AD20);
  __chkstk_darwin(v10);
  v67 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100035CA4((uint64_t *)&unk_10016E470);
  __chkstk_darwin(v12);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UIButton.Configuration(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v65 - v20;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeMarketingName] = 0x4034000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeDescription] = 0x4028000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeSerialNumber] = 0x402E000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeIDLabel] = 0x4049000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageMinimumWidth] = 0x4049000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageHeight] = 0x4051800000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonAndImageGap] = 0x4008000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_labelsVerticalPadding] = 0x4000000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_labelsHorizontalPadding] = 0x4024000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_buttonWidthHeight] = 0x4046000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonImageBorder] = 0x401C000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonMargin] = 0x4024000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthHeight] = 0x403C000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonHoverInset] = 0x4020000000000000;
  v22 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
  v23 = objc_allocWithZone((Class)UIView);
  v24 = v4;
  *(_QWORD *)&v4[v22] = objc_msgSend(v23, "init");
  v25 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel;
  *(_QWORD *)&v24[v25] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v26 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel;
  *(_QWORD *)&v24[v26] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v27 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel;
  *(_QWORD *)&v24[v27] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v28 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel;
  *(_QWORD *)&v24[v28] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v29 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator;
  *(_QWORD *)&v24[v29] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);
  *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_state] = 0;
  v30 = &v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifier];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierVisible] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelType] = 0;
  v31 = &v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_serialNumber];
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v32 = &v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v33 = &v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingName];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView] = 0;
  v34 = &v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate];
  *(_OWORD *)v34 = 0u;
  *((_OWORD *)v34 + 1) = 0u;
  *((_QWORD *)v34 + 4) = 0;
  v35 = &v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler];
  *(_QWORD *)v35 = 0;
  *((_QWORD *)v35 + 1) = 0;
  v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_hasExplicitHeight] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_contentDependentConstraints] = _swiftEmptyArrayStorage;
  v36 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v37 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v37, "defaultFontSize");
  v38 = objc_msgSend(v37, "systemFontOfSize:");
  v39 = objc_msgSend(v36, "scaledFontForFont:", v38);

  static UIButton.Configuration.plain()();
  v40 = swift_allocObject(&unk_100135750, 24, 7);
  *(_QWORD *)(v40 + 16) = v39;
  v41 = v39;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10003CFA4, v40);
  v42 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v14, 0, 1, v42);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v14);

  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  sub_100037118(0, &qword_10016AD30, UIButton_ptr);
  v70 = v16;
  v43 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v43(v19, v21, v15);
  v44 = UIButton.init(configuration:primaryAction:)(v19, 0);
  v45 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton] = v44;
  v69 = v15;
  v43(v19, v21, v15);
  v46 = UIButton.init(configuration:primaryAction:)(v19, 0);
  v47 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton;
  *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton] = v46;
  v48 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v49 = objc_msgSend(v48, "userInterfaceIdiom");

  if (v49 == (id)6)
  {
    v50 = *(void **)&v24[v45];
    sub_100037118(0, &qword_10016AD38, UIHoverStyle_ptr);
    v51 = v50;
    v52 = v65;
    v53 = static UIShape.circle.getter();
    v54 = v67;
    UIShape.inset(by:)(v53, 8.0);
    v55 = v66;
    v56 = v52;
    v57 = v68;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v56, v68);
    v58 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56);
    v58(v54, 0, 1, v57);
    v59 = (void *)UIHoverStyle.init(shape:)(v54);
    objc_msgSend(v51, "setHoverStyle:", v59);

    v60 = *(id *)&v24[v47];
    static UIShape.circle.getter();
    v58(v54, 0, 1, v57);
    v61 = (void *)UIHoverStyle.init(shape:)(v54);
    objc_msgSend(v60, "setHoverStyle:", v61);

  }
  v62 = (objc_class *)type metadata accessor for DeviceInformationView();
  v71.receiver = v24;
  v71.super_class = v62;
  v63 = objc_msgSendSuper2(&v71, "initWithFrame:", a1, a2, a3, a4);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v21, v69);
  return v63;
}

id sub_100038F0C(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, _QWORD, uint64_t, uint64_t);
  void *v54;
  id v55;
  void *v56;
  objc_class *v57;
  void *v58;
  id v59;
  void (*v60)(char *, uint64_t);
  id v61;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void *v68;
  objc_super v69;

  v68 = a1;
  v67 = type metadata accessor for UIShape(0);
  v65 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v64 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100035CA4((uint64_t *)&unk_10016AD20);
  __chkstk_darwin(v3);
  v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100035CA4((uint64_t *)&unk_10016E470);
  __chkstk_darwin(v5);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0);
  v9 = *(char **)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v63 - v13;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeMarketingName] = 0x4034000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeDescription] = 0x4028000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeSerialNumber] = 0x402E000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeIDLabel] = 0x4049000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageMinimumWidth] = 0x4049000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageHeight] = 0x4051800000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonAndImageGap] = 0x4008000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_labelsVerticalPadding] = 0x4000000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_labelsHorizontalPadding] = 0x4024000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_buttonWidthHeight] = 0x4046000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonImageBorder] = 0x401C000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonMargin] = 0x4024000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthHeight] = 0x403C000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonHoverInset] = 0x4020000000000000;
  v15 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
  v16 = objc_allocWithZone((Class)UIView);
  v17 = v1;
  *(_QWORD *)&v1[v15] = objc_msgSend(v16, "init");
  v18 = v8;
  v19 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel;
  *(_QWORD *)&v17[v19] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v20 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel;
  *(_QWORD *)&v17[v20] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v21 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel;
  *(_QWORD *)&v17[v21] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v22 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel;
  *(_QWORD *)&v17[v22] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v23 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator;
  *(_QWORD *)&v17[v23] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);
  *(_QWORD *)&v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_state] = 0;
  v24 = &v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifier];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierVisible] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelType] = 0;
  v25 = &v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_serialNumber];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v26 = &v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v27 = &v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingName];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView] = 0;
  v28 = &v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate];
  *(_OWORD *)v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  *((_QWORD *)v28 + 4) = 0;
  v29 = &v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_hasExplicitHeight] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_contentDependentConstraints] = _swiftEmptyArrayStorage;
  v30 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v31 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v31, "defaultFontSize");
  v32 = objc_msgSend(v31, "systemFontOfSize:");
  v33 = objc_msgSend(v30, "scaledFontForFont:", v32);

  static UIButton.Configuration.plain()();
  v34 = swift_allocObject(&unk_100135728, 24, 7);
  *(_QWORD *)(v34 + 16) = v33;
  v35 = v33;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10003CF9C, v34);
  v36 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v7, 0, 1, v36);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v7);

  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  sub_100037118(0, &qword_10016AD30, UIButton_ptr);
  v37 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v9 + 2);
  v37(v12, v14, v8);
  v38 = UIButton.init(configuration:primaryAction:)(v12, 0);
  v39 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton] = v38;
  v37(v12, v14, v8);
  v40 = UIButton.init(configuration:primaryAction:)(v12, 0);
  v41 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton] = v40;
  v42 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v43 = objc_msgSend(v42, "userInterfaceIdiom");

  if (v43 == (id)6)
  {
    v44 = *(void **)&v17[v39];
    sub_100037118(0, &qword_10016AD38, UIHoverStyle_ptr);
    v45 = v44;
    v46 = v64;
    v47 = static UIShape.circle.getter();
    v48 = v66;
    UIShape.inset(by:)(v47, 8.0);
    v49 = v65;
    v50 = v46;
    v51 = v67;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v50, v67);
    v64 = v9;
    v52 = v18;
    v53 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56);
    v53(v48, 0, 1, v51);
    v54 = (void *)UIHoverStyle.init(shape:)(v48);
    objc_msgSend(v45, "setHoverStyle:", v54);

    v55 = *(id *)&v17[v41];
    static UIShape.circle.getter();
    v53(v48, 0, 1, v51);
    v18 = v52;
    v9 = v64;
    v56 = (void *)UIHoverStyle.init(shape:)(v48);
    objc_msgSend(v55, "setHoverStyle:", v56);

  }
  v57 = (objc_class *)type metadata accessor for DeviceInformationView();
  v69.receiver = v17;
  v69.super_class = v57;
  v58 = v68;
  v59 = objc_msgSendSuper2(&v69, "initWithCoder:", v68);

  v60 = (void (*)(char *, uint64_t))*((_QWORD *)v9 + 1);
  v61 = v59;
  v60(v14, v18);
  if (v61)

  return v61;
}

id sub_100039628()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  id v37;
  id v38;
  NSString v39;
  id v40;
  unsigned int v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  id v47;
  id v48;
  int v49;
  int v50;
  _OWORD v51[2];
  uint64_t v52;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel);
  v3 = (void *)objc_opt_self(UIFontMetrics);
  v4 = objc_msgSend(v3, "defaultMetrics");
  v5 = (void *)objc_opt_self(UIFont);
  v6 = objc_msgSend(v5, "boldSystemFontOfSize:", 20.0);
  v7 = objc_msgSend(v4, "scaledFontForFont:", v6);

  v8 = v2;
  objc_msgSend(v2, "setFont:", v7);

  v47 = v2;
  objc_msgSend(v2, "setNumberOfLines:", 0);
  v9 = (void *)objc_opt_self(UIColor);
  v10 = objc_msgSend(v9, "labelColor");
  objc_msgSend(v8, "setTextColor:", v10);

  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel);
  v12 = objc_msgSend(v3, "defaultMetrics");
  v13 = objc_msgSend(v5, "systemFontOfSize:", 12.0);
  v14 = objc_msgSend(v12, "scaledFontForFont:", v13);

  objc_msgSend(v11, "setFont:", v14);
  objc_msgSend(v11, "setNumberOfLines:", 2);
  v15 = objc_msgSend(v9, "labelColor");
  objc_msgSend(v11, "setTextColor:", v15);

  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel);
  v17 = objc_msgSend(v3, "defaultMetrics");
  v18 = objc_msgSend(v5, "systemFontOfSize:", 15.0);
  v19 = objc_msgSend(v17, "scaledFontForFont:", v18);

  objc_msgSend(v16, "setFont:", v19);
  objc_msgSend(v16, "setLineBreakMode:", 2);
  objc_msgSend(v16, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v16, "setUserInteractionEnabled:", 1);
  v20 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "infoLabelTapped");
  objc_msgSend(v16, "addGestureRecognizer:", v20);

  v21 = objc_msgSend(v9, "labelColor");
  objc_msgSend(v16, "setTextColor:", v21);

  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v22 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView), "setContentMode:", 2);
  objc_msgSend(*(id *)(v1 + v22), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v23 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel);
  objc_msgSend(v23, "setTextAlignment:", 1);
  v24 = objc_msgSend(v3, "defaultMetrics");
  v25 = objc_msgSend(v5, "boldSystemFontOfSize:", 50.0);
  v26 = objc_msgSend(v24, "scaledFontForFont:", v25);

  objc_msgSend(v23, "setFont:", v26);
  objc_msgSend(v23, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v23, "setBaselineAdjustment:", 1);
  v27 = 0.0;
  objc_msgSend(v23, "setAlpha:", 0.0);
  v48 = v9;
  v28 = objc_msgSend(v9, "labelColor");
  objc_msgSend(v23, "setTextColor:", v28);

  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  type metadata accessor for UILayoutPriority(0);
  v30 = v29;
  v49 = 1065353216;
  v50 = 1132068864;
  v31 = sub_10002F158(&qword_10016ACF8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)(v51, &v50, &v49, v30, v31);
  LODWORD(v32) = v51[0];
  objc_msgSend(v47, "setContentHuggingPriority:forAxis:", 0, v32);
  v49 = 1065353216;
  v50 = 1132068864;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(v51, &v50, &v49, v30, v31);
  LODWORD(v33) = v51[0];
  objc_msgSend(v11, "setContentHuggingPriority:forAxis:", 0, v33);
  v49 = 1065353216;
  v50 = 1132068864;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(v51, &v50, &v49, v30, v31);
  LODWORD(v34) = v51[0];
  objc_msgSend(v16, "setContentHuggingPriority:forAxis:", 0, v34);
  v49 = 1065353216;
  v50 = 1132068864;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(v51, &v50, &v49, v30, v31);
  LODWORD(v35) = v51[0];
  objc_msgSend(v23, "setContentHuggingPriority:forAxis:", 0, v35);
  v36 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton);
  objc_msgSend(v36, "addTarget:action:forControlEvents:", v1, "addButtonPressedWithSender:", 64);
  v52 = 0;
  memset(v51, 0, sizeof(v51));
  v37 = sub_10009E1FC((uint64_t)v51, 0);
  objc_msgSend(v36, "setImage:forState:", v37, 0);

  objc_msgSend(v36, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v38 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v39 = String._bridgeToObjectiveC()();
  LOBYTE(v31) = objc_msgSend(v38, "BOOLForKey:", v39);

  if ((v31 & 1) == 0)
  {
    v40 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
    v41 = objc_msgSend(v40, "isInBoxUpdateModeActive");
    swift_unknownObjectRelease(v40);
    if (v41)
      v27 = 0.0;
    else
      v27 = 1.0;
  }
  objc_msgSend(v36, "setAlpha:", v27);
  v42 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton);
  objc_msgSend(v42, "addTarget:action:forControlEvents:", v1, "ellipsisButtonPressedWithSender:", 64);
  v43 = sub_10009E1FC((uint64_t)v51, 2uLL);
  objc_msgSend(v42, "setImage:forState:", v43, 0);

  objc_msgSend(v42, "setAlpha:", 0.0);
  objc_msgSend(v42, "setContentVerticalAlignment:", 0);
  objc_msgSend(v42, "setContentHorizontalAlignment:", 0);
  objc_msgSend(v42, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v44 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator);
  v45 = objc_msgSend(v48, "labelColor");
  objc_msgSend(v44, "setColor:", v45);

  objc_msgSend(v44, "setAlpha:", 0.0);
  objc_msgSend(v44, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return objc_msgSend(v44, "startAnimating");
}

id sub_100039E44()
{
  char *v0;

  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton]);
  return objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator]);
}

void sub_100039F1C()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  char *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  double v87;
  double v88;
  double v89;
  char *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  id v99;
  unint64_t v100;
  unint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  Class isa;

  v1 = v0;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel], "bottomAnchor");
  v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel];
  v4 = objc_msgSend(v3, "topAnchor");
  v5 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v4, -1.0);

  v6 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint] = v5;
  v7 = v5;

  v8 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel];
  v9 = objc_msgSend(v8, "topAnchor");
  v10 = objc_msgSend(v3, "bottomAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, 1.0);

  v12 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint] = v11;
  v112 = v11;

  v113 = *(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton];
  v13 = objc_msgSend(v113, "widthAnchor");
  v14 = objc_msgSend(v13, "constraintEqualToConstant:", 44.0);

  v15 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint] = v14;
  v107 = v14;

  v109 = *(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton];
  v16 = objc_msgSend(v109, "widthAnchor");
  v17 = objc_msgSend(v16, "constraintEqualToConstant:", 44.0);

  v18 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint] = v17;
  v110 = v17;

  v19 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
  v20 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView], "widthAnchor");
  v21 = objc_msgSend(v20, "constraintEqualToConstant:", 50.0);

  v22 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v23 = swift_allocObject(v22, 200, 7);
  *(_OWORD *)(v23 + 16) = xmmword_10010BF40;
  *(_QWORD *)(v23 + 32) = v7;
  v106 = v7;
  v24 = objc_msgSend(v8, "bottomAnchor");
  v25 = objc_msgSend(v1, "bottomAnchor");
  v26 = objc_msgSend(v24, "constraintLessThanOrEqualToAnchor:constant:", v25, -15.0);

  *(_QWORD *)(v23 + 40) = v26;
  v27 = objc_msgSend(v8, "trailingAnchor");
  v28 = objc_msgSend(v1, "trailingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, -15.0);

  *(_QWORD *)(v23 + 48) = v29;
  v30 = objc_msgSend(v3, "trailingAnchor");
  v31 = objc_msgSend(v1, "trailingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v31, -15.0);

  *(_QWORD *)(v23 + 56) = v32;
  v33 = objc_msgSend(*(id *)&v1[v19], "leadingAnchor");
  v34 = objc_msgSend(v113, "trailingAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v23 + 64) = v35;
  *(_QWORD *)(v23 + 72) = v21;
  v36 = *(void **)&v1[v19];
  v105 = v21;
  v37 = objc_msgSend(v36, "heightAnchor");
  v38 = objc_msgSend(v37, "constraintEqualToConstant:", 70.0);

  *(_QWORD *)(v23 + 80) = v38;
  v39 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel];
  v40 = objc_msgSend(v39, "topAnchor");
  v41 = objc_msgSend(*(id *)&v1[v19], "topAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v23 + 88) = v42;
  v43 = objc_msgSend(v39, "bottomAnchor");
  v44 = objc_msgSend(*(id *)&v1[v19], "bottomAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  *(_QWORD *)(v23 + 96) = v45;
  v46 = objc_msgSend(v39, "leadingAnchor");
  v47 = objc_msgSend(*(id *)&v1[v19], "leadingAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

  *(_QWORD *)(v23 + 104) = v48;
  v49 = objc_msgSend(v39, "trailingAnchor");
  v50 = objc_msgSend(*(id *)&v1[v19], "trailingAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v23 + 112) = v51;
  v52 = objc_msgSend(v113, "centerYAnchor");
  v53 = objc_msgSend(*(id *)&v1[v19], "centerYAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v23 + 120) = v54;
  *(_QWORD *)(v23 + 128) = v107;
  v108 = v107;
  v55 = objc_msgSend(v113, "heightAnchor");
  v56 = objc_msgSend(v113, "widthAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v23 + 136) = v57;
  v58 = objc_msgSend(v109, "topAnchor");
  v59 = objc_msgSend(v1, "topAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:constant:", v59, 10.0);

  *(_QWORD *)(v23 + 144) = v60;
  v61 = objc_msgSend(v109, "trailingAnchor");
  v62 = objc_msgSend(v1, "trailingAnchor");
  v63 = objc_msgSend(v61, "constraintEqualToAnchor:constant:", v62, -10.0);

  *(_QWORD *)(v23 + 152) = v63;
  *(_QWORD *)(v23 + 160) = v110;
  v111 = v110;
  v64 = objc_msgSend(v109, "heightAnchor");
  v65 = objc_msgSend(v109, "widthAnchor");
  v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

  *(_QWORD *)(v23 + 168) = v66;
  v67 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator];
  v68 = objc_msgSend(v67, "centerXAnchor");
  v69 = objc_msgSend(v113, "centerXAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:constant:", v69, 1.0);

  *(_QWORD *)(v23 + 176) = v70;
  v71 = objc_msgSend(v67, "centerYAnchor");
  v72 = objc_msgSend(v113, "centerYAnchor");
  v73 = objc_msgSend(v71, "constraintEqualToAnchor:constant:", v72, 1.0);

  *(_QWORD *)(v23 + 184) = v73;
  v74 = objc_msgSend(v67, "widthAnchor");
  v75 = objc_msgSend(v113, "widthAnchor");
  v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

  *(_QWORD *)(v23 + 192) = v76;
  specialized Array._endMutation()(v77);
  v78 = v23;
  v79 = *(void **)&v1[v19];
  v80 = (char *)v112;
  v81 = objc_msgSend(v79, "bottomAnchor");
  v82 = objc_msgSend(v1, "bottomAnchor");
  v83 = objc_msgSend(v81, "constraintLessThanOrEqualToAnchor:constant:", v82, -15.0);

  v84 = objc_msgSend(v113, "leadingAnchor");
  v85 = objc_msgSend(v1, "leadingAnchor");
  v86 = objc_msgSend(v84, "constraintEqualToAnchor:constant:", v85, 8.0);

  LODWORD(v87) = 1148829696;
  objc_msgSend(v80, "setPriority:", v87);
  LODWORD(v88) = 1148829696;
  objc_msgSend(v83, "setPriority:", v88);
  LODWORD(v89) = 1148829696;
  objc_msgSend(v86, "setPriority:", v89);
  if ((unint64_t)v78 >> 62)
  {
    if (v78 < 0)
      v104 = v78;
    else
      v104 = v78 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v78);
    v90 = (char *)_CocoaArrayWrapper.endIndex.getter(v104);
    v92 = (uint64_t)(v90 + 3);
    if (!__OFADD__(v90, 3))
    {
LABEL_3:
      v93 = sub_1000BD6DC(v92, 1);
      specialized Array._endMutation()(v93);
      v90 = v80;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v90);
      v80 = *(char **)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v91 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v80 < v91 >> 1)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else
  {
    v90 = *(char **)((v78 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v78);
    v92 = (uint64_t)(v90 + 3);
    if (!__OFADD__(v90, 3))
      goto LABEL_3;
  }
  __break(1u);
LABEL_15:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v91 > 1, v80 + 1, 1);
LABEL_4:
  v94 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v90);
  specialized Array._endMutation()(v94);
  v95 = v83;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v95);
  v97 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v96 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v97 >= v96 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v96 > 1, v97 + 1, 1);
  v98 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v97, v95);
  specialized Array._endMutation()(v98);
  v99 = v86;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v99);
  v101 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v100 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v101 >= v100 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v100 > 1, v101 + 1, 1);
  v102 = (void *)objc_opt_self(NSLayoutConstraint);
  v103 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v101, v99);
  specialized Array._endMutation()(v103);

  swift_bridgeObjectRelease(v78);
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v78);
  objc_msgSend(v102, "activateConstraints:", isa);

}

void sub_10003AB78()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  Class isa;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  char **v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  double v54;
  double v55;
  double v56;
  double v57;
  void *v58;
  double v59;
  double v60;
  id v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  id v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  Class v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  _BYTE v124[24];
  char v125[24];

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_contentDependentConstraints];
  swift_beginAccess(v2, v125, 1, 0);
  v3 = *v2;
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v1, "removeConstraints:", isa);

  v5 = *v2;
  *v2 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v5);
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v7 = objc_msgSend(v6, "preferredContentSizeCategory");

  LOBYTE(v6) = UIContentSizeCategory.isAccessibilityCategory.getter(v7);
  v8 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel];
  v9 = &selRef_setFill;
  if ((v6 & 1) != 0)
  {
    v10 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel], "topAnchor");
    v11 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
    v12 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView], "bottomAnchor");
    v123 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v12, 2.0);

    v13 = objc_msgSend(v8, "leadingAnchor");
    v14 = objc_msgSend(v1, "leadingAnchor");
    v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, 15.0);

    v16 = objc_msgSend(v8, "trailingAnchor");
    v17 = objc_msgSend(v1, "trailingAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, -15.0);

    v19 = objc_msgSend(*(id *)&v1[v11], "topAnchor");
    v20 = objc_msgSend(v1, "topAnchor");
    v21 = objc_msgSend(v19, "constraintEqualToAnchor:constant:", v20, 15.0);

    v22 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel], "leadingAnchor");
    v23 = objc_msgSend(v1, "leadingAnchor");
    v24 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, 15.0);

    v25 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel], "leadingAnchor");
    v26 = objc_msgSend(v1, "leadingAnchor");
    v27 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v26, 15.0);

    swift_beginAccess(v2, v124, 33, 0);
    v28 = *v2;
    if ((unint64_t)*v2 >> 62)
    {
      if (v28 < 0)
        v113 = *v2;
      else
        v113 = v28 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v2);
      v30 = (id)_CocoaArrayWrapper.endIndex.getter(v113);
      swift_bridgeObjectRelease(v28);
      v31 = (uint64_t)v30 + 6;
      if (!__OFADD__(v30, 6))
      {
LABEL_4:
        v32 = sub_1000BD6DC(v31, 1);
        specialized Array._endMutation()(v32);
        v30 = v123;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        v28 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v29 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v28 < v29 >> 1)
        {
LABEL_5:
          v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v30);
          specialized Array._endMutation()(v33);
          v34 = v15;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
          v36 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v35 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v36 >= v35 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
          v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
          specialized Array._endMutation()(v37);
          v38 = v18;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
          v40 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v39 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v40 >= v39 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
          v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
          specialized Array._endMutation()(v41);
          v42 = v21;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
          v44 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v43 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v44 >= v43 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
          v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
          specialized Array._endMutation()(v45);
          v46 = v24;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
          v48 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v47 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v48 >= v47 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
          v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v46);
          specialized Array._endMutation()(v49);
          v50 = v27;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
          v52 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v51 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v52 >= v51 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
          v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
          specialized Array._endMutation()(v53);
          swift_endAccess(v124);

LABEL_39:
          v110 = (void *)objc_opt_self(NSLayoutConstraint);
          v111 = *v2;
          swift_bridgeObjectRetain(v111);
          v112 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v111);
          objc_msgSend(v110, "activateConstraints:", v112);

          return;
        }
LABEL_46:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v28 + 1, 1);
        goto LABEL_5;
      }
    }
    else
    {
      v29 = v28 & 0xFFFFFFFFFFFFF8;
      v30 = *(id *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      v31 = (uint64_t)v30 + 6;
      if (!__OFADD__(v30, 6))
        goto LABEL_4;
    }
    __break(1u);
    goto LABEL_46;
  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel], "intrinsicContentSize");
  v55 = v54;
  v122 = *(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel];
  objc_msgSend(v122, "intrinsicContentSize");
  v57 = v55 + v56;
  v58 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel];
  objc_msgSend(v58, "intrinsicContentSize");
  v60 = v57 + v59 + 2.0;
  v61 = objc_msgSend(v8, "topAnchor");
  v62 = (uint64_t)objc_msgSend(v1, "topAnchor");
  if (v60 > 70.0)
  {
    v63 = objc_msgSend(v61, "constraintEqualToAnchor:constant:", v62, 15.0);

    v64 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView], "topAnchor");
    v65 = objc_msgSend(v1, "topAnchor");
    v61 = objc_msgSend(v64, "constraintGreaterThanOrEqualToAnchor:constant:", v65, 15.0);

    swift_beginAccess(v2, v124, 33, 0);
    v62 = *v2;
    if ((unint64_t)*v2 >> 62)
    {
      if (v62 < 0)
        v116 = *v2;
      else
        v116 = v62 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v2);
      v9 = (char **)_CocoaArrayWrapper.endIndex.getter(v116);
      swift_bridgeObjectRelease(v62);
      v66 = (uint64_t)v9 + 2;
      if (!__OFADD__(v9, 2))
        goto LABEL_23;
    }
    else
    {
      v9 = *(char ***)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
      v66 = (uint64_t)v9 + 2;
      if (!__OFADD__(v9, 2))
        goto LABEL_23;
    }
    __break(1u);
  }
  v63 = objc_msgSend(v61, "constraintGreaterThanOrEqualToAnchor:constant:", v62, 15.0);

  v67 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView], v9[506]);
  v68 = objc_msgSend(v1, v9[506]);
  v61 = objc_msgSend(v67, "constraintEqualToAnchor:constant:", v68, 15.0);

  swift_beginAccess(v2, v124, 33, 0);
  v69 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    if (v69 < 0)
      v117 = *v2;
    else
      v117 = v69 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v118 = _CocoaArrayWrapper.endIndex.getter(v117);
    swift_bridgeObjectRelease(v69);
    v66 = v118 + 2;
    if (__OFADD__(v118, 2))
      goto LABEL_65;
LABEL_23:
    v71 = sub_1000BD6DC(v66, 1);
    specialized Array._endMutation()(v71);
    v72 = v63;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v72);
    v74 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v73 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v74 >= v73 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v74 + 1, 1);
    v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v74, v72);
    specialized Array._endMutation()(v75);
    v76 = v61;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v76);
    v78 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v77 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v78 >= v77 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v77 > 1, v78 + 1, 1);
    v79 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v78, v76);
    specialized Array._endMutation()(v79);
    swift_endAccess(v124);

    v80 = objc_msgSend(v8, "leadingAnchor");
    v81 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
    v82 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView], "trailingAnchor");
    v121 = objc_msgSend(v80, "constraintEqualToAnchor:constant:", v82, 10.0);

    v83 = objc_msgSend(v8, "trailingAnchor");
    v84 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton], "leadingAnchor");
    v120 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

    v85 = objc_msgSend(v122, "centerYAnchor");
    v86 = objc_msgSend(*(id *)&v1[v81], "centerYAnchor");
    v119 = objc_msgSend(v85, "constraintEqualToAnchor:", v86);

    v50 = objc_msgSend(v122, "leadingAnchor");
    v87 = objc_msgSend(*(id *)&v1[v81], "trailingAnchor");
    v88 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v87, 10.0);

    v89 = objc_msgSend(v58, "leadingAnchor");
    v90 = objc_msgSend(*(id *)&v1[v81], "trailingAnchor");
    v91 = objc_msgSend(v89, "constraintEqualToAnchor:constant:", v90, 10.0);

    swift_beginAccess(v2, v124, 33, 0);
    v92 = *v2;
    if ((unint64_t)*v2 >> 62)
    {
      if (v92 < 0)
        v114 = *v2;
      else
        v114 = v92 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v2);
      v115 = _CocoaArrayWrapper.endIndex.getter(v114);
      swift_bridgeObjectRelease(v92);
      v95 = v115 + 5;
      if (!__OFADD__(v115, 5))
      {
LABEL_29:
        v96 = sub_1000BD6DC(v95, 1);
        specialized Array._endMutation()(v96);
        v50 = v121;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
        v92 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v93 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v92 < v93 >> 1)
        {
LABEL_30:
          v97 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v92, v50);
          specialized Array._endMutation()(v97);
          v34 = v120;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
          v99 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v98 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v99 >= v98 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v98 > 1, v99 + 1, 1);
          v100 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v34);
          specialized Array._endMutation()(v100);
          v38 = v119;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
          v102 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v101 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v102 >= v101 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v101 > 1, v102 + 1, 1);
          v103 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v102, v38);
          specialized Array._endMutation()(v103);
          v42 = v88;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
          v105 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v104 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v105 >= v104 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v104 > 1, v105 + 1, 1);
          v106 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v105, v42);
          specialized Array._endMutation()(v106);
          v46 = v91;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
          v108 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v107 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v108 >= v107 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v107 > 1, v108 + 1, 1);
          v109 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v108, v46);
          specialized Array._endMutation()(v109);
          swift_endAccess(v124);
          goto LABEL_39;
        }
LABEL_53:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v93 > 1, v92 + 1, 1);
        goto LABEL_30;
      }
    }
    else
    {
      v93 = v92 & 0xFFFFFFFFFFFFF8;
      v94 = *(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10);
      v95 = v94 + 5;
      if (!__OFADD__(v94, 5))
        goto LABEL_29;
    }
    __break(1u);
    goto LABEL_53;
  }
  v70 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
  v66 = v70 + 2;
  if (!__OFADD__(v70, 2))
    goto LABEL_23;
LABEL_65:
  __break(1u);
}

double sub_10003B870(uint64_t a1, uint64_t a2, double result)
{
  char v4;
  id v5;
  NSString v6;
  unsigned __int8 v7;
  double v8;
  id v9;
  unsigned int v10;
  char v11;

  if (a2)
  {
    v4 = a2;
    result = sub_10003B9C0(a2, 0, result);
    if ((v4 & 5) != 0)
      result = sub_10003C028();
    if ((v4 & 2) != 0)
      result = sub_10003C27C();
  }
  if (a1)
  {
    v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "BOOLForKey:", v6);

    if ((v7 & 1) != 0
      || (v9 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform"),
          v10 = objc_msgSend(v9, "isInBoxUpdateModeActive"),
          swift_unknownObjectRelease(v9),
          v10))
    {
      v11 = a1 & 0xFE;
      if ((a1 & 2) != 0)
        v11 = (v11 ^ 2) & a1;
    }
    else
    {
      v11 = a1;
    }
    result = sub_10003B9C0(v11, 1, v8);
    if ((v11 & 5) != 0)
      result = sub_10003BEF4();
    if ((v11 & 2) != 0)
      return sub_10003C150();
  }
  return result;
}

double sub_10003B9C0(char a1, char a2, double result)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  void **v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  id (*v39)();
  uint64_t v40;

  if ((a1 & 1) != 0)
  {
    v6 = *(void **)(v3 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton);
    objc_msgSend(v6, "alpha");
    if ((a2 & 1) != 0)
    {
      if (result != 0.0)
        goto LABEL_8;
      v7 = swift_allocObject(&unk_100135688, 24, 7);
      *(_QWORD *)(v7 + 16) = v6;
      v8 = (void *)objc_opt_self(UIView);
      v39 = sub_1000372B8;
      v40 = v7;
      v35 = _NSConcreteStackBlock;
      v36 = 1107296256;
      v37 = sub_100030658;
      v38 = &unk_1001356A0;
      v9 = _Block_copy(&v35);
      v10 = v40;
      v11 = v6;
      swift_retain(v7);
      swift_release(v10);
      objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 0x10000, v9, 0, 0.375, 0.0);
    }
    else
    {
      if (result != 1.0)
        goto LABEL_8;
      v7 = swift_allocObject(&unk_100135638, 24, 7);
      *(_QWORD *)(v7 + 16) = v6;
      v12 = (void *)objc_opt_self(UIView);
      v39 = sub_10003D030;
      v40 = v7;
      v35 = _NSConcreteStackBlock;
      v36 = 1107296256;
      v37 = sub_100030658;
      v38 = &unk_100135650;
      v9 = _Block_copy(&v35);
      v13 = v40;
      v14 = v6;
      swift_retain(v7);
      swift_release(v13);
      objc_msgSend(v12, "animateWithDuration:delay:options:animations:completion:", 0x20000, v9, 0, 0.125, 0.0);
    }
    _Block_release(v9);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
LABEL_8:
  if ((a1 & 2) == 0)
    goto LABEL_15;
  v15 = *(void **)(v3 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton);
  objc_msgSend(v15, "alpha");
  if ((a2 & 1) != 0)
  {
    if (result != 0.0)
      goto LABEL_15;
    v16 = swift_allocObject(&unk_1001355E8, 24, 7);
    *(_QWORD *)(v16 + 16) = v15;
    v17 = (void *)objc_opt_self(UIView);
    v39 = sub_1000372B8;
    v40 = v16;
    v35 = _NSConcreteStackBlock;
    v36 = 1107296256;
    v37 = sub_100030658;
    v38 = &unk_100135600;
    v18 = _Block_copy(&v35);
    v19 = v40;
    v20 = v15;
    swift_retain(v16);
    swift_release(v19);
    objc_msgSend(v17, "animateWithDuration:delay:options:animations:completion:", 0x10000, v18, 0, 0.375, 0.0);
  }
  else
  {
    if (result != 1.0)
      goto LABEL_15;
    v16 = swift_allocObject(&unk_100135598, 24, 7);
    *(_QWORD *)(v16 + 16) = v15;
    v21 = (void *)objc_opt_self(UIView);
    v39 = sub_10003D030;
    v40 = v16;
    v35 = _NSConcreteStackBlock;
    v36 = 1107296256;
    v37 = sub_100030658;
    v38 = &unk_1001355B0;
    v18 = _Block_copy(&v35);
    v22 = v40;
    v23 = v15;
    swift_retain(v16);
    swift_release(v22);
    objc_msgSend(v21, "animateWithDuration:delay:options:animations:completion:", 0x20000, v18, 0, 0.125, 0.0);
  }
  _Block_release(v18);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
LABEL_15:
  if ((a1 & 4) != 0)
  {
    v24 = *(void **)(v3 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator);
    objc_msgSend(v24, "alpha");
    if ((a2 & 1) != 0)
    {
      if (result == 0.0)
      {
        v25 = swift_allocObject(&unk_100135548, 24, 7);
        *(_QWORD *)(v25 + 16) = v24;
        v26 = (void *)objc_opt_self(UIView);
        v39 = sub_1000372B8;
        v40 = v25;
        v35 = _NSConcreteStackBlock;
        v36 = 1107296256;
        v37 = sub_100030658;
        v38 = &unk_100135560;
        v27 = _Block_copy(&v35);
        v28 = v40;
        v29 = v24;
        swift_retain(v25);
        swift_release(v28);
        objc_msgSend(v26, "animateWithDuration:delay:options:animations:completion:", 0x10000, v27, 0, 0.375, 0.0);
        _Block_release(v27);
        *(_QWORD *)&result = swift_release(v25).n128_u64[0];
      }
      objc_msgSend(v24, "startAnimating", result);
    }
    else if (result == 1.0)
    {
      v30 = swift_allocObject(&unk_1001354F8, 24, 7);
      *(_QWORD *)(v30 + 16) = v24;
      v31 = (void *)objc_opt_self(UIView);
      v39 = sub_10003D030;
      v40 = v30;
      v35 = _NSConcreteStackBlock;
      v36 = 1107296256;
      v37 = sub_100030658;
      v38 = &unk_100135510;
      v32 = _Block_copy(&v35);
      v33 = v40;
      v34 = v24;
      swift_retain(v30);
      swift_release(v33);
      objc_msgSend(v31, "animateWithDuration:delay:options:animations:completion:", 0x20000, v32, 0, 0.125, 0.0);
      _Block_release(v32);
      *(_QWORD *)&result = swift_release(v30).n128_u64[0];
    }
  }
  return result;
}

double sub_10003BEF4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  double result;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  _QWORD v10[5];
  uint64_t v11;

  v1 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint];
  if (v2)
  {
    objc_msgSend(v2, "constant");
    if (result == 44.0)
      return result;
    v4 = *(void **)&v0[v1];
    if (v4)
      objc_msgSend(v4, "setConstant:", 44.0);
  }
  v5 = swift_allocObject(&unk_1001354A8, 24, 7);
  *(_QWORD *)(v5 + 16) = v0;
  v6 = (void *)objc_opt_self(UIView);
  v10[4] = sub_10003CF0C;
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100030658;
  v10[3] = &unk_1001354C0;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = v0;
  swift_retain(v5);
  swift_release(v8);
  objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 1, v7, 0, 0.25, 0.0);
  _Block_release(v7);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

double sub_10003C028()
{
  char *v0;
  uint64_t v1;
  void *v2;
  double result;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  _QWORD v10[5];
  uint64_t v11;

  v1 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint];
  if (v2)
  {
    objc_msgSend(v2, "constant");
    if (result == 0.0)
      return result;
    v4 = *(void **)&v0[v1];
    if (v4)
      objc_msgSend(v4, "setConstant:", 0.0);
  }
  v5 = swift_allocObject(&unk_100135458, 24, 7);
  *(_QWORD *)(v5 + 16) = v0;
  v6 = (void *)objc_opt_self(UIView);
  v10[4] = sub_10003D024;
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100030658;
  v10[3] = &unk_100135470;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = v0;
  swift_retain(v5);
  swift_release(v8);
  objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 1, v7, 0, 0.25, 0.0);
  _Block_release(v7);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

double sub_10003C150()
{
  char *v0;
  uint64_t v1;
  void *v2;
  double result;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  _QWORD v10[5];
  uint64_t v11;

  v1 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint];
  if (v2)
  {
    objc_msgSend(v2, "constant");
    if (result == 28.0)
      return result;
    v4 = *(void **)&v0[v1];
    if (v4)
      objc_msgSend(v4, "setConstant:", 28.0);
  }
  v5 = swift_allocObject(&unk_100135408, 24, 7);
  *(_QWORD *)(v5 + 16) = v0;
  v6 = (void *)objc_opt_self(UIView);
  v10[4] = sub_10003D024;
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100030658;
  v10[3] = &unk_100135420;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = v0;
  swift_retain(v5);
  swift_release(v8);
  objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 1, v7, 0, 0.25, 0.0);
  _Block_release(v7);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

double sub_10003C27C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  double result;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  _QWORD v10[5];
  uint64_t v11;

  v1 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint];
  if (v2)
  {
    objc_msgSend(v2, "constant");
    if (result == 0.0)
      return result;
    v4 = *(void **)&v0[v1];
    if (v4)
      objc_msgSend(v4, "setConstant:", 0.0);
  }
  v5 = swift_allocObject(&unk_1001353B8, 24, 7);
  *(_QWORD *)(v5 + 16) = v0;
  v6 = (void *)objc_opt_self(UIView);
  v10[4] = sub_10003D024;
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100030658;
  v10[3] = &unk_1001353D0;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = v0;
  swift_retain(v5);
  swift_release(v8);
  objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 1, v7, 0, 0.25, 0.0);
  _Block_release(v7);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_10003C3A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  char *v4;
  char *v5;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  void *v12;
  void *v13;
  double v14;
  void *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  NSString v22;
  double v23;
  double v24;
  float v25;
  uint64_t v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  float v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  NSString v35;
  void *v36;
  void *v37;
  id v38;

  v5 = v4;
  swift_bridgeObjectRetain(a2);
  v9._countAndFlagsBits = 0x20A280E220;
  v9._object = (void *)0xA500000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRetain(a2);
  v10._countAndFlagsBits = a3;
  v36 = a4;
  v10._object = a4;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(a2);
  v11 = a2;
  if (!a1 && a2 == 0xE000000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0, 0xE000000000000000, 0) & 1) != 0)
  {
    v12 = *(void **)&v5[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint];
    if (v12)
      objc_msgSend(v12, "setConstant:", 1.0);
    v13 = *(void **)&v5[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint];
    if (v13)
    {
      v14 = -1.0;
LABEL_12:
      objc_msgSend(v13, "setConstant:", v14, a4);
    }
  }
  else
  {
    v15 = *(void **)&v5[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint];
    if (v15)
      objc_msgSend(v15, "setConstant:", 2.0);
    v13 = *(void **)&v5[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint];
    if (v13)
    {
      v14 = -2.0;
      goto LABEL_12;
    }
  }
  v16 = *(void **)&v5[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel];
  objc_msgSend(v16, "frame", v36);
  v38 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", v17, v18, v19, v20);
  objc_msgSend(v38, "setNumberOfLines:", 2);
  v21 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 12.0);
  objc_msgSend(v38, "setFont:", v21);

  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v38, "setText:", v22);

  objc_msgSend(v38, "frame");
  objc_msgSend(v38, "sizeThatFits:", v23, 1.79769313e308);
  v25 = v24;
  v26 = lroundf(v25);
  v27 = objc_msgSend(v38, "font");
  if (!v27)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v28 = v27;
  objc_msgSend(v27, "lineHeight");
  v30 = v29;

  v31 = v30;
  v32 = lroundf(v31);
  if (!v32)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v26 == 0x8000000000000000 && v32 == -1)
    goto LABEL_21;
  if (v26 / v32 >= 2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRetain(a2);
    v33._countAndFlagsBits = 10;
    v33._object = (void *)0xE100000000000000;
    String.append(_:)(v33);
    swift_bridgeObjectRetain(a2);
    v34._countAndFlagsBits = a3;
    v34._object = v37;
    String.append(_:)(v34);
    swift_bridgeObjectRelease(a2);
    v11 = a2;
  }
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v16, "setText:", v35);

  objc_msgSend(v5, "layoutIfNeeded");
}

uint64_t sub_10003C700(uint64_t a1)
{
  return sub_10003C764(a1, 0);
}

uint64_t sub_10003C75C(uint64_t a1)
{
  return sub_10003C764(a1, 1);
}

uint64_t sub_10003C764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];
  uint64_t v14;

  v5 = v2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate;
  swift_beginAccess(v2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate, v12, 0, 0);
  sub_10003CE3C(v5, (uint64_t)v13);
  if (!v14)
    return sub_10003CDFC((uint64_t)v13);
  sub_10003CE84((uint64_t)v13, (uint64_t)v9);
  sub_10003CDFC((uint64_t)v13);
  v6 = v10;
  v7 = v11;
  sub_10003CEC8(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v2, a1, a2, v6, v7);
  return sub_10003CEEC(v9);
}

uint64_t sub_10003C880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _QWORD v11[5];

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei + 8))
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelType);
    if (v1 == 1)
    {
      v2 = 0;
    }
    else
    {
      if (v1)
      {
        v11[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelType);
        result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DeviceInformationView.InfoLabelType, v11, &type metadata for DeviceInformationView.InfoLabelType, &type metadata for Int);
        __break(1u);
        return result;
      }
      v2 = 1;
    }
    sub_1000383B0(v2);
    v3 = v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate;
    swift_beginAccess(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate, v10, 0, 0);
    sub_10003CE3C(v3, (uint64_t)v11);
    if (v11[3])
    {
      sub_10003CE84((uint64_t)v11, (uint64_t)v7);
      sub_10003CDFC((uint64_t)v11);
      v4 = v8;
      v5 = v9;
      sub_10003CEC8(v7, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v2, v4, v5);
      return sub_10003CEEC(v7);
    }
    else
    {
      return sub_10003CDFC((uint64_t)v11);
    }
  }
  return result;
}

uint64_t sub_10003C9CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_state));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifier + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_serialNumber + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingName + 8));

  sub_10003CDFC(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate);
  sub_100035D74(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler + 8));

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_contentDependentConstraints));
}

id sub_10003CB3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeviceInformationView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DeviceInformationView()
{
  return objc_opt_self(_TtC11Diagnostics21DeviceInformationView);
}

ValueMetadata *type metadata accessor for DeviceInformationView.InfoLabelType()
{
  return &type metadata for DeviceInformationView.InfoLabelType;
}

unint64_t sub_10003CD1C()
{
  unint64_t result;

  result = qword_10016ACC8;
  if (!qword_10016ACC8)
  {
    result = swift_getWitnessTable(&unk_10010C01C, &type metadata for DeviceInformationView.InfoLabelType);
    atomic_store(result, (unint64_t *)&qword_10016ACC8);
  }
  return result;
}

uint64_t sub_10003CD60()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_hasExplicitHeight);
}

uint64_t sub_10003CD74(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler);
  v4 = *v3;
  v5 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  return sub_100035D74(v4, v5);
}

uint64_t sub_10003CD98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003CDBC()
{
  uint64_t v0;

  return sub_100037D24(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10003CDC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003CDD4()
{
  uint64_t v0;

  return sub_10004708C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10003CDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10003CDEC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_10003CDF4()
{
  uint64_t v0;

  return sub_10004F1E4(*(void **)(v0 + 16));
}

uint64_t sub_10003CDFC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100035CA4(&qword_10016ACF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003CE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4(&qword_10016ACF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003CE84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_10003CEC8(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10003CEEC(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

id sub_10003CF0C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "layoutIfNeeded");
}

uint64_t sub_10003CF1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10003CF48()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v2);

}

uint64_t sub_10003CF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100052C6C(a1, *(void **)(v2 + 16), a2);
}

id sub_10003D068(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_super v5;

  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_fontSizeForLabels] = 0x4032000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_fontSizeForTitle] = 0x4040000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_topViewPadding] = 0x4024000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_commonPadding] = 0x403E000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_commonNegtivePadding] = 0xC03E000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent] = 0;
  v3 = &v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentHandle];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for DetailedConsentNavigationController();
  return objc_msgSendSuper2(&v5, "initWithNibName:bundle:", 0, 0);
}

void sub_10003D220()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  char *v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  NSString v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  void *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  NSString v96;
  void *v97;
  id v98;
  id v99;
  id v100;
  void *v101;
  id v102;
  id v103;
  id v104;
  void *v105;
  id v106;
  void *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016E470);
  __chkstk_darwin(v2);
  v4 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for UIButton.Configuration(0);
  v110 = *(_QWORD *)(v113 - 8);
  v5 = __chkstk_darwin(v113);
  v111 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v112 = (char *)&v108 - v7;
  v8 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v9 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView;
  v10 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView] = v8;

  v11 = *(void **)&v1[v9];
  if (!v11)
  {
    __break(1u);
    goto LABEL_34;
  }
  v12 = (void *)objc_opt_self(UIColor);
  v13 = v11;
  v14 = objc_msgSend(v12, "systemBackgroundColor");
  objc_msgSend(v13, "setBackgroundColor:", v14);

  v15 = objc_msgSend(v1, "view");
  if (!v15)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (!*(_QWORD *)&v1[v9])
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v16 = v15;
  objc_msgSend(v15, "addSubview:");

  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v18 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel;
  v19 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel] = v17;

  v20 = *(void **)&v1[v18];
  if (!v20)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v108 = v4;
  v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentHandle + 8];
  if (!v21)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v22 = *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentHandle];
  v23 = v20;
  v109 = v22;
  sub_10003EFD4(v22, v21, 0x454C5449545FLL, (void *)0xE600000000000000);
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  objc_msgSend(v23, "setText:", v26);

  v27 = *(void **)&v1[v18];
  if (!v27)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  objc_msgSend(v27, "setTextAlignment:", 1);
  v28 = *(void **)&v1[v18];
  if (!v28)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v29 = v28;
  v30 = objc_msgSend(v12, "systemBackgroundColor");
  objc_msgSend(v29, "setBackgroundColor:", v30);

  v31 = *(void **)&v1[v18];
  if (!v31)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = (void *)objc_opt_self(UIFontMetrics);
  v33 = v31;
  v34 = objc_msgSend(v32, "defaultMetrics");
  v35 = (void *)objc_opt_self(UIFont);
  v36 = objc_msgSend(v35, "systemFontOfSize:weight:", 32.0, UIFontWeightBold);
  v37 = objc_msgSend(v34, "scaledFontForFont:", v36);

  objc_msgSend(v33, "setFont:", v37);
  v38 = *(void **)&v1[v18];
  if (!v38)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  objc_msgSend(v38, "sizeToFit");
  v39 = *(void **)&v1[v18];
  if (!v39)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  objc_msgSend(v39, "setAdjustsFontSizeToFitWidth:", 1);
  v40 = *(void **)&v1[v18];
  if (!v40)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  objc_msgSend(v40, "setNumberOfLines:", 2);
  v41 = *(void **)&v1[v9];
  if (!v41)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (!*(_QWORD *)&v1[v18])
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  objc_msgSend(v41, "addSubview:");
  v42 = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  v43 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent;
  v44 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent] = v42;

  v45 = *(void **)&v1[v43];
  if (!v45)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v46 = v45;
  v47 = objc_msgSend(v32, "defaultMetrics");
  v48 = objc_msgSend(v35, "systemFontOfSize:weight:", 18.0, UIFontWeightRegular);
  v49 = objc_msgSend(v47, "scaledFontForFont:", v48);

  objc_msgSend(v46, "setFont:", v49);
  v50 = *(void **)&v1[v43];
  if (!v50)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v51 = v50;
  sub_10003EFD4(v109, v21, 0x544E45544E4F435FLL, (void *)0xE800000000000000);
  v53 = v52;
  v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v53);
  objc_msgSend(v51, "setText:", v54);

  v55 = *(void **)&v1[v43];
  if (!v55)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  objc_msgSend(v55, "setEditable:", 0);
  v56 = *(void **)&v1[v43];
  if (!v56)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  objc_msgSend(v56, "setScrollEnabled:", 1);
  v57 = objc_msgSend(v1, "view");
  if (!v57)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (!*(_QWORD *)&v1[v43])
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v58 = v57;
  objc_msgSend(v57, "addSubview:");

  v59 = objc_msgSend(v32, "defaultMetrics");
  objc_msgSend(v35, "defaultFontSize");
  v60 = objc_msgSend(v35, "systemFontOfSize:");
  v61 = objc_msgSend(v59, "scaledFontForFont:", v60);

  v62 = v112;
  static UIButton.Configuration.plain()();
  v63 = swift_allocObject(&unk_100135848, 24, 7);
  *(_QWORD *)(v63 + 16) = v61;
  v64 = v61;
  v65 = v108;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10003CF9C, v63);
  v66 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v65, 0, 1, v66);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v65);

  sub_100037118(0, &qword_10016AD30, UIButton_ptr);
  v67 = v111;
  v68 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  v68(v111, v62, v113);
  v69 = UIButton.init(configuration:primaryAction:)(v67, 0);
  v70 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn;
  v71 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn] = v69;

  v72 = *(void **)&v1[v70];
  if (!v72)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v73 = v72;
  sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x4545524741, (void *)0xE500000000000000);
  v75 = v74;
  v76 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v75);
  objc_msgSend(v73, "setTitle:forState:", v76, 0);

  v77 = *(void **)&v1[v70];
  if (!v77)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v78 = objc_allocWithZone((Class)UIColor);
  v79 = v77;
  v80 = objc_msgSend(v78, "initWithRed:green:blue:alpha:", 0.0, 0.478431373, 1.0, 1.0);
  objc_msgSend(v79, "setTitleColor:forState:", v80, 0);

  v81 = *(void **)&v1[v70];
  if (!v81)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v82 = objc_allocWithZone((Class)UIColor);
  v83 = v81;
  v84 = objc_msgSend(v82, "initWithWhite:alpha:", 0.05, 0.33);
  objc_msgSend(v83, "setTitleColor:forState:", v84, 1);

  v85 = *(void **)&v1[v70];
  if (!v85)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  objc_msgSend(v85, "addTarget:action:forControlEvents:", v1, "agreeButtonClicked", 64);
  v86 = objc_msgSend(v1, "view");
  if (!v86)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (!*(_QWORD *)&v1[v70])
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v87 = v86;
  objc_msgSend(v86, "addSubview:");

  v88 = v111;
  v68(v111, v112, v113);
  v89 = UIButton.init(configuration:primaryAction:)(v88, 0);
  v90 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn;
  v91 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn] = v89;

  v92 = *(void **)&v1[v90];
  if (!v92)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v93 = v92;
  sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x4545524741534944, (void *)0xE800000000000000);
  v95 = v94;
  v96 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v95);
  objc_msgSend(v93, "setTitle:forState:", v96, 0);

  v97 = *(void **)&v1[v90];
  if (!v97)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v98 = objc_allocWithZone((Class)UIColor);
  v99 = v97;
  v100 = objc_msgSend(v98, "initWithRed:green:blue:alpha:", 0.0, 0.478431373, 1.0, 1.0);
  objc_msgSend(v99, "setTitleColor:forState:", v100, 0);

  v101 = *(void **)&v1[v90];
  if (!v101)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v102 = objc_allocWithZone((Class)UIColor);
  v103 = v101;
  v104 = objc_msgSend(v102, "initWithWhite:alpha:", 0.05, 0.33);
  objc_msgSend(v103, "setTitleColor:forState:", v104, 1);

  v105 = *(void **)&v1[v90];
  if (!v105)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  objc_msgSend(v105, "addTarget:action:forControlEvents:", v1, "disagreeButtonClicked", 64);
  v106 = objc_msgSend(v1, "view");
  if (!v106)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (*(_QWORD *)&v1[v90])
  {
    v107 = v106;
    objc_msgSend(v106, "addSubview:");

    (*(void (**)(char *, uint64_t))(v110 + 8))(v112, v113);
    return;
  }
LABEL_63:
  __break(1u);
}

void sub_10003DC70()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  Class isa;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  Class v61;
  uint64_t v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  uint64_t v74;
  Class v75;
  uint64_t v76;
  void *v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  uint64_t v88;
  Class v89;
  uint64_t v90;
  void *v91;
  id v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  void *v101;
  id v102;
  void *v103;
  id v104;
  id v105;
  void *v106;
  id v107;
  void *v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  Class v117;

  v1 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_40;
  }
  v3 = v0;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel;
  v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel];
  if (!v5)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent;
  v7 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent];
  if (!v7)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v113 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn;
  v8 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn];
  if (!v8)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn;
  v10 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn];
  if (!v10)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v116 = (id)sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v11 = swift_allocObject(v116, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10010BF30;
  v12 = *(void **)&v3[v1];
  if (!v12)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v13 = objc_msgSend(v12, "leadingAnchor");
  v14 = objc_msgSend(v3, "view");
  if (!v14)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "leadingAnchor");

  v17 = objc_msgSend(v13, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v11 + 32) = v17;
  v18 = *(void **)&v3[v1];
  if (!v18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v19 = objc_msgSend(v18, "topAnchor");
  v20 = objc_msgSend(v3, "view");
  if (!v20)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "topAnchor");

  v23 = objc_msgSend(v19, "constraintEqualToAnchor:constant:", v22, 10.0);
  *(_QWORD *)(v11 + 40) = v23;
  v24 = *(void **)&v3[v1];
  if (!v24)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v114 = v9;
  v25 = objc_msgSend(v24, "widthAnchor");
  v26 = objc_msgSend(v3, "view");
  if (!v26)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "widthAnchor");

  v29 = objc_msgSend(v25, "constraintEqualToAnchor:multiplier:", v28, 1.0);
  *(_QWORD *)(v11 + 48) = v29;
  v30 = *(void **)&v3[v1];
  if (!v30)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v112 = v6;
  v31 = objc_msgSend(v30, "heightAnchor");
  v32 = objc_msgSend(v3, "view");
  if (!v32)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v33 = v32;
  v34 = (void *)objc_opt_self(NSLayoutConstraint);
  v35 = objc_msgSend(v33, "heightAnchor");

  v36 = objc_msgSend(v31, "constraintEqualToAnchor:multiplier:", v35, 0.1);
  *(_QWORD *)(v11 + 56) = v36;
  specialized Array._endMutation()(v37);
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v115 = v34;
  objc_msgSend(v34, "activateConstraints:", isa);

  v39 = swift_allocObject(v116, 64, 7);
  *(_OWORD *)(v39 + 16) = xmmword_10010BF30;
  v40 = *(void **)&v3[v4];
  if (!v40)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v41 = objc_msgSend(v40, "centerXAnchor");
  v42 = *(void **)&v3[v1];
  if (!v42)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v43 = objc_msgSend(v42, "centerXAnchor");
  v44 = objc_msgSend(v41, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v39 + 32) = v44;
  v45 = *(void **)&v3[v4];
  if (!v45)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v46 = objc_msgSend(v45, "bottomAnchor");
  v47 = *(void **)&v3[v1];
  if (!v47)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v48 = objc_msgSend(v47, "bottomAnchor");
  v49 = objc_msgSend(v46, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v39 + 40) = v49;
  v50 = *(void **)&v3[v4];
  if (!v50)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v51 = objc_msgSend(v50, "heightAnchor");
  v52 = *(void **)&v3[v1];
  if (!v52)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v53 = objc_msgSend(v52, "heightAnchor");
  v54 = objc_msgSend(v51, "constraintEqualToAnchor:multiplier:", v53, 0.5);

  *(_QWORD *)(v39 + 48) = v54;
  v55 = *(void **)&v3[v4];
  if (!v55)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v56 = objc_msgSend(v55, "widthAnchor");
  v57 = *(void **)&v3[v1];
  if (!v57)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v58 = objc_msgSend(v57, "widthAnchor");
  v59 = objc_msgSend(v56, "constraintEqualToAnchor:multiplier:", v58, 0.8);

  *(_QWORD *)(v39 + 56) = v59;
  specialized Array._endMutation()(v60);
  v61 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v39);
  objc_msgSend(v34, "activateConstraints:", v61);

  v62 = swift_allocObject(v116, 48, 7);
  *(_OWORD *)(v62 + 16) = xmmword_10010C080;
  v63 = *(void **)&v3[v113];
  if (!v63)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v64 = objc_msgSend(v63, "leadingAnchor");
  v65 = *(void **)&v3[v1];
  if (!v65)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v66 = objc_msgSend(v65, "leadingAnchor");
  v67 = objc_msgSend(v64, "constraintEqualToAnchor:constant:", v66, 30.0);

  *(_QWORD *)(v62 + 32) = v67;
  v68 = *(void **)&v3[v113];
  if (!v68)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v69 = objc_msgSend(v68, "bottomAnchor");
  v70 = objc_msgSend(v3, "view");
  if (!v70)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v71 = v70;
  v72 = objc_msgSend(v70, "bottomAnchor");

  v73 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v72, -30.0);
  *(_QWORD *)(v62 + 40) = v73;
  specialized Array._endMutation()(v74);
  v75 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v62);
  objc_msgSend(v34, "activateConstraints:", v75);

  v76 = swift_allocObject(v116, 48, 7);
  *(_OWORD *)(v76 + 16) = xmmword_10010C080;
  v77 = *(void **)&v3[v114];
  if (!v77)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v78 = objc_msgSend(v77, "trailingAnchor");
  v79 = *(void **)&v3[v1];
  if (!v79)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v80 = objc_msgSend(v79, "trailingAnchor");
  v81 = objc_msgSend(v78, "constraintEqualToAnchor:constant:", v80, -30.0);

  *(_QWORD *)(v76 + 32) = v81;
  v82 = *(void **)&v3[v114];
  if (!v82)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v83 = objc_msgSend(v82, "bottomAnchor");
  v84 = objc_msgSend(v3, "view");
  if (!v84)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v85 = v84;
  v86 = objc_msgSend(v84, "bottomAnchor");

  v87 = objc_msgSend(v83, "constraintEqualToAnchor:constant:", v86, -30.0);
  *(_QWORD *)(v76 + 40) = v87;
  specialized Array._endMutation()(v88);
  v89 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v76);
  objc_msgSend(v34, "activateConstraints:", v89);

  v90 = swift_allocObject(v116, 64, 7);
  *(_OWORD *)(v90 + 16) = xmmword_10010BF30;
  v91 = *(void **)&v3[v112];
  if (!v91)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v92 = objc_msgSend(v91, "leadingAnchor");
  v93 = *(void **)&v3[v1];
  if (!v93)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v94 = objc_msgSend(v93, "leadingAnchor");
  v95 = objc_msgSend(v92, "constraintEqualToAnchor:constant:", v94, 30.0);

  *(_QWORD *)(v90 + 32) = v95;
  v96 = *(void **)&v3[v112];
  if (!v96)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v97 = objc_msgSend(v96, "topAnchor");
  v98 = *(void **)&v3[v1];
  if (!v98)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v99 = objc_msgSend(v98, "bottomAnchor");
  v100 = objc_msgSend(v97, "constraintEqualToAnchor:constant:", v99, 30.0);

  *(_QWORD *)(v90 + 40) = v100;
  v101 = *(void **)&v3[v112];
  if (!v101)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v102 = objc_msgSend(v101, "trailingAnchor");
  v103 = *(void **)&v3[v1];
  if (!v103)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v104 = objc_msgSend(v103, "trailingAnchor");
  v105 = objc_msgSend(v102, "constraintEqualToAnchor:constant:", v104, -30.0);

  *(_QWORD *)(v90 + 48) = v105;
  v106 = *(void **)&v3[v112];
  if (!v106)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v107 = objc_msgSend(v106, "bottomAnchor");
  v108 = *(void **)&v3[v114];
  if (v108)
  {
    v109 = objc_msgSend(v108, "topAnchor");
    v110 = objc_msgSend(v107, "constraintEqualToAnchor:constant:", v109, -30.0);

    *(_QWORD *)(v90 + 56) = v110;
    specialized Array._endMutation()(v111);
    v117 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v90);
    objc_msgSend(v115, "activateConstraints:", v117);

    return;
  }
LABEL_75:
  __break(1u);
}

void sub_10003E760()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;

  v1 = v0;
  v25 = objc_msgSend(v0, "parentViewController");
  if (v25)
  {
    v2 = objc_opt_self(UINavigationController);
    v3 = (void *)swift_dynamicCastObjCClass(v25, v2);
    if (!v3)
      goto LABEL_15;
    v4 = objc_msgSend(v3, "viewControllers");

    v5 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v22 = v6;
      else
        v22 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v23 = _CocoaArrayWrapper.endIndex.getter(v22);
      swift_bridgeObjectRelease(v6);
      if (v23)
        goto LABEL_5;
    }
    else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v6 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
      }
      else
      {
        if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_26;
        }
        v7 = *(id *)(v6 + 32);
      }
      v25 = v7;
      swift_bridgeObjectRelease(v6);
      v8 = type metadata accessor for EnhancedLoggingConsentViewController();
      v9 = swift_dynamicCastClass(v25, v8);
      if (v9)
      {
        v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentHandle + 8];
        if (!v10)
        {
LABEL_28:
          __break(1u);
          return;
        }
        v11 = (void *)v9;
        v12 = *(_QWORD **)(v9 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_consentHandles);
        v13 = sub_1000E0E44(*(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentHandle], v10, v12);
        if ((v14 & 1) == 0)
        {
          v15 = v13 + 1;
          if (!__OFADD__(v13, 1))
          {
            if (v15 >= v12[2])
            {
              v21 = type metadata accessor for ConsentSignatureController();
              v24 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v21)), "init");
              objc_msgSend(v11, "showViewController:sender:", v24, v1);

              v20 = v24;
              goto LABEL_16;
            }
            if ((v15 & 0x8000000000000000) == 0)
            {
              v16 = &v12[2 * v15];
              v17 = v16[4];
              v18 = v16[5];
              objc_allocWithZone((Class)type metadata accessor for DetailedConsentNavigationController());
              swift_bridgeObjectRetain(v18);
              v19 = sub_10003D068(v17, v18);
              objc_msgSend(v11, "showViewController:sender:", v19, v1);

              goto LABEL_15;
            }
            goto LABEL_27;
          }
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
      }
LABEL_15:
      v20 = v25;
LABEL_16:

      return;
    }
    swift_bridgeObjectRelease(v6);
  }
}

void sub_10003EA0C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  Swift::Int v24;
  __n128 v25;
  _BYTE v26[16];
  _QWORD aBlock[5];
  uint64_t v28;

  v1 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v2 = __chkstk_darwin(v1);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v26[-v5];
  v7 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v12 = swift_allocObject(&unk_1001357F8, 41, 7);
  *(_QWORD *)(v12 + 16) = 6;
  *(_BYTE *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  *(_BYTE *)(v12 + 40) = 1;
  aBlock[4] = sub_10003EE28;
  v28 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100040808;
  aBlock[3] = &unk_100135810;
  v13 = _Block_copy(aBlock);
  objc_msgSend(v11, "transactionWithBlock:", v13, swift_release(v28).n128_f64[0]);
  _Block_release(v13);

  v14 = objc_msgSend(v0, "parentViewController");
  if (v14)
  {
    v15 = v14;
    v16 = objc_opt_self(UINavigationController);
    v17 = swift_dynamicCastObjCClass(v15, v16);
    if (v17)
    {
      v18 = (void *)v17;
      if (qword_10016A6D8 != -1)
        swift_once(&qword_10016A6D8, sub_1000C6380);
      v19 = type metadata accessor for ModalPresentationCoordinator(0);
      v20 = sub_100036D34(v19, (uint64_t)qword_1001723D0);
      swift_beginAccess(v20, aBlock, 33, 0);
      if ((sub_1000C65B4(v18, 1, 0, 1, 0, 0) & 1) == 0)
      {
        v21 = *(_QWORD *)(v20 + *(int *)(v19 + 24));
        v22 = v15;
        v23 = swift_bridgeObjectRetain(v21);
        v24 = sub_1000C8C58(v23, v18);

        sub_1000C4E10(v24, (uint64_t)v6);
        v25 = swift_release(v24);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v25) == 1)
        {
          sub_10003EEAC((uint64_t)v6);
        }
        else
        {
          sub_100036D7C((uint64_t)v6, (uint64_t)v10);
          sub_1000A7860((uint64_t)v10, (uint64_t)v4);
          sub_10003EEAC((uint64_t)v4);
          sub_100036DC0((uint64_t)v10);
        }
      }
      swift_endAccess(aBlock);
    }

  }
}

id sub_10003ED4C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DetailedConsentNavigationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DetailedConsentNavigationController()
{
  return objc_opt_self(_TtC11Diagnostics35DetailedConsentNavigationController);
}

uint64_t sub_10003EE18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

id sub_10003EE28(id result)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  char v4;

  v2 = result;
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_BYTE *)(v1 + 40);
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
    result = objc_msgSend(result, "setStatus:", *(_QWORD *)(v1 + 16));
  if ((v4 & 1) == 0)
    return objc_msgSend(v2, "setConsent:", v3);
  return result;
}

uint64_t sub_10003EE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10003EEA4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10003EEAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10003EEEC()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_fontSizeForLabels] = 0x4032000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_fontSizeForTitle] = 0x4040000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_topViewPadding] = 0x4024000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_commonPadding] = 0x403E000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_commonNegtivePadding] = 0xC03E000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100112360, "Diagnostics/DetailedConsentNavigationController.swift", 53, 2, 35, 0);
  __break(1u);
}

uint64_t sub_10003EFD4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Swift::String v8;
  void *object;
  Swift::String v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  v8 = String.uppercased()();
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRetain(0x80000001001122B0);
  v10._countAndFlagsBits = a3;
  v10._object = a4;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(0x80000001001122B0);
  v11 = 0x80000001001122B0;
  v18[2] = a1;
  v18[3] = a2;
  v18[0] = 0x616C7562656ELL;
  v18[1] = 0xE600000000000000;
  v12 = sub_10003F14C();
  if ((StringProtocol.contains<A>(_:)(v18, &type metadata for String, &type metadata for String, v12, v12) & 1) != 0)
  {
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-Nebula"));
    v15 = (unint64_t)v14;
    v16 = sub_10003FFA0(v13, v14, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000013, (void *)0x80000001001122B0);
    swift_bridgeObjectRelease(0x80000001001122B0);
    v11 = v15;
  }
  else
  {
    v16 = sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000013, (void *)0x80000001001122B0);
  }
  swift_bridgeObjectRelease(v11);
  return v16;
}

uint64_t sub_10003F128()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_10003F14C()
{
  unint64_t result;

  result = qword_10016ADC0;
  if (!qword_10016ADC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10016ADC0);
  }
  return result;
}

id sub_10003F22C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseVisualEffectView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseVisualEffectView()
{
  return objc_opt_self(_TtC11Diagnostics20BaseVisualEffectView);
}

NSString sub_10003F27C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10016ADF0 = (uint64_t)result;
  return result;
}

uint64_t sub_10003F2B0(uint64_t (*a1)(void))
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10016A5E8 != -1)
    swift_once(&qword_10016A5E8, sub_10003F27C);
  objc_msgSend(v2, "postNotificationName:object:", qword_10016ADF0, 0);

  return a1();
}

uint64_t sub_10003F364(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  Swift::Int v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];

  v8 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v9 = __chkstk_darwin(v8);
  v30 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - v11;
  v13 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v29 = (uint64_t)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend((id)objc_opt_self(DAUserInterruptAlertFactory), "reset");
  v16 = a2 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle;
  v17 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle);
  v18 = *(unsigned __int8 *)(v16 + 8);
  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v19 = type metadata accessor for ModalPresentationCoordinator(0);
  v20 = sub_100036D34(v19, (uint64_t)qword_1001723D0);
  swift_beginAccess(v20, v31, 33, 0);
  if ((sub_1000C65B4(a1, 1, v17, v18, a3, a4) & 1) == 0)
  {
    v21 = *(_QWORD *)(v20 + *(int *)(v19 + 24));
    v22 = a1;
    v23 = swift_bridgeObjectRetain(v21);
    v24 = sub_1000C8C58(v23, v22);

    sub_1000C4E10(v24, (uint64_t)v12);
    v25 = swift_release(v24);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48))(v12, 1, v13, v25) == 1)
    {
      sub_10003EEAC((uint64_t)v12);
    }
    else
    {
      v26 = v29;
      sub_100036D7C((uint64_t)v12, v29);
      v27 = v30;
      sub_1000A7860(v26, v30);
      sub_10003EEAC(v27);
      sub_100036DC0(v26);
    }
  }
  return swift_endAccess(v31);
}

uint64_t sub_10003F5A8(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(id, uint64_t, uint64_t))
{
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;

  v14 = _Block_copy(aBlock);
  v15 = swift_allocObject(a6, 24, 7);
  *(_QWORD *)(v15 + 16) = v14;
  v16 = a3;
  v17 = a4;
  v18 = a1;
  a8(v17, a7, v15);

  return swift_release(v15);
}

void sub_10003F668(void *a1, uint64_t a2, SEL *a3)
{
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  id v9;

  v5 = (void *)objc_opt_self(DAPlatform);
  v9 = a1;
  v6 = objc_msgSend(v5, "currentPlatform");
  v7 = objc_msgSend(v6, "isCheckerBoardActive");
  swift_unknownObjectRelease(v6);
  if (v7)
  {
    v8 = objc_msgSend(v5, "currentPlatform");
    objc_msgSend(v8, *a3);

    swift_unknownObjectRelease(v8);
  }
  else
  {

  }
}

id sub_10003F878()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DKViewControllerDelegateResponder();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DKViewControllerDelegateResponder()
{
  return objc_opt_self(_TtC11Diagnostics33DKViewControllerDelegateResponder);
}

uint64_t sub_10003F8CC(uint64_t a1, char a2)
{
  int v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2 & 1;
  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v5 = objc_msgSend(v4, "userInterfaceLayoutDirection");

  v6 = 15;
  v7 = 16;
  if (a1 != 15)
    v7 = a1;
  if (a1 != 16)
    v6 = v7;
  if (v5 == (id)1 && v3 == 0)
    return v6;
  else
    return a1;
}

uint64_t sub_10003F970()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003F994()
{
  uint64_t v0;

  return sub_1000C5058(*(_QWORD *)(v0 + 16));
}

void sub_10003F99C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)();
  _BYTE *v30;
  _BYTE v32[24];

  v7 = (int *)type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  __chkstk_darwin(v7);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__presentationTransitionStyle);
  v11 = *(_BYTE *)(v3 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__presentationTransitionStyle + 8);
  v12 = swift_allocObject(&unk_100135910, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  v13 = qword_10016A6D8;
  swift_retain(a3);
  if (v13 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v14 = type metadata accessor for ModalPresentationCoordinator(0);
  v15 = sub_100036D34(v14, (uint64_t)qword_1001723D0);
  swift_beginAccess(v15, v32, 33, 0);
  v16 = &v9[v7[9]];
  *(_QWORD *)v9 = a1;
  v9[8] = 0;
  *((_QWORD *)v9 + 2) = 0;
  v17 = a1;
  v18 = swift_retain(v12);
  Date.init()(v18);
  v9[v7[8]] = 1;
  *(_QWORD *)v16 = v10;
  v16[8] = v11;
  v19 = objc_msgSend(v17, "popoverPresentationController");
  v20 = v19;
  if (v19)
  {
    objc_msgSend(v19, "sourceRect");
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;

  }
  else
  {
    v22 = 0;
    v24 = 0;
    v26 = 0;
    v28 = 0;
  }
  v29 = (uint64_t (**)())&v9[v7[10]];
  v30 = &v9[v7[11]];
  *(_QWORD *)v30 = v22;
  *((_QWORD *)v30 + 1) = v24;
  *((_QWORD *)v30 + 2) = v26;
  *((_QWORD *)v30 + 3) = v28;
  v30[32] = v20 == 0;
  *v29 = sub_10003FF90;
  v29[1] = (uint64_t (*)())v12;
  sub_1000C6848((void **)v9);
  sub_100036DC0((uint64_t)v9);
  swift_endAccess(v32);
  swift_release(v12);
}

uint64_t sub_10003FBA8(void *a1, void (*a2)(void), uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  Swift::Int v30;
  __n128 v31;
  uint64_t v32;
  void *v33;
  id v34;
  unsigned int v35;
  uint64_t result;
  id v37;
  id v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD aBlock[5];
  _QWORD *v43;

  v7 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v39 - v11;
  v13 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(a1, "presentedViewController");

  if (v17)
  {
    v18 = (_QWORD *)swift_allocObject(&unk_100135898, 48, 7);
    v18[2] = a1;
    v18[3] = v3;
    v18[4] = a2;
    v18[5] = a3;
    aBlock[4] = sub_10003FF48;
    v43 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100030658;
    aBlock[3] = &unk_1001358B0;
    v19 = _Block_copy(aBlock);
    v20 = v43;
    v21 = a1;
    v22 = v3;
    swift_retain(a3);
    objc_msgSend(v21, "dismissViewControllerAnimated:completion:", 1, v19, swift_release(v20).n128_f64[0]);
    _Block_release(v19);
  }
  else
  {
    v23 = *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle];
    v40 = v10;
    v41 = v23;
    v24 = v3[OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle
                            + 8];
    if (qword_10016A6D8 != -1)
      swift_once(&qword_10016A6D8, sub_1000C6380);
    v25 = type metadata accessor for ModalPresentationCoordinator(0);
    v26 = sub_100036D34(v25, (uint64_t)qword_1001723D0);
    swift_beginAccess(v26, aBlock, 33, 0);
    if ((sub_1000C65B4(a1, 1, v41, v24, a2, a3) & 1) == 0)
    {
      v27 = *(_QWORD *)(v26 + *(int *)(v25 + 24));
      v28 = a1;
      v29 = swift_bridgeObjectRetain(v27);
      v30 = sub_1000C8C58(v29, v28);

      sub_1000C4E10(v30, (uint64_t)v12);
      v31 = swift_release(v30);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48))(v12, 1, v13, v31) == 1)
      {
        sub_10003EEAC((uint64_t)v12);
      }
      else
      {
        sub_100036D7C((uint64_t)v12, (uint64_t)v16);
        v32 = (uint64_t)v40;
        sub_1000A7860((uint64_t)v16, (uint64_t)v40);
        sub_10003EEAC(v32);
        sub_100036DC0((uint64_t)v16);
      }
    }
    swift_endAccess(aBlock);
  }
  v33 = (void *)objc_opt_self(DAPlatform);
  v34 = objc_msgSend(v33, "currentPlatform");
  v35 = objc_msgSend(v34, "isCheckerBoardActive");
  result = swift_unknownObjectRelease(v34);
  if (v35)
  {
    v37 = objc_msgSend(v33, "currentPlatform");
    objc_msgSend(v37, "showSceneStatusBar");
    swift_unknownObjectRelease(v37);
    v38 = objc_msgSend(v33, "currentPlatform");
    objc_msgSend(v38, "sceneStatusBarStyle:", 0);
    return swift_unknownObjectRelease(v38);
  }
  return result;
}

uint64_t sub_10003FF14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10003FF48()
{
  uint64_t v0;

  return sub_10003F364(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(void))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10003FF54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10003FF64(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10003FF6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003FF90()
{
  uint64_t v0;

  return sub_10003F2B0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10003FFA0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  Swift::String v19;
  BOOL v20;
  void *object;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  uint64_t countAndFlagsBits;
  Swift::String v30;
  Swift::String v31;

  v8 = (void *)objc_opt_self(ASTLocalization);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "localizedStringForKey:", v9);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14 = (void *)objc_opt_self(NSBundle);
  v15 = objc_msgSend(v14, "mainBundle");
  v30._object = (void *)0xE000000000000000;
  v16._countAndFlagsBits = v11;
  v16._object = v13;
  v17.value._countAndFlagsBits = a1;
  v17.value._object = a2;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0;
  v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v30);
  swift_bridgeObjectRelease(v13);

  v20 = v19._countAndFlagsBits == a4 && v19._object == a5;
  object = a5;
  if (!v20)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v19._countAndFlagsBits, v19._object, a4, a5, 0) & 1) == 0)
    {
      countAndFlagsBits = String.init(format:arguments:)(v19._countAndFlagsBits, v19._object, a3);
      swift_bridgeObjectRelease(v19._object);
      return countAndFlagsBits;
    }
    object = v19._object;
  }
  swift_bridgeObjectRelease(object);
  v22 = objc_msgSend(v14, "mainBundle");
  v31._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = a4;
  v23._object = a5;
  v24.value._countAndFlagsBits = a1;
  v24.value._object = a2;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v31)._countAndFlagsBits;

  return countAndFlagsBits;
}

id sub_10004016C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id result;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  v2 = swift_bridgeObjectRetain(a2);
  result = (id)MobileGestalt_get_current_device(v2);
  if (result)
  {
    v4 = result;
    v5 = (id)MobileGestalt_copy_deviceClass_obj();

    if (v5)
    {
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v8 = v7;

      if (v6 == 0x656E6F685069 && v8 == 0xE600000000000000)
      {
        v9 = 0xE600000000000000;
LABEL_8:
        swift_bridgeObjectRelease(v9);
        v10 = 0x454E4F4850495FLL;
        v11 = 0xE700000000000000;
LABEL_28:
        String.append(_:)(*(Swift::String *)&v10);
        return (id)a1;
      }
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656E6F685069, 0xE600000000000000, v6, v8, 0) & 1) != 0)
      {
        v9 = v8;
        goto LABEL_8;
      }
      if (v6 == 1684099177 && v8 == 0xE400000000000000)
      {
        v12 = 0xE400000000000000;
LABEL_14:
        swift_bridgeObjectRelease(v12);
        v13 = 1095780703;
LABEL_21:
        v10 = v13 & 0xFFFF0000FFFFFFFFLL | 0x4400000000;
        v11 = 0xE500000000000000;
        goto LABEL_28;
      }
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(1684099177, 0xE400000000000000, v6, v8, 0) & 1) != 0)
      {
        v12 = v8;
        goto LABEL_14;
      }
      if (v6 == 1685016681 && v8 == 0xE400000000000000)
      {
        v14 = 0xE400000000000000;
LABEL_20:
        swift_bridgeObjectRelease(v14);
        v13 = 1330661727;
        goto LABEL_21;
      }
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(1685016681, 0xE400000000000000, v6, v8, 0) & 1) != 0)
      {
        v14 = v8;
        goto LABEL_20;
      }
      if (v6 == 0x447974696C616552 && v8 == 0xED00006563697665)
      {
        swift_bridgeObjectRelease(0xED00006563697665);
LABEL_26:
        v10 = 0x4E4F495349565FLL;
        v11 = 0xE700000000000000;
        goto LABEL_28;
      }
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(0x447974696C616552, 0xED00006563697665, v6, v8, 0);
      swift_bridgeObjectRelease(v8);
      if ((v15 & 1) != 0)
        goto LABEL_26;
    }
    v10 = 0x434952454E45475FLL;
    v11 = 0xE800000000000000;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

void sub_1000403CC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  const char *v29;
  void *v30;
  int v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  const char *v37;
  void *v38;
  int v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  SEL v47;
  id v48;
  int v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  _QWORD v57[5];

  v1 = (uint64_t)objc_msgSend(v0, "connectedScenes");
  v2 = sub_100037118(0, &qword_10016AF00, UIScene_ptr);
  v3 = sub_1000407A8();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  if ((v4 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    v7 = __CocoaSet.makeIterator()(v6);
    v5 = Set.Iterator.init(_cocoa:)(v57, v7, v2, v3);
    v4 = v57[0];
    v54 = v57[1];
    v8 = v57[2];
    v9 = v57[3];
    v10 = v57[4];
  }
  else
  {
    v9 = 0;
    v11 = -1 << *(_BYTE *)(v4 + 32);
    v54 = v4 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(v4 + 56);
  }
  v14 = (id)(v4 & 0x7FFFFFFFFFFFFFFFLL);
  v15 = (unint64_t)(v8 + 64) >> 6;
  if ((v4 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v16 = __CocoaSet.Iterator.next()(v5);
  if (!v16)
    goto LABEL_47;
  v17 = v16;
  v55 = v16;
  swift_unknownObjectRetain(v16);
  swift_dynamicCast(&v56, &v55, (char *)&type metadata for Swift.AnyObject + 8, v2, 7);
  v18 = v56;
  swift_unknownObjectRelease(v17);
  v1 = v9;
  v19 = v10;
  if (!v18)
  {
LABEL_47:
    sub_100040800(v4);
    return;
  }
  while (1)
  {
    v24 = objc_opt_self(UIWindowScene);
    v25 = swift_dynamicCastObjCClass(v18, v24);
    if (v25)
      break;

    v9 = v1;
    v10 = v19;
    if (v4 < 0)
      goto LABEL_11;
LABEL_14:
    if (v10)
    {
      v19 = (v10 - 1) & v10;
      v20 = __clz(__rbit64(v10)) | (v9 << 6);
      v1 = v9;
    }
    else
    {
      v21 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_42:
        if (v1 < 0)
          v45 = v1;
        else
          v45 = v1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v1);
        v46 = _CocoaArrayWrapper.endIndex.getter(v45);
        swift_bridgeObjectRelease((DARootViewController *)v1, v47, v48, v49, v50, v51, v52, v53);
        if (!v46)
          goto LABEL_46;
        goto LABEL_36;
      }
      if (v21 >= v15)
        goto LABEL_47;
      v22 = *(_QWORD *)(v54 + 8 * v21);
      v1 = v9 + 1;
      if (!v22)
      {
        v1 = v9 + 2;
        if (v9 + 2 >= v15)
          goto LABEL_47;
        v22 = *(_QWORD *)(v54 + 8 * v1);
        if (!v22)
        {
          v1 = v9 + 3;
          if (v9 + 3 >= v15)
            goto LABEL_47;
          v22 = *(_QWORD *)(v54 + 8 * v1);
          if (!v22)
          {
            v1 = v9 + 4;
            if (v9 + 4 >= v15)
              goto LABEL_47;
            v22 = *(_QWORD *)(v54 + 8 * v1);
            if (!v22)
            {
              v23 = v9 + 5;
              while (v15 != v23)
              {
                v22 = *(_QWORD *)(v54 + 8 * v23++);
                if (v22)
                {
                  v1 = v23 - 1;
                  goto LABEL_29;
                }
              }
              goto LABEL_47;
            }
          }
        }
      }
LABEL_29:
      v19 = (v22 - 1) & v22;
      v20 = __clz(__rbit64(v22)) + (v1 << 6);
    }
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v20);
    if (!v18)
      goto LABEL_47;
  }
  v26 = (void *)v25;
  v14 = v18;
  v27 = objc_msgSend(v26, "windows");
  v28 = sub_100037118(0, &qword_10016AF10, UIWindow_ptr);
  v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

  if ((unint64_t)v1 >> 62)
    goto LABEL_42;
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_46:
    swift_bridgeObjectRelease((DARootViewController *)v1, v29, v30, v31, v32, v33, v34, v35);

    goto LABEL_47;
  }
LABEL_36:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
    goto LABEL_39;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v36 = *(id *)(v1 + 32);
LABEL_39:
    v44 = v36;
    swift_bridgeObjectRelease((DARootViewController *)v1, v37, v38, v39, v40, v41, v42, v43);

    sub_100040800(v4);
    objc_msgSend(v44, "bounds");

    return;
  }
  __break(1u);
}

unint64_t sub_1000407A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016AF08;
  if (!qword_10016AF08)
  {
    v1 = sub_100037118(255, &qword_10016AF00, UIScene_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10016AF08);
  }
  return result;
}

uint64_t sub_100040800(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

void sub_100040808(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

id sub_100040868(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  objc_class *v36;
  id v37;
  objc_super v39;

  v9 = sub_100035CA4((uint64_t *)&unk_10016E470);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIButton.Configuration(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v39 - v17;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_fontSizeTestRunner] = 0x4034000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_fontSizeButton] = 0x4030000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_verticalPadding] = 0x4024000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_horizontalPadding] = 0x4020000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_bottomMarginWithoutButtons] = 0x4030000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconViewWidthHeight] = 0x4034000000000000;
  *(int64x2_t *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonMinimumSize] = vdupq_n_s64(0x4046000000000000uLL);
  v19 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_stackView;
  v20 = objc_allocWithZone((Class)UIStackView);
  v21 = v4;
  *(_QWORD *)&v4[v19] = objc_msgSend(v20, "init");
  v22 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_runnerContainerView;
  *(_QWORD *)&v21[v22] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v23 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerView;
  *(_QWORD *)&v21[v23] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v24 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel;
  *(_QWORD *)&v21[v24] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v25 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconView;
  v26 = type metadata accessor for TestRunnerIconView();
  *(_QWORD *)&v21[v25] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v26)), "init");
  v27 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView;
  *(_QWORD *)&v21[v27] = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "init");
  v28 = &v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_delegate];
  *(_OWORD *)v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  *((_QWORD *)v28 + 4) = 0;
  v29 = &v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_hasExplicitHeight] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_idleTimeoutTimer] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint] = 0;
  v30 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v31 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 16.0);
  v32 = objc_msgSend(v30, "scaledFontForFont:", v31);

  static UIButton.Configuration.plain()();
  v33 = swift_allocObject(&unk_100135BA0, 24, 7);
  *(_QWORD *)(v33 + 16) = v32;
  v34 = v32;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10003CFA4, v33);
  v35 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v11, 0, 1, v35);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v11);

  sub_100037118(0, &qword_10016AD30, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  *(_QWORD *)&v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton] = UIButton.init(configuration:primaryAction:)(v16, 0);

  v36 = (objc_class *)type metadata accessor for TestRunnerView();
  v39.receiver = v21;
  v39.super_class = v36;
  v37 = objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  return v37;
}

id sub_100040C80(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  objc_class *v29;
  void *v30;
  id v31;
  void (*v32)(char *, uint64_t);
  id v33;
  uint64_t v35;
  void *v36;
  objc_super v37;

  v36 = a1;
  v2 = sub_100035CA4((uint64_t *)&unk_10016E470);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIButton.Configuration(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v35 - v10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_fontSizeTestRunner] = 0x4034000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_fontSizeButton] = 0x4030000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_verticalPadding] = 0x4024000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_horizontalPadding] = 0x4020000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_bottomMarginWithoutButtons] = 0x4030000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconViewWidthHeight] = 0x4034000000000000;
  *(int64x2_t *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonMinimumSize] = vdupq_n_s64(0x4046000000000000uLL);
  v12 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_stackView;
  v13 = objc_allocWithZone((Class)UIStackView);
  v14 = v1;
  *(_QWORD *)&v1[v12] = objc_msgSend(v13, "init");
  v15 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_runnerContainerView;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v16 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerView;
  *(_QWORD *)&v14[v16] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v17 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel;
  *(_QWORD *)&v14[v17] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v18 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconView;
  v19 = type metadata accessor for TestRunnerIconView();
  *(_QWORD *)&v14[v18] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v19)), "init");
  v20 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView;
  *(_QWORD *)&v14[v20] = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "init");
  v21 = &v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_delegate];
  *(_OWORD *)v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  *((_QWORD *)v21 + 4) = 0;
  v22 = &v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_hasExplicitHeight] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_idleTimeoutTimer] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint] = 0;
  v23 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v24 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 16.0);
  v25 = objc_msgSend(v23, "scaledFontForFont:", v24);

  static UIButton.Configuration.plain()();
  v26 = swift_allocObject(&unk_100135B78, 24, 7);
  *(_QWORD *)(v26 + 16) = v25;
  v27 = v25;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10003CF9C, v26);
  v28 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v4, 0, 1, v28);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v4);

  sub_100037118(0, &qword_10016AD30, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton] = UIButton.init(configuration:primaryAction:)(v9, 0);

  v29 = (objc_class *)type metadata accessor for TestRunnerView();
  v37.receiver = v14;
  v37.super_class = v29;
  v30 = v36;
  v31 = objc_msgSendSuper2(&v37, "initWithCoder:", v36);

  v32 = *(void (**)(char *, uint64_t))(v6 + 8);
  v33 = v31;
  v32(v11, v5);
  if (v33)

  return v33;
}

void sub_10004108C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  v1 = sub_100035CA4((uint64_t *)&unk_10016AD20);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_stackView);
  objc_msgSend(v4, "setAxis:", 1);
  objc_msgSend(v4, "setAlignment:", 0);
  objc_msgSend(v4, "setDistribution:", 0);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel);
  sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000013, (void *)0x80000001001126D0);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v5, "setText:", v8);

  objc_msgSend(v5, "setNumberOfLines:", 0);
  v9 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v10 = objc_msgSend((id)objc_opt_self(UIFont), "boldSystemFontOfSize:", 20.0);
  v11 = objc_msgSend(v9, "scaledFontForFont:", v10);

  objc_msgSend(v5, "setFont:", v11);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconView), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView);
  v13 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.478431373, 1.0, 1.0);
  objc_msgSend(v12, "setTintColor:", v13);

  v14 = objc_msgSend((id)objc_opt_self(UIColor), "opaqueSeparatorColor");
  objc_msgSend(v12, "setTrackTintColor:", v14);

  objc_msgSend(v12, "setAlpha:", 0.0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v15 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton);
  objc_msgSend(v15, "addTarget:action:forControlEvents:", v0, "skipPressed", 64);
  sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, 1346980691, (void *)0xE400000000000000);
  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  objc_msgSend(v15, "setTitle:forState:", v18, 0);

  v19 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.478431373, 1.0, 1.0);
  objc_msgSend(v15, "setTitleColor:forState:", v19, 0);

  objc_msgSend(v15, "setContentHorizontalAlignment:", 0);
  objc_msgSend(v15, "setAlpha:", 0.0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v21 = objc_msgSend(v20, "userInterfaceIdiom");

  if (v21 == (id)6)
  {
    sub_100037118(0, &qword_10016AD38, UIHoverStyle_ptr);
    static UIShape.capsule.getter();
    v22 = type metadata accessor for UIShape(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v3, 0, 1, v22);
    v23 = (void *)UIHoverStyle.init(shape:)(v3);
    objc_msgSend(v15, "setHoverStyle:", v23);

  }
}

void sub_1000414D8()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TestRunnerView();
  objc_msgSendSuper2(&v5, "tintColorDidChange");
  v1 = objc_msgSend(v0, "tintAdjustmentMode");
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton];
  if (v1 == (id)2)
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
  else
    v3 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.478431373, 1.0, 1.0);
  v4 = v3;
  objc_msgSend(v2, "setTitleColor:forState:", v3, 0);

}

id sub_1000415D4()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_runnerContainerView];
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconView]);
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel]);
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView]);
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerView];
  objc_msgSend(v2, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton]);
  v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_stackView];
  objc_msgSend(v3, "addArrangedSubview:", v1);
  objc_msgSend(v3, "addArrangedSubview:", v2);
  return objc_msgSend(v0, "addSubview:", v3);
}

void sub_1000416B4()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  id v73;
  char *v74;
  char *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  double v85;
  double v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  unint64_t v93;
  unint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  id v100;
  id v101;
  id v102;
  id v103;
  Class isa;
  uint64_t v105;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerView];
  v101 = v2;
  v3 = objc_msgSend(v2, "heightAnchor");
  v4 = objc_msgSend(v3, "constraintGreaterThanOrEqualToConstant:", 44.0);

  v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint] = v4;

  v6 = objc_msgSend(v2, "heightAnchor");
  v7 = objc_msgSend(v6, "constraintEqualToConstant:", 16.0);

  v8 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint] = v7;

  v9 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v10 = swift_allocObject(v9, 184, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10010C140;
  v11 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_stackView];
  v12 = objc_msgSend(v11, "topAnchor");
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v10 + 32) = v14;
  v15 = objc_msgSend(v11, "bottomAnchor");
  v16 = objc_msgSend(v1, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v10 + 40) = v17;
  v18 = objc_msgSend(v11, "leadingAnchor");
  v19 = objc_msgSend(v1, "leadingAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, 15.0);

  *(_QWORD *)(v10 + 48) = v20;
  v21 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel];
  v22 = objc_msgSend(v21, "bottomAnchor");
  v23 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView];
  v24 = objc_msgSend(v23, "topAnchor");
  v25 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v24, -10.0);

  *(_QWORD *)(v10 + 56) = v25;
  v26 = objc_msgSend(v21, "leadingAnchor");
  v27 = objc_msgSend(v11, "leadingAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v27, 28.0);

  *(_QWORD *)(v10 + 64) = v28;
  v100 = v21;
  v29 = objc_msgSend(v21, "trailingAnchor");
  v30 = objc_msgSend(v11, "trailingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v30, -28.0);

  *(_QWORD *)(v10 + 72) = v31;
  v32 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconView];
  v33 = objc_msgSend(v32, "centerYAnchor");
  v34 = objc_msgSend(v21, "centerYAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v10 + 80) = v35;
  v36 = objc_msgSend(v32, "leadingAnchor");
  v37 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_runnerContainerView];
  v38 = objc_msgSend(v37, "leadingAnchor");
  v39 = objc_msgSend(v36, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v10 + 88) = v39;
  v40 = objc_msgSend(v32, "widthAnchor");
  v41 = objc_msgSend(v40, "constraintEqualToConstant:", 20.0);

  *(_QWORD *)(v10 + 96) = v41;
  v42 = objc_msgSend(v32, "heightAnchor");
  v43 = objc_msgSend(v42, "constraintEqualToConstant:", 20.0);

  *(_QWORD *)(v10 + 104) = v43;
  v44 = objc_msgSend(v23, "leadingAnchor");
  v45 = objc_msgSend(v11, "leadingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, 28.0);

  *(_QWORD *)(v10 + 112) = v46;
  v102 = v23;
  v47 = objc_msgSend(v23, "trailingAnchor");
  v103 = v11;
  v48 = objc_msgSend(v11, "trailingAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, -28.0);

  *(_QWORD *)(v10 + 120) = v49;
  v50 = objc_msgSend(v101, "leadingAnchor");
  v51 = objc_msgSend(v37, "leadingAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v10 + 128) = v52;
  v53 = objc_msgSend(v101, "trailingAnchor");
  v54 = v37;
  v55 = objc_msgSend(v37, "trailingAnchor");
  v56 = objc_msgSend(v53, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v10 + 136) = v56;
  v57 = objc_msgSend(v101, "heightAnchor");
  v58 = objc_msgSend(v57, "constraintEqualToConstant:", 44.0);

  *(_QWORD *)(v10 + 144) = v58;
  v59 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton];
  v60 = objc_msgSend(v59, "topAnchor");
  v61 = objc_msgSend(v101, "topAnchor");
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:constant:", v61, 10.0);

  *(_QWORD *)(v10 + 152) = v62;
  v63 = objc_msgSend(v59, "bottomAnchor");
  v64 = objc_msgSend(v101, "bottomAnchor");
  v65 = objc_msgSend(v63, "constraintEqualToAnchor:constant:", v64, -10.0);

  *(_QWORD *)(v10 + 160) = v65;
  v66 = objc_msgSend(v59, "centerXAnchor");
  v67 = objc_msgSend(v101, "centerXAnchor");
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

  *(_QWORD *)(v10 + 168) = v68;
  v69 = objc_msgSend(v59, "widthAnchor");
  objc_msgSend(v59, "sizeThatFits:", 0.0, 0.0);
  v70 = objc_msgSend(v69, "constraintEqualToConstant:");

  *(_QWORD *)(v10 + 176) = v70;
  v105 = v10;
  specialized Array._endMutation()(v71);
  v72 = objc_msgSend(v100, "topAnchor");
  v73 = objc_msgSend(v37, "topAnchor");
  v74 = (char *)objc_msgSend(v72, "constraintEqualToAnchor:", v73);

  v75 = v74;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
  v77 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v76 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v77 >= v76 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
  v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v75);
  specialized Array._endMutation()(v78);

  v79 = objc_msgSend(v103, "trailingAnchor");
  v80 = objc_msgSend(v1, "trailingAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:constant:", v80, -15.0);

  v82 = objc_msgSend(v102, "bottomAnchor");
  v83 = objc_msgSend(v54, "bottomAnchor");
  v84 = objc_msgSend(v82, "constraintEqualToAnchor:", v83);

  LODWORD(v85) = 1148829696;
  objc_msgSend(v81, "setPriority:", v85);
  LODWORD(v86) = 1148829696;
  objc_msgSend(v84, "setPriority:", v86);
  if ((unint64_t)v105 >> 62)
  {
    if (v105 < 0)
      v97 = v105;
    else
      v97 = v105 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v105);
    v98 = _CocoaArrayWrapper.endIndex.getter(v97);
    v99 = __OFADD__(v98, 2);
    v89 = v98 + 2;
    if (!v99)
    {
LABEL_5:
      v90 = sub_1000BD6DC(v89, 1);
      specialized Array._endMutation()(v90);
      v81 = v81;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
      v74 = *(char **)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v88 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v74 < v88 >> 1)
        goto LABEL_6;
      goto LABEL_15;
    }
  }
  else
  {
    v87 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v105);
    v89 = v87 + 2;
    if (!__OFADD__(v87, 2))
      goto LABEL_5;
  }
  __break(1u);
LABEL_15:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v74 + 1, 1);
LABEL_6:
  v91 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v74, v81);
  specialized Array._endMutation()(v91);
  v92 = v84;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v92);
  v94 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v93 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v94 >= v93 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v93 > 1, v94 + 1, 1);
  v95 = (void *)objc_opt_self(NSLayoutConstraint);
  v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v94, v92);
  specialized Array._endMutation()(v96);
  swift_bridgeObjectRelease(v105);

  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v105);
  objc_msgSend(v95, "activateConstraints:", isa);

}

void sub_100042238(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = v4;
  if ((a4 & 1) == 0)
    objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel), "setTextAlignment:");
  __asm { BR              X10 }
}

void sub_1000422A8()
{
  uint64_t v0;
  void *v1;
  double v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  void *v11;
  id (*v12)();
  uint64_t v13;

  sub_100062FF8(0);
  v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView);
  objc_msgSend(v1, "alpha");
  if (v2 == 1.0)
  {
    v3 = swift_allocObject(&unk_100135AD8, 24, 7);
    *(_QWORD *)(v3 + 16) = v1;
    v4 = (void *)objc_opt_self(UIView);
    v12 = sub_10003D030;
    v13 = v3;
    v8 = _NSConcreteStackBlock;
    v9 = 1107296256;
    v10 = sub_100030658;
    v11 = &unk_100135AF0;
    v5 = _Block_copy(&v8);
    v6 = v13;
    v7 = v1;
    swift_retain(v3);
    swift_release(v6);
    objc_msgSend(v4, "animateWithDuration:delay:options:animations:completion:", 0x20000, v5, 0, 0.125, 0.0, v8, v9);
    _Block_release(v5);
    swift_release(v3);
  }
}

void sub_100042578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, uint64_t (*a11)(uint64_t a1), void *a12, id (*a13)(), uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  double v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  float v23;
  _BOOL8 v24;
  double v25;

  sub_100062FF8(3);
  v16 = *(void **)(v15 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView);
  objc_msgSend(v16, "alpha");
  if (v17 == 0.0)
  {
    v18 = swift_allocObject(&unk_100135B28, 24, 7);
    *(_QWORD *)(v18 + 16) = v16;
    v19 = (void *)objc_opt_self(UIView);
    a13 = sub_1000372B8;
    a14 = v18;
    a9 = _NSConcreteStackBlock;
    a10 = 1107296256;
    a11 = sub_100030658;
    a12 = &unk_100135B40;
    v20 = _Block_copy(&a9);
    v21 = a14;
    v22 = v16;
    swift_retain(v18);
    swift_release(v21);
    objc_msgSend(v19, "animateWithDuration:delay:options:animations:completion:", 0x10000, v20, 0, 0.375, 0.0);
    _Block_release(v20);
    *(_QWORD *)&v17 = swift_release(v18).n128_u64[0];
  }
  if ((v14 & 0x100000000) == 0)
  {
    objc_msgSend(v16, "progress", v17);
    v24 = v23 < *(float *)&v14;
    LODWORD(v25) = v14;
    objc_msgSend(v16, "setProgress:animated:", v24, v25);
  }
  JUMPOUT(0x100042558);
}

void sub_1000426B4(char a1)
{
  uint64_t v1;
  id v3;
  NSString v4;
  unsigned __int8 v5;
  id v6;
  unsigned int v7;
  uint64_t v8;
  void *v9;

  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "BOOLForKey:", v4);

  if ((v5 & 1) == 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
    v7 = objc_msgSend(v6, "isInBoxUpdateModeActive");
    swift_unknownObjectRelease(v6);
    if (!v7)
      __asm { BR              X10 }
  }
  v8 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_idleTimeoutTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_idleTimeoutTimer), "invalidate");
  v9 = *(void **)(v1 + v8);
  *(_QWORD *)(v1 + v8) = 0;

  __asm { BR              X10 }
}

id sub_100042884()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel);
    v3 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setText:", v3);

    v4 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
    if (v4)
    {
      v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler + 8);
      v6 = swift_retain(v5);
      v4(v6);
      sub_100035D74((uint64_t)v4, v5);
    }
  }
  return sub_100042F00();
}

void sub_1000429A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel);
    v3 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setText:", v3);

    v4 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
    if (v4)
    {
      v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler + 8);
      v6 = swift_retain(v5);
      v4(v6);
      sub_100035D74((uint64_t)v4, v5);
    }
  }
  sub_100042CDC();
}

void sub_100042A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, v1 + 1, (void *)0x80000001001126F0);
  v3 = v2;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setText:", v5);

  v6 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler + 8);
    v8 = swift_retain(v7);
    v6(v8);
    sub_100035D74((uint64_t)v6, v7);
  }
  swift_bridgeObjectRelease(v3);
  JUMPOUT(0x100042AECLL);
}

void sub_100042B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;

  v18 = static os_log_type_t.info.getter();
  v19 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  v20 = (void *)static OS_os_log.default.getter(v19);
  os_log(_:dso:log:_:_:)(v18, &_mh_execute_header, v20, "Exiting due to inactivity from AST 2", 36, 2, &_swiftEmptyArrayStorage);

  sub_100098BDC(0xEu, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_100042BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[5];
  _BYTE v10[24];
  _BYTE v11[24];
  uint64_t v12;

  v1 = v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_delegate, v10, 0, 0);
  sub_100043330(v1, (uint64_t)v11);
  if (!v12)
    return sub_1000432B4((uint64_t)v11);
  sub_10003CE84((uint64_t)v11, (uint64_t)v9);
  sub_1000432B4((uint64_t)v11);
  v2 = *(_QWORD *)(*sub_10003CEC8(v9, v9[3]) + OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState);
  if (v2 && (v3 = objc_msgSend(*(id *)(v2 + 40), "suiteName")) != 0)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  sub_1000B7C8C(v5, v7);
  swift_bridgeObjectRelease(v7);
  return sub_10003CEEC(v9);
}

void sub_100042CDC()
{
  uint64_t v0;
  id v1;
  NSString v2;
  unsigned __int8 v3;
  id v4;
  unsigned __int8 v5;
  void *v6;
  double v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "BOOLForKey:", v2);

  if ((v3 & 1) == 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
    v5 = objc_msgSend(v4, "isInBoxUpdateModeActive");
    swift_unknownObjectRelease(v4);
    if ((v5 & 1) == 0)
    {
      v6 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton);
      objc_msgSend(v6, "alpha");
      if (v7 == 0.0)
      {
        v8 = swift_allocObject(&unk_1001359C0, 24, 7);
        *(_QWORD *)(v8 + 16) = v6;
        v9 = (void *)objc_opt_self(UIView);
        v18[4] = sub_100036E1C;
        v19 = v8;
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 1107296256;
        v18[2] = sub_100030658;
        v18[3] = &unk_1001359D8;
        v10 = _Block_copy(v18);
        v11 = v19;
        v12 = v6;
        swift_retain(v8);
        swift_release(v11);
        objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 0x10000, v10, 0, 0.375, 0.0);
        _Block_release(v10);
        *(_QWORD *)&v7 = swift_release(v8).n128_u64[0];
      }
      v13 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint);
      if (v13)
        objc_msgSend(v13, "setActive:", 1, v7);
      v14 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint);
      if (v14)
        objc_msgSend(v14, "setActive:", 0, v7);
      v15 = *(void (**)(uint64_t))(v0
                                           + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
      if (v15)
      {
        v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler + 8);
        v17 = swift_retain(v16);
        v15(v17);
        sub_100035D74((uint64_t)v15, v16);
      }
    }
  }
}

id sub_100042F00()
{
  uint64_t v0;
  void *v1;
  double v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id result;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton);
  objc_msgSend(v1, "alpha");
  if (v2 == 1.0)
  {
    v3 = swift_allocObject(&unk_100135970, 24, 7);
    *(_QWORD *)(v3 + 16) = v1;
    v4 = (void *)objc_opt_self(UIView);
    v13[4] = sub_10003CDF4;
    v14 = v3;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_100030658;
    v13[3] = &unk_100135988;
    v5 = _Block_copy(v13);
    v6 = v14;
    v7 = v1;
    swift_retain(v3);
    swift_release(v6);
    objc_msgSend(v4, "animateWithDuration:delay:options:animations:completion:", 0x20000, v5, 0, 0.125, 0.0);
    _Block_release(v5);
    *(_QWORD *)&v2 = swift_release(v3).n128_u64[0];
  }
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint);
  if (v8)
    objc_msgSend(v8, "setActive:", 0, v2);
  result = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint);
  if (result)
    result = objc_msgSend(result, "setActive:", 1, v2);
  v10 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
  if (v10)
  {
    v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler + 8);
    v12 = swift_retain(v11);
    v10(v12);
    return (id)sub_100035D74((uint64_t)v10, v11);
  }
  return result;
}

void sub_100043080()
{
  uint64_t v0;

  sub_1000432B4(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_delegate);
  sub_100035D74(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler + 8));

}

id sub_100043150()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TestRunnerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TestRunnerView()
{
  return objc_opt_self(_TtC11Diagnostics14TestRunnerView);
}

uint64_t sub_10004327C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_hasExplicitHeight);
}

uint64_t sub_100043290(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
  v4 = *v3;
  v5 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  return sub_100035D74(v4, v5);
}

uint64_t sub_1000432B4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100035CA4(&qword_10016AFE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000432F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100043318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100043328(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100043330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4(&qword_10016AFE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1000433C4(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  DARootViewController *v8;
  DARootViewController *v9;
  const char *v10;
  DARootViewController *v11;
  id v12;
  int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSString v19;
  SEL v20;
  id v21;
  int v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  int DeviceClass;
  uint64_t v31;
  const char *v32;
  DARootViewController *v33;
  id v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  Swift::String v40;
  DARootViewController *v41;
  NSString v42;
  void *v43;
  id v44;
  const char *v45;
  void *v46;
  int v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  NSString v52;
  SEL v53;
  id v54;
  int v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  DARootViewController *v61;
  DARootViewController *v62;
  const char *v63;
  DARootViewController *v64;
  id v65;
  int v66;
  id v67;
  id v68;
  id v69;
  id v70;
  NSString v71;
  SEL v72;
  id v73;
  int v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  objc_super v81;
  uint64_t v82;
  DARootViewController *v83;

  v3 = OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_tableView;
  v4 = objc_allocWithZone((Class)type metadata accessor for IntrinsicSizeAdjustingTableView());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithFrame:style:", 2, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_noContentView;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v9 = v8;
  sub_10003FFA0(v7, v8, (uint64_t)&_swiftEmptyArrayStorage, 0x415441445F4F4ELL, (void *)0xE700000000000000);
  v11 = (DARootViewController *)v10;
  swift_bridgeObjectRelease(v9, v10, v12, v13, v14, v15, v16, v17);
  v18 = objc_allocWithZone((Class)_UIContentUnavailableView);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11, v20, v21, v22, v23, v24, v25, v26);
  v27 = objc_msgSend(v18, "initWithFrame:title:style:", v19, 0, 0.0, 0.0, 0.0, 0.0);

  *(_QWORD *)&v5[v6] = v27;
  v28 = OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton;
  *(_QWORD *)&v5[v28] = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_suiteManager] = a1;
  v29 = a1;

  _StringGuts.grow(_:)(31);
  DeviceClass = GestaltGetDeviceClass();
  v31 = sub_10009F870(DeviceClass);
  v33 = (DARootViewController *)v32;
  swift_bridgeObjectRelease((DARootViewController *)0xE000000000000000, v32, v34, v35, v36, v37, v38, v39);
  v82 = v31;
  v83 = v33;
  v40._object = (void *)0x80000001001127D0;
  v40._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v40);
  v41 = v33;
  v42 = String._bridgeToObjectiveC()();
  v43 = (void *)objc_opt_self(UIImage);
  v44 = objc_msgSend(v43, "_systemImageNamed:", v42);

  if (v44)
  {
    swift_bridgeObjectRelease(v33, v45, v46, v47, v48, v49, v50, v51);
  }
  else
  {
    v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v41, v53, v54, v55, v56, v57, v58, v59);
    v44 = objc_msgSend(v43, "imageNamed:", v52);

  }
  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v62 = v61;
  sub_10003FFA0(v60, v61, (uint64_t)&_swiftEmptyArrayStorage, 0x5F4E4F4953534553, (void *)0xEF59524F54534948);
  v64 = (DARootViewController *)v63;
  swift_bridgeObjectRelease(v62, v63, v65, v66, v67, v68, v69, v70);
  v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v64, v72, v73, v74, v75, v76, v77, v78);
  v81.receiver = v5;
  v81.super_class = (Class)type metadata accessor for SelfServiceSessionHistoryViewController();
  v79 = objc_msgSendSuper2(&v81, "initWithTitle:detailText:icon:contentLayout:", v71, 0, v44, 3);

  return v79;
}

void sub_100043718()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  NSString v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  void *v13;
  id v14;

  v1 = v0;
  v2 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v2, "setHidesBackButton:", 1);

  v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_tableView];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v3, "setDataSource:", v1);
  objc_msgSend(v3, "setDelegate:", v1);
  objc_msgSend(v3, "setShowsVerticalScrollIndicator:", 0);
  objc_msgSend(v3, "setScrollEnabled:", 0);
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  objc_msgSend(v3, "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(v3, "setEstimatedRowHeight:", 100.0);
  v5 = type metadata accessor for SelfServiceSessionHistoryCell(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v7);

  v8 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton];
  sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, 1162760004, (void *)0xE400000000000000);
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v8, "setTitle:forState:", v11, 0);

  sub_100037118(0, (unint64_t *)&qword_10016DFF0, UIAction_ptr);
  v12 = swift_allocObject(&unk_100135BF0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100044F70, v12);
  objc_msgSend(v8, "addAction:forControlEvents:", v13, 64);

  v14 = objc_msgSend(v1, "scrollView");
  objc_msgSend(v14, "setShowsVerticalScrollIndicator:", 0);

}

void sub_1000439C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong
    && (v4 = Strong,
        v5 = objc_msgSend(Strong, "navigationController"),
        v4,
        v5))
  {
    v6 = objc_msgSend(v5, "popViewControllerAnimated:", 1);

  }
  else
  {
    swift_beginAccess(v2, &v8, 0, 0);
    v7 = (void *)swift_unknownObjectWeakLoadStrong(v2);
    if (!v7)
      return;
    v6 = v7;
    objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0);
  }

}

void sub_100043A9C()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;

  v1 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_suiteManager]
                + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v1)
  {
    v2 = objc_msgSend(v1, "history");
    v3 = sub_100037118(0, &qword_10016E1A0, &off_100131AA0);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    v5 = sub_100044A04(v4);
    if (!((unint64_t)v5 >> 62))
    {
LABEL_3:
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    v5 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_3;
  }
  if (v5 < 0)
    v8 = v5;
  else
    v8 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v5);
LABEL_4:
  swift_bridgeObjectRelease(v5);
  if (v6 >= 1)
  {
    v7 = objc_msgSend(v0, "contentView");
    objc_msgSend(v7, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_tableView]);
LABEL_13:

    goto LABEL_14;
  }
  v9 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_noContentView];
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = objc_msgSend(v0, "contentView");
    objc_msgSend(v7, "addSubview:", v10);

    goto LABEL_13;
  }
LABEL_14:
  v11 = objc_msgSend(v0, "buttonTray");
  objc_msgSend(v11, "addButton:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton]);

}

void sub_100043C58()
{
  char *v0;
  void *v1;
  id v2;
  unsigned int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  Class isa;
  void *v25;
  id v26;
  unsigned int v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  Class v48;
  id v49;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_tableView];
  v2 = objc_msgSend(v0, "contentView");
  v3 = objc_msgSend(v1, "isDescendantOfView:", v2);

  if (v3)
  {
    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
    v6 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v6 + 16) = xmmword_10010BF30;
    v7 = objc_msgSend(v1, "leadingAnchor");
    v8 = objc_msgSend(v0, "contentView");
    v9 = objc_msgSend(v8, "leadingAnchor");

    v10 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v9, 15.0);
    *(_QWORD *)(v6 + 32) = v10;
    v11 = objc_msgSend(v1, "trailingAnchor");
    v12 = objc_msgSend(v0, "contentView");
    v13 = objc_msgSend(v12, "trailingAnchor");

    v14 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v13, -15.0);
    *(_QWORD *)(v6 + 40) = v14;
    v15 = objc_msgSend(v1, "topAnchor");
    v16 = objc_msgSend(v0, "contentView");
    v17 = objc_msgSend(v16, "topAnchor");

    v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);
    *(_QWORD *)(v6 + 48) = v18;
    v19 = objc_msgSend(v1, "bottomAnchor");
    v20 = objc_msgSend(v0, "contentView");
    v21 = objc_msgSend(v20, "bottomAnchor");

    v22 = objc_msgSend(v19, "constraintEqualToAnchor:", v21);
    *(_QWORD *)(v6 + 56) = v22;
    specialized Array._endMutation()(v23);
    sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v6);
    objc_msgSend(v4, "activateConstraints:", isa);

    objc_msgSend(v1, "invalidateIntrinsicContentSize");
  }
  else
  {
    v25 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_noContentView];
    if (v25)
    {
      v49 = v25;
      v26 = objc_msgSend(v0, "contentView");
      v27 = objc_msgSend(v49, "isDescendantOfView:", v26);

      if (v27)
      {
        v28 = (void *)objc_opt_self(NSLayoutConstraint);
        v29 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
        v30 = swift_allocObject(v29, 64, 7);
        *(_OWORD *)(v30 + 16) = xmmword_10010BF30;
        v31 = objc_msgSend(v49, "leadingAnchor");
        v32 = objc_msgSend(v0, "contentView");
        v33 = objc_msgSend(v32, "leadingAnchor");

        v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, 15.0);
        *(_QWORD *)(v30 + 32) = v34;
        v35 = objc_msgSend(v49, "trailingAnchor");
        v36 = objc_msgSend(v0, "contentView");
        v37 = objc_msgSend(v36, "trailingAnchor");

        v38 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v37, -15.0);
        *(_QWORD *)(v30 + 40) = v38;
        v39 = objc_msgSend(v49, "topAnchor");
        v40 = objc_msgSend(v0, "contentView");
        v41 = objc_msgSend(v40, "topAnchor");

        v42 = objc_msgSend(v39, "constraintEqualToAnchor:", v41);
        *(_QWORD *)(v30 + 48) = v42;
        v43 = objc_msgSend(v49, "bottomAnchor");
        v44 = objc_msgSend(v0, "contentView");
        v45 = objc_msgSend(v44, "bottomAnchor");

        v46 = objc_msgSend(v43, "constraintEqualToAnchor:", v45);
        *(_QWORD *)(v30 + 56) = v46;
        specialized Array._endMutation()(v47);
        sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
        v48 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v30);
        objc_msgSend(v28, "activateConstraints:", v48);

      }
      else
      {

      }
    }
  }
}

id sub_1000442C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceSessionHistoryViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SelfServiceSessionHistoryViewController()
{
  return objc_opt_self(_TtC11Diagnostics39SelfServiceSessionHistoryViewController);
}

char *sub_100044478(void *a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v43;
  _BYTE v45[24];

  v5 = sub_100035CA4((uint64_t *)&unk_10016B050);
  __chkstk_darwin(v5);
  v7 = (uint64_t)&v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v8);

  if (v9)
  {
    v10 = type metadata accessor for SelfServiceSessionHistoryCell(0);
    v11 = (id)swift_dynamicCastClass(v9, v10);
    if (v11)
      goto LABEL_5;

  }
  v12 = type metadata accessor for SelfServiceSessionHistoryCell(0);
  v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)), "init");
LABEL_5:
  v13 = (void *)objc_opt_self(UIColor);
  v14 = (char *)v11;
  v15 = objc_msgSend(v13, "secondarySystemBackgroundColor");
  objc_msgSend(v14, "setBackgroundColor:", v15);

  v16 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_suiteManager)
                 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v16)
  {
    v17 = objc_msgSend(v16, "history");
    v18 = sub_100037118(0, &qword_10016E1A0, &off_100131AA0);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    v20 = sub_100044A04(v19);
  }
  else
  {
    v20 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v21 = a2;
  v22 = IndexPath.row.getter();
  if ((v20 & 0xC000000000000001) == 0)
  {
    if ((v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v22 < *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v23 = (char *)*(id *)(v20 + 8 * v22 + 32);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_24;
  }
  v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v20);
LABEL_12:
  a2 = v23;
  swift_bridgeObjectRelease(v20);
  v24 = objc_msgSend(a2, "testSuiteName");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28 = (uint64_t *)&v14[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteName];
  v29 = *(_QWORD *)&v14[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteName + 8];
  *v28 = v25;
  v28[1] = v27;
  swift_bridgeObjectRelease(v29);
  v30 = v28[1];
  if (v30)
  {
    v31 = *(void **)&v14[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteNameLabel];
    swift_bridgeObjectRetain(v28[1]);
    v32 = v31;
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    objc_msgSend(v32, "setText:", v33);

  }
  v34 = objc_msgSend(a2, "date");
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  v35 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v7, 0, 1, v35);
  v36 = (uint64_t)&v14[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date];
  swift_beginAccess(&v14[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date], v45, 33, 0);
  sub_100044EC4(v7, v36);
  swift_endAccess(v45);
  sub_10005C164();
  sub_100044F0C(v7);
  v37 = (char *)objc_msgSend(a2, "results");
  if (v37)
  {
    v21 = v37;
    v38 = objc_msgSend(v37, "components");
    v39 = sub_100037118(0, &qword_10016B040, ASTSuiteResultComponent_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);

    if (!((unint64_t)v7 >> 62))
    {
      v40 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_17;
    }
LABEL_24:
    if (v7 < 0)
      v43 = v7;
    else
      v43 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v40 = _CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease(v7);
LABEL_17:
    swift_bridgeObjectRelease(v7);
    if (v40)
    {
      v41 = v14;
      objc_msgSend(v41, "setAccessoryType:", 1);

      v21 = v41;
    }

  }
  return v14;
}

uint64_t sub_100044A04(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v21 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease(v1);
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    v19 = swift_retain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
    swift_release(v2);
    v20 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v20 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v8 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        v9 = v21;
        if ((v21 & 0xC000000000000001) != 0)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v21);
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - (v5 + 1), v21);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v10 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v10)
            goto LABEL_34;
          v11 = *(id *)(v21 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v10)
            goto LABEL_37;
          v12 = (uint64_t)v11;
          v13 = *(id *)(v21 + 32 + 8 * v1);
        }
        v14 = v13;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v9 = sub_100034AD0(v21);
          v21 = v9;
        }
        v15 = (v9 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v15 + 32) = v14;
        specialized Array._endMutation()(v16);
        v17 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v17 = sub_100034AD0(v21);
          v21 = v17;
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v6 = (v17 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(_QWORD *)(v6 + 32) = v12;
        specialized Array._endMutation()(v7);
      }
      v5 = v8;
      if (v4 == v8)
        return v21;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_10009231C(v1);
    v21 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

void sub_100044C1C(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  _OWORD v26[2];
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v2 = v1;
  v4 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_suiteManager]
                + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v4)
  {
    v5 = objc_msgSend(v4, "history");
    v6 = sub_100037118(0, &qword_10016E1A0, &off_100131AA0);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    v8 = sub_100044A04(v7);
  }
  else
  {
    v8 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v9 = IndexPath.row.getter();
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v10 = *(id *)(v8 + 8 * v9 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_20;
  }
  v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v8);
LABEL_8:
  v25 = v10;
  swift_bridgeObjectRelease(v8);
  v11 = objc_msgSend(v25, "results");
  if (!v11)
  {
LABEL_16:

    return;
  }
  a1 = v11;
  v12 = objc_msgSend(v11, "components");
  v13 = sub_100037118(0, &qword_10016B040, ASTSuiteResultComponent_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if (!((unint64_t)v8 >> 62))
  {
    v14 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
LABEL_20:
  if (v8 < 0)
    v24 = v8;
  else
    v24 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v14 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v8);
LABEL_11:
  swift_bridgeObjectRelease(v8);
  if (!v14)
  {

    goto LABEL_16;
  }
  v15 = objc_msgSend(v2, "navigationController");
  v16 = objc_msgSend(v25, "testSuiteName");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v26[0] = xmmword_10010C1A0;
  v26[1] = xmmword_10010C1B0;
  v27 = v15;
  v28 = v17;
  v29 = v19;
  v30 = a1;
  objc_allocWithZone((Class)sub_100035CA4(&qword_10016B048));
  v20 = a1;
  v21 = (void *)UIHostingController.init(rootView:)(v26);
  v22 = objc_msgSend(v2, "navigationController");
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, "pushViewController:animated:", v21, 1);

  }
}

uint64_t sub_100044EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4((uint64_t *)&unk_10016B050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100044F0C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100035CA4((uint64_t *)&unk_10016B050);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100044F4C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100044F70(uint64_t a1)
{
  uint64_t v1;

  sub_1000439C8(a1, v1);
}

id sub_100044F78()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Assertions()), "init");
  qword_1001722E8 = (uint64_t)result;
  return result;
}

void sub_100044FA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  DARootViewController *v19;
  DARootViewController *v20;
  NSString v21;
  SEL v22;
  id v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  void **v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;

  v1 = OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleAssertion;
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleAssertion) && (byte_100172309 & 1) == 0)
  {
    v3 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v4 = swift_allocObject(v3, 72, 7);
    *(_OWORD *)(v4 + 16) = xmmword_10010BE30;
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v5 = (void *)qword_100172378;
    *(_QWORD *)(v4 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    *(_QWORD *)(v4 + 64) = sub_100046FF0();
    *(_QWORD *)(v4 + 32) = v5;
    v6 = (void *)static OS_os_log.default.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    os_log(_:dso:log:type:_:)("Taking out a status bar style assertion", 39, 2, &_mh_execute_header, v6, v7, v4);
    swift_bridgeObjectRelease((DARootViewController *)v4, v8, v9, v10, v11, v12, v13, v14);

    v15 = objc_msgSend(objc_allocWithZone((Class)SBSStatusBarStyleOverridesAssertion), "initWithStatusBarStyleOverrides:forPID:exclusive:showsWhenForeground:", 0x8000, getpid(), 0, 0);
    v16 = *(void **)(a1 + v1);
    *(_QWORD *)(a1 + v1) = v15;

    v17 = *(void **)(a1 + v1);
    if (v17)
    {
      v18 = v17;
      sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000019, (void *)0x8000000100112EC0);
      v20 = v19;
      v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20, v22, v23, v24, v25, v26, v27, v28);
      objc_msgSend(v18, "setStatusString:", v21);

      v29 = *(void **)(a1 + v1);
      if (v29)
      {
        v37 = sub_10004521C;
        v38 = 0;
        v33 = _NSConcreteStackBlock;
        v34 = 1107296256;
        v35 = sub_1000D25FC;
        v36 = &unk_100135C08;
        v30 = _Block_copy(&v33);
        v37 = sub_1000452F4;
        v38 = 0;
        v33 = _NSConcreteStackBlock;
        v34 = 1107296256;
        v35 = sub_100030658;
        v36 = &unk_100135C30;
        v31 = _Block_copy(&v33);
        v32 = v29;
        objc_msgSend(v32, "acquireWithHandler:invalidationHandler:", v30, v31);
        _Block_release(v31);
        _Block_release(v30);

      }
    }
  }
}

void sub_10004521C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  const char *v14;

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v2 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010BE30;
  v4 = sub_100047048();
  v5 = 28277;
  if ((a1 & 1) != 0)
    v5 = 0;
  v6 = 0xE200000000000000;
  *(_QWORD *)(v3 + 56) = &type metadata for String;
  *(_QWORD *)(v3 + 64) = v4;
  if ((a1 & 1) != 0)
    v6 = 0xE000000000000000;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v6;
  static os_log_type_t.default.getter(v4);
  os_log(_:dso:log:type:_:)("Took out a status bar assertion %ssuccessfully", v14);
  swift_bridgeObjectRelease((DARootViewController *)v3, v7, v8, v9, v10, v11, v12, v13);
}

void sub_1000452F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  SEL v4;
  id v5;
  int v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v0 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10010BE30;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v2 = (void *)qword_100172378;
  *(_QWORD *)(v1 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  *(_QWORD *)(v1 + 64) = sub_100046FF0();
  *(_QWORD *)(v1 + 32) = v2;
  v11 = (id)static OS_os_log.default.getter(v2);
  v3 = static os_log_type_t.default.getter(v11);
  os_log(_:dso:log:type:_:)("Status bar assertion was invalidated", 36, 2, &_mh_execute_header, v11, v3, v1);
  swift_bridgeObjectRelease((DARootViewController *)v1, v4, v5, v6, v7, v8, v9, v10);

}

void sub_1000453E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;

  v2 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010BE30;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v4 = (void *)qword_100172378;
  *(_QWORD *)(v3 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  *(_QWORD *)(v3 + 64) = sub_100046FF0();
  *(_QWORD *)(v3 + 32) = v4;
  v5 = (void *)static OS_os_log.default.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  os_log(_:dso:log:type:_:)("Invalidating status bar style assertion", 39, 2, &_mh_execute_header, v5, v6, v3);
  swift_bridgeObjectRelease((DARootViewController *)v3, v7, v8, v9, v10, v11, v12, v13);

  v14 = OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleAssertion;
  v15 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleAssertion);
  if (v15)
  {
    objc_msgSend(v15, "invalidate");
    v15 = *(void **)(a1 + v14);
  }
  *(_QWORD *)(a1 + v14) = 0;

}

void sub_1000454F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  NSString v23;
  Class isa;
  SEL v25;
  id v26;
  int v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  unsigned int v33;
  DARootViewController *v34;
  DARootViewController *v35;
  id v36;
  char isUniquelyReferenced_nonNull_native;
  DARootViewController *v38;
  SEL v39;
  id v40;
  int v41;
  id v42;
  id v43;
  id v44;
  id v45;
  DARootViewController *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  DARootViewController *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  DARootViewController *v56;
  SEL v57;
  id v58;
  int v59;
  id v60;
  id v61;
  id v62;
  id v63;
  int v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  DARootViewController *v68[3];
  _BYTE v69[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendAssertions);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendAssertions, v69, 0, 0);
  if (!*(_QWORD *)(*v3 + 16) || (sub_100072B98(a2), (v4 & 1) == 0))
  {
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v5 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v6 = swift_allocObject(v5, 72, 7);
    *(_OWORD *)(v6 + 16) = xmmword_10010BE30;
    *(_QWORD *)(v6 + 56) = &type metadata for Int32;
    *(_QWORD *)(v6 + 64) = &protocol witness table for Int32;
    *(_DWORD *)(v6 + 32) = a2;
    static os_log_type_t.default.getter(v6);
    os_log(_:dso:log:type:_:)("Taking out prevent task suspend assertions for pid: %d", v64);
    swift_bridgeObjectRelease((DARootViewController *)v6, v7, v8, v9, v10, v11, v12, v13);
    v14 = objc_msgSend((id)objc_opt_self(RBSTarget), "targetWithPid:", a2);
    v15 = String._bridgeToObjectiveC()();
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend((id)objc_opt_self(RBSDomainAttribute), "attributeWithDomain:name:", v15, v16);

    v18 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
    v19 = swift_allocObject(v18, 40, 7);
    *(_OWORD *)(v19 + 16) = xmmword_10010C200;
    *(_QWORD *)(v19 + 32) = v17;
    v68[0] = (DARootViewController *)v19;
    specialized Array._endMutation()(v19);
    v20 = objc_allocWithZone((Class)RBSAssertion);
    v21 = v14;
    v22 = v17;
    v23 = String._bridgeToObjectiveC()();
    sub_100037118(0, (unint64_t *)&unk_10016B1A0, RBSAttribute_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v68[0], v25, v26, v27, v28, v29, v30, v31);
    v32 = objc_msgSend(v20, "initWithExplanation:target:attributes:", v23, v21, isa);

    v68[0] = 0;
    v33 = objc_msgSend(v32, "acquireWithError:", v68);
    v34 = v68[0];
    if (v33)
    {
      swift_beginAccess(v3, v68, 33, 0);
      v35 = v34;
      v36 = v32;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v66 = *v3;
      *v3 = 0x8000000000000000;
      sub_1000E80C4((uint64_t)v36, a2, isUniquelyReferenced_nonNull_native);
      v38 = (DARootViewController *)*v3;
      *v3 = v66;
      swift_bridgeObjectRelease(v38, v39, v40, v41, v42, v43, v44, v45);
      swift_endAccess(v68);

    }
    else
    {
      v46 = v68[0];
      v47 = _convertNSErrorToError(_:)(v34);

      swift_willThrow();
      sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      swift_errorRetain(v47);
      v48 = swift_errorRetain(v47);
      v49 = static OS_os_log.default.getter(v48);
      v50 = static os_log_type_t.default.getter(v49);
      if (os_log_type_enabled(v49, v50))
      {
        v65 = v22;
        v51 = (uint8_t *)swift_slowAlloc(12, -1);
        v52 = (DARootViewController *)swift_slowAlloc(32, -1);
        v68[0] = v52;
        *(_DWORD *)v51 = 136315138;
        v66 = v47;
        swift_errorRetain(v47);
        v53 = sub_100035CA4(&qword_10016D600);
        v54 = String.init<A>(describing:)(&v66, v53);
        v56 = (DARootViewController *)v55;
        v66 = sub_10004711C(v54, v55, (uint64_t *)v68);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
        swift_bridgeObjectRelease(v56, v57, v58, v59, v60, v61, v62, v63);
        swift_errorRelease(v47);
        swift_errorRelease(v47);
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "Unable to acquire Task Suspend Assertion, error: %s", v51, 0xCu);
        swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v52, -1, -1);
        swift_slowDealloc(v51, -1, -1);

        swift_errorRelease(v47);
      }
      else
      {

        swift_errorRelease(v47);
        swift_errorRelease(v47);
        swift_errorRelease(v47);
      }
    }
  }
}

void sub_1000459FC(uint64_t a1)
{
  DARootViewController **v1;
  DARootViewController *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  SEL v25;
  id v26;
  int v27;
  id v28;
  id v29;
  id v30;
  id v31;
  DARootViewController *v32;
  SEL v33;
  id v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  DARootViewController **v40;
  unsigned __int8 *v41;
  char v42[24];

  v1 = (DARootViewController **)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendAssertions);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendAssertions, v42, 1, 0);
  v40 = v1;
  v2 = *v1;
  v41 = &v2[1].remoteCardFilter[8];
  v3 = 1 << v2->remoteCardFilter[16];
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)&v2[1].remoteCardFilter[8];
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(v2);
  v7 = 0;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    v13 = qword_10016A678;
    v14 = *(id *)(*(_QWORD *)v2[1].remoteCardFilter + 8 * i);
    if (v13 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v15 = qword_100172378;
    v16 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v17 = swift_allocObject(v16, 72, 7);
    *(_OWORD *)(v17 + 16) = xmmword_10010BE30;
    v18 = objc_msgSend(v14, "target");
    v19 = objc_msgSend(v18, "description");

    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    *(_QWORD *)(v17 + 56) = &type metadata for String;
    v23 = sub_100047048();
    *(_QWORD *)(v17 + 64) = v23;
    *(_QWORD *)(v17 + 32) = v20;
    *(_QWORD *)(v17 + 40) = v22;
    v24 = static os_log_type_t.default.getter(v23);
    os_log(_:dso:log:type:_:)("Invalidating prevent task suspend assertion for bundle identifier: %@", 69, 2, &_mh_execute_header, v15, v24, v17);
    swift_bridgeObjectRelease((DARootViewController *)v17, v25, v26, v27, v28, v29, v30, v31);
    objc_msgSend(v14, "invalidate");

    if (v5)
      goto LABEL_4;
LABEL_5:
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v6)
      goto LABEL_25;
    v11 = *(_QWORD *)&v41[8 * v10];
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v6)
        goto LABEL_25;
      v11 = *(_QWORD *)&v41[8 * v7];
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v6)
          goto LABEL_25;
        v11 = *(_QWORD *)&v41[8 * v7];
        if (!v11)
        {
          v7 = v10 + 3;
          if (v10 + 3 >= v6)
            goto LABEL_25;
          v11 = *(_QWORD *)&v41[8 * v7];
          if (!v11)
            break;
        }
      }
    }
LABEL_20:
    v5 = (v11 - 1) & v11;
  }
  v12 = v10 + 4;
  if (v12 >= v6)
  {
LABEL_25:
    swift_release(v2);
    v32 = *v40;
    *v40 = (DARootViewController *)&_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(v32, v33, v34, v35, v36, v37, v38, v39);
    return;
  }
  v11 = *(_QWORD *)&v41[8 * v12];
  if (v11)
  {
    v7 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v6)
      goto LABEL_25;
    v11 = *(_QWORD *)&v41[8 * v7];
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

void sub_100045CC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;

  v1 = OBJC_IVAR____TtC11Diagnostics10Assertions_sharingClient;
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_sharingClient))
  {
    v3 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v4 = swift_allocObject(v3, 72, 7);
    *(_OWORD *)(v4 + 16) = xmmword_10010BE30;
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v5 = (void *)qword_100172378;
    *(_QWORD *)(v4 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    *(_QWORD *)(v4 + 64) = sub_100046FF0();
    *(_QWORD *)(v4 + 32) = v5;
    v6 = (void *)static OS_os_log.default.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    os_log(_:dso:log:type:_:)("Taking out a prevent prox cards assertion", 41, 2, &_mh_execute_header, v6, v7, v4);
    swift_bridgeObjectRelease((DARootViewController *)v4, v8, v9, v10, v11, v12, v13, v14);

    v15 = objc_msgSend(objc_allocWithZone((Class)SFClient), "init");
    v16 = *(void **)(a1 + v1);
    *(_QWORD *)(a1 + v1) = v15;

    v17 = *(void **)(a1 + v1);
    if (v17)
    {
      v18 = v17;
      v19 = String._bridgeToObjectiveC()();
      objc_msgSend(v18, "activateAssertionWithIdentifier:", v19);

    }
  }
}

void sub_100045E5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;

  v2 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010BE30;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v4 = (void *)qword_100172378;
  *(_QWORD *)(v3 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  *(_QWORD *)(v3 + 64) = sub_100046FF0();
  *(_QWORD *)(v3 + 32) = v4;
  v5 = (void *)static OS_os_log.default.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  os_log(_:dso:log:type:_:)("Invalidating prevent prox cards assertion", 41, 2, &_mh_execute_header, v5, v6, v3);
  swift_bridgeObjectRelease((DARootViewController *)v3, v7, v8, v9, v10, v11, v12, v13);

  v14 = OBJC_IVAR____TtC11Diagnostics10Assertions_sharingClient;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_sharingClient), "invalidate");
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = 0;

}

void sub_100045F68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  DARootViewController *v15;
  DARootViewController *v16;
  id v17;
  id v18;
  DARootViewController *v19;
  DARootViewController *v20;
  NSString v21;
  SEL v22;
  id v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSString v29;
  SEL v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;

  v1 = OBJC_IVAR____TtC11Diagnostics10Assertions_systemGesturesAssertion;
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_systemGesturesAssertion))
  {
    v3 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v4 = swift_allocObject(v3, 72, 7);
    *(_OWORD *)(v4 + 16) = xmmword_10010BE30;
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v5 = (void *)qword_100172378;
    *(_QWORD *)(v4 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    *(_QWORD *)(v4 + 64) = sub_100046FF0();
    *(_QWORD *)(v4 + 32) = v5;
    v6 = (void *)static OS_os_log.default.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    os_log(_:dso:log:type:_:)("Taking out a disable sytem gestures assertion", 45, 2, &_mh_execute_header, v6, v7, v4);
    swift_bridgeObjectRelease((DARootViewController *)v4, v8, v9, v10, v11, v12, v13, v14);

    static String._unconditionallyBridgeFromObjectiveC(_:)(AXAssertionTypeDisableSystemGestures);
    v16 = v15;
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18 = objc_msgSend(v17, "bundleIdentifier");

    if (v18)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v20 = v19;

    }
    else
    {
      v20 = 0;
    }
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16, v22, v23, v24, v25, v26, v27, v28);
    if (v20)
    {
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20, v30, v31, v32, v33, v34, v35, v36);
    }
    else
    {
      v29 = 0;
    }
    v37 = objc_msgSend(objc_allocWithZone((Class)AXAssertion), "initWithType:identifier:", v21, v29);

    v38 = *(void **)(a1 + v1);
    *(_QWORD *)(a1 + v1) = v37;

  }
}

void sub_100046178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;

  v2 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010BE30;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v4 = (void *)qword_100172378;
  *(_QWORD *)(v3 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  *(_QWORD *)(v3 + 64) = sub_100046FF0();
  *(_QWORD *)(v3 + 32) = v4;
  v5 = (void *)static OS_os_log.default.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  os_log(_:dso:log:type:_:)("Invalidating disable system gestures assertion", 46, 2, &_mh_execute_header, v5, v6, v3);
  swift_bridgeObjectRelease((DARootViewController *)v3, v7, v8, v9, v10, v11, v12, v13);

  v14 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_systemGesturesAssertion);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_systemGesturesAssertion) = 0;

}

void sub_100046274(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  int deviceSupportsEnhancedMultitasking;
  uint64_t v5;
  id v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  SEL v13;
  id v14;
  int v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  id v23;

  v2 = (id)MobileGestalt_get_current_device(a1);
  if (v2)
  {
    v3 = v2;
    deviceSupportsEnhancedMultitasking = MobileGestalt_get_deviceSupportsEnhancedMultitasking();

    if (deviceSupportsEnhancedMultitasking)
    {
      v5 = OBJC_IVAR____TtC11Diagnostics10Assertions_isChamoisWindowingUIEnabledUserSetting;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11Diagnostics10Assertions_isChamoisWindowingUIEnabledUserSetting) == 2)
      {
        v6 = objc_msgSend(objc_allocWithZone((Class)SBSTestAutomationService), "init");
        v7 = objc_msgSend(v6, "isChamoisWindowingUIEnabled");

        *(_BYTE *)(v1 + v5) = v7;
        v9 = static os_log_type_t.default.getter(v8);
        if (qword_10016A678 != -1)
          swift_once(&qword_10016A678, sub_10008BF34);
        v10 = qword_100172378;
        v11 = sub_100035CA4((uint64_t *)&unk_10016BE40);
        v12 = swift_allocObject(v11, 72, 7);
        *(_OWORD *)(v12 + 16) = xmmword_10010BE30;
        *(_QWORD *)(v12 + 56) = &type metadata for Bool;
        *(_QWORD *)(v12 + 64) = &protocol witness table for Bool;
        *(_BYTE *)(v12 + 32) = v7;
        os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "Saving Chamois user setting: %d", v22);
        swift_bridgeObjectRelease((DARootViewController *)v12, v13, v14, v15, v16, v17, v18, v19);
        if (v7)
        {
          v21 = static os_log_type_t.default.getter(v20);
          os_log(_:dso:log:_:_:)(v21, &_mh_execute_header, qword_100172378, "Disabling Chamois", 17, 2, &_swiftEmptyArrayStorage);
          v23 = objc_msgSend(objc_allocWithZone((Class)SBSTestAutomationService), "init");
          objc_msgSend(v23, "setChamoisWindowingUIEnabled:", 0);

        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100046438(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  int deviceSupportsEnhancedMultitasking;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  SEL v13;
  id v14;
  int v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  int v21;

  v2 = (id)MobileGestalt_get_current_device(a1);
  if (v2)
  {
    v3 = v2;
    deviceSupportsEnhancedMultitasking = MobileGestalt_get_deviceSupportsEnhancedMultitasking();

    if (deviceSupportsEnhancedMultitasking)
    {
      v6 = OBJC_IVAR____TtC11Diagnostics10Assertions_isChamoisWindowingUIEnabledUserSetting;
      v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11Diagnostics10Assertions_isChamoisWindowingUIEnabledUserSetting);
      if (v7 != 2)
      {
        v8 = v7 & 1;
        v9 = static os_log_type_t.default.getter(v5);
        if (qword_10016A678 != -1)
          swift_once(&qword_10016A678, sub_10008BF34);
        v10 = qword_100172378;
        v11 = sub_100035CA4((uint64_t *)&unk_10016BE40);
        v12 = swift_allocObject(v11, 72, 7);
        *(_OWORD *)(v12 + 16) = xmmword_10010BE30;
        *(_QWORD *)(v12 + 56) = &type metadata for Bool;
        *(_QWORD *)(v12 + 64) = &protocol witness table for Bool;
        *(_BYTE *)(v12 + 32) = v8;
        os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "Setting Chamois to saved user setting: %d", v21);
        swift_bridgeObjectRelease((DARootViewController *)v12, v13, v14, v15, v16, v17, v18, v19);
        v20 = objc_msgSend(objc_allocWithZone((Class)SBSTestAutomationService), "init");
        objc_msgSend(v20, "setChamoisWindowingUIEnabled:", v8);

        *(_BYTE *)(v1 + v6) = 2;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_100046588()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  unsigned __int8 v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC11Diagnostics10Assertions____lazy_storage___airDropDiscoveryController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10Assertions____lazy_storage___airDropDiscoveryController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics10Assertions____lazy_storage___airDropDiscoveryController);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)SFAirDropDiscoveryController), "init");
    v5 = objc_msgSend(v4, "isNearbySharingEnabled");
    *(_BYTE *)(v0 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState) = v5;
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_100046614()
{
  uint64_t v0;
  uint64_t v1;
  const __CFString *v2;
  __CFString *v3;
  CFPropertyListRef v4;
  DARootViewController *v5;
  DARootViewController *v6;
  NSString v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  _QWORD v30[2];
  CFPropertyListRef v31;

  v1 = v0;
  v2 = (const __CFString *)kSFOperationDiscoverableModeKey;
  if (!kSFOperationDiscoverableModeKey)
  {
    __break(1u);
    goto LABEL_18;
  }
  v3 = (__CFString *)String._bridgeToObjectiveC()();
  v4 = CFPreferencesCopyAppValue(v2, v3);

  if (v4)
  {
    v31 = v4;
    if (swift_dynamicCast(v30, &v31, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6))
    {
      v5 = (DARootViewController *)v30[1];
      goto LABEL_7;
    }
  }
  if (!kSFOperationDiscoverableModeOff)
  {
LABEL_18:
    __break(1u);
    return;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(kSFOperationDiscoverableModeOff);
  v5 = v6;
LABEL_7:
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5, v8, v9, v10, v11, v12, v13, v14);
  v15 = (void *)kSFOperationDiscoverableModeContactsOnly;
  if (kSFOperationDiscoverableModeContactsOnly)
  {
    type metadata accessor for CFString(0);
    v17 = v16;
    v18 = sub_10002F158(&qword_10016B1B8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_10010BB38);
    v19 = v7;
    v20 = v15;
    LOBYTE(v17) = static _CFObject.== infix(_:_:)(v20, v19, v17, v18);

    if ((v17 & 1) != 0)
    {

      v21 = 1;
LABEL_13:
      *(_QWORD *)(v1 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting) = v21;
      v29 = sub_100046588();
      objc_msgSend(v29, "setDiscoverableMode:", 0);

      return;
    }
  }
  v22 = (void *)kSFOperationDiscoverableModeEveryone;
  if (kSFOperationDiscoverableModeEveryone)
  {
    type metadata accessor for CFString(0);
    v24 = v23;
    v25 = sub_10002F158(&qword_10016B1B8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_10010BB38);
    v26 = v22;
    v27 = v7;
    v28 = v26;
    LOBYTE(v24) = static _CFObject.== infix(_:_:)(v28, v27, v24, v25);

    if ((v24 & 1) != 0)
    {
      v21 = 2;
      goto LABEL_13;
    }
  }
  else
  {

  }
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting) = 0;
}

void sub_100046828()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;

  v1 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  v2 = objc_msgSend(v1, "isCheckerBoardActive");
  swift_unknownObjectRelease(v1);
  if ((v2 & 1) != 0)
  {
    v3 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v14 = (id)static OS_os_log.default.getter(v3);
    v4 = static os_log_type_t.default.getter(v14);
    os_log(_:dso:log:type:_:)("We are not in CheckerBoard. Not attempting to aquire capture button assertion from SpringBoard", 94, 2, &_mh_execute_header, v14, v4, &_swiftEmptyArrayStorage);
  }
  else
  {
    v5 = OBJC_IVAR____TtC11Diagnostics10Assertions_captureButtonAssertion;
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics10Assertions_captureButtonAssertion))
    {
      v6 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v14 = (id)static OS_os_log.default.getter(v6);
      v7 = static os_log_type_t.default.getter(v14);
      os_log(_:dso:log:type:_:)("Capture button assertion has already been acquired, ignoring request", 68, 2, &_mh_execute_header, v14, v7, &_swiftEmptyArrayStorage);
    }
    else
    {
      v14 = objc_msgSend((id)objc_opt_self(SBSHardwareButtonService), "sharedInstance");
      v8 = String._bridgeToObjectiveC()();
      v9 = objc_msgSend(v14, "acquireCaptureButtonSuppressionAssertionWithOptions:reason:", 0, v8);

      v10 = *(_QWORD *)(v0 + v5);
      *(_QWORD *)(v0 + v5) = v9;
      swift_unknownObjectRelease(v10);
      if (!*(_QWORD *)(v0 + v5))
      {
        v11 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
        v12 = (void *)static OS_os_log.default.getter(v11);
        v13 = static os_log_type_t.default.getter(v12);
        os_log(_:dso:log:type:_:)("Failed to get capture button assertion!", 39, 2, &_mh_execute_header, v12, v13, &_swiftEmptyArrayStorage);

      }
    }
  }

}

id sub_100046A20()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _BYTE *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  __n128 v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  _QWORD *v34;
  objc_class *v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_super v48;
  _QWORD *v49;

  v47 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleQueue;
  v43 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v10 = v0;
  static DispatchQoS.unspecified.getter(v11);
  v49 = _swiftEmptyArrayStorage;
  v12 = sub_10002F158((unint64_t *)&unk_10016BA30, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v46 = v12;
  v13 = sub_100035CA4(&qword_10016B1C0);
  v45 = sub_1000477F0();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v49, v13, v45, v4, v12);
  v44 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  v40 = *(void (**)(char *))(v1 + 104);
  v14 = v47;
  v40(v3);
  v15 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000034, 0x8000000100113140, v9, v6, v3, 0);
  *(_QWORD *)(v41 + v42) = v15;
  v42 = OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendQueue;
  static DispatchQoS.unspecified.getter(v16);
  v49 = _swiftEmptyArrayStorage;
  v17 = v6;
  v18 = v45;
  v39 = v4;
  v19 = v4;
  v20 = v46;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v49, v13, v45, v19, v46);
  v21 = v3;
  v38 = v3;
  v22 = v3;
  v23 = v44;
  v24 = (void (*)(char *, uint64_t, uint64_t))v40;
  ((void (*)(char *, _QWORD, uint64_t))v40)(v22, v44, v14);
  v25 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000038, 0x8000000100113180, v9, v17, v21, 0);
  *(_QWORD *)&v10[v42] = v25;
  v42 = OBJC_IVAR____TtC11Diagnostics10Assertions_preventProxCardsQueue;
  static DispatchQoS.unspecified.getter(v26);
  v49 = _swiftEmptyArrayStorage;
  v27 = v18;
  v28 = v39;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v49, v13, v27, v39, v20);
  v29 = v38;
  v30 = v47;
  v24(v38, v23, v47);
  v31 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000036, 0x80000001001131C0, v9, v17, v29, 0);
  *(_QWORD *)&v10[v42] = v31;
  v32 = OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue;
  static DispatchQoS.unspecified.getter(v33);
  v49 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v49, v13, v45, v28, v46);
  v24(v29, v44, v30);
  *(_QWORD *)&v10[v32] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000036, 0x8000000100113200, v9, v17, v29, 0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleAssertion] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11Diagnostics10Assertions_captureButtonAssertion] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendAssertions] = &_swiftEmptyDictionarySingleton;
  v10[OBJC_IVAR____TtC11Diagnostics10Assertions_isVoiceControlEnabled] = 1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11Diagnostics10Assertions_sharingClient] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11Diagnostics10Assertions_systemGesturesAssertion] = 0;
  v10[OBJC_IVAR____TtC11Diagnostics10Assertions_isChamoisWindowingUIEnabledUserSetting] = 2;
  v10[OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11Diagnostics10Assertions____lazy_storage___airDropDiscoveryController] = 0;
  v10[OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting] = 0;
  v34 = &v10[OBJC_IVAR____TtC11Diagnostics10Assertions_sharingdDomain];
  *v34 = 0xD000000000000032;
  v34[1] = 0x8000000100113240;

  v35 = (objc_class *)type metadata accessor for Assertions();
  v48.receiver = v10;
  v48.super_class = v35;
  return objc_msgSendSuper2(&v48, "init");
}

id sub_100046ED4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Assertions();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for Assertions()
{
  return objc_opt_self(_TtC11Diagnostics10Assertions);
}

unint64_t sub_100046FF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016B690;
  if (!qword_10016B690)
  {
    v1 = sub_100037118(255, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10016B690);
  }
  return result;
}

unint64_t sub_100047048()
{
  unint64_t result;

  result = qword_10016B190;
  if (!qword_10016B190)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10016B190);
  }
  return result;
}

uint64_t sub_10004708C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000470AC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v6 = a4();
  v8 = v7;
  v9 = sub_10004711C(v6, v7, a3);
  v10 = *a1 + 8;
  v12 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
  result = swift_bridgeObjectRelease(v8);
  *a1 = v10;
  return result;
}

uint64_t sub_10004711C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[3];
  void *ObjectType;

  v6 = sub_1000471EC(v13, 0, 0, 1, a1, a2);
  v8 = v13[0];
  if (v6)
  {
    v9 = v6;
    ObjectType = (void *)swift_getObjectType(v6, v7);
    v13[0] = v9;
    v10 = *a3;
    if (*a3)
    {
      sub_1000370B0((uint64_t)v13, *a3);
      *a3 = v10 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v13[0] = a1;
    v13[1] = a2;
    v11 = *a3;
    if (*a3)
    {
      sub_1000370B0((uint64_t)v13, *a3);
      *a3 = v11 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_10003CEEC(v13);
  return v8;
}

uint64_t sub_1000471EC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1000473A4(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_1000473A4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_100047438(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100047688(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100047688(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_100047438(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_1000475AC(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_1000475AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100035CA4(&qword_10016B1B0);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_100047610(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

uint64_t sub_100047688(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100035CA4(&qword_10016B1B0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000477D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000477E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1000477F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016BA40;
  if (!qword_10016BA40)
  {
    v1 = sub_100035D30(&qword_10016B1C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10016BA40);
  }
  return result;
}

id sub_1000479BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseViewController()
{
  return objc_opt_self(_TtC11Diagnostics18BaseViewController);
}

void sub_100047A98(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FileBrowsingTableViewController(0);
  objc_msgSendSuper2(&v9, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "navigationBar");

    objc_msgSend(v5, "setBackgroundImage:forBarMetrics:", 0, 0);
  }
  v6 = objc_msgSend(v1, "navigationController");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "navigationBar");

    objc_msgSend(v8, "setShadowImage:", 0);
  }
}

void sub_100047BD0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, (uint64_t)v1 + OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_directoryURL, v2);
  v7 = URL.lastPathComponent.getter(v6);
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_10006B944(v7, v9);
  v11 = v10;
  swift_bridgeObjectRelease(v9);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v1, "setTitle:", v12);

}

uint64_t sub_100047ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100035D74(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_completion), *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_completion + 8));
  v1 = v0 + OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_directoryURL;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_remoteFiles));
}

id sub_100047F38()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FileBrowsingTableViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100047FD0()
{
  return type metadata accessor for FileBrowsingTableViewController(0);
}

uint64_t type metadata accessor for FileBrowsingTableViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10016B2E0;
  if (!qword_10016B2E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FileBrowsingTableViewController);
  return result;
}

uint64_t sub_100048014(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10010C2D0;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 104);
    if (!result)
      return 0;
  }
  return result;
}

id sub_100048098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id result;
  void *v15;
  void *v16;
  objc_super v17;

  v7 = (uint64_t *)&v3[OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_completion];
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_remoteFiles] = _swiftEmptyArrayStorage;
  v8 = &v3[OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_directoryURL];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  v11 = *v7;
  v12 = v7[1];
  *v7 = a2;
  v7[1] = a3;
  sub_100035C4C(a2, a3);
  sub_100035D74(v11, v12);
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for FileBrowsingTableViewController(0);
  v13 = objc_msgSendSuper2(&v17, "initWithStyle:", 0);
  result = objc_msgSend(v13, "tableView");
  if (result)
  {
    v15 = result;
    objc_msgSend(result, "setDelegate:", v13);

    result = objc_msgSend(v13, "tableView");
    if (result)
    {
      v16 = result;
      objc_msgSend(result, "setDataSource:", v13);

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100048200()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = *((unsigned __int8 *)v0 + 16);
  v4 = type metadata accessor for ImageLoader(0);
  v5 = sub_100048CEC();
  return StateObject.wrappedValue.getter(v1, v2, v3, v4, v5);
}

uint64_t sub_10004824C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for ImageLoader(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v10 = 0;
  LOBYTE(v11) = 2;
  swift_bridgeObjectRetain(a2);
  Published.init(initialValue:)(&v10, &type metadata for AsyncImagePhase);
  v6 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
  v7 = objc_allocWithZone((Class)NSLock);
  *(_QWORD *)(v5 + v6) = objc_msgSend(v7, "init", v10, v11);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
  v8 = (_QWORD *)(v5 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  *v8 = a1;
  v8[1] = a2;
  return v5;
}

uint64_t sub_10004830C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __n128 v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void (*v25)(_QWORD, _QWORD, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  __int128 v33;
  char v34;

  v3 = v2;
  v30 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v26 = a1;
  v28 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ModifiedContent(0, v4, &type metadata for _AppearanceActionModifier);
  v29 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v27 = (uint64_t)&v25 - v11;
  v12 = *((_QWORD *)v2 + 4);
  v25 = (void (*)(_QWORD, _QWORD, __n128))*((_QWORD *)v2 + 3);
  v13 = sub_100048200();
  KeyPath = swift_getKeyPath(&unk_10010C380);
  v15 = swift_getKeyPath(&unk_10010C3A8);
  static Published.subscript.getter(&v33, v13, KeyPath, v15);
  swift_release(v13);
  swift_release(KeyPath);
  v16 = swift_release(v15);
  v17 = (void *)v33;
  LOBYTE(v15) = BYTE8(v33);
  v25(v33, BYTE8(v33), v16);
  sub_100048A04(v17, v15);
  v33 = *v3;
  v34 = *((_BYTE *)v3 + 16);
  v18 = swift_allocObject(&unk_100135D28, 72, 7);
  v19 = *(_QWORD *)(v26 + 24);
  *(_QWORD *)(v18 + 16) = v4;
  *(_QWORD *)(v18 + 24) = v19;
  v20 = v3[1];
  *(_OWORD *)(v18 + 32) = *v3;
  *(_OWORD *)(v18 + 48) = v20;
  *(_QWORD *)(v18 + 64) = *((_QWORD *)v3 + 4);
  sub_100048CBC((uint64_t *)&v33);
  swift_retain(v12);
  View.onAppear(perform:)(sub_100048CB0, v18, v4, v19);
  v21 = swift_release(v18);
  (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v6, v4, v21);
  v31 = v19;
  v32 = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  v22 = v27;
  sub_1000C4E0C((uint64_t)v10, v7, v27);
  v23 = *(void (**)(char *, uint64_t))(v29 + 8);
  v23(v10, v7);
  sub_1000C0B88(v22, v7, v30);
  return ((uint64_t (*)(uint64_t, uint64_t))v23)(v22, v7);
}

double sub_100048584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  double result;

  type metadata accessor for AsyncImage(0, a2, a3, a4);
  v4 = sub_100048200();
  sub_100065014();
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_1000485C0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_1000485D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10004830C(a1, a2);
}

void sub_100048610(void *a1@<X0>, unsigned __int8 a2@<W1>, _QWORD *a3@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = a2;
  v6 = sub_100035CA4(&qword_10016B2F0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100035CA4(&qword_10016B2F8);
  v11 = __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v5)
  {
    ProgressView<>.init<>()(v11);
    (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 16))(v13, v9, v6);
    swift_storeEnumTagMultiPayload(v13, v10, 1);
    v14 = sub_100035CA4(&qword_10016B300);
    v15 = sub_1000488FC();
    v16 = sub_1000489C4(qword_10016B328, &qword_10016B2F0, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    _ConditionalContent<>.init(storage:)(a3, v13, v14, v6, v15, v16);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v17 = sub_100048820((uint64_t)a1);
    v18 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
    v19 = Color.init(uiColor:)(v18);
    *v13 = v17;
    v13[1] = 0;
    v13[2] = 0;
    v13[3] = v19;
    swift_storeEnumTagMultiPayload(v13, v10, 0);
    v20 = v17;
    swift_retain(v19);
    v21 = sub_100035CA4(&qword_10016B300);
    v22 = sub_1000488FC();
    v23 = sub_1000489C4(qword_10016B328, &qword_10016B2F0, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    _ConditionalContent<>.init(storage:)(a3, v13, v21, v6, v22, v23);
    sub_100048A04(a1, 0);
    swift_release(v19);

  }
}

id sub_100048820(uint64_t a1)
{
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v2, "setImage:", a1);
  objc_msgSend(v2, "setContentMode:", 1);
  objc_msgSend(v2, "setClipsToBounds:", 1);
  LODWORD(v3) = 1132068864;
  objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 1, v3);
  LODWORD(v4) = 1132068864;
  objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 0, v4);
  LODWORD(v5) = 1132068864;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 1, v5);
  LODWORD(v6) = 1132068864;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 0, v6);
  return v2;
}

unint64_t sub_1000488FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016B308;
  if (!qword_10016B308)
  {
    v1 = sub_100035D30(&qword_10016B300);
    sub_100048980();
    sub_1000489C4((unint64_t *)&qword_10016B318, &qword_10016B320, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016B308);
  }
  return result;
}

unint64_t sub_100048980()
{
  unint64_t result;

  result = qword_10016B310;
  if (!qword_10016B310)
  {
    result = swift_getWitnessTable(&unk_10010CCB8, &_s23UIKitViewSwiftUIWrapperVN);
    atomic_store(result, (unint64_t *)&qword_10016B310);
  }
  return result;
}

uint64_t sub_1000489C4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100035D30(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100048A04(id a1, char a2)
{
  if (a2 == 1)
  {
    swift_errorRelease(a1);
  }
  else if (!a2)
  {

  }
}

uint64_t sub_100048A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100048A28(uint64_t a1, uint64_t a2)
{
  return swift_retain(a2);
}

double sub_100048A30(uint64_t *a1)
{
  double result;

  sub_100048A60(*a1, a1[1]);
  *(_QWORD *)&result = swift_release(a1[4]).n128_u64[0];
  return result;
}

uint64_t sub_100048A60(uint64_t a1, uint64_t a2)
{
  return swift_release(a2);
}

uint64_t sub_100048A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_100048A28(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain(v7);
  return a1;
}

uint64_t sub_100048AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_100048A28(*(_QWORD *)a2, v5);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_100048A60(v7, v8);
  v10 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain(v9);
  swift_release(v11);
  return a1;
}

__n128 initializeWithTake for LaunchURL(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_100048B54(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_100048A60(v5, v6);
  v7 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v7);
  return a1;
}

uint64_t sub_100048BA8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100048BF0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for AsyncImage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100048D34(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncImage);
}

uint64_t sub_100048C44(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10011D30C, 1);
}

uint64_t sub_100048C80()
{
  uint64_t *v0;

  sub_100048A60(v0[4], v0[5]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_100048CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100048584(v4 + 32, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t *sub_100048CBC(uint64_t *a1)
{
  sub_100048A28(*a1, a1[1]);
  return a1;
}

unint64_t sub_100048CEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016B3B0;
  if (!qword_10016B3B0)
  {
    v1 = type metadata accessor for ImageLoader(255);
    result = swift_getWitnessTable(&unk_10010CFC8, v1);
    atomic_store(result, (unint64_t *)&qword_10016B3B0);
  }
  return result;
}

uint64_t sub_100048D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_100048D60(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for _AppearanceActionModifier);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

uint64_t sub_100048DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v11;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100048E58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

id sub_100048E78()
{
  uint64_t v0;
  id result;

  v0 = type metadata accessor for RootViewController();
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  qword_100172300 = (uint64_t)result;
  return result;
}

uint64_t sub_100048EA8(char *a1, char *a2)
{
  return sub_10008122C(*a1, *a2);
}

Swift::Int sub_100048EB4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x2265746F6D655222;
  else
    v2 = 0x746C756166654422;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE900000000000022;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100048F38(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x2265746F6D655222;
  else
    v2 = 0x746C756166654422;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE900000000000022;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100048F98(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x2265746F6D655222;
  else
    v3 = 0x746C756166654422;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE900000000000022;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100049018@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100133C28, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100049074(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x746C756166654422;
  if (*v1)
    v2 = 0x2265746F6D655222;
  v3 = 0xE900000000000022;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_1000490B8()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  if (qword_10016A5E0 != -1)
    swift_once(&qword_10016A5E0, sub_10002F774);
  v0 = (void *)qword_1001722E0;
  v1 = objc_allocWithZone((Class)UINavigationController);
  v2 = v0;
  v3 = objc_msgSend(v1, "initWithRootViewController:", v2);

  qword_100172310 = (uint64_t)v3;
}

id sub_10004913C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DKViewControllerDelegateResponder()), "init");
  qword_100172318 = (uint64_t)result;
  return result;
}

void sub_10004916C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v2, "setBackgroundColor:", v3);

  }
  else
  {
    __break(1u);
  }
}

void sub_1000491F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  _QWORD aBlock[5];
  uint64_t v39;

  sub_1000497D4(1, 0);
  if (qword_10016A648 != -1)
    swift_once(&qword_10016A648, sub_100053F8C);
  v1 = qword_100172340;
  v2 = v0 + OBJC_IVAR___DARootViewController_remoteCardFilter;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___DARootViewController_remoteCardFilter);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR___DARootViewController_remoteCardFilter + 8);
  LOBYTE(v2) = *(_BYTE *)(v2 + 16);
  v5 = *(_QWORD *)(qword_100172340 + 16);
  v6 = *(_QWORD *)(qword_100172340 + 24);
  *(_QWORD *)(qword_100172340 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v4;
  *(_BYTE *)(v1 + 32) = v2;
  swift_bridgeObjectRetain_n(v3, 2);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  v7 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10016A650 != -1)
    swift_once(&qword_10016A650, sub_100057180);
  objc_msgSend(v7, "postNotificationName:object:", qword_100172348, 0);

  v8 = (void *)qword_10016B3C0;
  if (qword_10016B3C0)
  {
    v9 = type metadata accessor for SelfServiceDestinationPickerViewController();
    if (!swift_dynamicCastClass(v8, v9))
    {
      v16 = v8;
LABEL_24:
      v37 = v16;
      goto LABEL_25;
    }
  }
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  v10 = objc_msgSend((id)qword_100172310, "viewControllers");
  v11 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_11;
LABEL_22:
    swift_bridgeObjectRelease(v12);
    if (qword_10016A5F8 == -1)
    {
LABEL_23:
      v16 = (id)qword_100172300;
      goto LABEL_24;
    }
LABEL_44:
    swift_once(&qword_10016A5F8, sub_100048E78);
    goto LABEL_23;
  }
  if (v12 < 0)
    v17 = v12;
  else
    v17 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v13 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v12);
  if (!v13)
    goto LABEL_22;
LABEL_11:
  v14 = v13 - 1;
  if (__OFSUB__(v13, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_41:
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
    goto LABEL_16;
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v14 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v15 = *(id *)(v12 + 8 * v14 + 32);
LABEL_16:
  v37 = v15;
  swift_bridgeObjectRelease(v12);
LABEL_25:
  v18 = type metadata accessor for DashboardViewController();
  v19 = swift_dynamicCastClass(v37, v18);
  if (!v19)
    goto LABEL_35;
  v20 = v19;
  v21 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager;
  if (*(_BYTE *)(*(_QWORD *)(v19 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
                + OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly) != 1)
    goto LABEL_35;
  v22 = swift_allocObject(&unk_1001360C8, 24, 7);
  *(_QWORD *)(v22 + 16) = v20;
  v23 = qword_10016A678;
  v24 = v37;
  v37 = v24;
  if (v23 != -1)
    v24 = (id)swift_once(&qword_10016A678, sub_10008BF34);
  v25 = qword_100172378;
  v26 = static os_log_type_t.default.getter(v24);
  v27 = os_log(_:dso:log:type:_:)("Checking cached AST activity", 28, 2, &_mh_execute_header, v25, v26, _swiftEmptyArrayStorage);
  if (byte_10016CC90 != 4)
  {
    if (byte_10016CC90 == 1)
    {
      *(_BYTE *)(*(_QWORD *)(v20 + v21) + OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly) = 0;
      sub_1000E16E4();
    }
    goto LABEL_34;
  }
  v28 = static os_log_type_t.default.getter(v27);
  os_log(_:dso:log:type:_:)("No cached AST activity. Performing live session check", 53, 2, &_mh_execute_header, v25, v28, _swiftEmptyArrayStorage);
  v29 = objc_msgSend((id)objc_opt_self(CBSUtilities), "isSSRBootIntentSet");
  if ((_DWORD)v29)
  {
    byte_10016CC90 = 2;
LABEL_34:

    swift_release(v22);
LABEL_35:

    return;
  }
  v30 = static os_log_type_t.default.getter(v29);
  os_log(_:dso:log:type:_:)("Checking AST 2 activity", 23, 2, &_mh_execute_header, v25, v30, _swiftEmptyArrayStorage);
  v31 = objc_msgSend(objc_allocWithZone((Class)DADiagnosticsSessionAvailability), "init");
  v32 = qword_100172388;
  if (qword_100172388)
  {
    swift_bridgeObjectRetain(qword_100172388);
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v33 = 0;
  }
  v34 = swift_allocObject(&unk_1001360F0, 32, 7);
  *(_QWORD *)(v34 + 16) = sub_10004E234;
  *(_QWORD *)(v34 + 24) = v22;
  aBlock[4] = sub_1000370A8;
  v39 = v34;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A2514;
  aBlock[3] = &unk_100136108;
  v35 = _Block_copy(aBlock);
  v36 = v39;
  swift_retain(v22);
  swift_release(v36);
  objc_msgSend(v31, "checkAvailabilityWithTicketNumber:timeout:exitWhenDone:completion:", v33, 0, v35, 30.0);
  _Block_release(v35);

  swift_release(v22);
}

id sub_1000497D4(char a1, uint64_t (*a2)(id))
{
  void *v2;
  void *v3;
  int v5;
  char v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = v2;
  v5 = a1 & 1;
  v6 = byte_100172308;
  byte_100172308 = v5;
  sub_10004C744(v6);
  v7 = (void *)qword_10016B3C0;
  if (!qword_10016B3C0
    || (v8 = type metadata accessor for SelfServiceDestinationPickerViewController(), swift_dynamicCastClass(v7, v8)))
  {
    if (qword_10016A600 != -1)
      swift_once(&qword_10016A600, sub_1000490B8);
    v9 = objc_msgSend((id)qword_100172310, "viewControllers");
    v10 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v17 = v11;
      else
        v17 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v12 = _CocoaArrayWrapper.endIndex.getter(v17);
      swift_bridgeObjectRelease(v11);
      if (v12)
      {
LABEL_7:
        v13 = v12 - 1;
        if (__OFSUB__(v12, 1))
        {
          __break(1u);
        }
        else if ((v11 & 0xC000000000000001) == 0)
        {
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v13 < *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v14 = *(id *)(v11 + 8 * v13 + 32);
LABEL_12:
            v15 = v14;
            swift_bridgeObjectRelease(v11);
            goto LABEL_21;
          }
          __break(1u);
          goto LABEL_36;
        }
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
        goto LABEL_12;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v12)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease(v11);
    if (qword_10016A5F8 == -1)
    {
LABEL_19:
      v16 = (id)qword_100172300;
      goto LABEL_20;
    }
LABEL_36:
    swift_once(&qword_10016A5F8, sub_100048E78);
    goto LABEL_19;
  }
  v16 = v7;
LABEL_20:
  v15 = v16;
LABEL_21:
  v18 = type metadata accessor for DashboardViewController();
  if (swift_dynamicCastClass(v15, v18))
  {
    sub_10005EFF0();
    if (qword_10016A608 != -1)
      swift_once(&qword_10016A608, sub_10004913C);
    v19 = qword_100172318;
    v20 = type metadata accessor for DKViewControllerDelegateResponder();
    v21 = swift_dynamicCastClass(v19, v20);
    if (v21)
    {
      v22 = v21;
      v23 = (void *)objc_opt_self(UIApplication);
      swift_unknownObjectRetain(v19);
      v24 = objc_msgSend(v23, "sharedApplication");
      objc_msgSend(v24, "userInterfaceLayoutDirection");

      v25 = v22 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__presentationTransitionStyle;
      *(_QWORD *)v25 = 0;
      *(_BYTE *)(v25 + 8) = 1;
      v26 = objc_msgSend(v23, "sharedApplication");
      objc_msgSend(v26, "userInterfaceLayoutDirection");

      v27 = v22 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle;
      *(_QWORD *)v27 = 0;
      *(_BYTE *)(v27 + 8) = 1;
      swift_unknownObjectRelease(v19);
    }
  }

  objc_msgSend(v3, "setNeedsStatusBarAppearanceUpdate");
  if (v5)
  {
    v29 = 1;
    v28 = 0xE800000000000000;
  }
  else
  {
    v28 = 0xE900000000000022;
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746C756166654422, 0xE900000000000022, 0x2265746F6D655222, 0xE800000000000000, 0);
  }
  swift_bridgeObjectRelease(v28);
  byte_100172309 = v29 & 1;
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  return sub_10004C9C4((void *)qword_100172310, v3, a2);
}

id sub_100049B64(void *a1, char a2, uint64_t (*a3)(id))
{
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id result;

  v6 = (void *)qword_10016B3C0;
  if (!qword_10016B3C0
    || (v7 = type metadata accessor for SelfServiceDestinationPickerViewController(), swift_dynamicCastClass(v6, v7)))
  {
    if (qword_10016A600 != -1)
      swift_once(&qword_10016A600, sub_1000490B8);
    v8 = objc_msgSend((id)qword_100172310, "viewControllers");
    v9 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v16 = v10;
      else
        v16 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v11 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v10);
      if (v11)
      {
LABEL_7:
        v12 = v11 - 1;
        if (__OFSUB__(v11, 1))
        {
          __break(1u);
        }
        else if ((v10 & 0xC000000000000001) == 0)
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v12 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v13 = *(id *)(v10 + 8 * v12 + 32);
LABEL_12:
            v14 = v13;
            swift_bridgeObjectRelease(v10);
            goto LABEL_21;
          }
          __break(1u);
          goto LABEL_32;
        }
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
        goto LABEL_12;
      }
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v11)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease(v10);
    if (qword_10016A5F8 == -1)
    {
LABEL_19:
      v15 = (id)qword_100172300;
      goto LABEL_20;
    }
LABEL_32:
    swift_once(&qword_10016A5F8, sub_100048E78);
    goto LABEL_19;
  }
  v15 = v6;
LABEL_20:
  v14 = v15;
LABEL_21:
  v17 = objc_msgSend(v14, "navigationController");

  if (v17)
  {
    objc_msgSend(v17, "setNavigationBarHidden:", 0);

  }
  v18 = (void *)qword_10016B3C0;
  qword_10016B3C0 = (uint64_t)a1;

  v19 = a1;
  v20 = objc_msgSend(v19, "navigationItem");
  objc_msgSend(v20, "setHidesBackButton:animated:", 1, 0);

  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  result = objc_msgSend((id)qword_100172310, "pushViewController:animated:", v19, a2 & 1);
  if (a3)
    return (id)a3(result);
  return result;
}

uint64_t sub_100049DE8(uint64_t result)
{
  uint64_t v1;
  char v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  _OWORD v8[2];

  v2 = result;
  if (byte_100172309 != 1)
    return (uint64_t)objc_msgSend(*(id *)(v1 + OBJC_IVAR___DARootViewController_responder), "enableVolumeHUD:", result & 1);
  if (qword_100172320)
  {
    v3 = (id)qword_100172320;
    v4 = objc_msgSend(v3, "_remoteViewControllerProxy");
    if (v4)
    {
      v5 = v4;
      _bridgeAnyObjectToAny(_:)(v8);
      swift_unknownObjectRelease(v5);
    }
    else
    {
      memset(v8, 0, sizeof(v8));
    }
    v6 = sub_100035CA4((uint64_t *)&unk_10016B610);
    v7 = (void *)Optional._bridgeToObjectiveC()(v6);
    sub_100036FA0((uint64_t)v8, (uint64_t *)&unk_10016B610);

    objc_msgSend(v7, "viewServiceDidEnableVolumeHUD:", v2 & 1);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_100049F24(uint64_t result, double a2)
{
  uint64_t v2;
  char v3;
  int v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  double v10;
  _OWORD v11[2];

  v3 = result;
  v4 = LODWORD(a2);
  if (byte_100172309 != 1)
    return (uint64_t)objc_msgSend(*(id *)(v2 + OBJC_IVAR___DARootViewController_responder), "setScreenToBrightness:animate:", result & 1, a2);
  if (qword_100172320)
  {
    v5 = (id)qword_100172320;
    v6 = objc_msgSend(v5, "_remoteViewControllerProxy");
    if (v6)
    {
      v7 = v6;
      _bridgeAnyObjectToAny(_:)(v11);
      swift_unknownObjectRelease(v7);
    }
    else
    {
      memset(v11, 0, sizeof(v11));
    }
    v8 = sub_100035CA4((uint64_t *)&unk_10016B610);
    v9 = (void *)Optional._bridgeToObjectiveC()(v8);
    sub_100036FA0((uint64_t)v11, (uint64_t *)&unk_10016B610);

    LODWORD(v10) = v4;
    objc_msgSend(v9, "viewServiceDidSetScreenToBrightness:animate:", v3 & 1, v10);
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

void sub_10004A170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t sub_10004A1C8(uint64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;

  if (qword_10016A6C8 != -1)
    swift_once(&qword_10016A6C8, sub_1000A66DC);
  v17 = sub_1000A6740(a1);
  v18 = *(void **)(a2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (!v18)
  {
    swift_bridgeObjectRetain_n(a9, 3);
    swift_bridgeObjectRetain_n(a10, 3);
    swift_retain_n(a12, 3);
    swift_bridgeObjectRetain_n(v17, 2);
    swift_bridgeObjectRetain_n(a5, 3);
    swift_bridgeObjectRetain_n(a7, 3);
    goto LABEL_7;
  }
  swift_bridgeObjectRetain_n(a9, 3);
  swift_bridgeObjectRetain_n(v17, 2);
  swift_bridgeObjectRetain_n(a5, 2);
  swift_bridgeObjectRetain_n(a7, 2);
  swift_bridgeObjectRetain_n(a10, 2);
  swift_retain_n(a12, 2);
  swift_bridgeObjectRetain(a5);
  swift_bridgeObjectRetain(a7);
  swift_bridgeObjectRetain(a10);
  swift_retain(a12);
  v19 = objc_msgSend(v18, "suitesAvailable");
  v20 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  v22 = a3;
  v23 = sub_100083CF0(v21);
  swift_bridgeObjectRelease(v21);

  if (!v23)
  {
LABEL_7:
    sub_10004D360(0, a4, (uint64_t)v17, a5, a6, a7, a8, a9, a10, a11, a12);
    swift_bridgeObjectRelease(a10);
    swift_bridgeObjectRelease(a9);
    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(v17);
    goto LABEL_8;
  }
  v29 = qword_1001723C0;
  v24 = objc_msgSend(v23, "primaryAssetLocator");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  swift_bridgeObjectRetain(a5);
  swift_bridgeObjectRetain(a7);
  swift_bridgeObjectRetain(a9);
  swift_bridgeObjectRetain(a10);
  swift_retain(a12);
  swift_bridgeObjectRetain(v17);
  sub_1000B00DC(v25, v27, v29, a4, (uint64_t)v17, a5, a6, a7, a8, a9, a10, a11, a12);

  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease_n(v17, 2);
  swift_bridgeObjectRelease_n(a5, 2);
  swift_bridgeObjectRelease_n(a7, 2);
  swift_bridgeObjectRelease_n(a9, 2);
  swift_bridgeObjectRelease_n(a10, 2);
  swift_release(a12);
LABEL_8:
  swift_bridgeObjectRelease_n(a10, 2);
  swift_bridgeObjectRelease_n(a9, 2);
  swift_bridgeObjectRelease_n(a7, 2);
  swift_bridgeObjectRelease_n(a5, 2);
  swift_bridgeObjectRelease_n(v17, 2);
  return swift_release_n(a12, 3);
}

uint64_t sub_10004A528(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_10004D360(a1, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

void sub_10004A55C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t (**v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v24;

  v17 = a1;
  objc_allocWithZone((Class)type metadata accessor for SelfServiceInstructionsViewController());
  v18 = a9;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a5);
  swift_bridgeObjectRetain(a7);
  swift_bridgeObjectRetain(a8);
  v24 = (char *)sub_1000D3EFC(a2, a3, v17, a4, a5, a6, a7, a8, a9, 3);
  v19 = swift_allocObject(&unk_100136230, 32, 7);
  *(_QWORD *)(v19 + 16) = a10;
  *(_QWORD *)(v19 + 24) = a11;
  v20 = (uint64_t (**)(uint64_t, uint64_t))&v24[OBJC_IVAR____TtC11Diagnostics37SelfServiceInstructionsViewController_onButtonPress];
  v21 = *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics37SelfServiceInstructionsViewController_onButtonPress];
  v22 = *(_QWORD *)&v24[OBJC_IVAR____TtC11Diagnostics37SelfServiceInstructionsViewController_onButtonPress + 8];
  *v20 = sub_10004E408;
  v20[1] = (uint64_t (*)(uint64_t, uint64_t))v19;
  swift_retain(a11);
  sub_100035D74(v21, v22);
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  objc_msgSend((id)qword_100172310, "pushViewController:animated:", v24, 1);

}

void sub_10004A84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6;
  uint64_t v7;
  id v8;

  v6 = String._bridgeToObjectiveC()();
  if (a3)
    v7 = _convertErrorToNSError(_:)(a3);
  else
    v7 = 0;
  v8 = (id)v7;
  (*(void (**)(uint64_t, NSString))(a4 + 16))(a4, v6);

}

id sub_10004A8D4(uint64_t a1, DARootViewController *a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  NSString v10;
  SEL v11;
  id v12;
  int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  objc_super v20;

  v6 = OBJC_IVAR___DARootViewController_responder;
  v7 = objc_allocWithZone((Class)DADiagnosticResponder);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = &v8[OBJC_IVAR___DARootViewController_remoteCardFilter];
  *(_QWORD *)v9 = &_swiftEmptySetSingleton;
  *((_QWORD *)v9 + 1) = &_swiftEmptySetSingleton;
  v9[16] = 1;

  if (a2)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2, v11, v12, v13, v14, v15, v16, v17, v20.receiver, v20.super_class);
  }
  else
  {
    v10 = 0;
  }
  v20.receiver = v8;
  v20.super_class = (Class)type metadata accessor for RootViewController();
  v18 = objc_msgSendSuper2(&v20, "initWithNibName:bundle:", v10, a3);

  return v18;
}

uint64_t sub_10004AAE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___DARootViewController_remoteCardFilter);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR___DARootViewController_remoteCardFilter + 8));
  return swift_bridgeObjectRelease(v1);
}

id sub_10004AB20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RootViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RootViewController()
{
  return objc_opt_self(DARootViewController);
}

NSString sub_10004ABB4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100172328 = (uint64_t)result;
  return result;
}

NSString sub_10004ABE8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100172330 = (uint64_t)result;
  return result;
}

void sub_10004AC1C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33[2];
  uint64_t v34;
  uint64_t v35;
  objc_super v36;
  uint64_t v37[4];

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010BE30;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v4 = (void *)qword_100172378;
  *(_QWORD *)(v3 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  *(_QWORD *)(v3 + 64) = sub_10004E1F4((unint64_t *)&qword_10016B690, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  *(_QWORD *)(v3 + 32) = v4;
  v5 = (void *)static OS_os_log.default.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  os_log(_:dso:log:type:_:)("## Will appear in remote view controller", 40, 2, &_mh_execute_header, v5, v6, v3);
  swift_bridgeObjectRelease((DARootViewController *)v3, v7, v8, v9, v10, v11, v12, v13);

  v36.receiver = v1;
  v36.super_class = (Class)type metadata accessor for RootViewController();
  objc_msgSendSuper2(&v36, "_willAppearInRemoteViewController");
  objc_msgSend(v1, "_hostAuditToken");
  v14 = (void *)xpc_copy_entitlement_for_token("com.apple.Diagnostics.host-view-service", v33);
  if (!v14)
    goto LABEL_11;
  v15 = v14;
  if (!xpc_BOOL_get_value(v14))
  {
    v14 = (void *)swift_unknownObjectRelease(v15);
LABEL_11:
    v24 = qword_100172378;
    v25 = static os_log_type_t.error.getter(v14);
    os_log(_:dso:log:type:_:)("Host process is not entitled to host view service", 49, 2, &_mh_execute_header, v24, v25, _swiftEmptyArrayStorage);
    sub_100098BDC(7u, v26, v27, v28, v29, v30, v31, v32, v33[0], (id)v33[1], v34, v35, (uint64_t)v36.receiver, (uint64_t)v36.super_class, v37[0], v37[1], v37[2], v37[3]);
    return;
  }
  v16 = (void *)qword_100172320;
  qword_100172320 = (uint64_t)v1;

  v17 = (void *)objc_opt_self(NSNotificationCenter);
  v18 = v1;
  v19 = objc_msgSend(v17, "defaultCenter");
  if (qword_10016A610 != -1)
    swift_once(&qword_10016A610, sub_10004ABB4);
  objc_msgSend(v19, "postNotificationName:object:", qword_100172328, 0);

  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v20 = type metadata accessor for ModalPresentationCoordinator(0);
  v21 = sub_100036D34(v20, (uint64_t)qword_1001723D0);
  swift_beginAccess(v21, v37, 33, 0);
  sub_1000C5184(0, 0);
  v22 = swift_allocObject(&unk_100136140, 24, 7);
  *(_QWORD *)(v22 + 16) = v18;
  v23 = v18;
  sub_1000C5184(sub_10004E2A4, v22);
  swift_endAccess(v37);
  swift_unknownObjectRelease(v15);
  swift_release(v22);
}

void sub_10004AF34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  DARootViewController *v4;
  uint64_t v5;
  DARootViewController *v6;
  DARootViewController *v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;
  SEL v22;
  id v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;

  sub_1000497D4(1, 0);
  if (qword_10016A648 != -1)
    swift_once(&qword_10016A648, sub_100053F8C);
  v2 = qword_100172340;
  v3 = a1 + OBJC_IVAR___DARootViewController_remoteCardFilter;
  v4 = *(DARootViewController **)(a1 + OBJC_IVAR___DARootViewController_remoteCardFilter);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR___DARootViewController_remoteCardFilter + 8);
  LOBYTE(v3) = *(_BYTE *)(v3 + 16);
  v6 = *(DARootViewController **)(qword_100172340 + 16);
  v7 = *(DARootViewController **)(qword_100172340 + 24);
  *(_QWORD *)(qword_100172340 + 16) = v4;
  *(_QWORD *)(v2 + 24) = v5;
  *(_BYTE *)(v2 + 32) = v3;
  swift_bridgeObjectRetain_n(v4, 2);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v4, v8, v9, v10, v11, v12, v13, v14);
  swift_bridgeObjectRelease(v7, v15, v16, v17, v18, v19, v20, v21);
  swift_bridgeObjectRelease(v6, v22, v23, v24, v25, v26, v27, v28);
  v29 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v30 = v29;
  if (qword_10016A650 != -1)
  {
    swift_once(&qword_10016A650, sub_100057180);
    v29 = v30;
  }
  objc_msgSend(v29, "postNotificationName:object:", qword_100172348, 0);

}

void sub_10004B08C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  objc_super v15;

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010BE30;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v4 = (void *)qword_100172378;
  *(_QWORD *)(v3 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  *(_QWORD *)(v3 + 64) = sub_10004E1F4((unint64_t *)&qword_10016B690, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  *(_QWORD *)(v3 + 32) = v4;
  v5 = (void *)static OS_os_log.default.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  os_log(_:dso:log:type:_:)("## Host application entering foreground", 39, 2, &_mh_execute_header, v5, v6, v3);
  swift_bridgeObjectRelease((DARootViewController *)v3, v7, v8, v9, v10, v11, v12, v13);

  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for RootViewController();
  objc_msgSendSuper2(&v15, "_hostApplicationWillEnterForeground");
  v14 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10016A610 != -1)
    swift_once(&qword_10016A610, sub_10004ABB4);
  objc_msgSend(v14, "postNotificationName:object:", qword_100172328, 0);

  sub_1000491F0();
}

double sub_10004B268(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS.QoSClass(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (byte_100172309 == 1)
  {
    sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
    v24 = v3;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, enum case for DispatchQoS.QoSClass.userInteractive(_:), v10);
    v15 = static OS_dispatch_queue.global(qos:)(v14);
    v23 = v6;
    v16 = (void *)v15;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v17 = swift_allocObject(&unk_100135E70, 32, 7);
    *(_BYTE *)(v17 + 16) = a1;
    *(_QWORD *)(v17 + 24) = v25;
    aBlock[4] = sub_10004C710;
    v28 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100030658;
    aBlock[3] = &unk_100135E88;
    v18 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(v19);
    v26 = _swiftEmptyArrayStorage;
    v20 = sub_100035C5C();
    v21 = sub_100035CA4((uint64_t *)&unk_10016AD10);
    v22 = sub_100035CE4();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v21, v22, v2, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
    *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  }
  return result;
}

double sub_10004B4C8(char a1)
{
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  double result;
  _QWORD v8[5];
  uint64_t v9;

  v1 = 2;
  switch(a1)
  {
    case 1:
      break;
    case 3:
      sub_10004D7A0();
      v1 = 0;
      break;
    case 4:
    case 12:
      v1 = 1;
      break;
    case 5:
      v1 = 3;
      break;
    case 8:
      v1 = 5;
      break;
    case 9:
      v1 = 6;
      break;
    case 10:
      v1 = 7;
      break;
    case 11:
      v1 = 8;
      break;
    default:
      v1 = 4;
      break;
  }
  sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v2 = static OS_dispatch_queue.main.getter();
  v3 = swift_allocObject(&unk_100135EC0, 24, 7);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = swift_allocObject(&unk_100135EE8, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_10004C72C;
  *(_QWORD *)(v4 + 24) = v3;
  v8[4] = sub_1000370F8;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100048E58;
  v8[3] = &unk_100135F00;
  v5 = _Block_copy(v8);
  v6 = v9;
  swift_retain(v4);
  swift_release(v6);
  dispatch_sync(v2, v5);

  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 96, 331, 41, 1);
  swift_release(v3);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  if ((v2 & 1) != 0)
  {
    __break(1u);
    JUMPOUT(0x10004B674);
  }
  return result;
}

uint64_t sub_10004B6A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __objc2_prot *v11;
  _OWORD v12[2];

  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v2 = type metadata accessor for ModalPresentationCoordinator(0);
  v3 = sub_100036D34(v2, (uint64_t)qword_1001723D0);
  swift_beginAccess(v3, v12, 33, 0);
  sub_1000C5184(0, 0);
  result = swift_endAccess(v12);
  if (qword_100172320)
  {
    v5 = (id)qword_100172320;
    v6 = objc_msgSend(v5, "_remoteViewControllerProxy");
    if (v6)
    {
      v7 = v6;
      _bridgeAnyObjectToAny(_:)(v12);
      swift_unknownObjectRelease(v7);
    }
    else
    {
      memset(v12, 0, sizeof(v12));
    }
    v8 = sub_100035CA4((uint64_t *)&unk_10016B610);
    v9 = Optional._bridgeToObjectiveC()(v8);
    sub_100036FA0((uint64_t)v12, (uint64_t *)&unk_10016B610);

    v11 = &OBJC_PROTOCOL___DADiagnosticsRemoteViewControllerInterface;
    v10 = (void *)swift_dynamicCastObjCProtocolConditional(v9, 1, &v11);
    if (v10)
      objc_msgSend(v10, "viewServiceDidFinishWithReason:", a1);
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

void sub_10004B7E4(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "navigationItem");
  v2 = objc_msgSend(v1, "leftBarButtonItem");

  if (v2)
  {
    objc_msgSend(v2, "setEnabled:", 0);

  }
}

uint64_t sub_10004B868()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  _QWORD v5[2];
  _QWORD v6[5];
  __int128 v7;
  __int128 v8;

  v0 = Notification.userInfo.getter();
  if (!v0)
  {
    v7 = 0u;
    v8 = 0u;
LABEL_11:
    sub_100036FA0((uint64_t)&v7, (uint64_t *)&unk_10016B610);
    return OS_dispatch_semaphore.signal()();
  }
  v1 = v0;
  v5[0] = 0xD000000000000012;
  v5[1] = 0x8000000100113570;
  AnyHashable.init<A>(_:)(v5, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_100072B10((uint64_t)v6), (v3 & 1) != 0))
  {
    sub_1000370B0(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v7);
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  swift_bridgeObjectRelease(v1);
  sub_100036FDC((uint64_t)v6);
  if (!*((_QWORD *)&v8 + 1))
    goto LABEL_11;
  result = swift_dynamicCast(v6, &v7, (char *)&type metadata for Any + 8, &type metadata for Int, 6);
  if ((result & 1) == 0 || v6[0] <= 0)
    return OS_dispatch_semaphore.signal()();
  return result;
}

id sub_10004B994(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return objc_msgSend((id)objc_opt_self(NSXPCInterface), "interfaceWithProtocol:", *a3);
}

id sub_10004B9D4()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  _BYTE v3[24];

  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v0 = type metadata accessor for ModalPresentationCoordinator(0);
  v1 = sub_100036D34(v0, (uint64_t)qword_1001723D0);
  swift_beginAccess(v1, v3, 33, 0);
  sub_1000C5184(0, 0);
  swift_endAccess(v3);
  sub_10004D7A0();
  result = (id)UIApp;
  if (UIApp)
    return objc_msgSend(UIApp, "terminateWithSuccess");
  __break(1u);
  return result;
}

uint64_t sub_10004BAD0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_100136050, 32, 7);
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v1;
  aBlock[4] = sub_10004E1EC;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100136068;
  v14 = _Block_copy(aBlock);
  v15 = v25;
  swift_bridgeObjectRetain(a1);
  v16 = v2;
  v17 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v18 = sub_100035C5C();
  v19 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v20 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_10004BCBC(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  objc_class **v5;
  objc_class *v6;
  objc_class *v7;
  unint64_t v8;
  unint64_t v9;
  Class *v10;
  uint64_t v11;
  SEL v12;
  id v13;
  int v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  DARootViewController *v21;
  DARootViewController *v22;
  SEL v23;
  id v24;
  int v25;
  id v26;
  id v27;
  id v28;
  id v29;
  SEL v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  DARootViewController *v38;
  uint64_t v39;
  char v40;
  DARootViewController *v41;
  DARootViewController *v42;
  SEL v43;
  id v44;
  int v45;
  id v46;
  id v47;
  id v48;
  id v49;
  SEL v50;
  id v51;
  int v52;
  id v53;
  id v54;
  id v55;
  id v56;
  SEL v57;
  id v58;
  int v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_1000572A0(0, v3, 0);
    v5 = (objc_class **)(a1 + 40);
    do
    {
      v7 = *(v5 - 1);
      v6 = *v5;
      v8 = *(_QWORD *)_swiftEmptyArrayStorage.remoteCardFilter;
      v9 = *(_QWORD *)&_swiftEmptyArrayStorage.remoteCardFilter[8];
      swift_bridgeObjectRetain(*v5);
      if (v8 >= v9 >> 1)
        sub_1000572A0(v9 > 1, v8 + 1, 1);
      v5 += 2;
      *(_QWORD *)_swiftEmptyArrayStorage.remoteCardFilter = v8 + 1;
      v10 = &_swiftEmptyArrayStorage.super.super.super.super.isa + 2 * v8;
      v10[4] = v7;
      v10[5] = v6;
      --v3;
    }
    while (v3);
  }
  v11 = sub_1000E089C((uint64_t)&_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v12, v13, v14, v15, v16, v17, v18);
  v19 = a2 + OBJC_IVAR___DARootViewController_remoteCardFilter;
  v20 = *(_QWORD *)(a2 + OBJC_IVAR___DARootViewController_remoteCardFilter);
  v21 = *(DARootViewController **)(a2 + OBJC_IVAR___DARootViewController_remoteCardFilter + 8);
  *(_QWORD *)(v19 + 8) = v11;
  *(_BYTE *)(v19 + 16) = 1;
  v22 = (DARootViewController *)swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v22, v23, v24, v25, v26, v27, v28, v29);
  swift_bridgeObjectRelease(v21, v30, v31, v32, v33, v34, v35, v36);
  if (qword_10016A648 != -1)
    swift_once(&qword_10016A648, sub_100053F8C);
  v37 = qword_100172340;
  v38 = *(DARootViewController **)v19;
  v39 = *(_QWORD *)(v19 + 8);
  v40 = *(_BYTE *)(v19 + 16);
  v41 = *(DARootViewController **)(qword_100172340 + 16);
  v42 = *(DARootViewController **)(qword_100172340 + 24);
  *(_QWORD *)(qword_100172340 + 16) = v38;
  *(_QWORD *)(v37 + 24) = v39;
  *(_BYTE *)(v37 + 32) = v40;
  swift_bridgeObjectRetain_n(v38, 2);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease(v38, v43, v44, v45, v46, v47, v48, v49);
  swift_bridgeObjectRelease(v42, v50, v51, v52, v53, v54, v55, v56);
  swift_bridgeObjectRelease(v41, v57, v58, v59, v60, v61, v62, v63);
  v64 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v65 = v64;
  if (qword_10016A650 != -1)
  {
    swift_once(&qword_10016A650, sub_100057180);
    v64 = v65;
  }
  objc_msgSend(v64, "postNotificationName:object:", qword_100172348, 0, v65);

}

uint64_t sub_10004BEB8(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_100136000, 32, 7);
  *(_QWORD *)(v13 + 16) = v1;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_10004DEA4;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100136018;
  v14 = _Block_copy(aBlock);
  v15 = v25;
  v16 = v2;
  swift_bridgeObjectRetain(a1);
  v17 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v18 = sub_100035C5C();
  v19 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v20 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_10004C0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  SEL v13;
  id v14;
  int v15;
  id v16;
  id v17;
  id v18;
  id v19;
  DARootViewController *v20;
  DARootViewController *v21;
  SEL v22;
  id v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;

  v2 = a1 + OBJC_IVAR___DARootViewController_remoteCardFilter;
  v3 = *(_QWORD *)(a1 + OBJC_IVAR___DARootViewController_remoteCardFilter + 8);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(v3);
    sub_1000572A0(0, v4, 0);
    v6 = (_QWORD *)(a2 + 40);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v9 = *(_QWORD *)_swiftEmptyArrayStorage.remoteCardFilter;
      v10 = *(_QWORD *)&_swiftEmptyArrayStorage.remoteCardFilter[8];
      swift_bridgeObjectRetain(*v6);
      if (v9 >= v10 >> 1)
        sub_1000572A0(v10 > 1, v9 + 1, 1);
      v6 += 2;
      *(_QWORD *)_swiftEmptyArrayStorage.remoteCardFilter = v9 + 1;
      v11 = (char *)&_swiftEmptyArrayStorage + 16 * v9;
      *((_QWORD *)v11 + 4) = v8;
      *((_QWORD *)v11 + 5) = v7;
      --v4;
    }
    while (v4);
  }
  else
  {
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + OBJC_IVAR___DARootViewController_remoteCardFilter + 8));
  }
  v12 = sub_1000E089C((uint64_t)&_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v13, v14, v15, v16, v17, v18, v19);
  v21 = *(DARootViewController **)v2;
  v20 = *(DARootViewController **)(v2 + 8);
  *(_QWORD *)v2 = v12;
  *(_QWORD *)(v2 + 8) = v3;
  *(_BYTE *)(v2 + 16) = 1;
  swift_bridgeObjectRelease(v20, v22, v23, v24, v25, v26, v27, v28);
  swift_bridgeObjectRelease(v21, v29, v30, v31, v32, v33, v34, v35);
}

uint64_t sub_10004C1D4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  id v7;

  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for String);
  v7 = a1;
  a4(v6);

  return swift_bridgeObjectRelease(v6);
}

uint64_t getEnumTagSinglePayload for RootViewController.LaunchEnvironment(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RootViewController.LaunchEnvironment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10004C308 + 4 * byte_10010C3E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10004C33C + 4 * byte_10010C3E0[v4]))();
}

uint64_t sub_10004C33C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004C344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10004C34CLL);
  return result;
}

uint64_t sub_10004C358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10004C360);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10004C364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004C36C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10004C378(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RootViewController.LaunchEnvironment()
{
  return &type metadata for RootViewController.LaunchEnvironment;
}

unint64_t sub_10004C398()
{
  unint64_t result;

  result = qword_10016B5E0;
  if (!qword_10016B5E0)
  {
    result = swift_getWitnessTable(&unk_10010C4AC, &type metadata for RootViewController.LaunchEnvironment);
    atomic_store(result, (unint64_t *)&qword_10016B5E0);
  }
  return result;
}

void sub_10004C3DC()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  _OWORD v5[2];

  if (byte_100172309 == 1 && qword_100172320)
  {
    v0 = (id)qword_100172320;
    v1 = objc_msgSend(v0, "_remoteViewControllerProxy");
    if (v1)
    {
      v2 = v1;
      _bridgeAnyObjectToAny(_:)(v5);
      swift_unknownObjectRelease(v2);
    }
    else
    {
      memset(v5, 0, sizeof(v5));
    }
    v3 = sub_100035CA4((uint64_t *)&unk_10016B610);
    v4 = (void *)Optional._bridgeToObjectiveC()(v3);
    sub_100036FA0((uint64_t)v5, (uint64_t *)&unk_10016B610);

    objc_msgSend(v4, "viewServiceDidSuspend");
    swift_unknownObjectRelease(v4);
  }
}

uint64_t sub_10004C4A4(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  __n128 v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(&unk_100135E20, 48, 7);
  *(_QWORD *)(v16 + 16) = a1;
  *(_BYTE *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  aBlock[4] = sub_10004C6D8;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100135E38;
  v17 = _Block_copy(aBlock);
  v18 = v28;
  v19 = a1;
  sub_100035C4C(a3, a4);
  v20 = swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100035C5C();
  v22 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v23 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v8, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
}

uint64_t sub_10004C6A4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

id sub_10004C6D8()
{
  uint64_t v0;

  return sub_100049B64(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(uint64_t (**)(id))(v0 + 32));
}

uint64_t sub_10004C6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004C6F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10004C700()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_10004C710()
{
  uint64_t v0;

  return sub_10004B4C8(*(_BYTE *)(v0 + 16));
}

uint64_t sub_10004C71C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004C72C()
{
  uint64_t v0;

  return sub_10004B6A4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10004C734()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004C744(char a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v2 = 0xE900000000000022;
  if (byte_100172308)
    v3 = 0x2265746F6D655222;
  else
    v3 = 0x746C756166654422;
  if (byte_100172308)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE900000000000022;
  if ((a1 & 1) != 0)
    v5 = 0x2265746F6D655222;
  else
    v5 = 0x746C756166654422;
  if ((a1 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE900000000000022;
  if (v3 == v5 && v4 == v6)
    return swift_bridgeObjectRelease_n(v4, 2);
  v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v4);
  result = swift_bridgeObjectRelease(v6);
  if ((v8 & 1) == 0)
  {
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v10 = qword_100172378;
    v11 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v12 = swift_allocObject(v11, 72, 7);
    v13 = (_QWORD *)v12;
    *(_OWORD *)(v12 + 16) = xmmword_10010BE30;
    if (byte_100172308)
      v14 = 0x2265746F6D655222;
    else
      v14 = 0x746C756166654422;
    if (byte_100172308)
      v2 = 0xE800000000000000;
    *(_QWORD *)(v12 + 56) = &type metadata for String;
    v15 = sub_100047048();
    v13[8] = v15;
    v13[4] = v14;
    v13[5] = v2;
    v16 = static os_log_type_t.default.getter(v15);
    os_log(_:dso:log:type:_:)("## Application launch environment changed to %@", 47, 2, &_mh_execute_header, v10, v16, v13);
    return swift_bridgeObjectRelease(v13);
  }
  return result;
}

uint64_t sub_10004C8D0()
{
  uint64_t result;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (byte_100172309 != 1)
    return 0;
  result = qword_100172320;
  if (qword_100172320)
  {
    result = (uint64_t)objc_msgSend((id)qword_100172320, "_hostApplicationBundleIdentifier");
    if (result)
    {

      result = qword_100172320;
      if (qword_100172320)
      {
        result = (uint64_t)objc_msgSend((id)qword_100172320, "_hostApplicationBundleIdentifier");
        if (result)
        {
          v1 = (void *)result;
          v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
          v4 = v3;

          if (v2 == 0xD000000000000015 && v4 == 0x8000000100113610)
          {
            swift_bridgeObjectRelease(0x8000000100113610);
            return 1;
          }
          else
          {
            v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, 0xD000000000000015, 0x8000000100113610, 0);
            swift_bridgeObjectRelease(v4);
            return v5 & 1;
          }
        }
      }
    }
  }
  return result;
}

id sub_10004C9C4(void *a1, void *a2, uint64_t (*a3)(id))
{
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  id result;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];

  v6 = objc_msgSend(a1, "parentViewController");
  if (v6)
  {
    v7 = v6;
    sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v8 = a2;
    v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)(v9);

    if ((v7 & 1) != 0)
      goto LABEL_11;
  }
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v10 = qword_100172378;
  v11 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v12 = swift_allocObject(v11, 112, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10010C3D0;
  v13 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  *(_QWORD *)(v12 + 56) = v13;
  v14 = sub_10004E1F4((unint64_t *)&unk_10016B698, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 96) = v13;
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 72) = a2;
  v15 = a2;
  v16 = a1;
  v17 = static os_log_type_t.default.getter(v16);
  os_log(_:dso:log:type:_:)("## Moving %@ to parent view controller: %@", 42, 2, &_mh_execute_header, v10, v17, v12);
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v16, "willMoveToParentViewController:", v15);
  objc_msgSend(v15, "addChildViewController:", v16);
  result = objc_msgSend(v16, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  v19 = result;
  result = objc_msgSend(v15, "view");
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v20 = result;
  objc_msgSend(result, "bounds");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;

  objc_msgSend(v19, "setFrame:", v22, v24, v26, v28);
  result = objc_msgSend(v16, "view");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v29 = result;
  objc_msgSend(result, "setAutoresizingMask:", 18);

  result = objc_msgSend(v15, "view");
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v30 = result;
  result = objc_msgSend(v16, "view");
  if (!result)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  v31 = result;
  objc_msgSend(v30, "addSubview:", result);

  objc_msgSend(v16, "didMoveToParentViewController:", v15);
LABEL_11:
  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v32 = type metadata accessor for ModalPresentationCoordinator(0);
  v33 = sub_100036D34(v32, (uint64_t)qword_1001723D0);
  swift_beginAccess(v33, v34, 33, 0);
  sub_1000C5060();
  result = (id)swift_endAccess(v34);
  if (a3)
    return (id)a3(result);
  return result;
}

void sub_10004CD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  NSString v23;
  void *v24;
  id v25;
  const void *v26;
  uint64_t v27;
  id v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);

  v15 = *(_QWORD *)(a5 + 16);
  if (v15)
  {
    v28 = (id)objc_opt_self(UIAlertAction);
    swift_bridgeObjectRetain_n(a5, 2);
    v16 = 0;
    v27 = a5;
    v17 = (uint64_t *)(a5 + 40);
    v18 = a6;
    do
    {
      v19 = *v17;
      v20 = v16 + 1;
      v21 = v14;
      v22 = (_QWORD *)swift_allocObject(&unk_100136280, 40, 7);
      v22[2] = v18;
      v22[3] = a7;
      v22[4] = v16;
      swift_bridgeObjectRetain(v19);
      swift_retain(a7);
      v23 = String._bridgeToObjectiveC()();
      aBlock[4] = sub_10004E458;
      v30 = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100040808;
      aBlock[3] = &unk_100136298;
      v24 = _Block_copy(aBlock);
      v25 = objc_msgSend(v28, "actionWithTitle:style:handler:", v23, 0, v24, swift_release(v30).n128_f64[0]);
      v26 = v24;
      v14 = v21;
      _Block_release(v26);

      objc_msgSend(v21, "addAction:", v25);
      swift_bridgeObjectRelease(v19);

      v17 += 2;
      v16 = v20;
    }
    while (v15 != v20);
    swift_bridgeObjectRelease_n(v27, 2);
  }
  objc_msgSend(v14, "showOnTopWithAnimated:completion:", 1, 0, v27);

}

double sub_10004CF64(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  char *v47;
  __n128 v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD aBlock[5];
  uint64_t v71;

  v63 = a7;
  v64 = a8;
  v62 = a6;
  v59 = a4;
  v60 = a5;
  v65 = a3;
  v66 = a1;
  v61 = a2;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v67 = *(_QWORD *)(v14 - 8);
  v68 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchQoS.QoSClass(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10016A658 != -1)
    swift_once(&qword_10016A658, sub_10006E428);
  v22 = (char *)qword_100172360;
  v23 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  v24 = *(void **)(qword_100172360 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v24)
  {
    v25 = objc_msgSend(v24, "suiteID");
    if (v25)
    {
      v26 = v25;
      v56 = v13;
      v57 = v11;
      v58 = v10;
      v55 = a10;
      v54 = a9;
      v27 = *(void **)&v22[v23];
      if (!v27)
        goto LABEL_8;
      v28 = objc_msgSend(v27, "suitesAvailable");
      v29 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
      v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

      v31 = v26;
      v32 = sub_100083CF0(v30);
      swift_bridgeObjectRelease(v30);

      if (v32)
      {
        v33 = objc_msgSend(v32, "suiteNameLocalizedString");
        v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v36 = v35;

      }
      else
      {
LABEL_8:
        v36 = v60;
        swift_bridgeObjectRetain(v60);
        v34 = v59;
      }
      sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
      (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v21, enum case for DispatchQoS.QoSClass.default(_:), v17);
      v37 = (void *)static OS_dispatch_queue.global(qos:)(v21);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      v38 = swift_allocObject(&unk_100136190, 112, 7);
      v40 = v65;
      v39 = v66;
      *(_QWORD *)(v38 + 16) = v65;
      *(_QWORD *)(v38 + 24) = v22;
      *(_QWORD *)(v38 + 32) = v26;
      *(_DWORD *)(v38 + 40) = v61;
      *(_QWORD *)(v38 + 48) = v39;
      *(_QWORD *)(v38 + 56) = v34;
      v41 = v62;
      v42 = v63;
      *(_QWORD *)(v38 + 64) = v36;
      *(_QWORD *)(v38 + 72) = v41;
      v43 = v64;
      *(_QWORD *)(v38 + 80) = v42;
      *(_QWORD *)(v38 + 88) = v43;
      v44 = v55;
      *(_QWORD *)(v38 + 96) = v54;
      *(_QWORD *)(v38 + 104) = v44;
      aBlock[4] = sub_10004E334;
      v71 = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100030658;
      aBlock[3] = &unk_1001361A8;
      v45 = _Block_copy(aBlock);
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v43);
      swift_retain(v44);
      v46 = v26;
      swift_bridgeObjectRetain(v40);
      v47 = v22;
      swift_bridgeObjectRetain(v39);
      static DispatchQoS.unspecified.getter(v48);
      v69 = _swiftEmptyArrayStorage;
      v49 = sub_100035C5C();
      v50 = sub_100035CA4((uint64_t *)&unk_10016AD10);
      v51 = sub_100035CE4();
      v52 = v56;
      v53 = v58;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v69, v50, v51, v58, v49);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v52, v45);
      _Block_release(v45);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v53);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v16, v68);
      *(_QWORD *)&result = swift_release(v71).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10004D360(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  __n128 v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD aBlock[5];
  uint64_t v48;

  v40 = a7;
  v41 = a8;
  v38 = a10;
  v39 = a11;
  v37 = a9;
  v42 = type metadata accessor for DispatchWorkItemFlags(0);
  v46 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  v44 = *(_QWORD *)(v19 - 8);
  v45 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v43 = static OS_dispatch_queue.main.getter(v22);
  v23 = swift_allocObject(&unk_1001361E0, 104, 7);
  *(_DWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  *(_QWORD *)(v23 + 32) = a4;
  *(_QWORD *)(v23 + 40) = a5;
  *(_QWORD *)(v23 + 48) = a6;
  v24 = a6;
  v25 = v41;
  *(_QWORD *)(v23 + 56) = v40;
  *(_QWORD *)(v23 + 64) = v25;
  *(_QWORD *)(v23 + 72) = a9;
  *(_QWORD *)(v23 + 80) = a1;
  v26 = v39;
  *(_QWORD *)(v23 + 88) = v38;
  *(_QWORD *)(v23 + 96) = v26;
  aBlock[4] = sub_10004E3C8;
  v48 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_1001361F8;
  v27 = _Block_copy(aBlock);
  v28 = v48;
  v29 = a1;
  swift_retain(v26);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v37);
  v30 = swift_release(v28);
  static DispatchQoS.unspecified.getter(v30);
  aBlock[0] = _swiftEmptyArrayStorage;
  v31 = sub_100035C5C();
  v32 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v33 = sub_100035CE4();
  v34 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v42, v31);
  v35 = (void *)v43;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v21, v18, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v21, v45);
}

void sub_10004D7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t isEscapingClosureAtFileLocation;
  id v35;
  uint64_t v36;
  dispatch_semaphore_t v37;
  void *v38;
  uint64_t v39;
  double v40;
  id v41;
  id v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  dispatch_semaphore_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  dispatch_semaphore_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  id v61;
  void **aBlock;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t (*v66)();
  uint64_t v67;
  char v68[24];

  v0 = type metadata accessor for DispatchTime(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v55 - v5;
  v7 = (void *)qword_10016B3C0;
  if (qword_10016B3C0)
  {
    v8 = type metadata accessor for SelfServiceDestinationPickerViewController();
    if (!swift_dynamicCastClass(v7, v8))
    {
      v15 = v7;
LABEL_20:
      v61 = v15;
      goto LABEL_21;
    }
  }
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  v9 = objc_msgSend((id)qword_100172310, "viewControllers");
  v10 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  if (!((unint64_t)v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_7;
LABEL_18:
    swift_bridgeObjectRelease(v11);
    if (qword_10016A5F8 == -1)
    {
LABEL_19:
      v15 = (id)qword_100172300;
      goto LABEL_20;
    }
LABEL_36:
    swift_once(&qword_10016A5F8, sub_100048E78);
    goto LABEL_19;
  }
  if (v11 < 0)
    v16 = v11;
  else
    v16 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v12 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease(v11);
  if (!v12)
    goto LABEL_18;
LABEL_7:
  v13 = v12 - 1;
  if (__OFSUB__(v12, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
LABEL_33:
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
    goto LABEL_12;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v13 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v14 = *(id *)(v11 + 8 * v13 + 32);
LABEL_12:
  v61 = v14;
  swift_bridgeObjectRelease(v11);
LABEL_21:
  v17 = type metadata accessor for DashboardViewController();
  v18 = swift_dynamicCastClass(v61, v17);
  if (!v18
    || (v19 = v18,
        v20 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager,
        v21 = *(char **)(v18 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager),
        v22 = &v21[OBJC_IVAR____TtC11Diagnostics11CardManager_cardsInView],
        swift_beginAccess(&v21[OBJC_IVAR____TtC11Diagnostics11CardManager_cardsInView], v68, 0, 0),
        v23 = *(_QWORD *)v22,
        !*(_QWORD *)(v23 + 16))
    || (v24 = sub_100072B40(1u), (v25 & 1) == 0))
  {

    return;
  }
  v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
  if (!((unint64_t)v26 >> 62))
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    v28 = v21;
    if (v27)
      goto LABEL_26;
LABEL_41:

    return;
  }
  if (v26 < 0)
    v52 = v26;
  else
    v52 = v26 & 0xFFFFFFFFFFFFFF8;
  v53 = v21;
  swift_bridgeObjectRetain(v26);
  v54 = _CocoaArrayWrapper.endIndex.getter(v52);
  swift_bridgeObjectRelease(v26);
  if (!v54)
    goto LABEL_41;
LABEL_26:
  v59 = v21;
  v60 = v1;
  v57 = dispatch_semaphore_create(0);
  sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v29 = static OS_dispatch_queue.main.getter();
  v30 = swift_allocObject(&unk_100135F38, 24, 7);
  *(_QWORD *)(v30 + 16) = v19;
  v31 = swift_allocObject(&unk_100135F60, 32, 7);
  *(_QWORD *)(v31 + 16) = sub_10004DE58;
  *(_QWORD *)(v31 + 24) = v30;
  v58 = v30;
  v66 = sub_1000371AC;
  v67 = v31;
  aBlock = _NSConcreteStackBlock;
  v63 = 1107296256;
  v64 = sub_100048E58;
  v65 = &unk_100135F78;
  v32 = _Block_copy(&aBlock);
  v33 = v67;
  v61 = v61;
  swift_retain(v31);
  swift_release(v33);
  dispatch_sync(v29, v32);

  _Block_release(v32);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v31, "", 96, 350, 41, 1);
  swift_release(v31);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  v56 = (id)objc_opt_self(NSNotificationCenter);
  isEscapingClosureAtFileLocation = (uint64_t)objc_msgSend(v56, "defaultCenter");
  if (qword_10016A6E8 != -1)
LABEL_43:
    swift_once(&qword_10016A6E8, sub_1000E1648);
  v55 = qword_1001723F0;
  v35 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v36 = swift_allocObject(&unk_100135FB0, 24, 7);
  v37 = v57;
  *(_QWORD *)(v36 + 16) = v57;
  v66 = sub_10004DE70;
  v67 = v36;
  aBlock = _NSConcreteStackBlock;
  v63 = 1107296256;
  v64 = sub_100048DB4;
  v65 = &unk_100135FC8;
  v38 = _Block_copy(&aBlock);
  v39 = v67;
  v57 = v37;
  *(_QWORD *)&v40 = swift_release(v39).n128_u64[0];
  v41 = objc_msgSend((id)isEscapingClosureAtFileLocation, "addObserverForName:object:queue:usingBlock:", v55, 0, v35, v38, v40);
  _Block_release(v38);

  v42 = *(id *)(v19 + v20);
  sub_1000A4158();

  static DispatchTime.now()();
  + infix(_:_:)(v4, 5.0);
  v43 = *(void (**)(char *, uint64_t))(v60 + 8);
  v44 = v4;
  v45 = v57;
  v43(v44, v0);
  v46 = OS_dispatch_semaphore.wait(timeout:)(v6) & 1;
  v43(v6, v0);
  if ((static DispatchTimeoutResult.== infix(_:_:)(v46, 1) & 1) != 0)
  {
    v47 = static os_log_type_t.error.getter();
    v48 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v49 = (void *)static OS_os_log.default.getter(v48);
    os_log(_:dso:log:type:_:)("Timed out waiting for cards to end", 34, 2, &_mh_execute_header, v49, v47, _swiftEmptyArrayStorage);

  }
  v50 = objc_msgSend(v56, "defaultCenter");
  swift_unknownObjectRetain(v41);
  objc_msgSend(v50, "removeObserver:", v41);
  swift_release(v58);

  swift_unknownObjectRelease_n(v41, 2, v51);
}

uint64_t sub_10004DE34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10004DE58()
{
  uint64_t v0;

  sub_10004B7E4(*(void **)(v0 + 16));
}

uint64_t sub_10004DE60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004DE70()
{
  return sub_10004B868();
}

uint64_t sub_10004DE78()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10004DEA4()
{
  uint64_t v0;

  sub_10004C0A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10004E058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  const char *v11;
  void *v12;
  int v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  DARootViewController *v19;
  DARootViewController *v20;
  id v21;
  int v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  DARootViewController *v29;
  const char *v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  DARootViewController *v38;
  uint64_t v39;

  v4 = sub_100035CA4((uint64_t *)&unk_10016B680);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100036FA0((uint64_t)v6, (uint64_t *)&unk_10016B680);
  }
  else
  {
    v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    URL.host.getter(v18);
    v20 = v19;
    swift_bridgeObjectRelease(v19, (SEL)v19, v21, v22, v23, v24, v25, v26);
    if (v20)
    {
      v28 = URL.host.getter(v27);
      v29 = (DARootViewController *)qword_100172388;
      qword_100172380 = v28;
      qword_100172388 = (uint64_t)v30;
      swift_bridgeObjectRelease(v29, v30, v31, v32, v33, v34, v35, v36);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v38 = (DARootViewController *)qword_100172388;
  qword_100172380 = a1;
  qword_100172388 = a2;
  swift_bridgeObjectRelease(v38, v11, v12, v13, v14, v15, v16, v17);
  return swift_bridgeObjectRetain(a2);
}

uint64_t sub_10004E1C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10004E1EC()
{
  uint64_t v0;

  sub_10004BCBC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10004E1F4(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100037118(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004E234(uint64_t result)
{
  uint64_t v1;

  if (result == 1)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
             + OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly) = 0;
    return sub_1000E16E4();
  }
  return result;
}

uint64_t sub_10004E280()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10004E2A4()
{
  uint64_t v0;

  sub_10004AF34(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10004E2AC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10004E2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10004A84C(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_10004E2D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 104));
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10004E334()
{
  uint64_t v0;

  return sub_10004A1C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_DWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
}

uint64_t sub_10004E374()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

void sub_10004E3C8()
{
  uint64_t v0;

  sub_10004A55C(*(_DWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_10004E408(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 16))(a1, a2, 0);
}

void sub_10004E42C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10004A170(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10004E434()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10004E458()
{
  uint64_t v0;
  void (*v1)(Class, _QWORD);
  Class isa;

  v1 = *(void (**)(Class, _QWORD))(v0 + 16);
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  v1(isa, 0);

}

void *sub_10004E50C()
{
  return &protocol witness table for Int;
}

uint64_t sub_10004E518(double a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;
  void *v7;
  uint64_t v8;

  if (a1 <= 0.0)
    return 0;
  if (qword_10016A620 != -1)
    swift_once(&qword_10016A620, sub_10004E694);
  v2 = 60.0;
  v3 = round(a1 / 60.0);
  if (a1 >= 60.0)
    v2 = v3 * 60.0;
  v4 = round(a1 / 3600.0);
  v5 = a1 >= 3600.0 ? v4 * 3600.0 : v2;
  v6 = objc_msgSend((id)qword_10016B6C0, "stringFromTimeInterval:", v5);
  if (!v6)
    return 0;
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);

  return v8;
}

uint64_t sub_10004E608(double a1)
{
  double v1;

  if (a1 <= 0.0)
    return 4;
  v1 = 3600.0;
  if (a1 < 3600.0)
  {
    v1 = 60.0;
    if (a1 < 60.0)
      return v1 >= 120.0;
  }
  v1 = round(a1 / v1) * v1;
  if (v1 >= 7200.0)
    return 3;
  if (v1 < 3600.0)
    return v1 >= 120.0;
  return 2;
}

id sub_10004E694()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
  objc_msgSend(v0, "setUnitsStyle:", 3);
  objc_msgSend(v0, "setAllowedUnits:", 96);
  objc_msgSend(v0, "setMaximumUnitCount:", 1);
  result = objc_msgSend(v0, "setCollapsesLargestUnit:", 0);
  qword_10016B6C0 = (uint64_t)v0;
  return result;
}

id sub_10004E71C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  const char *v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  Class isa;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  DARootViewController *v36;
  DARootViewController *v37;
  SEL v38;
  id v39;
  int v40;
  id v41;
  id v42;
  id v43;
  id v44;
  DARootViewController *v45;
  void *v46;
  DARootViewController *v47;
  DARootViewController *v48;
  NSString v49;
  SEL v50;
  id v51;
  int v52;
  id v53;
  id v54;
  id v55;
  id v56;
  NSString v57;
  SEL v58;
  id v59;
  int v60;
  id v61;
  id v62;
  id v63;
  id v64;
  objc_class *v65;
  id v66;
  uint64_t v68;
  void *v69;
  objc_super v70;

  v1 = sub_100035CA4((uint64_t *)&unk_10016B050);
  __chkstk_darwin(v1);
  v3 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v68 - v9;
  v69 = v0;
  v11 = (uint64_t)v0 + OBJC_IVAR____TtC11Diagnostics38EnhancedLoggingCompletedViewController_delegate;
  *(_QWORD *)(v11 + 8) = 0;
  swift_unknownObjectWeakInit(v11, 0);
  v12 = (void *)objc_opt_self(ELSManager);
  v13 = objc_msgSend(v12, "sharedManager");
  v14 = objc_msgSend(v13, "snapshot");

  v15 = objc_msgSend(v14, "status");
  if (v15 == (id)8)
  {
    v16 = 0xD000000000000027;
    v17 = "ENHANCED_LOGGING_UPLOAD_FAILED_SUBTITLE";
LABEL_8:
    sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v16, (void *)((unint64_t)(v17 - 32) | 0x8000000000000000));
    v37 = v45;
    goto LABEL_9;
  }
  v18 = v10;
  v19 = objc_msgSend(v12, "sharedManager");
  v20 = objc_msgSend(v19, "snapshot");

  v21 = objc_msgSend(v20, "endDate");
  if (!v21)
  {
    v25 = (uint64_t)v3;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_7;
  }
  v22 = v8;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

  v23 = v5;
  v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v25 = (uint64_t)v3;
  v26 = v4;
  v24(v3, v22, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v3, 1, v4) == 1)
  {
LABEL_7:
    sub_100044F0C(v25);
    v16 = 0xD000000000000028;
    v17 = "ENHANCED_LOGGING_COMPLETE_SUBTITLE_ERROR";
    goto LABEL_8;
  }
  v27 = v18;
  v24(v18, v3, v4);
  v28 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v28, "setDateStyle:", 3);
  objc_msgSend(v28, "setTimeStyle:", 0);
  v29 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v30 = swift_allocObject(v29, 72, 7);
  *(_OWORD *)(v30 + 16) = xmmword_10010BE30;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v32 = objc_msgSend(v28, "stringFromDate:", isa);

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  *(_QWORD *)(v30 + 56) = &type metadata for String;
  *(_QWORD *)(v30 + 64) = sub_100047048();
  *(_QWORD *)(v30 + 32) = v33;
  *(_QWORD *)(v30 + 40) = v35;
  sub_10003FFA0(0, 0, v30, 0xD000000000000022, (void *)0x8000000100113830);
  v37 = v36;

  swift_bridgeObjectRelease((DARootViewController *)v30, v38, v39, v40, v41, v42, v43, v44);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v26);
LABEL_9:
  v46 = v69;
  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x8000000100113810);
  v48 = v47;
  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48, v50, v51, v52, v53, v54, v55, v56);
  v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37, v58, v59, v60, v61, v62, v63, v64);
  v65 = (objc_class *)type metadata accessor for EnhancedLoggingCompletedViewController();
  v70.receiver = v46;
  v70.super_class = v65;
  v66 = objc_msgSendSuper2(&v70, "initWithTitle:detailText:icon:contentLayout:", v49, v57, 0, 2);

  return v66;
}

void sub_10004EB58()
{
  void *v0;
  void *v1;
  id v2;
  DARootViewController *v3;
  DARootViewController *v4;
  NSString v5;
  SEL v6;
  id v7;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  objc_super v16;

  v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedViewController();
  objc_msgSendSuper2(&v16, "viewDidLoad");
  objc_msgSend(v0, "setModalPresentationStyle:", 2);
  v2 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 19279, (void *)0xE200000000000000);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4, v6, v7, v8, v9, v10, v11, v12);
  objc_msgSend(v2, "setTitle:forState:", v5, 0);

  sub_10004EFC0();
  v13 = swift_allocObject(&unk_100136358, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  v14 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10004F020, v13);
  objc_msgSend(v2, "addAction:forControlEvents:", v14, 64);

  v15 = objc_msgSend(v1, "buttonTray");
  objc_msgSend(v15, "addButton:", v2);

}

void sub_10004ECDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC11Diagnostics38EnhancedLoggingCompletedViewController_delegate);

    if (v5)
    {
      swift_beginAccess(v2, &v8, 0, 0);
      v6 = swift_unknownObjectWeakLoadStrong(v2);
      if (v6)
      {
        v7 = (void *)v6;
        sub_100035528();

        swift_unknownObjectRelease(v5);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_10004EDB4(char a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedViewController();
  objc_msgSendSuper2(&v9, "viewDidAppear:", a1 & 1);
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "applicationState");

  if (!v4)
  {
    if (qword_10016A678 != -1)
      v5 = swift_once(&qword_10016A678, sub_10008BF34);
    v6 = qword_100172378;
    v7 = static os_log_type_t.default.getter(v5);
    os_log(_:dso:log:type:_:)("User has seen confirmation pane appear, flushing...", 51, 2, &_mh_execute_header, v6, v7, &_swiftEmptyArrayStorage);
    v8 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
    objc_msgSend(v8, "flush");

  }
}

id sub_10004EF60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EnhancedLoggingCompletedViewController()
{
  return objc_opt_self(_TtC11Diagnostics38EnhancedLoggingCompletedViewController);
}

unint64_t sub_10004EFC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016DFF0;
  if (!qword_10016DFF0)
  {
    v1 = objc_opt_self(UIAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10016DFF0);
  }
  return result;
}

uint64_t sub_10004EFFC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10004F020(uint64_t a1)
{
  uint64_t v1;

  sub_10004ECDC(a1, v1);
}

uint64_t sub_10004F028(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

void sub_10004F04C()
{
  xmmword_10016B6F8 = 0uLL;
}

double sub_10004F05C@<D0>(_OWORD *a1@<X8>)
{
  double result;

  if (qword_10016A628 != -1)
    swift_once(&qword_10016A628, sub_10004F04C);
  result = *(double *)&xmmword_10016B6F8;
  *a1 = xmmword_10016B6F8;
  return result;
}

uint64_t sub_10004F0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_10004F18C();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

double sub_10004F100()
{
  unint64_t v0;
  double v2;

  v0 = sub_10004F138();
  EnvironmentValues.subscript.getter(&v2, &type metadata for WindowSizeKey, &type metadata for WindowSizeKey, v0);
  return v2;
}

unint64_t sub_10004F138()
{
  unint64_t result;

  result = qword_10016B708;
  if (!qword_10016B708)
  {
    result = swift_getWitnessTable(&unk_10010C5A4, &type metadata for WindowSizeKey);
    atomic_store(result, (unint64_t *)&qword_10016B708);
  }
  return result;
}

ValueMetadata *type metadata accessor for WindowSizeKey()
{
  return &type metadata for WindowSizeKey;
}

unint64_t sub_10004F18C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016B710;
  if (!qword_10016B710)
  {
    type metadata accessor for CGSize(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CGSize, v1);
    atomic_store(result, (unint64_t *)&qword_10016B710);
  }
  return result;
}

id sub_10004F1D4(void *a1)
{
  return objc_msgSend(a1, "setAlpha:", 1.0);
}

id sub_10004F1E4(void *a1)
{
  return objc_msgSend(a1, "setAlpha:", 0.0);
}

void sub_10004F1F4(void *a1, id (*a2)(), uint64_t a3)
{
  double v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id (*v16)();
  uint64_t v17;

  objc_msgSend(a1, "alpha");
  if (v6 == 0.0)
  {
    v7 = swift_allocObject(&unk_1001363C0, 24, 7);
    *(_QWORD *)(v7 + 16) = a1;
    v16 = sub_10004F378;
    v17 = v7;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_100030658;
    v15 = &unk_1001363D8;
    v8 = _Block_copy(&v12);
    v9 = v17;
    v10 = a1;
    swift_retain(v7);
    swift_release(v9);
    if (a2)
    {
      v16 = a2;
      v17 = a3;
      v12 = _NSConcreteStackBlock;
      v13 = 1107296256;
      v14 = sub_1000D25FC;
      v15 = &unk_100136400;
      a2 = (id (*)())_Block_copy(&v12);
      v11 = v17;
      swift_retain(a3);
      swift_release(v11);
    }
    objc_msgSend((id)objc_opt_self(UIView), "animateWithDuration:delay:options:animations:completion:", 0x10000, v8, a2, 0.375, 0.0);
    _Block_release(a2);
    _Block_release(v8);
    swift_release(v7);
  }
}

uint64_t sub_10004F354()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10004F378()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
}

uint64_t sub_10004F38C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004F39C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10004F3A4(void *a1, id (*a2)(), uint64_t a3)
{
  double v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id (*v16)();
  uint64_t v17;

  objc_msgSend(a1, "alpha");
  if (v6 == 1.0)
  {
    v7 = swift_allocObject(&unk_100136438, 24, 7);
    *(_QWORD *)(v7 + 16) = a1;
    v16 = sub_10004F508;
    v17 = v7;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_100030658;
    v15 = &unk_100136450;
    v8 = _Block_copy(&v12);
    v9 = v17;
    v10 = a1;
    swift_retain(v7);
    swift_release(v9);
    if (a2)
    {
      v16 = a2;
      v17 = a3;
      v12 = _NSConcreteStackBlock;
      v13 = 1107296256;
      v14 = sub_1000D25FC;
      v15 = &unk_100136478;
      a2 = (id (*)())_Block_copy(&v12);
      v11 = v17;
      swift_retain(a3);
      swift_release(v11);
    }
    objc_msgSend((id)objc_opt_self(UIView), "animateWithDuration:delay:options:animations:completion:", 0x20000, v8, a2, 0.125, 0.0);
    _Block_release(a2);
    _Block_release(v8);
    swift_release(v7);
  }
}

id sub_10004F508()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

void sub_10004F5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  NSString v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016AD20);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics10TextButton_button);
  v6 = v1 + OBJC_IVAR____TtC11Diagnostics10TextButton_action;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setTitle:forState:", v7, 0);

  v8 = objc_msgSend(v5, "titleLabel");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "setFont:", *(_QWORD *)(v6 + 16));

  }
  objc_msgSend(v5, "setContentHorizontalAlignment:", 0);
  objc_msgSend(v5, "addTarget:action:forControlEvents:", v1, "buttonActionWithSender:", 64);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v11 = objc_msgSend(v10, "userInterfaceIdiom");

  if (v11 == (id)6)
  {
    sub_100037118(0, &qword_10016AD38, UIHoverStyle_ptr);
    static UIShape.capsule.getter();
    v12 = type metadata accessor for UIShape(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 0, 1, v12);
    v13 = (void *)UIHoverStyle.init(shape:)(v4);
    objc_msgSend(v5, "setHoverStyle:", v13);

  }
}

id sub_10004F774()
{
  char *v0;

  return objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics10TextButton_button]);
}

void sub_10004F790()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  SEL v19;
  id v20;
  int v21;
  id v22;
  id v23;
  id v24;
  id v25;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10010BF30;
  v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics10TextButton_button];
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "bottomAnchor");
  v10 = objc_msgSend(v1, "bottomAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v5, "leadingAnchor");
  v13 = objc_msgSend(v1, "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(v5, "trailingAnchor");
  v16 = objc_msgSend(v1, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v4, v19, v20, v21, v22, v23, v24, v25);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_10004FA40()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[5];
  uint64_t v8;

  v1 = swift_allocObject(&unk_1001364F0, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = (void *)objc_opt_self(UIView);
  v7[4] = sub_10004FF78;
  v8 = v1;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100030658;
  v7[3] = &unk_100136508;
  v3 = _Block_copy(v7);
  v4 = v8;
  v5 = v0;
  swift_retain(v1);
  swift_release(v4);
  objc_msgSend(v2, "animateWithDuration:delay:options:animations:completion:", 0x20000, v3, 0, 0.125, 0.0);
  _Block_release(v3);
  return objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC11Diagnostics10TextButton_button], "setUserInteractionEnabled:", 0, swift_release(v1).n128_f64[0]);
}

void sub_10004FB78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics10TextButton_action + 8);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10TextButton_action + 16);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics10TextButton_action + 40));

  swift_bridgeObjectRelease(v1);
}

id sub_10004FBC8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TextButton()
{
  return objc_opt_self(_TtC11Diagnostics10TextButton);
}

id sub_10004FC6C()
{
  return sub_10004FA40();
}

id sub_10004FC8C(__int128 *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  __int128 v22;
  char *v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  id v27;
  objc_class *v28;
  id v29;
  objc_super v31;
  __int128 v32;

  v3 = sub_100035CA4((uint64_t *)&unk_10016E470);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIButton.Configuration(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v31 - v11;
  v13 = (void *)objc_opt_self(UIFontMetrics);
  v14 = v1;
  v15 = objc_msgSend(v13, "defaultMetrics");
  v16 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v16, "defaultFontSize");
  v17 = objc_msgSend(v16, "systemFontOfSize:");
  v18 = objc_msgSend(v15, "scaledFontForFont:", v17);

  static UIButton.Configuration.plain()();
  v19 = swift_allocObject(&unk_1001364C8, 24, 7);
  *(_QWORD *)(v19 + 16) = v18;
  v20 = v18;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10003CF9C, v19);
  v21 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 0, 1, v21);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v5);

  sub_100037118(0, &qword_10016AD30, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11Diagnostics10TextButton_button] = UIButton.init(configuration:primaryAction:)(v10, 0);
  v22 = a1[1];
  v32 = *a1;
  v23 = &v14[OBJC_IVAR____TtC11Diagnostics10TextButton_action];
  v24 = a1[2];
  *(_OWORD *)v23 = v32;
  *((_OWORD *)v23 + 1) = v22;
  v25 = (void *)*((_QWORD *)a1 + 2);
  v26 = *((_QWORD *)a1 + 5);
  *((_OWORD *)v23 + 2) = v24;
  sub_10004FF50((uint64_t)&v32);
  v27 = v25;
  swift_retain(v26);

  v28 = (objc_class *)type metadata accessor for TextButton();
  v31.receiver = v14;
  v31.super_class = v28;
  v29 = objc_msgSendSuper2(&v31, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v29;
}

uint64_t sub_10004FF2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004FF50(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

id sub_10004FF78()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11Diagnostics10TextButton_button), "setAlpha:", 0.5);
}

uint64_t sub_10004FF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004FFA8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100050174()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlertContentViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AlertContentViewController()
{
  return objc_opt_self(_TtC11Diagnostics26AlertContentViewController);
}

_QWORD *sub_1000501C8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1000501DC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1000501F0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10005021C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_100050240(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_100050254@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100050268(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_10005027C()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_10005028C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void sub_1000502A4(DARootViewController *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  SEL v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v4 = sub_100051D00((uint64_t)a1);
  swift_bridgeObjectRelease(a1, v5, v6, v7, v8, v9, v10, v11);
  *a2 = v4;
}

NSString sub_1000502E0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100172338 = (uint64_t)result;
  return result;
}

void sub_100050314()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  DARootViewController *v35;
  Class isa;
  SEL v37;
  id v38;
  int v39;
  id v40;
  id v41;
  id v42;
  id v43;
  NSObject *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  DARootViewController *v48;
  SEL v49;
  id v50;
  int v51;
  id v52;
  id v53;
  id v54;
  id v55;
  int64_t v56;
  uint64_t v57;
  __int128 aBlock;
  uint64_t (*v59)(uint64_t);
  void *v60;
  uint64_t (*v61)();
  uint64_t v62;
  char v63[104];
  char v64[24];
  _QWORD v65[6];

  if (qword_10016A638 != -1)
LABEL_48:
    swift_once(&qword_10016A638, sub_1000508B0);
  swift_beginAccess(&off_10016B788, v64, 1, 0);
  v0 = (uint64_t)off_10016B788;
  if (((unint64_t)off_10016B788 & 0xC000000000000001) != 0)
  {
    if ((uint64_t)off_10016B788 < 0)
      v1 = off_10016B788;
    else
      v1 = (void *)((unint64_t)off_10016B788 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(off_10016B788);
    v2 = __CocoaSet.makeIterator()(v1);
    v3 = type metadata accessor for CardState();
    v5 = sub_100052344((unint64_t *)&qword_10016BA18, v4, (uint64_t (*)(uint64_t))type metadata accessor for CardState, (uint64_t)&unk_10010C980);
    v6 = Set.Iterator.init(_cocoa:)(v65, v2, v3, v5);
    v0 = v65[0];
    v7 = (char *)v65[1];
    v8 = v65[2];
    v9 = v65[3];
    v10 = v65[4];
  }
  else
  {
    v11 = -1 << *((_BYTE *)off_10016B788 + 32);
    v7 = (char *)off_10016B788 + 56;
    v12 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *((_QWORD *)off_10016B788 + 7);
    v6 = (_QWORD *)swift_bridgeObjectRetain(off_10016B788);
    v8 = v12;
    v9 = 0;
  }
  v56 = (unint64_t)(v8 + 64) >> 6;
  v15 = &OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton;
  while (v0 < 0)
  {
    v19 = __CocoaSet.Iterator.next()(v6);
    if (!v19)
      goto LABEL_46;
    v20 = v19;
    v57 = v19;
    v21 = type metadata accessor for CardState();
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(&aBlock, &v57, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
    v22 = aBlock;
    swift_unknownObjectRelease(v20);
    v18 = v9;
    v16 = v10;
    if (!v22)
      goto LABEL_46;
LABEL_34:
    if ((*(_BYTE *)(v22 + 88) & 1) != 0)
      goto LABEL_40;
    if ((v15[240] & 1) == 0)
    {
      if (!*(_QWORD *)(v22 + 80))
        goto LABEL_12;
      v26 = v7;
      v27 = type metadata accessor for CardState();
      v28 = swift_allocObject(v27, 89, 7);
      v29 = swift_retain(v22);
      sub_100050A84(v29);
      v30 = *(_QWORD *)(v22 + 80);
      *(_QWORD *)(v22 + 80) = 0;
      v31 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_10016A630 != -1)
        swift_once(&qword_10016A630, sub_1000502E0);
      v32 = qword_100172338;
      v33 = sub_100035CA4((uint64_t *)&unk_10016BA20);
      inited = swift_initStackObject(v33, v63);
      *(_OWORD *)(inited + 16) = xmmword_10010BE30;
      strcpy((char *)&aBlock, "changeInfoKey");
      HIWORD(aBlock) = -4864;
      AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
      *(_QWORD *)(inited + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
      *(_QWORD *)(inited + 72) = v28;
      *(_QWORD *)(inited + 80) = v30;
      swift_retain(v28);
      v35 = (DARootViewController *)sub_10006DCBC(inited);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v35, v37, v38, v39, v40, v41, v42, v43);
      objc_msgSend(v31, "postNotificationName:object:userInfo:", v32, v22, isa);
      swift_release(v28);

      v7 = v26;
      v15 = &OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton;
LABEL_40:
      if (*((_BYTE *)v15 + 1920) != 1)
        goto LABEL_12;
    }
    if (*(_QWORD *)(v22 + 80))
    {
      if (qword_10016A640 != -1)
        swift_once(&qword_10016A640, sub_1000508C4);
      v44 = qword_10016B790;
      v45 = swift_allocObject(&unk_1001366C0, 32, 7);
      *(_QWORD *)(v45 + 16) = sub_10005232C;
      *(_QWORD *)(v45 + 24) = v22;
      v61 = sub_10003CDD4;
      v62 = v45;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v59 = sub_100048E58;
      v60 = &unk_1001366D8;
      v46 = _Block_copy(&aBlock);
      v47 = v62;
      swift_retain(v22);
      swift_retain(v45);
      swift_release(v47);
      dispatch_sync(v44, v46);
      _Block_release(v46);
      LOBYTE(v47) = swift_isEscapingClosureAtFileLocation(v45, "", 87, 259, 42, 1);
      swift_release_n(v22, 2);
      swift_release(v45);
      v9 = v18;
      v10 = v16;
      v15 = &OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton;
      if ((v47 & 1) != 0)
      {
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
    }
    else
    {
LABEL_12:
      swift_release(v22);
      v9 = v18;
      v10 = v16;
    }
  }
  if (v10)
  {
    v16 = (v10 - 1) & v10;
    v17 = __clz(__rbit64(v10)) | (v9 << 6);
    v18 = v9;
    goto LABEL_33;
  }
  v23 = v9 + 1;
  if (__OFADD__(v9, 1))
    goto LABEL_47;
  if (v23 >= v56)
    goto LABEL_46;
  v24 = *(_QWORD *)&v7[8 * v23];
  v18 = v9 + 1;
  if (v24)
    goto LABEL_32;
  v18 = v9 + 2;
  if (v9 + 2 >= v56)
    goto LABEL_46;
  v24 = *(_QWORD *)&v7[8 * v18];
  if (v24)
    goto LABEL_32;
  v18 = v9 + 3;
  if (v9 + 3 >= v56)
    goto LABEL_46;
  v24 = *(_QWORD *)&v7[8 * v18];
  if (v24)
    goto LABEL_32;
  v18 = v9 + 4;
  if (v9 + 4 >= v56)
    goto LABEL_46;
  v24 = *(_QWORD *)&v7[8 * v18];
  if (v24)
  {
LABEL_32:
    v16 = (v24 - 1) & v24;
    v17 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_33:
    v22 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 8 * v17);
    swift_retain(v22);
    if (!v22)
      goto LABEL_46;
    goto LABEL_34;
  }
  v25 = v9 + 5;
  while (v56 != v25)
  {
    v24 = *(_QWORD *)&v7[8 * v25++];
    if (v24)
    {
      v18 = v25 - 1;
      goto LABEL_32;
    }
  }
LABEL_46:
  sub_100040800(v0);
  v48 = (DARootViewController *)off_10016B788;
  off_10016B788 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v48, v49, v50, v51, v52, v53, v54, v55);
}

void sub_1000508B0()
{
  off_10016B788 = &_swiftEmptySetSingleton;
}

uint64_t sub_1000508C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100052344((unint64_t *)&unk_10016BA30, 255, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_100035CA4(&qword_10016B1C0);
  v13 = sub_1000477F0();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000026, 0x8000000100113B50, v9, v6, v3, 0);
  qword_10016B790 = result;
  return result;
}

uint64_t sub_100050A84(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  __CFString *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v18[5];
  uint64_t v19;

  *(_DWORD *)(v1 + 16) = 65792;
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v1 + 80) = 0;
  *(_BYTE *)(v1 + 88) = 0;
  v3 = *(void **)(a1 + 40);
  *(_QWORD *)(v1 + 40) = v3;
  v4 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v1 + 48) = v4;
  *(_BYTE *)(v1 + 16) = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(v1 + 17) = *(_BYTE *)(a1 + 17);
  *(_BYTE *)(v1 + 18) = *(_BYTE *)(a1 + 18);
  *(_BYTE *)(v1 + 19) = *(_BYTE *)(a1 + 19);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(v1 + 56) = v5;
  *(_QWORD *)(v1 + 64) = v6;
  v7 = v3;
  swift_bridgeObjectRetain(v4);
  sub_100035C4C(v5, v6);
  sub_100035D74(0, 0);
  *(_BYTE *)(v1 + 32) = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(a1 + 24);
  v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v9 = *(void **)(v1 + 40);
  v10 = (void *)objc_opt_self(NSOperationQueue);
  v11 = CFSTR("com.apple.Diagnostics.deviceStateChangedNotification");
  v12 = v9;
  v13 = objc_msgSend(v10, "mainQueue");
  v18[4] = sub_1000522D4;
  v19 = v1;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100048DB4;
  v18[3] = &unk_100136660;
  v14 = _Block_copy(v18);
  v15 = v19;
  swift_retain(v1);
  v16 = objc_msgSend(v8, "addObserverForName:object:queue:usingBlock:", v11, v12, v13, v14, swift_release(v15).n128_f64[0]);
  swift_release(a1);
  _Block_release(v14);
  swift_unknownObjectRelease(v16);

  return v1;
}

void sub_100050C74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10[2];
  _BYTE v11[40];
  __int128 v12;
  __int128 v13;

  v1 = Notification.userInfo.getter(a1);
  if (v1)
  {
    v2 = v1;
    v10[0] = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("info"));
    v10[1] = v3;
    AnyHashable.init<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v2 + 16) && (v4 = sub_100072B10((uint64_t)v11), (v5 & 1) != 0))
    {
      sub_1000370B0(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v12);
    }
    else
    {
      v12 = 0u;
      v13 = 0u;
    }
    swift_bridgeObjectRelease(v2);
    sub_100036FDC((uint64_t)v11);
    if (*((_QWORD *)&v13 + 1))
    {
      v6 = sub_100037118(0, &qword_10016BA10, off_100131A98);
      if ((swift_dynamicCast(v10, &v12, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
      {
        v7 = v10[0];
        if ((objc_msgSend(v10[0], "changedProperties") & 1) != 0)
        {
          v8 = objc_msgSend(v7, "snapshot");
          v9 = objc_msgSend(v8, "phase");

          sub_100050EE0((uint64_t)v9);
        }

      }
    }
    else
    {
      sub_1000522EC((uint64_t)&v12);
    }
  }
}

uint64_t sub_100050DC8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = objc_msgSend(*(id *)(v0 + 40), "attributes");
  v2 = sub_100035CA4((uint64_t *)&unk_10016ACD0);
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, v2, &protocol witness table for String);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("imageName"));
  v6 = v5;
  if (*(_QWORD *)(v3 + 16) && (v7 = sub_100072A94(v4, v5), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v7);
    swift_unknownObjectRetain(v9);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v3);
    v13 = v9;
    if ((swift_dynamicCast(&v12, &v13, v2, &type metadata for String, 6) & 1) != 0)
      return v12;
    else
      return 4407891;
  }
  else
  {
    v10 = 4407891;
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v3);
  }
  return v10;
}

double sub_100050EE0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  double result;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;

  switch(a1)
  {
    case 1:
      v6 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 4;
      if (v6 != 4)
        goto LABEL_5;
      break;
    case 2:
      v7 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 1;
      if (v7 != 1)
        goto LABEL_5;
      break;
    case 3:
    case 4:
      v2 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 2;
      if (v2 != 2)
        goto LABEL_5;
      break;
    case 5:
      v8 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 3;
      if (v8 != 3)
        goto LABEL_5;
      break;
    case 6:
      v9 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 5;
      if (v9 != 5)
        goto LABEL_5;
      break;
    case 7:
      v10 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 6;
      if (v10 != 6)
        goto LABEL_5;
      break;
    case 8:
      v11 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 7;
      if (v11 != 7)
        goto LABEL_5;
      break;
    case 9:
      v12 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 8;
      if (v12 != 8)
        goto LABEL_5;
      break;
    case 10:
      v13 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 9;
      if (v13 != 9)
        goto LABEL_5;
      break;
    case 11:
      v14 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 10;
      if (v14 != 10)
        goto LABEL_5;
      break;
    case 12:
      v15 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 11;
      if (v15 != 11)
        goto LABEL_5;
      break;
    case 13:
      v16 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 12;
      if (v16 != 12)
        goto LABEL_5;
      break;
    default:
      v3 = *(unsigned __int8 *)(v1 + 32);
      *(_BYTE *)(v1 + 32) = 0;
      if (v3)
      {
LABEL_5:
        v4 = *(_QWORD *)(v1 + 80);
        if ((v4 & 0x20) == 0)
          *(_QWORD *)(v1 + 80) = v4 | 0x20;
        result = sub_100051044();
      }
      break;
  }
  return result;
}

double sub_100051044()
{
  uint64_t v0;
  Class isa;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  unint64_t v10;
  double result;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  __int128 aBlock;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t (*v18)();
  uint64_t v19;
  char v20[104];

  v2 = v0;
  if ((*(_BYTE *)(v0 + 88) & 1) != 0)
    goto LABEL_6;
  if ((byte_10016B780 & 1) != 0)
    goto LABEL_7;
  if (*(_QWORD *)(v0 + 80))
  {
    v3 = type metadata accessor for CardState();
    v4 = swift_allocObject(v3, 89, 7);
    v5 = swift_retain(v2);
    sub_100050A84(v5);
    isa = *(Class *)(v2 + 80);
    *(_QWORD *)(v2 + 80) = 0;
    isEscapingClosureAtFileLocation = (uint64_t)objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10016A630 != -1)
      goto LABEL_13;
    while (1)
    {
      v7 = qword_100172338;
      v8 = sub_100035CA4((uint64_t *)&unk_10016BA20);
      inited = swift_initStackObject(v8, v20);
      *(_OWORD *)(inited + 16) = xmmword_10010BE30;
      strcpy((char *)&aBlock, "changeInfoKey");
      HIWORD(aBlock) = -4864;
      AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
      *(_QWORD *)(inited + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
      *(_QWORD *)(inited + 72) = v4;
      *(_QWORD *)(inited + 80) = isa;
      swift_retain(v4);
      v10 = sub_10006DCBC(inited);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v10);
      objc_msgSend((id)isEscapingClosureAtFileLocation, "postNotificationName:object:userInfo:", v7, v2, isa);
      swift_release(v4);

LABEL_6:
      if (byte_10016B780 != 1)
        break;
LABEL_7:
      if (!*(_QWORD *)(v2 + 80))
        return result;
      if (qword_10016A640 != -1)
        swift_once(&qword_10016A640, sub_1000508C4);
      v12 = qword_10016B790;
      v4 = swift_allocObject(&unk_100136738, 32, 7);
      *(_QWORD *)(v4 + 16) = sub_10005232C;
      *(_QWORD *)(v4 + 24) = v2;
      v18 = sub_100052C38;
      v19 = v4;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v16 = sub_100048E58;
      v17 = &unk_100136750;
      v13 = _Block_copy(&aBlock);
      v14 = v19;
      swift_retain(v2);
      swift_retain(v4);
      swift_release(v14);
      dispatch_sync(v12, v13);
      _Block_release(v13);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 87, 259, 42, 1);
      swift_release(v2);
      *(_QWORD *)&result = swift_release(v4).n128_u64[0];
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return result;
      __break(1u);
LABEL_13:
      swift_once(&qword_10016A630, sub_1000502E0);
    }
  }
  return result;
}

double sub_100051310(uint64_t a1)
{
  double result;
  _BYTE v3[24];
  uint64_t v4;

  if (qword_10016A638 != -1)
    swift_once(&qword_10016A638, sub_1000508B0);
  swift_beginAccess(&off_10016B788, v3, 33, 0);
  swift_retain(a1);
  sub_1000A8F3C(&v4, a1);
  swift_endAccess(v3);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

double sub_10005139C(uint64_t a1)
{
  uint64_t v1;
  char v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;

  v3 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(v1 + 88) = 1;
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(unsigned __int8 *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = v4;
  if (v4 != v5)
  {
    v6 = *(_QWORD *)(v1 + 80);
    if ((v6 & 1) == 0)
      *(_QWORD *)(v1 + 80) = v6 | 1;
    sub_100051044();
  }
  v7 = *(unsigned __int8 *)(a1 + 17);
  v8 = *(unsigned __int8 *)(v1 + 17);
  *(_BYTE *)(v1 + 17) = v7;
  if (v7 != v8)
  {
    v9 = *(_QWORD *)(v1 + 80);
    if ((v9 & 4) == 0)
      *(_QWORD *)(v1 + 80) = v9 | 4;
    sub_100051044();
  }
  v10 = *(unsigned __int8 *)(a1 + 18);
  v11 = *(unsigned __int8 *)(v1 + 18);
  *(_BYTE *)(v1 + 18) = v10;
  if (v10 != v11)
  {
    v12 = *(_QWORD *)(v1 + 80);
    if ((v12 & 2) == 0)
      *(_QWORD *)(v1 + 80) = v12 | 2;
    sub_100051044();
  }
  v13 = *(unsigned __int8 *)(a1 + 19);
  v14 = *(unsigned __int8 *)(v1 + 19);
  *(_BYTE *)(v1 + 19) = v13;
  if (v13 != v14)
  {
    v15 = *(_QWORD *)(v1 + 80);
    if ((v15 & 8) == 0)
      *(_QWORD *)(v1 + 80) = v15 | 8;
    sub_100051044();
  }
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(v1 + 56);
  v19 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 56) = v16;
  *(_QWORD *)(v1 + 64) = v17;
  sub_100035C4C(v16, v17);
  sub_100035D74(v18, v19);
  v21 = *(unsigned __int8 *)(a1 + 32);
  v22 = *(unsigned __int8 *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = v21;
  if (v21 != v22)
  {
    v23 = *(_QWORD *)(v1 + 80);
    if ((v23 & 0x20) == 0)
      *(_QWORD *)(v1 + 80) = v23 | 0x20;
    result = sub_100051044();
  }
  v24 = *(_QWORD *)(a1 + 24);
  v25 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v24;
  if (v24 != v25)
  {
    v26 = *(_QWORD *)(v1 + 80);
    if ((v26 & 0x10) == 0)
      *(_QWORD *)(v1 + 80) = v26 | 0x10;
    result = sub_100051044();
  }
  v27 = *(unsigned __int8 *)(v1 + 88);
  *(_BYTE *)(v1 + 88) = v3;
  if ((v3 & 1) == 0)
  {
    if (v27)
      return sub_100051044();
  }
  return result;
}

uint64_t sub_100051504()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  Swift::String v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  uint64_t v28;
  void *v29;
  Swift::String v30;
  uint64_t v32;
  _QWORD v33[2];

  BYTE5(v33[1]) = 0;
  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v33, "isRequired: ");
  HIWORD(v33[1]) = -5120;
  if (*(_BYTE *)(v0 + 16))
    v1 = 1702195828;
  else
    v1 = 0x65736C6166;
  if (*(_BYTE *)(v0 + 16))
    v2 = 0xE400000000000000;
  else
    v2 = 0xE500000000000000;
  v3 = v2;
  String.append(_:)(*(Swift::String *)&v1);
  swift_bridgeObjectRelease(v2);
  v4._object = (void *)0xEC000000203A6E65;
  v4._countAndFlagsBits = 0x646469487369203BLL;
  String.append(_:)(v4);
  if (*(_BYTE *)(v0 + 17))
    v5 = 1702195828;
  else
    v5 = 0x65736C6166;
  if (*(_BYTE *)(v0 + 17))
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease(v6);
  v8._object = (void *)0x8000000100113B80;
  v8._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v8);
  if (*(_BYTE *)(v0 + 18))
    v9 = 1702195828;
  else
    v9 = 0x65736C6166;
  if (*(_BYTE *)(v0 + 18))
    v10 = 0xE400000000000000;
  else
    v10 = 0xE500000000000000;
  v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease(v10);
  v12._countAndFlagsBits = 59;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v14 = v33[0];
  v13 = v33[1];
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(80);
  v15._countAndFlagsBits = 0xD00000000000001BLL;
  v15._object = (void *)0x8000000100113BA0;
  String.append(_:)(v15);
  if (*(_BYTE *)(v0 + 19))
    v16 = 1702195828;
  else
    v16 = 0x65736C6166;
  if (*(_BYTE *)(v0 + 19))
    v17 = 0xE400000000000000;
  else
    v17 = 0xE500000000000000;
  v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease(v17);
  v19._countAndFlagsBits = 0x685064726163203BLL;
  v19._object = (void *)0xED0000203A657361;
  String.append(_:)(v19);
  LOBYTE(v32) = *(_BYTE *)(v0 + 32);
  _print_unlocked<A, B>(_:_:)(&v32, v33, &type metadata for CardState.Phase, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v20._countAndFlagsBits = 0xD000000000000011;
  v20._object = (void *)0x8000000100113BC0;
  String.append(_:)(v20);
  v32 = *(_QWORD *)(v0 + 24);
  _print_unlocked<A, B>(_:_:)(&v32, v33, &type metadata for DeviceInformationView.InfoLabelType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v21._countAndFlagsBits = 0x656369766564203BLL;
  v21._object = (void *)0xEF203A6574617453;
  String.append(_:)(v21);
  v22 = *(id *)(v0 + 40);
  v23 = objc_msgSend(v22, "description");
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;

  v27._countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);

  swift_bridgeObjectRelease(v26);
  v28 = v33[0];
  v29 = (void *)v33[1];
  v33[0] = v14;
  v33[1] = v13;
  swift_bridgeObjectRetain(v13);
  v30._countAndFlagsBits = v28;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v29);
  return v33[0];
}

uint64_t sub_10005180C()
{
  uint64_t v0;
  SEL v1;
  id v2;
  int v3;
  id v4;
  id v5;
  id v6;
  id v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;

  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + 48), v1, v2, v3, v4, v5, v6, v7);
  sub_100035D74(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + 72), v8, v9, v10, v11, v12, v13, v14);
  return swift_deallocClassInstance(v0, 89, 7);
}

uint64_t type metadata accessor for CardState()
{
  return objc_opt_self(_TtC11Diagnostics9CardState);
}

ValueMetadata *type metadata accessor for CardState.ChangedPropertyOptions()
{
  return &type metadata for CardState.ChangedPropertyOptions;
}

uint64_t getEnumTagSinglePayload for CardState.Phase(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CardState.Phase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_100051954 + 4 * byte_10010C6C3[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_100051988 + 4 * byte_10010C6BE[v4]))();
}

uint64_t sub_100051988(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100051990(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100051998);
  return result;
}

uint64_t sub_1000519A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000519ACLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1000519B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000519B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardState.Phase()
{
  return &type metadata for CardState.Phase;
}

unint64_t sub_1000519D8()
{
  unint64_t result;

  result = qword_10016B9E0;
  if (!qword_10016B9E0)
  {
    result = swift_getWitnessTable(&unk_10010C7A0, &type metadata for CardState.Phase);
    atomic_store(result, (unint64_t *)&qword_10016B9E0);
  }
  return result;
}

unint64_t sub_100051A20()
{
  unint64_t result;

  result = qword_10016B9E8;
  if (!qword_10016B9E8)
  {
    result = swift_getWitnessTable(&unk_10010C7F8, &type metadata for CardState.ChangedPropertyOptions);
    atomic_store(result, (unint64_t *)&qword_10016B9E8);
  }
  return result;
}

unint64_t sub_100051A68()
{
  unint64_t result;

  result = qword_10016B9F0;
  if (!qword_10016B9F0)
  {
    result = swift_getWitnessTable(&unk_10010C7C8, &type metadata for CardState.ChangedPropertyOptions);
    atomic_store(result, (unint64_t *)&qword_10016B9F0);
  }
  return result;
}

unint64_t sub_100051AB0()
{
  unint64_t result;

  result = qword_10016B9F8;
  if (!qword_10016B9F8)
  {
    result = swift_getWitnessTable(&unk_10010C820, &type metadata for CardState.ChangedPropertyOptions);
    atomic_store(result, (unint64_t *)&qword_10016B9F8);
  }
  return result;
}

unint64_t sub_100051AF8()
{
  unint64_t result;

  result = qword_10016BA00;
  if (!qword_10016BA00)
  {
    result = swift_getWitnessTable(&unk_10010C858, &type metadata for CardState.ChangedPropertyOptions);
    atomic_store(result, (unint64_t *)&qword_10016BA00);
  }
  return result;
}

uint64_t sub_100051B3C()
{
  return sub_100051504();
}

Swift::Int sub_100051B5C()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = objc_msgSend(*(id *)(v1 + 40), "serialNumber");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  String.hash(into:)(v7, v3, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100051BE0(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 40), "serialNumber");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  String.hash(into:)(a1, v4, v6);
  return swift_bridgeObjectRelease(v6);
}

Swift::Int sub_100051C48(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, a1);
  v2 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 40), "serialNumber");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  String.hash(into:)(v7, v3, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100051CC8(uint64_t *a1, uint64_t *a2)
{
  return sub_100051D38(*a1, *a2);
}

uint64_t sub_100051CD4(uint64_t a1, uint64_t a2)
{
  return sub_100052344(&qword_10016BA08, a2, (uint64_t (*)(uint64_t))type metadata accessor for CardState, (uint64_t)&unk_10010C958);
}

uint64_t sub_100051D00(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_100051D38(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v3 = objc_msgSend(*(id *)(a1 + 40), "serialNumber");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7 = objc_msgSend(*(id *)(a2 + 40), "serialNumber");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  if (v4 == v8 && v6 == v10)
  {
    v12 = 1;
    v10 = v6;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v8, v10, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  return v12 & 1;
}

void sub_100051E00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  char v5;
  int v6;
  NSObject *v7;
  void *v8;
  _QWORD v9[5];
  uint64_t v10;

  v5 = byte_10016B780;
  byte_10016B780 = 1;
  sub_1000541D8(a1, a2, a3, a4, a5);
  v6 = byte_10016B780;
  byte_10016B780 = v5;
  if ((v5 & 1) == 0 && v6)
  {
    if (qword_10016A640 != -1)
      swift_once(&qword_10016A640, sub_1000508C4);
    v7 = qword_10016B790;
    v9[4] = sub_1000501C4;
    v10 = 0;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_100048E58;
    v9[3] = &unk_100136688;
    v8 = _Block_copy(v9);
    swift_release(v10);
    dispatch_sync(v7, v8);
    _Block_release(v8);
    if ((swift_isEscapingClosureAtFileLocation(0, "", 87, 112, 46, 1) & 1) != 0)
      __break(1u);
  }
}

void sub_100051EFC(uint64_t a1, void *a2)
{
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void **aBlock;
  uint64_t v39;
  void (*v40)(uint64_t, void *);
  void *v41;
  void (*v42)(void *);
  uint64_t v43;

  v4 = swift_allocObject(&unk_100136620, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v5 = *(void **)(a1 + 40);
  v6 = a2;
  v7 = objc_msgSend(v5, "attributes");
  v8 = sub_100035CA4((uint64_t *)&unk_10016ACD0);
  v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String, v8, &protocol witness table for String);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("productClass"));
  v12 = v11;
  if (*(_QWORD *)(v9 + 16) && (v13 = sub_100072A94(v10, v11), (v14 & 1) != 0))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v13);
    swift_unknownObjectRetain(v15);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v9);
    v37 = v15;
    if ((swift_dynamicCast(&aBlock, &v37, v8, &type metadata for String, 6) & 1) == 0)
      goto LABEL_9;
    v16 = aBlock;
    v17 = v39;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Accessories"));
    v20 = v19;
    if ((void **)v18 == v16 && v19 == v17)
    {
      swift_bridgeObjectRelease(v17);
LABEL_13:
      sub_100050DC8();
      v32 = v31;
      v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v32);
      v34 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v33);

      v35 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v34);
      v36 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView];
      *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView] = v35;
      v26 = v35;

      sub_10003845C();
      swift_release(v4);
      swift_bridgeObjectRelease(v17);
      v27 = v26;
      goto LABEL_11;
    }
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v16, v17, 0);
    swift_bridgeObjectRelease(v20);
    if ((v30 & 1) != 0)
      goto LABEL_13;
    v21 = v17;
  }
  else
  {
    swift_bridgeObjectRelease(v12);
    v21 = v9;
  }
  swift_bridgeObjectRelease(v21);
LABEL_9:
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v22);

  if (v23)
  {
    v24 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v23);

    v25 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView];
    *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView] = v24;
    v26 = v24;

    sub_10003845C();
    v27 = objc_msgSend((id)objc_opt_self(DADeviceImageViewManager), "sharedInstance");
    v42 = sub_1000522B4;
    v43 = v4;
    aBlock = _NSConcreteStackBlock;
    v39 = 1107296256;
    v40 = sub_100040808;
    v41 = &unk_100136638;
    v28 = _Block_copy(&aBlock);
    v29 = v43;
    swift_retain(v4);
    objc_msgSend(v27, "deviceImageViewForDeviceState:completion:", v5, v28, swift_release(v29).n128_f64[0]);
    _Block_release(v28);
    swift_release(v4);
LABEL_11:

    return;
  }

  __break(1u);
}

uint64_t sub_100052290()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000522B4(void *a1)
{
  uint64_t v1;

  sub_100037CD8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000522BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000522CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000522D4(uint64_t a1)
{
  sub_100050C74(a1);
}

uint64_t sub_1000522EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100035CA4((uint64_t *)&unk_10016B610);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_10005232C()
{
  uint64_t v0;

  return sub_100051310(v0);
}

uint64_t sub_100052334()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100052344(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100052384(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  DARootViewController *v5;
  id v6;
  id v7;
  uint64_t v8;
  objc_class *v9;
  objc_class *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  DARootViewController *v22;
  unint64_t v23;
  uint64_t v24;
  SEL v25;
  id v26;
  int v27;
  id v28;
  id v29;
  id v30;
  id v31;
  SEL v32;
  id v33;
  int v34;
  id v35;
  id v36;
  id v37;
  id v38;
  const char *v39;
  void *v40;
  int v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  DARootViewController *v46;
  void **v47;
  DARootViewController *v48;
  SEL v49;
  id v50;
  int v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  __CFString *v59;
  id v60;
  void *v61;
  uint64_t v62;
  id v63;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  DARootViewController *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  __int128 v80;
  DARootViewController *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  unint64_t v86;
  unint64_t v87;
  DARootViewController *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  unint64_t v93;
  unint64_t v94;
  DARootViewController *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  unint64_t v100;
  unint64_t v101;
  DARootViewController *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  unint64_t v107;
  unint64_t v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  char v113;
  SEL v114;
  id v115;
  int v116;
  id v117;
  id v118;
  id v119;
  id v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  void **aBlock;
  uint64_t v125;
  uint64_t (*v126)(uint64_t, uint64_t);
  void *v127;
  void (*v128)(uint64_t);
  uint64_t v129;

  v2 = v1;
  *(_DWORD *)(v2 + 16) = 65792;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v2 + 80) = 0;
  *(_BYTE *)(v2 + 88) = 0;
  *(_QWORD *)(v2 + 40) = a1;
  v4 = sub_100035CA4(&qword_10016BA48);
  v5 = (DARootViewController *)swift_allocObject(v4, 48, 7);
  *(_OWORD *)v5->remoteCardFilter = xmmword_10010BE30;
  v6 = a1;
  v7 = objc_msgSend(v6, "serialNumber");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  *(_QWORD *)&v5->remoteCardFilter[16] = v8;
  v5[1].super.super.super.super.isa = v10;
  v11 = objc_msgSend(v6, "attributes");
  v12 = sub_100035CA4((uint64_t *)&unk_10016ACD0);
  v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for String, v12, &protocol witness table for String);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("productClass"));
  v22 = (DARootViewController *)v15;
  if (!*(_QWORD *)(v13 + 16) || (v23 = sub_100072A94(v14, v15), (v15 & 1) == 0))
  {
    swift_bridgeObjectRelease(v22, (SEL)v15, v16, v17, v18, v19, v20, v21);
    swift_bridgeObjectRelease((DARootViewController *)v13, v49, v50, v51, v52, v53, v54, v55);
    goto LABEL_8;
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v23);
  swift_unknownObjectRetain(v24);
  swift_bridgeObjectRelease(v22, v25, v26, v27, v28, v29, v30, v31);
  swift_bridgeObjectRelease((DARootViewController *)v13, v32, v33, v34, v35, v36, v37, v38);
  v123 = v24;
  if ((swift_dynamicCast(&aBlock, &v123, v12, &type metadata for String, 6) & 1) != 0)
  {
    v47 = aBlock;
    v46 = (DARootViewController *)v125;
    if (aBlock == (void **)0x656E6F685069 && v125 == 0xE600000000000000)
    {
      v48 = (DARootViewController *)0xE600000000000000;
LABEL_11:
      swift_bridgeObjectRelease(v48, v39, v40, v41, v42, v43, v44, v45);
      v70 = *(_QWORD *)v5->remoteCardFilter;
      v69 = *(_QWORD *)&v5->remoteCardFilter[8];
      if (v70 >= v69 >> 1)
        v5 = sub_100091CB4((DARootViewController *)(v69 > 1), v70 + 1, 1, (uint64_t)v5, v65, v66, v67, v68);
      *(_QWORD *)v5->remoteCardFilter = v70 + 1;
      v71 = (char *)v5 + 16 * v70;
      *((_QWORD *)v71 + 4) = 0;
      *((_QWORD *)v71 + 5) = 0;
      goto LABEL_8;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656E6F685069, 0xE600000000000000, aBlock, v125, 0) & 1) != 0)
    {
      v48 = v46;
      goto LABEL_11;
    }
    if (v47 == (void **)1684099177 && v46 == (DARootViewController *)0xE400000000000000)
    {
      v72 = (DARootViewController *)0xE400000000000000;
    }
    else
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(1684099177, 0xE400000000000000, v47, v46, 0) & 1) == 0)
      {
        if (v47 == (void **)0x756F7420646F5069 && v46 == (DARootViewController *)0xEA00000000006863)
        {
          v81 = (DARootViewController *)0xEA00000000006863;
        }
        else
        {
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x756F7420646F5069, 0xEA00000000006863, v47, v46, 0) & 1) == 0)
          {
            if (v47 == (void **)0x565420656C707041 && v46 == (DARootViewController *)0xE800000000000000)
            {
              v88 = (DARootViewController *)0xE800000000000000;
            }
            else
            {
              if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x565420656C707041, 0xE800000000000000, v47, v46, 0) & 1) == 0)
              {
                if (v47 == (void **)0x615720656C707041 && v46 == (DARootViewController *)0xEB00000000686374)
                {
                  v95 = (DARootViewController *)0xEB00000000686374;
                }
                else
                {
                  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x615720656C707041, 0xEB00000000686374, v47, v46, 0) & 1) == 0)
                  {
                    if (v47 == (void **)0x726F737365636341 && v46 == (DARootViewController *)0xEB00000000736569)
                    {
                      v102 = (DARootViewController *)0xEB00000000736569;
                    }
                    else
                    {
                      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x726F737365636341, 0xEB00000000736569, v47, v46, 0) & 1) == 0)
                      {
                        if (v47 == (void **)0x73646F70726941 && v46 == (DARootViewController *)0xE700000000000000)
                        {
                          swift_bridgeObjectRelease((DARootViewController *)0xE700000000000000, v39, v40, v41, v42, v43, v44, v45);
                        }
                        else
                        {
                          v113 = _stringCompareWithSmolCheck(_:_:expecting:)(0x73646F70726941, 0xE700000000000000, v47, v46, 0);
                          swift_bridgeObjectRelease(v46, v114, v115, v116, v117, v118, v119, v120);
                          if ((v113 & 1) == 0)
                            goto LABEL_8;
                        }
                        v122 = *(_QWORD *)v5->remoteCardFilter;
                        v121 = *(_QWORD *)&v5->remoteCardFilter[8];
                        if (v122 >= v121 >> 1)
                          v5 = sub_100091CB4((DARootViewController *)(v121 > 1), v122 + 1, 1, (uint64_t)v5, v109, v110, v111, v112);
                        *(_QWORD *)v5->remoteCardFilter = v122 + 1;
                        v79 = (char *)v5 + 16 * v122;
                        v80 = xmmword_10010C640;
                        goto LABEL_22;
                      }
                      v102 = v46;
                    }
                    swift_bridgeObjectRelease(v102, v39, v40, v41, v42, v43, v44, v45);
                    v108 = *(_QWORD *)v5->remoteCardFilter;
                    v107 = *(_QWORD *)&v5->remoteCardFilter[8];
                    if (v108 >= v107 >> 1)
                      v5 = sub_100091CB4((DARootViewController *)(v107 > 1), v108 + 1, 1, (uint64_t)v5, v103, v104, v105, v106);
                    *(_QWORD *)v5->remoteCardFilter = v108 + 1;
                    v79 = (char *)v5 + 16 * v108;
                    v80 = xmmword_10010C650;
LABEL_22:
                    *((_OWORD *)v79 + 2) = v80;
                    goto LABEL_8;
                  }
                  v95 = v46;
                }
                swift_bridgeObjectRelease(v95, v39, v40, v41, v42, v43, v44, v45);
                v101 = *(_QWORD *)v5->remoteCardFilter;
                v100 = *(_QWORD *)&v5->remoteCardFilter[8];
                if (v101 >= v100 >> 1)
                  v5 = sub_100091CB4((DARootViewController *)(v100 > 1), v101 + 1, 1, (uint64_t)v5, v96, v97, v98, v99);
                *(_QWORD *)v5->remoteCardFilter = v101 + 1;
                v79 = (char *)v5 + 16 * v101;
                v80 = xmmword_10010C660;
                goto LABEL_22;
              }
              v88 = v46;
            }
            swift_bridgeObjectRelease(v88, v39, v40, v41, v42, v43, v44, v45);
            v94 = *(_QWORD *)v5->remoteCardFilter;
            v93 = *(_QWORD *)&v5->remoteCardFilter[8];
            if (v94 >= v93 >> 1)
              v5 = sub_100091CB4((DARootViewController *)(v93 > 1), v94 + 1, 1, (uint64_t)v5, v89, v90, v91, v92);
            *(_QWORD *)v5->remoteCardFilter = v94 + 1;
            v79 = (char *)v5 + 16 * v94;
            v80 = xmmword_10010C670;
            goto LABEL_22;
          }
          v81 = v46;
        }
        swift_bridgeObjectRelease(v81, v39, v40, v41, v42, v43, v44, v45);
        v87 = *(_QWORD *)v5->remoteCardFilter;
        v86 = *(_QWORD *)&v5->remoteCardFilter[8];
        if (v87 >= v86 >> 1)
          v5 = sub_100091CB4((DARootViewController *)(v86 > 1), v87 + 1, 1, (uint64_t)v5, v82, v83, v84, v85);
        *(_QWORD *)v5->remoteCardFilter = v87 + 1;
        v79 = (char *)v5 + 16 * v87;
        v80 = xmmword_10010C680;
        goto LABEL_22;
      }
      v72 = v46;
    }
    swift_bridgeObjectRelease(v72, v39, v40, v41, v42, v43, v44, v45);
    v78 = *(_QWORD *)v5->remoteCardFilter;
    v77 = *(_QWORD *)&v5->remoteCardFilter[8];
    if (v78 >= v77 >> 1)
      v5 = sub_100091CB4((DARootViewController *)(v77 > 1), v78 + 1, 1, (uint64_t)v5, v73, v74, v75, v76);
    *(_QWORD *)v5->remoteCardFilter = v78 + 1;
    v79 = (char *)v5 + 16 * v78;
    v80 = xmmword_10010C690;
    goto LABEL_22;
  }
LABEL_8:
  *(_QWORD *)(v2 + 48) = v5;
  v56 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v57 = (void *)objc_opt_self(NSOperationQueue);
  v58 = v6;
  v59 = CFSTR("com.apple.Diagnostics.deviceStateChangedNotification");
  v60 = objc_msgSend(v57, "mainQueue");
  v128 = sub_1000522D4;
  v129 = v2;
  aBlock = _NSConcreteStackBlock;
  v125 = 1107296256;
  v126 = sub_100048DB4;
  v127 = &unk_100136700;
  v61 = _Block_copy(&aBlock);
  v62 = v129;
  swift_retain(v2);
  v63 = objc_msgSend(v56, "addObserverForName:object:queue:usingBlock:", v59, v58, v60, v61, swift_release(v62).n128_f64[0]);
  _Block_release(v61);
  swift_unknownObjectRelease(v63);

  sub_100050EE0((uint64_t)objc_msgSend(v58, "phase"));
  return v2;
}

uint64_t sub_100052AD8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t *initializeBufferWithCopyOfBuffer for CardState.ChangedPropertyNotificationInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for CardState.ChangedPropertyNotificationInfo(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t *assignWithCopy for CardState.ChangedPropertyNotificationInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  return a1;
}

uint64_t *assignWithTake for CardState.ChangedPropertyNotificationInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for CardState.ChangedPropertyNotificationInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardState.ChangedPropertyNotificationInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardState.ChangedPropertyNotificationInfo()
{
  return &type metadata for CardState.ChangedPropertyNotificationInfo;
}

uint64_t sub_100052C6C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  unint64_t v8;
  id v9;
  void *v11;

  v6 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  swift_getKeyPath(&unk_10010CA10);
  KeyPath = swift_getKeyPath(&unk_10010CA40);
  v11 = a2;
  v8 = sub_100052D7C();
  v9 = a2;
  return AttributeContainer.subscript.setter(&v11, KeyPath, v8);
}

uint64_t sub_100052D08(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *a2;
  v4 = *a1;
  v5 = v2;
  sub_100035CA4(&qword_10016BA58);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v5, &v4) & 1;
}

void sub_100052D60()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

unint64_t sub_100052D7C()
{
  unint64_t result;

  result = qword_10016BA50;
  if (!qword_10016BA50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_10016BA50);
  }
  return result;
}

void sub_100052DC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_100052D7C();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_100052DE4()
{
  return 8;
}

uint64_t sub_100052DF0(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_100052DF8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_100052E08()
{
  uint64_t v0;

  v0 = sub_100035CA4(&qword_10016BA58);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_100052E4C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_100052E58(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for EnhancedLoggingDiagnosticInfoViewController();
  objc_msgSendSuper2(&v9, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "navigationBar");

    objc_msgSend(v5, "setBackgroundImage:forBarMetrics:", 0, 0);
  }
  v6 = objc_msgSend(v1, "navigationController");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "navigationBar");

    objc_msgSend(v8, "setShadowImage:", 0);
  }
}

void sub_100052F8C()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  DARootViewController *v9;
  NSString v10;
  SEL v11;
  id v12;
  int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  DARootViewController *v21;
  DARootViewController *v22;
  const char *v23;
  DARootViewController *v24;
  id v25;
  int v26;
  id v27;
  id v28;
  id v29;
  id v30;
  NSString v31;
  SEL v32;
  id v33;
  int v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  DARootViewController *v41;
  DARootViewController *v42;
  unint64_t v43;
  SEL v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  DARootViewController *v53;
  DARootViewController *v54;
  uint64_t v55;
  DARootViewController *v56;
  DARootViewController *v57;
  const char *v58;
  DARootViewController *v59;
  id v60;
  int v61;
  id v62;
  id v63;
  id v64;
  id v65;
  SEL v66;
  id v67;
  int v68;
  id v69;
  id v70;
  id v71;
  id v72;
  NSString v73;
  SEL v74;
  id v75;
  int v76;
  id v77;
  id v78;
  id v79;
  id v80;
  DARootViewController *v81;
  DARootViewController *v82;
  SEL v83;
  id v84;
  int v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  _QWORD v91[4];

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = (void *)objc_opt_self(UIColor);
    v4 = objc_msgSend(v3, "systemBackgroundColor");
    objc_msgSend(v2, "setBackgroundColor:", v4);

    v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView];
    v6 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v5, "setFont:", v6);

    objc_msgSend(v5, "setTextAlignment:", 0);
    objc_msgSend(v5, "setEditable:", 0);
    objc_msgSend(v5, "setSelectable:", 0);
    v7 = objc_msgSend(v3, "systemBackgroundColor");
    objc_msgSend(v5, "setBackgroundColor:", v7);

    objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v5, "setScrollEnabled:", 0);
    objc_msgSend(v5, "setScrollEnabled:", 1);
    v8 = (void *)objc_opt_self(ELSWhitelist);
    v9 = *(DARootViewController **)&v0[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logName
                                     + 8];
    swift_bridgeObjectRetain(v9);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9, v11, v12, v13, v14, v15, v16, v17);
    v18 = objc_msgSend(v8, "findEntryForParameterName:", v10);

    if (v18)
    {
      v19 = objc_msgSend(v18, "descriptionLocalizationKey");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v20, v22);
      v24 = (DARootViewController *)v23;
      swift_bridgeObjectRelease(v22, v23, v25, v26, v27, v28, v29, v30);
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v24, v32, v33, v34, v35, v36, v37, v38);
      objc_msgSend(v5, "setText:", v31);

      v39 = objc_msgSend(v18, "parameterName");
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v42 = v41;

      v91[2] = v40;
      v91[3] = v42;
      v91[0] = 0x616C7562656ELL;
      v91[1] = 0xE600000000000000;
      v43 = sub_10003F14C();
      LOBYTE(v39) = StringProtocol.contains<A>(_:)(v91, &type metadata for String, &type metadata for String, v43, v43);
      swift_bridgeObjectRelease(v42, v44, v45, v46, v47, v48, v49, v50);
      if ((v39 & 1) != 0)
      {
        v51 = objc_msgSend(v18, "descriptionLocalizationKey");
        v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
        v54 = v53;

        v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-Nebula"));
        v57 = v56;
        sub_10003FFA0(v55, v56, (uint64_t)&_swiftEmptyArrayStorage, v52, v54);
        v59 = (DARootViewController *)v58;
        swift_bridgeObjectRelease(v54, v58, v60, v61, v62, v63, v64, v65);
        swift_bridgeObjectRelease(v57, v66, v67, v68, v69, v70, v71, v72);
        v73 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v59, v74, v75, v76, v77, v78, v79, v80);
        objc_msgSend(v5, "setText:", v73);

      }
    }
    else
    {
      sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000024, (void *)0x8000000100113CB0);
      v82 = v81;
      v90 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v82, v83, v84, v85, v86, v87, v88, v89);
      objc_msgSend(v5, "setText:", v90);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100053394()
{
  char *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView]);

  }
  else
  {
    __break(1u);
  }
}

void sub_1000533EC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  SEL v36;
  id v37;
  int v38;
  id v39;
  id v40;
  id v41;
  id v42;
  Class isa;

  v1 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v2 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10010CA80;
  v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView];
  v4 = objc_msgSend(v3, "topAnchor");
  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_8;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "safeAreaLayoutGuide");

  v8 = objc_msgSend(v7, "topAnchor");
  v9 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v8, 5.0);

  *(_QWORD *)(v2 + 32) = v9;
  v10 = objc_msgSend(v3, "leadingAnchor");
  v11 = objc_msgSend(v0, "view");
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "safeAreaLayoutGuide");

  v14 = objc_msgSend(v13, "leadingAnchor");
  v15 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v14, 10.0);

  *(_QWORD *)(v2 + 40) = v15;
  v16 = objc_msgSend(v3, "trailingAnchor");
  v17 = objc_msgSend(v0, "view");
  if (!v17)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, "safeAreaLayoutGuide");

  v20 = objc_msgSend(v19, "trailingAnchor");
  v21 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v20, -10.0);

  *(_QWORD *)(v2 + 48) = v21;
  v22 = objc_msgSend(v3, "centerXAnchor");
  v23 = objc_msgSend(v0, "view");
  if (!v23)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "safeAreaLayoutGuide");

  v26 = objc_msgSend(v25, "centerXAnchor");
  v27 = objc_msgSend(v22, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v2 + 56) = v27;
  v28 = objc_msgSend(v3, "bottomAnchor");
  v29 = objc_msgSend(v0, "view");
  if (v29)
  {
    v30 = v29;
    v31 = (void *)objc_opt_self(NSLayoutConstraint);
    v32 = objc_msgSend(v30, "safeAreaLayoutGuide");

    v33 = objc_msgSend(v32, "bottomAnchor");
    v34 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v33, -5.0);

    *(_QWORD *)(v2 + 64) = v34;
    specialized Array._endMutation()(v35);
    sub_100053B64();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease((DARootViewController *)v2, v36, v37, v38, v39, v40, v41, v42);
    objc_msgSend(v31, "activateConstraints:", isa);

    return;
  }
LABEL_11:
  __break(1u);
}

id sub_1000537D4(uint64_t a1, DARootViewController *a2, void *a3)
{
  char *v3;
  char *v6;
  char *v7;
  uint64_t v8;
  id v9;
  char *v10;
  NSString v11;
  SEL v12;
  id v13;
  int v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  objc_super v21;

  v6 = &v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logType];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0xE000000000000000;
  v7 = &v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logName];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0xE000000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_fontSizeTitle] = 0x403E000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_titlePadding] = 0x4044000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_sidePadding] = 0x4024000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_topBottomPadding] = 0x4014000000000000;
  v8 = OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView;
  v9 = objc_allocWithZone((Class)UITextView);
  v10 = v3;
  *(_QWORD *)&v3[v8] = objc_msgSend(v9, "init");

  if (a2)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2, v12, v13, v14, v15, v16, v17, v18);
  }
  else
  {
    v11 = 0;
  }
  v21.receiver = v10;
  v21.super_class = (Class)type metadata accessor for EnhancedLoggingDiagnosticInfoViewController();
  v19 = objc_msgSendSuper2(&v21, "initWithNibName:bundle:", v11, a3);

  return v19;
}

id sub_100053964(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  objc_super v10;

  v3 = &v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logType];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0xE000000000000000;
  v4 = &v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logName];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0xE000000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_fontSizeTitle] = 0x403E000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_titlePadding] = 0x4044000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_sidePadding] = 0x4024000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_topBottomPadding] = 0x4014000000000000;
  v5 = OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView;
  v6 = objc_allocWithZone((Class)UITextView);
  v7 = v1;
  *(_QWORD *)&v1[v5] = objc_msgSend(v6, "init");

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for EnhancedLoggingDiagnosticInfoViewController();
  v8 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);

  return v8;
}

void sub_100053A80()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logType
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logName
                                      + 8));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView));
}

id sub_100053AC4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedLoggingDiagnosticInfoViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EnhancedLoggingDiagnosticInfoViewController()
{
  return objc_opt_self(_TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController);
}

unint64_t sub_100053B64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016B060;
  if (!qword_10016B060)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10016B060);
  }
  return result;
}

void sub_100053BA0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  DARootViewController *v11;
  Class isa;
  SEL v13;
  id v14;
  int v15;
  id v16;
  id v17;
  id v18;
  id v19;
  objc_super v20;

  v1 = v0;
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for DiagnosticsCompletedNavigationController();
  objc_msgSendSuper2(&v20, "viewDidLoad");
  objc_msgSend(v0, "setModalPresentationStyle:", 2);
  v2 = objc_msgSend(v0, "navigationBar");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v2, "setBackgroundImage:forBarMetrics:", v3, 0);

  v4 = objc_msgSend(v1, "navigationBar");
  v5 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v4, "setShadowImage:", v5);

  v6 = objc_msgSend(v1, "navigationBar");
  objc_msgSend(v6, "setAlpha:", 0.0);

  v7 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_10010C200;
  v9 = objc_allocWithZone((Class)type metadata accessor for DiagnosticsCompletedViewController());
  v10 = sub_1000CE940();
  *(_QWORD *)(v8 + 32) = v10;
  specialized Array._endMutation()(v10);
  v11 = (DARootViewController *)v8;
  sub_100053F50();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11, v13, v14, v15, v16, v17, v18, v19);
  objc_msgSend(v1, "setViewControllers:", isa);

}

id sub_100053F00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagnosticsCompletedNavigationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DiagnosticsCompletedNavigationController()
{
  return objc_opt_self(_TtC11Diagnostics40DiagnosticsCompletedNavigationController);
}

unint64_t sub_100053F50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C200;
  if (!qword_10016C200)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10016C200);
  }
  return result;
}

uint64_t sub_100053F8C()
{
  uint64_t updated;
  uint64_t result;

  updated = type metadata accessor for CardFilterUpdateManager();
  result = swift_allocObject(updated, 33, 7);
  *(_QWORD *)(result + 16) = &_swiftEmptySetSingleton;
  *(_QWORD *)(result + 24) = &_swiftEmptySetSingleton;
  *(_BYTE *)(result + 32) = 1;
  qword_100172340 = result;
  return result;
}

uint64_t sub_100053FC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(v1);
  return swift_deallocClassInstance(v0, 33, 7);
}

uint64_t type metadata accessor for CardFilterUpdateManager()
{
  return objc_opt_self(_TtC11Diagnostics23CardFilterUpdateManager);
}

uint64_t destroy for CardFilter(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t _s11Diagnostics10CardFilterVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for CardFilter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

__n128 initializeWithTake for CardFilter(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CardFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardFilter(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardFilter()
{
  return &type metadata for CardFilter;
}

void sub_1000541D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t isEscapingClosureAtFileLocation;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  Class v41;
  NSObject *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::Int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  Swift::Int v57;
  Swift::Int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  Class v70;
  NSObject *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  Class v84;
  NSObject *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  Class v107;
  NSObject *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  Swift::Int v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  unint64_t v130;
  Class v131;
  NSObject *v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  Class v145;
  NSObject *v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  char v152;
  int v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  char v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  Class v171;
  NSObject *v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  Class isa;
  NSObject *v188;
  uint64_t v189;
  void *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  id v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  _QWORD *v202;
  uint64_t v203;
  unint64_t v204;
  Class v205;
  NSObject *v206;
  uint64_t v207;
  void *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  _QWORD *v220;
  uint64_t v221;
  unint64_t v222;
  Class v223;
  NSObject *v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  id v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  _QWORD *v239;
  uint64_t v240;
  unint64_t v241;
  Class v242;
  NSObject *v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  char v247;
  uint64_t v248;
  char v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  id v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  _QWORD *v259;
  _QWORD *v260;
  uint64_t v261;
  unint64_t v262;
  Class v263;
  NSObject *v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  id v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  _QWORD *v277;
  _QWORD *v278;
  uint64_t v279;
  unint64_t v280;
  Class v281;
  NSObject *v282;
  uint64_t v283;
  void *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  id v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  _QWORD *v299;
  _QWORD *v300;
  uint64_t v301;
  unint64_t v302;
  Class v303;
  NSObject *v304;
  uint64_t v305;
  void *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t *v310;
  uint64_t v311;
  BOOL v312;
  uint64_t v313;
  uint64_t v314;
  id v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  unint64_t v320;
  unint64_t v321;
  _QWORD *v322;
  uint64_t v323;
  Swift::Int v324;
  uint64_t v325;
  unint64_t v326;
  unint64_t v327;
  uint64_t v328;
  unint64_t v329;
  BOOL v330;
  uint64_t v331;
  int v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char v340;
  uint64_t v341;
  char v342;
  uint64_t v343;
  char v344;
  uint64_t v345;
  unint64_t v347;
  int64_t v349;
  uint64_t v350;
  uint64_t v353;
  uint64_t v354;
  uint64_t v356;
  __int128 aBlock;
  uint64_t (*v358)(uint64_t);
  void *v359;
  uint64_t (*v360)();
  uint64_t v361;
  _QWORD v362[6];

  v347 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = __CocoaSet.makeIterator()(v6);
    v8 = type metadata accessor for CardState();
    v9 = sub_1000571B4();
    v10 = Set.Iterator.init(_cocoa:)(v362, v7, v8, v9);
    v11 = v362[0];
    v350 = v362[1];
    v12 = v362[2];
    v13 = v362[3];
    v14 = v362[4];
  }
  else
  {
    v15 = -1 << *(_BYTE *)(a1 + 32);
    v350 = a1 + 56;
    v12 = ~v15;
    v16 = -v15;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v14 = v17 & *(_QWORD *)(a1 + 56);
    v10 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v13 = 0;
    v11 = (uint64_t)v10;
  }
  v349 = (unint64_t)(v12 + 64) >> 6;
  v18 = &OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton;
  v353 = v11;
  while (1)
  {
    isEscapingClosureAtFileLocation = v13;
    if (v11 < 0)
      break;
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v13 << 6);
    }
    else
    {
      v27 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
LABEL_294:
        __break(1u);
LABEL_295:
        __break(1u);
LABEL_296:
        __break(1u);
LABEL_297:
        __break(1u);
LABEL_298:
        __break(1u);
LABEL_299:
        __break(1u);
LABEL_300:
        __break(1u);
LABEL_301:
        __break(1u);
        goto LABEL_302;
      }
      if (v27 >= v349)
        goto LABEL_268;
      v28 = *(_QWORD *)(v350 + 8 * v27);
      ++v13;
      if (!v28)
      {
        v13 = isEscapingClosureAtFileLocation + 2;
        if (isEscapingClosureAtFileLocation + 2 >= v349)
          goto LABEL_268;
        v28 = *(_QWORD *)(v350 + 8 * v13);
        if (!v28)
        {
          v13 = isEscapingClosureAtFileLocation + 3;
          if (isEscapingClosureAtFileLocation + 3 >= v349)
            goto LABEL_268;
          v28 = *(_QWORD *)(v350 + 8 * v13);
          if (!v28)
          {
            v13 = isEscapingClosureAtFileLocation + 4;
            if (isEscapingClosureAtFileLocation + 4 >= v349)
              goto LABEL_268;
            v28 = *(_QWORD *)(v350 + 8 * v13);
            if (!v28)
            {
              v29 = isEscapingClosureAtFileLocation + 5;
              do
              {
                if (v349 == v29)
                  goto LABEL_268;
                v28 = *(_QWORD *)(v350 + 8 * v29++);
              }
              while (!v28);
              v13 = v29 - 1;
            }
          }
        }
      }
      v14 = (v28 - 1) & v28;
      v21 = __clz(__rbit64(v28)) + (v13 << 6);
    }
    v5 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v21);
    swift_retain(v5);
    if (!v5)
      goto LABEL_268;
LABEL_40:
    if ((a4 & 1) != 0)
    {
      v30 = *(unsigned __int8 *)(v5 + 16);
      *(_BYTE *)(v5 + 16) = 0;
      if (v30 != 1)
        goto LABEL_54;
      v31 = *(_QWORD *)(v5 + 80);
      if ((v31 & 1) == 0)
        *(_QWORD *)(v5 + 80) = v31 | 1;
      if ((*(_BYTE *)(v5 + 88) & 1) == 0)
      {
        if ((byte_10016B780 & 1) != 0)
        {
LABEL_51:
          if (qword_10016A640 != -1)
            swift_once(&qword_10016A640, sub_1000508C4);
          v42 = qword_10016B790;
          v43 = swift_allocObject(&unk_100136E40, 32, 7);
          *(_QWORD *)(v43 + 16) = sub_10005232C;
          *(_QWORD *)(v43 + 24) = v5;
          v360 = sub_100052C38;
          v361 = v43;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v358 = sub_100048E58;
          v359 = &unk_100136E58;
          v44 = _Block_copy(&aBlock);
          v45 = v361;
          swift_retain(v5);
          swift_retain(v43);
          swift_release(v45);
          dispatch_sync(v42, v44);
          _Block_release(v44);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v43, "", 87, 259, 42, 1);
          swift_release(v5);
          swift_release(v43);
          if ((isEscapingClosureAtFileLocation & 1) != 0)
            goto LABEL_295;
LABEL_54:
          v46 = *(_BYTE *)(v5 + 18);
          *(_BYTE *)(v5 + 18) = 0;
          if ((v46 & 1) == 0)
            goto LABEL_93;
          v47 = *(_QWORD *)(v5 + 80);
          if ((v47 & 2) == 0)
            *(_QWORD *)(v5 + 80) = v47 | 2;
          if ((*(_BYTE *)(v5 + 88) & 1) != 0)
          {
            if (!byte_10016B780)
              goto LABEL_93;
          }
          else
          {
            if ((byte_10016B780 & 1) != 0)
            {
LABEL_90:
              if (qword_10016A640 != -1)
                swift_once(&qword_10016A640, sub_1000508C4);
              v85 = qword_10016B790;
              v86 = swift_allocObject(&unk_100136DF0, 32, 7);
              *(_QWORD *)(v86 + 16) = sub_10005232C;
              *(_QWORD *)(v86 + 24) = v5;
              v360 = sub_100052C38;
              v361 = v86;
              *(_QWORD *)&aBlock = _NSConcreteStackBlock;
              *((_QWORD *)&aBlock + 1) = 1107296256;
              v358 = sub_100048E58;
              v359 = &unk_100136E08;
              v87 = _Block_copy(&aBlock);
              v88 = v361;
              swift_retain(v5);
              swift_retain(v86);
              swift_release(v88);
              dispatch_sync(v85, v87);
              _Block_release(v87);
              isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v86, "", 87, 259, 42, 1);
              swift_release(v5);
              swift_release(v86);
              if ((isEscapingClosureAtFileLocation & 1) != 0)
                goto LABEL_296;
LABEL_93:
              v89 = *(_BYTE *)(v5 + 17);
              *(_BYTE *)(v5 + 17) = 1;
              if ((v89 & 1) != 0)
                goto LABEL_11;
              v90 = *(_QWORD *)(v5 + 80);
              if ((v90 & 4) == 0)
              {
                *(_QWORD *)(v5 + 80) = v90 | 4;
                v90 = 1;
              }
              if ((*(_BYTE *)(v5 + 88) & 1) != 0)
              {
                if ((byte_10016B780 & 1) == 0)
                  goto LABEL_11;
              }
              else
              {
                if (v90)
                  v91 = byte_10016B780;
                else
                  v91 = 1;
                if ((v91 & 1) != 0)
                {
                  if ((byte_10016B780 & 1) == 0)
                    goto LABEL_11;
LABEL_206:
                  if (qword_10016A640 != -1)
                    swift_once(&qword_10016A640, sub_1000508C4);
                  v188 = qword_10016B790;
                  v189 = swift_allocObject(&unk_100136DA0, 32, 7);
                  *(_QWORD *)(v189 + 16) = sub_10005232C;
                  *(_QWORD *)(v189 + 24) = v5;
                  v360 = sub_100052C38;
                  v361 = v189;
                  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                  *((_QWORD *)&aBlock + 1) = 1107296256;
                  v358 = sub_100048E58;
                  v359 = &unk_100136DB8;
                  v190 = _Block_copy(&aBlock);
                  v191 = v361;
                  swift_retain(v5);
                  swift_retain(v189);
                  swift_release(v191);
                  dispatch_sync(v188, v190);
                  _Block_release(v190);
                  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v189, "", 87, 259, 42, 1);
                  swift_release(v5);
                  swift_release(v189);
                  if ((isEscapingClosureAtFileLocation & 1) != 0)
                    goto LABEL_297;
                  goto LABEL_11;
                }
                v178 = type metadata accessor for CardState();
                swift_allocObject(v178, 89, 7);
                v179 = swift_retain(v5);
                v180 = sub_100050A84(v179);
                v181 = *(_QWORD *)(v5 + 80);
                *(_QWORD *)(v5 + 80) = 0;
                v182 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
                if (qword_10016A630 != -1)
                  swift_once(&qword_10016A630, sub_1000502E0);
                v183 = qword_100172338;
                v184 = sub_100035CA4((uint64_t *)&unk_10016BA20);
                v185 = swift_allocObject(v184, 104, 7);
                *(_OWORD *)(v185 + 16) = xmmword_10010BE30;
                strcpy((char *)&aBlock, "changeInfoKey");
                HIWORD(aBlock) = -4864;
                AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
                *(_QWORD *)(v185 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
                *(_QWORD *)(v185 + 72) = v180;
                *(_QWORD *)(v185 + 80) = v181;
                swift_retain(v180);
                v186 = sub_10006DCBC(v185);
                isa = Dictionary._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease(v186);
                objc_msgSend(v182, "postNotificationName:object:userInfo:", v183, v5, isa);
                swift_release(v180);

                v11 = v353;
                if ((byte_10016B780 & 1) == 0)
                  goto LABEL_11;
              }
              if (!*(_QWORD *)(v5 + 80))
                goto LABEL_11;
              goto LABEL_206;
            }
            v75 = type metadata accessor for CardState();
            swift_allocObject(v75, 89, 7);
            v76 = swift_retain(v5);
            v77 = sub_100050A84(v76);
            v78 = *(_QWORD *)(v5 + 80);
            *(_QWORD *)(v5 + 80) = 0;
            v79 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
            if (qword_10016A630 != -1)
              swift_once(&qword_10016A630, sub_1000502E0);
            v80 = qword_100172338;
            v81 = sub_100035CA4((uint64_t *)&unk_10016BA20);
            v82 = swift_allocObject(v81, 104, 7);
            *(_OWORD *)(v82 + 16) = xmmword_10010BE30;
            strcpy((char *)&aBlock, "changeInfoKey");
            HIWORD(aBlock) = -4864;
            AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
            *(_QWORD *)(v82 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
            *(_QWORD *)(v82 + 72) = v77;
            *(_QWORD *)(v82 + 80) = v78;
            swift_retain(v77);
            v83 = sub_10006DCBC(v82);
            v84 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v83);
            objc_msgSend(v79, "postNotificationName:object:userInfo:", v80, v5, v84);
            swift_release(v77);

            v11 = v353;
            if ((byte_10016B780 & 1) == 0)
              goto LABEL_93;
          }
          if (!*(_QWORD *)(v5 + 80))
            goto LABEL_93;
          goto LABEL_90;
        }
        v32 = type metadata accessor for CardState();
        swift_allocObject(v32, 89, 7);
        v33 = swift_retain(v5);
        v34 = sub_100050A84(v33);
        v35 = *(_QWORD *)(v5 + 80);
        *(_QWORD *)(v5 + 80) = 0;
        v36 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_10016A630 != -1)
          swift_once(&qword_10016A630, sub_1000502E0);
        v37 = qword_100172338;
        v38 = sub_100035CA4((uint64_t *)&unk_10016BA20);
        v39 = swift_allocObject(v38, 104, 7);
        *(_OWORD *)(v39 + 16) = xmmword_10010BE30;
        strcpy((char *)&aBlock, "changeInfoKey");
        HIWORD(aBlock) = -4864;
        AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
        *(_QWORD *)(v39 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
        *(_QWORD *)(v39 + 72) = v34;
        *(_QWORD *)(v39 + 80) = v35;
        swift_retain(v34);
        v40 = sub_10006DCBC(v39);
        v41 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v40);
        objc_msgSend(v36, "postNotificationName:object:userInfo:", v37, v5, v41);
        swift_release(v34);

        v11 = v353;
      }
      if (byte_10016B780 != 1 || !*(_QWORD *)(v5 + 80))
        goto LABEL_54;
      goto LABEL_51;
    }
    if (!*(_QWORD *)(a2 + 16) && !*(_QWORD *)(a3 + 16))
    {
      v160 = *(unsigned __int8 *)(v5 + 16);
      *(_BYTE *)(v5 + 16) = 0;
      if (v160 == 1)
      {
        v161 = *(_QWORD *)(v5 + 80);
        if ((v161 & 1) == 0)
          *(_QWORD *)(v5 + 80) = v161 | 1;
        if ((*(_BYTE *)(v5 + 88) & 1) != 0)
        {
LABEL_191:
          if (byte_10016B780 == 1 && *(_QWORD *)(v5 + 80))
            goto LABEL_193;
        }
        else
        {
          if ((byte_10016B780 & 1) == 0)
          {
            v162 = type metadata accessor for CardState();
            swift_allocObject(v162, 89, 7);
            v163 = swift_retain(v5);
            v164 = sub_100050A84(v163);
            v165 = *(_QWORD *)(v5 + 80);
            *(_QWORD *)(v5 + 80) = 0;
            v166 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
            if (qword_10016A630 != -1)
              swift_once(&qword_10016A630, sub_1000502E0);
            v167 = qword_100172338;
            v168 = sub_100035CA4((uint64_t *)&unk_10016BA20);
            v169 = swift_allocObject(v168, 104, 7);
            *(_OWORD *)(v169 + 16) = xmmword_10010BE30;
            strcpy((char *)&aBlock, "changeInfoKey");
            HIWORD(aBlock) = -4864;
            AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
            *(_QWORD *)(v169 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
            *(_QWORD *)(v169 + 72) = v164;
            *(_QWORD *)(v169 + 80) = v165;
            swift_retain(v164);
            v170 = sub_10006DCBC(v169);
            v171 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v170);
            objc_msgSend(v166, "postNotificationName:object:userInfo:", v167, v5, v171);
            swift_release(v164);

            v11 = v353;
            goto LABEL_191;
          }
LABEL_193:
          if (qword_10016A640 != -1)
            swift_once(&qword_10016A640, sub_1000508C4);
          v172 = qword_10016B790;
          v173 = swift_allocObject(&unk_100136D50, 32, 7);
          *(_QWORD *)(v173 + 16) = sub_10005232C;
          *(_QWORD *)(v173 + 24) = v5;
          v360 = sub_100052C38;
          v361 = v173;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v358 = sub_100048E58;
          v359 = &unk_100136D68;
          v174 = _Block_copy(&aBlock);
          v175 = v361;
          swift_retain(v5);
          swift_retain(v173);
          swift_release(v175);
          dispatch_sync(v172, v174);
          _Block_release(v174);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v173, "", 87, 259, 42, 1);
          swift_release(v5);
          swift_release(v173);
          if ((isEscapingClosureAtFileLocation & 1) != 0)
            goto LABEL_349;
        }
      }
      v176 = *(_BYTE *)(v5 + 18);
      *(_BYTE *)(v5 + 18) = 1;
      if ((v176 & 1) == 0)
      {
        v177 = *(_QWORD *)(v5 + 80);
        if ((v177 & 2) == 0)
          *(_QWORD *)(v5 + 80) = v177 | 2;
        if ((*(_BYTE *)(v5 + 88) & 1) != 0)
        {
          if (!byte_10016B780)
            goto LABEL_240;
LABEL_236:
          if (!*(_QWORD *)(v5 + 80))
            goto LABEL_240;
LABEL_237:
          if (qword_10016A640 != -1)
            swift_once(&qword_10016A640, sub_1000508C4);
          v243 = qword_10016B790;
          v244 = swift_allocObject(&unk_100136D00, 32, 7);
          *(_QWORD *)(v244 + 16) = sub_10005232C;
          *(_QWORD *)(v244 + 24) = v5;
          v360 = sub_100052C38;
          v361 = v244;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v358 = sub_100048E58;
          v359 = &unk_100136D18;
          v245 = _Block_copy(&aBlock);
          v246 = v361;
          swift_retain(v5);
          swift_retain(v244);
          swift_release(v246);
          dispatch_sync(v243, v245);
          _Block_release(v245);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v244, "", 87, 259, 42, 1);
          swift_release(v5);
          swift_release(v244);
          if ((isEscapingClosureAtFileLocation & 1) != 0)
            goto LABEL_350;
        }
        else
        {
          if ((byte_10016B780 & 1) != 0)
            goto LABEL_237;
          v229 = type metadata accessor for CardState();
          swift_allocObject(v229, 89, 7);
          v230 = swift_retain(v5);
          v231 = sub_100050A84(v230);
          v232 = *(_QWORD *)(v5 + 80);
          *(_QWORD *)(v5 + 80) = 0;
          v233 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
          if (qword_10016A630 != -1)
            swift_once(&qword_10016A630, sub_1000502E0);
          v234 = qword_100172338;
          v235 = sub_100035CA4((uint64_t *)&unk_10016BA20);
          v236 = swift_allocObject(v235, 104, 7);
          v237 = sub_1000E5EA0(v236, 1);
          v239 = v238;
          strcpy((char *)&aBlock, "changeInfoKey");
          HIWORD(aBlock) = -4864;
          AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
          v239[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
          v239[5] = v231;
          v239[6] = v232;
          v240 = Int.id.getter(v237);
          swift_retain(v231);
          v241 = sub_10006DCBC(v240);
          v242 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v241);
          objc_msgSend(v233, "postNotificationName:object:userInfo:", v234, v5, v242);
          swift_release(v231);

          v11 = v353;
          if ((byte_10016B780 & 1) != 0)
            goto LABEL_236;
        }
      }
LABEL_240:
      v247 = *(_BYTE *)(v5 + 17);
      *(_BYTE *)(v5 + 17) = 0;
      if ((v247 & 1) == 0)
        goto LABEL_11;
      v248 = *(_QWORD *)(v5 + 80);
      if ((v248 & 4) == 0)
      {
        *(_QWORD *)(v5 + 80) = v248 | 4;
        v248 = 1;
      }
      if ((*(_BYTE *)(v5 + 88) & 1) != 0)
      {
        if ((byte_10016B780 & 1) == 0)
          goto LABEL_11;
        goto LABEL_263;
      }
      if (v248)
        v249 = byte_10016B780;
      else
        v249 = 1;
      if ((v249 & 1) != 0)
      {
        if ((byte_10016B780 & 1) == 0)
          goto LABEL_11;
      }
      else
      {
        v268 = type metadata accessor for CardState();
        swift_allocObject(v268, 89, 7);
        v269 = swift_retain(v5);
        v270 = sub_100050A84(v269);
        v271 = *(_QWORD *)(v5 + 80);
        *(_QWORD *)(v5 + 80) = 0;
        v272 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_10016A630 != -1)
          swift_once(&qword_10016A630, sub_1000502E0);
        v273 = qword_100172338;
        v274 = sub_100035CA4((uint64_t *)&unk_10016BA20);
        v275 = swift_allocObject(v274, 104, 7);
        v276 = sub_1000E5EA0(v275, 1);
        v278 = v277;
        strcpy((char *)&aBlock, "changeInfoKey");
        HIWORD(aBlock) = -4864;
        AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
        v278[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
        v278[5] = v270;
        v278[6] = v271;
        v279 = Int.id.getter(v276);
        swift_retain(v270);
        v280 = sub_10006DCBC(v279);
        v281 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v280);
        objc_msgSend(v272, "postNotificationName:object:userInfo:", v273, v5, v281);
        swift_release(v270);

        v11 = v353;
        if ((byte_10016B780 & 1) == 0)
          goto LABEL_11;
LABEL_263:
        if (!*(_QWORD *)(v5 + 80))
          goto LABEL_11;
      }
      if (qword_10016A640 != -1)
        swift_once(&qword_10016A640, sub_1000508C4);
      v282 = qword_10016B790;
      v283 = swift_allocObject(&unk_100136CB0, 32, 7);
      *(_QWORD *)(v283 + 16) = sub_10005232C;
      *(_QWORD *)(v283 + 24) = v5;
      v360 = sub_100052C38;
      v361 = v283;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v358 = sub_100048E58;
      v359 = &unk_100136CC8;
      v284 = _Block_copy(&aBlock);
      v285 = v361;
      swift_retain(v5);
      swift_retain(v283);
      swift_release(v285);
      dispatch_sync(v282, v284);
      _Block_release(v284);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v283, "", 87, 259, 42, 1);
      swift_release(v5);
      swift_release(v283);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        goto LABEL_351;
      goto LABEL_11;
    }
    v48 = *(_QWORD *)(v5 + 48);
    swift_bridgeObjectRetain(a3);
    v49 = swift_bridgeObjectRetain(v48);
    v50 = sub_100057ACC(v49, a3);
    swift_bridgeObjectRelease(v48);
    v51 = *(_QWORD *)(v50 + 16);
    swift_release(v50);
    if (v51)
    {
      v52 = *(_QWORD *)(v5 + 48);
      v53 = *(_QWORD *)(v52 + 16);
      if (v53)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v5 + 48));
        v54 = (unint64_t *)(v52 + 40);
        while (1)
        {
          v55 = *(v54 - 1);
          v56 = *v54;
          Hasher.init(_seed:)(&aBlock, 0);
          if (v56 >= 9)
          {
            swift_bridgeObjectRetain(v56);
            String.hash(into:)(&aBlock, v55, v56);
          }
          else
          {
            Hasher._combine(_:)(qword_10010CB58[v56]);
            sub_1000582D0(v55, v56);
          }
          v57 = Hasher._finalize()();
          Hasher.init(_seed:)(&aBlock, 0);
          Hasher._combine(_:)(0x10uLL);
          v58 = Hasher._finalize()();
          sub_100058234(v55, v56);
          if (v57 == v58)
            break;
          v54 += 2;
          if (!--v53)
          {
            swift_bridgeObjectRelease(v52);
            goto LABEL_108;
          }
        }
        swift_bridgeObjectRelease(v52);
        v92 = swift_retain(v5);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v92);
        v94 = *(_QWORD *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v93 = *(_QWORD *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v94 >= v93 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v93 > 1, v94 + 1, 1);
        v95 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v94, v5);
        specialized Array._endMutation()(v95);
LABEL_108:
        v18 = &OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton;
      }
      v96 = *(_BYTE *)(v5 + 16);
      *(_BYTE *)(v5 + 16) = 1;
      v11 = v353;
      if ((v96 & 1) != 0)
        goto LABEL_122;
      v97 = *(_QWORD *)(v5 + 80);
      if ((v97 & 1) == 0)
        *(_QWORD *)(v5 + 80) = v97 | 1;
      if ((*(_BYTE *)(v5 + 88) & 1) != 0)
      {
LABEL_117:
        if (byte_10016B780 != 1 || !*(_QWORD *)(v5 + 80))
          goto LABEL_122;
      }
      else if ((byte_10016B780 & 1) == 0)
      {
        v98 = type metadata accessor for CardState();
        swift_allocObject(v98, 89, 7);
        v99 = swift_retain(v5);
        v100 = sub_100050A84(v99);
        v101 = *(_QWORD *)(v5 + 80);
        *(_QWORD *)(v5 + 80) = 0;
        v102 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_10016A630 != -1)
          swift_once(&qword_10016A630, sub_1000502E0);
        v103 = qword_100172338;
        v104 = sub_100035CA4((uint64_t *)&unk_10016BA20);
        v105 = swift_allocObject(v104, 104, 7);
        *(_OWORD *)(v105 + 16) = xmmword_10010BE30;
        strcpy((char *)&aBlock, "changeInfoKey");
        HIWORD(aBlock) = -4864;
        AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
        *(_QWORD *)(v105 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
        *(_QWORD *)(v105 + 72) = v100;
        *(_QWORD *)(v105 + 80) = v101;
        swift_retain(v100);
        v106 = sub_10006DCBC(v105);
        v107 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v106);
        objc_msgSend(v102, "postNotificationName:object:userInfo:", v103, v5, v107);
        swift_release(v100);

        v11 = v353;
        goto LABEL_117;
      }
      if (qword_10016A640 != -1)
        swift_once(&qword_10016A640, sub_1000508C4);
      v108 = qword_10016B790;
      v109 = swift_allocObject(&unk_100136C60, 32, 7);
      *(_QWORD *)(v109 + 16) = sub_10005232C;
      *(_QWORD *)(v109 + 24) = v5;
      v360 = sub_100052C38;
      v361 = v109;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v358 = sub_100048E58;
      v359 = &unk_100136C78;
      v110 = _Block_copy(&aBlock);
      v111 = v361;
      swift_retain(v5);
      swift_retain(v109);
      swift_release(v111);
      dispatch_sync(v108, v110);
      _Block_release(v110);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v109, "", 87, 259, 42, 1);
      swift_release(v5);
      swift_release(v109);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        goto LABEL_300;
      goto LABEL_122;
    }
    v59 = *(unsigned __int8 *)(v5 + 16);
    *(_BYTE *)(v5 + 16) = 0;
    if (v59 != 1)
      goto LABEL_122;
    v60 = *(_QWORD *)(v5 + 80);
    if ((v60 & 1) == 0)
      *(_QWORD *)(v5 + 80) = v60 | 1;
    if ((*(_BYTE *)(v5 + 88) & 1) != 0)
      goto LABEL_79;
    if ((byte_10016B780 & 1) == 0)
    {
      v61 = type metadata accessor for CardState();
      swift_allocObject(v61, 89, 7);
      v62 = swift_retain(v5);
      v63 = sub_100050A84(v62);
      v64 = *(_QWORD *)(v5 + 80);
      *(_QWORD *)(v5 + 80) = 0;
      v65 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_10016A630 != -1)
        swift_once(&qword_10016A630, sub_1000502E0);
      v66 = qword_100172338;
      v67 = sub_100035CA4((uint64_t *)&unk_10016BA20);
      v68 = swift_allocObject(v67, 104, 7);
      *(_OWORD *)(v68 + 16) = xmmword_10010BE30;
      strcpy((char *)&aBlock, "changeInfoKey");
      HIWORD(aBlock) = -4864;
      AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
      *(_QWORD *)(v68 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
      *(_QWORD *)(v68 + 72) = v63;
      *(_QWORD *)(v68 + 80) = v64;
      swift_retain(v63);
      v69 = sub_10006DCBC(v68);
      v70 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v69);
      objc_msgSend(v65, "postNotificationName:object:userInfo:", v66, v5, v70);
      swift_release(v63);

      v11 = v353;
LABEL_79:
      if (byte_10016B780 != 1 || !*(_QWORD *)(v5 + 80))
        goto LABEL_122;
    }
    if (qword_10016A640 != -1)
      swift_once(&qword_10016A640, sub_1000508C4);
    v71 = qword_10016B790;
    v72 = swift_allocObject(&unk_100136C10, 32, 7);
    *(_QWORD *)(v72 + 16) = sub_10005232C;
    *(_QWORD *)(v72 + 24) = v5;
    v360 = sub_100052C38;
    v361 = v72;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v358 = sub_100048E58;
    v359 = &unk_100136C28;
    v73 = _Block_copy(&aBlock);
    v74 = v361;
    swift_retain(v5);
    swift_retain(v72);
    swift_release(v74);
    dispatch_sync(v71, v73);
    _Block_release(v73);
    LOBYTE(v71) = swift_isEscapingClosureAtFileLocation(v72, "", 87, 259, 42, 1);
    swift_release(v5);
    swift_release(v72);
    if ((v71 & 1) != 0)
      goto LABEL_307;
LABEL_122:
    if ((*(_BYTE *)(v5 + 16) & 1) == 0)
    {
      v112 = *(_QWORD *)(v5 + 48);
      swift_bridgeObjectRetain(a2);
      v113 = swift_bridgeObjectRetain(v112);
      v114 = sub_100057ACC(v113, a2);
      swift_bridgeObjectRelease(v112);
      v115 = *(_QWORD *)(v114 + 16);
      swift_release(v114);
      if (!v115)
      {
        v153 = *(unsigned __int8 *)(v5 + 18);
        *(_BYTE *)(v5 + 18) = 0;
        if (v153 == 1)
        {
          v154 = *(_QWORD *)(v5 + 80);
          if ((v154 & 2) == 0)
            *(_QWORD *)(v5 + 80) = v154 | 2;
          sub_100051044();
        }
        goto LABEL_163;
      }
    }
    v116 = *(_BYTE *)(v5 + 18);
    *(_BYTE *)(v5 + 18) = 1;
    if ((v116 & 1) != 0)
      goto LABEL_163;
    v117 = *(_QWORD *)(v5 + 80);
    if ((v117 & 2) == 0)
      *(_QWORD *)(v5 + 80) = v117 | 2;
    if ((*(_BYTE *)(v5 + 88) & 1) != 0)
    {
      if (!byte_10016B780)
        goto LABEL_163;
LABEL_134:
      if (!*(_QWORD *)(v5 + 80))
        goto LABEL_163;
      goto LABEL_135;
    }
    if ((byte_10016B780 & 1) == 0)
    {
      v118 = type metadata accessor for CardState();
      swift_allocObject(v118, 89, 7);
      v119 = swift_retain(v5);
      v120 = sub_100050A84(v119);
      v121 = *(_QWORD *)(v5 + 80);
      *(_QWORD *)(v5 + 80) = 0;
      v122 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_10016A630 != -1)
        swift_once(&qword_10016A630, sub_1000502E0);
      v123 = qword_100172338;
      v124 = sub_100035CA4((uint64_t *)&unk_10016BA20);
      v125 = swift_allocObject(v124, 104, 7);
      v126 = sub_1000E5EA0(v125, 1);
      v128 = v127;
      strcpy((char *)&aBlock, "changeInfoKey");
      HIWORD(aBlock) = -4864;
      AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
      v128[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
      v128[5] = v120;
      v128[6] = v121;
      v129 = Int.id.getter(v126);
      swift_retain(v120);
      v130 = sub_10006DCBC(v129);
      v131 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v130);
      objc_msgSend(v122, "postNotificationName:object:userInfo:", v123, v5, v131);
      swift_release(v120);

      v11 = v353;
      if ((byte_10016B780 & 1) == 0)
        goto LABEL_163;
      goto LABEL_134;
    }
LABEL_135:
    if (qword_10016A640 != -1)
      swift_once(&qword_10016A640, sub_1000508C4);
    v132 = qword_10016B790;
    v133 = swift_allocObject(&unk_100136BC0, 32, 7);
    *(_QWORD *)(v133 + 16) = sub_10005232C;
    *(_QWORD *)(v133 + 24) = v5;
    v360 = sub_100052C38;
    v361 = v133;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v358 = sub_100048E58;
    v359 = &unk_100136BD8;
    v134 = _Block_copy(&aBlock);
    v135 = v361;
    swift_retain(v5);
    swift_retain(v133);
    swift_release(v135);
    dispatch_sync(v132, v134);
    _Block_release(v134);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v133, "", 87, 259, 42, 1);
    swift_release(v5);
    swift_release(v133);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      goto LABEL_298;
LABEL_163:
    if ((*(_BYTE *)(v5 + 16) & 1) == 0 && (*(_BYTE *)(v5 + 18) & 1) == 0)
    {
      v157 = *(_BYTE *)(v5 + 17);
      *(_BYTE *)(v5 + 17) = 1;
      if ((v157 & 1) != 0)
        goto LABEL_11;
      v158 = *(_QWORD *)(v5 + 80);
      if ((v158 & 4) == 0)
      {
        *(_QWORD *)(v5 + 80) = v158 | 4;
        v158 = 1;
      }
      if ((*(_BYTE *)(v5 + 88) & 1) != 0)
      {
        if ((byte_10016B780 & 1) == 0)
          goto LABEL_11;
      }
      else
      {
        if (v158)
          v228 = byte_10016B780;
        else
          v228 = 1;
        if ((v228 & 1) != 0)
        {
          if ((byte_10016B780 & 1) == 0)
            goto LABEL_11;
LABEL_256:
          if (qword_10016A640 != -1)
            swift_once(&qword_10016A640, sub_1000508C4);
          v264 = qword_10016B790;
          v265 = swift_allocObject(&unk_100136B20, 32, 7);
          *(_QWORD *)(v265 + 16) = sub_10005232C;
          *(_QWORD *)(v265 + 24) = v5;
          v360 = sub_100052C38;
          v361 = v265;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v358 = sub_100048E58;
          v359 = &unk_100136B38;
          v266 = _Block_copy(&aBlock);
          v267 = v361;
          swift_retain(v5);
          swift_retain(v265);
          swift_release(v267);
          dispatch_sync(v264, v266);
          _Block_release(v266);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v265, "", 87, 259, 42, 1);
          swift_release(v5);
          swift_release(v265);
          if ((isEscapingClosureAtFileLocation & 1) != 0)
          {
            __break(1u);
            goto LABEL_347;
          }
          goto LABEL_11;
        }
        v250 = type metadata accessor for CardState();
        swift_allocObject(v250, 89, 7);
        v251 = swift_retain(v5);
        v252 = sub_100050A84(v251);
        v253 = *(_QWORD *)(v5 + 80);
        *(_QWORD *)(v5 + 80) = 0;
        v254 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_10016A630 != -1)
          swift_once(&qword_10016A630, sub_1000502E0);
        v255 = qword_100172338;
        v256 = sub_100035CA4((uint64_t *)&unk_10016BA20);
        v257 = swift_allocObject(v256, 104, 7);
        v258 = sub_1000E5EA0(v257, 1);
        v260 = v259;
        strcpy((char *)&aBlock, "changeInfoKey");
        HIWORD(aBlock) = -4864;
        AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
        v260[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
        v260[5] = v252;
        v260[6] = v253;
        v261 = Int.id.getter(v258);
        swift_retain(v252);
        v262 = sub_10006DCBC(v261);
        v263 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v262);
        objc_msgSend(v254, "postNotificationName:object:userInfo:", v255, v5, v263);
        swift_release(v252);

        v11 = v353;
        if ((byte_10016B780 & 1) == 0)
          goto LABEL_11;
      }
      if (!*(_QWORD *)(v5 + 80))
        goto LABEL_11;
      goto LABEL_256;
    }
    v155 = *(unsigned __int8 *)(v5 + 17);
    *(_BYTE *)(v5 + 17) = 0;
    if (v155 != 1)
      goto LABEL_11;
    v156 = *(_QWORD *)(v5 + 80);
    if ((v156 & 4) == 0)
    {
      *(_QWORD *)(v5 + 80) = v156 | 4;
      v156 = 1;
    }
    if ((*(_BYTE *)(v5 + 88) & 1) != 0)
    {
      if ((byte_10016B780 & 1) == 0)
        goto LABEL_11;
LABEL_221:
      if (!*(_QWORD *)(v5 + 80))
        goto LABEL_11;
LABEL_222:
      if (qword_10016A640 != -1)
        swift_once(&qword_10016A640, sub_1000508C4);
      v224 = qword_10016B790;
      v225 = swift_allocObject(&unk_100136B70, 32, 7);
      *(_QWORD *)(v225 + 16) = sub_10005232C;
      *(_QWORD *)(v225 + 24) = v5;
      v360 = sub_100052C38;
      v361 = v225;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v358 = sub_100048E58;
      v359 = &unk_100136B88;
      v226 = _Block_copy(&aBlock);
      v227 = v361;
      swift_retain(v5);
      swift_retain(v225);
      swift_release(v227);
      dispatch_sync(v224, v226);
      _Block_release(v226);
      LOBYTE(v224) = swift_isEscapingClosureAtFileLocation(v225, "", 87, 259, 42, 1);
      swift_release(v5);
      swift_release(v225);
      if ((v224 & 1) == 0)
        goto LABEL_11;
      __break(1u);
LABEL_307:
      __break(1u);
LABEL_308:
      if (v5 < 0)
        isEscapingClosureAtFileLocation = v5;
      else
        isEscapingClosureAtFileLocation = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v286 = _CocoaArrayWrapper.endIndex.getter(isEscapingClosureAtFileLocation);
      if (!v286)
        goto LABEL_312;
LABEL_272:
      if (v286 >= 1)
      {
        v287 = 0;
        isEscapingClosureAtFileLocation = v5 & 0xC000000000000001;
        while (1)
        {
          if (isEscapingClosureAtFileLocation)
          {
            v288 = specialized _ArrayBuffer._getElementSlowPath(_:)(v287, v5);
          }
          else
          {
            v288 = *(_QWORD *)(v5 + 8 * v287 + 32);
            swift_retain(v288);
          }
          v289 = *(_BYTE *)(v288 + 16);
          *(_BYTE *)(v288 + 16) = 0;
          if ((v289 & 1) == 0)
          {
LABEL_274:
            swift_release(v288);
            goto LABEL_275;
          }
          v290 = *(_QWORD *)(v288 + 80);
          if ((v290 & 1) == 0)
            *(_QWORD *)(v288 + 80) = v290 | 1;
          if ((*(_BYTE *)(v288 + 88) & 1) == 0)
          {
            if ((v18[240] & 1) != 0)
              goto LABEL_289;
            v291 = type metadata accessor for CardState();
            swift_allocObject(v291, 89, 7);
            v292 = swift_retain(v288);
            v293 = sub_100050A84(v292);
            v354 = *(_QWORD *)(v288 + 80);
            *(_QWORD *)(v288 + 80) = 0;
            v294 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
            if (qword_10016A630 != -1)
              swift_once(&qword_10016A630, sub_1000502E0);
            v295 = qword_100172338;
            v296 = sub_100035CA4((uint64_t *)&unk_10016BA20);
            v297 = swift_allocObject(v296, 104, 7);
            v298 = sub_1000E5EA0(v297, 1);
            v300 = v299;
            strcpy((char *)&aBlock, "changeInfoKey");
            HIWORD(aBlock) = -4864;
            AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
            v300[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
            v300[5] = v293;
            v300[6] = v354;
            v301 = Int.id.getter(v298);
            swift_retain(v293);
            v302 = sub_10006DCBC(v301);
            v303 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v302);
            objc_msgSend(v294, "postNotificationName:object:userInfo:", v295, v288, v303);
            swift_release(v293);

            v18 = &OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton;
          }
          if (*((_BYTE *)v18 + 1920) != 1 || !*(_QWORD *)(v288 + 80))
            goto LABEL_274;
LABEL_289:
          if (qword_10016A640 != -1)
            swift_once(&qword_10016A640, sub_1000508C4);
          v304 = qword_10016B790;
          v305 = swift_allocObject(&unk_100136A30, 32, 7);
          *(_QWORD *)(v305 + 16) = sub_10005232C;
          *(_QWORD *)(v305 + 24) = v288;
          v360 = sub_10003CDD4;
          v361 = v305;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v358 = sub_100048E58;
          v359 = &unk_100136A48;
          v306 = _Block_copy(&aBlock);
          v307 = v361;
          swift_retain(v288);
          swift_retain(v305);
          swift_release(v307);
          dispatch_sync(v304, v306);
          _Block_release(v306);
          LOBYTE(v304) = swift_isEscapingClosureAtFileLocation(v305, "", 87, 259, 42, 1);
          swift_release_n(v288, 2);
          swift_release(v305);
          v18 = &OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton;
          if ((v304 & 1) != 0)
            goto LABEL_294;
LABEL_275:
          if (v286 == ++v287)
            goto LABEL_312;
        }
      }
LABEL_347:
      __break(1u);
LABEL_348:
      __break(1u);
LABEL_349:
      __break(1u);
LABEL_350:
      __break(1u);
LABEL_351:
      __break(1u);
LABEL_352:
      if (isEscapingClosureAtFileLocation < 0)
        v337 = isEscapingClosureAtFileLocation;
      else
        v337 = isEscapingClosureAtFileLocation & 0xFFFFFFFFFFFFFF8;
      if (!_CocoaArrayWrapper.endIndex.getter(v337))
        goto LABEL_356;
LABEL_332:
      v330 = sub_1000E5EB0(isEscapingClosureAtFileLocation);
      sub_1000E5EBC(0, v330, isEscapingClosureAtFileLocation);
      if (v330)
      {
        v331 = *(_QWORD *)(isEscapingClosureAtFileLocation + 32);
        swift_retain(v331);
      }
      else
      {
        v331 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, isEscapingClosureAtFileLocation);
      }
      swift_bridgeObjectRelease(isEscapingClosureAtFileLocation);
      v332 = *(unsigned __int8 *)(v331 + 16);
      *(_BYTE *)(v331 + 16) = 1;
      if (v332 == 1)
      {
        v333 = v331;
      }
      else
      {
        v336 = *(_QWORD *)(v331 + 80);
        if ((v336 & 1) == 0)
          *(_QWORD *)(v331 + 80) = v336 | 1;
        sub_100051044();
        v333 = v331;
      }
LABEL_337:
      swift_release(v333);
      goto LABEL_338;
    }
    if (v156)
      v159 = byte_10016B780;
    else
      v159 = 1;
    if ((v159 & 1) != 0)
    {
      if ((byte_10016B780 & 1) == 0)
        goto LABEL_11;
      goto LABEL_222;
    }
    v210 = type metadata accessor for CardState();
    swift_allocObject(v210, 89, 7);
    v211 = swift_retain(v5);
    v212 = sub_100050A84(v211);
    v213 = *(_QWORD *)(v5 + 80);
    *(_QWORD *)(v5 + 80) = 0;
    v214 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10016A630 != -1)
      swift_once(&qword_10016A630, sub_1000502E0);
    v215 = qword_100172338;
    v216 = sub_100035CA4((uint64_t *)&unk_10016BA20);
    v217 = swift_allocObject(v216, 104, 7);
    v218 = sub_1000E5EA0(v217, 1);
    v220 = v219;
    strcpy((char *)&aBlock, "changeInfoKey");
    HIWORD(aBlock) = -4864;
    AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
    v220[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
    v220[5] = v212;
    v220[6] = v213;
    v221 = Int.id.getter(v218);
    swift_retain(v212);
    v222 = sub_10006DCBC(v221);
    v223 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v222);
    objc_msgSend(v214, "postNotificationName:object:userInfo:", v215, v5, v223);
    swift_release(v212);

    v11 = v353;
    if ((byte_10016B780 & 1) != 0)
      goto LABEL_221;
LABEL_11:
    if ((*(unsigned __int8 *)(v5 + 32) | 4) == 4)
      goto LABEL_12;
    v25 = *(_BYTE *)(v5 + 18);
    *(_BYTE *)(v5 + 18) = 1;
    if ((v25 & 1) != 0)
      goto LABEL_147;
    v26 = *(_QWORD *)(v5 + 80);
    if ((v26 & 2) == 0)
      *(_QWORD *)(v5 + 80) = v26 | 2;
    if ((*(_BYTE *)(v5 + 88) & 1) != 0)
    {
      if (!byte_10016B780)
        goto LABEL_147;
LABEL_143:
      if (*(_QWORD *)(v5 + 80))
      {
LABEL_144:
        if (qword_10016A640 != -1)
          swift_once(&qword_10016A640, sub_1000508C4);
        v146 = qword_10016B790;
        v147 = swift_allocObject(&unk_100136AD0, 32, 7);
        *(_QWORD *)(v147 + 16) = sub_10005232C;
        *(_QWORD *)(v147 + 24) = v5;
        v360 = sub_100052C38;
        v361 = v147;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v358 = sub_100048E58;
        v359 = &unk_100136AE8;
        v148 = _Block_copy(&aBlock);
        v149 = v361;
        swift_retain(v5);
        swift_retain(v147);
        swift_release(v149);
        dispatch_sync(v146, v148);
        _Block_release(v148);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v147, "", 87, 259, 42, 1);
        swift_release(v5);
        swift_release(v147);
        if ((isEscapingClosureAtFileLocation & 1) != 0)
          goto LABEL_299;
        goto LABEL_147;
      }
      goto LABEL_147;
    }
    if ((byte_10016B780 & 1) != 0)
      goto LABEL_144;
    v136 = type metadata accessor for CardState();
    swift_allocObject(v136, 89, 7);
    v137 = swift_retain(v5);
    v138 = sub_100050A84(v137);
    v139 = *(_QWORD *)(v5 + 80);
    *(_QWORD *)(v5 + 80) = 0;
    v140 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10016A630 != -1)
      swift_once(&qword_10016A630, sub_1000502E0);
    v141 = qword_100172338;
    v142 = sub_100035CA4((uint64_t *)&unk_10016BA20);
    v143 = swift_allocObject(v142, 104, 7);
    *(_OWORD *)(v143 + 16) = xmmword_10010BE30;
    strcpy((char *)&aBlock, "changeInfoKey");
    HIWORD(aBlock) = -4864;
    AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v143 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
    *(_QWORD *)(v143 + 72) = v138;
    *(_QWORD *)(v143 + 80) = v139;
    swift_retain(v138);
    v144 = sub_10006DCBC(v143);
    v145 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v144);
    objc_msgSend(v140, "postNotificationName:object:userInfo:", v141, v5, v145);
    swift_release(v138);

    v11 = v353;
    if ((byte_10016B780 & 1) != 0)
      goto LABEL_143;
LABEL_147:
    v150 = *(_BYTE *)(v5 + 17);
    *(_BYTE *)(v5 + 17) = 0;
    if ((v150 & 1) == 0)
      goto LABEL_12;
    v151 = *(_QWORD *)(v5 + 80);
    if ((v151 & 4) == 0)
    {
      *(_QWORD *)(v5 + 80) = v151 | 4;
      v151 = 1;
    }
    if ((*(_BYTE *)(v5 + 88) & 1) != 0)
    {
      if ((byte_10016B780 & 1) == 0)
        goto LABEL_12;
LABEL_213:
      if (!*(_QWORD *)(v5 + 80))
        goto LABEL_12;
LABEL_214:
      if (qword_10016A640 != -1)
        swift_once(&qword_10016A640, sub_1000508C4);
      v206 = qword_10016B790;
      v207 = swift_allocObject(&unk_100136A80, 32, 7);
      *(_QWORD *)(v207 + 16) = sub_10005232C;
      *(_QWORD *)(v207 + 24) = v5;
      v360 = sub_100052C38;
      v361 = v207;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v358 = sub_100048E58;
      v359 = &unk_100136A98;
      v208 = _Block_copy(&aBlock);
      v209 = v361;
      swift_retain(v5);
      swift_retain(v207);
      swift_release(v209);
      dispatch_sync(v206, v208);
      _Block_release(v208);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v207, "", 87, 259, 42, 1);
      swift_release_n(v5, 2);
      swift_release(v207);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        goto LABEL_301;
    }
    else
    {
      if (v151)
        v152 = byte_10016B780;
      else
        v152 = 1;
      if ((v152 & 1) != 0)
      {
        if ((byte_10016B780 & 1) != 0)
          goto LABEL_214;
      }
      else
      {
        v192 = type metadata accessor for CardState();
        swift_allocObject(v192, 89, 7);
        v193 = swift_retain(v5);
        v194 = sub_100050A84(v193);
        v195 = *(_QWORD *)(v5 + 80);
        *(_QWORD *)(v5 + 80) = 0;
        v196 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_10016A630 != -1)
          swift_once(&qword_10016A630, sub_1000502E0);
        v197 = qword_100172338;
        v198 = sub_100035CA4((uint64_t *)&unk_10016BA20);
        v199 = swift_allocObject(v198, 104, 7);
        v200 = sub_1000E5EA0(v199, 1);
        v202 = v201;
        strcpy((char *)&aBlock, "changeInfoKey");
        HIWORD(aBlock) = -4864;
        AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
        v202[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
        v202[5] = v194;
        v202[6] = v195;
        v203 = Int.id.getter(v200);
        swift_retain(v194);
        v204 = sub_10006DCBC(v203);
        v205 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v204);
        objc_msgSend(v196, "postNotificationName:object:userInfo:", v197, v5, v205);
        swift_release(v194);

        v11 = v353;
        if ((byte_10016B780 & 1) != 0)
          goto LABEL_213;
      }
LABEL_12:
      swift_release(v5);
    }
  }
  v22 = __CocoaSet.Iterator.next()(v10);
  if (v22)
  {
    v23 = v22;
    v356 = v22;
    v24 = type metadata accessor for CardState();
    swift_unknownObjectRetain(v23);
    swift_dynamicCast(&aBlock, &v356, (char *)&type metadata for Swift.AnyObject + 8, v24, 7);
    v5 = aBlock;
    swift_unknownObjectRelease(v23);
    if (v5)
      goto LABEL_40;
  }
LABEL_268:
  sub_100040800(v11);
  v5 = (uint64_t)a5;
  isEscapingClosureAtFileLocation = *a5;
  if (!((unint64_t)*a5 >> 62))
  {
    if (*(uint64_t *)((isEscapingClosureAtFileLocation & 0xFFFFFFFFFFFFF8) + 0x10) <= 1)
      goto LABEL_338;
    goto LABEL_270;
  }
LABEL_302:
  if (isEscapingClosureAtFileLocation < 0)
    v308 = isEscapingClosureAtFileLocation;
  else
    v308 = isEscapingClosureAtFileLocation & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(isEscapingClosureAtFileLocation);
  v309 = _CocoaArrayWrapper.endIndex.getter(v308);
  swift_bridgeObjectRelease(isEscapingClosureAtFileLocation);
  if (v309 <= 1)
    goto LABEL_338;
LABEL_270:
  v5 = *(_QWORD *)v5;
  if ((unint64_t)v5 >> 62)
    goto LABEL_308;
  v286 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v5);
  if (v286)
    goto LABEL_272;
LABEL_312:
  swift_bridgeObjectRelease(v5);
  v310 = a5;
  isEscapingClosureAtFileLocation = *a5;
  if ((unint64_t)*a5 >> 62)
  {
    if (isEscapingClosureAtFileLocation < 0)
      v323 = *a5;
    else
      v323 = isEscapingClosureAtFileLocation & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*a5);
    v311 = _CocoaArrayWrapper.endIndex.getter(v323);
    if (!v311)
      goto LABEL_327;
LABEL_314:
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    sub_1000572A0(0, v311 & ~(v311 >> 63), 0);
    if (v311 < 0)
      goto LABEL_348;
    v312 = sub_1000E5EB0(isEscapingClosureAtFileLocation);
    v313 = 0;
    do
    {
      if (v312)
      {
        v314 = *(_QWORD *)(isEscapingClosureAtFileLocation + 8 * v313 + 32);
        swift_retain(v314);
      }
      else
      {
        v314 = specialized _ArrayBuffer._getElementSlowPath(_:)(v313, isEscapingClosureAtFileLocation);
      }
      v315 = objc_msgSend(*(id *)(v314 + 40), "serialNumber");
      v316 = static String._unconditionallyBridgeFromObjectiveC(_:)(v315);
      v318 = v317;
      swift_release(v314);

      sub_1000571FC();
      v319 = (_QWORD *)aBlock;
      v321 = *(_QWORD *)(aBlock + 16);
      v320 = *(_QWORD *)(aBlock + 24);
      if (v321 >= v320 >> 1)
      {
        sub_1000572A0(v320 > 1, v321 + 1, 1);
        v319 = (_QWORD *)aBlock;
      }
      ++v313;
      v319[2] = v321 + 1;
      v322 = &v319[2 * v321];
      v322[4] = v316;
      v322[5] = v318;
    }
    while (v311 != v313);
    swift_bridgeObjectRelease(isEscapingClosureAtFileLocation);
    v310 = a5;
  }
  else
  {
    v311 = *(_QWORD *)((isEscapingClosureAtFileLocation & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*a5);
    if (v311)
      goto LABEL_314;
LABEL_327:
    swift_bridgeObjectRelease(isEscapingClosureAtFileLocation);
    v319 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain(a3);
  v324 = sub_100057ACC((uint64_t)v319, a3);
  swift_bridgeObjectRelease(v319);
  if (*(_QWORD *)(v324 + 16) != 1)
  {
    v333 = v324;
    goto LABEL_337;
  }
  v325 = sub_1000C4EB0(v324);
  v327 = v326;
  swift_release(v324);
  if (v327 == 9)
  {
LABEL_338:
    if (!v347)
      goto LABEL_357;
  }
  else
  {
    v328 = *v310;
    v329 = swift_bridgeObjectRetain(v328);
    isEscapingClosureAtFileLocation = (uint64_t)sub_100057FE0(v329, v325, v327);
    sub_100058224(v325, v327);
    swift_bridgeObjectRelease(v328);
    if ((unint64_t)isEscapingClosureAtFileLocation >> 62)
      goto LABEL_352;
    if (*(_QWORD *)((isEscapingClosureAtFileLocation & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_332;
LABEL_356:
    swift_bridgeObjectRelease(isEscapingClosureAtFileLocation);
    if (!v347)
    {
LABEL_357:
      v334 = a1;
      if (*(_QWORD *)(a1 + 16) != 1)
        return;
      goto LABEL_358;
    }
  }
  v334 = a1;
  if (a1 < 0)
    v335 = a1;
  else
    v335 = a1 & 0xFFFFFFFFFFFFFF8;
  if (__CocoaSet.count.getter(v335) != 1)
    return;
LABEL_358:
  if ((a4 & 1) == 0)
  {
    v338 = swift_bridgeObjectRetain(v334);
    v339 = sub_1000C4F28(v338);
    swift_bridgeObjectRelease(v334);
    if (v339)
    {
      v340 = *(_BYTE *)(v339 + 16);
      *(_BYTE *)(v339 + 16) = 1;
      if ((v340 & 1) == 0)
      {
        v341 = *(_QWORD *)(v339 + 80);
        if ((v341 & 1) == 0)
          *(_QWORD *)(v339 + 80) = v341 | 1;
        sub_100051044();
      }
      v342 = *(_BYTE *)(v339 + 18);
      *(_BYTE *)(v339 + 18) = 1;
      if ((v342 & 1) == 0)
      {
        v343 = *(_QWORD *)(v339 + 80);
        if ((v343 & 2) == 0)
          *(_QWORD *)(v339 + 80) = v343 | 2;
        sub_100051044();
      }
      v344 = *(_BYTE *)(v339 + 17);
      *(_BYTE *)(v339 + 17) = 0;
      if ((v344 & 1) != 0)
      {
        v345 = *(_QWORD *)(v339 + 80);
        if ((v345 & 4) == 0)
          *(_QWORD *)(v339 + 80) = v345 | 4;
        sub_100051044();
      }
      swift_release(v339);
    }
  }
}

NSString sub_100057180()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100172348 = (uint64_t)result;
  return result;
}

unint64_t sub_1000571B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016BA18;
  if (!qword_10016BA18)
  {
    v1 = type metadata accessor for CardState();
    result = swift_getWitnessTable(&unk_10010C980, v1);
    atomic_store(result, (unint64_t *)&qword_10016BA18);
  }
  return result;
}

uint64_t sub_1000571FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native(*v0);
  *v0 = v1;
  if ((result & 1) == 0)
    return sub_1000572A0(0, *(_QWORD *)(v1 + 16) + 1, 1);
  return result;
}

uint64_t sub_100057244(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1))
    return sub_1000572A0(v2 > 1, result + 1, 1);
  return result;
}

uint64_t sub_10005726C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_100057284(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100057310(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000572A0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000574F0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000572BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100057658(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000572D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000577C0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000572F4(char a1, int64_t a2, char a3)
{
  DARootViewController **v3;
  uint64_t result;

  result = sub_10005792C(a1, a2, a3, *v3);
  *v3 = (DARootViewController *)result;
  return result;
}

uint64_t sub_100057310(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100035CA4(&qword_10016BBB8);
  v11 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v15 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v21);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v8;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000574F0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100035CA4(&qword_10016BA48);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100057658(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  DARootViewController *v11;
  int64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100035CA4(&qword_10016CF80);
    v11 = (DARootViewController *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *(_QWORD *)v11->remoteCardFilter = v8;
    *(_QWORD *)&v11->remoteCardFilter[8] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = &_swiftEmptyArrayStorage;
  }
  v14 = &v11->remoteCardFilter[16];
  v15 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (DARootViewController *)a4 || v14 >= (unsigned __int8 *)&v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= (char *)&v14[16 * v8] || v14 >= (unsigned __int8 *)&v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000577C0(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  DARootViewController *v11;
  int64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100035CA4(&qword_10016BBA0);
    v11 = (DARootViewController *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *(_QWORD *)v11->remoteCardFilter = v8;
    *(_QWORD *)&v11->remoteCardFilter[8] = 2 * (v13 >> 5);
  }
  else
  {
    v11 = &_swiftEmptyArrayStorage;
  }
  v14 = &v11->remoteCardFilter[16];
  v15 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (DARootViewController *)a4 || v14 >= (unsigned __int8 *)&v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= (char *)&v14[32 * v8] || v14 >= (unsigned __int8 *)&v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10005792C(char a1, int64_t a2, char a3, DARootViewController *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  DARootViewController *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)&a4->remoteCardFilter[8];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)a4->remoteCardFilter;
  if (v7 <= v8)
    v9 = *(_QWORD *)a4->remoteCardFilter;
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100035CA4(&qword_10016BBA8);
    v11 = (DARootViewController *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *(_QWORD *)v11->remoteCardFilter = v8;
    *(_QWORD *)&v11->remoteCardFilter[8] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = &_swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)&v11->remoteCardFilter[16];
  v14 = (unint64_t)&a4->remoteCardFilter[16];
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(&v11->remoteCardFilter[16], &a4->remoteCardFilter[16], 40 * v8);
    *(_QWORD *)a4->remoteCardFilter = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    sub_100035CA4(&qword_10016BBB0);
    swift_arrayInitWithCopy(&v11->remoteCardFilter[16]);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

Swift::Int sub_100057ACC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  size_t v8;
  Swift::Int v9;
  void *v10;
  uint64_t v12;

  v3 = isStackAllocationSafe;
  v4 = *(_BYTE *)(a2 + 32);
  v5 = v4 & 0x3F;
  v6 = (1 << v4) + 63;
  v7 = v6 >> 6;
  v8 = 8 * (v6 >> 6);
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v6 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_100057C4C((unint64_t *)((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, v3, a2);
    swift_release(a2);
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v8, -1);
    bzero(v10, v8);
    v9 = sub_100057C4C((unint64_t *)v10, v7, v3, a2);
    swift_release(a2);
    swift_slowDealloc(v10, -1, -1);
  }
  return v9;
}

Swift::Int sub_100057C4C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[9];
  uint64_t v34;

  v5 = a2;
  v31 = *(_QWORD *)(a3 + 16);
  if (!v31)
  {
    v24 = 0;
    goto LABEL_26;
  }
  v34 = a4 + 56;
  v30 = a3 + 32;
  swift_bridgeObjectRetain(a3);
  v28 = 0;
  v6 = 0;
  while (1)
  {
    v8 = (uint64_t *)(v30 + 16 * v6);
    v9 = *v8;
    v10 = v8[1];
    Hasher.init(_seed:)(v33, *(_QWORD *)(a4 + 40));
    v32 = v6;
    if (v10 >= 9)
    {
      swift_bridgeObjectRetain(v10);
      v11 = v9;
      String.hash(into:)(v33, v9, v10);
    }
    else
    {
      Hasher._combine(_:)(qword_10010CB58[v10]);
      v11 = v9;
      sub_1000582D0(v9, v10);
    }
    v12 = Hasher._finalize()();
    v13 = -1 << *(_BYTE *)(a4 + 32);
    v14 = v12 & ~v13;
    if (((*(_QWORD *)(v34 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      break;
LABEL_3:
    sub_100058234(v11, v10);
LABEL_4:
    v7 = v32;
LABEL_5:
    v6 = v7 + 1;
    if (v6 == v31)
      goto LABEL_24;
  }
  v15 = ~v13;
  while (1)
  {
    v16 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    Hasher.init(_seed:)(v33, 0);
    if (v18 >= 9)
    {
      swift_bridgeObjectRetain(v18);
      String.hash(into:)(v33, v17, v18);
    }
    else
    {
      Hasher._combine(_:)(qword_10010CB58[v18]);
      sub_1000582D0(v17, v18);
    }
    v19 = Hasher._finalize()();
    Hasher.init(_seed:)(v33, 0);
    if (v10 >= 9)
      String.hash(into:)(v33, v11, v10);
    else
      Hasher._combine(_:)(qword_10010CB58[v10]);
    v20 = Hasher._finalize()();
    sub_100058234(v17, v18);
    if (v19 == v20)
      break;
    v14 = (v14 + 1) & v15;
    if (((*(_QWORD *)(v34 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      goto LABEL_3;
  }
  sub_100058234(v11, v10);
  v21 = (v14 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v22 = *(unint64_t *)((char *)a1 + v21);
  *(unint64_t *)((char *)a1 + v21) = v22 | (1 << v14);
  if ((v22 & (1 << v14)) != 0)
    goto LABEL_4;
  v23 = __OFADD__(v28++, 1);
  v7 = v32;
  if (!v23)
    goto LABEL_5;
  __break(1u);
LABEL_24:
  swift_bridgeObjectRelease(a3);
  v5 = a2;
  v24 = v28;
LABEL_26:
  swift_retain(a4);
  return sub_1000C78F4(a1, v5, v24, a4);
}

int64_t sub_100057EFC(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

_QWORD *sub_100057FE0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v27[9];
  _QWORD *v28;

  v4 = a1;
  v28 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_27;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v20 = v4;
      v6 = 0;
      v23 = v4 & 0xFFFFFFFFFFFFFF8;
      v24 = v4 & 0xC000000000000001;
      v21 = v5;
      v22 = v4 + 32;
      while (v24)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v20);
        v8 = __OFADD__(v6++, 1);
        if (v8)
        {
LABEL_24:
          __break(1u);
          return v28;
        }
LABEL_9:
        v9 = *(_QWORD *)(v7 + 48);
        v10 = *(_QWORD *)(v9 + 16);
        if (v10)
        {
          v25 = v7;
          swift_bridgeObjectRetain(v9);
          v11 = (unint64_t *)(v9 + 40);
          while (1)
          {
            v12 = *(v11 - 1);
            v13 = *v11;
            Hasher.init(_seed:)(v27, 0);
            if (v13 >= 9)
            {
              swift_bridgeObjectRetain(v13);
              String.hash(into:)(v27, v12, v13);
            }
            else
            {
              Hasher._combine(_:)(qword_10010CB58[v13]);
              sub_1000582D0(v12, v13);
            }
            v14 = Hasher._finalize()();
            Hasher.init(_seed:)(v27, 0);
            if (a3 >= 9)
              String.hash(into:)(v27, a2, a3);
            else
              Hasher._combine(_:)(qword_10010CB58[a3]);
            v4 = Hasher._finalize()();
            sub_100058234(v12, v13);
            if (v14 == v4)
              break;
            v11 += 2;
            if (!--v10)
            {
              swift_release(v25);
              swift_bridgeObjectRelease(v9);
              goto LABEL_21;
            }
          }
          v15 = swift_bridgeObjectRelease(v9);
          v4 = (Swift::Int)&v28;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
          v16 = v28[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
          v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v25);
          specialized ContiguousArray._endMutation()(v17);
LABEL_21:
          v5 = v21;
        }
        else
        {
          swift_release(v7);
        }
        if (v6 == v5)
          return v28;
      }
      if (v6 < *(_QWORD *)(v23 + 16))
        break;
      __break(1u);
LABEL_27:
      if (v4 < 0)
        v19 = v4;
      else
        v19 = v4 & 0xFFFFFFFFFFFFFF8;
      v5 = _CocoaArrayWrapper.endIndex.getter(v19);
      if (!v5)
        return _swiftEmptyArrayStorage;
    }
    v7 = swift_retain(*(_QWORD *)(v22 + 8 * v6));
    v8 = __OFADD__(v6++, 1);
    if (v8)
      goto LABEL_24;
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100058224(uint64_t a1, unint64_t a2)
{
  if (a2 != 9)
    return sub_100058234(a1, a2);
  return a1;
}

uint64_t sub_100058234(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_100058248()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100058258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100058268(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100058270()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100058280()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100058290()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000582A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000582B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000582C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000582D0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_1000582E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000582F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100058304()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100058314()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100058324()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100058334()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100058344()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void *sub_100058354(uint64_t a1, const char *a2, void *a3, int a4, void *a5, void *a6, void *a7, void *a8)
{
  int64_t v9;
  void *result;
  int64_t v11;
  int v12;
  int v13;
  char v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  SEL v24;
  id v25;
  int v26;
  id v27;
  id v28;
  id v29;
  id v30;
  SEL v31;
  id v32;
  int v33;
  id v34;
  id v35;
  id v36;
  id v37;
  char v38;

  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_1000572A0(0, v9, 0);
    result = (void *)sub_1000C80C8(a1);
    v11 = (int64_t)result;
    v13 = v12;
    v15 = v14 & 1;
    while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(a1 + 36) != v13)
        goto LABEL_15;
      v38 = v15;
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      v20 = *(_QWORD *)_swiftEmptyArrayStorage.remoteCardFilter;
      v19 = *(_QWORD *)&_swiftEmptyArrayStorage.remoteCardFilter[8];
      swift_bridgeObjectRetain(v17);
      if (v20 >= v19 >> 1)
        sub_1000572A0(v19 > 1, v20 + 1, 1);
      *(_QWORD *)_swiftEmptyArrayStorage.remoteCardFilter = v20 + 1;
      v21 = (char *)&_swiftEmptyArrayStorage + 16 * v20;
      *((_QWORD *)v21 + 4) = v18;
      *((_QWORD *)v21 + 5) = v17;
      result = (void *)sub_100057EFC(v11, v13, v38 & 1, a1);
      v11 = (int64_t)result;
      v13 = v22;
      v15 = v23 & 1;
      if (!--v9)
      {
        sub_1000584FC((uint64_t)result, v22, v15);
        swift_bridgeObjectRelease((DARootViewController *)a1, v24, v25, v26, v27, v28, v29, v30);
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease((DARootViewController *)a1, a2, a3, a4, a5, a6, a7, a8);
LABEL_12:
    sub_1000E089C((uint64_t)&_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v31, v32, v33, v34, v35, v36, v37);
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_1000584FC(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

void sub_1000585AC()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  DARootViewController *v10;
  DARootViewController *v11;
  unint64_t v12;
  const char *v13;
  DARootViewController *v14;
  id v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSString v21;
  SEL v22;
  id v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  DARootViewController *v34;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = (void *)objc_opt_self(UIColor);
    v4 = objc_msgSend(v3, "systemBackgroundColor");
    objc_msgSend(v2, "setBackgroundColor:", v4);

    v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicator];
    v6 = objc_msgSend(v3, "labelColor");
    objc_msgSend(v5, "setColor:", v6);

    objc_msgSend(v5, "startAnimating");
    objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel];
    if (v7)
    {
      v8 = v7;
      v9 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001BLL, (void *)0x8000000100113E60);
      v11 = v10;
      v33 = v9;
      v34 = v10;
      v12 = sub_10003F14C();
      StringProtocol.localizedUppercase.getter(&type metadata for String, v12);
      v14 = (DARootViewController *)v13;
      swift_bridgeObjectRelease(v11, v13, v15, v16, v17, v18, v19, v20);
      v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14, v22, v23, v24, v25, v26, v27, v28);
      objc_msgSend(v8, "setText:", v21, v33, v34);

      objc_msgSend(v8, "setNumberOfLines:", 0);
      v29 = objc_msgSend(v3, "secondaryLabelColor");
      objc_msgSend(v8, "setTextColor:", v29);

      v30 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
      v31 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 12.0);
      v32 = objc_msgSend(v30, "scaledFontForFont:", v31);

      objc_msgSend(v8, "setFont:", v32);
      objc_msgSend(v8, "setTextAlignment:", 1);
      objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100058848()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  v2 = v1;
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicator]);

  v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel];
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v0, "view");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "addSubview:", v4);

      return;
    }
    goto LABEL_7;
  }
}

void sub_100058910()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  Class isa;
  SEL v18;
  id v19;
  int v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  SEL v49;
  id v50;
  int v51;
  id v52;
  id v53;
  id v54;
  id v55;
  Class v56;

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010C080;
  v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicator];
  v5 = objc_msgSend(v4, "centerXAnchor");
  v6 = objc_msgSend(v1, "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_11;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "centerXAnchor");

  v9 = objc_msgSend(v5, "constraintEqualToAnchor:", v8);
  *(_QWORD *)(v3 + 32) = v9;
  v10 = objc_msgSend(v4, "bottomAnchor");
  v11 = objc_msgSend(v1, "view");
  if (!v11)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v12 = v11;
  v13 = (void *)objc_opt_self(NSLayoutConstraint);
  v14 = objc_msgSend(v12, "centerYAnchor");

  v15 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v14, -5.0);
  *(_QWORD *)(v3 + 40) = v15;
  specialized Array._endMutation()(v16);
  sub_100053B64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v3, v18, v19, v20, v21, v22, v23, v24);
  objc_msgSend(v13, "activateConstraints:", isa);

  v25 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel];
  if (v25)
  {
    v26 = swift_allocObject(v2, 64, 7);
    *(_OWORD *)(v26 + 16) = xmmword_10010BF30;
    v27 = v25;
    v28 = objc_msgSend(v27, "centerXAnchor");
    v29 = objc_msgSend(v1, "view");
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(v29, "centerXAnchor");

      v32 = objc_msgSend(v28, "constraintEqualToAnchor:", v31);
      *(_QWORD *)(v26 + 32) = v32;
      v33 = objc_msgSend(v27, "topAnchor");
      v34 = objc_msgSend(v1, "view");
      if (v34)
      {
        v35 = v34;
        v36 = objc_msgSend(v34, "centerYAnchor");

        v37 = objc_msgSend(v33, "constraintEqualToAnchor:constant:", v36, 5.0);
        *(_QWORD *)(v26 + 40) = v37;
        v38 = objc_msgSend(v27, "leadingAnchor");
        v39 = objc_msgSend(v1, "view");
        if (v39)
        {
          v40 = v39;
          v41 = objc_msgSend(v39, "leadingAnchor");

          v42 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v41, 25.0);
          *(_QWORD *)(v26 + 48) = v42;
          v43 = objc_msgSend(v27, "trailingAnchor");
          v44 = objc_msgSend(v1, "view");
          if (v44)
          {
            v45 = v44;
            v46 = objc_msgSend(v44, "trailingAnchor");

            v47 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v46, -25.0);
            *(_QWORD *)(v26 + 56) = v47;
            specialized Array._endMutation()(v48);
            v56 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease((DARootViewController *)v26, v49, v50, v51, v52, v53, v54, v55);
            objc_msgSend(v13, "activateConstraints:", v56);

            return;
          }
          goto LABEL_15;
        }
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        return;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
}

id sub_100058D90(uint64_t a1, DARootViewController *a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  NSString v10;
  SEL v11;
  id v12;
  int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  objc_super v20;

  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicatorAppearDelay] = 0x3FB999999999999ALL;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_centerDisplacement] = 0x4014000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_fontSizeLoadingLabel] = 0x4028000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_margin] = 0x4039000000000000;
  v6 = OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicator;
  v7 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "initWithActivityIndicatorStyle:", 100);
  v9 = OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel;
  if ((objc_msgSend((id)objc_opt_self(CBSUtilities), "isSSRBootIntentSet") & 1) == 0)
  {
    *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

    if (a2)
      goto LABEL_3;
LABEL_5:
    v10 = 0;
    goto LABEL_6;
  }
  *(_QWORD *)&v8[v9] = 0;

  if (!a2)
    goto LABEL_5;
LABEL_3:
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2, v11, v12, v13, v14, v15, v16, v17);
LABEL_6:
  v20.receiver = v8;
  v20.super_class = (Class)type metadata accessor for LoadingViewController();
  v18 = objc_msgSendSuper2(&v20, "initWithNibName:bundle:", v10, a3);

  return v18;
}

id sub_100058F54(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicatorAppearDelay] = 0x3FB999999999999ALL;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_centerDisplacement] = 0x4014000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_fontSizeLoadingLabel] = 0x4028000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_margin] = 0x4039000000000000;
  v3 = OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicator;
  v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithActivityIndicatorStyle:", 100);
  if ((objc_msgSend((id)objc_opt_self(CBSUtilities), "isSSRBootIntentSet") & 1) != 0)
    v6 = 0;
  else
    v6 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel] = v6;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for LoadingViewController();
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

void sub_1000590A0()
{
  uint64_t v0;

}

id sub_1000590CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LoadingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LoadingViewController()
{
  return objc_opt_self(_TtC11Diagnostics21LoadingViewController);
}

id sub_10005926C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IntrinsicSizeAdjustingTableView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IntrinsicSizeAdjustingTableView()
{
  return objc_opt_self(_TtC11Diagnostics31IntrinsicSizeAdjustingTableView);
}

void _s23UIKitViewSwiftUIWrapperVwxx(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 8))
    swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *_s23UIKitViewSwiftUIWrapperVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  v4 = *(void **)a2;
  *a1 = *(_QWORD *)a2;
  v5 = a1 + 1;
  v7 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  v8 = v4;
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 16);
    a1[1] = v6;
    a1[2] = v9;
    swift_retain(v9);
  }
  else
  {
    *v5 = *v7;
  }
  return a1;
}

uint64_t _s23UIKitViewSwiftUIWrapperVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v7)
    {
      v10 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = v10;
      swift_retain(v10);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    return a1;
  }
  if (!v7)
  {
    swift_release(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

__n128 _s23UIKitViewSwiftUIWrapperVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s23UIKitViewSwiftUIWrapperVwta(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[1];
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v5)
    {
      v8 = a2[2];
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v5)
  {
    swift_release(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v6 = a2[2];
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  swift_release(v7);
  return a1;
}

uint64_t _s23UIKitViewSwiftUIWrapperVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s23UIKitViewSwiftUIWrapperVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s23UIKitViewSwiftUIWrapperVMa()
{
  return &_s23UIKitViewSwiftUIWrapperVN;
}

id sub_100059534()
{
  id *v0;

  return *v0;
}

uint64_t sub_10005953C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 8);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_100059574(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

void *sub_1000595B4()
{
  return &protocol witness table for Never;
}

uint64_t sub_1000595C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100059684();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100059610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100059684();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100059660(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100059684();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_100059684()
{
  unint64_t result;

  result = qword_10016BC40;
  if (!qword_10016BC40)
  {
    result = swift_getWitnessTable(&unk_10010CC28, &_s23UIKitViewSwiftUIWrapperVN);
    atomic_store(result, (unint64_t *)&qword_10016BC40);
  }
  return result;
}

DARootViewController *sub_1000596C8(SEL *a1)
{
  id v2;
  id v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  DARootViewController *result;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  SEL v27;
  id v28;
  int v29;
  id v30;
  id v31;
  id v32;
  id v33;
  DARootViewController *v34;
  SEL v35;
  id v36;
  int v37;
  id v38;
  id v39;
  id v40;
  id v41;
  DARootViewController *v42;
  SEL v43;
  id v44;
  int v45;
  id v46;
  id v47;
  id v48;
  id v49;

  v2 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v3 = objc_msgSend(v2, "snapshot");

  v4 = objc_msgSend(v3, "queue");
  if (!v4)
    return &_swiftEmptyArrayStorage;
  v5 = sub_10005B260();
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if (!((unint64_t)v6 >> 62))
  {
    v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_4;
LABEL_18:
    swift_bridgeObjectRelease((DARootViewController *)v6, v7, v8, v9, v10, v11, v12, v13);
    v34 = (DARootViewController *)sub_1000E0934((uint64_t)&_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v35, v36, v37, v38, v39, v40, v41);
    v42 = sub_100092410((uint64_t)v34);
    swift_bridgeObjectRelease(v34, v43, v44, v45, v46, v47, v48, v49);
    return v42;
  }
  if (v6 < 0)
    v26 = v6;
  else
    v26 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v14 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease((DARootViewController *)v6, v27, v28, v29, v30, v31, v32, v33);
  if (!v14)
    goto LABEL_18;
LABEL_4:
  result = (DARootViewController *)sub_1000572BC(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v6);
      else
        v17 = *(id *)(v6 + 8 * v16 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, *a1);
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      v24 = *(_QWORD *)_swiftEmptyArrayStorage.remoteCardFilter;
      v23 = *(_QWORD *)&_swiftEmptyArrayStorage.remoteCardFilter[8];
      if (v24 >= v23 >> 1)
        sub_1000572BC(v23 > 1, v24 + 1, 1);
      ++v16;
      *(_QWORD *)_swiftEmptyArrayStorage.remoteCardFilter = v24 + 1;
      v25 = (char *)&_swiftEmptyArrayStorage + 16 * v24;
      *((_QWORD *)v25 + 4) = v20;
      *((_QWORD *)v25 + 5) = v22;
    }
    while (v14 != v16);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

DARootViewController *sub_1000598F0()
{
  id v0;
  id v1;
  id v2;
  DARootViewController *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  const char *v18;
  void *v19;
  int v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v31;
  unint64_t v32;
  _BYTE v33[40];
  __int128 v34;
  __int128 v35;
  DARootViewController *v36;

  v0 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v1 = objc_msgSend(v0, "snapshot");

  v2 = objc_msgSend(v1, "consentHandles");
  v3 = &_swiftEmptyArrayStorage;
  if (v2)
  {
    v4 = sub_100035CA4(&qword_10016BCA8);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v4);

    v13 = *(_QWORD *)(v5 + 16);
    if (v13)
    {
      v36 = &_swiftEmptyArrayStorage;
      sub_1000572BC(0, v13, 0);
      v14 = 0;
      while (1)
      {
        v15 = *(_QWORD *)(v5 + 8 * v14 + 32);
        v31 = 0x656C646E6168;
        v32 = 0xE600000000000000;
        swift_bridgeObjectRetain(v15);
        AnyHashable.init<A>(_:)(&v31, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v15 + 16) && (v16 = sub_100072B10((uint64_t)v33), (v17 & 1) != 0))
        {
          sub_1000370B0(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v34);
        }
        else
        {
          v34 = 0u;
          v35 = 0u;
        }
        sub_100036FDC((uint64_t)v33);
        if (!*((_QWORD *)&v35 + 1))
          break;
        if ((swift_dynamicCast(&v31, &v34, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
          goto LABEL_12;
        v26 = v31;
        v25 = v32;
        swift_bridgeObjectRelease((DARootViewController *)v15, v18, v19, v20, v21, v22, v23, v24);
LABEL_13:
        v3 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
        {
          sub_1000572BC(0, *(_QWORD *)v3->remoteCardFilter + 1, 1);
          v3 = v36;
        }
        v28 = *(_QWORD *)v3->remoteCardFilter;
        v27 = *(_QWORD *)&v3->remoteCardFilter[8];
        if (v28 >= v27 >> 1)
        {
          sub_1000572BC(v27 > 1, v28 + 1, 1);
          v3 = v36;
        }
        ++v14;
        *(_QWORD *)v3->remoteCardFilter = v28 + 1;
        v29 = (char *)v3 + 16 * v28;
        *((_QWORD *)v29 + 4) = v26;
        *((_QWORD *)v29 + 5) = v25;
        if (v13 == v14)
          goto LABEL_18;
      }
      sub_100036FA0((uint64_t)&v34, (uint64_t *)&unk_10016B610);
LABEL_12:
      swift_bridgeObjectRelease((DARootViewController *)v15, v18, v19, v20, v21, v22, v23, v24);
      v26 = 0;
      v25 = 0xE000000000000000;
      goto LABEL_13;
    }
LABEL_18:
    swift_bridgeObjectRelease((DARootViewController *)v5, v6, v7, v8, v9, v10, v11, v12);
  }
  return v3;
}

double sub_100059B44()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t *v8;
  DARootViewController *v9;
  const char *v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  DARootViewController *v18;
  NSString v19;
  SEL v20;
  id v21;
  int v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  double v29;
  double v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  DARootViewController *v36;
  const char *v37;
  id v38;
  int v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  DARootViewController *v46;
  NSString v47;
  SEL v48;
  id v49;
  int v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t *v56;
  DARootViewController *v57;
  const char *v58;
  id v59;
  int v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  DARootViewController *v66;
  NSString v67;
  SEL v68;
  id v69;
  int v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t *v76;
  DARootViewController *v77;
  const char *v78;
  id v79;
  int v80;
  id v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  DARootViewController *v86;
  NSString v87;
  SEL v88;
  id v89;
  int v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t (**v96)();
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t (**v101)();
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t *v106;
  DARootViewController *v107;
  const char *v108;
  id v109;
  int v110;
  id v111;
  id v112;
  id v113;
  id v114;
  void *v115;
  DARootViewController *v116;
  id v117;
  NSString v118;
  SEL v119;
  id v120;
  int v121;
  id v122;
  id v123;
  id v124;
  id v125;
  uint64_t v126;
  uint64_t (**v127)();
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  double result;

  sub_1000A0228();
  objc_msgSend(v0, "setModalPresentationStyle:", 2);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView], "setDataSource:", v0);
  v1 = objc_msgSend(v0, "navigationItem");
  v2 = objc_msgSend(v1, "navigationBar");

  if (!v2)
  {
    __break(1u);
    goto LABEL_27;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v2, "setBackgroundImage:forBarMetrics:", v3, 0);

  v4 = objc_msgSend(v0, "navigationItem");
  v5 = objc_msgSend(v4, "navigationBar");

  if (!v5)
  {
LABEL_27:
    __break(1u);
    JUMPOUT(0x10005A300);
  }
  v6 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v5, "setShadowImage:", v6);

  v7 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000016, (void *)0x8000000100114010);
  v8 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText];
  v9 = *(DARootViewController **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText + 8];
  *v8 = v7;
  v8[1] = (uint64_t)v10;
  swift_bridgeObjectRelease(v9, v10, v11, v12, v13, v14, v15, v16);
  v17 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel];
  v18 = (DARootViewController *)v8[1];
  if (v18)
  {
    swift_bridgeObjectRetain(v18);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v17, "setText:", v19);

  v27 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v28 = objc_msgSend(v27, "snapshot");

  objc_msgSend(v28, "totalDuration");
  v30 = v29;

  v31 = sub_10004E608(v30);
  if (v31 != 4)
  {
    v32 = v31;
    sub_10004E518(v30);
    if (v33)
      __asm { BR              X10 }
  }
  v34 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x8000000100114030);
  v35 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
  v36 = *(DARootViewController **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText + 8];
  *v35 = v34;
  v35[1] = (uint64_t)v37;
  swift_bridgeObjectRelease(v36, v37, v38, v39, v40, v41, v42, v43);
  v44 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
  v45 = v35[1];
  if (v45)
    v46 = (DARootViewController *)v35[1];
  else
    v46 = (DARootViewController *)0xE000000000000000;
  swift_bridgeObjectRetain(v45);
  v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v46, v48, v49, v50, v51, v52, v53, v54);
  objc_msgSend(v44, "setText:", v47);

  if (v0[OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_willAllowExpressFlow] == 1)
  {
    v55 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000023, (void *)0x8000000100114050);
    v56 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
    v57 = *(DARootViewController **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle
                                      + 8];
    *v56 = v55;
    v56[1] = (uint64_t)v58;
    swift_bridgeObjectRelease(v57, v58, v59, v60, v61, v62, v63, v64);
    v65 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton];
    v66 = (DARootViewController *)v56[1];
    if (v66)
    {
      swift_bridgeObjectRetain(v66);
      v67 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v66, v68, v69, v70, v71, v72, v73, v74);
    }
    else
    {
      v67 = 0;
    }
    objc_msgSend(v65, "setTitle:forState:", v67, 0);

    v95 = swift_allocObject(&unk_100137030, 24, 7);
    *(_QWORD *)(v95 + 16) = v0;
    v96 = (uint64_t (**)())&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
    v97 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
    v98 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction + 8];
    *v96 = sub_10005B1D8;
    v96[1] = (uint64_t (*)())v95;
    v99 = v0;
    sub_100035D74(v97, v98);
    v100 = swift_allocObject(&unk_100137058, 24, 7);
    *(_QWORD *)(v100 + 16) = v99;
    v101 = (uint64_t (**)())&v99[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    v102 = *(_QWORD *)&v99[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    v103 = *(_QWORD *)&v99[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction + 8];
    *v101 = sub_10005B1F4;
    v101[1] = (uint64_t (*)())v100;
    v104 = v99;
    sub_100035D74(v102, v103);
    v105 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001CLL, (void *)0x8000000100114080);
    v106 = (uint64_t *)&v104[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle];
    v107 = *(DARootViewController **)&v104[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle
                                         + 8];
    *v106 = v105;
    v106[1] = (uint64_t)v108;
    swift_bridgeObjectRelease(v107, v108, v109, v110, v111, v112, v113, v114);
    v115 = *(void **)&v104[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton];
    if (v115)
    {
      v116 = (DARootViewController *)v106[1];
      v117 = v115;
      if (v116)
      {
        swift_bridgeObjectRetain(v116);
        v118 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v116, v119, v120, v121, v122, v123, v124, v125);
      }
      else
      {
        v118 = 0;
      }
      objc_msgSend(v115, "setTitle:forState:", v118, 0);

    }
  }
  else
  {
    v75 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0x45554E49544E4F43, (void *)0xE800000000000000);
    v76 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
    v77 = *(DARootViewController **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle
                                      + 8];
    *v76 = v75;
    v76[1] = (uint64_t)v78;
    swift_bridgeObjectRelease(v77, v78, v79, v80, v81, v82, v83, v84);
    v85 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton];
    v86 = (DARootViewController *)v76[1];
    if (v86)
    {
      swift_bridgeObjectRetain(v86);
      v87 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v86, v88, v89, v90, v91, v92, v93, v94);
    }
    else
    {
      v87 = 0;
    }
    objc_msgSend(v85, "setTitle:forState:", v87, 0);

    v126 = swift_allocObject(&unk_100136FE0, 24, 7);
    *(_QWORD *)(v126 + 16) = v0;
    v127 = (uint64_t (**)())&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
    v128 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
    v129 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction + 8];
    *v127 = sub_10005B2AC;
    v127[1] = (uint64_t (*)())v126;
    v130 = v0;
    sub_100035D74(v128, v129);
  }
  v131 = swift_allocObject(&unk_100137008, 24, 7);
  *(_QWORD *)(v131 + 16) = v0;
  v132 = v0;
  sub_100087F10((uint64_t)sub_10005B1D0, v131);
  *(_QWORD *)&result = swift_release(v131).n128_u64[0];
  return result;
}

uint64_t sub_10005A310(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v4;
  _QWORD v6[5];
  _BYTE v7[24];
  _BYTE v8[24];
  uint64_t v9;

  v4 = a1 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate, v7, 0, 0);
  sub_10005B210(v4, (uint64_t)v8);
  if (!v9)
    return sub_100036FA0((uint64_t)v8, &qword_10016BCA0);
  sub_10003CE84((uint64_t)v8, (uint64_t)v6);
  sub_100036FA0((uint64_t)v8, &qword_10016BCA0);
  sub_10003CEC8(v6, v6[3]);
  sub_10007E7B8(a1, a2);
  return sub_10003CEEC(v6);
}

void sub_10005A3C8(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;

  v2 = swift_allocObject(&unk_100137080, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = a1;
  v4 = sub_100087FEC((uint64_t)sub_10005B258, v2, 0, 0);
  objc_msgSend(v3, "presentViewController:animated:completion:", v4, 1, 0, swift_release(v2).n128_f64[0]);

}

uint64_t sub_10005A454(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v5[5];
  _BYTE v6[24];
  _BYTE v7[24];
  uint64_t v8;

  v3 = a2 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate;
  swift_beginAccess(a2 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate, v6, 0, 0);
  sub_10005B210(v3, (uint64_t)v7);
  if (!v8)
    return sub_100036FA0((uint64_t)v7, &qword_10016BCA0);
  sub_10003CE84((uint64_t)v7, (uint64_t)v5);
  sub_100036FA0((uint64_t)v7, &qword_10016BCA0);
  sub_10003CEC8(v5, v5[3]);
  sub_10007E7B8(a2, 0);
  return sub_10003CEEC(v5);
}

uint64_t sub_10005A59C()
{
  return 1;
}

uint64_t sub_10005A5A4()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_bundleQueue)
                   + 16);
}

void sub_10005A5B8(void *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Class isa;
  uint64_t v16;
  char *v17;
  void *v18;
  NSString v19;
  id v20;
  const char *v21;
  void *v22;
  int v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  char *v28;
  id v29;
  uint64_t v30;
  DARootViewController *v31;
  DARootViewController *v32;
  const char *v33;
  DARootViewController *v34;
  id v35;
  int v36;
  id v37;
  id v38;
  id v39;
  id v40;
  NSString v41;
  SEL v42;
  id v43;
  int v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  DARootViewController *v51;
  DARootViewController *v52;
  unint64_t v53;
  SEL v54;
  id v55;
  int v56;
  id v57;
  id v58;
  id v59;
  id v60;
  char *v61;
  id v62;
  uint64_t v63;
  DARootViewController *v64;
  DARootViewController *v65;
  uint64_t v66;
  DARootViewController *v67;
  DARootViewController *v68;
  const char *v69;
  DARootViewController *v70;
  id v71;
  int v72;
  id v73;
  id v74;
  id v75;
  id v76;
  SEL v77;
  id v78;
  int v79;
  id v80;
  id v81;
  id v82;
  id v83;
  NSString v84;
  SEL v85;
  id v86;
  int v87;
  id v88;
  id v89;
  id v90;
  id v91;
  char *v92;
  DARootViewController *v93;
  char *v94;
  DARootViewController *v95;
  SEL v96;
  id v97;
  int v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[4];

  v2 = v1;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_bundleQueue];
  v5 = ((uint64_t (*)(void))IndexPath.row.getter)();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v5 >= *(_QWORD *)(v4 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = v4 + 16 * v5;
  v8 = *(_QWORD *)(v6 + 32);
  v7 = *(_QWORD *)(v6 + 40);
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_typeQueue];
  v10 = swift_bridgeObjectRetain(v7);
  v11 = IndexPath.row.getter(v10);
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v11 >= *(_QWORD *)(v9 + 16))
  {
LABEL_13:
    __break(1u);
    return;
  }
  v12 = v9 + 16 * v11;
  v13 = *(_QWORD *)(v12 + 32);
  v14 = *(_QWORD *)(v12 + 40);
  swift_bridgeObjectRetain(v14);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectRowAtIndexPath:animated:", isa, 1);

  v16 = type metadata accessor for EnhancedLoggingDiagnosticInfoViewController();
  v17 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");
  v18 = (void *)objc_opt_self(ELSWhitelist);
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "findEntryForParameterName:", v19);

  if (v20)
  {
    v104 = v8;
    v105 = v7;
    v28 = v17;
    v29 = objc_msgSend(v20, "displayNameLocalizationKey");
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v30, v32);
    v34 = (DARootViewController *)v33;
    swift_bridgeObjectRelease(v32, v33, v35, v36, v37, v38, v39, v40);
    v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v34, v42, v43, v44, v45, v46, v47, v48);
    objc_msgSend(v28, "setTitle:", v41);

    v49 = objc_msgSend(v20, "parameterName");
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v52 = v51;

    v106[2] = v50;
    v106[3] = v52;
    v106[0] = 0x616C7562656ELL;
    v106[1] = 0xE600000000000000;
    v53 = sub_10003F14C();
    LOBYTE(v49) = StringProtocol.contains<A>(_:)(v106, &type metadata for String, &type metadata for String, v53, v53);
    swift_bridgeObjectRelease(v52, v54, v55, v56, v57, v58, v59, v60);
    if ((v49 & 1) != 0)
    {
      v61 = v28;
      v62 = objc_msgSend(v20, "displayNameLocalizationKey");
      v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
      v65 = v64;

      v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-Nebula"));
      v68 = v67;
      sub_10003FFA0(v66, v67, (uint64_t)&_swiftEmptyArrayStorage, v63, v65);
      v70 = (DARootViewController *)v69;
      swift_bridgeObjectRelease(v65, v69, v71, v72, v73, v74, v75, v76);
      swift_bridgeObjectRelease(v68, v77, v78, v79, v80, v81, v82, v83);
      v84 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v70, v85, v86, v87, v88, v89, v90, v91);
      objc_msgSend(v61, "setTitle:", v84);

    }
    v8 = v104;
    v7 = v105;
  }
  v92 = &v17[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logType];
  v93 = *(DARootViewController **)&v17[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logType
                                     + 8];
  *(_QWORD *)v92 = v8;
  *((_QWORD *)v92 + 1) = v7;
  swift_bridgeObjectRelease(v93, v21, v22, v23, v24, v25, v26, v27);
  v94 = &v17[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logName];
  v95 = *(DARootViewController **)&v17[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logName
                                     + 8];
  *(_QWORD *)v94 = v13;
  *((_QWORD *)v94 + 1) = v14;
  swift_bridgeObjectRelease(v95, v96, v97, v98, v99, v100, v101, v102);
  v103 = objc_msgSend(v2, "navigationController");
  objc_msgSend(v103, "pushViewController:animated:", v17, 1);

}

unint64_t sub_10005A92C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  unint64_t result;
  DARootViewController *v4;
  void *v5;
  NSString v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  DARootViewController *v19;
  DARootViewController *v20;
  const char *v21;
  DARootViewController *v22;
  id v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSString v29;
  SEL v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  DARootViewController *v41;
  DARootViewController *v42;
  const char *v43;
  DARootViewController *v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  NSString v51;
  SEL v52;
  id v53;
  int v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  DARootViewController *v61;
  DARootViewController *v62;
  unint64_t v63;
  SEL v64;
  id v65;
  int v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  DARootViewController *v75;
  DARootViewController *v76;
  uint64_t v77;
  DARootViewController *v78;
  DARootViewController *v79;
  const char *v80;
  DARootViewController *v81;
  id v82;
  int v83;
  id v84;
  id v85;
  id v86;
  id v87;
  SEL v88;
  id v89;
  int v90;
  id v91;
  id v92;
  id v93;
  id v94;
  NSString v95;
  SEL v96;
  id v97;
  int v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  uint64_t v106;
  DARootViewController *v107;
  DARootViewController *v108;
  uint64_t v109;
  DARootViewController *v110;
  DARootViewController *v111;
  const char *v112;
  DARootViewController *v113;
  id v114;
  int v115;
  id v116;
  id v117;
  id v118;
  id v119;
  SEL v120;
  id v121;
  int v122;
  id v123;
  id v124;
  id v125;
  id v126;
  NSString v127;
  SEL v128;
  id v129;
  int v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  void *v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  DARootViewController *v140;

  v1 = sub_1000A1B1C();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_typeQueue);
  result = IndexPath.row.getter(v1);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (result >= *(_QWORD *)(v2 + 16))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v4 = *(DARootViewController **)(v2 + 16 * result + 40);
  v5 = (void *)objc_opt_self(ELSWhitelist);
  swift_bridgeObjectRetain(v4);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4, v7, v8, v9, v10, v11, v12, v13);
  v14 = objc_msgSend(v5, "findEntryForParameterName:", v6);

  if (v14)
  {
    v15 = objc_msgSend(v1, "textLabel");
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v14, "displayNameLocalizationKey");
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v18, v20);
      v22 = (DARootViewController *)v21;
      swift_bridgeObjectRelease(v20, v21, v23, v24, v25, v26, v27, v28);
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v22, v30, v31, v32, v33, v34, v35, v36);
      objc_msgSend(v16, "setText:", v29);

    }
    v37 = objc_msgSend(v1, "detailTextLabel");
    if (v37)
    {
      v38 = v37;
      v39 = objc_msgSend(v14, "sensitiveInformationLocalizationKey");
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v42 = v41;

      sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v40, v42);
      v44 = (DARootViewController *)v43;
      swift_bridgeObjectRelease(v42, v43, v45, v46, v47, v48, v49, v50);
      v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v44, v52, v53, v54, v55, v56, v57, v58);
      objc_msgSend(v38, "setText:", v51);

    }
    v59 = objc_msgSend(v14, "parameterName");
    v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
    v62 = v61;

    v139 = v60;
    v140 = v62;
    v137 = 0x616C7562656ELL;
    v138 = 0xE600000000000000;
    v63 = sub_10003F14C();
    LOBYTE(v59) = StringProtocol.contains<A>(_:)(&v137, &type metadata for String, &type metadata for String, v63, v63);
    swift_bridgeObjectRelease(v62, v64, v65, v66, v67, v68, v69, v70);
    if ((v59 & 1) != 0)
    {
      v71 = objc_msgSend(v1, "textLabel", v137, v138, v139, v140);
      if (v71)
      {
        v72 = v71;
        v73 = objc_msgSend(v14, "displayNameLocalizationKey");
        v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
        v76 = v75;

        v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-Nebula"));
        v79 = v78;
        sub_10003FFA0(v77, v78, (uint64_t)&_swiftEmptyArrayStorage, v74, v76);
        v81 = (DARootViewController *)v80;
        swift_bridgeObjectRelease(v76, v80, v82, v83, v84, v85, v86, v87);
        swift_bridgeObjectRelease(v79, v88, v89, v90, v91, v92, v93, v94);
        v95 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v81, v96, v97, v98, v99, v100, v101, v102);
        objc_msgSend(v72, "setText:", v95);

      }
      v103 = objc_msgSend(v1, "detailTextLabel");
      if (v103)
      {
        v104 = v103;
        v105 = objc_msgSend(v14, "sensitiveInformationLocalizationKey");
        v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
        v108 = v107;

        v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-Nebula"));
        v111 = v110;
        sub_10003FFA0(v109, v110, (uint64_t)&_swiftEmptyArrayStorage, v106, v108);
        v113 = (DARootViewController *)v112;
        swift_bridgeObjectRelease(v108, v112, v114, v115, v116, v117, v118, v119);
        swift_bridgeObjectRelease(v111, v120, v121, v122, v123, v124, v125, v126);
        v127 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v113, v128, v129, v130, v131, v132, v133, v134);
        objc_msgSend(v104, "setText:", v127);

      }
    }

  }
  v135 = objc_msgSend(v1, "detailTextLabel", v137, v138, v139, v140);
  if (v135)
  {
    v136 = v135;
    objc_msgSend(v135, "setNumberOfLines:", 2);

  }
  objc_msgSend(v1, "setAccessoryType:", 1);
  return (unint64_t)v1;
}

id sub_10005AD88()
{
  void *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  id v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  v1 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_willAllowExpressFlow;
  v2 = (void *)objc_opt_self(ELSManager);
  v3 = v0;
  v4 = objc_msgSend(v2, "sharedManager");
  v5 = objc_msgSend(v4, "snapshot");

  LOBYTE(v4) = objc_msgSend(v5, "needsFollowup");
  *((_BYTE *)v0 + v1) = v4 ^ 1;
  v6 = &v3[OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_QWORD *)v6 + 4) = 0;
  v7 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_bundleQueue;
  *(_QWORD *)&v3[v7] = sub_1000596C8((SEL *)&selRef_type);
  v8 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_typeQueue;
  *(_QWORD *)&v3[v8] = sub_1000596C8((SEL *)&selRef_typeName);
  v9 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_consentHandles;
  *(_QWORD *)&v3[v9] = sub_1000598F0();
  v10 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_diagnosticsTable;
  *(_QWORD *)&v3[v10] = objc_msgSend(objc_allocWithZone((Class)UITableView), "initWithFrame:style:", 1, 0.0, 0.0, 0.0, 0.0);

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for EnhancedLoggingConsentViewController();
  return objc_msgSendSuper2(&v12, "init");
}

id sub_10005AEFC(void *a1)
{
  void *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  objc_super v15;

  v3 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_willAllowExpressFlow;
  v4 = (void *)objc_opt_self(ELSManager);
  v5 = v1;
  v6 = objc_msgSend(v4, "sharedManager");
  v7 = objc_msgSend(v6, "snapshot");

  LOBYTE(v6) = objc_msgSend(v7, "needsFollowup");
  *((_BYTE *)v1 + v3) = v6 ^ 1;
  v8 = &v5[OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  v9 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_bundleQueue;
  *(_QWORD *)&v5[v9] = sub_1000596C8((SEL *)&selRef_type);
  v10 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_typeQueue;
  *(_QWORD *)&v5[v10] = sub_1000596C8((SEL *)&selRef_typeName);
  v11 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_consentHandles;
  *(_QWORD *)&v5[v11] = sub_1000598F0();
  v12 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_diagnosticsTable;
  *(_QWORD *)&v5[v12] = objc_msgSend(objc_allocWithZone((Class)UITableView), "initWithFrame:style:", 1, 0.0, 0.0, 0.0, 0.0);

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for EnhancedLoggingConsentViewController();
  v13 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);

  return v13;
}

void sub_10005B088()
{
  uint64_t v0;
  SEL v1;
  id v2;
  int v3;
  id v4;
  id v5;
  id v6;
  id v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;

  sub_100036FA0(v0 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate, &qword_10016BCA0);
  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_bundleQueue), v1, v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_typeQueue), v8, v9, v10, v11, v12, v13, v14);
  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_consentHandles), v15, v16, v17, v18, v19, v20, v21);

}

id sub_10005B0EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedLoggingConsentViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EnhancedLoggingConsentViewController()
{
  return objc_opt_self(_TtC11Diagnostics36EnhancedLoggingConsentViewController);
}

uint64_t sub_10005B1AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10005B1D0()
{
  uint64_t v0;

  sub_10005A3C8(*(void **)(v0 + 16));
}

uint64_t sub_10005B1D8()
{
  uint64_t v0;

  return sub_10005A310(*(_QWORD *)(v0 + 16), 1u);
}

uint64_t sub_10005B1F4()
{
  uint64_t v0;

  return sub_10005A310(*(_QWORD *)(v0 + 16), 2u);
}

uint64_t sub_10005B210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4(&qword_10016BCA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005B258(uint64_t a1)
{
  uint64_t v1;

  return sub_10005A454(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_10005B260()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016E450;
  if (!qword_10016E450)
  {
    v1 = objc_opt_self(ELSQueueEntry);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10016E450);
  }
  return result;
}

void sub_10005B36C()
{
  char *v0;
  DARootViewController *v1;
  char *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  const char *v21;
  id v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  SEL v28;
  id v29;
  int v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  DARootViewController *v36;
  DARootViewController *v37;
  const char *v38;
  DARootViewController *v39;
  id v40;
  int v41;
  id v42;
  id v43;
  id v44;
  id v45;
  SEL v46;
  id v47;
  int v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  unsigned int v54;
  DARootViewController *v55;
  DARootViewController *v56;
  NSString v57;
  SEL v58;
  id v59;
  int v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  unint64_t v66;
  DARootViewController *v67;
  DARootViewController *v68;
  NSString v69;
  SEL v70;
  id v71;
  int v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  DARootViewController *v84;
  const char *v85;
  DARootViewController *v86;
  id v87;
  int v88;
  id v89;
  id v90;
  id v91;
  id v92;
  NSString v93;
  SEL v94;
  id v95;
  int v96;
  id v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  DARootViewController *v107;
  DARootViewController *v108;
  id v109;
  DARootViewController *v110;
  const char *v111;
  void *v112;
  int v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  const char *v120;
  id v121;
  int v122;
  id v123;
  id v124;
  id v125;
  id v126;
  SEL v127;
  id v128;
  int v129;
  id v130;
  id v131;
  id v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  SEL v136;
  id v137;
  int v138;
  id v139;
  id v140;
  id v141;
  id v142;
  SEL v143;
  id v144;
  int v145;
  id v146;
  id v147;
  id v148;
  id v149;
  SEL v150;
  id v151;
  int v152;
  id v153;
  id v154;
  id v155;
  id v156;
  void **v157;
  uint64_t v158;
  uint64_t (*v159)(uint64_t);
  void *v160;
  void *v161;
  uint64_t v162;
  _BYTE v163[56];
  _BYTE v164[56];
  _BYTE v165[56];
  _QWORD v166[6];
  unsigned __int8 v167;

  v2 = v0;
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  objc_msgSend(v2, "setModalInPresentation:", 1);
  v6 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_contentUnavailableView];
  v7 = objc_msgSend(v2, "view");
  if (!v7)
  {
LABEL_44:
    __break(1u);
    return;
  }
  v8 = v7;
  objc_msgSend(v7, "bounds");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  objc_msgSend(v6, "setFrame:", v10, v12, v14, v16);
  v17 = (uint64_t)&v2[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert];
  sub_10005BE38((uint64_t)&v2[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert], (uint64_t)v165);
  sub_10005BF84((uint64_t)v165, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BE74);
  v18 = sub_100067000(0);
  v20 = v19;
  sub_10005BF84((uint64_t)v165, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BEFC);
  if (v20)
  {
    sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v18, (void *)v20);
    v1 = (DARootViewController *)v21;
    swift_bridgeObjectRelease((DARootViewController *)v20, v21, v22, v23, v24, v25, v26, v27);
    v20 = (unint64_t)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v1, v28, v29, v30, v31, v32, v33, v34);
  }
  objc_msgSend(v6, "setTitle:", v20);

  sub_10005BE38(v17, (uint64_t)v163);
  sub_10005BE38((uint64_t)v163, (uint64_t)v166);
  if (v167 < 2u || v166[4] | v166[5] | v166[0] | v166[3] | v166[2] | v166[1])
  {
    sub_10005BF84((uint64_t)v163, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BE74);
    v35 = sub_100067000(1);
    v37 = v36;
    sub_10005BF84((uint64_t)v163, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BEFC);
    if (v37)
    {
      sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v35, v37);
      v39 = (DARootViewController *)v38;
      swift_bridgeObjectRelease(v37, v38, v40, v41, v42, v43, v44, v45);
      v37 = (DARootViewController *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v39, v46, v47, v48, v49, v50, v51, v52);
    }
    objc_msgSend(v6, "setMessage:", v37);
  }
  else
  {
    v103 = objc_msgSend(objc_allocWithZone((Class)NSByteCountFormatter), "init");
    objc_msgSend(v103, "setAllowedUnits:", 6);
    if (qword_10016A690 != -1)
      swift_once(&qword_10016A690, sub_100093E80);
    v104 = sub_100094A9C((const __CFString *)qword_10016CD90);
    if (v104 < 0)
    {
      __break(1u);
      goto LABEL_39;
    }
    v105 = objc_msgSend(v103, "stringFromByteCount:", v104);
    v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
    v108 = v107;

    sub_10005BE38(v17, (uint64_t)v164);
    sub_10005BF84((uint64_t)v164, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BE74);
    v109 = sub_100067000(1);
    v37 = v110;
    sub_10005BF84((uint64_t)v164, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BEFC);
    if (v37)
    {
      v118 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v119 = swift_allocObject(v118, 72, 7);
      *(_OWORD *)(v119 + 16) = xmmword_10010BE30;
      *(_QWORD *)(v119 + 56) = &type metadata for String;
      *(_QWORD *)(v119 + 64) = sub_100047048();
      *(_QWORD *)(v119 + 32) = v106;
      *(_QWORD *)(v119 + 40) = v108;
      sub_10003FFA0(0, 0, v119, (uint64_t)v109, v37);
      v108 = (DARootViewController *)v120;
      swift_bridgeObjectRelease(v37, v120, v121, v122, v123, v124, v125, v126);
      swift_bridgeObjectRelease((DARootViewController *)v119, v127, v128, v129, v130, v131, v132, v133);
      v37 = (DARootViewController *)String._bridgeToObjectiveC()();
    }
    swift_bridgeObjectRelease(v108, v111, v112, v113, v114, v115, v116, v117);
    objc_msgSend(v6, "setMessage:", v37);

  }
  v53 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  v54 = objc_msgSend(v53, "isCheckerBoardActive");
  swift_unknownObjectRelease(v53);
  if (v54)
  {
    sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000017, (void *)0x80000001001141C0);
    v56 = v55;
    v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v56, v58, v59, v60, v61, v62, v63, v64);
    objc_msgSend(v6, "setButtonTitle:", v57);

    v161 = sub_10005BB3C;
    v162 = 0;
    v157 = _NSConcreteStackBlock;
    v158 = 1107296256;
    v159 = sub_100030658;
    v160 = &unk_100137148;
    v65 = _Block_copy(&v157);
LABEL_25:
    objc_msgSend(v6, "setButtonAction:", v65, *(double *)&v66);
    _Block_release(v65);
    return;
  }
  if (byte_100172309 == 1)
  {
    sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000017, (void *)0x80000001001141C0);
    v68 = v67;
    v69 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v68, v70, v71, v72, v73, v74, v75, v76);
    objc_msgSend(v6, "setButtonTitle:", v69);

    v77 = swift_allocObject(&unk_100137108, 24, 7);
    *(_QWORD *)(v77 + 16) = v2;
    v161 = sub_10005BFFC;
    v162 = v77;
    v157 = _NSConcreteStackBlock;
    v158 = 1107296256;
    v159 = sub_100030658;
    v160 = &unk_100137120;
    v65 = _Block_copy(&v157);
    v78 = v162;
    v79 = v2;
    v80 = v78;
    goto LABEL_24;
  }
  v1 = (DARootViewController *)OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_privateAlertAction;
  v81 = *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_privateAlertAction];
  if (!((unint64_t)v81 >> 62))
  {
    if (*(uint64_t *)((v81 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
      return;
LABEL_16:
    v20 = *(unint64_t *)((char *)&v1->super.super.super.super.isa + (_QWORD)v2);
    if ((v20 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_41;
      }
      v82 = *(_QWORD *)(v20 + 32);
      swift_retain(v82);
LABEL_19:
      v83 = *(_QWORD *)(v82 + 16);
      v84 = *(DARootViewController **)(v82 + 24);
      swift_bridgeObjectRetain(v84);
      swift_release(v82);
      sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v83, v84);
      v86 = (DARootViewController *)v85;
      swift_bridgeObjectRelease(v84, v85, v87, v88, v89, v90, v91, v92);
      v93 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v86, v94, v95, v96, v97, v98, v99, v100);
      objc_msgSend(v6, "setButtonTitle:", v93);

      v20 = *(unint64_t *)((char *)&v1->super.super.super.super.isa + (_QWORD)v2);
      if ((v20 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v101 = *(_QWORD *)(v20 + 32);
          swift_retain(v101);
LABEL_22:
          v65 = *(void **)(v101 + 40);
          v102 = *(_QWORD *)(v101 + 48);
          sub_100035C4C((uint64_t)v65, v102);
          v66 = swift_release(v101).n128_u64[0];
          if (!v65)
            goto LABEL_25;
          v161 = v65;
          v162 = v102;
          v157 = _NSConcreteStackBlock;
          v158 = 1107296256;
          v159 = sub_100030658;
          v160 = &unk_1001370D0;
          v65 = _Block_copy(&v157);
          v80 = v162;
LABEL_24:
          v66 = swift_release(v80).n128_u64[0];
          goto LABEL_25;
        }
        __break(1u);
        goto LABEL_43;
      }
LABEL_41:
      swift_bridgeObjectRetain(v20);
      v101 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v20);
      swift_bridgeObjectRelease((DARootViewController *)v20, v150, v151, v152, v153, v154, v155, v156);
      goto LABEL_22;
    }
LABEL_39:
    swift_bridgeObjectRetain(v20);
    v82 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v20);
    swift_bridgeObjectRelease((DARootViewController *)v20, v143, v144, v145, v146, v147, v148, v149);
    goto LABEL_19;
  }
  if (v81 < 0)
    v134 = *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_privateAlertAction];
  else
    v134 = v81 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_privateAlertAction]);
  v135 = _CocoaArrayWrapper.endIndex.getter(v134);
  swift_bridgeObjectRelease((DARootViewController *)v81, v136, v137, v138, v139, v140, v141, v142);
  if (v135 >= 1)
    goto LABEL_16;
}

void sub_10005BB3C()
{
  sub_100066B64(1);
}

void sub_10005BB7C(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v26;

  v18 = (uint64_t *)(a1 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert);
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 48) < 2u)
    return;
  v20 = v18[2];
  v19 = v18[3];
  v21 = *v18;
  v22 = v18[1];
  v23 = v18[4] | v18[5];
  if (!(v23 | v21 | v19 | v20 | v22))
  {
    v26 = 10;
LABEL_9:
    sub_100098BDC(v26, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    return;
  }
  v24 = v23 | v19 | v20 | v22;
  if (v21 == 1 && v24 == 0)
  {
    v26 = 11;
    goto LABEL_9;
  }
}

void sub_10005BBE0()
{
  char *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_contentUnavailableView]);

  }
  else
  {
    __break(1u);
  }
}

void sub_10005BC68()
{
  uint64_t v0;
  SEL v1;
  id v2;
  int v3;
  id v4;
  id v5;
  id v6;
  id v7;

  sub_10005BEFC(*(void **)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert), *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 24), *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 32), *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 40), *(_BYTE *)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 48));
  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_privateAlertAction), v1, v2, v3, v4, v5, v6, v7);

}

id sub_10005BCB4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullscreenAlertViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FullscreenAlertViewController()
{
  return objc_opt_self(_TtC11Diagnostics29FullscreenAlertViewController);
}

id sub_10005BD5C(uint64_t a1)
{
  void *v1;
  id v3;
  char *v4;
  id result;
  objc_super v6;

  v3 = objc_allocWithZone((Class)_UIContentUnavailableView);
  v4 = v1;
  result = objc_msgSend(v3, "initWithFrame:title:style:", 0, 0, 0.0, 0.0, 0.0, 0.0);
  if (result)
  {
    *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_contentUnavailableView] = result;
    sub_10005BE38(a1, (uint64_t)&v4[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert]);
    sub_10005BF84(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BE74);
    *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_privateAlertAction] = sub_10008B660(a1);

    v6.receiver = v4;
    v6.super_class = (Class)type metadata accessor for FullscreenAlertViewController();
    return objc_msgSendSuper2(&v6, "initWithNibName:bundle:", 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10005BE38(uint64_t a1, uint64_t a2)
{
  initializeWithTake for Alert(a2, a1);
  return a2;
}

uint64_t sub_10005BE74(uint64_t result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  void *v11;
  id v12;

  if (a7)
  {
    if (a7 != 1)
      return result;
    v11 = (void *)result;
    swift_retain(a2);
  }
  else
  {
    v11 = a2;
  }
  v12 = v11;
  sub_100035C4C(a3, a4);
  return sub_100035C4C(a5, a6);
}

void *sub_10005BEFC(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 == 1)
  {

    swift_release(a2);
  }
  else
  {
    if (a7)
      return result;

  }
  sub_100035D74(a3, a4);
  return (void *)sub_100035D74(a5, a6);
}

uint64_t sub_10005BF84(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

uint64_t sub_10005BFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BFD0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005BFD8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10005BFFC(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;

  sub_10005BB7C(*(_QWORD *)(v18 + 16), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

id sub_10005C014()
{
  id v0;
  id v1;
  id v2;
  _BOOL4 v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v0, "setFont:", v1);

  objc_msgSend(v0, "setNumberOfLines:", 0);
  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "userInterfaceLayoutDirection") != (id)1;

  objc_msgSend(v0, "setTextAlignment:", 2 * v3);
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v4);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  return v0;
}

uint64_t sub_10005C164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v10;
  id v11;
  Class isa;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v1 = sub_100035CA4((uint64_t *)&unk_10016B050);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v0 + OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date, v17, 0, 0);
  sub_10005CD7C(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_100044F0C((uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v10 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v10, "setDateStyle:", 1);
  objc_msgSend(v10, "setTimeStyle:", 1);
  objc_msgSend(v10, "setDoesRelativeDateFormatting:", 1);
  v11 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_dateLabel);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(v10, "stringFromDate:", isa);

  if (!v13)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v15 = v14;
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
  }
  objc_msgSend(v11, "setText:", v13);

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_10005C35C()
{
  char *v0;
  void *v1;

  objc_msgSend(v0, "setSelectionStyle:", 0);
  v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_rootStackView];
  objc_msgSend(v1, "setAxis:", 0);
  objc_msgSend(v1, "setDistribution:", 1);
  objc_msgSend(v1, "setDirectionalLayoutMargins:", 16.0, 16.0, 16.0, 16.0);
  objc_msgSend(v1, "setLayoutMarginsRelativeArrangement:", 1);
  return objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
}

void sub_10005C400()
{
  char *v0;
  void *v1;
  id v2;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_rootStackView];
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteNameLabel]);
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_dateLabel]);
  v2 = objc_msgSend(v0, "contentView");
  objc_msgSend(v2, "addSubview:", v1);

}

void sub_10005C498()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  SEL v23;
  id v24;
  int v25;
  id v26;
  id v27;
  id v28;
  id v29;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10010BF30;
  v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_rootStackView];
  v6 = objc_msgSend(v5, "bottomAnchor");
  v7 = objc_msgSend(v1, "contentView");
  v8 = objc_msgSend(v7, "bottomAnchor");

  v9 = objc_msgSend(v6, "constraintEqualToAnchor:", v8);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v5, "topAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "topAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v4 + 40) = v13;
  v14 = objc_msgSend(v5, "trailingAnchor");
  v15 = objc_msgSend(v1, "contentView");
  v16 = objc_msgSend(v15, "trailingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v4 + 48) = v17;
  v18 = objc_msgSend(v5, "leadingAnchor");
  v19 = objc_msgSend(v1, "contentView");
  v20 = objc_msgSend(v19, "leadingAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v4 + 56) = v21;
  specialized Array._endMutation()(v22);
  sub_100053B64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v4, v23, v24, v25, v26, v27, v28, v29);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_10005C740(uint64_t a1, uint64_t a2, DARootViewController *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSString v16;
  SEL v17;
  id v18;
  int v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  objc_super v26;

  v6 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_rootStackView;
  v7 = objc_allocWithZone((Class)UIStackView);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_defaultSpacing] = 0x4030000000000000;
  v9 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteNameLabel;
  v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v10, "setFont:", v11);

  objc_msgSend(v10, "setNumberOfLines:", 0);
  objc_msgSend(v10, "setTextAlignment:", 4);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v8[v9] = v10;
  v12 = &v8[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteName];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_dateLabel;
  *(_QWORD *)&v8[v13] = sub_10005C014();
  v14 = &v8[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date];
  v15 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);

  if (a3)
  {
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    v16 = 0;
  }
  v26.receiver = v8;
  v26.super_class = (Class)type metadata accessor for SelfServiceSessionHistoryCell(0);
  v24 = objc_msgSendSuper2(&v26, "initWithStyle:reuseIdentifier:", a1, v16);

  return v24;
}

id sub_10005C974(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  objc_super v15;

  v3 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_rootStackView;
  v4 = objc_allocWithZone((Class)UIStackView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_defaultSpacing] = 0x4030000000000000;
  v6 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteNameLabel;
  v7 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v7, "setFont:", v8);

  objc_msgSend(v7, "setNumberOfLines:", 0);
  objc_msgSend(v7, "setTextAlignment:", 4);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v5[v6] = v7;
  v9 = &v5[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteName];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_dateLabel;
  *(_QWORD *)&v5[v10] = sub_10005C014();
  v11 = &v5[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date];
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for SelfServiceSessionHistoryCell(0);
  v13 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);

  return v13;
}

uint64_t sub_10005CB4C()
{
  uint64_t v0;
  SEL v1;
  id v2;
  int v3;
  id v4;
  id v5;
  id v6;
  id v7;

  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteName + 8), v1, v2, v3, v4, v5, v6, v7);
  return sub_100044F0C(v0 + OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date);
}

id sub_10005CBAC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceSessionHistoryCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005CC4C()
{
  return type metadata accessor for SelfServiceSessionHistoryCell(0);
}

uint64_t type metadata accessor for SelfServiceSessionHistoryCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10016BD40;
  if (!qword_10016BD40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SelfServiceSessionHistoryCell);
  return result;
}

void sub_10005CC90(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_10010CDD0;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10005CD28(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 104);
  }
}

void sub_10005CD28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10016BD50)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10016BD50);
  }
}

uint64_t sub_10005CD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4((uint64_t *)&unk_10016B050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10005CDC4(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  SEL v26;
  id v27;
  int v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  int v34;

  v2 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount] != a1)
  {
    v3 = v1;
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v5 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v6 = swift_allocObject(v5, 72, 7);
    v7 = *(_QWORD *)&v1[v2];
    *(_OWORD *)(v6 + 16) = xmmword_10010BE30;
    *(_QWORD *)(v6 + 56) = &type metadata for Int;
    *(_QWORD *)(v6 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v6 + 32) = v7;
    static os_log_type_t.default.getter(v6);
    os_log(_:dso:log:type:_:)("Total Card Count = %d", v34);
    swift_bridgeObjectRelease((DARootViewController *)v6, v8, v9, v10, v11, v12, v13, v14);
    if (*(uint64_t *)&v1[v2] <= 0)
    {
      v15 = objc_msgSend(v1, "presentedViewController");
      v16 = v15;
      if (qword_10016A5E0 == -1)
      {
        v17 = &unk_100172000;
        if (v15)
          goto LABEL_8;
      }
      else
      {
        swift_once(&qword_10016A5E0, sub_10002F774);
        v17 = (_QWORD *)&unk_100172000;
        if (v16)
        {
LABEL_8:
          v18 = (void *)v17[92];
          sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
          v19 = v18;
          v20 = v16;
          v21 = static NSObject.== infix(_:_:)(v20);

          v17 = &unk_100172000;
          if ((v21 & 1) != 0)
            return;
        }
      }
      if ((*(_QWORD *)&v3[v2] & 0x8000000000000000) != 0)
      {
        v22 = qword_100172378;
        v23 = static os_log_type_t.fault.getter();
        v24 = swift_allocObject(v5, 112, 7);
        *(_OWORD *)(v24 + 16) = xmmword_10010C3D0;
        *(_QWORD *)(v24 + 56) = &type metadata for Int;
        *(_QWORD *)(v24 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v24 + 32) = a1;
        v25 = *(_QWORD *)&v3[v2];
        *(_QWORD *)(v24 + 96) = &type metadata for Int;
        *(_QWORD *)(v24 + 104) = &protocol witness table for Int;
        *(_QWORD *)(v24 + 72) = v25;
        os_log(_:dso:log:type:_:)("Dashboard view somehow was told it had negative device cards (from %@ to %@)!", 77, 2, &_mh_execute_header, v22, v23, v24);
        swift_bridgeObjectRelease((DARootViewController *)v24, v26, v27, v28, v29, v30, v31, v32);
      }
      if (qword_10016A5F8 != -1)
        swift_once(&qword_10016A5F8, sub_100048E78);
      v33 = (void *)qword_10016B3C0;
      qword_10016B3C0 = 0;

      *(_BYTE *)(v17[92] + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) = 1;
      if (qword_10016A600 != -1)
        swift_once(&qword_10016A600, sub_1000490B8);

    }
  }
}

void sub_10005D0A8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  char v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  char v27;
  char v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  void *v32;
  __n128 v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[5];
  uint64_t v46;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTime(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v39 - v15;
  v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount];
  if (v17 != a1)
  {
    v41 = v4;
    v18 = objc_allocWithZone((Class)UIBarButtonItem);
    if (v17 < 1)
    {
      v25 = objc_msgSend(v18, "initWithBarButtonSystemItem:target:action:", 0, v2, "barButtonItemTappedWithSender:");
      v26 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
      *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = v25;

      if (a1 >= 1)
      {
        v27 = sub_10006029C();
        if (v27 != 20)
        {
          v28 = v27;
          v29 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
          v40 = static OS_dispatch_queue.main.getter(v29);
          static DispatchTime.now()(v40);
          + infix(_:_:)(v14, 2.0);
          v30 = *(void (**)(char *, uint64_t))(v11 + 8);
          v30(v14, v10);
          v31 = swift_allocObject(&unk_100137488, 17, 7);
          *(_BYTE *)(v31 + 16) = v28;
          aBlock[4] = sub_100060500;
          v46 = v31;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100030658;
          aBlock[3] = &unk_1001374A0;
          v32 = _Block_copy(aBlock);
          v33 = swift_release(v46);
          static DispatchQoS.unspecified.getter(v33);
          aBlock[0] = &_swiftEmptyArrayStorage;
          v34 = sub_100035C5C();
          v35 = sub_100035CA4((uint64_t *)&unk_10016AD10);
          v36 = sub_100035CE4();
          v37 = v41;
          dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v35, v36, v41, v34);
          v38 = (void *)v40;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v9, v6, v32);
          _Block_release(v32);

          (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v37);
          (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
          v30(v16, v10);
        }
      }
    }
    else
    {
      v19 = objc_msgSend(v18, "initWithBarButtonSystemItem:target:action:", 1, v2, "barButtonItemTappedWithSender:");
      v20 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
      *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = v19;

    }
    v21 = byte_100172308;
    v22 = objc_msgSend(v2, "navigationItem");
    v23 = v22;
    if ((v21 & 1) != 0)
    {
      v24 = *(id *)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
      objc_msgSend(v23, "setLeftBarButtonItem:", v24);

    }
    else
    {
      objc_msgSend(v22, "setLeftBarButtonItem:", 0);
    }

  }
}

void sub_10005D478(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  objc_super v9;

  v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DashboardViewController();
  objc_msgSendSuper2(&v9, "viewDidAppear:", a1 & 1);
  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v4 = type metadata accessor for ModalPresentationCoordinator(0);
  v5 = sub_100036D34(v4, (uint64_t)qword_1001723D0);
  swift_beginAccess(v5, v8, 33, 0);
  sub_1000C541C();
  swift_endAccess(v8);
  v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_viewWasEverPresented] = 1;
  v6 = sub_1000E1A08();
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount] = v6;
  sub_10005CDC4(v7);
  sub_1000E1268();
}

void sub_10005D5A8()
{
  char *v0;
  char *v1;
  id v2;
  unsigned int v3;
  Swift::String v4;
  const char *v5;
  DARootViewController *v6;
  id v7;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  NSString v13;
  SEL v14;
  id v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  double v41;
  double v42;
  double v43;
  id v44;
  double v45;
  double v46;
  double v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t ObjCClassFromMetadata;
  NSString v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  NSString v64;
  id v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  id v85;
  void *v86;
  id v87;
  void *v88;
  double v89;
  double v90;
  id v91;
  id v92;
  void *v93;
  id v94;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  v3 = objc_msgSend(v2, "isCheckerBoardActive");
  swift_unknownObjectRelease(v2);
  if (v3)
  {
    v4._countAndFlagsBits = 4342623;
    v4._object = (void *)0xE300000000000000;
    String.append(_:)(v4);
  }
  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0x54534F4E47414944, (void *)0xEB00000000534349);
  v6 = (DARootViewController *)v5;
  swift_bridgeObjectRelease((DARootViewController *)0xEB00000000534349, v5, v7, v8, v9, v10, v11, v12);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6, v14, v15, v16, v17, v18, v19, v20);
  objc_msgSend(v1, "setTitle:", v13);

  v21 = objc_msgSend(v1, "navigationController");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, "navigationBar");

    objc_msgSend(v23, "setPrefersLargeTitles:", 1);
  }
  v24 = objc_msgSend(v1, "navigationController");
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v24, "navigationBar");

    v27 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v26, "setBarTintColor:", v27);

  }
  v28 = objc_msgSend(v1, "navigationController");
  if (v28)
  {
    v29 = v28;
    v30 = objc_msgSend(v28, "navigationBar");

    v31 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    objc_msgSend(v30, "setShadowImage:", v31);

  }
  v32 = objc_msgSend(v1, "view");
  if (!v32)
  {
    __break(1u);
    goto LABEL_34;
  }
  v33 = v32;
  v34 = (void *)objc_opt_self(UIView);
  v35 = objc_msgSend(v33, "semanticContentAttribute");

  v36 = objc_msgSend(v34, "userInterfaceLayoutDirectionForSemanticContentAttribute:", v35);
  v37 = objc_msgSend(v1, "navigationController");
  v38 = v37;
  if (v36)
  {
    if (!v37)
      goto LABEL_16;
    v39 = objc_msgSend(v37, "navigationBar");

    v40 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    sub_1000403CC();
    v42 = v41;

    sub_10007AB28();
    objc_msgSend(v39, "setLayoutMargins:", 0.0, 0.0, 0.0, (v42 - v43) * 0.5 + -2.0);
  }
  else
  {
    if (!v37)
      goto LABEL_16;
    v39 = objc_msgSend(v37, "navigationBar");

    v44 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    sub_1000403CC();
    v46 = v45;

    sub_10007AB28();
    objc_msgSend(v39, "setLayoutMargins:", 0.0, (v46 - v47) * 0.5 + -2.0, 0.0, 0.0);
  }

LABEL_16:
  v48 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v1, "barButtonItemTappedWithSender:");
  v49 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = v48;

  v50 = objc_msgSend(v1, "tableView");
  if (!v50)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v51 = v50;
  v52 = type metadata accessor for CardViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v52);
  v54 = String._bridgeToObjectiveC()();
  objc_msgSend(v51, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v54);

  v55 = objc_msgSend(v1, "tableView");
  if (!v55)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v56 = v55;
  v57 = type metadata accessor for CardViewSessionCell();
  v58 = swift_getObjCClassFromMetadata(v57);
  v59 = String._bridgeToObjectiveC()();
  objc_msgSend(v56, "registerClass:forCellReuseIdentifier:", v58, v59);

  v60 = objc_msgSend(v1, "tableView");
  if (!v60)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v61 = v60;
  v62 = type metadata accessor for CardViewPersistentCell();
  v63 = swift_getObjCClassFromMetadata(v62);
  v64 = String._bridgeToObjectiveC()();
  objc_msgSend(v61, "registerClass:forCellReuseIdentifier:", v63, v64);

  v65 = objc_msgSend(v1, "tableView");
  if (!v65)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v66 = v65;
  objc_msgSend(v65, "setSeparatorStyle:", 0);

  v67 = objc_msgSend(v1, "tableView");
  if (!v67)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v68 = v67;
  objc_msgSend(v67, "setAllowsSelection:", 0);

  v69 = objc_msgSend(v1, "tableView");
  if (!v69)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v70 = v69;
  objc_msgSend(v69, "setAlwaysBounceVertical:", 1);

  v71 = objc_msgSend(v1, "tableView");
  if (!v71)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v72 = v71;
  objc_msgSend(v71, "setShowsVerticalScrollIndicator:", 0);

  v73 = objc_msgSend(v1, "tableView");
  if (!v73)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v74 = v73;
  objc_msgSend(v73, "setDelegate:", v1);

  v75 = objc_msgSend(v1, "tableView");
  if (!v75)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v76 = v75;
  objc_msgSend(v75, "setDataSource:", *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager]);

  v77 = objc_msgSend(v1, "tableView");
  if (!v77)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v78 = v77;
  objc_msgSend(v77, "setRowHeight:", UITableViewAutomaticDimension);

  v79 = objc_msgSend(v1, "tableView");
  if (!v79)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v80 = v79;
  objc_msgSend(v79, "setEstimatedRowHeight:", 500.0);

  v81 = objc_msgSend(v1, "tableView");
  if (!v81)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v82 = v81;
  objc_msgSend(v81, "setEstimatedSectionFooterHeight:", 0.0);

  v83 = objc_msgSend(v1, "tableView");
  if (!v83)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v84 = v83;
  objc_msgSend(v83, "setContentInsetAdjustmentBehavior:", 0);

  v85 = objc_msgSend(v1, "tableView");
  if (!v85)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v86 = v85;
  v87 = objc_msgSend(v1, "tableView");
  if (!v87)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v88 = v87;
  objc_msgSend(v87, "bounds");
  v90 = v89;

  v91 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, v90, 15.0);
  objc_msgSend(v86, "setTableHeaderView:", v91);

  v92 = objc_msgSend(v1, "tableView");
  if (v92)
  {
    v93 = v92;
    v94 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v93, "setBackgroundColor:", v94);

    return;
  }
LABEL_49:
  __break(1u);
}

void sub_10005DE28()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void **aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void *v36;
  void (*v37)(uint64_t);
  uint64_t v38;

  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  if (qword_10016A6E8 != -1)
    swift_once(&qword_10016A6E8, sub_1000E1648);
  v3 = qword_1001723F0;
  v32 = (id)objc_opt_self(NSOperationQueue);
  v4 = objc_msgSend(v32, "mainQueue");
  v5 = swift_allocObject(&unk_1001372D0, 24, 7);
  *(_QWORD *)(v5 + 16) = v0;
  v37 = sub_10006040C;
  v38 = v5;
  aBlock = _NSConcreteStackBlock;
  v34 = 1107296256;
  v35 = sub_100048DB4;
  v36 = &unk_1001372E8;
  v6 = _Block_copy(&aBlock);
  v7 = v38;
  v8 = v0;
  v9 = objc_msgSend(v2, "addObserverForName:object:queue:usingBlock:", v3, 0, v4, v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  swift_unknownObjectRelease(v9);

  v10 = objc_msgSend(v1, "defaultCenter");
  if (qword_10016A6F8 != -1)
    swift_once(&qword_10016A6F8, sub_1000E16B0);
  v11 = qword_100172400;
  v12 = objc_msgSend(v8, "tableView");
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, "dataSource");

    v15 = objc_msgSend(v32, "mainQueue");
    v16 = swift_allocObject(&unk_100137320, 24, 7);
    *(_QWORD *)(v16 + 16) = v8;
    v37 = sub_100060414;
    v38 = v16;
    aBlock = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_100048DB4;
    v36 = &unk_100137338;
    v17 = _Block_copy(&aBlock);
    v18 = v38;
    v19 = v8;
    v20 = objc_msgSend(v10, "addObserverForName:object:queue:usingBlock:", v11, v14, v15, v17, swift_release(v18).n128_f64[0]);
    _Block_release(v17);
    swift_unknownObjectRelease(v20);

    swift_unknownObjectRelease(v14);
    v21 = objc_msgSend(v1, "defaultCenter");
    if (qword_10016A6F0 != -1)
      swift_once(&qword_10016A6F0, sub_1000E167C);
    v22 = qword_1001723F8;
    v23 = objc_msgSend(v19, "tableView");
    if (v23)
    {
      v24 = v23;
      v25 = objc_msgSend(v23, "dataSource");

      v26 = objc_msgSend(v32, "mainQueue");
      v27 = swift_allocObject(&unk_100137370, 24, 7);
      *(_QWORD *)(v27 + 16) = v19;
      v37 = sub_10006041C;
      v38 = v27;
      aBlock = _NSConcreteStackBlock;
      v34 = 1107296256;
      v35 = sub_100048DB4;
      v36 = &unk_100137388;
      v28 = _Block_copy(&aBlock);
      v29 = v38;
      v30 = v19;
      v31 = objc_msgSend(v21, "addObserverForName:object:queue:usingBlock:", v22, v25, v26, v28, swift_release(v29).n128_f64[0]);
      _Block_release(v28);
      swift_unknownObjectRelease(v31);

      swift_unknownObjectRelease(v25);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10005E248(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  __int128 v16;
  __int128 v17;

  v3 = Notification.userInfo.getter(a1);
  if (!v3)
  {
    v16 = 0u;
    v17 = 0u;
LABEL_10:
    sub_100036FA0((uint64_t)&v16, (uint64_t *)&unk_10016B610);
    goto LABEL_11;
  }
  v4 = v3;
  *(_QWORD *)&v16 = 0xD000000000000012;
  *((_QWORD *)&v16 + 1) = 0x8000000100113570;
  AnyHashable.init<A>(_:)(&v16, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v12 = sub_100072B10((uint64_t)v15), (v5 & 1) != 0))
  {
    sub_1000370B0(*(_QWORD *)(v4 + 56) + 32 * v12, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease((DARootViewController *)v4, v5, v6, v7, v8, v9, v10, v11);
  sub_100036FDC((uint64_t)v15);
  if (!*((_QWORD *)&v17 + 1))
    goto LABEL_10;
  if (!swift_dynamicCast(v15, &v16, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
  {
LABEL_11:
    v13 = 0;
    goto LABEL_12;
  }
  v13 = v15[0];
LABEL_12:
  v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount) = v13;
  sub_10005D0A8(v14);
}

void sub_10005E360(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  if (qword_10016A678 != -1)
    a1 = swift_once(&qword_10016A678, sub_10008BF34);
  v3 = qword_100172378;
  v4 = static os_log_type_t.default.getter(a1);
  os_log(_:dso:log:type:_:)("Reloading all data", 18, 2, &_mh_execute_header, v3, v4, &_swiftEmptyArrayStorage);
  v5 = objc_msgSend(a2, "tableView");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "reloadData");

  }
  else
  {
    __break(1u);
  }
}

void sub_10005E418(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  void **v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  _QWORD v35[2];
  __int128 v36;
  __int128 v37;

  v3 = Notification.userInfo.getter(a1);
  if (v3)
  {
    v4 = v3;
    strcpy((char *)v35, "cardActionsKey");
    HIBYTE(v35[1]) = -18;
    AnyHashable.init<A>(_:)(v35, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v4 + 16) && (v12 = sub_100072B10((uint64_t)&v29), (v5 & 1) != 0))
    {
      sub_1000370B0(*(_QWORD *)(v4 + 56) + 32 * v12, (uint64_t)&v36);
    }
    else
    {
      v36 = 0u;
      v37 = 0u;
    }
    swift_bridgeObjectRelease((DARootViewController *)v4, v5, v6, v7, v8, v9, v10, v11);
    sub_100036FDC((uint64_t)&v29);
    if (*((_QWORD *)&v37 + 1))
    {
      v13 = sub_100035CA4(&qword_10016BE38);
      v14 = swift_dynamicCast(v35, &v36, (char *)&type metadata for Any + 8, v13, 6);
      if ((v14 & 1) != 0)
      {
        v15 = v35[0];
        if (qword_10016A678 != -1)
          v14 = swift_once(&qword_10016A678, sub_10008BF34);
        v16 = qword_100172378;
        v17 = static os_log_type_t.default.getter(v14);
        os_log(_:dso:log:type:_:)("Beginning card arrangement changes.", 35, 2, &_mh_execute_header, v16, v17, &_swiftEmptyArrayStorage);
        v18 = objc_msgSend(a2, "tableView");
        if (v18)
        {
          v19 = v18;
          v20 = swift_allocObject(&unk_1001373C0, 32, 7);
          *(_QWORD *)(v20 + 16) = v15;
          *(_QWORD *)(v20 + 24) = a2;
          v21 = swift_allocObject(&unk_1001373E8, 32, 7);
          *(_QWORD *)(v21 + 16) = sub_100060450;
          *(_QWORD *)(v21 + 24) = v20;
          v33 = sub_10003CDD4;
          v34 = v21;
          v29 = _NSConcreteStackBlock;
          v30 = 1107296256;
          v31 = sub_100048E58;
          v32 = &unk_100137400;
          v22 = _Block_copy(&v29);
          v23 = v34;
          v24 = a2;
          swift_release(v23);
          v25 = swift_allocObject(&unk_100137438, 24, 7);
          *(_QWORD *)(v25 + 16) = v24;
          v33 = sub_100060468;
          v34 = v25;
          v29 = _NSConcreteStackBlock;
          v30 = 1107296256;
          v31 = sub_1000D25FC;
          v32 = &unk_100137450;
          v26 = _Block_copy(&v29);
          v27 = v34;
          v28 = v24;
          objc_msgSend(v19, "performBatchUpdates:completion:", v22, v26, swift_release(v27).n128_f64[0]);
          _Block_release(v26);
          _Block_release(v22);
          swift_release(v20);

        }
        else
        {
          __break(1u);
        }
      }
    }
    else
    {
      sub_100036FA0((uint64_t)&v36, (uint64_t *)&unk_10016B610);
    }
  }
}

void sub_10005E6DC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  void *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  SEL v35;
  id v36;
  int v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Class v50;
  SEL v51;
  id v52;
  int v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  SEL v70;
  id v71;
  int v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  Class isa;
  SEL v86;
  id v87;
  int v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  SEL v104;
  id v105;
  int v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  void *v112;
  Class v113;
  Class v114;
  uint64_t v115;
  DARootViewController *v116;
  __int128 v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  char *v127;
  id v128;
  uint64_t v129;
  _QWORD v130[6];

  v128 = a2;
  v123 = type metadata accessor for Move(0);
  v3 = __chkstk_darwin(v123);
  v118 = (uint64_t *)((char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  v122 = (uint64_t)&v115 - v5;
  v126 = type metadata accessor for Remove(0);
  v6 = __chkstk_darwin(v126);
  v120 = (uint64_t *)((char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v9 = (char *)&v115 - v8;
  v129 = type metadata accessor for Add(0);
  v10 = __chkstk_darwin(v129);
  v12 = (uint64_t *)((char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v14 = (char *)&v115 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return;
  v16 = a1 + 32;
  v116 = (DARootViewController *)a1;
  swift_bridgeObjectRetain(a1);
  v125 = xmmword_10010CE00;
  v124 = xmmword_10010BE30;
  v117 = xmmword_10010CDF0;
  v127 = v14;
  v121 = v9;
  while (1)
  {
    sub_10003CE84(v16, (uint64_t)v130);
    v24 = sub_100035CA4((uint64_t *)&unk_10016BE50);
    if ((swift_dynamicCast(v14, v130, v24, v129, 0) & 1) != 0)
      break;
    if (swift_dynamicCast(v9, v130, v24, v126, 0))
    {
      v58 = (uint64_t)v9;
      v59 = v120;
      sub_100060470(v58, (uint64_t)v120, type metadata accessor for Remove);
      if (qword_10016A678 != -1)
        swift_once(&qword_10016A678, sub_10008BF34);
      v60 = qword_100172378;
      v61 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v62 = swift_allocObject(v61, 152, 7);
      *(_OWORD *)(v62 + 16) = v125;
      v63 = *v59;
      v64 = v59[1];
      *(_QWORD *)(v62 + 56) = &type metadata for String;
      *(_QWORD *)(v62 + 64) = sub_100047048();
      *(_QWORD *)(v62 + 32) = v63;
      *(_QWORD *)(v62 + 40) = v64;
      v65 = (char *)v59 + *(int *)(v126 + 20);
      v66 = swift_bridgeObjectRetain(v64);
      v67 = IndexPath.section.getter(v66);
      *(_QWORD *)(v62 + 96) = &type metadata for Int;
      *(_QWORD *)(v62 + 104) = &protocol witness table for Int;
      *(_QWORD *)(v62 + 72) = v67;
      v68 = IndexPath.row.getter(v67);
      *(_QWORD *)(v62 + 136) = &type metadata for Int;
      *(_QWORD *)(v62 + 144) = &protocol witness table for Int;
      *(_QWORD *)(v62 + 112) = v68;
      v69 = static os_log_type_t.default.getter(v68);
      os_log(_:dso:log:type:_:)("Remove: [%@] %d/%d", 18, 2, &_mh_execute_header, v60, v69, v62);
      swift_bridgeObjectRelease((DARootViewController *)v62, v70, v71, v72, v73, v74, v75, v76);
      v77 = objc_msgSend(v128, "tableView");
      if (!v77)
        goto LABEL_23;
      v78 = v77;
      v79 = sub_100035CA4(&qword_10016BE60);
      v80 = type metadata accessor for IndexPath(0);
      v81 = *(_QWORD *)(v80 - 8);
      v82 = *(unsigned __int8 *)(v81 + 80);
      v83 = (v82 + 32) & ~v82;
      v84 = swift_allocObject(v79, v83 + *(_QWORD *)(v81 + 72), v82 | 7);
      *(_OWORD *)(v84 + 16) = v124;
      (*(void (**)(uint64_t, char *, uint64_t))(v81 + 16))(v84 + v83, v65, v80);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease((DARootViewController *)v84, v86, v87, v88, v89, v90, v91, v92);
      objc_msgSend(v78, "deleteRowsAtIndexPaths:withRowAnimation:", isa, 100);

      sub_1000604B4((uint64_t)v59, type metadata accessor for Remove);
      v9 = v121;
      goto LABEL_3;
    }
    if (swift_dynamicCast(v122, v130, v24, v123, 0))
    {
      v93 = v118;
      sub_100060470(v122, (uint64_t)v118, type metadata accessor for Move);
      if (qword_10016A678 != -1)
        swift_once(&qword_10016A678, sub_10008BF34);
      v119 = qword_100172378;
      v94 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v95 = swift_allocObject(v94, 232, 7);
      *(_OWORD *)(v95 + 16) = v117;
      v97 = *v93;
      v96 = v93[1];
      *(_QWORD *)(v95 + 56) = &type metadata for String;
      *(_QWORD *)(v95 + 64) = sub_100047048();
      *(_QWORD *)(v95 + 32) = v97;
      *(_QWORD *)(v95 + 40) = v96;
      v98 = swift_bridgeObjectRetain(v96);
      v99 = IndexPath.section.getter(v98);
      *(_QWORD *)(v95 + 96) = &type metadata for Int;
      *(_QWORD *)(v95 + 104) = &protocol witness table for Int;
      *(_QWORD *)(v95 + 72) = v99;
      v100 = IndexPath.row.getter(v99);
      *(_QWORD *)(v95 + 136) = &type metadata for Int;
      *(_QWORD *)(v95 + 144) = &protocol witness table for Int;
      *(_QWORD *)(v95 + 112) = v100;
      v101 = IndexPath.section.getter(v100);
      *(_QWORD *)(v95 + 176) = &type metadata for Int;
      *(_QWORD *)(v95 + 184) = &protocol witness table for Int;
      *(_QWORD *)(v95 + 152) = v101;
      v102 = IndexPath.row.getter(v101);
      *(_QWORD *)(v95 + 216) = &type metadata for Int;
      *(_QWORD *)(v95 + 224) = &protocol witness table for Int;
      *(_QWORD *)(v95 + 192) = v102;
      v103 = static os_log_type_t.default.getter(v102);
      os_log(_:dso:log:type:_:)("Move: [%@] %d/%d => %d/%d", 25, 2, &_mh_execute_header, v119, v103, v95);
      swift_bridgeObjectRelease((DARootViewController *)v95, v104, v105, v106, v107, v108, v109, v110);
      v111 = objc_msgSend(v128, "tableView");
      if (!v111)
        goto LABEL_24;
      v112 = v111;
      v113 = IndexPath._bridgeToObjectiveC()().super.isa;
      v114 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v112, "moveRowAtIndexPath:toIndexPath:", v113, v114);

      sub_1000604B4((uint64_t)v93, type metadata accessor for Move);
      v14 = v127;
      v9 = v121;
    }
LABEL_4:
    sub_10003CEEC(v130);
    v16 += 40;
    if (!--v15)
    {
      swift_bridgeObjectRelease(v116, v17, v18, v19, v20, v21, v22, v23);
      return;
    }
  }
  sub_100060470((uint64_t)v14, (uint64_t)v12, type metadata accessor for Add);
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v25 = qword_100172378;
  v26 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v27 = swift_allocObject(v26, 152, 7);
  *(_OWORD *)(v27 + 16) = v125;
  v28 = *v12;
  v29 = v12[1];
  *(_QWORD *)(v27 + 56) = &type metadata for String;
  *(_QWORD *)(v27 + 64) = sub_100047048();
  *(_QWORD *)(v27 + 32) = v28;
  *(_QWORD *)(v27 + 40) = v29;
  v30 = (char *)v12 + *(int *)(v129 + 20);
  v31 = swift_bridgeObjectRetain(v29);
  v32 = IndexPath.section.getter(v31);
  *(_QWORD *)(v27 + 96) = &type metadata for Int;
  *(_QWORD *)(v27 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v27 + 72) = v32;
  v33 = IndexPath.row.getter(v32);
  *(_QWORD *)(v27 + 136) = &type metadata for Int;
  *(_QWORD *)(v27 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v27 + 112) = v33;
  v34 = static os_log_type_t.default.getter(v33);
  os_log(_:dso:log:type:_:)("Add: [%@] %d/%d", 15, 2, &_mh_execute_header, v25, v34, v27);
  swift_bridgeObjectRelease((DARootViewController *)v27, v35, v36, v37, v38, v39, v40, v41);
  v42 = objc_msgSend(v128, "tableView");
  if (v42)
  {
    v43 = v42;
    v44 = sub_100035CA4(&qword_10016BE60);
    v45 = type metadata accessor for IndexPath(0);
    v46 = *(_QWORD *)(v45 - 8);
    v47 = *(unsigned __int8 *)(v46 + 80);
    v48 = (v47 + 32) & ~v47;
    v49 = swift_allocObject(v44, v48 + *(_QWORD *)(v46 + 72), v47 | 7);
    *(_OWORD *)(v49 + 16) = v124;
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v49 + v48, v30, v45);
    v50 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease((DARootViewController *)v49, v51, v52, v53, v54, v55, v56, v57);
    objc_msgSend(v43, "insertRowsAtIndexPaths:withRowAnimation:", v50, 100);

    sub_1000604B4((uint64_t)v12, type metadata accessor for Add);
LABEL_3:
    v14 = v127;
    goto LABEL_4;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_10005EE44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_10016A678 != -1)
    a1 = swift_once(&qword_10016A678, sub_10008BF34);
  v3 = qword_100172378;
  v4 = static os_log_type_t.default.getter(a1);
  os_log(_:dso:log:type:_:)("Finished card arrangement changes.", 34, 2, &_mh_execute_header, v3, v4, &_swiftEmptyArrayStorage);
  v5 = sub_1000E1A08();
  v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount) = v5;
  sub_10005CDC4(v6);
}

void sub_10005EEEC(char a1)
{
  char *v1;
  char v3;
  id v4;
  void *v5;
  id v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for DashboardViewController();
  objc_msgSendSuper2(&v7, "viewWillAppear:", a1 & 1);
  v3 = byte_100172308;
  v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment] = byte_100172308;
  v4 = objc_msgSend(v1, "navigationItem");
  v5 = v4;
  if ((v3 & 1) != 0)
  {
    v6 = *(id *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
    objc_msgSend(v5, "setLeftBarButtonItem:", v6);

  }
  else
  {
    objc_msgSend(v4, "setLeftBarButtonItem:", 0);
  }

}

void sub_10005EFF0()
{
  _BYTE *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;
  char v9;
  id v10;
  id v11;
  id v12;

  v1 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment;
  v2 = v0[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment];
  if (v2 != 2)
  {
    if ((v2 & 1) != 0)
      v3 = 0x2265746F6D655222;
    else
      v3 = 0x746C756166654422;
    if ((v2 & 1) != 0)
      v4 = 0xE800000000000000;
    else
      v4 = 0xE900000000000022;
    if (byte_100172308)
      v5 = 0x2265746F6D655222;
    else
      v5 = 0x746C756166654422;
    if (byte_100172308)
      v6 = 0xE800000000000000;
    else
      v6 = 0xE900000000000022;
    if (v3 == v5 && v4 == v6)
    {
      swift_bridgeObjectRelease_n(v4, 2);
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v6);
      if ((v8 & 1) == 0)
      {
        v9 = byte_100172308;
        v0[v1] = byte_100172308;
        v10 = objc_msgSend(v0, "navigationItem");
        v12 = v10;
        if ((v9 & 1) != 0)
        {
          v11 = *(id *)&v0[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
          objc_msgSend(v12, "setLeftBarButtonItem:", v11);

        }
        else
        {
          objc_msgSend(v10, "setLeftBarButtonItem:", 0);
        }

      }
    }
  }
}

uint64_t sub_10005F144(unint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  SEL v19;
  id v20;
  int v21;
  id v22;
  id v23;
  id v24;
  id v25;
  DARootViewController *v26;
  DARootViewController *v27;
  unint64_t v28;
  uint64_t v29;
  SEL v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v38;
  SEL v39;
  id v40;
  int v41;
  id v42;
  id v43;
  id v44;
  id v45;
  _BYTE v46[24];

  if (a1 > 2)
    return 0;
  v2 = a1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
     + OBJC_IVAR____TtC11Diagnostics11CardManager_cardsInView;
  swift_beginAccess(v3, v46, 0, 0);
  v4 = *(_QWORD *)v3;
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16))
    return 0;
  v5 = sub_100072B40(v2);
  if ((v6 & 1) == 0)
    return 0;
  v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v18 = v7;
    else
      v18 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease((DARootViewController *)v7, v19, v20, v21, v22, v23, v24, v25);
    v9 = v2;
    if (v2)
      goto LABEL_6;
    goto LABEL_20;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v2;
  if (!v2)
  {
LABEL_20:
    if (v8 >= 1)
    {
      v17 = (void *)0x8000000100114460;
      v16 = 0xD000000000000010;
      goto LABEL_22;
    }
    return 0;
  }
LABEL_6:
  if (v9 != 1)
    return 0;
  v10 = *(_QWORD *)v3;
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16))
    return 0;
  v11 = sub_100072B40(2u);
  if ((v12 & 1) == 0)
    return 0;
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  if ((unint64_t)v13 >> 62)
  {
    v38 = v13 < 0 ? v13 : v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v14 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease((DARootViewController *)v13, v39, v40, v41, v42, v43, v44, v45);
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= 0 && v14 < 1)
    return 0;
  v16 = 0x55535F454C505041;
  v17 = (void *)0xED000054524F5050;
LABEL_22:
  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v16, v17);
  v27 = v26;
  v28 = sub_10003F14C();
  v29 = StringProtocol.localizedUppercase.getter(&type metadata for String, v28);
  swift_bridgeObjectRelease(v27, v30, v31, v32, v33, v34, v35, v36);
  return v29;
}

_BYTE *sub_10005F32C(unint64_t a1)
{
  void *v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t *v6;
  DARootViewController *v7;
  const char *v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  DARootViewController *object;
  NSString v17;
  SEL v18;
  id v19;
  int v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void (**v26)();
  uint64_t v27;
  uint64_t v28;
  id v29;

  v3 = type metadata accessor for DashboardSectionHeaderView();
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  v5 = sub_10005F144(a1);
  v6 = (uint64_t *)&v4[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_text];
  v7 = *(DARootViewController **)&v4[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_text + 8];
  *v6 = v5;
  v6[1] = (uint64_t)v8;
  swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
  v15 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_label];
  if (v6[1])
  {
    object = (DARootViewController *)String.uppercased()()._object;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v15, "setText:", v17);

  if (!a1)
  {
    v4[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_showsButton] = 1;
    v25 = swift_allocObject(&unk_100137208, 24, 7);
    *(_QWORD *)(v25 + 16) = v1;
    v26 = (void (**)())&v4[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_buttonAction];
    v27 = *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_buttonAction];
    v28 = *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_buttonAction + 8];
    *v26 = sub_1000603C4;
    v26[1] = (void (*)())v25;
    v29 = v1;
    sub_100035D74(v27, v28);
  }
  return v4;
}

void sub_10005F454(void *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v2 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v3 = objc_msgSend(v2, "snapshot");

  v4 = objc_msgSend(v3, "status");
  if (v4 == (id)5)
  {
    v5 = swift_allocObject(&unk_100137258, 24, 7);
    *(_QWORD *)(v5 + 16) = a1;
    v6 = a1;
    v7 = sub_100088360((uint64_t)sub_1000603EC, v5, (uint64_t)sub_10005F588, 0);
  }
  else
  {
    v5 = swift_allocObject(&unk_100137230, 24, 7);
    *(_QWORD *)(v5 + 16) = a1;
    v8 = a1;
    v7 = sub_100087FEC((uint64_t)sub_1000603CC, v5, (uint64_t)sub_10005F588, 0);
  }
  v9 = v7;
  objc_msgSend(v7, "scheduleModalPresentationWithPriority:animated:presentationCompletion:", 0, 1, 0, swift_release(v5).n128_f64[0]);

}

uint64_t sub_10005F58C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  Swift::Int v22;
  __n128 v23;
  _BYTE v25[16];
  _QWORD aBlock[6];

  v5 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v6 = __chkstk_darwin(v5);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v25[-v9];
  v11 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  aBlock[4] = sub_10005FA4C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100040808;
  aBlock[3] = a3;
  v16 = _Block_copy(aBlock);
  objc_msgSend(v15, "transactionWithBlock:", v16);
  _Block_release(v16);

  objc_msgSend((id)objc_opt_self(ELSEvent), "createLoggingEventWith:", ELSEventTypeCancelledByUser);
  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v17 = type metadata accessor for ModalPresentationCoordinator(0);
  v18 = sub_100036D34(v17, (uint64_t)qword_1001723D0);
  swift_beginAccess(v18, aBlock, 33, 0);
  if ((sub_1000C65B4(a1, 1, 0, 1, 0, 0) & 1) == 0)
  {
    v19 = *(_QWORD *)(v18 + *(int *)(v17 + 24));
    v20 = a1;
    v21 = swift_bridgeObjectRetain(v19);
    v22 = sub_1000C8C58(v21, v20);

    sub_1000C4E10(v22, (uint64_t)v10);
    v23 = swift_release(v22);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v12 + 48))(v10, 1, v11, v23) == 1)
    {
      sub_100036FA0((uint64_t)v10, (uint64_t *)&unk_10016AE90);
    }
    else
    {
      sub_100060470((uint64_t)v10, (uint64_t)v14, type metadata accessor for ModalPresentationCoordinator.QueueEntry);
      sub_1000A7860((uint64_t)v14, (uint64_t)v8);
      sub_100036FA0((uint64_t)v8, (uint64_t *)&unk_10016AE90);
      sub_1000604B4((uint64_t)v14, type metadata accessor for ModalPresentationCoordinator.QueueEntry);
    }
  }
  sub_1000C541C();
  return swift_endAccess(aBlock);
}

uint64_t sub_10005F840(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  Swift::Int v17;
  __n128 v18;
  _BYTE v21[24];

  v2 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v3 = __chkstk_darwin(v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v21[-v6 - 8];
  v8 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v12 = type metadata accessor for ModalPresentationCoordinator(0);
  v13 = sub_100036D34(v12, (uint64_t)qword_1001723D0);
  swift_beginAccess(v13, v21, 33, 0);
  if ((sub_1000C65B4(a1, 1, 0, 1, 0, 0) & 1) == 0)
  {
    v14 = *(_QWORD *)(v13 + *(int *)(v12 + 24));
    v15 = a1;
    v16 = swift_bridgeObjectRetain(v14);
    v17 = sub_1000C8C58(v16, v15);

    sub_1000C4E10(v17, (uint64_t)v7);
    v18 = swift_release(v17);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v18) == 1)
    {
      sub_100036FA0((uint64_t)v7, (uint64_t *)&unk_10016AE90);
    }
    else
    {
      sub_100060470((uint64_t)v7, (uint64_t)v11, type metadata accessor for ModalPresentationCoordinator.QueueEntry);
      sub_1000A7860((uint64_t)v11, (uint64_t)v5);
      sub_100036FA0((uint64_t)v5, (uint64_t *)&unk_10016AE90);
      sub_1000604B4((uint64_t)v11, type metadata accessor for ModalPresentationCoordinator.QueueEntry);
    }
  }
  sub_1000C541C();
  return swift_endAccess(v21);
}

id sub_10005FA4C(void *a1)
{
  return objc_msgSend(a1, "setStatus:", 6);
}

void sub_10005FC04()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v1 = objc_msgSend(v0, "navigationController");
  if (v1)
  {
    v2 = v1;
    v9 = objc_msgSend(v1, "view");

    if (v9)
    {
      objc_msgSend(v9, "alpha");
      if (v3 == 0.0)
      {
        v4 = swift_allocObject(&unk_1001371B8, 24, 7);
        *(_QWORD *)(v4 + 16) = v9;
        v5 = (void *)objc_opt_self(UIView);
        aBlock[4] = sub_100036E1C;
        v11 = v4;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100030658;
        aBlock[3] = &unk_1001371D0;
        v6 = _Block_copy(aBlock);
        v7 = v11;
        v8 = v9;
        swift_retain(v4);
        swift_release(v7);
        objc_msgSend(v5, "animateWithDuration:delay:options:animations:completion:", 0x10000, v6, 0, 0.375, 0.0);
        _Block_release(v6);

        swift_release(v4);
      }
      else
      {

      }
    }
  }
}

id sub_10005FDFC(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  _BYTE *v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_sectionPadding] = 0x4034000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardCellEstimatedHeight] = 0x407F400000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_largeTitleToTableViewSpacing] = 0x402E000000000000;
  v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_viewWasEverPresented] = 0;
  v3 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager;
  v4 = objc_allocWithZone((Class)type metadata accessor for CardManager());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment] = 2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = 0;

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for DashboardViewController();
  return objc_msgSendSuper2(&v7, "initWithStyle:", a1);
}

id sub_10005FF1C(uint64_t a1, DARootViewController *a2, void *a3)
{
  _BYTE *v3;
  uint64_t v6;
  id v7;
  _BYTE *v8;
  NSString v9;
  SEL v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_sectionPadding] = 0x4034000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardCellEstimatedHeight] = 0x407F400000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_largeTitleToTableViewSpacing] = 0x402E000000000000;
  v3[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_viewWasEverPresented] = 0;
  v6 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager;
  v7 = objc_allocWithZone((Class)type metadata accessor for CardManager());
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v8[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment] = 2;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = 0;

  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2, v10, v11, v12, v13, v14, v15, v16);
  }
  else
  {
    v9 = 0;
  }
  v19.receiver = v8;
  v19.super_class = (Class)type metadata accessor for DashboardViewController();
  v17 = objc_msgSendSuper2(&v19, "initWithNibName:bundle:", v9, a3);

  return v17;
}

id sub_1000600BC(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  _BYTE *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_sectionPadding] = 0x4034000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardCellEstimatedHeight] = 0x407F400000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_largeTitleToTableViewSpacing] = 0x402E000000000000;
  v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_viewWasEverPresented] = 0;
  v3 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager;
  v4 = objc_allocWithZone((Class)type metadata accessor for CardManager());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment] = 2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for DashboardViewController();
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

void sub_1000601E8()
{
  uint64_t v0;

}

id sub_100060214()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DashboardViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DashboardViewController()
{
  return objc_opt_self(_TtC11Diagnostics23DashboardViewController);
}

uint64_t sub_10006029C()
{
  uint64_t v0;
  id v1;
  NSString v2;
  unsigned __int8 v3;
  id v4;
  unsigned int v5;

  if ((byte_100172309 & 1) != 0)
    return 12;
  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "BOOLForKey:", v2);

  v0 = 13;
  if ((v3 & 1) == 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
    v5 = objc_msgSend(v4, "isInBoxUpdateModeActive");
    swift_unknownObjectRelease(v4);
    if (v5)
      return 13;
    else
      return 20;
  }
  return v0;
}

uint64_t sub_100060388()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000603AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000603BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000603C4()
{
  uint64_t v0;

  sub_10005F454(*(void **)(v0 + 16));
}

uint64_t sub_1000603CC(void *a1)
{
  uint64_t v1;

  return sub_10005F58C(a1, *(_QWORD *)(v1 + 16), (uint64_t)&unk_100137298);
}

uint64_t sub_1000603EC(void *a1)
{
  uint64_t v1;

  return sub_10005F58C(a1, *(_QWORD *)(v1 + 16), (uint64_t)&unk_100137270);
}

void sub_10006040C(uint64_t a1)
{
  uint64_t v1;

  sub_10005E248(a1, *(_QWORD *)(v1 + 16));
}

void sub_100060414(uint64_t a1)
{
  uint64_t v1;

  sub_10005E360(a1, *(void **)(v1 + 16));
}

void sub_10006041C(uint64_t a1)
{
  uint64_t v1;

  sub_10005E418(a1, *(void **)(v1 + 16));
}

uint64_t sub_100060424()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100060450()
{
  uint64_t v0;

  sub_10005E6DC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100060458()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100060468(uint64_t a1)
{
  uint64_t v1;

  sub_10005EE44(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100060470(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000604B4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000604F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_100060500(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;

  sub_100098BDC(*(_BYTE *)(v18 + 16), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

void sub_100060508(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;

  v3 = objc_msgSend(v1, "tableView");
  if (!v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "dataSource");

  if (v5)
  {
    v6 = objc_msgSend(v1, "tableView");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v5, "tableView:numberOfRowsInSection:", v6, a1);
      swift_unknownObjectRelease(v5);

      return;
    }
    goto LABEL_7;
  }
}

double sub_1000605DC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  v2 = type metadata accessor for DashboardSectionHeaderView();
  v3 = swift_dynamicCastClass(a1, v2);
  if (v3)
  {
    v5 = v3;
    v6 = swift_allocObject(&unk_1001374D8, 24, 7);
    *(_QWORD *)(v6 + 16) = v5;
    v7 = (void *)objc_opt_self(UIView);
    v11[4] = sub_1000606F4;
    v12 = v6;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_100030658;
    v11[3] = &unk_1001374F0;
    v8 = _Block_copy(v11);
    v9 = v12;
    v10 = a1;
    swift_retain(v6);
    swift_release(v9);
    objc_msgSend(v7, "animateWithDuration:delay:options:animations:completion:", 0x10000, v8, 0, 0.375, 0.0);
    _Block_release(v8);

    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

id sub_1000606F4()
{
  uint64_t v0;

  return sub_1000DA50C(*(_QWORD *)(v0 + 16));
}

char *sub_100060764(void *a1, uint64_t a2, DARootViewController *a3, uint64_t a4, DARootViewController *a5, uint64_t a6, DARootViewController *a7, uint64_t a8, uint64_t a9)
{
  char *v9;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  void *v26;
  id v27;
  NSString v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  NSString v38;
  SEL v39;
  id v40;
  int v41;
  id v42;
  id v43;
  id v44;
  id v45;
  char *v46;
  char *v47;
  void *v48;
  char *v49;
  char *v50;
  NSString v51;
  SEL v52;
  id v53;
  int v54;
  id v55;
  id v56;
  id v57;
  id v58;
  objc_super v63;

  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultOuterPadding] = 0x4034000000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultInnerPadding] = 0x4028000000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultHorizontalPadding] = 0x4042000000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButtonPointSize] = 0x403E000000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_glyphPointSize] = 0x4051800000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageScreenSpaceRatio] = 0x3FD6666666666666;
  v13 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButton;
  v14 = (void *)objc_opt_self(UIButton);
  v15 = v9;
  *(_QWORD *)&v9[v13] = objc_msgSend(v14, "buttonWithType:", 0);
  v16 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton;
  *(_QWORD *)&v15[v16] = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  v17 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView;
  *(_QWORD *)&v15[v17] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v18 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_scrollView;
  *(_QWORD *)&v15[v18] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v19 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_titleLabel;
  v20 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v15[v19] = v20;
  v21 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_subtitleLabel;
  *(_QWORD *)&v15[v21] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v22 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_detailsLabel;
  *(_QWORD *)&v15[v22] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v23 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView;
  *(_QWORD *)&v15[v23] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v15[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_isShowingGlyph] = 0;
  v24 = v20;
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "setText:", v25);

  v26 = *(void **)&v15[v21];
  v27 = v26;
  if (a5)
  {
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5, v29, v30, v31, v32, v33, v34, v35);
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v26, "setText:", v28, a4);

  v36 = *(void **)&v15[v22];
  v37 = v36;
  if (a7)
  {
    v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a7, v39, v40, v41, v42, v43, v44, v45);
  }
  else
  {
    v38 = 0;
  }
  objc_msgSend(v36, "setText:", v38);

  v46 = &v15[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticHandler];
  *(_QWORD *)v46 = a8;
  *((_QWORD *)v46 + 1) = a9;
  swift_retain(a9);

  v63.receiver = v15;
  v63.super_class = (Class)type metadata accessor for SelfServiceSuiteDescriptionViewController();
  v47 = (char *)objc_msgSendSuper2(&v63, "initWithNibName:bundle:", 0, 0);
  v48 = *(void **)&v47[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView];
  v49 = v47;
  objc_msgSend(v48, "setImage:", a1);
  v50 = v49;
  v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3, v52, v53, v54, v55, v56, v57, v58);
  objc_msgSend(v50, "setTitle:", v51);

  swift_release(a9);
  return v50;
}

void sub_100060B0C()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  DARootViewController *v20;
  DARootViewController *v21;
  const char *v22;
  DARootViewController *v23;
  id v24;
  int v25;
  id v26;
  id v27;
  id v28;
  id v29;
  NSString v30;
  SEL v31;
  id v32;
  int v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  id v56;

  v1 = v0;
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    v4 = (void *)objc_opt_self(UIColor);
    v5 = objc_msgSend(v4, "systemBackgroundColor");
    objc_msgSend(v3, "setBackgroundColor:", v5);

    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView];
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v6, "setContentMode:", 2);
    objc_msgSend(v6, "setClipsToBounds:", 1);
    v7 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v8 = objc_msgSend(v7, "configurationWithPointSize:", 30.0);
    v54 = v4;
    v9 = objc_msgSend(v4, "systemGrayColor");
    v10 = objc_msgSend(v7, "configurationWithHierarchicalColor:", v9);

    v53 = v8;
    v11 = objc_msgSend(v10, "configurationByApplyingConfiguration:", v8);

    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v13, v12);

    v15 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButton];
    objc_msgSend(v15, "setClipsToBounds:", 1);
    v52 = v14;
    objc_msgSend(v15, "setImage:forState:", v14, 0);
    objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    sub_100037118(0, (unint64_t *)&qword_10016DFF0, UIAction_ptr);
    v16 = swift_allocObject(&unk_100137538, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16, v1);
    v17 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100062758, v16);
    objc_msgSend(v15, "addAction:forControlEvents:", v17, 64);

    v18 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton];
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
    v21 = v20;
    sub_10003FFA0(v19, v20, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000010, (void *)0x8000000100114790);
    v23 = (DARootViewController *)v22;
    swift_bridgeObjectRelease(v21, v22, v24, v25, v26, v27, v28, v29);
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23, v31, v32, v33, v34, v35, v36, v37);
    objc_msgSend(v18, "setTitle:forState:", v30, 0);

    objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v38 = swift_allocObject(&unk_100137538, 24, 7);
    swift_unknownObjectWeakInit(v38 + 16, v1);
    v39 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100062760, v38);
    objc_msgSend(v18, "addAction:forControlEvents:", v39, 64);

    v40 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_scrollView];
    objc_msgSend(v40, "setShowsVerticalScrollIndicator:", 0);
    objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v41 = (void *)objc_opt_self(UIFont);
    v55 = objc_msgSend(v41, "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
    v42 = objc_msgSend(v55, "fontDescriptor");
    v43 = objc_msgSend(v42, "fontDescriptorWithSymbolicTraits:", 2);

    if (v43)
    {
      v44 = objc_msgSend(v41, "fontWithDescriptor:size:", v43, 0.0);

      v45 = v44;
    }
    else
    {
      v45 = v55;
    }
    v46 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_titleLabel];
    v56 = v45;
    objc_msgSend(v46, "setFont:");
    objc_msgSend(v46, "setNumberOfLines:", 0);
    objc_msgSend(v46, "setTextAlignment:", 1);
    objc_msgSend(v46, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v46, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v47 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_subtitleLabel];
    v48 = objc_msgSend(v41, "preferredFontForTextStyle:", UIFontTextStyleCallout);
    objc_msgSend(v47, "setFont:", v48);

    objc_msgSend(v47, "setNumberOfLines:", 0);
    objc_msgSend(v47, "setTextAlignment:", 1);
    objc_msgSend(v47, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v47, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v49 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_detailsLabel];
    v50 = objc_msgSend(v41, "preferredFontForTextStyle:", UIFontTextStyleCallout);
    objc_msgSend(v49, "setFont:", v50);

    v51 = objc_msgSend(v54, "systemGrayColor");
    objc_msgSend(v49, "setTextColor:", v51);

    objc_msgSend(v49, "setNumberOfLines:", 0);
    objc_msgSend(v49, "setTextAlignment:", 1);
    objc_msgSend(v49, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v49, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_1000611A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

uint64_t sub_100061208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  uint64_t result;
  void *v6;
  uint64_t v7;
  void (*v8)(void);
  uint64_t v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  swift_beginAccess(v2, &v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v6 = (void *)result;
    v8 = *(void (**)(void))(result
                          + OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticHandler);
    v7 = *(_QWORD *)(result
                   + OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticHandler
                   + 8);
    swift_retain(v7);

    v8();
    return swift_release(v7);
  }
  return result;
}

void sub_1000612BC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView];
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView]);
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  objc_msgSend(v2, "addSubview:", v1);

  v4 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_scrollView];
  objc_msgSend(v4, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_titleLabel]);
  objc_msgSend(v4, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_subtitleLabel]);
  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = v5;
  objc_msgSend(v5, "addSubview:", v4);

  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v7;
  objc_msgSend(v7, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_detailsLabel]);

  v9 = objc_msgSend(v0, "view");
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v10 = v9;
  objc_msgSend(v9, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton]);

  v11 = objc_msgSend(v0, "view");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButton]);

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_10006145C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  void *v114;
  id v115;
  id v116;
  id v117;
  id v118;
  void *v119;
  void *v120;
  id v121;
  id v122;
  uint64_t v123;
  Class isa;
  SEL v125;
  id v126;
  int v127;
  id v128;
  id v129;
  id v130;
  id v131;
  int v132;
  uint64_t v133;
  void *v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  uint64_t v155;
  SEL v156;
  id v157;
  int v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  uint64_t v164;
  id v165;
  Class v166;

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v3 = swift_allocObject(v2, 248, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010CE40;
  v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView];
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = objc_msgSend(v1, "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_21;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "topAnchor");

  v9 = objc_msgSend(v5, "constraintEqualToAnchor:", v8);
  *(_QWORD *)(v3 + 32) = v9;
  v10 = objc_msgSend(v4, "leadingAnchor");
  v11 = objc_msgSend(v1, "view");
  if (!v11)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "leadingAnchor");

  v14 = objc_msgSend(v10, "constraintEqualToAnchor:", v13);
  *(_QWORD *)(v3 + 40) = v14;
  v15 = objc_msgSend(v4, "trailingAnchor");
  v16 = objc_msgSend(v1, "view");
  if (!v16)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "trailingAnchor");

  v19 = objc_msgSend(v15, "constraintEqualToAnchor:", v18);
  *(_QWORD *)(v3 + 48) = v19;
  v20 = objc_msgSend(v4, "heightAnchor");
  v21 = objc_msgSend(v1, "view");
  if (!v21)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "heightAnchor");

  v24 = objc_msgSend(v20, "constraintEqualToAnchor:multiplier:", v23, 0.35);
  *(_QWORD *)(v3 + 56) = v24;
  v25 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButton];
  v26 = objc_msgSend(v25, "topAnchor");
  v27 = objc_msgSend(v1, "view");
  if (!v27)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, "topAnchor");

  v30 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v29, 20.0);
  *(_QWORD *)(v3 + 64) = v30;
  v31 = objc_msgSend(v25, "trailingAnchor");
  v32 = objc_msgSend(v1, "view");
  if (!v32)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "trailingAnchor");

  v35 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v34, -20.0);
  *(_QWORD *)(v3 + 72) = v35;
  v36 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_scrollView];
  v37 = objc_msgSend(v36, "topAnchor");
  v38 = objc_msgSend(v4, "bottomAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, 20.0);

  *(_QWORD *)(v3 + 80) = v39;
  v40 = objc_msgSend(v36, "leadingAnchor");
  v41 = objc_msgSend(v1, "view");
  if (!v41)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v42 = v41;
  v163 = v4;
  v164 = v2;
  v43 = objc_msgSend(v41, "leadingAnchor");

  v44 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v43, 36.0);
  *(_QWORD *)(v3 + 88) = v44;
  v45 = objc_msgSend(v36, "trailingAnchor");
  v46 = objc_msgSend(v1, "view");
  if (!v46)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v47 = v46;
  v48 = objc_msgSend(v46, "trailingAnchor");

  v49 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v48, -36.0);
  *(_QWORD *)(v3 + 96) = v49;
  v50 = objc_msgSend(v36, "bottomAnchor");
  v165 = *(id *)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton];
  v51 = objc_msgSend(v165, "topAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v51, -20.0);

  *(_QWORD *)(v3 + 104) = v52;
  v53 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_titleLabel];
  v54 = objc_msgSend(v53, "topAnchor");
  v55 = objc_msgSend(v36, "topAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v3 + 112) = v56;
  v57 = objc_msgSend(v53, "leadingAnchor");
  v58 = objc_msgSend(v36, "leadingAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v3 + 120) = v59;
  v60 = objc_msgSend(v53, "trailingAnchor");
  v61 = objc_msgSend(v36, "trailingAnchor");
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

  *(_QWORD *)(v3 + 128) = v62;
  v63 = objc_msgSend(v53, "widthAnchor");
  v64 = objc_msgSend(v36, "widthAnchor");
  v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

  *(_QWORD *)(v3 + 136) = v65;
  v66 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_subtitleLabel];
  v67 = objc_msgSend(v66, "topAnchor");
  v68 = objc_msgSend(v53, "bottomAnchor");
  v69 = objc_msgSend(v67, "constraintEqualToAnchor:constant:", v68, 12.0);

  *(_QWORD *)(v3 + 144) = v69;
  v70 = objc_msgSend(v66, "leadingAnchor");
  v71 = objc_msgSend(v36, "leadingAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v3 + 152) = v72;
  v73 = objc_msgSend(v66, "trailingAnchor");
  v74 = objc_msgSend(v36, "trailingAnchor");
  v75 = objc_msgSend(v73, "constraintEqualToAnchor:", v74);

  *(_QWORD *)(v3 + 160) = v75;
  v76 = objc_msgSend(v66, "bottomAnchor");
  v77 = objc_msgSend(v36, "bottomAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v3 + 168) = v78;
  v79 = objc_msgSend(v66, "widthAnchor");
  v80 = objc_msgSend(v36, "widthAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

  *(_QWORD *)(v3 + 176) = v81;
  v82 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_detailsLabel];
  v83 = objc_msgSend(v82, "leadingAnchor");
  v84 = objc_msgSend(v1, "view");
  if (!v84)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v85 = v84;
  v86 = objc_msgSend(v84, "leadingAnchor");

  v87 = objc_msgSend(v83, "constraintEqualToAnchor:constant:", v86, 36.0);
  *(_QWORD *)(v3 + 184) = v87;
  v88 = objc_msgSend(v82, "trailingAnchor");
  v89 = objc_msgSend(v1, "view");
  if (!v89)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v90 = v89;
  v91 = objc_msgSend(v89, "trailingAnchor");

  v92 = objc_msgSend(v88, "constraintEqualToAnchor:constant:", v91, -36.0);
  *(_QWORD *)(v3 + 192) = v92;
  v93 = objc_msgSend(v165, "bottomAnchor");
  v94 = objc_msgSend(v82, "topAnchor");
  v95 = objc_msgSend(v93, "constraintEqualToAnchor:constant:", v94, -20.0);

  *(_QWORD *)(v3 + 200) = v95;
  v96 = objc_msgSend(v165, "leadingAnchor");
  v97 = objc_msgSend(v1, "view");
  if (!v97)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v98 = v97;
  v99 = objc_msgSend(v97, "leadingAnchor");

  v100 = objc_msgSend(v96, "constraintEqualToAnchor:constant:", v99, 36.0);
  *(_QWORD *)(v3 + 208) = v100;
  v101 = objc_msgSend(v165, "trailingAnchor");
  v102 = objc_msgSend(v1, "view");
  if (!v102)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v103 = v102;
  v104 = objc_msgSend(v102, "trailingAnchor");

  v105 = objc_msgSend(v101, "constraintEqualToAnchor:constant:", v104, -36.0);
  *(_QWORD *)(v3 + 216) = v105;
  v106 = objc_msgSend(v82, "bottomAnchor");
  v107 = objc_msgSend(v1, "view");
  if (!v107)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v108 = v107;
  v109 = objc_msgSend(v107, "safeAreaLayoutGuide");

  v110 = objc_msgSend(v109, "bottomAnchor");
  v111 = objc_msgSend(v106, "constraintEqualToAnchor:constant:", v110, -12.0);

  *(_QWORD *)(v3 + 224) = v111;
  v112 = objc_msgSend(v82, "leadingAnchor");
  v113 = objc_msgSend(v1, "view");
  if (!v113)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v114 = v113;
  v115 = objc_msgSend(v113, "leadingAnchor");

  v116 = objc_msgSend(v112, "constraintEqualToAnchor:constant:", v115, 36.0);
  *(_QWORD *)(v3 + 232) = v116;
  v117 = objc_msgSend(v82, "trailingAnchor");
  v118 = objc_msgSend(v1, "view");
  if (!v118)
  {
LABEL_34:
    __break(1u);
    return;
  }
  v119 = v118;
  v120 = (void *)objc_opt_self(NSLayoutConstraint);
  v121 = objc_msgSend(v119, "trailingAnchor");

  v122 = objc_msgSend(v117, "constraintEqualToAnchor:constant:", v121, -36.0);
  *(_QWORD *)(v3 + 240) = v122;
  specialized Array._endMutation()(v123);
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v3, v125, v126, v127, v128, v129, v130, v131);
  objc_msgSend(v120, "activateConstraints:", isa);

  v132 = v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_isShowingGlyph];
  v133 = swift_allocObject(v164, 64, 7);
  *(_OWORD *)(v133 + 16) = xmmword_10010BF30;
  v134 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView];
  if (v132 == 1)
  {
    v135 = objc_msgSend(v134, "heightAnchor");
    v136 = objc_msgSend(v135, "constraintEqualToConstant:", 70.0);

    *(_QWORD *)(v133 + 32) = v136;
    v137 = objc_msgSend(v134, "widthAnchor");
    v138 = objc_msgSend(v134, "heightAnchor");
    v139 = objc_msgSend(v137, "constraintEqualToAnchor:", v138);

    *(_QWORD *)(v133 + 40) = v139;
    v140 = objc_msgSend(v134, "centerXAnchor");
    v141 = objc_msgSend(v163, "centerXAnchor");
    v142 = objc_msgSend(v140, "constraintEqualToAnchor:", v141);

    *(_QWORD *)(v133 + 48) = v142;
    v143 = objc_msgSend(v134, "centerYAnchor");
    v144 = objc_msgSend(v163, "centerYAnchor");
  }
  else
  {
    v145 = objc_msgSend(v134, "topAnchor");
    v146 = objc_msgSend(v163, "topAnchor");
    v147 = objc_msgSend(v145, "constraintEqualToAnchor:", v146);

    *(_QWORD *)(v133 + 32) = v147;
    v148 = objc_msgSend(v134, "leadingAnchor");
    v149 = objc_msgSend(v163, "leadingAnchor");
    v150 = objc_msgSend(v148, "constraintEqualToAnchor:", v149);

    *(_QWORD *)(v133 + 40) = v150;
    v151 = objc_msgSend(v134, "trailingAnchor");
    v152 = objc_msgSend(v163, "trailingAnchor");
    v153 = objc_msgSend(v151, "constraintEqualToAnchor:", v152);

    *(_QWORD *)(v133 + 48) = v153;
    v143 = objc_msgSend(v134, "bottomAnchor");
    v144 = objc_msgSend(v163, "bottomAnchor");
  }
  v154 = objc_msgSend(v143, "constraintEqualToAnchor:", v144);

  *(_QWORD *)(v133 + 56) = v154;
  specialized Array._endMutation()(v155);
  v166 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v133, v156, v157, v158, v159, v160, v161, v162);
  objc_msgSend(v120, "activateConstraints:", v166);

}

uint64_t sub_100062598()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView));
  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticHandler
                                 + 8));
}

id sub_100062638()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceSuiteDescriptionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SelfServiceSuiteDescriptionViewController()
{
  return objc_opt_self(_TtC11Diagnostics41SelfServiceSuiteDescriptionViewController);
}

uint64_t sub_100062734()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100062758(uint64_t a1)
{
  uint64_t v1;

  sub_1000611A8(a1, v1);
}

uint64_t sub_100062760(uint64_t a1)
{
  uint64_t v1;

  return sub_100061208(a1, v1);
}

void sub_100062768()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultOuterPadding] = 0x4034000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultInnerPadding] = 0x4028000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultHorizontalPadding] = 0x4042000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButtonPointSize] = 0x403E000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_glyphPointSize] = 0x4051800000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageScreenSpaceRatio] = 0x3FD6666666666666;
  v1 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButton;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v2 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton;
  *(_QWORD *)&v0[v2] = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  v3 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_scrollView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v5 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_titleLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_subtitleLabel;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_detailsLabel;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_isShowingGlyph] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100112360, "Diagnostics/SelfServiceSuiteDescriptionViewController.swift", 59, 2, 45, 0);
  __break(1u);
}

id sub_100062958()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView);
  objc_msgSend(v1, "setHidesWhenStopped:", 0);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v1, "setColor:", v2);

  objc_msgSend(v1, "startAnimating");
  objc_msgSend(v1, "setAlpha:", 0.0);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView);
  objc_msgSend(v3, "setAlpha:", 0.0);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView);
  objc_msgSend(v4, "setContentMode:", 1);
  objc_msgSend(v4, "setAlpha:", 0.0);
  return objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
}

id sub_100062A74()
{
  char *v0;

  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView]);
  return objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView]);
}

void sub_100062AD4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  SEL v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  Class isa;

  v1 = v0;
  v51 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v3 = swift_allocObject(v2, 128, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010CE90;
  v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView];
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = objc_msgSend(v1, "topAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v3 + 32) = v7;
  v8 = objc_msgSend(v4, "bottomAnchor");
  v9 = objc_msgSend(v1, "bottomAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v3 + 40) = v10;
  v11 = objc_msgSend(v4, "leadingAnchor");
  v12 = objc_msgSend(v1, "leadingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v3 + 48) = v13;
  v14 = objc_msgSend(v4, "trailingAnchor");
  v15 = objc_msgSend(v1, "trailingAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v3 + 56) = v16;
  v17 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
  v18 = objc_msgSend(v17, "topAnchor");
  v19 = objc_msgSend(v1, "topAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v3 + 64) = v20;
  v21 = objc_msgSend(v17, "bottomAnchor");
  v22 = objc_msgSend(v1, "bottomAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v3 + 72) = v23;
  v24 = objc_msgSend(v17, "leadingAnchor");
  v25 = objc_msgSend(v1, "leadingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v3 + 80) = v26;
  v27 = objc_msgSend(v17, "trailingAnchor");
  v28 = objc_msgSend(v1, "trailingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v3 + 88) = v29;
  v30 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView];
  v31 = objc_msgSend(v30, "topAnchor");
  v32 = objc_msgSend(v1, "topAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v3 + 96) = v33;
  v34 = objc_msgSend(v30, "bottomAnchor");
  v35 = objc_msgSend(v1, "bottomAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v3 + 104) = v36;
  v37 = objc_msgSend(v30, "leadingAnchor");
  v38 = objc_msgSend(v1, "leadingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v3 + 112) = v39;
  v40 = objc_msgSend(v30, "trailingAnchor");
  v41 = objc_msgSend(v1, "trailingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v3 + 120) = v42;
  specialized Array._endMutation()(v43);
  sub_100053B64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v3, v44, v45, v46, v47, v48, v49, v50);
  objc_msgSend(v51, "activateConstraints:", isa);

}

void sub_100062FF8(char a1)
{
  __asm { BR              X10 }
}

id sub_100063048(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t aBlock, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  char v30;
  uint64_t v31;
  id (*v32)();
  char *v33;
  void *v34;
  double v35;
  void *v36;
  uint64_t v37;
  char *v38;
  double v39;
  char *v40;
  void *v41;
  double v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  _QWORD v49[5];
  uint64_t v50;

  v34 = *(void **)&v33[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView];
  objc_msgSend(v34, "alpha");
  if (v35 == 0.0)
  {
    if ((v30 & 1) != 0)
    {
      sub_10004F1F4(v34, v32, v31);
LABEL_5:
      v36 = *(void **)&v33[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
      v37 = swift_allocObject(&unk_1001377B0, 24, 7);
      *(_QWORD *)(v37 + 16) = v33;
      v38 = v33;
      sub_10004F3A4(v36, sub_100063E9C, v37);
      *(_QWORD *)&v39 = swift_release(v37).n128_u64[0];
      goto LABEL_9;
    }
    objc_msgSend(v34, "setAlpha:", 1.0);
    if (v32)
      ((void (*)(uint64_t))v32)(1);
  }
  else if ((v30 & 1) != 0)
  {
    goto LABEL_5;
  }
  v40 = *(char **)&v33[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
  objc_msgSend(v40, "setAlpha:", 0.0);
  objc_msgSend(*(id *)&v40[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView], "hideCheck");
LABEL_9:
  v41 = *(void **)&v33[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView];
  objc_msgSend(v41, "alpha", v39);
  if (v42 == 1.0)
  {
    if ((v30 & 1) != 0)
    {
      objc_msgSend(v41, "alpha");
      if (v42 == 1.0)
      {
        v43 = swift_allocObject(&unk_100137760, 24, 7);
        *(_QWORD *)(v43 + 16) = v41;
        v44 = (void *)objc_opt_self(UIView);
        v49[4] = sub_10003D030;
        v50 = v43;
        v49[0] = _NSConcreteStackBlock;
        v49[1] = 1107296256;
        v49[2] = sub_100030658;
        v49[3] = &unk_100137778;
        v45 = _Block_copy(v49);
        v46 = v50;
        v47 = v41;
        swift_retain(v43);
        swift_release(v46);
        objc_msgSend(v44, "animateWithDuration:delay:options:animations:completion:", 0x20000, v45, 0, 0.125, 0.0);
        _Block_release(v45);
        *(_QWORD *)&v42 = swift_release(v43).n128_u64[0];
      }
    }
    else
    {
      objc_msgSend(v41, "setAlpha:", 0.0);
    }
  }
  return objc_msgSend(v34, "startAnimating", v42);
}

void sub_1000638C0(char a1, void (*a2)(uint64_t), uint64_t a3)
{
  char *v3;
  char *v4;
  char *v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  _QWORD *v13;
  char *v14;
  id v15;
  CGRect v16;
  CGRect v17;

  v4 = v3;
  v8 = *(char **)&v4[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
  v9 = OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView;
  v10 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView], "layer");
  objc_msgSend(v10, "cornerRadius");
  v12 = v11;

  objc_msgSend(v4, "bounds");
  if (v12 == CGRectGetWidth(v16) * 0.5)
  {
    if ((a1 & 1) != 0)
    {
LABEL_3:
      v13 = (_QWORD *)swift_allocObject(&unk_100137580, 40, 7);
      v13[2] = v4;
      v13[3] = a2;
      v13[4] = a3;
      v14 = v4;
      sub_100035C4C((uint64_t)a2, a3);
      sub_10004F1F4(v8, (id (*)())sub_100063E78, (uint64_t)v13);
      swift_release(v13);
      return;
    }
  }
  else
  {
    v15 = objc_msgSend(*(id *)&v8[v9], "layer");
    objc_msgSend(v4, "bounds");
    objc_msgSend(v15, "setCornerRadius:", CGRectGetWidth(v17) * 0.5);

    if ((a1 & 1) != 0)
      goto LABEL_3;
  }
  objc_msgSend(v8, "setAlpha:", 1.0);
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView], "showCheck");
  if (a2)
    a2(1);
}

void sub_100063A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  double v11;
  id v12;
  _QWORD v13[5];
  uint64_t v14;

  v6 = *(char **)(a2 + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView);
  objc_msgSend(v6, "setAlpha:", 1.0);
  v7 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView];
  if (a3)
  {
    v13[4] = a3;
    v14 = a4;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1000D25FC;
    v13[3] = &unk_100137598;
    v8 = _Block_copy(v13);
    v9 = v14;
    v10 = v7;
    sub_100035C4C(a3, a4);
    *(_QWORD *)&v11 = swift_release(v9).n128_u64[0];
  }
  else
  {
    v12 = v7;
    v8 = 0;
  }
  objc_msgSend(v7, "playCheckAnimationWithCompletion:", v8, v11);
  _Block_release(v8);

}

id sub_100063B58(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v9 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView;
  v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "initWithActivityIndicatorStyle:", 100);
  v12 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView;
  v13 = type metadata accessor for CheckmarkView();
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");
  v14 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView;
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for TestRunnerIconView();
  return objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
}

id sub_100063C6C(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v3 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView;
  v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithActivityIndicatorStyle:", 100);
  v6 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView;
  v7 = type metadata accessor for CheckmarkView();
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "init");
  v8 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for TestRunnerIconView();
  v9 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);

  return v9;
}

void sub_100063D70()
{
  uint64_t v0;

}

id sub_100063DAC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TestRunnerIconView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TestRunnerIconView()
{
  return objc_opt_self(_TtC11Diagnostics18TestRunnerIconView);
}

uint64_t sub_100063E44()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100063E78(uint64_t a1)
{
  uint64_t *v1;

  sub_100063A68(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100063E84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100063E94(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100063EA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100063EC4()
{
  uint64_t v0;
  char *v1;

  v1 = *(char **)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView);
  objc_msgSend(v1, "setAlpha:", 0.0);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView], "hideCheck");
}

id sub_100063F90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  char *v7;
  unint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  DARootViewController *v14;
  NSString v15;
  SEL v16;
  id v17;
  int v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  _OWORD v28[2];
  uint64_t v29;

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016AD20);
  __chkstk_darwin(v2);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics11GlyphButton_button];
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel];
  objc_msgSend(v6, "setTextColor:", *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonLabelColor]);
  objc_msgSend(v6, "setTextAlignment:", 1);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = &v1[OBJC_IVAR____TtC11Diagnostics11GlyphButton_action];
  v8 = v1[OBJC_IVAR____TtC11Diagnostics11GlyphButton_action + 24];
  if ((_DWORD)v8 != 7)
  {
    v29 = 0;
    memset(v28, 0, sizeof(v28));
    v9 = sub_10009E1FC((uint64_t)v28, v8);
    objc_msgSend(v5, "setImage:forState:", v9, 0);

    v10 = objc_msgSend(v5, "imageView");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "setContentMode:", 4);

    }
    v12 = objc_msgSend(v5, "imageView");
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, "setClipsToBounds:", 0);

    }
    objc_msgSend(v5, "setClipsToBounds:", 0);
  }
  v14 = (DARootViewController *)*((_QWORD *)v7 + 1);
  swift_bridgeObjectRetain(v14);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
  objc_msgSend(v6, "setText:", v15);

  objc_msgSend(v6, "setFont:", *((_QWORD *)v7 + 2));
  v23 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v24 = objc_msgSend(v23, "userInterfaceIdiom");

  if (v24 == (id)6)
  {
    sub_100037118(0, &qword_10016AD38, UIHoverStyle_ptr);
    static UIShape.circle.getter();
    v25 = type metadata accessor for UIShape(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v4, 0, 1, v25);
    v26 = (void *)UIHoverStyle.init(shape:)(v4);
    objc_msgSend(v5, "setHoverStyle:", v26);

  }
  objc_msgSend(v5, "addTarget:action:forControlEvents:", v1, "handleTouchUpInside", 64);
  return objc_msgSend(v1, "addTarget:action:forControlEvents:", v1, "handleTouchUpInside", 64);
}

id sub_10006426C()
{
  char *v0;

  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics11GlyphButton_button]);
  return objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel]);
}

void sub_1000642B4()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  SEL v50;
  id v51;
  int v52;
  id v53;
  id v54;
  id v55;
  id v56;
  char *v57;
  Class isa;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_button);
  v2 = objc_msgSend(v1, "widthAnchor");
  v3 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonSize;
  v4 = objc_msgSend(v2, "constraintEqualToConstant:", *(double *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonSize));

  v5 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonWidthConstraint;
  v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonWidthConstraint);
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonWidthConstraint) = v4;
  v7 = v5;
  v57 = (char *)v5;

  v8 = objc_msgSend(v1, "heightAnchor");
  v9 = objc_msgSend(v8, "constraintEqualToConstant:", *(double *)((char *)v0 + v3));

  v10 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonHeightConstraint;
  v11 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonHeightConstraint);
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonHeightConstraint) = v9;

  LODWORD(v12) = 1148829696;
  objc_msgSend(*(id *)((char *)v0 + v7), "setPriority:", v12);
  LODWORD(v13) = 1148829696;
  objc_msgSend(*(id *)((char *)v0 + v10), "setPriority:", v13);
  v14 = objc_msgSend(v1, "topAnchor");
  v15 = objc_msgSend(v0, "topAnchor");
  v16 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGap;
  v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, *(double *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGap));

  v18 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTopMarginConstraint;
  v19 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTopMarginConstraint);
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTopMarginConstraint) = v17;

  v20 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel);
  v21 = objc_msgSend(v20, "topAnchor");
  v22 = objc_msgSend(v1, "bottomAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, *(double *)((char *)v0 + v16));

  v24 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGapConstraint;
  v25 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGapConstraint);
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGapConstraint) = v23;

  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v27 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v28 = swift_allocObject(v27, 96, 7);
  *(_OWORD *)(v28 + 16) = xmmword_10010CED0;
  v29 = *(void **)((char *)v0 + v18);
  *(_QWORD *)(v28 + 32) = v29;
  v30 = v29;
  v31 = objc_msgSend(v1, "centerXAnchor");
  v32 = objc_msgSend(v0, "centerXAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  v34 = *(void **)((char *)v0 + v10);
  *(_QWORD *)(v28 + 40) = v33;
  *(_QWORD *)(v28 + 48) = v34;
  v35 = *(void **)&v57[(_QWORD)v0];
  v36 = *(void **)((char *)v0 + v24);
  *(_QWORD *)(v28 + 56) = v35;
  *(_QWORD *)(v28 + 64) = v36;
  v37 = v34;
  v38 = v35;
  v39 = v36;
  v40 = objc_msgSend(v20, "bottomAnchor");
  v41 = objc_msgSend(v0, "bottomAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v28 + 72) = v42;
  v43 = objc_msgSend(v20, "leadingAnchor");
  v44 = objc_msgSend(v0, "leadingAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  *(_QWORD *)(v28 + 80) = v45;
  v46 = objc_msgSend(v20, "trailingAnchor");
  v47 = objc_msgSend(v0, "trailingAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

  *(_QWORD *)(v28 + 88) = v48;
  specialized Array._endMutation()(v49);
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v28, v50, v51, v52, v53, v54, v55, v56);
  objc_msgSend(v26, "activateConstraints:", isa);

}

void sub_10006478C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_action + 8);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_action + 16);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_action + 40));

  swift_bridgeObjectRelease(v1);
}

id sub_10006483C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GlyphButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for GlyphButton()
{
  return objc_opt_self(_TtC11Diagnostics11GlyphButton);
}

id sub_100064940()
{
  void **v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v8[5];
  uint64_t v9;

  v1 = *v0;
  v2 = swift_allocObject(&unk_100137810, 24, 7);
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (void *)objc_opt_self(UIView);
  v8[4] = sub_100064A6C;
  v9 = v2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100030658;
  v8[3] = &unk_100137828;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v1;
  swift_retain(v2);
  swift_release(v5);
  objc_msgSend(v3, "animateWithDuration:delay:options:animations:completion:", 0x20000, v4, 0, 0.125, 0.0);
  _Block_release(v4);
  return objc_msgSend(v6, "setUserInteractionEnabled:", 0, swift_release(v2).n128_f64[0]);
}

uint64_t sub_100064A48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100064A6C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel), "setAlpha:", 0.5);
}

uint64_t sub_100064A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100064A9C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100064AA4(__int128 *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char *v30;
  __int128 v31;
  void *v32;
  uint64_t v33;
  id v34;
  objc_class *v35;
  id v36;
  uint64_t v38;
  uint64_t v39;
  objc_super v40;
  __int128 v41;

  v3 = sub_100035CA4((uint64_t *)&unk_10016E470);
  __chkstk_darwin(v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIButton.Configuration(0);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v38 - v10;
  v12 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonWidthConstraint;
  v13 = objc_allocWithZone((Class)NSLayoutConstraint);
  v14 = v1;
  *(_QWORD *)&v1[v12] = objc_msgSend(v13, "init");
  v15 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonHeightConstraint;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v16 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTopMarginConstraint;
  *(_QWORD *)&v14[v16] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v17 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGapConstraint;
  *(_QWORD *)&v14[v17] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGap] = 0x4024000000000000;
  v14[OBJC_IVAR____TtC11Diagnostics11GlyphButton_topImageGapEnabled] = 1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonSize] = 0x4046800000000000;
  v18 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonLabelColor;
  *(_QWORD *)&v14[v18] = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v19 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel;
  *(_QWORD *)&v14[v19] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v20 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v21 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v21, "defaultFontSize");
  v22 = objc_msgSend(v21, "systemFontOfSize:");
  v23 = objc_msgSend(v20, "scaledFontForFont:", v22);

  static UIButton.Configuration.plain()();
  v24 = swift_allocObject(&unk_100137860, 24, 7);
  *(_QWORD *)(v24 + 16) = v23;
  v25 = v23;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10003CF9C, v24);
  v26 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v5, 0, 1, v26);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v5);

  sub_100037118(0, &qword_10016AD30, UIButton_ptr);
  v28 = v38;
  v27 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v9, v11, v39);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11Diagnostics11GlyphButton_button] = UIButton.init(configuration:primaryAction:)(v9, 0);
  v29 = a1[1];
  v41 = *a1;
  v30 = &v14[OBJC_IVAR____TtC11Diagnostics11GlyphButton_action];
  v31 = a1[2];
  *(_OWORD *)v30 = v41;
  *((_OWORD *)v30 + 1) = v29;
  v32 = (void *)*((_QWORD *)a1 + 2);
  v33 = *((_QWORD *)a1 + 5);
  *((_OWORD *)v30 + 2) = v31;
  sub_10004FF50((uint64_t)&v41);
  v34 = v32;
  swift_retain(v33);

  v35 = (objc_class *)type metadata accessor for GlyphButton();
  v40.receiver = v14;
  v40.super_class = v35;
  v36 = objc_msgSendSuper2(&v40, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v27);
  return v36;
}

void sub_100064E40()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonWidthConstraint;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v2 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonHeightConstraint;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v3 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTopMarginConstraint;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v4 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGapConstraint;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGap] = 0x4024000000000000;
  v0[OBJC_IVAR____TtC11Diagnostics11GlyphButton_topImageGapEnabled] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonSize] = 0x4046800000000000;
  v5 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonLabelColor;
  *(_QWORD *)&v0[v5] = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v6 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100112360, "Diagnostics/GlyphButton.swift", 29, 2, 71, 0);
  __break(1u);
}

uint64_t sub_100064FA0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10010D000);
  v2 = swift_getKeyPath(&unk_10010D028);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

id sub_100065014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  NSString v14;
  id v15;
  NSString v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  void *v27;
  void **v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  void **v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  _QWORD *v65;
  void **aBlock;
  uint64_t v67;
  uint64_t (*v68)(uint64_t);
  void *v69;
  void (*v70)();
  uint64_t v71;

  v64 = type metadata accessor for DispatchWorkItemFlags(0);
  v1 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v3 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS.QoSClass(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock);
  objc_msgSend(v12, "lock");
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) & 1) != 0)
    return objc_msgSend(v12, "unlock");
  v61 = v11;
  v62 = v9;
  v56 = v7;
  v57 = v5;
  v58 = v4;
  v59 = v3;
  v60 = v1;
  v63 = v12;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 1;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v14, "lastPathComponent");

  v16 = v15;
  v17 = v15;
  v18 = v0;
  if (!v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v20 = v19;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v22 = v21;
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v24 = v23;
  swift_bridgeObjectRetain(v23);
  v25 = v15;
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v27 = (void *)objc_opt_self(UIImage);
  v28 = (void **)objc_msgSend(v27, "_systemImageNamed:", v26);

  if (v28)
  {
    swift_bridgeObjectRelease(v24);

    KeyPath = swift_getKeyPath(&unk_10010D000);
    v30 = swift_getKeyPath(&unk_10010D028);
    aBlock = v28;
    LOBYTE(v67) = 0;
    swift_retain(v18);
    v31 = v18;
    v32 = KeyPath;
    v33 = v30;
  }
  else
  {
    v34 = objc_msgSend(v17, "stringByDeletingLastPathComponent");

    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v37 = v36;

    swift_bridgeObjectRelease(v37);
    v38 = HIBYTE(v37) & 0xF;
    if ((v37 & 0x2000000000000000) == 0)
      v38 = v35 & 0xFFFFFFFFFFFFLL;
    if (v38)
    {
      swift_bridgeObjectRelease(v24);
      v39 = objc_msgSend(v16, "stringByDeletingLastPathComponent");

      static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v24 = v40;

    }
    else
    {

    }
    v41 = v62;
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    v43 = (void **)objc_msgSend(v27, "imageNamed:", v42);

    v44 = v61;
    if (!v43)
    {
      sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
      (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v44, enum case for DispatchQoS.QoSClass.default(_:), v8);
      v47 = (void *)static OS_dispatch_queue.global(qos:)(v44);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v8);
      v70 = sub_1000660F0;
      v71 = v18;
      aBlock = _NSConcreteStackBlock;
      v67 = 1107296256;
      v68 = sub_100030658;
      v69 = &unk_100137930;
      v48 = _Block_copy(&aBlock);
      swift_retain(v18);
      v49 = v56;
      static DispatchQoS.unspecified.getter(v50);
      v65 = _swiftEmptyArrayStorage;
      v51 = sub_10002F158((unint64_t *)&qword_10016B5F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v52 = sub_100035CA4((uint64_t *)&unk_10016AD10);
      v53 = sub_100035CE4();
      v54 = v59;
      v55 = v64;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v65, v52, v53, v64, v51);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v49, v54, v48);
      _Block_release(v48);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v54, v55);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v49, v58);
      swift_release(v71);
      return objc_msgSend(v63, "unlock");
    }
    v45 = swift_getKeyPath(&unk_10010D000);
    v46 = swift_getKeyPath(&unk_10010D028);
    aBlock = v43;
    LOBYTE(v67) = 0;
    swift_retain(v18);
    v31 = v18;
    v32 = v45;
    v33 = v46;
  }
  static Published.subscript.setter(&aBlock, v31, v32, v33);
  return objc_msgSend(v63, "unlock");
}

void sub_10006553C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  if (qword_10016A658 != -1)
    swift_once(&qword_10016A658, sub_10006E428);
  v2 = qword_100172360;
  v3 = *(void **)(qword_100172360 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v3)
  {
    v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8);
    swift_retain_n(a1, 2);
    v6 = objc_msgSend(v3, "serialNumber");
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = v8;

    v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager);
    swift_retain(a1);
    sub_1000A6158(v7, v9, v5, v4, v10, a1);
    swift_bridgeObjectRelease(v9);
    swift_release_n(a1, 3);
  }
  else
  {
    v11 = swift_retain_n(a1, 2);
    v12 = static os_log_type_t.error.getter(v11);
    v13 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v14 = (id)static OS_os_log.default.getter(v13);
    os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v14, "Device state serial number is not defined", 41, 2, _swiftEmptyArrayStorage);
    swift_release_n(a1, 2);

  }
}

uint64_t sub_1000656D4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  _QWORD *v25;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_100137968, 40, 7);
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_1000662A8;
  v25 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100137980;
  v15 = _Block_copy(aBlock);
  v16 = v25;
  sub_1000662B4(a1, a2);
  swift_retain(a3);
  v17 = swift_release(v16);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_10002F158((unint64_t *)&qword_10016B5F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v20 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v6, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
}

void sub_1000658E8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  Class v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  if (a2 >> 60 == 15)
  {
    v4 = sub_10006630C();
    v5 = swift_allocError(&type metadata for String, v4, 0, 0);
    *v6 = 0xD00000000000001DLL;
    v6[1] = 0x8000000100114AB0;
    KeyPath = swift_getKeyPath(&unk_10010D000);
    v8 = swift_getKeyPath(&unk_10010D028);
    v28 = v5;
    v29 = 1;
    swift_retain(a3);
    static Published.subscript.setter(&v28, a3, KeyPath, v8);
  }
  else
  {
    v11 = objc_allocWithZone((Class)UIImage);
    sub_1000662C8(a1, a2);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v11, "initWithData:", isa);

    if (v13)
    {
      v14 = swift_getKeyPath(&unk_10010D000);
      v15 = swift_getKeyPath(&unk_10010D028);
      v28 = (uint64_t)v13;
      v29 = 0;
      swift_retain(a3);
      v16 = v13;
      static Published.subscript.setter(&v28, a3, v14, v15);
      sub_100066350(a1, a2);

    }
    else
    {
      v17 = Data._bridgeToObjectiveC()().super.isa;
      v18 = (void *)CGSVGDocumentCreateFromData(v17, 0);

      if (v18
        && (v19 = objc_msgSend((id)objc_opt_self(UIImage), "_imageWithCGSVGDocument:", v18),
            v18,
            v19))
      {
        v20 = swift_getKeyPath(&unk_10010D000);
        v21 = swift_getKeyPath(&unk_10010D028);
        v28 = (uint64_t)v19;
        v29 = 0;
        swift_retain(a3);
        v22 = v19;
        static Published.subscript.setter(&v28, a3, v20, v21);
        sub_100066350(a1, a2);

      }
      else
      {
        v23 = sub_10006630C();
        v24 = swift_allocError(&type metadata for String, v23, 0, 0);
        *v25 = 0xD00000000000001BLL;
        v25[1] = 0x8000000100114AD0;
        v26 = swift_getKeyPath(&unk_10010D000);
        v27 = swift_getKeyPath(&unk_10010D028);
        v28 = v24;
        v29 = 1;
        swift_retain(a3);
        static Published.subscript.setter(&v28, a3, v26, v27);
        sub_100066350(a1, a2);
      }
    }
  }
}

uint64_t sub_100065BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  SEL v3;
  id v4;
  int v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v1 = v0 + OBJC_IVAR____TtC11Diagnostics11ImageLoader__phase;
  v2 = sub_100035CA4(&qword_10016C120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8), v3, v4, v5, v6, v7, v8, v9);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100065C20()
{
  return type metadata accessor for ImageLoader(0);
}

uint64_t type metadata accessor for ImageLoader(uint64_t a1)
{
  uint64_t result;

  result = qword_10016C018;
  if (!qword_10016C018)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ImageLoader);
  return result;
}

void sub_100065C64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_100065CF0();
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_10010CF20;
    v4[3] = &unk_10010CF38;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_100065CF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10016C028)
  {
    v0 = type metadata accessor for Published(0, &type metadata for AsyncImagePhase);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10016C028);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for AsyncImagePhase(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100065D88(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_100065D88(id result, char a2)
{
  if (a2 == 1)
    return (id)swift_errorRetain(result);
  if (!a2)
    return result;
  return result;
}

void destroy for AsyncImagePhase(uint64_t a1)
{
  sub_100048A04(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for AsyncImagePhase(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100065D88(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_100048A04(v5, v6);
  return a1;
}

uint64_t initializeWithTake for AsyncImagePhase(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for AsyncImagePhase(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_100048A04(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AsyncImagePhase(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AsyncImagePhase(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_100065EE0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_100065EF8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AsyncImagePhase()
{
  return &type metadata for AsyncImagePhase;
}

uint64_t sub_100065F20@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for ImageLoader(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

Swift::Int sub_100065F5C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = v1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  v4 = *(_QWORD *)(v2 + 8);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100065FC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*v1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  v4 = *v3;
  v5 = v3[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100066018(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  v2 = (uint64_t *)(*v1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  v3 = *v2;
  v4 = v2[1];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_10006607C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  v4 = v3[1];
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8);
  if (*v3 == v5 && v4 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(*v3, v4, v5, v6, 0);
}

uint64_t sub_1000660B8()
{
  return sub_10002F158(&qword_10016C110, type metadata accessor for ImageLoader, (uint64_t)&unk_10010CF60);
}

void *sub_1000660E4()
{
  return &protocol witness table for ObservableObjectPublisher;
}

void sub_1000660F0()
{
  uint64_t v0;

  sub_10006553C(v0);
}

uint64_t sub_1000660F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100066108(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100066110@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10010D000);
  v5 = swift_getKeyPath(&unk_10010D028);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_100066198(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t KeyPath;
  uint64_t v6;
  void *v8;
  char v9;

  v2 = *(void **)a1;
  v3 = *a2;
  v4 = *(_BYTE *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10010D000);
  v6 = swift_getKeyPath(&unk_10010D028);
  v8 = v2;
  v9 = v4;
  sub_100065D88(v2, v4);
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v6);
}

uint64_t sub_100066228()
{
  uint64_t *v0;
  unint64_t v1;

  v1 = v0[3];
  if (v1 >> 60 != 15)
    sub_100066264(v0[2], v1);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100066264(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

void sub_1000662A8()
{
  uint64_t v0;

  sub_1000658E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1000662B4(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1000662C8(result, a2);
  return result;
}

uint64_t sub_1000662C8(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

unint64_t sub_10006630C()
{
  unint64_t result;

  result = qword_10016C118;
  if (!qword_10016C118)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10016C118);
  }
  return result;
}

uint64_t sub_100066350(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100066264(result, a2);
  return result;
}

uint64_t sub_100066370(char a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v5 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v13 - 8);
  v29 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_100137A38, 56, 7);
  *(_BYTE *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = v4;
  *(_BYTE *)(v18 + 32) = a2;
  *(_QWORD *)(v18 + 40) = a3;
  *(_QWORD *)(v18 + 48) = a4;
  aBlock[4] = sub_1000668B4;
  v32 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100137A50;
  v19 = _Block_copy(aBlock);
  v20 = v32;
  v21 = v5;
  sub_100035C4C(a3, a4);
  v22 = swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v23 = sub_100035C5C();
  v24 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v25 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v10, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v29);
}

void sub_100066618(char a1, void *a2, char a3, void *a4, uint64_t a5)
{
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;

  v10 = objc_msgSend((id)objc_opt_self(UIWindow), "_applicationKeyWindow");
  if (v10)
  {
    v11 = v10;
    sub_100037118(0, &qword_10016C128, UIApplication_ptr);
    v12 = objc_msgSend(v11, "rootViewController");

    sub_1000B97F0(v12);
    v14 = v13;

    if ((a1 & 1) != 0)
    {
      v16 = objc_msgSend(a2, "popoverPresentationController");
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend(v14, "view");
        objc_msgSend(v17, "setSourceView:", v18);

      }
    }
    if (v14)
    {
      if (a4)
      {
        v20[4] = a4;
        v21 = a5;
        v20[0] = _NSConcreteStackBlock;
        v20[1] = 1107296256;
        v20[2] = sub_100030658;
        v20[3] = &unk_100137A78;
        a4 = _Block_copy(v20);
        v19 = v21;
        swift_retain(a5);
        *(_QWORD *)&v15 = swift_release(v19).n128_u64[0];
      }
      objc_msgSend(v14, "presentViewController:animated:completion:", a2, a3 & 1, a4, v15);
      _Block_release(a4);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10006685C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100066880()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1000668B4()
{
  uint64_t v0;

  sub_100066618(*(_BYTE *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1000668C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000668D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void *destroy for Alert(uint64_t a1)
{
  return sub_10005BEFC(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_10005BE74(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_10005BE74(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(void **)a1;
  v11 = *(void **)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_10005BEFC(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 initializeWithTake for Alert(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Alert(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_10005BEFC(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Alert(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Alert(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_100066B14(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_100066B2C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Alert()
{
  return &type metadata for Alert;
}

void sub_100066B64(int a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSString v14;
  unsigned __int8 v15;
  id v16;
  unsigned int v17;
  unint64_t v18;
  void *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  __n128 v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char v43[96];
  void **aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  unint64_t v47;
  void (*v48)();
  uint64_t v49;
  unsigned __int8 v50;

  v41 = a1;
  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v40 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v37 - v11;
  v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "BOOLForKey:", v14);

  if ((v15 & 1) != 0
    || (v16 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform"),
        v17 = objc_msgSend(v16, "isInBoxUpdateModeActive"),
        swift_unknownObjectRelease(v16),
        v17))
  {
    v18 = sub_1000676C4();
    v19 = (void *)static OS_dispatch_queue.main.getter(v18);
    static DispatchTime.now()();
    + infix(_:_:)(v10, 2.0);
    v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20(v10, v6);
    v21 = swift_allocObject(&unk_100137B68, 65, 7);
    v22 = v42;
    sub_10005BE38(v42, v21 + 16);
    v48 = sub_100067730;
    v49 = v21;
    aBlock = _NSConcreteStackBlock;
    v45 = 1107296256;
    v46 = sub_100030658;
    v47 = (unint64_t)&unk_100137B80;
    v23 = _Block_copy(&aBlock);
    v24 = v49;
    sub_10005BF84(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BE74);
    v25 = swift_release(v24);
    static DispatchQoS.unspecified.getter(v25);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v26 = sub_100035C5C();
    v27 = sub_100035CA4((uint64_t *)&unk_10016AD10);
    v28 = sub_100035CE4();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v27, v28, v1, v26);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v12, v5, v3, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v1);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v39);
    v20(v12, v6);
  }
  v29 = v42;
  sub_10005BE38(v42, (uint64_t)&aBlock);
  if (v50 < 2u
    || (unint64_t)v48 | v49 | (unint64_t)aBlock | v47 | (unint64_t)v46 | v45
    && (aBlock != (void **)1 || (unint64_t)v48 | v49 | v47 | (unint64_t)v46 | v45))
  {
    v30 = type metadata accessor for ManagedAlertController();
    swift_initStackObject(v30, v43);
    sub_10005BF84(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BE74);
    sub_1000CD320(v29);
    v32 = v31;
    if ((v41 & 1) != 0)
      objc_msgSend(*(id *)(v31 + 16), "showOnTopWithAnimated:completion:", 1, 0);
    else
      sub_1000CE1F4();
    swift_release(v32);
  }
  else if (!qword_100172358)
  {
    v33 = objc_allocWithZone((Class)type metadata accessor for FullscreenAlertViewController());
    sub_10005BF84(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BE74);
    v34 = sub_10005BD5C(v29);
    sub_10005BF84(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10005BEFC);
    v35 = (void *)qword_100172358;
    qword_100172358 = (uint64_t)v34;
    v36 = v34;

    if ((v41 & 1) != 0)
      objc_msgSend(v36, "showOnTopWithAnimated:completion:", 1, 0);
    else
      objc_msgSend(v36, "scheduleModalPresentationWithPriority:animated:presentationCompletion:", 2, 1, 0);

  }
}

id sub_100067000(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id result;
  void *v20;
  int wapiCapability;
  const char *v22;
  void *v23;
  id v24;
  unsigned int v25;
  Swift::String v26;
  id v27;
  unsigned int v28;
  Swift::String v29;
  const char *v30;
  char v31;
  id v32;
  unsigned int v33;
  Swift::String v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v3 = sub_10005BE38(v1, (uint64_t)&v37);
  v4 = v37;
  if (v43)
  {
    if (v43 == 1)
    {
      v5 = 0;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      goto LABEL_44;
    }
    v5 = 0xD000000000000020;
    v7 = 0xD000000000000015;
    if (!(v41 | v42 | v37 | v40 | v39 | v38))
    {
      v8 = 0x8000000100114D60;
      v6 = 0xEC00000045434150;
      v5 = 0x535F464F5F54554FLL;
      goto LABEL_44;
    }
    v18 = v41 | v42 | v40 | v39 | v38;
    if (v37 == 1 && !v18)
    {
      result = (id)MobileGestalt_get_current_device(v3);
      if (!result)
      {
        __break(1u);
        return result;
      }
      v20 = result;
      wapiCapability = MobileGestalt_get_wapiCapability();

      v22 = "NETWORK_UNAVAILABLE_WIFI_MESSAGE";
      if (wapiCapability)
        v22 = "NETWORK_UNAVAILABLE_WLAN_MESSAGE";
      v6 = (unint64_t)(v22 - 32) | 0x8000000000000000;
      v23 = (void *)objc_opt_self(DAPlatform);
      swift_bridgeObjectRetain(v6);
      v24 = objc_msgSend(v23, "currentPlatform");
      v25 = objc_msgSend(v24, "isCheckerBoardActive");
      swift_unknownObjectRelease(v24);
      if (v25)
      {
        v26._countAndFlagsBits = 4342623;
        v26._object = (void *)0xE300000000000000;
        String.append(_:)(v26);
      }
      swift_bridgeObjectRelease(v6);
      v7 = 0xD000000000000019;
      v8 = 0x8000000100114D10;
      v5 = 0xD000000000000020;
      goto LABEL_44;
    }
    if (v37 != 2 || v18)
    {
      v7 = 0xD00000000000001ELL;
      if (v37 == 3 && !v18)
      {
        v8 = 0x8000000100114BF0;
        v6 = 0x8000000100114C10;
        v5 = 0xD00000000000001ELL;
        v7 = 0xD00000000000001CLL;
        goto LABEL_44;
      }
      if (v37 != 4 || v18)
      {
        if (v37 == 5 && !v18)
        {
          v7 = 0xD00000000000001ALL;
          v8 = 0x8000000100114B60;
          v6 = 0x8000000100114B80;
          v5 = 0xD00000000000001CLL;
          goto LABEL_44;
        }
        v8 = 0x8000000100114B10;
        v30 = "ALREADY_IN_SESSION_ALERT_MESSAGE";
      }
      else
      {
        v8 = 0x8000000100114BA0;
        v30 = "AIRPODS_CONNECTION_ALERT_MESSAGE";
      }
    }
    else
    {
      v5 = 0xD000000000000017;
      v8 = 0x8000000100114C30;
      v30 = "COULD_NOT_START_MESSAGE";
    }
LABEL_43:
    v6 = (unint64_t)(v30 - 32) | 0x8000000000000000;
    goto LABEL_44;
  }
  v9 = (void *)v38;
  v10 = (void *)objc_opt_self(UIDevice);
  v11 = v9;
  v12 = objc_msgSend(v10, "currentDevice");
  v13 = objc_msgSend(v12, "userInterfaceIdiom");

  if (v13 == (id)1 && v9 == 0)
  {
    v5 = 0xD000000000000020;
    v7 = 0xD000000000000016;
    v8 = 0x8000000100114CC0;
    v27 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
    v28 = objc_msgSend(v27, "isCheckerBoardActive");
    swift_unknownObjectRelease(v27);
    if (v28)
    {
      v29._countAndFlagsBits = 4342623;
      v29._object = (void *)0xE300000000000000;
      String.append(_:)(v29);
      v7 = 0xD000000000000016;
      v8 = 0x8000000100114CC0;
    }
    v30 = "EXIT_DIAGNOSTICS_SUSPEND_MESSAGE";
    goto LABEL_43;
  }
  v7 = 0xD000000000000020;
  v15 = sub_100095088(v4);
  v17 = v16;
  if (v15 == 0x22656D6F4822 && v16 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
  }
  else
  {
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, 0x22656D6F4822, 0xE600000000000000, 0);
    swift_bridgeObjectRelease(v17);
    if ((v31 & 1) == 0)
    {
      v7 = 0xD00000000000001FLL;
      v8 = 0x8000000100114C70;
      v32 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
      v33 = objc_msgSend(v32, "isCheckerBoardActive");
      swift_unknownObjectRelease(v32);
      if (v33)
      {
        v34._countAndFlagsBits = 4342623;
        v34._object = (void *)0xE300000000000000;
        String.append(_:)(v34);

        v7 = 0xD00000000000001FLL;
        v8 = 0x8000000100114C70;
      }
      else
      {

      }
      v5 = 0;
      v6 = 0;
      goto LABEL_44;
    }
  }

  v5 = 0;
  v6 = 0;
  v8 = 0x8000000100114C90;
LABEL_44:
  if ((a1 & 1) != 0)
    v35 = v8;
  else
    v35 = v6;
  if ((a1 & 1) != 0)
    v36 = v5;
  else
    v36 = v7;
  swift_bridgeObjectRelease(v35);
  return (id)v36;
}

void sub_1000674C4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned __int8 v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t vars0;
  uint64_t vars8;

  sub_10005BE38(a1, (uint64_t)&v13);
  if (v19 >= 2u)
  {
    if (v17 | v18 | v13 | v16 | v15 | v14)
    {
      v9 = v17 | v18 | v16 | v15 | v14;
      if (v13 != 1 || v9)
      {
        v10 = (v13 & 0xFFFFFFFFFFFFFFFELL) == 2 || v13 == 4;
        v8 = 17;
        if (!v10 || v9)
        {
          if (v9)
            v11 = 0;
          else
            v11 = v13 == 5;
          if (v11)
            v8 = 18;
          else
            v8 = 17;
        }
      }
      else
      {
        v8 = 15;
      }
    }
    else
    {
      v8 = 16;
    }
  }
  else
  {
    v8 = 18;
  }
  sub_100098BDC(v8, v1, v2, v3, v4, v5, v6, v7, v12, (id)v13, v14, v15, v16, v17, v18, v19, vars0, vars8);
}

BOOL sub_100067568(uint64_t *a1, uint64_t *a2)
{
  int v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *((unsigned __int8 *)a2 + 48);
  if (!*((_BYTE *)a1 + 48))
    return v2 == 0;
  if (*((_BYTE *)a1 + 48) == 1)
    return v2 == 1;
  v5 = *a2;
  v4 = a2[1];
  v7 = a2[2];
  v6 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  v10 = a1[3];
  v11 = *a1;
  v12 = a1[4] | a1[5];
  v13 = a1[2] | a1[1];
  if (!(v12 | v11 | v10 | v13))
    return v2 == 2 && !(v7 | v4 | v5 | v6 | v9 | v8);
  v14 = v12 | v10 | v13;
  if (v11 != 1 || v14)
  {
    if (v11 != 2 || v14)
    {
      if (v11 != 3 || v14)
      {
        if (v11 != 4 || v14)
        {
          if (v11 != 5 || v14)
          {
            if (v2 != 2 || v5 != 6)
              return 0;
          }
          else if (v2 != 2 || v5 != 5)
          {
            return 0;
          }
        }
        else if (v2 != 2 || v5 != 4)
        {
          return 0;
        }
      }
      else if (v2 != 2 || v5 != 3)
      {
        return 0;
      }
    }
    else if (v2 != 2 || v5 != 2)
    {
      return 0;
    }
  }
  else if (v2 != 2 || v5 != 1)
  {
    return 0;
  }
  return !(v7 | v4 | v6 | v9 | v8);
}

unint64_t sub_1000676C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016AD00;
  if (!qword_10016AD00)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10016AD00);
  }
  return result;
}

uint64_t sub_100067700()
{
  uint64_t v0;

  sub_10005BEFC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject(v0, 65, 7);
}

void sub_100067730()
{
  uint64_t v0;

  sub_1000674C4(v0 + 16);
}

uint64_t sub_100067738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100067748(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100067750(void *a1, void (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSString v19;
  id v20;
  id v21;
  NSString v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  char **v27;
  void *v28;
  NSString v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  NSString *v60;
  uint64_t v61;
  char v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  char **v77;
  void *v78;
  Class isa;
  NSString v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSString v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v101;
  id v102;
  void *v103;
  id v104;
  uint64_t v105;
  id v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, unint64_t, uint64_t);
  char *v113;
  __int128 v114;
  __int128 v115;

  v112 = a2;
  v3 = sub_100035CA4((uint64_t *)&unk_10016B050);
  __chkstk_darwin(v3);
  v5 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v110 = *(_QWORD *)(v6 - 8);
  v111 = v6;
  __chkstk_darwin(v6);
  v109 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v108 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v105 - v13;
  v15 = __chkstk_darwin(v12);
  v113 = (char *)&v105 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v105 - v17;
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v19);

  if (!v20)
  {
    v21 = objc_allocWithZone((Class)UITableViewCell);
    v22 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v21, "initWithStyle:reuseIdentifier:", 3, v22);

  }
  objc_msgSend(v20, "setAccessoryType:", 0);
  v23 = (void *)objc_opt_self(UIColor);
  v24 = v20;
  v106 = v23;
  v25 = objc_msgSend(v23, "systemBackgroundColor");
  objc_msgSend(v24, "setBackgroundColor:", v25);

  v26 = objc_msgSend(v24, "detailTextLabel");
  v27 = &selRef_setFill;
  if (v26)
  {
    v28 = v26;
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setText:", v29);

  }
  v30 = objc_msgSend(v24, "textLabel");
  if (v30)
  {
    v31 = v30;
    v32 = (void *)objc_opt_self(UIFont);
    objc_msgSend(v32, "defaultFontSize");
    v33 = objc_msgSend(v32, "systemFontOfSize:");
    objc_msgSend(v31, "setFont:", v33);

  }
  v34 = objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
  v35 = sub_10006A958();
  v36 = IndexPath.row.getter();
  if ((v36 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v36 >= *(_QWORD *)(v35 + 16))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v107 = v14;
  v37 = v35
      + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 72) * v36;
  v112 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  v112(v18, v37, v8);
  swift_bridgeObjectRelease(v35);
  v38 = objc_msgSend(v24, "textLabel");
  if (v38)
  {
    v39 = v38;
    URL.path.getter(v38);
    v41 = v40;
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v41);
    v43 = objc_msgSend(v34, "displayNameAtPath:", v42);

    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v46 = v45;

    sub_10006B948(v44, v46);
    v48 = v47;
    swift_bridgeObjectRelease(v46);
    v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v48);
    objc_msgSend(v39, "setText:", v49);

  }
  URL.path.getter(v38);
  v51 = v50;
  v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v51);
  *(_QWORD *)&v114 = 0;
  v53 = objc_msgSend(v34, "attributesOfItemAtPath:error:", v52, &v114);

  v54 = (void *)v114;
  if (!v53)
  {
    v63 = (id)v114;
    v64 = _convertNSErrorToError(_:)(v54);

    swift_willThrow();
    v65 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v66 = swift_allocObject(v65, 72, 7);
    *(_OWORD *)(v66 + 16) = xmmword_10010BE30;
    v67 = URL.path.getter(v66);
    v69 = v68;
    *(_QWORD *)(v66 + 56) = &type metadata for String;
    *(_QWORD *)(v66 + 64) = sub_100047048();
    *(_QWORD *)(v66 + 32) = v67;
    *(_QWORD *)(v66 + 40) = v69;
    v70 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v71 = (void *)static OS_os_log.default.getter(v70);
    v72 = static os_log_type_t.default.getter(v71);
    os_log(_:dso:log:type:_:)("Could not get modification date of file: %{public}@", 51, 2, &_mh_execute_header, v71, v72, v66);
    swift_bridgeObjectRelease(v66);

    v73 = swift_errorRelease(v64);
    goto LABEL_29;
  }
  type metadata accessor for FileAttributeKey(0);
  v56 = v55;
  v57 = sub_10002F158((unint64_t *)&unk_10016C1C0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_10010BB64);
  v58 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v53, v56, (char *)&type metadata for Any + 8, v57);
  v59 = v54;

  if (*(_QWORD *)(v58 + 16))
  {
    v60 = NSFileModificationDate;
    v61 = sub_100072BCC();
    if ((v62 & 1) != 0)
    {
      sub_1000370B0(*(_QWORD *)(v58 + 56) + 32 * v61, (uint64_t)&v114);
    }
    else
    {
      v114 = 0u;
      v115 = 0u;
    }

  }
  else
  {
    v114 = 0u;
    v115 = 0u;
  }
  swift_bridgeObjectRelease(v58);
  if (*((_QWORD *)&v115 + 1))
  {
    v74 = v111;
    v75 = swift_dynamicCast(v5, &v114, (char *)&type metadata for Any + 8, v111, 6);
    v76 = v110;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v5, v75 ^ 1u, 1, v74);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v5, 1, v74) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v109, v5, v74);
      v77 = (char **)objc_msgSend(v24, "detailTextLabel");
      if (!v77)
      {
LABEL_26:
        v73 = (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v109, v74);
        goto LABEL_29;
      }
      v27 = v77;
      if (qword_10016A6E0 == -1)
      {
LABEL_23:
        v78 = (void *)qword_10016E000;
        isa = Date._bridgeToObjectiveC()().super.isa;
        v80 = objc_msgSend(v78, "stringFromDate:", isa);

        if (!v80)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v82 = v81;
          v80 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v82);
        }
        objc_msgSend(v27, "setText:", v80);

        v76 = v110;
        v74 = v111;
        goto LABEL_26;
      }
LABEL_41:
      swift_once(&qword_10016A6E0, sub_1000D1C58);
      goto LABEL_23;
    }
  }
  else
  {
    sub_100036FA0((uint64_t)&v114, (uint64_t *)&unk_10016B610);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v110 + 56))(v5, 1, 1, v111);
  }
  v73 = sub_100036FA0((uint64_t)v5, (uint64_t *)&unk_10016B050);
LABEL_29:
  URL.path.getter(v73);
  v84 = v83;
  v85 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v84);
  LODWORD(v84) = objc_msgSend(v34, "fileExistsAtPath:", v85);

  v86 = v113;
  v87 = ((uint64_t (*)(char *, char *, uint64_t))v112)(v113, v18, v8);
  if ((_DWORD)v84)
  {
    v88 = *(void (**)(char *, uint64_t))(v9 + 8);
    v88(v86, v8);
LABEL_34:
    objc_msgSend(v24, "setAccessoryType:", 1);
    goto LABEL_35;
  }
  v89 = URL.absoluteString.getter(v87);
  v91 = v90;
  v92 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v93 = objc_msgSend(v92, "temporaryDirectory");

  v94 = v108;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v93);

  v95 = v107;
  URL.appendingPathComponent(_:)(0x2E746E65736E6F63, 0xEB00000000666470);
  v88 = *(void (**)(char *, uint64_t))(v9 + 8);
  v96 = ((uint64_t (*)(char *, uint64_t))v88)(v94, v8);
  v97 = URL.absoluteString.getter(v96);
  v99 = v98;
  v88(v95, v8);
  if (v89 == v97 && v91 == v99)
  {
    swift_bridgeObjectRelease_n(v91, 2);
    v88(v113, v8);
    goto LABEL_34;
  }
  v101 = _stringCompareWithSmolCheck(_:_:expecting:)(v89, v91, v97, v99, 0);
  swift_bridgeObjectRelease(v91);
  swift_bridgeObjectRelease(v99);
  v88(v113, v8);
  if ((v101 & 1) != 0)
    goto LABEL_34;
  objc_msgSend(v24, "setAccessoryType:", 0);
  v102 = objc_msgSend(v24, "textLabel");
  if (v102)
  {
    v103 = v102;
    v104 = objc_msgSend(v106, "secondaryLabelColor");
    objc_msgSend(v103, "setTextColor:", v104);

  }
LABEL_35:
  v88(v18, v8);

  return v24;
}

id sub_100068128(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSString v18;
  id v19;
  id v20;
  NSString v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  void *v28;
  id v29;
  DARootViewController *v30;
  unint64_t v31;
  SEL v32;
  id v33;
  int v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  DARootViewController *v42;
  DARootViewController *v43;
  NSString v44;
  SEL v45;
  id v46;
  int v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  DARootViewController *v54;
  DARootViewController *v55;
  const char *v56;
  DARootViewController *v57;
  id v58;
  int v59;
  id v60;
  id v61;
  id v62;
  id v63;
  NSString v64;
  SEL v65;
  id v66;
  int v67;
  id v68;
  id v69;
  id v70;
  id v71;
  DARootViewController *v72;
  DARootViewController *v73;
  NSString v74;
  SEL v75;
  id v76;
  int v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  const char *v89;
  void *v90;
  int v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  NSString *v96;
  uint64_t v97;
  char v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  SEL v109;
  id v110;
  int v111;
  id v112;
  id v113;
  id v114;
  id v115;
  uint64_t v116;
  void *v117;
  int v118;
  uint64_t v119;
  char *v120;
  void *v121;
  Class isa;
  NSString v123;
  DARootViewController *v124;
  DARootViewController *v125;
  SEL v126;
  id v127;
  int v128;
  id v129;
  id v130;
  id v131;
  id v132;
  DARootViewController *v133;
  DARootViewController *v134;
  NSString v135;
  SEL v136;
  id v137;
  int v138;
  id v139;
  id v140;
  id v141;
  id v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, DARootViewController *);
  id v146;
  char **v147;
  char **v148;
  uint64_t v149;
  DARootViewController *v150;
  DARootViewController *v151;
  id v152;
  id v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  DARootViewController *v158;
  DARootViewController *v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  void *v166;
  char v168;
  SEL v169;
  id v170;
  int v171;
  id v172;
  id v173;
  id v174;
  id v175;
  SEL v176;
  id v177;
  int v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  void *v184;
  id v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  id v191;
  char *v192;
  uint64_t v193;
  id v194;
  __int128 v195;
  __int128 v196;

  v2 = sub_100035CA4((uint64_t *)&unk_10016B050);
  __chkstk_darwin(v2);
  v4 = (char *)&v186 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v189 = (char *)v5;
  v190 = v6;
  __chkstk_darwin(v5);
  v188 = (char *)&v186 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v193 - 8);
  v9 = __chkstk_darwin(v193);
  v187 = (char *)&v186 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v186 - v12;
  v14 = __chkstk_darwin(v11);
  v192 = (char *)&v186 - v15;
  __chkstk_darwin(v14);
  v17 = (char *)&v186 - v16;
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v18);

  if (!v19)
  {
    v20 = objc_allocWithZone((Class)UITableViewCell);
    v21 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v20, "initWithStyle:reuseIdentifier:", 3, v21);

  }
  objc_msgSend(v19, "setAccessoryType:", 0);
  v22 = (void *)objc_opt_self(UIColor);
  v23 = v19;
  v191 = v22;
  v24 = objc_msgSend(v22, "systemBackgroundColor");
  objc_msgSend(v23, "setBackgroundColor:", v24);

  v25 = objc_msgSend(v23, "detailTextLabel");
  if (v25)
  {
    v24 = v25;
    v26 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setText:", v26);

  }
  v27 = objc_msgSend(v23, "textLabel");
  if (v27)
  {
    v24 = v27;
    v28 = (void *)objc_opt_self(UIFont);
    objc_msgSend(v28, "defaultFontSize");
    v29 = objc_msgSend(v28, "systemFontOfSize:");
    objc_msgSend(v24, "setFont:", v29);

  }
  v194 = objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
  v30 = sub_10006B14C();
  v31 = IndexPath.row.getter(v30);
  if ((v31 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v31 >= *(_QWORD *)v30->remoteCardFilter)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v186 = v13;
  v24 = *(id *)(v8 + 16);
  ((void (*)(char *, char *, uint64_t))v24)(v17, (char *)v30+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v31, v193);
  swift_bridgeObjectRelease(v30, v32, v33, v34, v35, v36, v37, v38);
  v39 = objc_msgSend(v23, "textLabel");
  v40 = v194;
  if (v39)
  {
    v41 = v39;
    URL.path.getter(v39);
    v43 = v42;
    v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v43, v45, v46, v47, v48, v49, v50, v51);
    v52 = objc_msgSend(v40, "displayNameAtPath:", v44);

    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v55 = v54;

    sub_10006B948(v53, (uint64_t)v55);
    v57 = (DARootViewController *)v56;
    swift_bridgeObjectRelease(v55, v56, v58, v59, v60, v61, v62, v63);
    v64 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v57, v65, v66, v67, v68, v69, v70, v71);
    objc_msgSend(v41, "setText:", v64);

  }
  URL.path.getter(v39);
  v73 = v72;
  v74 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v73, v75, v76, v77, v78, v79, v80, v81);
  *(_QWORD *)&v195 = 0;
  v82 = objc_msgSend(v40, "attributesOfItemAtPath:error:", v74, &v195);

  v83 = (void *)v195;
  if (!v82)
  {
    v99 = (id)v195;
    v100 = _convertNSErrorToError(_:)(v83);

    swift_willThrow();
    v101 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v102 = swift_allocObject(v101, 72, 7);
    *(_OWORD *)(v102 + 16) = xmmword_10010BE30;
    v103 = URL.path.getter(v102);
    v105 = v104;
    *(_QWORD *)(v102 + 56) = &type metadata for String;
    *(_QWORD *)(v102 + 64) = sub_100047048();
    *(_QWORD *)(v102 + 32) = v103;
    *(_QWORD *)(v102 + 40) = v105;
    v106 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v107 = (void *)static OS_os_log.default.getter(v106);
    v108 = static os_log_type_t.default.getter(v107);
    os_log(_:dso:log:type:_:)("Could not get modification date of file: %{public}@", 51, 2, &_mh_execute_header, v107, v108, v102);
    swift_bridgeObjectRelease((DARootViewController *)v102, v109, v110, v111, v112, v113, v114, v115);

    v116 = swift_errorRelease(v100);
    v30 = (DARootViewController *)v193;
    v117 = v194;
    goto LABEL_29;
  }
  type metadata accessor for FileAttributeKey(0);
  v85 = v84;
  v86 = sub_10002F158((unint64_t *)&unk_10016C1C0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_10010BB64);
  v87 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v82, v85, (char *)&type metadata for Any + 8, v86);
  v88 = v83;

  if (*(_QWORD *)(v87 + 16))
  {
    v96 = NSFileModificationDate;
    v97 = sub_100072BCC();
    v30 = (DARootViewController *)v193;
    v13 = v189;
    if ((v98 & 1) != 0)
    {
      sub_1000370B0(*(_QWORD *)(v87 + 56) + 32 * v97, (uint64_t)&v195);
    }
    else
    {
      v195 = 0u;
      v196 = 0u;
    }

  }
  else
  {
    v195 = 0u;
    v196 = 0u;
    v30 = (DARootViewController *)v193;
    v13 = v189;
  }
  swift_bridgeObjectRelease((DARootViewController *)v87, v89, v90, v91, v92, v93, v94, v95);
  v117 = v194;
  if (*((_QWORD *)&v196 + 1))
  {
    v118 = swift_dynamicCast(v4, &v195, (char *)&type metadata for Any + 8, v13, 6);
    v119 = v190;
    (*(void (**)(char *, _QWORD, uint64_t, char *))(v190 + 56))(v4, v118 ^ 1u, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, char *))(v119 + 48))(v4, 1, v13) != 1)
    {
      (*(void (**)(char *, char *, char *))(v119 + 32))(v188, v4, v13);
      v120 = (char *)objc_msgSend(v23, "detailTextLabel");
      if (!v120)
      {
LABEL_26:
        v116 = (*(uint64_t (**)(char *, char *))(v119 + 8))(v188, v13);
        goto LABEL_29;
      }
      v4 = v120;
      if (qword_10016A6E0 == -1)
      {
LABEL_23:
        v121 = (void *)qword_10016E000;
        isa = Date._bridgeToObjectiveC()().super.isa;
        v123 = objc_msgSend(v121, "stringFromDate:", isa);

        if (!v123)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v125 = v124;
          v123 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v125, v126, v127, v128, v129, v130, v131, v132);
        }
        objc_msgSend(v4, "setText:", v123);

        v117 = v194;
        v119 = v190;
        goto LABEL_26;
      }
LABEL_46:
      swift_once(&qword_10016A6E0, sub_1000D1C58);
      goto LABEL_23;
    }
  }
  else
  {
    sub_100036FA0((uint64_t)&v195, (uint64_t *)&unk_10016B610);
    (*(void (**)(char *, uint64_t, uint64_t, char *))(v190 + 56))(v4, 1, 1, v13);
  }
  v116 = sub_100036FA0((uint64_t)v4, (uint64_t *)&unk_10016B050);
LABEL_29:
  URL.path.getter(v116);
  v134 = v133;
  v135 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v134, v136, v137, v138, v139, v140, v141, v142);
  LODWORD(v134) = objc_msgSend(v117, "fileExistsAtPath:", v135);

  v143 = v192;
  v144 = ((uint64_t (*)(char *, char *, DARootViewController *))v24)(v192, v17, v30);
  if ((_DWORD)v134)
  {
    v145 = *(void (**)(char *, DARootViewController *))(v8 + 8);
    v146 = v191;
    v147 = &selRef_bluetoothID;
    v148 = &selRef_defaultMetrics;
    v145(v143, v30);
  }
  else
  {
    v149 = URL.absoluteString.getter(v144);
    v151 = v150;
    v152 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v153 = objc_msgSend(v152, "temporaryDirectory");

    v154 = v187;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v153);

    v155 = v186;
    URL.appendingPathComponent(_:)(0x2E746E65736E6F63, 0xEB00000000666470);
    v145 = *(void (**)(char *, DARootViewController *))(v8 + 8);
    v156 = ((uint64_t (*)(char *, DARootViewController *))v145)(v154, v30);
    v157 = URL.absoluteString.getter(v156);
    v159 = v158;
    v145(v155, v30);
    v147 = &selRef_bluetoothID;
    v148 = &selRef_defaultMetrics;
    if (v149 == v157 && v151 == v159)
    {
      swift_bridgeObjectRelease_n(v151, 2);
      v146 = v191;
      v117 = v194;
      v145(v192, v30);
    }
    else
    {
      v168 = _stringCompareWithSmolCheck(_:_:expecting:)(v149, v151, v157, v159, 0);
      swift_bridgeObjectRelease(v151, v169, v170, v171, v172, v173, v174, v175);
      swift_bridgeObjectRelease(v159, v176, v177, v178, v179, v180, v181, v182);
      v145(v192, v30);
      if ((v168 & 1) == 0)
      {
        objc_msgSend(v23, "setAccessoryType:", 0);
        v183 = objc_msgSend(v23, "textLabel");
        v117 = v194;
        if (v183)
        {
          v184 = v183;
          v146 = v191;
          v185 = objc_msgSend(v191, "secondaryLabelColor");
          objc_msgSend(v184, "setTextColor:", v185);

        }
        else
        {
          v146 = v191;
        }
        goto LABEL_35;
      }
      v146 = v191;
      v117 = v194;
    }
  }
  objc_msgSend(v23, v148[80], 1);
LABEL_35:
  v160 = v23;
  v161 = objc_msgSend(v146, "clearColor");
  objc_msgSend(v160, v147[467], v161);

  v162 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v163 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 17.0, UIFontWeightBold);
  v164 = objc_msgSend(v162, "scaledFontForFont:", v163);

  v165 = objc_msgSend(v160, "textLabel");
  if (v165)
  {
    v166 = v165;
    objc_msgSend(v165, "setFont:", v164);

    v145(v17, v30);
  }
  else
  {
    v145(v17, v30);

  }
  return v160;
}

BOOL sub_100068C54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_100068C6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  Swift::String v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  DARootViewController *v10;
  DARootViewController *v11;
  Swift::String v12;
  SEL v13;
  id v14;
  int v15;
  id v16;
  id v17;
  id v18;
  id v19;
  Swift::String v20;
  DARootViewController *v21;
  SEL v22;
  id v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  unint64_t v33;

  v2 = sub_100035CA4((uint64_t *)&unk_10016B680);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = 0;
  v33 = 0xE000000000000000;
  _StringGuts.grow(_:)(68);
  v5._object = (void *)0x8000000100115040;
  v5._countAndFlagsBits = 0xD000000000000041;
  String.append(_:)(v5);
  v6 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v7 = objc_msgSend(v6, "snapshot");

  v8 = objc_msgSend(v7, "dedSessionIdentifier");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v11, v13, v14, v15, v16, v17, v18, v19);
  v20._countAndFlagsBits = 47;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  v21 = (DARootViewController *)v33;
  URL.init(string:)(v32, v33);
  swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
  v29 = type metadata accessor for URL(0);
  v30 = *(_QWORD *)(v29 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v4, 1, v29);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(a1, v4, v29);
  __break(1u);
  return result;
}

char *sub_100068E04(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;

  v5 = (char *)objc_msgSend(objc_allocWithZone(v2), "init");
  v6 = (uint64_t *)&v5[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion + 8];
  *v6 = a1;
  v6[1] = a2;
  v9 = v5;
  sub_100035C4C(a1, a2);
  sub_100035D74(v7, v8);
  v10 = *(id *)&v9[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView];
  objc_msgSend(v10, "setDataSource:", v9);
  sub_100035D74(a1, a2);

  return v9;
}

void sub_100068EBC(char a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  void *v6;
  int wapiCapability;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  DARootViewController *v17;
  uint64_t v18;
  uint64_t *v19;
  DARootViewController *v20;
  const char *v21;
  id v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  DARootViewController *v29;
  NSString v30;
  SEL v31;
  id v32;
  int v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  const char *v39;
  const char *v40;
  id v41;
  int v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t *v47;
  DARootViewController *v48;
  SEL v49;
  id v50;
  int v51;
  id v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  DARootViewController *v58;
  NSString v59;
  SEL v60;
  id v61;
  int v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  const char *v72;
  void *v73;
  int v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  SEL v85;
  id v86;
  int v87;
  id v88;
  id v89;
  id v90;
  id v91;
  objc_super v92;

  v2 = v1;
  v92.receiver = v2;
  v92.super_class = (Class)type metadata accessor for FileReviewingTableViewController();
  v4 = objc_msgSendSuper2(&v92, "viewWillAppear:", a1 & 1);
  v5 = (id)MobileGestalt_get_current_device(v4);
  if (!v5)
    goto LABEL_39;
  v6 = v5;
  wapiCapability = MobileGestalt_get_wapiCapability();

  v8 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v9 = objc_msgSend(v8, "snapshot");

  v10 = objc_msgSend(v9, "retriesRemaining");
  v11 = 0xD000000000000029;
  if (wapiCapability)
    v11 = 0xD00000000000002ELL;
  v12 = 0x8000000100115120;
  if (wapiCapability)
    v12 = 0x8000000100115150;
  v13 = 0xD000000000000025;
  if (!wapiCapability)
    v13 = 0xD000000000000020;
  v14 = 0x8000000100115090;
  if (wapiCapability)
    v14 = 0x80000001001150F0;
  v15 = v10 == 0;
  if (v10)
    v16 = v13;
  else
    v16 = v11;
  if (v15)
    v17 = (DARootViewController *)v12;
  else
    v17 = (DARootViewController *)v14;
  v18 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000021, (void *)0x80000001001150C0);
  v19 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText];
  v20 = *(DARootViewController **)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText + 8];
  *v19 = v18;
  v19[1] = (uint64_t)v21;
  swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
  v28 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel];
  v29 = (DARootViewController *)v19[1];
  if (v29)
  {
    swift_bridgeObjectRetain(v29);
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29, v31, v32, v33, v34, v35, v36, v37);
  }
  else
  {
    v30 = 0;
  }
  objc_msgSend(v28, "setText:", v30);

  v38 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v16, v17);
  v40 = v39;
  swift_bridgeObjectRelease(v17, v39, v41, v42, v43, v44, v45, v46);
  v47 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
  v48 = *(DARootViewController **)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText + 8];
  *v47 = v38;
  v47[1] = (uint64_t)v40;
  swift_bridgeObjectRelease(v48, v49, v50, v51, v52, v53, v54, v55);
  v56 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
  v57 = v47[1];
  if (v57)
    v58 = (DARootViewController *)v47[1];
  else
    v58 = (DARootViewController *)0xE000000000000000;
  swift_bridgeObjectRetain(v57);
  v59 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v58, v60, v61, v62, v63, v64, v65, v66);
  objc_msgSend(v56, "setText:", v59);

  v67 = objc_msgSend(v2, "navigationController");
  if (!v67)
    goto LABEL_35;
  v68 = v67;
  v69 = objc_msgSend(v67, "viewControllers");

  v70 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v71 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v69, v70);

  if ((unint64_t)v71 >> 62)
  {
    if (v71 < 0)
      v83 = v71;
    else
      v83 = v71 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v71);
    v84 = _CocoaArrayWrapper.endIndex.getter(v83);
    swift_bridgeObjectRelease((DARootViewController *)v71, v85, v86, v87, v88, v89, v90, v91);
    if (v84)
      goto LABEL_25;
LABEL_34:
    swift_bridgeObjectRelease((DARootViewController *)v71, v72, v73, v74, v75, v76, v77, v78);
    goto LABEL_35;
  }
  if (!*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
LABEL_25:
  if ((v71 & 0xC000000000000001) != 0)
  {
    v79 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v71);
    swift_unknownObjectRelease(v79);
LABEL_28:
    swift_bridgeObjectRelease((DARootViewController *)v71, v72, v73, v74, v75, v76, v77, v78);
    if ((char *)v79 == v2)
    {
      v80 = swift_allocObject(&unk_100137E00, 24, 7);
      *(_QWORD *)(v80 + 16) = v2;
      v81 = v2;
      sub_100087F10((uint64_t)sub_10006D70C, v80);
      *(_QWORD *)&v82 = swift_release(v80).n128_u64[0];
LABEL_36:
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView], "reloadData", v82);
      sub_100069428();
      return;
    }
LABEL_35:
    sub_100087F10(0, 0);
    goto LABEL_36;
  }
  if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v79 = *(_QWORD *)(v71 + 32);
    goto LABEL_28;
  }
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_1000692B8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v2 = swift_allocObject(&unk_100137E28, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100137E50, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = a1;
  v5 = sub_100087FEC((uint64_t)sub_10006D714, v2, (uint64_t)sub_10006D71C, v3);
  swift_release(v2);
  objc_msgSend(v4, "presentViewController:animated:completion:", v5, 1, 0, swift_release(v3).n128_f64[0]);

}

id sub_100069378(int a1, char *a2)
{
  id result;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  result = objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
  v4 = &a2[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  v5 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  if (v5)
  {
    v6 = *((_QWORD *)v4 + 1);
    swift_retain(v6);
    v5(2);
    return (id)sub_100035D74((uint64_t)v5, v6);
  }
  return result;
}

void sub_100069428()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  NSString v4;
  DARootViewController *v5;
  DARootViewController *v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD v20[5];
  uint64_t v21;

  v1 = objc_msgSend((id)objc_opt_self(DEDManager), "sharedInstance");
  v2 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v3 = objc_msgSend(v2, "snapshot");

  v4 = objc_msgSend(v3, "dedSessionIdentifier");
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v6 = v5;
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6, v7, v8, v9, v10, v11, v12, v13);
  }
  v14 = objc_msgSend(v1, "sessionForIdentifier:", v4);

  if (v14)
  {
    v15 = swift_allocObject(&unk_100137DB0, 24, 7);
    *(_QWORD *)(v15 + 16) = v0;
    v20[4] = sub_10006D704;
    v21 = v15;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_100069C1C;
    v20[3] = &unk_100137DC8;
    v16 = _Block_copy(v20);
    v17 = v21;
    v18 = v14;
    v19 = v0;
    objc_msgSend(v18, "getSessionStatusWithCompletion:", v16, swift_release(v17).n128_f64[0]);

    _Block_release(v16);
  }
}

id sub_1000695C0(DARootViewController *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  void *v17;
  int v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t i;
  unint64_t v24;
  DARootViewController *v25;
  char **v26;
  SEL v27;
  id v28;
  int v29;
  id v30;
  id v31;
  id v32;
  id v33;
  unint64_t v34;
  id v35;
  BOOL v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, unint64_t, uint64_t);
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  const char *v52;
  void *v53;
  int v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  void (*v64)(char *, uint64_t);
  const char *v65;
  void *v66;
  int v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  DARootViewController *v72;
  SEL v73;
  id v74;
  int v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  unint64_t *v81;
  unint64_t v82;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v84;
  unint64_t v85;
  DARootViewController *v86;
  SEL v87;
  id v88;
  int v89;
  id v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  SEL v95;
  id v96;
  int v97;
  id v98;
  id v99;
  id v100;
  id v101;
  DARootViewController *v102;
  uint64_t v103;
  uint64_t v105;
  uint64_t v106;
  unsigned __int8 *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  DARootViewController *v111;
  unint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t *v120;
  unint64_t v121;
  DARootViewController *v122;
  id v123;
  char *v124;
  uint64_t v125;
  void (*v126)(char *, unint64_t, uint64_t);
  char *v127;
  _BYTE v128[24];
  char v129[32];

  v106 = a3;
  v4 = sub_100035CA4((uint64_t *)&unk_10016B680);
  __chkstk_darwin(v4);
  v6 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v119 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v124 = (char *)&v105 - v12;
  __chkstk_darwin(v11);
  v127 = (char *)&v105 - v14;
  v111 = a1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_45;
  v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v13);
  for (i = v15; i; i = _CocoaArrayWrapper.endIndex.getter(v103))
  {
    v24 = 0;
    v120 = (unint64_t *)(v106 + OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_remoteFiles);
    v25 = v111;
    v110 = (unint64_t)v111 & 0xC000000000000001;
    v108 = (unint64_t)v111 & 0xFFFFFFFFFFFFFF8;
    v107 = &v111->remoteCardFilter[16];
    v26 = &selRef_defaultMetrics;
    v109 = i;
    while (1)
    {
      if (v110)
      {
        v34 = v24;
        v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v25);
      }
      else
      {
        if (v24 >= *(_QWORD *)(v108 + 16))
          goto LABEL_44;
        v34 = v24;
        v35 = *(id *)&v107[8 * v24];
      }
      v113 = v35;
      v36 = __OFADD__(v34, 1);
      v37 = v34 + 1;
      if (v36)
        break;
      v112 = v37;
      v38 = objc_msgSend(v113, "attachmentItems");
      v39 = sub_100037118(0, &qword_10016C1F0, DEDAttachmentItem_ptr);
      v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);

      if ((unint64_t)v40 >> 62)
      {
        if (v40 < 0)
          v94 = v40;
        else
          v94 = v40 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v40);
        v41 = _CocoaArrayWrapper.endIndex.getter(v94);
        swift_bridgeObjectRelease((DARootViewController *)v40, v95, v96, v97, v98, v99, v100, v101);
        if (v41)
        {
LABEL_12:
          v42 = v40 & 0xC000000000000001;
          swift_beginAccess(v120, v129, 0, 0);
          v43 = 0;
          v114 = v40 + 32;
          v115 = v40 & 0xFFFFFFFFFFFFFF8;
          v117 = v41;
          v118 = v40;
          v116 = v40 & 0xC000000000000001;
          while (1)
          {
            if (v42)
            {
              v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v40);
            }
            else
            {
              if (v43 >= *(_QWORD *)(v115 + 16))
                goto LABEL_42;
              v44 = *(id *)(v114 + 8 * v43);
            }
            v45 = v44;
            v36 = __OFADD__(v43++, 1);
            if (v36)
              break;
            if ((objc_msgSend(v44, v26[244]) & 1) != 0)
            {

            }
            else
            {
              v121 = v43;
              v46 = *v120;
              swift_bridgeObjectRetain(*v120);
              v123 = v45;
              v47 = objc_msgSend(v45, "attachedPath");
              static URL._unconditionallyBridgeFromObjectiveC(_:)(v47);

              v48 = *(_QWORD *)(v46 + 16);
              v122 = (DARootViewController *)v46;
              if (v48)
              {
                v49 = v46 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
                swift_bridgeObjectRetain(v46);
                v50 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
                v125 = *(_QWORD *)(v8 + 72);
                v126 = v50;
                while (1)
                {
                  v126(v6, v49, v7);
                  v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
                  v51(v6, 0, 1, v7);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
                    break;
                  v59 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
                  v60 = v8;
                  v61 = v124;
                  v62 = v6;
                  v59(v124, v6, v7);
                  sub_10002F158(&qword_10016C1F8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
                  v63 = dispatch thunk of static Equatable.== infix(_:_:)(v61, v127);
                  v64 = *(void (**)(char *, uint64_t))(v60 + 8);
                  v64(v61, v7);
                  if ((v63 & 1) != 0)
                  {
                    v86 = v122;
                    swift_bridgeObjectRelease(v122, v65, v66, v67, v68, v69, v70, v71);
                    v64(v127, v7);

                    swift_bridgeObjectRelease(v86, v87, v88, v89, v90, v91, v92, v93);
                    v6 = v62;
                    v8 = v60;
                    v26 = &selRef_defaultMetrics;
                    v41 = v117;
                    v40 = v118;
                    v42 = v116;
                    v43 = v121;
                    goto LABEL_14;
                  }
                  v49 += v125;
                  --v48;
                  v6 = v62;
                  v8 = v60;
                  if (!v48)
                    goto LABEL_28;
                }
              }
              else
              {
                swift_bridgeObjectRetain(v46);
                v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
LABEL_28:
                v51(v6, 1, 1, v7);
              }
              v72 = v122;
              swift_bridgeObjectRelease(v122, v52, v53, v54, v55, v56, v57, v58);
              (*(void (**)(char *, uint64_t))(v8 + 8))(v127, v7);
              swift_bridgeObjectRelease(v72, v73, v74, v75, v76, v77, v78, v79);
              v80 = objc_msgSend(v123, "attachedPath");
              static URL._unconditionallyBridgeFromObjectiveC(_:)(v80);

              v81 = v120;
              swift_beginAccess(v120, v128, 33, 0);
              v82 = *v81;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v81);
              *v81 = v82;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v82 = sub_100091CA0(0, *(_QWORD *)(v82 + 16) + 1, 1, v82);
                *v120 = v82;
              }
              v26 = &selRef_defaultMetrics;
              v42 = v116;
              v43 = v121;
              v85 = *(_QWORD *)(v82 + 16);
              v84 = *(_QWORD *)(v82 + 24);
              if (v85 >= v84 >> 1)
              {
                v82 = sub_100091CA0(v84 > 1, v85 + 1, 1, v82);
                *v120 = v82;
              }
              *(_QWORD *)(v82 + 16) = v85 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v82+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v85, v119, v7);
              swift_endAccess(v128);

              v41 = v117;
              v40 = v118;
            }
LABEL_14:
            if (v43 == v41)
              goto LABEL_4;
          }
          __break(1u);
LABEL_42:
          __break(1u);
          break;
        }
      }
      else
      {
        v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v41)
          goto LABEL_12;
      }
LABEL_4:

      swift_bridgeObjectRelease((DARootViewController *)v40, v27, v28, v29, v30, v31, v32, v33);
      v24 = v112;
      v25 = v111;
      if (v112 == v109)
      {
        v102 = v111;
        goto LABEL_50;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    if (v13 < 0)
      v103 = v13;
    else
      v103 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
  }
  v102 = v111;
LABEL_50:
  swift_bridgeObjectRelease(v102, v16, v17, v18, v19, v20, v21, v22);
  return objc_msgSend(*(id *)(v106 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView), "reloadData");
}

void sub_100069C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(DARootViewController *, DARootViewController *);
  uint64_t v7;
  DARootViewController *v8;
  uint64_t v9;
  DARootViewController *v10;
  SEL v11;
  id v12;
  int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  int v20;
  id v21;
  id v22;
  id v23;
  id v24;

  v6 = *(void (**)(DARootViewController *, DARootViewController *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = sub_100037118(0, &qword_10016C1E0, DEDAttachmentGroup_ptr);
  v8 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v7);
  v9 = sub_100037118(0, &qword_10016C1E8, DEDExtension_ptr);
  v10 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v9);
  swift_retain(v5);
  v6(v8, v10);
  swift_release(v5);
  swift_bridgeObjectRelease(v8, v11, v12, v13, v14, v15, v16, v17);
  swift_bridgeObjectRelease(v10, v18, v19, v20, v21, v22, v23, v24);
}

void sub_100069CCC()
{
  char *v0;
  uint64_t v1;
  uint64_t *v2;
  DARootViewController *v3;
  const char *v4;
  id v5;
  int v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  DARootViewController *v12;
  NSString v13;
  SEL v14;
  id v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id (**v22)();
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  void *v28;
  int containsCellularRadioCapability;
  uint64_t v30;
  uint64_t *v31;
  DARootViewController *v32;
  const char *v33;
  id v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  DARootViewController *v41;
  id v42;
  NSString v43;
  SEL v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  void (**v52)();
  uint64_t v53;
  uint64_t v54;
  char *v55;

  sub_1000A0228();
  v1 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001ALL, (void *)0x8000000100114F20);
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
  v3 = *(DARootViewController **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle + 8];
  *v2 = v1;
  v2[1] = (uint64_t)v4;
  swift_bridgeObjectRelease(v3, v4, v5, v6, v7, v8, v9, v10);
  v11 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton];
  v12 = (DARootViewController *)v2[1];
  if (v12)
  {
    swift_bridgeObjectRetain(v12);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v11, "setTitle:forState:", v13, 0);

  v21 = swift_allocObject(&unk_100137D10, 24, 7);
  *(_QWORD *)(v21 + 16) = v0;
  v22 = (id (**)())&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  v23 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  v24 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction + 8];
  *v22 = sub_10006D6D4;
  v22[1] = (id (*)())v21;
  v25 = v0;
  v26 = sub_100035D74(v23, v24);
  v27 = (id)MobileGestalt_get_current_device(v26);
  if (v27)
  {
    v28 = v27;
    containsCellularRadioCapability = MobileGestalt_get_containsCellularRadioCapability();

    if (containsCellularRadioCapability)
    {
      v30 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001ELL, (void *)0x8000000100114F40);
      v31 = (uint64_t *)&v25[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle];
      v32 = *(DARootViewController **)&v25[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle
                                         + 8];
      *v31 = v30;
      v31[1] = (uint64_t)v33;
      swift_bridgeObjectRelease(v32, v33, v34, v35, v36, v37, v38, v39);
      v40 = *(void **)&v25[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton];
      if (v40)
      {
        v41 = (DARootViewController *)v31[1];
        v42 = v40;
        if (v41)
        {
          swift_bridgeObjectRetain(v41);
          v43 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v41, v44, v45, v46, v47, v48, v49, v50);
        }
        else
        {
          v43 = 0;
        }
        objc_msgSend(v40, "setTitle:forState:", v43, 0);

      }
      v51 = swift_allocObject(&unk_100137D38, 24, 7);
      *(_QWORD *)(v51 + 16) = v25;
      v52 = (void (**)())&v25[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
      v53 = *(_QWORD *)&v25[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
      v54 = *(_QWORD *)&v25[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction + 8];
      *v52 = sub_10006D6DC;
      v52[1] = (void (*)())v51;
      v55 = v25;
      sub_100035D74(v53, v54);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_100069F24(_BYTE *a1)
{
  _QWORD *v2;
  char *v3;
  void (*v4)(_QWORD);
  uint64_t v5;

  if (a1[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_activationReason])
    v2 = &ELSEventTypeEndedWithIssueDidNotOccur;
  else
    v2 = &ELSEventTypeEndedWithIssueDidOccur;
  objc_msgSend((id)objc_opt_self(ELSEvent), "createLoggingEventWith:", *v2);
  objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0);
  v3 = &a1[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  v4 = *(void (**)(_QWORD))&a1[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  if (v4)
  {
    v5 = *((_QWORD *)v3 + 1);
    swift_retain(v5);
    v4(0);
    sub_100035D74((uint64_t)v4, v5);
  }
  return objc_msgSend((id)objc_opt_self(DSAnalytics), "sendAnalyticsWithEvent:", 15);
}

void sub_100069FE8(void *a1)
{
  id v2;
  void *v3;
  int wapiCapability;
  uint64_t v5;
  DARootViewController *v6;
  DARootViewController *v7;
  DARootViewController *v8;
  const char *v9;
  DARootViewController *v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSString v17;
  SEL v18;
  id v19;
  int v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSString v25;
  SEL v26;
  id v27;
  int v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  DARootViewController *v34;
  DARootViewController *v35;
  NSString v36;
  SEL v37;
  id v38;
  int v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  DARootViewController *v46;
  DARootViewController *v47;
  uint64_t v48;
  id v49;
  NSString v50;
  SEL v51;
  id v52;
  int v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  _QWORD v60[5];
  uint64_t v61;

  v2 = (id)MobileGestalt_get_current_device(a1);
  if (v2)
  {
    v3 = v2;
    wapiCapability = MobileGestalt_get_wapiCapability();

    if (wapiCapability)
      v5 = 0xD00000000000002BLL;
    else
      v5 = 0xD000000000000026;
    if (wapiCapability)
      v6 = (DARootViewController *)0x8000000100114FF0;
    else
      v6 = (DARootViewController *)0x8000000100114F60;
    sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000027, (void *)0x8000000100114F90);
    v8 = v7;
    sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v5, v6);
    v10 = (DARootViewController *)v9;
    swift_bridgeObjectRelease(v6, v9, v11, v12, v13, v14, v15, v16);
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8, v18, v19, v20, v21, v22, v23, v24);
    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10, v26, v27, v28, v29, v30, v31, v32);
    v33 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v17, v25, 1);

    sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0x4C45434E4143, (void *)0xE600000000000000);
    v35 = v34;
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v35, v37, v38, v39, v40, v41, v42, v43);
    v44 = (void *)objc_opt_self(UIAlertAction);
    v45 = objc_msgSend(v44, "actionWithTitle:style:handler:", v36, 0, 0);

    sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000025, (void *)0x8000000100114FC0);
    v47 = v46;
    v48 = swift_allocObject(&unk_100137D60, 24, 7);
    *(_QWORD *)(v48 + 16) = a1;
    v49 = a1;
    v50 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v47, v51, v52, v53, v54, v55, v56, v57);
    v60[4] = sub_10006D6E4;
    v61 = v48;
    v60[0] = _NSConcreteStackBlock;
    v60[1] = 1107296256;
    v60[2] = sub_100040808;
    v60[3] = &unk_100137D78;
    v58 = _Block_copy(v60);
    v59 = objc_msgSend(v44, "actionWithTitle:style:handler:", v50, 0, v58, swift_release(v61).n128_f64[0]);
    _Block_release(v58);

    objc_msgSend(v33, "addAction:", v45);
    objc_msgSend(v33, "addAction:", v59);
    objc_msgSend(v33, "setPreferredAction:", v59);
    objc_msgSend(v49, "presentViewController:animated:completion:", v33, 1, 0);

  }
  else
  {
    __break(1u);
  }
}

id sub_10006A2F8(uint64_t a1, _BYTE *a2)
{
  _QWORD *v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  if (a2[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_activationReason])
    v3 = &ELSEventTypeEndedWithIssueDidNotOccur;
  else
    v3 = &ELSEventTypeEndedWithIssueDidOccur;
  objc_msgSend((id)objc_opt_self(ELSEvent), "createLoggingEventWith:", *v3);
  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
  v4 = &a2[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  v5 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  if (v5)
  {
    v6 = *((_QWORD *)v4 + 1);
    swift_retain(v6);
    v5(1);
    sub_100035D74((uint64_t)v5, v6);
  }
  return objc_msgSend((id)objc_opt_self(DSAnalytics), "sendAnalyticsWithEvent:", 16);
}

id sub_10006A3BC(uint64_t a1)
{
  id result;
  void *v2;
  uint64_t containsCellularRadioCapability;

  result = (id)MobileGestalt_get_current_device(a1);
  if (result)
  {
    v2 = result;
    containsCellularRadioCapability = MobileGestalt_get_containsCellularRadioCapability();

    return (id)containsCellularRadioCapability;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10006A450()
{
  uint64_t v0;
  id v1;
  DARootViewController *v2;
  uint64_t v3;
  SEL v4;
  id v5;
  int v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView);
  v2 = sub_10006B14C();
  v3 = *(_QWORD *)v2->remoteCardFilter;

  swift_bridgeObjectRelease(v2, v4, v5, v6, v7, v8, v9, v10);
  return v3;
}

id sub_10006A4A4()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView);
  v2 = sub_100068128(v1);

  return v2;
}

void sub_10006A4F4()
{
  sub_10006CE58();
}

uint64_t sub_10006A5E4(uint64_t a1, const char *a2, void *a3, int a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;

  swift_bridgeObjectRelease(*(DARootViewController **)(v8 + OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_remoteFiles), a2, a3, a4, a5, a6, a7, a8);
  return sub_100035D74(*(_QWORD *)(v8 + OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion), *(_QWORD *)(v8 + OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion + 8));
}

id sub_10006A614()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FileReviewingTableViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FileReviewingTableViewController()
{
  return objc_opt_self(_TtC11Diagnostics32FileReviewingTableViewController);
}

uint64_t getEnumTagSinglePayload for DashboardSection(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FileReviewConsent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10006A77C + 4 * byte_10010D095[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10006A7B0 + 4 * byte_10010D090[v4]))();
}

uint64_t sub_10006A7B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006A7B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006A7C0);
  return result;
}

uint64_t sub_10006A7CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006A7D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10006A7D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006A7E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FileReviewConsent()
{
  return &type metadata for FileReviewConsent;
}

uint64_t storeEnumTagSinglePayload for FileReviewingTableViewController.ActivationReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10006A848 + 4 * byte_10010D09F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10006A87C + 4 * byte_10010D09A[v4]))();
}

uint64_t sub_10006A87C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006A884(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006A88CLL);
  return result;
}

uint64_t sub_10006A898(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006A8A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10006A8A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006A8AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FileReviewingTableViewController.ActivationReason()
{
  return &type metadata for FileReviewingTableViewController.ActivationReason;
}

unint64_t sub_10006A8CC()
{
  unint64_t result;

  result = qword_10016C170;
  if (!qword_10016C170)
  {
    result = swift_getWitnessTable(&unk_10010D154, &type metadata for FileReviewingTableViewController.ActivationReason);
    atomic_store(result, (unint64_t *)&qword_10016C170);
  }
  return result;
}

unint64_t sub_10006A914()
{
  unint64_t result;

  result = qword_10016C178;
  if (!qword_10016C178)
  {
    result = swift_getWitnessTable(&unk_10010D1BC, &type metadata for FileReviewConsent);
    atomic_store(result, (unint64_t *)&qword_10016C178);
  }
  return result;
}

uint64_t sub_10006A958()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  NSURL *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  NSString *v27;
  NSString *v28;
  NSString *v29;
  Class isa;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  char *v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSURL *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v49;
  char *v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  id v67;
  id v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSString v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  void (*v85)(char *, uint64_t);
  id v86;
  char v87;
  char *v88;

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016C190);
  __chkstk_darwin(v2);
  v4 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100035CA4((uint64_t *)&unk_10016B680);
  __chkstk_darwin(v5);
  v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v81 = (char *)&v77 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v77 - v15;
  v17 = (char *)objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
  v88 = (char *)_swiftEmptyArrayStorage;
  v87 = 0;
  v18 = *(uint64_t (**)(_QWORD))(v9 + 16);
  v83 = &v0[OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_directoryURL];
  v84 = (void (*)(char *, char *, uint64_t))v18;
  v19 = v18(v16);
  URL.absoluteString.getter(v19);
  v21 = v20;
  v85 = *(void (**)(char *, uint64_t))(v9 + 8);
  v85(v16, v8);
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  LODWORD(v21) = objc_msgSend(v17, "fileExistsAtPath:isDirectory:", v22, &v87);

  if ((_DWORD)v21 && v87 == 1)
  {
    v79 = v1;
    v80 = v4;
    v84(v16, v83, v8);
    URL._bridgeToObjectiveC()(v23);
    v78 = v24;
    v82 = v16;
    v85(v16, v8);
    v25 = sub_100035CA4((uint64_t *)&unk_10016C1A0);
    v26 = swift_allocObject(v25, 56, 7);
    *(_OWORD *)(v26 + 16) = xmmword_10010CE00;
    *(_QWORD *)(v26 + 32) = NSURLFileSizeKey;
    *(_QWORD *)(v26 + 40) = NSURLContentModificationDateKey;
    *(_QWORD *)(v26 + 48) = NSURLIsDirectoryKey;
    type metadata accessor for URLResourceKey(0);
    v27 = NSURLFileSizeKey;
    v28 = NSURLContentModificationDateKey;
    v29 = NSURLIsDirectoryKey;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v26);
    v86 = 0;
    v31 = v78;
    v32 = objc_msgSend(v17, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v78, isa, 4, &v86);

    v33 = v86;
    if (!v32)
    {
      v36 = v33;
      v37 = _convertNSErrorToError(_:)(v33);

      swift_willThrow();
      v38 = v82;
      v39 = v79;
      swift_bridgeObjectRelease(v88);
      v40 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v41 = swift_allocObject(v40, 72, 7);
      *(_OWORD *)(v41 + 16) = xmmword_10010BE30;
      v84(v38, v83, v8);
      URL._bridgeToObjectiveC()(v42);
      v44 = v43;
      v85(v38, v8);
      *(_QWORD *)(v41 + 56) = sub_100037118(0, &qword_10016C1B0, NSURL_ptr);
      *(_QWORD *)(v41 + 64) = sub_10006D60C();
      *(_QWORD *)(v41 + 32) = v44;
      v45 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v46 = (void *)static OS_os_log.default.getter(v45);
      v47 = static os_log_type_t.default.getter(v46);
      os_log(_:dso:log:type:_:)("Failed to get contents of directory %{public}@", 46, 2, &_mh_execute_header, v46, v47, v41);
      swift_bridgeObjectRelease(v41);

      swift_errorRelease(v37);
      return swift_bridgeObjectRetain(*(_QWORD *)&v39[OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_remoteFiles]);
    }
    v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v8);

    v35 = v17;
    sub_10006BD94(v34, v35);
    v50 = v49;

    swift_bridgeObjectRelease(v88);
    v88 = v50;
    v1 = v79;
    v4 = v80;
    v16 = v82;
  }
  v51 = swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_remoteFiles]);
  sub_1000BA1B4(v51);
  v52 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v53 = objc_msgSend(v52, "snapshot");

  v54 = objc_msgSend(v53, "consentData");
  if (v54)
  {
    v82 = v16;
    v79 = v17;
    v80 = v4;
    v55 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v57 = v56;

    sub_100066350(v55, v57);
    sub_100066350(0, 0xF000000000000000);
    v83 = v88;
    v58 = *((_QWORD *)v88 + 2);
    if (v58)
    {
      v59 = &v83[(*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)];
      v60 = *(_QWORD *)(v9 + 72);
      swift_bridgeObjectRetain_n(v83, 2);
      while (1)
      {
        v84(v7, v59, v8);
        v61 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
        v61(v7, 0, 1, v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
          break;
        v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
        v63 = URL.lastPathComponent.getter(v62);
        v65 = v64;
        if (v63 == 0x2E746E65736E6F63 && v64 == 0xEB00000000666470)
        {
          swift_bridgeObjectRelease(0xEB00000000666470);
          v85(v12, v8);
LABEL_22:
          swift_bridgeObjectRelease_n(v83, 2);

          return (uint64_t)v88;
        }
        v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v63, v64, 0x2E746E65736E6F63, 0xEB00000000666470, 0);
        swift_bridgeObjectRelease(v65);
        v85(v12, v8);
        if ((v66 & 1) != 0)
          goto LABEL_22;
        v59 += v60;
        if (!--v58)
          goto LABEL_17;
      }
    }
    else
    {
      v61 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain_n(v83, 2);
LABEL_17:
      v61(v7, 1, 1, v8);
    }
    swift_bridgeObjectRelease_n(v83, 2);
    v67 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v68 = objc_msgSend(v67, "temporaryDirectory");

    v69 = v82;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v68);

    v70 = v81;
    URL.appendingPathComponent(_:)(0x2E746E65736E6F63, 0xEB00000000666470);
    v71 = ((uint64_t (*)(char *, uint64_t))v85)(v69, v8);
    URL.absoluteString.getter(v71);
    v73 = v72;
    v74 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v73);
    v75 = v79;
    LOBYTE(v73) = objc_msgSend(v79, "fileExistsAtPath:", v74);

    if ((v73 & 1) == 0)
      sub_10006C970();
    v76 = (uint64_t)v80;
    v84(v80, v70, v8);
    sub_100034B78(0, 0, v76);

    v85(v70, v8);
  }
  else
  {

  }
  return (uint64_t)v88;
}

DARootViewController *sub_10006B14C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  DARootViewController *v18;
  DARootViewController *v19;
  NSString v20;
  SEL v21;
  id v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  NSURL *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSString *v33;
  NSString *v34;
  NSString *v35;
  Class isa;
  SEL v37;
  id v38;
  int v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  SEL v51;
  id v52;
  int v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  NSURL *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  SEL v66;
  id v67;
  int v68;
  id v69;
  id v70;
  id v71;
  id v72;
  _QWORD *v73;
  DARootViewController *v75;
  DARootViewController *v76;
  SEL v77;
  id v78;
  int v79;
  id v80;
  id v81;
  id v82;
  id v83;
  _QWORD *v84;
  uint64_t v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  DARootViewController *v99;
  void *v100;
  int v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  DARootViewController *v106;
  char v107;
  SEL v108;
  id v109;
  int v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  char *v117;
  char *v118;
  uint64_t v119;
  DARootViewController *v120;
  DARootViewController *v121;
  NSString v122;
  SEL v123;
  id v124;
  int v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  id v132;
  char *v133;
  char *v134;
  char *v135;
  DARootViewController *v136;
  uint64_t v137;
  void (*v138)(char *, uint64_t);
  char v139;
  DARootViewController *v140;
  id v141[3];

  v0 = sub_100035CA4((uint64_t *)&unk_10016C190);
  __chkstk_darwin(v0);
  v2 = (char *)&v132 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100035CA4((uint64_t *)&unk_10016B680);
  __chkstk_darwin(v3);
  v5 = (char *)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v132 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v132 - v14;
  v16 = objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
  v140 = &_swiftEmptyArrayStorage;
  v139 = 0;
  v17 = sub_100068C6C((uint64_t)v15);
  URL.absoluteString.getter(v17);
  v19 = v18;
  v138 = *(void (**)(char *, uint64_t))(v7 + 8);
  v138(v15, v6);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19, v21, v22, v23, v24, v25, v26, v27);
  LODWORD(v19) = objc_msgSend(v16, "fileExistsAtPath:isDirectory:", v20, &v139);

  v137 = v7;
  if ((_DWORD)v19 && v139 == 1)
  {
    v133 = v13;
    v134 = v2;
    sub_100068C6C((uint64_t)v15);
    URL._bridgeToObjectiveC()(v28);
    v30 = v29;
    v135 = v15;
    v138(v15, v6);
    v31 = sub_100035CA4((uint64_t *)&unk_10016C1A0);
    v32 = swift_allocObject(v31, 56, 7);
    *(_OWORD *)(v32 + 16) = xmmword_10010CE00;
    *(_QWORD *)(v32 + 32) = NSURLFileSizeKey;
    *(_QWORD *)(v32 + 40) = NSURLContentModificationDateKey;
    *(_QWORD *)(v32 + 48) = NSURLIsDirectoryKey;
    type metadata accessor for URLResourceKey(0);
    v33 = NSURLFileSizeKey;
    v34 = NSURLContentModificationDateKey;
    v35 = NSURLIsDirectoryKey;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease((DARootViewController *)v32, v37, v38, v39, v40, v41, v42, v43);
    v141[0] = 0;
    v44 = objc_msgSend(v16, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v30, isa, 4, v141);

    v45 = v141[0];
    if (!v44)
    {
      v48 = v45;
      v49 = _convertNSErrorToError(_:)(v45);

      swift_willThrow();
      v50 = (uint64_t)v135;
      swift_bridgeObjectRelease(v140, v51, v52, v53, v54, v55, v56, v57);
      v58 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v59 = swift_allocObject(v58, 72, 7);
      *(_OWORD *)(v59 + 16) = xmmword_10010BE30;
      sub_100068C6C(v50);
      URL._bridgeToObjectiveC()(v60);
      v62 = v61;
      v138((char *)v50, v6);
      *(_QWORD *)(v59 + 56) = sub_100037118(0, &qword_10016C1B0, NSURL_ptr);
      *(_QWORD *)(v59 + 64) = sub_10006D60C();
      *(_QWORD *)(v59 + 32) = v62;
      v63 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v64 = (void *)static OS_os_log.default.getter(v63);
      v65 = static os_log_type_t.default.getter(v64);
      os_log(_:dso:log:type:_:)("Failed to get contents of directory %{public}@", 46, 2, &_mh_execute_header, v64, v65, v59);
      swift_bridgeObjectRelease((DARootViewController *)v59, v66, v67, v68, v69, v70, v71, v72);

      swift_errorRelease(v49);
      v73 = (Class *)((char *)&v136->super.super.super.super.isa
                    + OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_remoteFiles);
      swift_beginAccess((char *)v136 + OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_remoteFiles, v141, 0, 0);
      return (DARootViewController *)swift_bridgeObjectRetain(*v73);
    }
    v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v6);

    v47 = v16;
    sub_10006BD94(v46, v47);
    v76 = v75;

    swift_bridgeObjectRelease(v140, v77, v78, v79, v80, v81, v82, v83);
    v140 = v76;
    v2 = v134;
    v15 = v135;
    v13 = v133;
    v7 = v137;
  }
  v84 = (Class *)((char *)&v136->super.super.super.super.isa
                + OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_remoteFiles);
  swift_beginAccess((char *)v136 + OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_remoteFiles, v141, 0, 0);
  v85 = swift_bridgeObjectRetain(*v84);
  sub_1000BA1B4(v85);
  v86 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v87 = objc_msgSend(v86, "snapshot");

  v88 = objc_msgSend(v87, "consentData");
  if (v88)
  {
    v132 = v16;
    v133 = v13;
    v134 = v2;
    v135 = v15;
    v89 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v88);
    v91 = v90;

    sub_100066350(v89, v91);
    sub_100066350(0, 0xF000000000000000);
    v136 = v140;
    v92 = *(_QWORD *)v140->remoteCardFilter;
    if (v92)
    {
      v93 = (char *)v136 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v94 = *(_QWORD *)(v7 + 72);
      v95 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain_n(v136, 2);
      while (1)
      {
        v95(v5, v93, v6);
        v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v96(v5, 0, 1, v6);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
          break;
        v97 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
        v98 = URL.lastPathComponent.getter(v97);
        v106 = v99;
        if (v98 == 0x2E746E65736E6F63 && v99 == (DARootViewController *)0xEB00000000666470)
        {
          swift_bridgeObjectRelease((DARootViewController *)0xEB00000000666470, (SEL)0xEB00000000666470, v100, v101, v102, v103, v104, v105);
          v138(v10, v6);
LABEL_22:
          swift_bridgeObjectRelease_n(v136, 2);

          return v140;
        }
        v107 = _stringCompareWithSmolCheck(_:_:expecting:)(v98, v99, 0x2E746E65736E6F63, 0xEB00000000666470, 0);
        swift_bridgeObjectRelease(v106, v108, v109, v110, v111, v112, v113, v114);
        v138(v10, v6);
        if ((v107 & 1) != 0)
          goto LABEL_22;
        v93 += v94;
        --v92;
        v7 = v137;
        if (!v92)
          goto LABEL_17;
      }
    }
    else
    {
      v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      swift_bridgeObjectRetain_n(v136, 2);
LABEL_17:
      v96(v5, 1, 1, v6);
    }
    swift_bridgeObjectRelease_n(v136, 2);
    v115 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v116 = objc_msgSend(v115, "temporaryDirectory");

    v117 = v135;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v116);

    v118 = v133;
    URL.appendingPathComponent(_:)(0x2E746E65736E6F63, 0xEB00000000666470);
    v119 = ((uint64_t (*)(char *, uint64_t))v138)(v117, v6);
    URL.absoluteString.getter(v119);
    v121 = v120;
    v122 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v121, v123, v124, v125, v126, v127, v128, v129);
    v130 = v132;
    LOBYTE(v121) = objc_msgSend(v132, "fileExistsAtPath:", v122);

    if ((v121 & 1) == 0)
      sub_10006C970();
    v131 = (uint64_t)v134;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v134, v118, v6);
    sub_100034B78(0, 0, v131);

    v138(v118, v6);
  }
  else
  {

  }
  return v140;
}

uint64_t sub_10006B948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  NSString v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v9 = objc_msgSend(v8, "snapshot");

  v10 = objc_msgSend(v9, "dedSessionIdentifier");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  if (v11 == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease(a2);
    return sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x54534F4E47414944, (void *)0xEF53474F4C5F4349);
  }
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v11, v13, 0);
  swift_bridgeObjectRelease(v13);
  if ((v15 & 1) != 0)
    return sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x54534F4E47414944, (void *)0xEF53474F4C5F4349);
  v52 = (_QWORD *)a1;
  v53 = a2;
  v50 = 46;
  v51 = 0xE100000000000000;
  v16 = sub_10003F14C();
  v17 = StringProtocol.components<A>(separatedBy:)(&v50, &type metadata for String, &type metadata for String, v16, v16);
  v18 = (_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 16);
  if (!v19)
  {
    swift_bridgeObjectRelease(v17);
LABEL_20:
    swift_bridgeObjectRetain(a2);
    return a1;
  }
  v20 = v17 + 16 * v19;
  v21 = *(_QWORD *)(v20 + 24);
  v52 = *(_QWORD **)(v20 + 16);
  v53 = v21;
  v22 = swift_bridgeObjectRetain(v21);
  static CharacterSet.decimalDigits.getter(v22);
  v23 = StringProtocol.trimmingCharacters(in:)(v7, &type metadata for String, v16);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease(v53);
  v26 = String.count.getter(v23, v25);
  swift_bridgeObjectRelease(v25);
  if (v26)
  {
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRetain(a2);
    v27 = a2;
    goto LABEL_17;
  }
  if (!v18[2])
  {
    __break(1u);
LABEL_23:
    result = (uint64_t)sub_100034AD4(v18);
    v18 = (_QWORD *)result;
    v29 = *(_QWORD *)(result + 16);
    if (v29)
      goto LABEL_16;
    goto LABEL_24;
  }
  result = swift_isUniquelyReferenced_nonNull_native(v18);
  if ((result & 1) == 0)
    goto LABEL_23;
  v29 = v18[2];
  if (v29)
  {
LABEL_16:
    v30 = v29 - 1;
    v31 = v18[2 * v30 + 5];
    v18[2] = v30;
    swift_bridgeObjectRelease(v31);
    v52 = v18;
    v32 = sub_100035CA4(&qword_10016C1D0);
    v33 = sub_10006D664();
    BidirectionalCollection<>.joined(separator:)(46, 0xE100000000000000, v32, v33);
    v27 = v34;
    swift_bridgeObjectRelease(v18);
LABEL_17:
    v35 = (void *)objc_opt_self(ELSWhitelist);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v37 = objc_msgSend(v35, "findEntryForBundleIdentifier:", v36);

    if (v37)
    {
      v38 = objc_msgSend(v37, "parameterName");
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v41 = v40;

      v52 = (_QWORD *)v39;
      v53 = v41;
      v50 = 0x616C7562656ELL;
      v51 = 0xE600000000000000;
      v42 = StringProtocol.contains<A>(_:)(&v50, &type metadata for String, &type metadata for String, v16, v16);
      swift_bridgeObjectRelease(v41);
      v43 = objc_msgSend(v37, "displayNameLocalizationKey");
      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v46 = v45;

      if ((v42 & 1) != 0)
      {
        v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-Nebula"));
        v49 = v48;
        a1 = sub_10003FFA0(v47, v48, (uint64_t)_swiftEmptyArrayStorage, v44, v46);

        swift_bridgeObjectRelease(v46);
        swift_bridgeObjectRelease(v49);
      }
      else
      {
        a1 = sub_10003FFA0(0, 0, (uint64_t)_swiftEmptyArrayStorage, v44, v46);

        swift_bridgeObjectRelease(v46);
      }
      return a1;
    }
    goto LABEL_20;
  }
LABEL_24:
  __break(1u);
  return result;
}

double sub_10006BD94(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  char v19;
  char *v20;
  NSURL *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSURLResourceKey v26;
  NSString *v27;
  Class isa;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  unint64_t v37;
  unint64_t v38;
  double result;
  id v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  __int128 v43;
  NSURLResourceKey v44;
  id v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t (*v52)(char *, char *, uint64_t);
  char *v53;
  id v54;
  char *v55;

  v45 = a2;
  v3 = sub_100035CA4((uint64_t *)&unk_10016B680);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v51 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v50 = (char *)&v42 - v11;
  __chkstk_darwin(v10);
  v53 = (char *)&v42 - v12;
  v55 = (char *)_swiftEmptyArrayStorage;
  v49 = *(_QWORD *)(a1 + 16);
  if (v49)
  {
    v13 = 0;
    v44 = NSURLIsDirectoryKey;
    v43 = xmmword_10010BE30;
    v47 = v5;
    v48 = a1;
    while (1)
    {
      if (v13 >= *(_QWORD *)(a1 + 16))
        __break(1u);
      v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v15 = *(_QWORD *)(v7 + 72);
      v16 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      v16(v5, a1 + v14 + v15 * v13, v6);
      v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v46(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
        goto LABEL_18;
      v17 = v53;
      v52 = *(uint64_t (**)(char *, char *, uint64_t))(v7 + 32);
      v18 = v52(v53, v5, v6);
      v19 = URL.hasDirectoryPath.getter(v18);
      v20 = v50;
      v16(v50, (unint64_t)v17, v6);
      if ((v19 & 1) == 0)
        break;
      URL._bridgeToObjectiveC()(v21);
      v23 = v22;
      v24 = sub_100035CA4((uint64_t *)&unk_10016C1A0);
      v25 = swift_allocObject(v24, 40, 7);
      *(_OWORD *)(v25 + 16) = v43;
      v26 = v44;
      *(_QWORD *)(v25 + 32) = v44;
      type metadata accessor for URLResourceKey(0);
      v27 = v26;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v25);
      v54 = 0;
      v29 = objc_msgSend(v45, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v23, isa, 4, &v54);

      v30 = v54;
      if (!v29)
      {
        v40 = v54;
        _convertNSErrorToError(_:)(v30);

        swift_willThrow();
        v41 = *(void (**)(char *, uint64_t))(v7 + 8);
        v41(v50, v6);
        v41(v53, v6);
        swift_bridgeObjectRelease(v48);
        *(_QWORD *)&result = swift_release(v55).n128_u64[0];
        return result;
      }
      v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v6);
      v32 = v30;

      v33 = *(_QWORD *)(v31 + 16);
      swift_bridgeObjectRelease(v31);
      v34 = *(void (**)(char *, uint64_t))(v7 + 8);
      v34(v50, v6);
      if (v33)
        goto LABEL_11;
      v34(v53, v6);
LABEL_3:
      ++v13;
      a1 = v48;
      v5 = v47;
      if (v49 == v13)
      {
        v46(v47, 1, 1, v6);
        goto LABEL_18;
      }
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
LABEL_11:
    v35 = (void (*)(char *, char *, uint64_t))v52;
    v52(v51, v53, v6);
    v36 = v55;
    if ((swift_isUniquelyReferenced_nonNull_native(v55) & 1) == 0)
    {
      sub_100057284(0, *((_QWORD *)v36 + 2) + 1, 1);
      v36 = v55;
    }
    v38 = *((_QWORD *)v36 + 2);
    v37 = *((_QWORD *)v36 + 3);
    if (v38 >= v37 >> 1)
    {
      sub_100057284(v37 > 1, v38 + 1, 1);
      v36 = v55;
    }
    *((_QWORD *)v36 + 2) = v38 + 1;
    v35(&v36[v14 + v38 * v15], v51, v6);
    v55 = v36;
    goto LABEL_3;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_18:
  swift_bridgeObjectRelease(a1);
  sub_100036FA0((uint64_t)v5, (uint64_t *)&unk_10016B680);
  return result;
}

void sub_10006C1D8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void *v35;
  void *v36;
  void *v37;
  unint64_t v38;
  char v39;
  void *v40;
  NSURL *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  NSURL *v45;
  void *v46;
  void *v47;
  void (*v48)(char *, uint64_t);
  id v49;
  NSURL *v50;
  void *v51;
  void *v52;
  unsigned __int8 v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char v60;
  NSString v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  Class isa;
  id v75;
  void *v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  id v90;
  _QWORD v91[2];
  id v92[2];
  char v93;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v89 = (char *)&v88 - v7;
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v88 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v88 - v11;
  v13 = objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
  v90 = v0;
  v14 = sub_10006A958();
  v15 = IndexPath.row.getter();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_40:
    __break(1u);
  }
  if (v15 >= *(_QWORD *)(v14 + 16))
    goto LABEL_40;
  v16 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
  v16(v12, v14+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v15, v1);
  v17 = swift_bridgeObjectRelease(v14);
  URL.path.getter(v17);
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v21 = v13;
  LOBYTE(v19) = objc_msgSend(v13, "fileExistsAtPath:", v20);

  if ((v19 & 1) == 0)
  {
    v26 = static os_log_type_t.debug.getter();
    v27 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v28 = (void *)static OS_os_log.default.getter(v27);
    os_log(_:dso:log:_:_:)(v26, &_mh_execute_header, v28, "Attempted to select row where file does not exist. Likely, file is remote", 73, 2, _swiftEmptyArrayStorage);

LABEL_29:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v12, v1);
    return;
  }
  v93 = 0;
  v22 = ((uint64_t (*)(void))URL.pathExtension.getter)();
  v24 = v23;
  if (v22 == 31335 && v23 == 0xE200000000000000)
  {
    v25 = swift_bridgeObjectRelease(0xE200000000000000);
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, 31335, 0xE200000000000000, 0);
    v25 = swift_bridgeObjectRelease(v24);
    if ((v29 & 1) == 0)
      goto LABEL_17;
  }
  v30 = URL.deletingPathExtension()(v25);
  v31 = URL.pathExtension.getter(v30);
  v33 = v32;
  v88 = *(void (**)(char *, uint64_t))(v2 + 8);
  v88(v10, v1);
  if (v31 == 7496052 && v33 == 0xE300000000000000)
  {
    v25 = swift_bridgeObjectRelease(0xE300000000000000);
    v21 = v13;
    goto LABEL_13;
  }
  v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, 7496052, 0xE300000000000000, 0);
  v25 = swift_bridgeObjectRelease(v33);
  v21 = v13;
  if ((v34 & 1) == 0)
  {
LABEL_17:
    v56 = URL.pathExtension.getter(v25);
    v58 = v57;
    if (v56 == 0x6968637261676F6CLL && v57 == 0xEA00000000006576)
    {
      swift_bridgeObjectRelease(0xEA00000000006576);
      v59 = v90;
    }
    else
    {
      v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v56, v57, 0x6968637261676F6CLL, 0xEA00000000006576, 0);
      swift_bridgeObjectRelease(v58);
      v59 = v90;
      if ((v60 & 1) == 0)
      {
        v61 = objc_msgSend(v90, "description");
        if (!v61)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v63 = v62;
          v61 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v63);
        }
        v64 = objc_msgSend(v21, "fileExistsAtPath:isDirectory:", v61, &v93);

        if (v64)
        {
          if (v93 == 1)
          {
            v65 = (uint64_t)v89;
            v16(v89, (unint64_t)v12, v1);
            v66 = objc_allocWithZone((Class)type metadata accessor for FileBrowsingTableViewController(0));
            v67 = sub_100048098(v65, 0, 0);
            v68 = objc_msgSend(v59, "navigationController");
LABEL_27:
            v75 = v68;
            if (!v75)
            {
              (*(void (**)(char *, uint64_t))(v2 + 8))(v12, v1);

              return;
            }
            v76 = v75;
            objc_msgSend(v75, "pushViewController:animated:", v67, 1);

            goto LABEL_29;
          }
        }
      }
    }
    v69 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
    v70 = swift_allocObject(v69, 40, 7);
    *(_OWORD *)(v70 + 16) = xmmword_10010C200;
    URL._bridgeToObjectiveC()((NSURL *)&unk_10010C000);
    *(_QWORD *)(v70 + 32) = v71;
    v92[0] = (id)v70;
    specialized Array._endMutation()(v71);
    v72 = v92[0];
    v73 = objc_allocWithZone((Class)QLPreviewController);
    sub_100035CA4((uint64_t *)&unk_10016C180);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v72);
    v67 = objc_msgSend(v73, "initWithPreviewItems:", isa);

    v68 = objc_msgSend(v59, "navigationController");
    goto LABEL_27;
  }
LABEL_13:
  v35 = (void *)URL.absoluteString.getter(v25);
  v37 = v36;
  v92[0] = v35;
  v92[1] = v36;
  v91[0] = 0x6863746157;
  v91[1] = 0xE500000000000000;
  v38 = sub_10003F14C();
  v39 = StringProtocol.contains<A>(_:)(v91, &type metadata for String, &type metadata for String, v38, v38);
  v25 = swift_bridgeObjectRelease(v37);
  if ((v39 & 1) == 0)
    goto LABEL_17;
  v40 = (void *)objc_opt_self(DSMutableArchive);
  URL._bridgeToObjectiveC()(v41);
  v43 = v42;
  v44 = (uint64_t)v89;
  URL.deletingLastPathComponent()();
  URL._bridgeToObjectiveC()(v45);
  v47 = v46;
  v48 = v88;
  v88((char *)v44, v1);
  LODWORD(v40) = objc_msgSend(v40, "extractArchive:toDirectory:", v43, v47);

  if ((_DWORD)v40)
  {
    v49 = objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
    URL._bridgeToObjectiveC()(v50);
    v52 = v51;
    v92[0] = 0;
    v53 = objc_msgSend(v49, "removeItemAtURL:error:", v51, v92);

    v54 = v92[0];
    if ((v53 & 1) != 0)
    {
      v55 = v92[0];
    }
    else
    {
      v78 = v92[0];
      v79 = _convertNSErrorToError(_:)(v54);

      swift_willThrow();
      v80 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v81 = (void *)static OS_os_log.default.getter(v80);
      v82 = static os_log_type_t.default.getter(v81);
      os_log(_:dso:log:type:_:)("Failed to delete tar from extracted cosysdiagnose", 49, 2, &_mh_execute_header, v81, v82, _swiftEmptyArrayStorage);

      v55 = (id)swift_errorRelease(v79);
    }
    v77 = v90;
    v83 = URL.deletingPathExtension()(v55);
    URL.deletingPathExtension()(v83);
    v48(v5, v1);
  }
  else
  {
    v16((char *)v44, (unint64_t)v12, v1);
    v77 = v90;
  }
  v84 = objc_allocWithZone((Class)type metadata accessor for FileBrowsingTableViewController(0));
  v85 = sub_100048098(v44, 0, 0);
  v86 = objc_msgSend(v77, "navigationController");
  if (v86)
  {
    v87 = v86;
    objc_msgSend(v86, "pushViewController:animated:", v85, 1);

  }
  else
  {

  }
  v48(v12, v1);
}

void sub_10006C970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v37 - v6;
  __chkstk_darwin(v5);
  v9 = (char *)&v37 - v8;
  v10 = (void *)objc_opt_self(NSFileManager);
  v11 = objc_msgSend(v10, "defaultManager");
  v12 = objc_msgSend(v10, "defaultManager");
  v13 = objc_msgSend(v12, "temporaryDirectory");

  static URL._unconditionallyBridgeFromObjectiveC(_:)(v13);
  URL.appendingPathComponent(_:)(0x2E746E65736E6F63, 0xEB00000000666470);
  v14 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  v15 = v14(v7, v0);
  URL.path.getter(v15);
  v17 = v16;
  v14(v9, v0);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  LOBYTE(v17) = objc_msgSend(v11, "fileExistsAtPath:", v18);

  if ((v17 & 1) == 0)
  {
    v19 = (void *)objc_opt_self(ELSManager);
    v20 = objc_msgSend(v19, "sharedManager");
    v21 = objc_msgSend(v20, "snapshot");

    v22 = objc_msgSend(v21, "consentData");
    if (v22)
    {
      v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v25 = v24;

      sub_100066350(v23, v25);
      sub_100066350(0, 0xF000000000000000);
      v26 = objc_msgSend(v19, "sharedManager");
      v27 = objc_msgSend(v26, "snapshot");

      v28 = objc_msgSend(v27, "consentData");
      if (v28)
      {
        v29 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v31 = v30;

        v32 = objc_msgSend(v10, "defaultManager");
        v33 = objc_msgSend(v32, "temporaryDirectory");

        static URL._unconditionallyBridgeFromObjectiveC(_:)(v33);
        URL.appendingPathComponent(_:)(0x2E746E65736E6F63, 0xEB00000000666470);
        v14(v9, v0);
        Data.write(to:options:)(v4, 1, v29, v31);
        v14(v4, v0);
        sub_100066264(v29, v31);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      v34 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v35 = (void *)static OS_os_log.default.getter(v34);
      v36 = static os_log_type_t.default.getter(v35);
      os_log(_:dso:log:type:_:)("Error: No consent snapshot exists", 33, 2, &_mh_execute_header, v35, v36, _swiftEmptyArrayStorage);

    }
  }
}

void sub_10006CE58()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  DARootViewController *v15;
  unint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  SEL v18;
  id v19;
  int v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  DARootViewController *v26;
  DARootViewController *v27;
  NSString v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  DARootViewController *v39;
  void *v40;
  int v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  DARootViewController *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char v51;
  SEL v52;
  id v53;
  int v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  DARootViewController *v61;
  DARootViewController *v62;
  const char *v63;
  void *v64;
  int v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  char v70;
  SEL v71;
  id v72;
  int v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  DARootViewController *v79;
  DARootViewController *v80;
  unint64_t v81;
  char v82;
  SEL v83;
  id v84;
  int v85;
  id v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  NSURL *v91;
  void *v92;
  void *v93;
  NSURL *v94;
  void *v95;
  void *v96;
  void (*v97)(char *, uint64_t);
  id v98;
  NSURL *v99;
  void *v100;
  void *v101;
  unsigned __int8 v102;
  id v103;
  id v104;
  uint64_t v105;
  DARootViewController *v106;
  void *v107;
  int v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  DARootViewController *v113;
  id v114;
  char v115;
  SEL v116;
  id v117;
  int v118;
  id v119;
  id v120;
  id v121;
  id v122;
  NSString v123;
  DARootViewController *v124;
  DARootViewController *v125;
  SEL v126;
  id v127;
  int v128;
  id v129;
  id v130;
  id v131;
  id v132;
  unsigned int v133;
  id v134;
  id v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  DARootViewController *v140;
  id v141;
  Class isa;
  SEL v143;
  id v144;
  int v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  void *v151;
  id v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  id v160;
  id v161;
  id v162;
  void *v163;
  void (*v164)(char *, uint64_t);
  char *v165;
  id v166;
  _QWORD v167[2];
  id v168[2];
  char v169;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v164 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v164 - v7;
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v164 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v164 - v12;
  v14 = objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
  v166 = v0;
  v15 = sub_10006B14C();
  v16 = IndexPath.row.getter(v15);
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_40:
    __break(1u);
  }
  if (v16 >= *(_QWORD *)v15->remoteCardFilter)
    goto LABEL_40;
  v165 = v5;
  v17 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v17(v13, (char *)v15+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v16, v1);
  swift_bridgeObjectRelease(v15, v18, v19, v20, v21, v22, v23, v24);
  URL.path.getter(v25);
  v27 = v26;
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27, v29, v30, v31, v32, v33, v34, v35);
  v36 = v14;
  LOBYTE(v27) = objc_msgSend(v14, "fileExistsAtPath:", v28);

  if ((v27 & 1) == 0)
  {
    v48 = static os_log_type_t.debug.getter();
    v49 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v50 = (void *)static OS_os_log.default.getter(v49);
    os_log(_:dso:log:_:_:)(v48, &_mh_execute_header, v50, "Attempted to select row where file does not exist. Likely, file is remote", 73, 2, &_swiftEmptyArrayStorage);

LABEL_29:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v1);
    return;
  }
  sub_1000D1CB8((uint64_t)v13, (uint64_t)v11);
  v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 40))(v13, v11, v1);
  v169 = 0;
  v38 = URL.pathExtension.getter(v37);
  v46 = v39;
  if (v38 == 31335 && v39 == (DARootViewController *)0xE200000000000000)
  {
    swift_bridgeObjectRelease((DARootViewController *)0xE200000000000000, (SEL)0xE200000000000000, v40, v41, v42, v43, v44, v45);
  }
  else
  {
    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v39, 31335, 0xE200000000000000, 0);
    swift_bridgeObjectRelease(v46, v52, v53, v54, v55, v56, v57, v58);
    if ((v51 & 1) == 0)
      goto LABEL_17;
  }
  v59 = URL.deletingPathExtension()(v47);
  v60 = URL.pathExtension.getter(v59);
  v62 = v61;
  v164 = *(void (**)(char *, uint64_t))(v2 + 8);
  v164(v8, v1);
  if (v60 == 7496052 && v62 == (DARootViewController *)0xE300000000000000)
  {
    swift_bridgeObjectRelease((DARootViewController *)0xE300000000000000, v63, v64, v65, v66, v67, v68, v69);
    v36 = v14;
    goto LABEL_13;
  }
  v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v62, 7496052, 0xE300000000000000, 0);
  swift_bridgeObjectRelease(v62, v71, v72, v73, v74, v75, v76, v77);
  v36 = v14;
  if ((v70 & 1) == 0)
  {
LABEL_17:
    v105 = URL.pathExtension.getter(v47);
    v113 = v106;
    if (v105 == 0x6968637261676F6CLL && v106 == (DARootViewController *)0xEA00000000006576)
    {
      swift_bridgeObjectRelease((DARootViewController *)0xEA00000000006576, (SEL)0xEA00000000006576, v107, v108, v109, v110, v111, v112);
      v114 = v166;
    }
    else
    {
      v115 = _stringCompareWithSmolCheck(_:_:expecting:)(v105, v106, 0x6968637261676F6CLL, 0xEA00000000006576, 0);
      swift_bridgeObjectRelease(v113, v116, v117, v118, v119, v120, v121, v122);
      v114 = v166;
      if ((v115 & 1) == 0)
      {
        v123 = objc_msgSend(v166, "description");
        if (!v123)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v125 = v124;
          v123 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v125, v126, v127, v128, v129, v130, v131, v132);
        }
        v133 = objc_msgSend(v36, "fileExistsAtPath:isDirectory:", v123, &v169);

        if (v133)
        {
          if (v169 == 1)
          {
            v17(v11, v13, v1);
            v134 = objc_allocWithZone((Class)type metadata accessor for FileBrowsingTableViewController(0));
            v135 = sub_100048098((uint64_t)v11, 0, 0);
            v136 = objc_msgSend(v114, "navigationController");
LABEL_27:
            v150 = v136;
            if (!v150)
            {
              (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v1);

              return;
            }
            v151 = v150;
            objc_msgSend(v150, "pushViewController:animated:", v135, 1);

            goto LABEL_29;
          }
        }
      }
    }
    v137 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
    v138 = swift_allocObject(v137, 40, 7);
    *(_OWORD *)(v138 + 16) = xmmword_10010C200;
    URL._bridgeToObjectiveC()((NSURL *)&unk_10010C000);
    *(_QWORD *)(v138 + 32) = v139;
    v168[0] = (id)v138;
    specialized Array._endMutation()(v139);
    v140 = (DARootViewController *)v168[0];
    v141 = objc_allocWithZone((Class)QLPreviewController);
    sub_100035CA4((uint64_t *)&unk_10016C180);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v140, v143, v144, v145, v146, v147, v148, v149);
    v135 = objc_msgSend(v141, "initWithPreviewItems:", isa);

    v136 = objc_msgSend(v114, "navigationController");
    goto LABEL_27;
  }
LABEL_13:
  v78 = (void *)URL.absoluteString.getter(v47);
  v80 = v79;
  v168[0] = v78;
  v168[1] = v79;
  v167[0] = 0x6863746157;
  v167[1] = 0xE500000000000000;
  v81 = sub_10003F14C();
  v82 = StringProtocol.contains<A>(_:)(v167, &type metadata for String, &type metadata for String, v81, v81);
  swift_bridgeObjectRelease(v80, v83, v84, v85, v86, v87, v88, v89);
  if ((v82 & 1) == 0)
    goto LABEL_17;
  v90 = (void *)objc_opt_self(DSMutableArchive);
  URL._bridgeToObjectiveC()(v91);
  v93 = v92;
  URL.deletingLastPathComponent()();
  URL._bridgeToObjectiveC()(v94);
  v96 = v95;
  v97 = v164;
  v164(v11, v1);
  LODWORD(v90) = objc_msgSend(v90, "extractArchive:toDirectory:", v93, v96);

  if ((_DWORD)v90)
  {
    v98 = objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
    URL._bridgeToObjectiveC()(v99);
    v101 = v100;
    v168[0] = 0;
    v102 = objc_msgSend(v98, "removeItemAtURL:error:", v100, v168);

    v103 = v168[0];
    if ((v102 & 1) != 0)
    {
      v104 = v168[0];
    }
    else
    {
      v153 = v168[0];
      v154 = _convertNSErrorToError(_:)(v103);

      swift_willThrow();
      v155 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v156 = (void *)static OS_os_log.default.getter(v155);
      v157 = static os_log_type_t.default.getter(v156);
      os_log(_:dso:log:type:_:)("Failed to delete tar from extracted cosysdiagnose", 49, 2, &_mh_execute_header, v156, v157, &_swiftEmptyArrayStorage);

      v104 = (id)swift_errorRelease(v154);
    }
    v158 = v165;
    v152 = v166;
    v159 = URL.deletingPathExtension()(v104);
    URL.deletingPathExtension()(v159);
    v97(v158, v1);
  }
  else
  {
    v17(v11, v13, v1);
    v152 = v166;
  }
  v160 = objc_allocWithZone((Class)type metadata accessor for FileBrowsingTableViewController(0));
  v161 = sub_100048098((uint64_t)v11, 0, 0);
  v162 = objc_msgSend(v152, "navigationController");
  if (v162)
  {
    v163 = v162;
    objc_msgSend(v162, "pushViewController:animated:", v161, 1);

  }
  else
  {

  }
  v97(v13, v1);
}

unint64_t sub_10006D60C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C1B8;
  if (!qword_10016C1B8)
  {
    v1 = sub_100037118(255, &qword_10016C1B0, NSURL_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10016C1B8);
  }
  return result;
}

unint64_t sub_10006D664()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C1D8;
  if (!qword_10016C1D8)
  {
    v1 = sub_100035D30(&qword_10016C1D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10016C1D8);
  }
  return result;
}

uint64_t sub_10006D6B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10006D6D4()
{
  uint64_t v0;

  return sub_100069F24(*(_BYTE **)(v0 + 16));
}

void sub_10006D6DC()
{
  uint64_t v0;

  sub_100069FE8(*(void **)(v0 + 16));
}

id sub_10006D6E4(uint64_t a1)
{
  uint64_t v1;

  return sub_10006A2F8(a1, *(_BYTE **)(v1 + 16));
}

uint64_t sub_10006D6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006D6FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_10006D704(DARootViewController *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000695C0(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_10006D70C()
{
  uint64_t v0;

  sub_1000692B8(*(void **)(v0 + 16));
}

id sub_10006D714(int a1)
{
  uint64_t v1;

  return sub_100069378(a1, *(char **)(v1 + 16));
}

id sub_10006D71C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_10006D754()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  Class isa;
  SEL v12;
  id v13;
  int v14;
  id v15;
  id v16;
  id v17;
  id v18;
  DARootViewController *v19;
  objc_super v20;

  v1 = v0;
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedNavigationController();
  objc_msgSendSuper2(&v20, "viewDidLoad");
  objc_msgSend(v0, "setModalPresentationStyle:", 2);
  v2 = objc_msgSend(v0, "navigationBar");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v2, "setBackgroundImage:forBarMetrics:", v3, 0);

  v4 = objc_msgSend(v1, "navigationBar");
  v5 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v4, "setShadowImage:", v5);

  v6 = objc_msgSend(v1, "navigationBar");
  objc_msgSend(v6, "setAlpha:", 0.0);

  v7 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_10010C200;
  v9 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics44EnhancedLoggingCompletedNavigationController_enhancedLoggingCompletedViewController];
  *(_QWORD *)(v8 + 32) = v9;
  v19 = (DARootViewController *)v8;
  specialized Array._endMutation()(v8);
  sub_100053F50();
  v10 = v9;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v19, v12, v13, v14, v15, v16, v17, v18);
  objc_msgSend(v1, "setViewControllers:", isa);

}

id sub_10006D938(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t ObjCClassFromMetadata;
  objc_super v10;

  v5 = OBJC_IVAR____TtC11Diagnostics44EnhancedLoggingCompletedNavigationController_enhancedLoggingCompletedViewController;
  v6 = objc_allocWithZone((Class)type metadata accessor for EnhancedLoggingCompletedViewController());
  v7 = v2;
  *(_QWORD *)&v2[v5] = sub_10004E71C();

  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      goto LABEL_4;
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(a1);
  if (a2)
LABEL_3:
    a2 = swift_getObjCClassFromMetadata(a2);
LABEL_4:
  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedNavigationController();
  return objc_msgSendSuper2(&v10, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, a2);
}

id sub_10006DC5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedNavigationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EnhancedLoggingCompletedNavigationController()
{
  return objc_opt_self(_TtC11Diagnostics44EnhancedLoggingCompletedNavigationController);
}

unint64_t sub_10006DCBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100035CA4(&qword_10016C250);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10006E3E0(v7, (uint64_t)v16, &qword_10016C258);
    result = sub_100072B10((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_10006E2D0(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10006DDFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100035CA4(&qword_10016C240);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10006E3E0(v7, (uint64_t)&v16, &qword_10016C248);
    v8 = v16;
    v9 = v17;
    result = sub_100072A94(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10006E2D0(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10006DF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8)
{
  return sub_10006DF68(a1, (uint64_t *)&unk_10016E5B0, &qword_10016BBB0, (uint64_t (*)(uint64_t))sub_100072BD0, a5, a6, a7, a8);
}

unint64_t sub_10006DF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8)
{
  return sub_10006DF68(a1, &qword_10016C260, &unk_10016C268, (uint64_t (*)(uint64_t))sub_100072BCC, a5, a6, a7, a8);
}

unint64_t sub_10006DF68(uint64_t a1, uint64_t *a2, void *a3, uint64_t (*a4)(uint64_t), void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v9;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
    v13 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100035CA4(a2);
  v12 = static _DictionaryStorage.allocate(capacity:)(v9);
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease((DARootViewController *)a1, (SEL)a2, a3, (int)a4, a5, a6, a7, a8);
    return (unint64_t)v13;
  }
  v15 = v12 + 64;
  v16 = a1 + 32;
  swift_retain(v12);
  while (1)
  {
    sub_10006E3E0(v16, (uint64_t)&v23, (uint64_t *)a3);
    v17 = v23;
    result = a4(v23);
    if ((v19 & 1) != 0)
      break;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v13[6] + 8 * result) = v17;
    result = (unint64_t)sub_10006E2D0(&v24, (_OWORD *)(v13[7] + 32 * result));
    v20 = v13[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v13[2] = v22;
    v16 += 40;
    if (!--v14)
    {
      swift_release(v13);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_10006E090(char a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  id result;
  NSURL *v11;
  void *v12;
  void *v13;
  void *v14;
  unint64_t v15;
  Class isa;
  uint64_t v17;

  sub_100035CA4((uint64_t *)&unk_10016B680);
  __chkstk_darwin();
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 1)
      v8 = 0x6F723A7366657270;
    else
      v8 = 0xD00000000000001DLL;
    if (a1 == 1)
      v9 = 0xEF494649573D746FLL;
    else
      v9 = 0x8000000100115210;
  }
  else
  {
    v8 = 0xD00000000000002CLL;
    v9 = 0x8000000100115230;
  }
  URL.init(string:)(v8, v9);
  swift_bridgeObjectRelease(v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return (id)sub_10006E290((uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v12 = result;
    URL._bridgeToObjectiveC()(v11);
    v14 = v13;
    v15 = sub_10006DDFC((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v15);
    objc_msgSend(v12, "openSensitiveURL:withOptions:", v14, isa);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10006E290(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100035CA4((uint64_t *)&unk_10016B680);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_10006E2D0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_10006E2E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100035CA4((uint64_t *)&unk_10016E580);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_100072B40(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v5);
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain(v5);
    result = sub_100072B40(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10006E3E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100035CA4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_10006E428()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SuiteManager()), "init");
  qword_100172360 = (uint64_t)result;
  return result;
}

void *sub_10006E464()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  v2 = v1;
  return v1;
}

void sub_10006E4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  SEL v18;
  id v19;
  int v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  DARootViewController *v27;
  DARootViewController *v28;
  Swift::String v29;
  SEL v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  DARootViewController *v38;
  SEL v39;
  id v40;
  int v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  DARootViewController *v47;

  v4 = sub_100035CA4(&qword_10016C300);
  NSKeyValueObservedChange.newValue.getter(&v46, v4);
  v5 = v46;
  if ((unint64_t)v46 >= 2)
  {
    v6 = v46;
    if (((unint64_t)objc_msgSend(v6, "integerValue") & 0x8000000000000000) == 0)
    {
      v7 = *(void **)(a3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
      if (v7)
      {
        v8 = objc_msgSend(v7, "suiteID");
        if (v8)
        {
          v9 = v8;
          v10 = a3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
          Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate);
          if (Strong)
          {
            v13 = Strong;
            v14 = *(_QWORD *)(v10 + 8);
            ObjectType = swift_getObjectType(Strong, v12);
            (*(void (**)(uint64_t, id, void *, uint64_t, uint64_t))(v14 + 24))(a3, v6, v9, ObjectType, v14);
            swift_unknownObjectRelease(v13);
          }
          v16 = sub_100035CA4(&qword_10016BBA0);
          v17 = swift_allocObject(v16, 64, 7);
          *(_OWORD *)(v17 + 16) = xmmword_10010BE30;
          v46 = 0;
          v47 = (DARootViewController *)0xE000000000000000;
          _StringGuts.grow(_:)(23);
          swift_bridgeObjectRelease(v47, v18, v19, v20, v21, v22, v23, v24);
          v46 = (id)0xD000000000000015;
          v47 = (DARootViewController *)0x80000001001158A0;
          v25 = objc_msgSend(v6, "description");
          v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
          v28 = v27;

          v29._countAndFlagsBits = v26;
          v29._object = v28;
          String.append(_:)(v29);
          swift_bridgeObjectRelease(v28, v30, v31, v32, v33, v34, v35, v36);
          v37 = v46;
          v38 = v47;
          *(_QWORD *)(v17 + 56) = &type metadata for String;
          *(_QWORD *)(v17 + 32) = v37;
          *(_QWORD *)(v17 + 40) = v38;
          print(_:separator:terminator:)(v17, 32, 0xE100000000000000, 10, 0xE100000000000000);

          swift_bridgeObjectRelease((DARootViewController *)v17, v39, v40, v41, v42, v43, v44, v45);
        }
      }
    }
    sub_100074358(v5);
    sub_100074358(v5);
  }
}

void **sub_10006E6A8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  id v6;
  void *v7;
  void **v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  void **v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  NSString v31;
  Class super_class;
  _BYTE v34[24];
  _BYTE v35[40];
  void **aBlock;
  uint64_t v37;
  void *v38;
  Class v39;
  _UNKNOWN **v40;
  uint64_t v41;
  objc_super v42;

  v1 = &v0[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager;
  v3 = type metadata accessor for DeviceManager();
  swift_allocObject(v3, 88, 7);
  v4 = v0;
  *(_QWORD *)&v0[v2] = sub_1000A363C();
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation] = 0;
  v4[OBJC_IVAR____TtC11Diagnostics12SuiteManager_suiteCancellationPending] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics12SuiteManager_accessoryViewSymbolPointSize] = 0x403E000000000000;
  v5 = &v4[OBJC_IVAR____TtC11Diagnostics12SuiteManager_diagnosticEventID];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;

  v42.receiver = v4;
  v42.super_class = (Class)type metadata accessor for SuiteManager();
  super_class = v42.super_class;
  v6 = objc_msgSendSuper2(&v42, "init");
  v7 = (void *)objc_opt_self(NSNotificationCenter);
  v8 = (void **)v6;
  v9 = objc_msgSend(v7, "defaultCenter");
  if (qword_10016A6B8 != -1)
    swift_once(&qword_10016A6B8, sub_1000A255C);
  v10 = qword_1001723B0;
  v11 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager;
  v12 = *(uint64_t *)((char *)v8 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager);
  v13 = (void *)objc_opt_self(NSOperationQueue);
  swift_retain(v12);
  v14 = objc_msgSend(v13, "mainQueue");
  v15 = swift_allocObject(&unk_100138360, 24, 7);
  swift_unknownObjectUnownedInit(v15 + 16, v8);
  v40 = (_UNKNOWN **)sub_1000741FC;
  v41 = v15;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_100048DB4;
  v39 = (Class)&unk_100138378;
  v16 = _Block_copy(&aBlock);
  v17 = objc_msgSend(v9, "addObserverForName:object:queue:usingBlock:", v10, v12, v14, v16, swift_release(v41).n128_f64[0]);
  _Block_release(v16);
  swift_unknownObjectRelease(v17);

  swift_release(v12);
  v18 = objc_msgSend(v7, "defaultCenter");
  if (qword_10016A6C0 != -1)
    swift_once(&qword_10016A6C0, sub_1000A2590);
  v19 = qword_1001723B8;
  v20 = *(uint64_t *)((char *)v8 + v11);
  swift_retain(v20);
  v21 = objc_msgSend(v13, "mainQueue");
  v22 = swift_allocObject(&unk_100138360, 24, 7);
  swift_unknownObjectUnownedInit(v22 + 16, v8);
  v40 = (_UNKNOWN **)sub_100074204;
  v41 = v22;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_100048DB4;
  v39 = (Class)&unk_1001383A0;
  v23 = _Block_copy(&aBlock);
  v24 = objc_msgSend(v18, "addObserverForName:object:queue:usingBlock:", v19, v20, v21, v23, swift_release(v41).n128_f64[0]);
  _Block_release(v23);
  swift_unknownObjectRelease(v24);

  swift_release(v20);
  v25 = *(uint64_t *)((char *)v8 + v11);
  v39 = super_class;
  v40 = &off_100137EF0;
  aBlock = v8;
  sub_10007420C((uint64_t)&aBlock, (uint64_t)v35);
  swift_beginAccess(v25 + 16, v34, 33, 0);
  v26 = v8;
  swift_retain(v25);
  sub_100074254((uint64_t)v35, v25 + 16);
  swift_endAccess(v34);
  swift_release(v25);
  v27 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  LODWORD(v25) = objc_msgSend(v27, "isCheckerBoardActive");
  swift_unknownObjectRelease(v27);
  if ((_DWORD)v25)
  {
    v28 = (void *)objc_opt_self(CBSUtilities);
    v29 = swift_allocObject(&unk_1001381D0, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16, v26);
    v40 = (_UNKNOWN **)sub_10007429C;
    v41 = v29;
    aBlock = _NSConcreteStackBlock;
    v37 = 1107296256;
    v38 = sub_100030658;
    v39 = (Class)&unk_1001383C8;
    v30 = _Block_copy(&aBlock);
    swift_release(v41);
    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "addShutdownTask:forReason:", v30, v31);

    _Block_release(v30);
  }
  else
  {

  }
  return v26;
}

void sub_10006EBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  const char *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  const char *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  const char *v23;
  void *v24;
  int v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  SEL v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  char *Strong;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  uint64_t KeyPath;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void *v61;
  char *v62;
  void *v63;
  id v64;
  uint64_t v65;
  DARootViewController *v66;
  DARootViewController *v67;
  SEL v68;
  id v69;
  int v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  _QWORD v78[2];
  _QWORD v79[5];
  __int128 v80;
  __int128 v81;

  v3 = Notification.userInfo.getter(a1);
  if (!v3)
    return;
  v4 = v3;
  strcpy((char *)v78, "deviceStateKey");
  HIBYTE(v78[1]) = -18;
  AnyHashable.init<A>(_:)(v78, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_100072B10((uint64_t)v79), (v6 & 1) != 0))
  {
    sub_1000370B0(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v80);
  }
  else
  {
    v80 = 0u;
    v81 = 0u;
  }
  sub_100036FDC((uint64_t)v79);
  if (!*((_QWORD *)&v81 + 1))
  {
    swift_bridgeObjectRelease((DARootViewController *)v4, v7, v8, v9, v10, v11, v12, v13);
LABEL_22:
    sub_1000522EC((uint64_t)&v80);
    return;
  }
  v14 = sub_100037118(0, &qword_10016C2F0, off_100131A90);
  if ((swift_dynamicCast(v78, &v80, (char *)&type metadata for Any + 8, v14, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease((DARootViewController *)v4, v15, v16, v17, v18, v19, v20, v21);
    return;
  }
  v22 = (void *)v78[0];
  strcpy((char *)v78, "deviceKey");
  WORD1(v78[1]) = 0;
  HIDWORD(v78[1]) = -385875968;
  AnyHashable.init<A>(_:)(v78, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v30 = sub_100072B10((uint64_t)v79), (v23 & 1) != 0))
  {
    sub_1000370B0(*(_QWORD *)(v4 + 56) + 32 * v30, (uint64_t)&v80);
  }
  else
  {
    v80 = 0u;
    v81 = 0u;
  }
  swift_bridgeObjectRelease((DARootViewController *)v4, v23, v24, v25, v26, v27, v28, v29);
  sub_100036FDC((uint64_t)v79);
  if (!*((_QWORD *)&v81 + 1))
  {

    goto LABEL_22;
  }
  v31 = sub_100035CA4(&qword_10016C2F8);
  if ((swift_dynamicCast(v78, &v80, (char *)&type metadata for Any + 8, v31, 6) & 1) != 0)
  {
    v32 = v78[0];
    v33 = objc_opt_self(DADeviceLocal);
    if (swift_dynamicCastObjCClass(v32, v33))
    {
      v34 = a2 + 16;
      v35 = objc_msgSend(v22, "serialNumber");
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

      if (qword_10016A678 != -1)
        swift_once(&qword_10016A678, sub_10008BF34);
      v39 = qword_100172378;
      v40 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v41 = swift_allocObject(v40, 72, 7);
      *(_OWORD *)(v41 + 16) = xmmword_10010BE30;
      *(_QWORD *)(v41 + 56) = &type metadata for String;
      v42 = sub_100047048();
      *(_QWORD *)(v41 + 64) = v42;
      *(_QWORD *)(v41 + 32) = v36;
      *(_QWORD *)(v41 + 40) = v38;
      v43 = static os_log_type_t.default.getter(v42);
      os_log(_:dso:log:type:_:)("[SuiteManager] Device with %@ serial number has been added", 58, 2, &_mh_execute_header, v39, v43, v41);
      swift_bridgeObjectRelease((DARootViewController *)v41, v44, v45, v46, v47, v48, v49, v50);
      Strong = (char *)swift_unknownObjectUnownedLoadStrong(v34);
      v52 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation;
      v53 = *(void **)&Strong[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation];
      *(_QWORD *)&Strong[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation] = 0;
      v54 = v22;

      v55 = *(void **)&Strong[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
      *(_QWORD *)&Strong[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState] = v22;
      v56 = v54;

      v79[0] = Strong;
      KeyPath = swift_getKeyPath(&unk_10010D2A8);
      v58 = swift_allocObject(&unk_100138450, 24, 7);
      *(_QWORD *)(v58 + 16) = Strong;
      v59 = Strong;
      v60 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_100074368, v58, &protocol witness table for NSObject);
      swift_release(v58);
      swift_release(KeyPath);
      v61 = *(void **)&Strong[v52];
      *(_QWORD *)&Strong[v52] = v60;

      v62 = (char *)swift_unknownObjectUnownedLoadStrong(v34);
      objc_sync_enter(v62);
      v63 = *(void **)&v62[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
      if (v63)
      {
        v64 = objc_msgSend(v63, "serialNumber");
        v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
        v67 = v66;

        sub_1000A20FC(v65, (uint64_t)v67);
        swift_bridgeObjectRelease(v67, v68, v69, v70, v71, v72, v73, v74);
      }
      else
      {
        v75 = static os_log_type_t.error.getter(0);
        v76 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
        v77 = (void *)static OS_os_log.default.getter(v76);
        os_log(_:dso:log:_:_:)(v75, &_mh_execute_header, v77, "Unable to start suite manager, serial number is not available", 61, 2, &_swiftEmptyArrayStorage);

      }
      objc_sync_exit(v62);

      swift_unknownObjectRelease(v32);
    }
    else
    {

      swift_unknownObjectRelease(v32);
    }
  }
  else
  {

  }
}

void sub_10006F030(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  const char *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  const char *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  const char *v23;
  void *v24;
  int v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *Strong;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  DARootViewController *v43;
  DARootViewController *v44;
  char v45;
  SEL v46;
  id v47;
  int v48;
  id v49;
  id v50;
  id v51;
  id v52;
  SEL v53;
  id v54;
  int v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  SEL v69;
  id v70;
  int v71;
  id v72;
  id v73;
  id v74;
  id v75;
  char *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  DARootViewController *v80;
  DARootViewController *v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  void *v85;
  SEL v86;
  id v87;
  int v88;
  id v89;
  id v90;
  id v91;
  id v92;
  SEL v93;
  id v94;
  int v95;
  id v96;
  id v97;
  id v98;
  id v99;
  SEL v100;
  id v101;
  int v102;
  id v103;
  id v104;
  id v105;
  id v106;
  const char *v107;
  void *v108;
  int v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  DARootViewController *v114;
  char *v115;
  uint64_t v116;
  void *v117;
  void *v118;
  uint64_t KeyPath;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  void *v123;
  _QWORD v124[2];
  _BYTE v125[40];
  __int128 v126;
  __int128 v127;

  v3 = Notification.userInfo.getter(a1);
  if (v3)
  {
    v4 = v3;
    strcpy((char *)v124, "deviceStateKey");
    HIBYTE(v124[1]) = -18;
    AnyHashable.init<A>(_:)(v124, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v4 + 16) && (v5 = sub_100072B10((uint64_t)v125), (v6 & 1) != 0))
    {
      sub_1000370B0(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v126);
    }
    else
    {
      v126 = 0u;
      v127 = 0u;
    }
    sub_100036FDC((uint64_t)v125);
    if (*((_QWORD *)&v127 + 1))
    {
      v14 = sub_100037118(0, &qword_10016C2F0, off_100131A90);
      if ((swift_dynamicCast(v124, &v126, (char *)&type metadata for Any + 8, v14, 6) & 1) == 0)
      {
LABEL_24:
        swift_bridgeObjectRelease((DARootViewController *)v4, v15, v16, v17, v18, v19, v20, v21);
        return;
      }
      v22 = (void *)v124[0];
      strcpy((char *)v124, "deviceKey");
      WORD1(v124[1]) = 0;
      HIDWORD(v124[1]) = -385875968;
      AnyHashable.init<A>(_:)(v124, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v4 + 16) && (v30 = sub_100072B10((uint64_t)v125), (v23 & 1) != 0))
      {
        sub_1000370B0(*(_QWORD *)(v4 + 56) + 32 * v30, (uint64_t)&v126);
      }
      else
      {
        v126 = 0u;
        v127 = 0u;
      }
      swift_bridgeObjectRelease((DARootViewController *)v4, v23, v24, v25, v26, v27, v28, v29);
      sub_100036FDC((uint64_t)v125);
      if (*((_QWORD *)&v127 + 1))
      {
        v31 = sub_100035CA4(&qword_10016C2F8);
        if ((swift_dynamicCast(v124, &v126, (char *)&type metadata for Any + 8, v31, 6) & 1) == 0)
        {

          return;
        }
        v32 = v124[0];
        v33 = objc_opt_self(DADeviceLocal);
        if (!swift_dynamicCastObjCClass(v32, v33))
          goto LABEL_32;
        v34 = a2 + 16;
        v35 = objc_msgSend(v22, "serialNumber");
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
        v4 = v37;

        Strong = (char *)swift_unknownObjectUnownedLoadStrong(v34);
        v39 = *(void **)&Strong[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
        v40 = v39;

        if (v39)
        {
          v41 = objc_msgSend(v40, "serialNumber");

          v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
          v44 = v43;

          if (v36 == v42 && (DARootViewController *)v4 == v44)
          {
            swift_bridgeObjectRelease_n(v4, 2);
            goto LABEL_27;
          }
          v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v4, v42, v44, 0);
          swift_bridgeObjectRelease((DARootViewController *)v4, v46, v47, v48, v49, v50, v51, v52);
          swift_bridgeObjectRelease(v44, v53, v54, v55, v56, v57, v58, v59);
          if ((v45 & 1) != 0)
          {
LABEL_27:
            if (qword_10016A678 != -1)
              swift_once(&qword_10016A678, sub_10008BF34);
            v60 = qword_100172378;
            v61 = sub_100035CA4((uint64_t *)&unk_10016BE40);
            v62 = swift_allocObject(v61, 72, 7);
            *(_OWORD *)(v62 + 16) = xmmword_10010BE30;
            v63 = objc_msgSend(v22, "serialNumber");
            v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
            v66 = v65;

            *(_QWORD *)(v62 + 56) = &type metadata for String;
            v67 = sub_100047048();
            *(_QWORD *)(v62 + 64) = v67;
            *(_QWORD *)(v62 + 32) = v64;
            *(_QWORD *)(v62 + 40) = v66;
            v68 = static os_log_type_t.default.getter(v67);
            os_log(_:dso:log:type:_:)("[SuiteManager] Device with %@ serial number has been removed", 60, 2, &_mh_execute_header, v60, v68, v62);
            swift_bridgeObjectRelease((DARootViewController *)v62, v69, v70, v71, v72, v73, v74, v75);
            v76 = (char *)swift_unknownObjectUnownedLoadStrong(v34);
            v77 = *(_QWORD *)&v76[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager];
            swift_retain(v77);

            v78 = objc_msgSend(v22, "serialNumber");
            v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
            v81 = v80;

            swift_beginAccess(v77 + 56, v125, 0, 0);
            v82 = *(_QWORD *)(v77 + 56);
            if (*(_QWORD *)(v82 + 16))
            {
              swift_bridgeObjectRetain(v81);
              swift_bridgeObjectRetain(v82);
              v83 = sub_100072A94(v79, (uint64_t)v81);
              if ((v84 & 1) != 0)
              {
                v85 = *(void **)(*(_QWORD *)(v82 + 56) + 8 * v83);
                swift_unknownObjectRetain(v85);
                swift_bridgeObjectRelease(v81, v86, v87, v88, v89, v90, v91, v92);
                swift_bridgeObjectRelease((DARootViewController *)v82, v93, v94, v95, v96, v97, v98, v99);
                objc_msgSend(v85, "end");
                swift_release(v77);
                swift_bridgeObjectRelease(v81, v100, v101, v102, v103, v104, v105, v106);
                swift_unknownObjectRelease(v85);
LABEL_36:
                v115 = (char *)swift_unknownObjectUnownedLoadStrong(v34);
                v116 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation;
                v117 = *(void **)&v115[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation];
                *(_QWORD *)&v115[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation] = 0;

                v118 = *(void **)&v115[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
                *(_QWORD *)&v115[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState] = 0;

                *(_QWORD *)&v126 = v115;
                KeyPath = swift_getKeyPath(&unk_10010D2A8);
                v120 = swift_allocObject(&unk_100138400, 24, 7);
                *(_QWORD *)(v120 + 16) = v115;
                v121 = v115;
                v122 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_100074350, v120, &protocol witness table for NSObject);
                swift_release(v120);
                swift_release(KeyPath);
                v123 = *(void **)&v115[v116];
                *(_QWORD *)&v115[v116] = v122;

                swift_unknownObjectRelease(v32);
                return;
              }
              swift_release(v77);
              swift_bridgeObjectRelease_n(v81, 2);
              v114 = (DARootViewController *)v82;
            }
            else
            {
              swift_release(v77);
              v114 = v81;
            }
            swift_bridgeObjectRelease(v114, v107, v108, v109, v110, v111, v112, v113);
            goto LABEL_36;
          }
LABEL_32:

          swift_unknownObjectRelease(v32);
          return;
        }

        swift_unknownObjectRelease(v32);
        goto LABEL_24;
      }

    }
    else
    {
      swift_bridgeObjectRelease((DARootViewController *)v4, v7, v8, v9, v10, v11, v12, v13);
    }
    sub_1000522EC((uint64_t)&v126);
  }
}

void sub_10006F5BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  DARootViewController *v9;
  DARootViewController *v10;
  uint64_t v11;
  const char *v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  SEL v23;
  id v24;
  int v25;
  id v26;
  id v27;
  id v28;
  id v29;
  SEL v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  void *v40;
  int v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  DARootViewController *v49;
  void *v50;
  NSString v51;
  uint64_t v52;
  _BYTE v53[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v53, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    if (qword_10016A678 != -1)
      Strong = swift_once(&qword_10016A678, sub_10008BF34);
    v4 = qword_100172378;
    v5 = static os_log_type_t.default.getter(Strong);
    os_log(_:dso:log:type:_:)("[SuiteManager] Archiving for CheckerBoard shutdown", 50, 2, &_mh_execute_header, v4, v5, &_swiftEmptyArrayStorage);
    v6 = *(void **)&v3[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
    if (v6)
    {
      v7 = objc_msgSend(v6, "serialNumber");
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v10 = v9;

      v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager];
      swift_beginAccess(v11 + 56, &v52, 0, 0);
      v19 = *(_QWORD *)(v11 + 56);
      if (*(_QWORD *)(v19 + 16))
      {
        swift_bridgeObjectRetain(v10);
        swift_bridgeObjectRetain(v19);
        v20 = sub_100072A94(v8, (uint64_t)v10);
        if ((v21 & 1) != 0)
        {
          v22 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v20);
          swift_unknownObjectRetain(v22);
          swift_bridgeObjectRelease(v10, v23, v24, v25, v26, v27, v28, v29);
          swift_bridgeObjectRelease((DARootViewController *)v19, v30, v31, v32, v33, v34, v35, v36);
          v37 = objc_opt_self(DADeviceLocal);
          v38 = (void *)swift_dynamicCastObjCClass(v22, v37);
          if (v38)
            objc_msgSend(v38, "archiveConnection");
          swift_bridgeObjectRelease(v10, v39, v40, v41, v42, v43, v44, v45);
          swift_unknownObjectRelease(v22);
          goto LABEL_14;
        }
        swift_bridgeObjectRelease_n(v10, 2);
        v49 = (DARootViewController *)v19;
      }
      else
      {
        v49 = v10;
      }
      swift_bridgeObjectRelease(v49, v12, v13, v14, v15, v16, v17, v18);
    }
    else
    {
      v46 = static os_log_type_t.error.getter(0);
      v47 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v48 = (void *)static OS_os_log.default.getter(v47);
      os_log(_:dso:log:_:_:)(v46, &_mh_execute_header, v48, "Unable to archive device, serial number is nil", 46, 2, &_swiftEmptyArrayStorage);

    }
LABEL_14:
    v50 = (void *)objc_opt_self(CBSUtilities);
    v51 = String._bridgeToObjectiveC()();
    objc_msgSend(v50, "removeShutdownTask:", v51);

  }
}

void sub_10006F838(void *a1)
{
  char *v1;
  void *v2;
  char *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD *v10;
  void (*v11)(char *, void *, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;

  v2 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v2)
  {
    v4 = &v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate]);
    if (Strong)
    {
      v7 = Strong;
      v8 = *((_QWORD *)v4 + 1);
      ObjectType = swift_getObjectType(Strong, v6);
      v10 = (_QWORD *)swift_allocObject(&unk_100138338, 40, 7);
      v10[2] = v1;
      v10[3] = v2;
      v10[4] = a1;
      v11 = *(void (**)(char *, void *, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v8 + 48);
      v14 = v2;
      v11(v1, a1, sub_1000743EC, v10, ObjectType, v8);
      swift_release(v10);
      swift_unknownObjectRelease(v7);

    }
  }
  else
  {
    v12 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v15 = (id)static OS_os_log.default.getter(v12);
    v13 = static os_log_type_t.default.getter(v15);
    os_log(_:dso:log:type:_:)("[SuiteManager] Device State is nil, suite won't be run", 54, 2, &_mh_execute_header, v15, v13, _swiftEmptyArrayStorage);

  }
}

double sub_10006F994(char *a1, id a2, uint64_t a3)
{
  void *v6;
  id v7;
  double result;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t Strong;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  void (*v47)(char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  const char *v48;
  void **aBlock;
  unint64_t v50;
  uint64_t (*v51)(uint64_t, void *, uint64_t, uint64_t, void *);
  void *v52;
  void (*v53)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  _QWORD v55[3];
  char v56[8];
  char v57[24];

  v6 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v6)
  {
    v7 = objc_msgSend(v6, "suiteID");
    if (v7)
    {

      return result;
    }
  }
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager];
  v10 = objc_msgSend(a2, "serialNumber");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14 = swift_allocObject(&unk_100137F28, 24, 7);
  *(_QWORD *)(v14 + 16) = a1;
  swift_beginAccess(v9 + 56, v57, 0, 0);
  v15 = *(_QWORD *)(v9 + 56);
  v16 = *(_QWORD *)(v15 + 16);
  v17 = a1;
  if (v16)
  {
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v15);
    v18 = sub_100072A94(v11, (uint64_t)v13);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v18);
      swift_unknownObjectRetain(v20);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v15);
      v21 = objc_opt_self(DADeviceLocal);
      v22 = swift_dynamicCastObjCClass(v20, v21);
      if (v22)
      {
        v23 = (void *)v22;
        v53 = sub_1000727E4;
        v54 = v14;
        aBlock = _NSConcreteStackBlock;
        v50 = 1107296256;
        v51 = sub_100072810;
        v52 = &unk_100137F40;
        v24 = _Block_copy(&aBlock);
        v25 = v54;
        swift_retain(v14);
        objc_msgSend(v23, "requestSuiteStart:completionHandler:", a3, v24, swift_release(v25).n128_f64[0]);
        _Block_release(v24);
        swift_bridgeObjectRelease(v13);

        swift_release(v14);
        swift_unknownObjectRelease(v20);
        return result;
      }
      swift_unknownObjectRelease(v20);
    }
    else
    {
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v15);
    }
  }
  aBlock = 0;
  v50 = 0xE000000000000000;
  _StringGuts.grow(_:)(74);
  v26._object = (void *)0x8000000100115360;
  v26._countAndFlagsBits = 0xD00000000000001FLL;
  String.append(_:)(v26);
  v27._countAndFlagsBits = v11;
  v27._object = v13;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0xD000000000000029;
  v28._object = (void *)0x8000000100115380;
  String.append(_:)(v28);
  v29 = sub_10006630C();
  v30 = swift_allocError(&type metadata for String, v29, 0, 0);
  *v31 = 0;
  v31[1] = 0xE000000000000000;
  v32 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v33 = swift_allocObject(v32, 72, 7);
  *(_OWORD *)(v33 + 16) = xmmword_10010BE30;
  swift_getErrorValue(v30, v56, v55);
  v34 = v55[1];
  v35 = v55[2];
  swift_errorRetain(v30);
  v36 = Error.localizedDescription.getter(v34, v35);
  v38 = v37;
  *(_QWORD *)(v33 + 56) = &type metadata for String;
  *(_QWORD *)(v33 + 64) = sub_100047048();
  *(_QWORD *)(v33 + 32) = v36;
  *(_QWORD *)(v33 + 40) = v38;
  v39 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  v40 = (void *)static OS_os_log.default.getter(v39);
  static os_log_type_t.default.getter(v40);
  os_log(_:dso:log:type:_:)("[SuiteManager] Error occurred upon suite start %s", v48);
  swift_bridgeObjectRelease(v33);

  v41 = &v17[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v17[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate]);
  if (Strong)
  {
    v44 = Strong;
    v45 = *((_QWORD *)v41 + 1);
    ObjectType = swift_getObjectType(Strong, v43);
    v47 = *(void (**)(char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v45 + 16);
    swift_errorRetain(v30);
    v47(v17, a3, 0, v30, ObjectType, v45);
    swift_unknownObjectRelease(v44);
    swift_errorRelease(v30);
  }
  swift_errorRelease(v30);
  swift_errorRelease(v30);
  swift_bridgeObjectRelease(v13);

  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

void sub_10006FDA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(uint64_t, void *, _QWORD, uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD *v32;
  id v33;
  uint64_t v34;
  const char *v35;
  _QWORD v36[3];
  _BYTE v37[8];
  id v38;
  uint64_t v39;

  if (a6)
  {
    v10 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v11 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v11 + 16) = xmmword_10010BE30;
    swift_getErrorValue(a6, v37, v36);
    v12 = v36[1];
    v13 = v36[2];
    swift_errorRetain(a6);
    v14 = Error.localizedDescription.getter(v12, v13);
    v16 = v15;
    *(_QWORD *)(v11 + 56) = &type metadata for String;
    *(_QWORD *)(v11 + 64) = sub_100047048();
    *(_QWORD *)(v11 + 32) = v14;
    *(_QWORD *)(v11 + 40) = v16;
    v17 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v18 = (void *)static OS_os_log.default.getter(v17);
    static os_log_type_t.default.getter(v18);
    os_log(_:dso:log:type:_:)("[SuiteManager] Error occurred upon suite start %s", v35);
    swift_bridgeObjectRelease(v11);

    v19 = a7 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(a7 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate);
    if (Strong)
    {
      v22 = Strong;
      v23 = *(_QWORD *)(v19 + 8);
      ObjectType = swift_getObjectType(Strong, v21);
      v25 = *(void (**)(uint64_t, void *, _QWORD, uint64_t, uint64_t, uint64_t))(v23 + 16);
      swift_errorRetain(a6);
      v25(a7, a1, 0, a6, ObjectType, v23);
      swift_unknownObjectRelease(v22);
      swift_errorRelease(a6);
    }
    swift_errorRelease(a6);
  }
  else
  {
    v26 = (_QWORD *)(a7 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_diagnosticEventID);
    v27 = *(_QWORD *)(a7 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_diagnosticEventID + 8);
    *v26 = a2;
    v26[1] = a3;
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRelease(v27);
    if ((*(_BYTE *)(a7 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_suiteCancellationPending) & 1) != 0)
    {
      sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v28 = a1;
      v29 = static OS_os_log.default.getter(v28);
      v30 = static os_log_type_t.default.getter(v29);
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(12, -1);
        v32 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v31 = 138412290;
        v38 = v28;
        v33 = v28;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
        *v32 = v28;

        _os_log_impl((void *)&_mh_execute_header, v29, v30, "[SuiteManager] Suite cancellation was pending at the time %@ was started. Cancelling now.", v31, 0xCu);
        v34 = sub_100035CA4((uint64_t *)&unk_10016E010);
        swift_arrayDestroy(v32, 1, v34);
        swift_slowDealloc(v32, -1, -1);
        swift_slowDealloc(v31, -1, -1);
      }
      else
      {

      }
      sub_100070098(v28);
    }
  }
}

void sub_100070098(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t Strong;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t ObjectType;
  id v53;
  id v54;
  void **aBlock;
  unint64_t v56;
  void (*v57)(uint64_t, void *);
  void *v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  _QWORD v61[3];
  char v62[8];
  char v63[24];

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v3)
  {
    v5 = v3;
    v6 = objc_msgSend(v5, "suiteID");
    if (v6)
    {

      v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager];
      v8 = objc_msgSend(v5, "serialNumber");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v12 = swift_allocObject(&unk_1001382E8, 32, 7);
      *(_QWORD *)(v12 + 16) = v2;
      *(_QWORD *)(v12 + 24) = a1;
      swift_beginAccess(v7 + 56, v63, 0, 0);
      v13 = *(_QWORD *)(v7 + 56);
      v14 = *(_QWORD *)(v13 + 16);
      v15 = v2;
      v16 = a1;
      v17 = v15;
      v18 = v16;
      if (v14)
      {
        swift_bridgeObjectRetain(v11);
        swift_bridgeObjectRetain(v13);
        v19 = sub_100072A94(v9, (uint64_t)v11);
        if ((v20 & 1) != 0)
        {
          v21 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v19);
          swift_unknownObjectRetain(v21);
          swift_bridgeObjectRelease(v11);
          swift_bridgeObjectRelease(v13);
          v22 = objc_opt_self(DADeviceLocal);
          v23 = swift_dynamicCastObjCClass(v21, v22);
          if (v23)
          {
            v24 = (void *)v23;
            v59 = sub_100074198;
            v60 = v12;
            aBlock = _NSConcreteStackBlock;
            v56 = 1107296256;
            v57 = sub_1000728E8;
            v58 = &unk_100138300;
            v25 = _Block_copy(&aBlock);
            v26 = v60;
            swift_retain(v12);
            objc_msgSend(v24, "requestSuiteFinishWithCompletionHandler:", v25, swift_release(v26).n128_f64[0]);
            _Block_release(v25);
            swift_bridgeObjectRelease(v11);

            swift_release(v12);
            swift_unknownObjectRelease(v21);
            return;
          }
          swift_unknownObjectRelease(v21);
        }
        else
        {
          swift_bridgeObjectRelease(v11);
          swift_bridgeObjectRelease(v13);
        }
      }
      aBlock = 0;
      v56 = 0xE000000000000000;
      _StringGuts.grow(_:)(74);
      v32._object = (void *)0x8000000100115360;
      v32._countAndFlagsBits = 0xD00000000000001FLL;
      String.append(_:)(v32);
      v33._countAndFlagsBits = v9;
      v33._object = v11;
      String.append(_:)(v33);
      v34._countAndFlagsBits = 0xD000000000000029;
      v34._object = (void *)0x8000000100115380;
      String.append(_:)(v34);
      v35 = sub_10006630C();
      v36 = swift_allocError(&type metadata for String, v35, 0, 0);
      *v37 = 0;
      v37[1] = 0xE000000000000000;
      v38 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v39 = swift_allocObject(v38, 72, 7);
      *(_OWORD *)(v39 + 16) = xmmword_10010BE30;
      swift_getErrorValue(v36, v62, v61);
      v40 = v61[1];
      v41 = v61[2];
      swift_errorRetain(v36);
      v42 = Error.localizedDescription.getter(v40, v41);
      v44 = v43;
      *(_QWORD *)(v39 + 56) = &type metadata for String;
      *(_QWORD *)(v39 + 64) = sub_100047048();
      *(_QWORD *)(v39 + 32) = v42;
      *(_QWORD *)(v39 + 40) = v44;
      v45 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v46 = (void *)static OS_os_log.default.getter(v45);
      static os_log_type_t.default.getter(v46);
      os_log(_:dso:log:type:_:)("[SuiteManager] Error occurred upon suite cancellation %s", (const char *)v12);
      swift_bridgeObjectRelease(v39);

      swift_errorRelease(v36);
      v47 = &v17[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
      Strong = swift_unknownObjectWeakLoadStrong(&v17[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate]);
      if (Strong)
      {
        v50 = Strong;
        v51 = *((_QWORD *)v47 + 1);
        ObjectType = swift_getObjectType(Strong, v49);
        (*(void (**)(char *, id, _QWORD, uint64_t, uint64_t, uint64_t))(v51 + 16))(v17, v18, 0, v36, ObjectType, v51);
        swift_unknownObjectRelease(v50);
      }
      v17[OBJC_IVAR____TtC11Diagnostics12SuiteManager_suiteCancellationPending] = 0;
      swift_errorRelease(v36);
      swift_bridgeObjectRelease(v11);

      swift_release(v54);
    }
    else
    {
      v29 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v30 = (void *)static OS_os_log.default.getter(v29);
      v31 = static os_log_type_t.default.getter(v30);
      os_log(_:dso:log:type:_:)("[SuiteManager] Suite cancelled, but current suite ID is nil. Cancellation is pending suite start.", 97, 2, &_mh_execute_header, v30, v31, _swiftEmptyArrayStorage);

      v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_suiteCancellationPending] = 1;
    }
  }
  else
  {
    v27 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v53 = (id)static OS_os_log.default.getter(v27);
    v28 = static os_log_type_t.default.getter(v53);
    os_log(_:dso:log:type:_:)("[SuiteManager] Device State is nil, suite won't be cancelled", 60, 2, &_mh_execute_header, v53, v28, _swiftEmptyArrayStorage);

  }
}

uint64_t sub_100070594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  const char *v21[3];
  _BYTE v22[8];

  if (a1)
  {
    v6 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v7 = swift_allocObject(v6, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_10010BE30;
    swift_getErrorValue(a1, v22, v21);
    v8 = v21[1];
    v9 = v21[2];
    swift_errorRetain(a1);
    v10 = Error.localizedDescription.getter(v8, v9);
    v12 = v11;
    *(_QWORD *)(v7 + 56) = &type metadata for String;
    *(_QWORD *)(v7 + 64) = sub_100047048();
    *(_QWORD *)(v7 + 32) = v10;
    *(_QWORD *)(v7 + 40) = v12;
    v13 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v14 = (void *)static OS_os_log.default.getter(v13);
    static os_log_type_t.default.getter(v14);
    os_log(_:dso:log:type:_:)("[SuiteManager] Error occurred upon suite cancellation %s", v21[0]);
    swift_bridgeObjectRelease(v7);

    swift_errorRelease(a1);
  }
  v15 = a2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate);
  if (result)
  {
    v18 = result;
    v19 = *(_QWORD *)(v15 + 8);
    ObjectType = swift_getObjectType(result, v17);
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v19 + 16))(a2, a3, 0, a1, ObjectType, v19);
    result = swift_unknownObjectRelease(v18);
  }
  *(_BYTE *)(a2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_suiteCancellationPending) = 0;
  return result;
}

void sub_10007070C(uint64_t a1, void (*a2)(uint64_t, id))
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint) != a1)
    goto LABEL_16;
  v4 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (!v5)
    goto LABEL_16;
  v6 = objc_msgSend(v5, "suitesAvailable");
  v7 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)v8 >> 62)
  {
    v19 = v8 < 0 ? v8 : v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v8);
  if (v9 != 1)
    goto LABEL_16;
  v10 = *(void **)(v2 + v4);
  if (!v10)
    goto LABEL_16;
  v11 = objc_msgSend(v10, "suitesAvailable");
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v7);

  if (!((unint64_t)v12 >> 62))
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_9;
LABEL_27:
    swift_bridgeObjectRelease(v12);
    __break(1u);
    goto LABEL_28;
  }
  if (v12 < 0)
    v20 = v12;
  else
    v20 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v12);
  if (!v21)
    goto LABEL_27;
LABEL_9:
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_28:
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v12);
    goto LABEL_12;
  }
  if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return;
  }
  v13 = *(id *)(v12 + 32);
LABEL_12:
  v14 = v13;
  swift_bridgeObjectRelease(v12);
  v23 = objc_msgSend(v14, "suiteID");

  v15 = v23;
  if (v23)
  {
    if (a2)
    {
      v22 = v23;
      a2(1, v23);

      v15 = v22;
    }

    return;
  }
LABEL_16:
  v16 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  v17 = (void *)static OS_os_log.default.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  os_log(_:dso:log:type:_:)("[SuiteManager] Unable to run a single suite - conditions were not met", 69, 2, &_mh_execute_header, v17, v18, _swiftEmptyArrayStorage);

  if (a2)
    a2(0, 0);
}

id sub_100070994()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SuiteManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SuiteManager()
{
  return objc_opt_self(_TtC11Diagnostics12SuiteManager);
}

void sub_100070A58(void *a1)
{
  char *v1;
  char *v2;
  NSString v4;
  id v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  const char *v18;
  void *v19;
  int v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  DARootViewController *v29;
  DARootViewController *v30;
  SEL v31;
  id v32;
  int v33;
  id v34;
  id v35;
  id v36;
  id v37;
  const char *v38;
  void *v39;
  int v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  DARootViewController *v47;
  id v48;
  void *v49;
  SEL v50;
  id v51;
  int v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  DARootViewController *v62;
  const char *v63;
  void *v64;
  int v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  DARootViewController *v70;
  void *v71;
  id v72;
  NSString v73;
  SEL v74;
  id v75;
  int v76;
  id v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  DARootViewController *v83;
  id v84;
  void *v85;
  SEL v86;
  id v87;
  int v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  DARootViewController *v98;
  DARootViewController *v99;
  void *v100;
  id v101;
  NSString v102;
  SEL v103;
  id v104;
  int v105;
  id v106;
  id v107;
  id v108;
  id v109;
  void *v110;
  uint64_t v111;
  DARootViewController *v112;
  DARootViewController *v113;
  id v114;
  const char *v115;
  DARootViewController *v116;
  id v117;
  int v118;
  id v119;
  id v120;
  id v121;
  id v122;
  NSString v123;
  SEL v124;
  id v125;
  int v126;
  id v127;
  id v128;
  id v129;
  id v130;
  char *v131;
  id v132;
  void *v133;
  uint64_t v134;
  void *v135;
  id v136;

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v4);

  if (v5)
  {
    v6 = type metadata accessor for SelfServiceViewCell();
    v7 = (_BYTE *)swift_dynamicCastClass(v5, v6);
    if (v7)
      goto LABEL_5;

  }
  v8 = type metadata accessor for SelfServiceViewCell();
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
LABEL_5:
  v7[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleTruncated] = 1;
  v9 = (void *)OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel;
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel], "setNumberOfLines:", 2);
  v10 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  v11 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (!v11)
    return;
  v12 = v11;
  v13 = IndexPath.section.getter(v12);
  v14 = (char *)objc_msgSend(v12, "suitesAvailable");

  v15 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  v133 = v9;
  if ((v16 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v16);
  }
  else
  {
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v17 = *(id *)(v16 + 8 * v13 + 32);
  }
  v9 = v17;
  v14 = v2;
  swift_bridgeObjectRelease((DARootViewController *)v16, v18, v19, v20, v21, v22, v23, v24);
  v136 = objc_msgSend(v9, "suiteID");
  v25 = qword_10016A6C8;
  v2 = v7;
  if (v25 != -1)
LABEL_28:
    swift_once(&qword_10016A6C8, sub_1000A66DC);
  v26 = qword_1001723C0;
  v135 = v9;
  v27 = objc_msgSend(v9, "primaryAssetLocator", v133);
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  sub_1000B048C(v28, (unint64_t)v30, v26, v2);
  swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);

  v45 = *(void **)&v14[v10];
  if (v45)
  {
    v46 = objc_msgSend(v45, "suitesAvailable");
    v47 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v15);

    v48 = v136;
    v49 = sub_100083CF0((uint64_t)v47);
    swift_bridgeObjectRelease(v47, v50, v51, v52, v53, v54, v55, v56);

    if (v49)
    {
      v57 = objc_msgSend(v49, "suiteNameLocalizedString");
      v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
      v60 = v59;

    }
    else
    {
      v58 = 0;
      v60 = 0;
    }
  }
  else
  {
    v58 = 0;
    v60 = 0;
  }
  v61 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleText];
  v62 = *(DARootViewController **)&v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleText + 8];
  *v61 = v58;
  v61[1] = v60;
  swift_bridgeObjectRelease(v62, v38, v39, v40, v41, v42, v43, v44);
  v70 = (DARootViewController *)v61[1];
  if (v70)
  {
    v71 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleLabel];
    swift_bridgeObjectRetain(v70);
    v72 = v71;
    v73 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v70, v74, v75, v76, v77, v78, v79, v80);
    objc_msgSend(v72, "setText:", v73);

  }
  v81 = *(void **)&v14[v10];
  if (v81
    && (v82 = objc_msgSend(v81, "suitesAvailable"),
        v83 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v82, v15),
        v82,
        v84 = v136,
        v85 = sub_100083CF0((uint64_t)v83),
        swift_bridgeObjectRelease(v83, v86, v87, v88, v89, v90, v91, v92),
        v84,
        v85))
  {
    v93 = objc_msgSend(v85, "suiteDescriptionLocalizedString");
    v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
    v96 = v95;

  }
  else
  {
    v94 = 0;
    v96 = 0;
  }
  v97 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleText];
  v98 = *(DARootViewController **)&v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleText + 8];
  *v97 = v94;
  v97[1] = v96;
  swift_bridgeObjectRelease(v98, v63, v64, v65, v66, v67, v68, v69);
  v99 = (DARootViewController *)v97[1];
  if (v99)
  {
    v100 = *(void **)&v7[v134];
    swift_bridgeObjectRetain(v99);
    v101 = v100;
    v102 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v99, v103, v104, v105, v106, v107, v108, v109);
    objc_msgSend(v101, "setText:", v102);

  }
  v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreEnabled] = 1;
  v110 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel];
  v111 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v113 = v112;
  v114 = v110;
  sub_10003FFA0(v111, v113, (uint64_t)&_swiftEmptyArrayStorage, 0x4F4D5F4E5241454CLL, (void *)0xEA00000000004552);
  v116 = (DARootViewController *)v115;
  swift_bridgeObjectRelease(v113, v115, v117, v118, v119, v120, v121, v122);
  v123 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v116, v124, v125, v126, v127, v128, v129, v130);
  objc_msgSend(v114, "setText:", v123);

  v131 = v2;
  v132 = sub_1000713F8((uint64_t)v14, v136);
  objc_msgSend(v131, "setAccessoryView:", v132);

}

uint64_t sub_100070FEC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  __n128 v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  SEL v36;
  id v37;
  int v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[5];
  uint64_t v46;
  _QWORD v47[3];
  char v48[8];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  result = __chkstk_darwin(v10);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
    v15 = a1;
    v44 = v7;
    v16 = v15;
    v17 = (void *)static OS_dispatch_queue.main.getter(v15);
    v18 = swift_allocObject(&unk_100138248, 32, 7);
    *(_QWORD *)(v18 + 16) = a3;
    *(_QWORD *)(v18 + 24) = v16;
    aBlock[4] = sub_100074188;
    v46 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100030658;
    aBlock[3] = &unk_100138260;
    v19 = _Block_copy(aBlock);
    v20 = v46;
    v21 = v16;
    v22 = a3;
    v23 = swift_release(v20);
    static DispatchQoS.unspecified.getter(v23);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v24 = sub_100035C5C();
    v25 = sub_100035CA4((uint64_t *)&unk_10016AD10);
    v26 = sub_100035CE4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v6, v24);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v9, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else if (a2)
  {
    v27 = swift_errorRetain(a2);
    v28 = static os_log_type_t.error.getter(v27);
    v29 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v30 = swift_allocObject(v29, 72, 7);
    *(_OWORD *)(v30 + 16) = xmmword_10010BE30;
    swift_getErrorValue(a2, v48, v47);
    v31 = Error.localizedDescription.getter(v47[1], v47[2]);
    v33 = v32;
    *(_QWORD *)(v30 + 56) = &type metadata for String;
    *(_QWORD *)(v30 + 64) = sub_100047048();
    *(_QWORD *)(v30 + 32) = v31;
    *(_QWORD *)(v30 + 40) = v33;
    v34 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v35 = (void *)static OS_os_log.default.getter(v34);
    os_log(_:dso:log:_:_:)(v28, &_mh_execute_header, v35, "Icon loading error occurred: %@", 31, 2, v30);
    swift_bridgeObjectRelease((DARootViewController *)v30, v36, v37, v38, v39, v40, v41, v42);

    return swift_errorRelease(a2);
  }
  return result;
}

void sub_1000712CC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v3 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImage;
  v4 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImage);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImage) = a2;
  v5 = a2;

  v6 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImageView);
  v7 = *(void **)(a1 + v3);
  v8 = (void *)objc_opt_self(UIView);
  v9 = swift_allocObject(&unk_100138298, 32, 7);
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v7;
  v14[4] = sub_100074190;
  v15 = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100030658;
  v14[3] = &unk_1001382B0;
  v10 = _Block_copy(v14);
  v11 = v15;
  v12 = v7;
  v13 = v6;
  swift_release(v11);
  objc_msgSend(v8, "transitionWithView:duration:options:animations:completion:", v13, 5242880, v10, 0, 0.1);
  _Block_release(v10);

}

id sub_1000713F8(uint64_t a1, void *a2)
{
  double v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;

  v4 = *(double *)(a1 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_accessoryViewSymbolPointSize);
  v5 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v6 = objc_msgSend(v5, "configurationWithPointSize:", v4);
  v7 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.478431373, 1.0, 1.0);
  v8 = objc_msgSend(v5, "configurationWithHierarchicalColor:", v7);

  v9 = objc_msgSend(v8, "configurationByApplyingConfiguration:", v6);
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v11, v10);

  if (v12)
  {
    v13 = objc_msgSend(v12, "imageFlippedForRightToLeftLayoutDirection");

  }
  else
  {
    v13 = 0;
  }
  v14 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  objc_msgSend(v14, "setFrame:", 0.0, 0.0, v4, v4);
  objc_msgSend(v14, "setClipsToBounds:", 1);
  objc_msgSend(v14, "setImage:forState:", v13, 0);
  sub_100037118(0, (unint64_t *)&qword_10016DFF0, UIAction_ptr);
  v15 = swift_allocObject(&unk_1001381D0, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, a1);
  v16 = swift_allocObject(&unk_1001381F8, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = a2;
  v17 = a2;
  v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100074150, v16);
  objc_msgSend(v14, "addAction:forControlEvents:", v18, 64);

  return v14;
}

void sub_1000716B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  _QWORD *v14;
  void (*v15)(id, void *, double (*)(), _QWORD *, uint64_t, uint64_t);
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(void **)(Strong + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
    if (v7)
    {
      v8 = Strong + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
      v9 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate);
      if (v9)
      {
        v11 = v9;
        v12 = *(_QWORD *)(v8 + 8);
        ObjectType = swift_getObjectType(v9, v10);
        v14 = (_QWORD *)swift_allocObject(&unk_100138220, 40, 7);
        v14[2] = v6;
        v14[3] = v7;
        v14[4] = a3;
        v15 = *(void (**)(id, void *, double (*)(), _QWORD *, uint64_t, uint64_t))(v12 + 48);
        v16 = v7;
        v17 = v6;
        v15(v17, a3, sub_100036644, v14, ObjectType, v12);

        swift_release(v14);
        swift_unknownObjectRelease(v11);
        v6 = v16;
      }
    }
    else
    {
      v18 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v19 = static OS_os_log.default.getter(v18);
      v20 = static os_log_type_t.default.getter(v19);
      os_log(_:dso:log:type:_:)("[SuiteManager] Device State is nil, suite won't be run", 54, 2, &_mh_execute_header, v19, v20, &_swiftEmptyArrayStorage);

      v6 = (void *)v19;
    }

  }
}

void sub_100071A94(id a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  DARootViewController *v5;
  DARootViewController *v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  DARootViewController *v17;
  DARootViewController *v18;
  SEL v19;
  id v20;
  int v21;
  id v22;
  id v23;
  id v24;
  id v25;

  if (qword_10016A6C8 != -1)
    swift_once(&qword_10016A6C8, sub_1000A66DC);
  v2 = qword_1001723C0;
  v3 = objc_msgSend(a1, "primaryAssetLocator");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  sub_1000A6B58(v4, (unint64_t)v6, v2);
  swift_bridgeObjectRelease(v6, v7, v8, v9, v10, v11, v12, v13);
  v14 = qword_1001723C0;
  v15 = objc_msgSend(a1, "secondaryAssetLocator");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  sub_1000A6DFC(v16, (unint64_t)v18, v14);
  swift_bridgeObjectRelease(v18, v19, v20, v21, v22, v23, v24, v25);
}

uint64_t sub_100071B78(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  void (*v14)(char *, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  char *v15;

  v8 = &a2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
  result = swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate]);
  if (result)
  {
    v10 = result;
    v11 = *((_QWORD *)v8 + 1);
    ObjectType = swift_getObjectType();
    v13 = (_QWORD *)swift_allocObject(&unk_1001381A8, 48, 7);
    v13[2] = a1;
    v13[3] = a2;
    v13[4] = a3;
    v13[5] = a4;
    v14 = *(void (**)(char *, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v11 + 8);
    swift_bridgeObjectRetain(a1);
    v15 = a2;
    swift_retain(a4);
    v14(v15, a1, sub_10007436C, v13, ObjectType, v11);
    swift_release(v13);
    return swift_unknownObjectRelease(v10);
  }
  return result;
}

void sub_100071C60(id a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  uint64_t v8;
  const char *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  BOOL v19;
  uint64_t v20;
  const char *v21;
  void *v22;
  int v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;

  if ((unint64_t)a2 >> 62)
    goto LABEL_15;
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  while (v8)
  {
    v16 = 4;
    while (1)
    {
      v17 = v16 - 4;
      if ((a2 & 0xC000000000000001) == 0)
        break;
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, a2);
      v19 = __OFADD__(v17, 1);
      v20 = v16 - 3;
      if (v19)
        goto LABEL_14;
LABEL_9:
      v32 = v18;
      if (objc_msgSend(v18, "endpoint") == a1)
      {
        swift_bridgeObjectRelease((DARootViewController *)a2, v21, v22, v23, v24, v25, v26, v27);
        v30 = objc_msgSend(v32, "endpoint");
        *(_QWORD *)(a3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint) = v30;
        a4(a1);
        goto LABEL_13;
      }

      ++v16;
      if (v20 == v8)
        goto LABEL_11;
    }
    v18 = *(id *)(a2 + 8 * v16);
    v19 = __OFADD__(v17, 1);
    v20 = v16 - 3;
    if (!v19)
      goto LABEL_9;
LABEL_14:
    __break(1u);
LABEL_15:
    if (a2 < 0)
      v31 = a2;
    else
      v31 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v31);
  }
LABEL_11:
  swift_bridgeObjectRelease((DARootViewController *)a2, v9, v10, v11, v12, v13, v14, v15);
  v28 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  v32 = (id)static OS_os_log.default.getter(v28);
  v29 = static os_log_type_t.default.getter(v32);
  os_log(_:dso:log:type:_:)("Unable to find a matching destination for the endpoint", 54, 2, &_mh_execute_header, v32, v29, &_swiftEmptyArrayStorage);
LABEL_13:

}

void sub_100071DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  DARootViewController *v5;
  DARootViewController *v6;
  const char *v7;
  DARootViewController *v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  DARootViewController *v16;
  DARootViewController *v17;
  const char *v18;
  DARootViewController *v19;
  id v20;
  int v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSString v26;
  SEL v27;
  id v28;
  int v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSString v34;
  SEL v35;
  id v36;
  int v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  DARootViewController *v44;
  DARootViewController *v45;
  const char *v46;
  DARootViewController *v47;
  id v48;
  int v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  NSString v55;
  SEL v56;
  id v57;
  int v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  DARootViewController *v67;
  DARootViewController *v68;
  const char *v69;
  DARootViewController *v70;
  id v71;
  int v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  NSString v78;
  SEL v79;
  id v80;
  int v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  void **v88;
  uint64_t v89;
  void (*v90)(uint64_t, void *);
  void *v91;
  void *v92;
  uint64_t v93;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v6 = v5;
  sub_10003FFA0(v4, v5, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000002ELL, (void *)0x80000001001154F0);
  v8 = (DARootViewController *)v7;
  swift_bridgeObjectRelease(v6, v7, v9, v10, v11, v12, v13, v14);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v17 = v16;
  sub_10003FFA0(v15, v16, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000030, (void *)0x8000000100115520);
  v19 = (DARootViewController *)v18;
  swift_bridgeObjectRelease(v17, v18, v20, v21, v22, v23, v24, v25);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8, v27, v28, v29, v30, v31, v32, v33);
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19, v35, v36, v37, v38, v39, v40, v41);
  v42 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v26, v34, 1);

  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v45 = v44;
  sub_10003FFA0(v43, v44, (uint64_t)&_swiftEmptyArrayStorage, 0x5952544552, (void *)0xE500000000000000);
  v47 = (DARootViewController *)v46;
  swift_bridgeObjectRelease(v45, v46, v48, v49, v50, v51, v52, v53);
  v54 = swift_allocObject(&unk_100138068, 32, 7);
  *(_QWORD *)(v54 + 16) = a1;
  *(_QWORD *)(v54 + 24) = a2;
  swift_retain(a2);
  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v47, v56, v57, v58, v59, v60, v61, v62);
  v92 = sub_100074044;
  v93 = v54;
  v88 = _NSConcreteStackBlock;
  v89 = 1107296256;
  v90 = sub_100040808;
  v91 = &unk_100138080;
  v63 = _Block_copy(&v88);
  swift_release(v93);
  v64 = (void *)objc_opt_self(UIAlertAction);
  v65 = objc_msgSend(v64, "actionWithTitle:style:handler:", v55, 0, v63);
  _Block_release(v63);

  objc_msgSend(v42, "addAction:", v65);
  v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v68 = v67;
  sub_10003FFA0(v66, v67, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x8000000100115560);
  v70 = (DARootViewController *)v69;
  swift_bridgeObjectRelease(v68, v69, v71, v72, v73, v74, v75, v76);
  v77 = swift_allocObject(&unk_1001380B8, 32, 7);
  *(_QWORD *)(v77 + 16) = a1;
  *(_QWORD *)(v77 + 24) = a2;
  swift_retain(a2);
  v78 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v70, v79, v80, v81, v82, v83, v84, v85);
  v92 = sub_10007406C;
  v93 = v77;
  v88 = _NSConcreteStackBlock;
  v89 = 1107296256;
  v90 = sub_100040808;
  v91 = &unk_1001380D0;
  v86 = _Block_copy(&v88);
  v87 = objc_msgSend(v64, "actionWithTitle:style:handler:", v78, 2, v86, swift_release(v93).n128_f64[0]);
  _Block_release(v86);

  objc_msgSend(v42, "addAction:", v87);
  objc_msgSend(v42, "showOnTopWithAnimated:completion:", 1, 0);

}

double sub_10007215C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)();
  double result;

  v5 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  v6 = objc_msgSend(v5, "isCheckerBoardActive");
  swift_unknownObjectRelease(v5);
  v7 = swift_allocObject(&unk_100138108, 32, 7);
  v8 = v7;
  if (v6)
    v9 = sub_100072264;
  else
    v9 = sub_10007242C;
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  sub_100035C4C((uint64_t)v9, 0);
  swift_retain(a3);
  sub_100066B64(1);
  sub_100035D74((uint64_t)v9, 0);
  sub_100035D74((uint64_t)v9, 0);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void sub_100072264()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  DARootViewController *v4;
  DARootViewController *v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  SEL v18;
  id v19;
  int v20;
  id v21;
  id v22;
  id v23;
  id v24;
  SEL v25;
  id v26;
  int v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  void *v35;
  int v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  DARootViewController *v43;
  id v44;
  _BYTE v45[24];

  if (qword_10016A658 != -1)
    swift_once(&qword_10016A658, sub_10006E428);
  v0 = qword_100172360;
  v1 = *(void **)(qword_100172360 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (!v1)
  {
    v41 = static os_log_type_t.error.getter(0);
    v42 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v44 = (id)static OS_os_log.default.getter(v42);
    os_log(_:dso:log:_:_:)(v41, &_mh_execute_header, v44, "Unable to archive device, serial number is nil", 46, 2, &_swiftEmptyArrayStorage);

    return;
  }
  v2 = objc_msgSend(v1, "serialNumber");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager);
  swift_beginAccess(v6 + 56, v45, 0, 0);
  v14 = *(_QWORD *)(v6 + 56);
  if (!*(_QWORD *)(v14 + 16))
  {
    v43 = v5;
LABEL_12:
    swift_bridgeObjectRelease(v43, v7, v8, v9, v10, v11, v12, v13);
    return;
  }
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v14);
  v15 = sub_100072A94(v3, (uint64_t)v5);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    v43 = (DARootViewController *)v14;
    goto LABEL_12;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
  swift_unknownObjectRetain(v17);
  swift_bridgeObjectRelease(v5, v18, v19, v20, v21, v22, v23, v24);
  swift_bridgeObjectRelease((DARootViewController *)v14, v25, v26, v27, v28, v29, v30, v31);
  v32 = objc_opt_self(DADeviceLocal);
  v33 = (void *)swift_dynamicCastObjCClass(v17, v32);
  if (v33)
    objc_msgSend(v33, "archiveConnection");
  swift_bridgeObjectRelease(v5, v34, v35, v36, v37, v38, v39, v40);
  swift_unknownObjectRelease(v17);
}

void sub_10007242C()
{
  void *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _BYTE *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  _QWORD v12[5];
  uint64_t v13;

  if (qword_10016A5F0 != -1)
    swift_once(&qword_10016A5F0, sub_100044F78);
  v0 = (void *)qword_1001722E8;
  v1 = *(NSObject **)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue);
  v2 = swift_allocObject(&unk_100138130, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_100138158, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1000740B0;
  *(_QWORD *)(v3 + 24) = v2;
  v12[4] = sub_10003CDD4;
  v13 = v3;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100048E58;
  v12[3] = &unk_100138170;
  v4 = _Block_copy(v12);
  v5 = v13;
  v6 = v0;
  swift_retain(v3);
  swift_release(v5);
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v3, "", 88, 147, 46, 1);
  swift_release(v2);
  swift_release(v3);
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v7 = (_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
    *(_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = (*(_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState) & 1) == 0;
    v8 = sub_100046588();
    objc_msgSend(v8, "setNearbySharingEnabled:", (*v7 & 1) == 0);

    v9 = qword_1001722E8;
    v10 = sub_100046588();
    objc_msgSend(v10, "setDiscoverableMode:", *(_QWORD *)(v9 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting));

    v11 = *(void **)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_captureButtonAssertion);
    if (v11)
      objc_msgSend(v11, "invalidate");
  }
}

uint64_t sub_100072624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  return a7(1);
}

void sub_100072648(uint64_t a1, void *a2, uint64_t a3, char **a4, uint64_t a5)
{
  sub_1000736F4(a2, a3, a4, a5);
}

uint64_t sub_100072678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;

  v9 = *v5;
  v10 = *v5 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
  result = swift_unknownObjectWeakLoadStrong(v10);
  if (result)
  {
    v12 = result;
    v13 = *(_QWORD *)(v10 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 32))(v9, a3, a4, a5, ObjectType, v13);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_10007271C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;

  v9 = *v5;
  v10 = *v5 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
  result = swift_unknownObjectWeakLoadStrong(v10);
  if (result)
  {
    v12 = result;
    v13 = *(_QWORD *)(v10 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16))(v9, a3, a4, a5, ObjectType, v13);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_1000727C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000727E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_10006FDA8(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16));
}

uint64_t sub_1000727EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_100072810(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  uint64_t v8;
  void (*v9)(id, uint64_t, uint64_t, uint64_t, uint64_t, void *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;

  v6 = a4;
  v9 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (!a3)
  {
    v10 = 0;
    v12 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v13 = 0;
    goto LABEL_6;
  }
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v12 = v11;
  if (!v6)
    goto LABEL_5;
LABEL_3:
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v6 = v14;
LABEL_6:
  swift_retain(v8);
  v15 = a2;
  v16 = a5;
  v9(v15, v10, v12, v13, v6, a5);
  swift_release(v8);

  swift_bridgeObjectRelease(v6);
  return swift_bridgeObjectRelease(v12);
}

void sub_1000728E8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

void sub_10007293C(int a1, id a2, void (*a3)(void))
{
  id v4;

  v4 = objc_msgSend(a2, "identifier");
  a3();

}

uint64_t sub_100072990(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1000729A0(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

_BYTE **sub_1000729D4(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_1000729E4(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a4();
  v7 = (void *)v6;
  v8 = *a1 + 8;
  if (v6)
    v10 = v6;
  else
    v10 = 0;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
  *a1 = v8;
  v9 = *a2;
  if (*a2)
  {
    *v9 = v7;
    *a2 = v9 + 1;
  }
  else
  {

  }
}

unint64_t sub_100072A94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_100072D74(a1, a2, v5);
}

uint64_t sub_100072AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100072B08(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100072B10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100072E54(a1, v4);
}

unint64_t sub_100072B40(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_100072F18(a1, v3);
}

unint64_t sub_100072B98(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v1 + 40), a1, 4);
  return sub_100072FB8(a1, v3);
}

unint64_t sub_100072BD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  DARootViewController *v5;
  DARootViewController *v6;
  Swift::Int v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  _QWORD v16[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v16, v3);
  String.hash(into:)(v16, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6, v8, v9, v10, v11, v12, v13, v14);
  return sub_100073054(a1, v7);
}

unint64_t sub_100072C50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  DARootViewController *v5;
  DARootViewController *v6;
  Swift::Int v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  _QWORD v16[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v16, v3);
  String.hash(into:)(v16, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6, v8, v9, v10, v11, v12, v13, v14);
  return sub_100073054(a1, v7);
}

unint64_t sub_100072CDC(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  DARootViewController *v5;
  DARootViewController *v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  Swift::Int v14;
  _QWORD v16[9];

  Hasher.init(_seed:)(v16, *(_QWORD *)(v1 + 40));
  v3 = objc_msgSend(*(id *)(a1 + 40), "serialNumber");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  String.hash(into:)(v16, v4, v6);
  swift_bridgeObjectRelease(v6, v7, v8, v9, v10, v11, v12, v13);
  v14 = Hasher._finalize()();
  return sub_1000731C8(a1, v14);
}

unint64_t sub_100072D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100072E54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_100074074(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_100036FDC((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_100072F18(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_100072FB8(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_100073054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1000731C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v19;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v19 = ~v3;
    v5 = *(void **)(a1 + 40);
    while (1)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v4);
      v7 = *(void **)(v6 + 40);
      swift_retain(v6);
      v8 = objc_msgSend(v7, "serialNumber");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v12 = objc_msgSend(v5, "serialNumber");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      if (v9 == v13 && v11 == v15)
        break;
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v13, v15, 0);
      swift_release(v6);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v15);
      if ((v17 & 1) == 0)
      {
        v4 = (v4 + 1) & v19;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_release(v6);
    swift_bridgeObjectRelease_n(v11, 2);
  }
  return v4;
}

void sub_100073334(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t KeyPath;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;

  v2 = v1;
  v4 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation;
  v5 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation] = 0;

  v6 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState] = a1;
  v7 = a1;

  KeyPath = swift_getKeyPath(&unk_10010D2A8);
  v9 = swift_allocObject(&unk_100138428, 24, 7);
  *(_QWORD *)(v9 + 16) = v2;
  v10 = v2;
  v11 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_100074368, v9, &protocol witness table for NSObject);
  swift_release(v9);
  swift_release(KeyPath);
  v12 = *(void **)&v2[v4];
  *(_QWORD *)&v2[v4] = v11;

}

uint64_t sub_100073410()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  SEL v17;
  id v18;
  int v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v25;
  SEL v26;
  id v27;
  int v28;
  id v29;
  id v30;
  id v31;
  id v32;
  int v33;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v1)
  {
    v2 = objc_msgSend(v1, "suitesAvailable");
    v3 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v25 = v4;
      else
        v25 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v12 = _CocoaArrayWrapper.endIndex.getter(v25);
      swift_bridgeObjectRelease((DARootViewController *)v4, v26, v27, v28, v29, v30, v31, v32);
    }
    else
    {
      v12 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease((DARootViewController *)v4, v5, v6, v7, v8, v9, v10, v11);
  }
  else
  {
    v12 = 0;
  }
  v13 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v14 + 56) = &type metadata for Int;
  *(_QWORD *)(v14 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v14 + 32) = v12;
  v15 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  v16 = (void *)static OS_os_log.default.getter(v15);
  static os_log_type_t.default.getter(v16);
  os_log(_:dso:log:type:_:)("[SuiteManager] Suites available for self service: %d", v33);
  swift_bridgeObjectRelease((DARootViewController *)v14, v17, v18, v19, v20, v21, v22, v23);

  return v12;
}

void sub_100073570()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  const char *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  id v23;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (!v2)
    return;
  v3 = v2;
  v4 = IndexPath.section.getter(v3);
  v5 = objc_msgSend(v3, "suitesAvailable");

  v6 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((v7 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v8 = *(id *)(v7 + 8 * v4 + 32);
      goto LABEL_6;
    }
    __break(1u);
    return;
  }
  v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v7);
LABEL_6:
  v16 = v8;
  swift_bridgeObjectRelease((DARootViewController *)v7, v9, v10, v11, v12, v13, v14, v15);
  v23 = objc_msgSend(v16, "suiteID");

  if (v23)
  {
    v17 = v1 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate);
    if (Strong)
    {
      v20 = Strong;
      v21 = *(_QWORD *)(v17 + 8);
      ObjectType = swift_getObjectType(Strong, v19);
      (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v21 + 40))(v1, v23, ObjectType, v21);

      swift_unknownObjectRelease(v20);
    }
    else
    {

    }
  }
}

void sub_1000736F4(void *a1, uint64_t a2, char **a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  DARootViewController *v19;
  DARootViewController *v20;
  const char *v21;
  void *v22;
  int v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  DARootViewController *v31;
  DARootViewController *v32;
  char v34;
  SEL v35;
  id v36;
  int v37;
  id v38;
  id v39;
  id v40;
  id v41;
  SEL v42;
  id v43;
  int v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  void *v54;
  int v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  const char *v64;
  void *v65;
  int v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  const char *v71;
  void *v72;
  int v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  id v91;
  char *v92;
  __n128 v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  void *v102;
  char *v103;
  char *v104;
  void *v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  __n128 v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t Strong;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t ObjectType;
  _QWORD *v129;
  void (*v130)(char *, uint64_t, void (*)(void *), _QWORD *, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char **v136;
  unsigned int v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  DARootViewController *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  DARootViewController *v152;
  DARootViewController *aBlock;
  uint64_t v154;
  uint64_t (*v155)(uint64_t);
  void *v156;
  void (*v157)();
  uint64_t v158;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v150 = *(_QWORD *)(v9 - 8);
  v151 = v9;
  __chkstk_darwin(v9);
  v149 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v147 = *(_QWORD *)(v11 - 8);
  v148 = v11;
  __chkstk_darwin(v11);
  v146 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS.QoSClass(0);
  v144 = *(_QWORD *)(v13 - 8);
  v145 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a1, "state");
  v17 = objc_msgSend(v16, "serialNumber");

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v28 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (!v28)
  {
    swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
    goto LABEL_9;
  }
  v134 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  v135 = v4;
  v136 = a3;
  v29 = objc_msgSend(v28, "serialNumber");
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  if (v18 == v30 && v20 == v32)
  {
    swift_bridgeObjectRelease_n(v20, 2);
    a3 = v136;
    goto LABEL_11;
  }
  v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v30, v32, 0);
  swift_bridgeObjectRelease(v20, v35, v36, v37, v38, v39, v40, v41);
  swift_bridgeObjectRelease(v32, v42, v43, v44, v45, v46, v47, v48);
  a3 = v136;
  if ((v34 & 1) == 0)
  {
LABEL_9:
    v49 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v50 = (void *)static OS_os_log.default.getter(v49);
    v51 = static os_log_type_t.default.getter(v50);
    os_log(_:dso:log:type:_:)("Ignoring didRequestRepairSuiteRunConfirmationWithConfirmation request as the serial number doesn't match or is nil", 114, 2, &_mh_execute_header, v50, v51, &_swiftEmptyArrayStorage);

    ((void (*)(_QWORD))a3)(0);
    return;
  }
LABEL_11:
  if (!((unint64_t)a2 >> 62))
  {
    v52 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v52)
      goto LABEL_13;
LABEL_38:
    swift_bridgeObjectRelease((DARootViewController *)a2, v53, v54, v55, v56, v57, v58, v59);
LABEL_39:
    v100 = (_QWORD *)swift_allocObject(&unk_100137F78, 40, 7);
    v101 = v135;
    v100[2] = v135;
    v100[3] = a3;
    v100[4] = a4;
    v102 = *(void **)&v101[v134];
    if (v102)
    {
      swift_retain(a4);
      v103 = v101;
      if (objc_msgSend(v102, "phase") == (id)1)
      {
        if (!v52)
        {
LABEL_48:
          v122 = v135;
          v123 = &v135[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
          Strong = swift_unknownObjectWeakLoadStrong(&v135[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate]);
          if (Strong)
          {
            v126 = Strong;
            v127 = *((_QWORD *)v123 + 1);
            ObjectType = swift_getObjectType(Strong, v125);
            v129 = (_QWORD *)swift_allocObject(&unk_100137FA0, 48, 7);
            v129[2] = a2;
            v129[3] = v122;
            v129[4] = a3;
            v129[5] = a4;
            v130 = *(void (**)(char *, uint64_t, void (*)(void *), _QWORD *, uint64_t, uint64_t))(v127 + 8);
            swift_bridgeObjectRetain(a2);
            swift_retain(a4);
            v130(v122, a2, sub_100074004, v129, ObjectType, v127);
            swift_release(v100);
            swift_release(v129);
            swift_unknownObjectRelease(v126);
          }
          else
          {
            swift_release(v100);
          }
          return;
        }
      }
      else
      {
        v105 = *(void **)&v101[v134];
        if (!v105)
          goto LABEL_48;
        v106 = objc_msgSend(v105, "phase");
        if (!v52 || v106 != (id)5)
          goto LABEL_48;
      }
      v107 = static os_log_type_t.debug.getter();
      v108 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v109 = (void *)static OS_os_log.default.getter(v108);
      os_log(_:dso:log:_:_:)(v107, &_mh_execute_header, v109, "Unexpected session phase, destinations will be ignored", 54, 2, &_swiftEmptyArrayStorage);

      v110 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
      v111 = (void *)static OS_dispatch_queue.main.getter(v110);
      v112 = swift_allocObject(&unk_100137FC8, 32, 7);
      *(_QWORD *)(v112 + 16) = sub_100073FF4;
      *(_QWORD *)(v112 + 24) = v100;
      v157 = sub_100074010;
      v158 = v112;
      aBlock = (DARootViewController *)_NSConcreteStackBlock;
      v154 = 1107296256;
      v155 = sub_100030658;
      v156 = &unk_100137FE0;
      v113 = _Block_copy(&aBlock);
      v114 = v158;
      swift_retain(v100);
      v115 = swift_release(v114);
      v116 = v146;
      static DispatchQoS.unspecified.getter(v115);
      aBlock = &_swiftEmptyArrayStorage;
      v117 = sub_100035C5C();
      v118 = sub_100035CA4((uint64_t *)&unk_10016AD10);
      v119 = sub_100035CE4();
      v120 = v149;
      v121 = v151;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v118, v119, v151, v117);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v116, v120, v113);
      _Block_release(v113);
      swift_release(v100);

      (*(void (**)(char *, uint64_t))(v150 + 8))(v120, v121);
      (*(void (**)(char *, uint64_t))(v147 + 8))(v116, v148);
      return;
    }
    swift_retain(a4);
    v104 = v101;
    goto LABEL_48;
  }
LABEL_34:
  if (a2 < 0)
    v99 = a2;
  else
    v99 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v52 = _CocoaArrayWrapper.endIndex.getter(v99);
  if (!v52)
    goto LABEL_38;
LABEL_13:
  v60 = 4;
  a3 = &selRef_bluetoothID;
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0)
      v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v60 - 4, a2);
    else
      v61 = *(id *)(a2 + 8 * v60);
    v62 = v61;
    v63 = v60 - 3;
    if (__OFADD__(v60 - 4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (objc_msgSend(v61, "endpoint") == (id)1)
      break;

    ++v60;
    if (v63 == v52)
    {
      swift_bridgeObjectRelease((DARootViewController *)a2, v71, v72, v73, v74, v75, v76, v77);
LABEL_31:
      a3 = v136;
      goto LABEL_39;
    }
  }
  swift_bridgeObjectRelease((DARootViewController *)a2, v64, v65, v66, v67, v68, v69, v70);
  v78 = objc_msgSend(v62, "suites");

  v79 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
  v80 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, v79);

  if ((unint64_t)v80 >> 62)
  {
    if (v80 < 0)
      v131 = v80;
    else
      v131 = v80 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v80);
    v81 = _CocoaArrayWrapper.endIndex.getter(v131);
  }
  else
  {
    v81 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v80);
  }
  a3 = v136;
  if (!v81)
  {
    swift_bridgeObjectRelease_n(v80, 2);
    goto LABEL_39;
  }
  v133 = a4;
  v143 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  if (v81 >= 1)
  {
    v82 = 0;
    v138 = v80 & 0xC000000000000001;
    v137 = enum case for DispatchQoS.QoSClass.default(_:);
    v141 = v52;
    v142 = (DARootViewController *)a2;
    v140 = v80;
    v139 = v81;
    v83 = v151;
    do
    {
      if (v138)
        v84 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v82, v80);
      else
        v84 = *(id *)(v80 + 8 * v82 + 32);
      v85 = v84;
      ++v82;
      v87 = v144;
      v86 = v145;
      (*(void (**)(char *, _QWORD, uint64_t))(v144 + 104))(v15, v137, v145);
      v88 = (void *)static OS_dispatch_queue.global(qos:)(v15);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v15, v86);
      v89 = swift_allocObject(&unk_100138018, 24, 7);
      *(_QWORD *)(v89 + 16) = v85;
      v157 = sub_100074018;
      v158 = v89;
      aBlock = (DARootViewController *)_NSConcreteStackBlock;
      v154 = 1107296256;
      v155 = sub_100030658;
      v156 = &unk_100138030;
      v90 = _Block_copy(&aBlock);
      v91 = v85;
      v92 = v146;
      static DispatchQoS.unspecified.getter(v93);
      v152 = &_swiftEmptyArrayStorage;
      v94 = sub_100035C5C();
      v95 = sub_100035CA4((uint64_t *)&unk_10016AD10);
      v96 = sub_100035CE4();
      v97 = v149;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v152, v95, v96, v83, v94);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v92, v97, v90);
      _Block_release(v90);

      (*(void (**)(char *, uint64_t))(v150 + 8))(v97, v83);
      (*(void (**)(char *, uint64_t))(v147 + 8))(v92, v148);
      v98 = v158;

      swift_release(v98);
      v52 = v141;
      a2 = (uint64_t)v142;
      v80 = v140;
    }
    while (v139 != v82);
    swift_bridgeObjectRelease_n(v140, 2);
    a4 = v133;
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_100073FC8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100073FF4(uint64_t a1)
{
  uint64_t v1;

  return sub_100071B78(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_100074004(void *a1)
{
  uint64_t v1;

  sub_100071C60(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(id))(v1 + 32));
}

void sub_100074010()
{
  uint64_t v0;

  sub_100071DEC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100074018()
{
  uint64_t v0;

  sub_100071A94(*(id *)(v0 + 16));
}

uint64_t sub_100074020()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100074044()
{
  uint64_t v0;

  return (*(uint64_t (**)(void *))(v0 + 16))(&_swiftEmptyArrayStorage);
}

double sub_10007406C(uint64_t a1)
{
  uint64_t v1;

  return sub_10007215C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100074074(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

void sub_1000740B0()
{
  uint64_t v0;

  sub_100046178(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000740B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000740CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100074100()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100074124()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100074150(uint64_t a1)
{
  uint64_t v1;

  sub_1000716B4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10007415C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100074188()
{
  uint64_t v0;

  sub_1000712CC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_100074190()
{
  uint64_t v0;

  return sub_10008BDD4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100074198(uint64_t a1)
{
  uint64_t v1;

  return sub_100070594(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1000741A4()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000741D8()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000741FC(uint64_t a1)
{
  uint64_t v1;

  sub_10006EBA0(a1, v1);
}

void sub_100074204(uint64_t a1)
{
  uint64_t v1;

  sub_10006F030(a1, v1);
}

uint64_t sub_10007420C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4((uint64_t *)&unk_10016C2E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100074254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4((uint64_t *)&unk_10016C2E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10007429C()
{
  uint64_t v0;

  sub_10006F5BC(v0);
}

id sub_1000742A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  *a2 = v2;
  return v2;
}

void sub_1000742BC(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_100073334(v1);

}

const char *sub_1000742F8()
{
  return "progress";
}

id sub_100074304@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "progress");
  *a2 = result;
  return result;
}

id sub_10007433C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setProgress:", *a1);
}

void sub_100074350(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006E4D8(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_100074358(id a1)
{
  if (a1 != (id)1)

}

void destroy for SelfServiceSuiteResultsComponentView(uint64_t a1)
{

}

uint64_t initializeWithCopy for SelfServiceSuiteResultsComponentView(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for SelfServiceSuiteResultsComponentView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v3 = (void *)a2[3];
  v4 = (void *)a1[3];
  a1[3] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for SelfServiceSuiteResultsComponentView(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for SelfServiceSuiteResultsComponentView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelfServiceSuiteResultsComponentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SelfServiceSuiteResultsComponentView()
{
  return &type metadata for SelfServiceSuiteResultsComponentView;
}

uint64_t sub_100074558(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10011E2B4, 1);
}

void sub_100074568(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  DARootViewController *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  DARootViewController *v23;
  DARootViewController *v24;
  char v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  DARootViewController *v30;
  char v31;
  uint64_t v32;
  SEL v33;
  id v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  SEL v57;
  id v58;
  int v59;
  id v60;
  id v61;
  id v62;
  id v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  DARootViewController *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t KeyPath;
  uint64_t v72;
  DARootViewController *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;

  v6 = objc_msgSend(a1, "name");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v75 = v7;
  v76 = v9;
  v10 = sub_10003F14C();
  v11 = Text.init<A>(_:)(&v75, &type metadata for String, v10);
  v66 = v12;
  v67 = v11;
  v64 = v13;
  v68 = v14;
  KeyPath = swift_getKeyPath(&unk_10010D4A8);
  v15 = objc_msgSend(a1, "value");
  if (v15)
  {
    v16 = v15;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v19 = v18;

    v75 = v17;
    v76 = v19;
    v20 = Text.init<A>(_:)(&v75, &type metadata for String, v10);
    v22 = v21;
    v24 = v23;
    v26 = v25 & 1;
    v27 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
    v28 = Color.init(uiColor:)(v27);
    v75 = v28;
    v29 = Text.foregroundStyle<A>(_:)(&v75, v20, v22, v26, v24, &type metadata for Color, &protocol witness table for Color);
    v73 = v30;
    v74 = v29;
    v69 = v31 & 1;
    v70 = v32;
    sub_100076B54(v20, v22, v26);
    swift_release(v28);
    swift_bridgeObjectRelease(v24, v33, v34, v35, v36, v37, v38, v39);
    v72 = swift_getKeyPath(&unk_10010D4A8);
    v40 = 2;
  }
  else
  {
    v73 = 0;
    v74 = 0;
    v69 = 0;
    v70 = 0;
    v72 = 0;
    v40 = 0;
  }
  v41 = objc_msgSend(a1, "status");
  v42 = v41;
  if (v41)
  {
    sub_100084070(v41, (uint64_t)&v75);

    v44 = v75;
    v43 = v76;
    v45 = v78;
    v65 = v77;
    v46 = v79;
    v47 = BYTE1(v79);
    v48 = static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)(&v75, *(_QWORD *)&a3, 0, *(_QWORD *)&a3, 0, v48, v49);
    v50 = v75;
    v51 = v76;
    v52 = v77;
    v53 = v78;
    v42 = v79;
    v54 = v80;
    v55 = 256;
    if (!v47)
      v55 = 0;
    v56 = v55 | v46;
  }
  else
  {
    v44 = 0;
    v43 = 0;
    v65 = 0;
    v45 = 0;
    v50 = 0;
    v51 = 0;
    v52 = 0;
    v53 = 0;
    v54 = 0;
    v56 = 65280;
  }
  *(_QWORD *)a2 = v67;
  *(_QWORD *)(a2 + 8) = v66;
  *(_BYTE *)(a2 + 16) = v64 & 1;
  *(_QWORD *)(a2 + 24) = v68;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = 2;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a2 + 64) = 1;
  *(_QWORD *)(a2 + 72) = v74;
  *(_QWORD *)(a2 + 80) = v70;
  *(_QWORD *)(a2 + 88) = v69;
  *(_QWORD *)(a2 + 96) = v73;
  *(_QWORD *)(a2 + 104) = v72;
  *(_QWORD *)(a2 + 112) = v40;
  *(_BYTE *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = v44;
  *(_QWORD *)(a2 + 136) = v43;
  *(_QWORD *)(a2 + 144) = v65;
  *(_QWORD *)(a2 + 152) = v45;
  *(_QWORD *)(a2 + 160) = v56;
  *(_QWORD *)(a2 + 168) = v50;
  *(_QWORD *)(a2 + 176) = v51;
  *(_QWORD *)(a2 + 184) = v52;
  *(_QWORD *)(a2 + 192) = v53;
  *(_QWORD *)(a2 + 200) = v42;
  *(_QWORD *)(a2 + 208) = v54;
  sub_1000769B4(v67, v66, v64 & 1);
  swift_bridgeObjectRetain(v68);
  swift_retain(KeyPath);
  sub_1000769C4(v74, v70, v69, (uint64_t)v73, v72);
  sub_100076A00(v44, v43, v65, v45, v56);
  sub_100076A84(v44, v43, v65, v45, v56);
  sub_100076B18(v74, v70, v69, v73, v72);
  sub_100076B54(v67, v66, v64 & 1);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v68, v57, v58, v59, v60, v61, v62, v63);
}

double sub_100074958@<D0>(uint64_t a1@<X8>)
{
  double *v1;
  double v3;
  void *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  double result;
  __int128 v12;
  _OWORD v13[13];
  uint64_t v14;
  _OWORD v15[14];

  v3 = *v1;
  v4 = (void *)*((_QWORD *)v1 + 1);
  v5 = static VerticalAlignment.center.getter();
  sub_100074568(v4, (uint64_t)v13, v3);
  *(_OWORD *)((char *)&v15[10] + 7) = v13[10];
  *(_OWORD *)((char *)&v15[11] + 7) = v13[11];
  *(_OWORD *)((char *)&v15[12] + 7) = v13[12];
  *(_QWORD *)((char *)&v15[13] + 7) = v14;
  *(_OWORD *)((char *)&v15[6] + 7) = v13[6];
  *(_OWORD *)((char *)&v15[7] + 7) = v13[7];
  *(_OWORD *)((char *)&v15[8] + 7) = v13[8];
  *(_OWORD *)((char *)&v15[9] + 7) = v13[9];
  *(_OWORD *)((char *)&v15[2] + 7) = v13[2];
  *(_OWORD *)((char *)&v15[3] + 7) = v13[3];
  *(_OWORD *)((char *)&v15[4] + 7) = v13[4];
  *(_OWORD *)((char *)&v15[5] + 7) = v13[5];
  *(_OWORD *)((char *)v15 + 7) = v13[0];
  *(_OWORD *)((char *)&v15[1] + 7) = v13[1];
  v6 = v15[11];
  *(_OWORD *)(a1 + 177) = v15[10];
  *(_OWORD *)(a1 + 193) = v6;
  *(_OWORD *)(a1 + 209) = v15[12];
  *(_OWORD *)(a1 + 224) = *(_OWORD *)((char *)&v15[12] + 15);
  v7 = v15[7];
  *(_OWORD *)(a1 + 113) = v15[6];
  *(_OWORD *)(a1 + 129) = v7;
  v8 = v15[9];
  *(_OWORD *)(a1 + 145) = v15[8];
  *(_OWORD *)(a1 + 161) = v8;
  v9 = v15[3];
  *(_OWORD *)(a1 + 49) = v15[2];
  *(_OWORD *)(a1 + 65) = v9;
  v10 = v15[5];
  *(_OWORD *)(a1 + 81) = v15[4];
  *(_OWORD *)(a1 + 97) = v10;
  result = *(double *)v15;
  v12 = v15[1];
  *(_OWORD *)(a1 + 17) = v15[0];
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 33) = v12;
  return result;
}

void sub_100074A7C(void *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  DARootViewController *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t OpaqueTypeConformance2;
  char *v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t *v73;
  DARootViewController *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  SEL v79;
  id v80;
  int v81;
  id v82;
  id v83;
  id v84;
  id v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int v96;
  uint64_t v97;
  char *v98;
  uint64_t *v99;
  DARootViewController *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char v110[16];
  double v111;
  double v112;
  double v113;
  void *v114;
  _QWORD v115[4];
  uint64_t v116;

  v99 = a2;
  v9 = type metadata accessor for InsetGroupedListStyle(0);
  v10 = *(_QWORD *)(v9 - 8);
  v108 = v9;
  v109 = v10;
  __chkstk_darwin(v9);
  v107 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100035CA4(&qword_10016C310);
  __chkstk_darwin(v12);
  v95 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100035CA4(&qword_10016C318);
  __chkstk_darwin(v14);
  v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ListSectionSpacing(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = v17;
  __chkstk_darwin(v17);
  v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100035CA4(&qword_10016C320);
  v89 = *(_QWORD *)(v92 - 8);
  v22 = v89;
  __chkstk_darwin(v92);
  v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100035CA4(&qword_10016C328);
  __chkstk_darwin(v93);
  v91 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100035CA4(&qword_10016C330);
  v106 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v94 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100035CA4(&qword_10016C338);
  v103 = *(_QWORD *)(v105 - 8);
  v27 = __chkstk_darwin(v105);
  v98 = (char *)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v102 = (char *)&v86 - v29;
  v30 = objc_msgSend(a1, "name");
  v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v100 = v31;

  v97 = static Font.title.getter();
  v96 = static Edge.Set.horizontal.getter();
  v32 = EdgeInsets.init(_all:)(a3);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v111 = a3;
  v112 = a4;
  v113 = a5;
  v114 = a1;
  v39 = sub_100035CA4(&qword_10016C340);
  v40 = sub_100076168(&qword_10016C348, &qword_10016C340, (void (*)(void))sub_100075FC8);
  v88 = v24;
  v41 = List<>.init(content:)(sub_100075FB8, v110, v39, v40);
  static ListSectionSpacing.custom(_:)(v41, a5);
  v42 = *(int *)(v14 + 36);
  v43 = v16;
  v86 = v16;
  v44 = &v16[v42];
  v90 = v18;
  v45 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v87 = v21;
  v46 = v19;
  v45(&v16[v42], v21, v19);
  v47 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  v47(v44, 0, 1, v19);
  v48 = v43;
  v49 = v92;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v48, v24, v92);
  KeyPath = swift_getKeyPath(&unk_10010D398);
  v51 = (uint64_t)v95;
  v45(v95, v21, v19);
  v47((char *)v51, 0, 1, v19);
  v52 = v93;
  v53 = (uint64_t)v91;
  v54 = (uint64_t *)&v91[*(int *)(v93 + 36)];
  v55 = sub_100035CA4(&qword_10016C408);
  sub_10006E3E0(v51, (uint64_t)v54 + *(int *)(v55 + 28), &qword_10016C310);
  *v54 = KeyPath;
  v56 = (uint64_t)v86;
  v57 = v53;
  sub_10006E3E0((uint64_t)v86, v53, &qword_10016C318);
  sub_100036FA0(v51, &qword_10016C310);
  sub_100036FA0(v56, &qword_10016C318);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v87, v46);
  v58 = (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v88, v49);
  v59 = v107;
  InsetGroupedListStyle.init()(v58);
  v60 = sub_100076470();
  v61 = v94;
  v62 = v108;
  View.listStyle<A>(_:)(v59, v52, v108, v60, &protocol witness table for InsetGroupedListStyle);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v59, v62);
  v63 = sub_100036FA0(v57, &qword_10016C328);
  v64 = static Color.clear.getter(v63);
  v115[3] = &protocol witness table for InsetGroupedListStyle;
  v116 = v64;
  v115[0] = v52;
  v115[1] = v62;
  v115[2] = v60;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v115, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  v66 = v98;
  v67 = v104;
  View.scrollContentBackground<A>(_:)(&v116, v104, &type metadata for Color, OpaqueTypeConformance2, &protocol witness table for Color);
  v68 = swift_release(v64);
  (*(void (**)(char *, uint64_t, __n128))(v106 + 8))(v61, v67, v68);
  v69 = v103;
  v70 = v102;
  v71 = v105;
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, v66, v105);
  v72 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v72(v66, v70, v71);
  v73 = v99;
  v74 = v100;
  *v99 = v101;
  v73[1] = (uint64_t)v74;
  v75 = v97;
  v73[2] = v97;
  *((_BYTE *)v73 + 24) = v96;
  *((double *)v73 + 4) = v32;
  v73[5] = v34;
  v73[6] = v36;
  v73[7] = v38;
  *((_BYTE *)v73 + 64) = 0;
  v76 = v73;
  v77 = sub_100035CA4(&qword_10016C440);
  v72((char *)v76 + *(int *)(v77 + 48), v66, v71);
  v78 = *(void (**)(char *, uint64_t))(v69 + 8);
  swift_bridgeObjectRetain(v74);
  swift_retain(v75);
  v78(v70, v71);
  v78(v66, v71);
  swift_release(v75);
  swift_bridgeObjectRelease(v74, v79, v80, v81, v82, v83, v84, v85);
}

uint64_t sub_10007513C(void *a1, double a2, double a3, double a4)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  void *v12;
  int v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  _QWORD v28[2];

  v8 = objc_msgSend(a1, "sections");
  v9 = sub_100037118(0, &qword_10016C448, ASTSuiteResultSection_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if (!((unint64_t)v10 >> 62))
  {
    v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease((DARootViewController *)v10, v11, v12, v13, v14, v15, v16, v17);
LABEL_3:
    v28[0] = 0;
    v28[1] = v18;
    KeyPath = swift_getKeyPath(&unk_10010D3D0);
    v20 = swift_allocObject(&unk_100138508, 48, 7);
    *(double *)(v20 + 16) = a2;
    *(double *)(v20 + 24) = a3;
    *(double *)(v20 + 32) = a4;
    *(_QWORD *)(v20 + 40) = a1;
    v21 = a1;
    v22 = sub_100035CA4(&qword_10016C450);
    v23 = sub_100035CA4(&qword_10016C358);
    v24 = sub_1000765C4();
    v25 = sub_100075FC8();
    return ForEach<>.init(_:id:content:)(v28, KeyPath, sub_1000765B4, v20, v22, v23, v24, &protocol witness table for Int, v25);
  }
  if (v10 < 0)
    v27 = v10;
  else
    v27 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v18 = _CocoaArrayWrapper.endIndex.getter(v27);
  result = swift_bridgeObjectRelease_n(v10, 2);
  if ((v18 & 0x8000000000000000) == 0)
    goto LABEL_3;
  __break(1u);
  return result;
}

void sub_1000752BC(unint64_t *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  const char *v30;
  void *v31;
  int v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t OpaqueTypeConformance2;
  __n128 v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t KeyPath;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  void (**v76)(char *, uint64_t, __n128);
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  id v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  double v98;
  uint64_t v99;

  v12 = type metadata accessor for Prominence(0);
  v86 = *(_QWORD *)(v12 - 8);
  v87 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100035CA4(&qword_10016C360);
  v85 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100035CA4(&qword_10016C468);
  v88 = *(_QWORD *)(v93 - 8);
  v17 = __chkstk_darwin(v93);
  v19 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v84 = (char *)&v83 - v20;
  v90 = sub_100035CA4(&qword_10016C470);
  __chkstk_darwin(v90);
  v91 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100035CA4(&qword_10016C388);
  v83 = *(id *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a1;
  v26 = objc_msgSend(a2, "sections");
  v27 = sub_100037118(0, &qword_10016C448, ASTSuiteResultSection_ptr);
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

  if ((v28 & 0xC000000000000001) == 0)
  {
    if ((v25 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v25 < *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v29 = *(id *)(v28 + 8 * v25 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
  v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v28);
LABEL_5:
  v37 = v29;
  v89 = a3;
  swift_bridgeObjectRelease((DARootViewController *)v28, v30, v31, v32, v33, v34, v35, v36);
  v38 = swift_allocObject(&unk_100138530, 56, 7);
  *(_QWORD *)(v38 + 16) = v37;
  *(double *)(v38 + 24) = a4;
  *(double *)(v38 + 32) = a5;
  *(double *)(v38 + 40) = a6;
  *(_QWORD *)(v38 + 48) = a2;
  v39 = a2;
  v40 = v37;
  v41 = objc_msgSend(v40, "title");
  if (v41)
  {
    v42 = v41;
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v83 = v40;
    v44 = v43;
    v46 = v45;

    v94 = v44;
    v95 = v46;
    v47 = sub_10003F14C();
    v94 = Text.init<A>(_:)(&v94, &type metadata for String, v47);
    v95 = v48;
    v96 = v49 & 1;
    v97 = v50;
    v98 = -a5;
    v99 = 0;
    __chkstk_darwin(v94);
    v51 = sub_100035CA4(&qword_10016C378);
    v52 = sub_100076104();
    v53 = sub_100076168(&qword_10016C380, &qword_10016C388, (void (*)(void))sub_1000761CC);
    Section<>.init(header:content:)(&v94, sub_10007671C, &v83 - 4, v51, v22, v52, v53);
    v55 = v86;
    v54 = v87;
    (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v14, enum case for Prominence.increased(_:), v87);
    v56 = sub_100076074();
    v57 = v92;
    View.headerProminence(_:)(v14, v92, v56);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v54);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v16, v57);
    v58 = v88;
    v59 = v84;
    v60 = v93;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v84, v19, v93);
    v61 = v91;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v91, v59, v60);
    swift_storeEnumTagMultiPayload(v61, v90, 0);
    v94 = v57;
    v95 = v56;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v89, v61, v60, v22, OpaqueTypeConformance2, v53);

    v63 = swift_release(v38);
    (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v59, v60, v63);
  }
  else
  {
    v64 = objc_msgSend(v40, "tests");
    v65 = sub_100037118(0, &qword_10016C478, ASTSuiteResultTest_ptr);
    v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, v65);

    v94 = v66;
    KeyPath = swift_getKeyPath(&unk_10010D3E8);
    v68 = swift_allocObject(&unk_100138558, 48, 7);
    *(double *)(v68 + 16) = a4;
    *(double *)(v68 + 24) = a5;
    *(double *)(v68 + 32) = a6;
    *(_QWORD *)(v68 + 40) = v39;
    v69 = v39;
    v70 = v40;
    v71 = sub_100035CA4(&qword_10016C480);
    v72 = sub_100035CA4(&qword_10016C398);
    v73 = sub_1000489C4(&qword_10016C488, &qword_10016C480, (uint64_t)&protocol conformance descriptor for [A]);
    v74 = sub_1000766C4();
    v75 = sub_1000761CC();
    ForEach<>.init(_:id:content:)(&v94, KeyPath, sub_1000766B4, v68, v71, v72, v73, v74, v75, v82);
    v76 = (void (**)(char *, uint64_t, __n128))v83;
    v77 = v91;
    (*((void (**)(char *, char *, uint64_t))v83 + 2))(v91, v24, v22);
    swift_storeEnumTagMultiPayload(v77, v90, 1);
    v78 = sub_100076074();
    v94 = v92;
    v95 = v78;
    v79 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 1);
    v80 = sub_100076168(&qword_10016C380, &qword_10016C388, (void (*)(void))sub_1000761CC);
    _ConditionalContent<>.init(storage:)(v89, v77, v93, v22, v79, v80);

    v81 = swift_release(v38);
    v76[1](v24, v22, v81);
  }
}

uint64_t sub_1000758F8(void *a1, void *a2, double a3, double a4, double a5)
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v9 = objc_msgSend(a1, "tests");
  v10 = sub_100037118(0, &qword_10016C478, ASTSuiteResultTest_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  v21 = v11;
  KeyPath = swift_getKeyPath(&unk_10010D3E8);
  v13 = swift_allocObject(&unk_100138580, 48, 7);
  *(double *)(v13 + 16) = a3;
  *(double *)(v13 + 24) = a4;
  *(double *)(v13 + 32) = a5;
  *(_QWORD *)(v13 + 40) = a2;
  v14 = a2;
  v15 = sub_100035CA4(&qword_10016C480);
  v16 = sub_100035CA4(&qword_10016C398);
  v17 = sub_1000489C4(&qword_10016C488, &qword_10016C480, (uint64_t)&protocol conformance descriptor for [A]);
  v18 = sub_1000766C4();
  v19 = sub_1000761CC();
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))ForEach<>.init(_:id:content:))(&v21, KeyPath, sub_100076B9C, v13, v15, v16, v17, v18, v19);
}

_QWORD *sub_100075A50@<X0>(void **a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  DARootViewController *v23;
  DARootViewController *v24;
  SEL v25;
  id v26;
  int v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _OWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  void *v72;

  v67 = a3;
  v5 = sub_100035CA4(&qword_10016C3F0);
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100035CA4(&qword_10016C3E0);
  __chkstk_darwin(v63);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100035CA4(&qword_10016C3D0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v66 = (uint64_t)&v61 - v14;
  v68 = sub_100035CA4(&qword_10016C498);
  __chkstk_darwin(v68);
  v16 = (uint64_t *)((char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *a1;
  v18 = objc_msgSend(v17, "value");
  if (!v18)
    goto LABEL_6;

  v19 = objc_msgSend(v17, "status");
  if (!v19)
    goto LABEL_7;
  v20 = v19;
  v21 = objc_msgSend(v19, "status");

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
  v32 = ((unint64_t)v24 >> 56) & 0xF;
  if (((unint64_t)v24 & 0x2000000000000000) == 0)
    v32 = v22 & 0xFFFFFFFFFFFFLL;
  if (v32)
  {
LABEL_6:
    v62 = v10;
    __chkstk_darwin(v18);
    *(&v61 - 2) = (uint64_t)v17;
    v33 = objc_msgSend(a2, "name");
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    v69[0] = xmmword_10010D2F0;
    v69[1] = xmmword_10010D300;
    v70 = v34;
    v71 = v36;
    v72 = v17;
    v37 = sub_100076268();
    v38 = sub_10007674C();
    v39 = v17;
    v40 = NavigationLink.init(destination:label:)(v69, sub_10007673C, &v61 - 4, &type metadata for SelfServiceSuiteResultsTestRowView, &type metadata for SelfServiceSuiteResultsTestView, v37, v38);
    v41 = static Color.black.getter(v40);
    KeyPath = swift_getKeyPath(&unk_10010D400);
    v44 = v64;
    v43 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v9, v7, v65);
    v45 = (uint64_t *)&v9[*(int *)(v63 + 36)];
    *v45 = KeyPath;
    v45[1] = v41;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v43);
    v46 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
    v47 = Color.init(_:)(v46);
    *(_QWORD *)&v69[0] = v47;
    swift_retain(v47);
    v48 = AnyView.init<A>(_:)(v69, &type metadata for Color, &protocol witness table for Color);
    sub_10006E3E0((uint64_t)v9, (uint64_t)v13, &qword_10016C3E0);
    swift_release(v47);
    v49 = v62;
    *(_QWORD *)&v13[*(int *)(v62 + 36)] = v48;
    sub_100036FA0((uint64_t)v9, &qword_10016C3E0);
    v50 = v66;
    sub_100076798((uint64_t)v13, v66);
    sub_10006E3E0(v50, (uint64_t)v16, &qword_10016C3D0);
    swift_storeEnumTagMultiPayload(v16, v68, 1);
    v51 = sub_100035CA4(&qword_10016C3A8);
    v52 = sub_1000762AC(&qword_10016C3A0, &qword_10016C3A8, (void (*)(void))sub_100076268);
    v53 = sub_1000762AC(&qword_10016C3C8, &qword_10016C3D0, (void (*)(void))sub_100076330);
    _ConditionalContent<>.init(storage:)(v67, v16, v51, v49, v52, v53);
    return (_QWORD *)sub_100036FA0(v50, &qword_10016C3D0);
  }
  else
  {
LABEL_7:
    v55 = (void *)objc_opt_self(UIColor);
    v56 = v17;
    *(_QWORD *)&v69[0] = Color.init(_:)(objc_msgSend(v55, "secondarySystemBackgroundColor"));
    v57 = AnyView.init<A>(_:)(v69, &type metadata for Color, &protocol witness table for Color);
    *v16 = 0x4036000000000000;
    v16[1] = v56;
    v16[2] = v57;
    swift_storeEnumTagMultiPayload(v16, v68, 0);
    v58 = sub_100035CA4(&qword_10016C3A8);
    v59 = sub_1000762AC(&qword_10016C3A0, &qword_10016C3A8, (void (*)(void))sub_100076268);
    v60 = sub_1000762AC(&qword_10016C3C8, &qword_10016C3D0, (void (*)(void))sub_100076330);
    return _ConditionalContent<>.init(storage:)(v67, v16, v58, v10, v59, v60);
  }
}

void sub_100075F48(uint64_t a1@<X8>)
{
  double *v1;
  double v3;
  double v4;
  double v5;
  void *v6;
  uint64_t v7;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = (void *)*((_QWORD *)v1 + 3);
  *(_QWORD *)a1 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v7 = sub_100035CA4(&qword_10016C308);
  sub_100074A7C(v6, (uint64_t *)(a1 + *(int *)(v7 + 44)), v3, v4, v5);
}

uint64_t sub_100075FB8()
{
  uint64_t v0;

  return sub_10007513C(*(void **)(v0 + 40), *(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

unint64_t sub_100075FC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10016C350;
  if (!qword_10016C350)
  {
    v1 = sub_100035D30(&qword_10016C358);
    v2[0] = sub_100035D30(&qword_10016C360);
    v2[1] = sub_100076074();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 1);
    sub_100076168(&qword_10016C380, &qword_10016C388, (void (*)(void))sub_1000761CC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C350);
  }
  return result;
}

unint64_t sub_100076074()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C368;
  if (!qword_10016C368)
  {
    v1 = sub_100035D30(&qword_10016C360);
    sub_100076104();
    sub_100076168(&qword_10016C380, &qword_10016C388, (void (*)(void))sub_1000761CC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C368);
  }
  return result;
}

unint64_t sub_100076104()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C370;
  if (!qword_10016C370)
  {
    v1 = sub_100035D30(&qword_10016C378);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C370);
  }
  return result;
}

uint64_t sub_100076168(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100035D30(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000761CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C390;
  if (!qword_10016C390)
  {
    v1 = sub_100035D30(&qword_10016C398);
    sub_1000762AC(&qword_10016C3A0, &qword_10016C3A8, (void (*)(void))sub_100076268);
    sub_1000762AC(&qword_10016C3C8, &qword_10016C3D0, (void (*)(void))sub_100076330);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C390);
  }
  return result;
}

unint64_t sub_100076268()
{
  unint64_t result;

  result = qword_10016C3B0;
  if (!qword_10016C3B0)
  {
    result = swift_getWitnessTable(&unk_10010D454, &type metadata for SelfServiceSuiteResultsTestRowView);
    atomic_store(result, (unint64_t *)&qword_10016C3B0);
  }
  return result;
}

uint64_t sub_1000762AC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100035D30(a2);
    a3();
    sub_1000489C4(&qword_10016C3B8, &qword_10016C3C0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100076330()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C3D8;
  if (!qword_10016C3D8)
  {
    v1 = sub_100035D30(&qword_10016C3E0);
    sub_1000489C4(&qword_10016C3E8, &qword_10016C3F0, (uint64_t)&protocol conformance descriptor for NavigationLink<A, B>);
    sub_1000489C4(&qword_10016C3F8, &qword_10016C400, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C3D8);
  }
  return result;
}

uint64_t sub_1000763CC()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t sub_1000763EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100035CA4(&qword_10016C310);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006E3E0(a1, (uint64_t)v4, &qword_10016C310);
  return EnvironmentValues.listSectionSpacing.setter(v4);
}

unint64_t sub_100076470()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C410;
  if (!qword_10016C410)
  {
    v1 = sub_100035D30(&qword_10016C328);
    sub_1000764F4();
    sub_1000489C4(&qword_10016C438, &qword_10016C408, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C410);
  }
  return result;
}

unint64_t sub_1000764F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C418;
  if (!qword_10016C418)
  {
    v1 = sub_100035D30(&qword_10016C318);
    sub_1000489C4(&qword_10016C420, &qword_10016C320, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_1000489C4(&qword_10016C428, &qword_10016C430, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C418);
  }
  return result;
}

uint64_t sub_100076590()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_1000765B4(unint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1000752BC(a1, *(void **)(v2 + 40), a2, *(double *)(v2 + 16), *(double *)(v2 + 24), *(double *)(v2 + 32));
}

unint64_t sub_1000765C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C458;
  if (!qword_10016C458)
  {
    v1 = sub_100035D30(&qword_10016C450);
    sub_100076630();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C458);
  }
  return result;
}

unint64_t sub_100076630()
{
  unint64_t result;

  result = qword_10016C460;
  if (!qword_10016C460)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_10016C460);
  }
  return result;
}

uint64_t sub_100076674()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000766A0()
{
  uint64_t v0;

  return sub_1000758F8(*(void **)(v0 + 16), *(void **)(v0 + 48), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

_QWORD *sub_1000766B4@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_100075A50(a1, *(void **)(v2 + 40), a2);
}

unint64_t sub_1000766C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C490;
  if (!qword_10016C490)
  {
    v1 = sub_100037118(255, &qword_10016C478, ASTSuiteResultTest_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10016C490);
  }
  return result;
}

uint64_t sub_10007671C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_10007673C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = 0x4036000000000000;
  a1[1] = v2;
  return v2;
}

unint64_t sub_10007674C()
{
  unint64_t result;

  result = qword_10016C4A0;
  if (!qword_10016C4A0)
  {
    result = swift_getWitnessTable(&unk_10010ED30, &type metadata for SelfServiceSuiteResultsTestView);
    atomic_store(result, (unint64_t *)&qword_10016C4A0);
  }
  return result;
}

uint64_t sub_100076798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4(&qword_10016C3D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for SelfServiceSuiteResultsTestRowView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for SelfServiceSuiteResultsTestRowView(uint64_t a1)
{

}

_QWORD *assignWithCopy for SelfServiceSuiteResultsTestRowView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for SelfServiceSuiteResultsTestRowView(_QWORD *a1, _QWORD *a2)
{
  void *v3;

  *a1 = *a2;
  v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for SelfServiceSuiteResultsTestRowView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelfServiceSuiteResultsTestRowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SelfServiceSuiteResultsTestRowView()
{
  return &type metadata for SelfServiceSuiteResultsTestRowView;
}

uint64_t sub_10007691C()
{
  return sub_1000489C4(&qword_10016C4A8, &qword_10016C4B0, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_100076948(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10011E2DC, 1);
}

uint64_t sub_100076958@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100076988(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1000769B4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_1000769C4(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a4)
  {
    sub_1000769B4(result, a2, a3 & 1);
    swift_bridgeObjectRetain(a4);
    return swift_retain(a5);
  }
  return result;
}

uint64_t sub_100076A00(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if ((~a5 & 0xFF00) != 0)
    return sub_100076AB8(result, a2, a3, a4, a5, HIBYTE(a5) & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076A34, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076A58);
  return result;
}

uint64_t sub_100076A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain(a1);
  return swift_retain(a4);
}

uint64_t sub_100076A58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    swift_retain(result);
    return swift_retain(a4);
  }
  return result;
}

uint64_t sub_100076A84(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if ((~a5 & 0xFF00) != 0)
    return sub_100076AB8(result, a2, a3, a4, a5, HIBYTE(a5) & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076AC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076AEC);
  return result;
}

uint64_t sub_100076AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  if ((a6 & 1) != 0)
    return a8(a1, a2, a3, a4, a5 & 1);
  else
    return a7(a1, a2, a3, a4, a5 & 1);
}

uint64_t sub_100076AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_release(a1);
  return swift_release(a4);
}

uint64_t sub_100076AEC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    swift_release(result);
    return swift_release(a4);
  }
  return result;
}

void sub_100076B18(uint64_t a1, uint64_t a2, char a3, DARootViewController *a4, uint64_t a5)
{
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;

  if (a4)
  {
    sub_100076B54(a1, a2, a3 & 1);
    swift_release(a5);
    swift_bridgeObjectRelease(a4, v7, v8, v9, v10, v11, v12, v13);
  }
}

uint64_t sub_100076B54(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_100076B64()
{
  return sub_1000489C4(&qword_10016C4B8, &qword_10016C4C0, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

unint64_t sub_100076BA4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100078D74(*a1);
  *a2 = result;
  return result;
}

void sub_100076BCC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_100076BD8()
{
  id v0;
  id v1;
  double v2;
  double v3;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  v2 = 15.0;
  if (v1 == (id)1)
  {
    sub_10007AB28();
    v2 = v3 / 6.0;
  }
  qword_10016C4C8 = *(_QWORD *)&v2;
}

id sub_100076DCC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  char *v11;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  NSString v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  NSString v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  NSString v41;
  id v42;
  void *v43;
  id v44;
  void *v46;
  id v47;
  id v48;
  id v49;
  uint64_t v52;
  char *v53;
  objc_super v54;

  v16 = OBJC_IVAR____TtC11Diagnostics10PromptView_promptStackView;
  v17 = objc_allocWithZone((Class)UIStackView);
  v18 = v11;
  v52 = v16;
  v53 = v11;
  *(_QWORD *)&v11[v16] = objc_msgSend(v17, "init");
  v19 = OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel] = 0;
  v20 = OBJC_IVAR____TtC11Diagnostics10PromptView_subtitleLabel;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_subtitleLabel] = 0;
  v21 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView;
  *(_QWORD *)&v18[v21] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v22 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView;
  *(_QWORD *)&v18[v22] = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "init");
  v23 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView;
  *(_QWORD *)&v18[v23] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  v24 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView;
  *(_QWORD *)&v18[v24] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v25 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel] = 0;
  v26 = &v18[OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v18[OBJC_IVAR____TtC11Diagnostics10PromptView_hasExplicitHeight] = 0;
  if (a3)
  {
    v27 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v28 = *(void **)&v18[v19];
    *(_QWORD *)&v18[v19] = v27;

    v29 = *(void **)&v18[v19];
    if (!v29)
    {
      swift_bridgeObjectRelease(a3);
      if (!a5)
        goto LABEL_10;
      goto LABEL_5;
    }
    v30 = v29;
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
    objc_msgSend(v30, "setText:", v31);

  }
  if (!a5)
    goto LABEL_10;
LABEL_5:
  v32 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v33 = *(void **)&v18[v20];
  *(_QWORD *)&v18[v20] = v32;

  v34 = *(void **)&v18[v20];
  if (v34)
  {
    v35 = v34;
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5);
    objc_msgSend(v35, "setText:", v36);

  }
  else
  {
    swift_bridgeObjectRelease(a5);
  }
LABEL_10:
  if (a7)
  {
    v37 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v38 = *(void **)&v18[v25];
    *(_QWORD *)&v18[v25] = v37;

    v39 = *(void **)&v18[v25];
    if (v39)
    {
      v40 = v39;
      v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a7);
      objc_msgSend(v40, "setText:", v41);

    }
    else
    {
      swift_bridgeObjectRelease(a7);
    }
  }
  if (!a8)
    goto LABEL_19;
  if (!*(_QWORD *)(a8 + 16))
  {
    swift_bridgeObjectRelease(a8);
LABEL_19:
    *(_QWORD *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_actions] = _swiftEmptyArrayStorage;
    *(_QWORD *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView] = 0;
    goto LABEL_20;
  }
  *(_QWORD *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_actions] = a8;
  v42 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v43 = v42;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView] = v42;
  if ((a10 & 1) != 0)
  {
    if (v42)
    {
      v46 = (void *)objc_opt_self(UIApplication);
      v47 = v43;
      v48 = objc_msgSend(v46, "sharedApplication");
      v49 = objc_msgSend(v48, "preferredContentSizeCategory");

      LOBYTE(v48) = UIContentSizeCategory.isAccessibilityCategory.getter(v49);
      objc_msgSend(v47, "setAxis:", v48 & 1);

    }
  }
  else
  {
    objc_msgSend(v42, "setAxis:", a9);
  }
LABEL_20:
  v18[OBJC_IVAR____TtC11Diagnostics10PromptView_type] = a11;
  v44 = *(id *)&v53[v52];
  objc_msgSend(v44, "setSpacing:", a1);

  v54.receiver = v18;
  v54.super_class = (Class)type metadata accessor for PromptView();
  return objc_msgSendSuper2(&v54, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
}

void sub_100077210()
{
  uint64_t v0;
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  double v39;
  id v40;

  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  sub_10007AB28();
  v4 = v3;
  if (v2 == (id)1)
  {
    sub_10007AB28();
    v6 = v5 / -3.0;
  }
  else
  {
    v6 = -30.0;
  }
  v7 = v4 + v6;
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_promptStackView);
  objc_msgSend(v8, "setAxis:", 1);
  objc_msgSend(v8, "setDistribution:", 3);
  objc_msgSend(v8, "setAlignment:", 3);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel);
  if (v9)
  {
    v10 = (void *)objc_opt_self(UIFontMetrics);
    v11 = v9;
    v12 = objc_msgSend(v10, "defaultMetrics");
    v13 = objc_msgSend((id)objc_opt_self(UIFont), "boldSystemFontOfSize:", 20.0);
    v14 = objc_msgSend(v12, "scaledFontForFont:", v13);

    objc_msgSend(v11, "setFont:", v14);
    objc_msgSend(v11, "setTextAlignment:", 1);
    objc_msgSend(v11, "setNumberOfLines:", 0);
    objc_msgSend(v11, "setPreferredMaxLayoutWidth:", v7);
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    objc_msgSend(v11, "setTextColor:", v15);

    objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  }
  v16 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_subtitleLabel);
  if (v16)
  {
    v17 = (void *)objc_opt_self(UIFontMetrics);
    v18 = v16;
    v19 = objc_msgSend(v17, "defaultMetrics");
    v20 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 16.0);
    v21 = objc_msgSend(v19, "scaledFontForFont:", v20);

    objc_msgSend(v18, "setFont:", v21);
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    objc_msgSend(v18, "setTextColor:", v22);

    objc_msgSend(v18, "setTextAlignment:", 1);
    objc_msgSend(v18, "setNumberOfLines:", 0);
    objc_msgSend(v18, "setPreferredMaxLayoutWidth:", v7);
    objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  }
  v23 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView), "setAxis:", 1);
  objc_msgSend(*(id *)(v0 + v23), "setDistribution:", 4);
  objc_msgSend(*(id *)(v0 + v23), "setAlignment:", 3);
  objc_msgSend(*(id *)(v0 + v23), "setSpacing:", 8.0);
  objc_msgSend(*(id *)(v0 + v23), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v24 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView), "setAxis:", 0);
  objc_msgSend(*(id *)(v0 + v24), "setDistribution:", 4);
  objc_msgSend(*(id *)(v0 + v24), "setAlignment:", 3);
  objc_msgSend(*(id *)(v0 + v24), "setSpacing:", 8.0);
  objc_msgSend(*(id *)(v0 + v24), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v25 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView);
  v26 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.478431373, 1.0, 1.0);
  objc_msgSend(v25, "setTintColor:", v26);

  v27 = (void *)objc_opt_self(UIColor);
  v28 = objc_msgSend(v27, "opaqueSeparatorColor");
  objc_msgSend(v25, "setTrackTintColor:", v28);

  objc_msgSend(v25, "setAlpha:", 0.0);
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v29 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel);
  if (v29)
  {
    v30 = (void *)objc_opt_self(UIFontMetrics);
    v31 = v29;
    v32 = objc_msgSend(v30, "defaultMetrics");
    v33 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 16.0);
    v34 = objc_msgSend(v32, "scaledFontForFont:", v33);

    objc_msgSend(v31, "setFont:", v34);
    objc_msgSend(v31, "setTextAlignment:", 1);
    objc_msgSend(v31, "setNumberOfLines:", 0);
    objc_msgSend(v31, "setPreferredMaxLayoutWidth:", v7);
    objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  }
  v35 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView);
  objc_msgSend(v35, "setHidesWhenStopped:", 0);
  v36 = objc_msgSend(v27, "labelColor");
  objc_msgSend(v35, "setColor:", v36);

  objc_msgSend(v35, "startAnimating");
  objc_msgSend(v35, "setAlpha:", 0.0);
  objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v37 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView);
  if (v37)
  {
    v40 = v37;
    objc_msgSend(v40, "setDistribution:", 3);
    objc_msgSend(v40, "setAlignment:", 3);
    v38 = objc_msgSend(v40, "axis");
    v39 = 50.0;
    if (v38)
      v39 = 10.0;
    objc_msgSend(v40, "setSpacing:", v39);
    objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  }
}

void sub_100077948()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  SEL v16;
  id v17;
  int v18;
  id v19;
  id v20;
  id v21;
  id v22;
  const char *v23;
  void *v24;
  int v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  DARootViewController *v30;
  void *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  DARootViewController *v38;
  id v39;
  id v40;
  __int128 v41;
  void *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_promptStackView];
  objc_msgSend(v0, "addSubview:", v1);
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel])
    objc_msgSend(v1, "addArrangedSubview:");
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_subtitleLabel])
    objc_msgSend(v1, "addArrangedSubview:");
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel];
  if (v2)
  {
    v3 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView;
    v4 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView];
    v5 = v2;
    objc_msgSend(v4, "addArrangedSubview:", v5);
    v6 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView], "addArrangedSubview:", *(_QWORD *)&v0[v3]);
    objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)&v0[v6]);

  }
  v7 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView];
  if (v7)
  {
    v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_actions];
    v9 = *(_QWORD *)(v8 + 16);
    v40 = *(id *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView];
    if (v9)
    {
      v39 = v1;
      v10 = v7;
      swift_bridgeObjectRetain(v8);
      v38 = (DARootViewController *)v8;
      v11 = v8 + 40;
      do
      {
        v30 = *(DARootViewController **)v11;
        v31 = *(void **)(v11 + 8);
        v32 = *(unsigned __int8 *)(v11 + 16);
        v33 = *(_QWORD *)(v11 + 24);
        v34 = *(_QWORD *)(v11 + 32);
        *(_QWORD *)&v41 = *(_QWORD *)(v11 - 8);
        *((_QWORD *)&v41 + 1) = v30;
        v42 = v31;
        v43 = v32;
        v44 = v33;
        v45 = v34;
        if (v32 == 7)
        {
          v12 = objc_allocWithZone((Class)type metadata accessor for TextButton());
          swift_bridgeObjectRetain(v30);
          v13 = v31;
          swift_retain(v34);
          v14 = sub_10004FC8C(&v41);
        }
        else
        {
          v35 = objc_allocWithZone((Class)type metadata accessor for GlyphButton());
          swift_bridgeObjectRetain(v30);
          v36 = v31;
          swift_retain(v34);
          v14 = sub_100064AA4(&v41);
        }
        v15 = v14;
        objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        objc_msgSend(v15, "setClipsToBounds:", 0);
        objc_msgSend(v10, "addArrangedSubview:", v15);
        swift_release(v34);

        swift_bridgeObjectRelease(v30, v16, v17, v18, v19, v20, v21, v22);
        v11 += 48;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease(v38, v23, v24, v25, v26, v27, v28, v29);
      v1 = v39;
    }
    else
    {
      v37 = v40;
    }
    objc_msgSend(v1, "addArrangedSubview:", v40);

  }
}

void sub_100077BC0()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  SEL v20;
  id v21;
  int v22;
  id v23;
  id v24;
  id v25;
  id v26;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10010BF30;
  v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics10PromptView_promptStackView];
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "bottomAnchor");
  v10 = objc_msgSend(v1, "bottomAnchor");
  objc_msgSend(v5, "spacing");
  v12 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -v11);

  *(_QWORD *)(v4 + 40) = v12;
  v13 = objc_msgSend(v5, "leadingAnchor");
  v14 = objc_msgSend(v1, "leadingAnchor");
  if (qword_10016A660 != -1)
    swift_once(&qword_10016A660, sub_100076BD8);
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, *(double *)&qword_10016C4C8);

  *(_QWORD *)(v4 + 48) = v15;
  v16 = objc_msgSend(v5, "trailingAnchor");
  v17 = objc_msgSend(v1, "trailingAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, -*(double *)&qword_10016C4C8);

  *(_QWORD *)(v4 + 56) = v18;
  specialized Array._endMutation()(v19);
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v4, v20, v21, v22, v23, v24, v25, v26);
  objc_msgSend(v2, "activateConstraints:", isa);

}

double sub_100077E64(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  double result;

  v5 = v4;
  v8 = *(void **)(v5 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel);
  if (a2)
  {
    if (!v8)
      goto LABEL_8;
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setText:", v10);

    if (!a3)
      goto LABEL_8;
  }
  else
  {
    v11 = v8;
    if (!a3)
      goto LABEL_8;
  }
  if (v8)
  {
    v12 = (void *)objc_opt_self(UIFontMetrics);
    v13 = a3;
    v14 = objc_msgSend(v12, "defaultMetrics");
    v15 = objc_msgSend(v14, "scaledFontForFont:", v13);

    objc_msgSend(v8, "setFont:", v15);
  }
LABEL_8:
  v16 = *(void (**)(uint64_t))(v5 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler);
  if (v16)
  {
    v17 = *(_QWORD *)(v5 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler + 8);
    v18 = swift_retain(v17);
    v16(v18);
    sub_100035D74((uint64_t)v16, v17);
  }

  if ((a4 & 0x100000000) != 0)
  {
    sub_100078398();
    sub_10007884C();
  }
  else if (*(float *)&a4 < 0.0 || *(float *)&a4 > 1.0)
  {
    sub_10007884C();
    return sub_10007828C();
  }
  else
  {
    sub_100078398();
    sub_1000784A8(*(float *)&a4);
  }
  return result;
}

void sub_10007801C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSString v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  uint64_t v23;
  id v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel);
  if (a2)
  {
    if (v4)
    {
      v5 = v4;
      v6 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "setText:", v6);

    }
  }
  else
  {
    if (v4)
      objc_msgSend(v4, "removeFromSuperview");
    v7 = *(void (**)(uint64_t))(v2 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler);
    if (v7)
    {
      v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler + 8);
      v9 = swift_retain(v8);
      v7(v9);
      sub_100035D74((uint64_t)v7, v8);
    }
  }
  v10 = *(void **)(v3 + OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView);
  if (v10)
  {
    v11 = objc_msgSend(v10, "subviews");
    v12 = sub_100037118(0, (unint64_t *)&qword_10016D860, UIView_ptr);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v21 = v13;
      else
        v21 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(v13);
      if (v14)
      {
LABEL_11:
        if (v14 < 1)
        {
          __break(1u);
        }
        else
        {
          for (i = 0; i != v14; ++i)
          {
            if ((v13 & 0xC000000000000001) != 0)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
            else
              v16 = *(id *)(v13 + 8 * i + 32);
            v24 = v16;
            v17 = v16;
            v18 = sub_100035CA4(&qword_10016C568);
            if ((swift_dynamicCast(v22, &v24, v12, v18, 6) & 1) != 0)
            {
              sub_100078EBC(v22, (uint64_t)v25);
              v19 = v26;
              v20 = v27;
              sub_10003CEC8(v25, v26);
              (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);

              sub_10003CEEC(v25);
            }
            else
            {
              v23 = 0;
              memset(v22, 0, sizeof(v22));

              sub_100078E7C((uint64_t)v22);
            }
          }
          swift_bridgeObjectRelease(v13);
        }
        return;
      }
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v14)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease(v13);
  }
}

double sub_10007828C()
{
  char *v0;
  double result;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[5];
  uint64_t v8;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView], "alpha");
  if (result == 0.0)
  {
    v2 = swift_allocObject(&unk_100138830, 24, 7);
    *(_QWORD *)(v2 + 16) = v0;
    v3 = (void *)objc_opt_self(UIView);
    v7[4] = sub_100078E24;
    v8 = v2;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_100030658;
    v7[3] = &unk_100138848;
    v4 = _Block_copy(v7);
    v5 = v8;
    v6 = v0;
    swift_retain(v2);
    swift_release(v5);
    objc_msgSend(v3, "animateWithDuration:delay:options:animations:completion:", 0x10000, v4, 0, 0.375, 0.0);
    _Block_release(v4);
    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  return result;
}

double sub_100078398()
{
  char *v0;
  double result;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[5];
  uint64_t v8;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView], "alpha");
  if (result == 1.0)
  {
    v2 = swift_allocObject(&unk_1001387E0, 24, 7);
    *(_QWORD *)(v2 + 16) = v0;
    v3 = (void *)objc_opt_self(UIView);
    v7[4] = sub_100078DD4;
    v8 = v2;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_100030658;
    v7[3] = &unk_1001387F8;
    v4 = _Block_copy(v7);
    v5 = v8;
    v6 = v0;
    swift_retain(v2);
    swift_release(v5);
    objc_msgSend(v3, "animateWithDuration:delay:options:animations:completion:", 0x20000, v4, 0, 0.125, 0.0);
    _Block_release(v4);
    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  return result;
}

void sub_1000784A8(float a1)
{
  char *v1;
  void *v3;
  double v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;

  v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView];
  objc_msgSend(v3, "alpha");
  if (v4 == 0.0)
  {
    *(float *)&v4 = a1;
    objc_msgSend(v3, "setProgress:animated:", 0, v4);
    v5 = swift_allocObject(&unk_100138790, 24, 7);
    *(_QWORD *)(v5 + 16) = v1;
    v6 = (void *)objc_opt_self(UIView);
    v13[4] = sub_100078DCC;
    v14 = v5;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_100030658;
    v13[3] = &unk_1001387A8;
    v7 = _Block_copy(v13);
    v8 = v14;
    v9 = v1;
    swift_retain(v5);
    swift_release(v8);
    objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 0x10000, v7, 0, 0.375, 0.0);
    _Block_release(v7);
    swift_release(v5);
    v10 = *(void (**)(uint64_t))&v9[OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler];
    if (v10)
    {
      v11 = *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler + 8];
      v12 = swift_retain(v11);
      v10(v12);
      sub_100035D74((uint64_t)v10, v11);
    }
  }
  else
  {
    *(float *)&v4 = a1;
    objc_msgSend(v3, "setProgress:animated:", 1, v4);
  }
}

id sub_100078634(char *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  DARootViewController *v13;
  Class isa;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v2 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView];
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView], "insertArrangedSubview:atIndex:", v2, 0);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10010C080;
  v6 = objc_msgSend(v2, "leadingAnchor");
  v7 = objc_msgSend(a1, "leadingAnchor");
  if (qword_10016A660 != -1)
    swift_once(&qword_10016A660, sub_100076BD8);
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, *(double *)&qword_10016C4C8 + 25.0);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v2, "trailingAnchor");
  v10 = objc_msgSend(a1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -(*(double *)&qword_10016C4C8 + 25.0));

  *(_QWORD *)(v5 + 40) = v11;
  specialized Array._endMutation()(v12);
  v13 = (DARootViewController *)v5;
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
  objc_msgSend(v3, "activateConstraints:", isa);

  return objc_msgSend(v2, "setAlpha:", 1.0);
}

void sub_10007884C()
{
  char *v0;
  double v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView], "alpha");
  if (v1 == 1.0)
  {
    v2 = swift_allocObject(&unk_100138740, 24, 7);
    *(_QWORD *)(v2 + 16) = v0;
    v3 = (void *)objc_opt_self(UIView);
    v10[4] = sub_100078DA8;
    v11 = v2;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_100030658;
    v10[3] = &unk_100138758;
    v4 = _Block_copy(v10);
    v5 = v11;
    v6 = v0;
    swift_retain(v2);
    swift_release(v5);
    objc_msgSend(v3, "animateWithDuration:delay:options:animations:completion:", 0x20000, v4, 0, 0.125, 0.0);
    _Block_release(v4);
    swift_release(v2);
    v7 = *(void (**)(uint64_t))&v6[OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler];
    if (v7)
    {
      v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler + 8];
      v9 = swift_retain(v8);
      v7(v9);
      sub_100035D74((uint64_t)v7, v8);
    }
  }
}

void sub_1000789BC()
{
  uint64_t v0;
  SEL v1;
  id v2;
  int v3;
  id v4;
  id v5;
  id v6;
  id v7;

  sub_100035D74(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler + 8));
  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_actions), v1, v2, v3, v4, v5, v6, v7);
}

id sub_100078A7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PromptView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PromptView()
{
  return objc_opt_self(_TtC11Diagnostics10PromptView);
}

uint64_t getEnumTagSinglePayload for PromptView.PromptType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptView.PromptType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100078C74 + 4 * byte_10010D4DD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100078CA8 + 4 * byte_10010D4D8[v4]))();
}

uint64_t sub_100078CA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100078CB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100078CB8);
  return result;
}

uint64_t sub_100078CC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100078CCCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100078CD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100078CD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromptView.PromptType()
{
  return &type metadata for PromptView.PromptType;
}

unint64_t sub_100078CF8()
{
  unint64_t result;

  result = qword_10016C560;
  if (!qword_10016C560)
  {
    result = swift_getWitnessTable(&unk_10010D57C, &type metadata for PromptView.PromptType);
    atomic_store(result, (unint64_t *)&qword_10016C560);
  }
  return result;
}

uint64_t sub_100078D3C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_hasExplicitHeight);
}

uint64_t sub_100078D50(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler);
  v4 = *v3;
  v5 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  return sub_100035D74(v4, v5);
}

unint64_t sub_100078D74(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t sub_100078D84()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100078DA8()
{
  return sub_100078DE0(&OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView);
}

uint64_t sub_100078DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100078DC4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100078DCC()
{
  uint64_t v0;

  return sub_100078634(*(char **)(v0 + 16));
}

id sub_100078DD4()
{
  return sub_100078DE0(&OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView);
}

id sub_100078DE0(_QWORD *a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)(v1 + 16) + *a1);
  objc_msgSend(v2, "removeFromSuperview");
  return objc_msgSend(v2, "setAlpha:", 0.0);
}

id sub_100078E24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView), "insertArrangedSubview:atIndex:", v2, 0);
  return objc_msgSend(v2, "setAlpha:", 1.0);
}

uint64_t sub_100078E7C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100035CA4(&qword_10016C570);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100078EBC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_100078ED4()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = OBJC_IVAR____TtC11Diagnostics10PromptView_promptStackView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_subtitleLabel] = 0;
  v2 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v3 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "init");
  v4 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  v5 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel] = 0;
  v6 = &v0[OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler];
  *v6 = 0;
  v6[1] = 0;
  v0[OBJC_IVAR____TtC11Diagnostics10PromptView_hasExplicitHeight] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100112360, "Diagnostics/PromptView.swift", 28, 2, 113, 0);
  __break(1u);
}

uint64_t sub_100079050()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  __CFString *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  DARootViewController *aBlock;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  result = __chkstk_darwin(v5);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState];
  if (v10)
  {
    v46 = v7;
    v47 = result;
    v48 = v4;
    v49 = v2;
    v50 = v1;
    swift_retain(v10);
    sub_100079EF4();
    v11 = (void *)objc_opt_self(NSNotificationCenter);
    v12 = objc_msgSend(v11, "defaultCenter");
    if (qword_10016A630 != -1)
      swift_once(&qword_10016A630, sub_1000502E0);
    v13 = qword_100172338;
    v14 = (void *)objc_opt_self(NSOperationQueue);
    swift_retain(v10);
    v15 = objc_msgSend(v14, "mainQueue");
    v16 = swift_allocObject(&unk_100138900, 24, 7);
    *(_QWORD *)(v16 + 16) = v0;
    v55 = sub_10007AACC;
    v56 = v16;
    aBlock = (DARootViewController *)_NSConcreteStackBlock;
    v52 = 1107296256;
    v53 = sub_100048DB4;
    v54 = &unk_100138918;
    v17 = _Block_copy(&aBlock);
    v18 = v56;
    v19 = v0;
    v20 = objc_msgSend(v12, "addObserverForName:object:queue:usingBlock:", v13, v10, v15, v17, swift_release(v18).n128_f64[0]);
    _Block_release(v17);

    swift_release(v10);
    v21 = *(_QWORD *)&v19[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardStateNotificationToken];
    *(_QWORD *)&v19[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardStateNotificationToken] = v20;
    swift_unknownObjectRelease(v21);
    v22 = objc_msgSend(v11, "defaultCenter");
    v23 = *(void **)(v10 + 40);
    v24 = CFSTR("com.apple.Diagnostics.deviceStateChangedNotification");
    v25 = v23;
    v26 = objc_msgSend(v14, "mainQueue");
    v27 = swift_allocObject(&unk_100138950, 24, 7);
    *(_QWORD *)(v27 + 16) = v19;
    v55 = sub_10007AAEC;
    v56 = v27;
    aBlock = (DARootViewController *)_NSConcreteStackBlock;
    v52 = 1107296256;
    v53 = sub_100048DB4;
    v54 = &unk_100138968;
    v28 = _Block_copy(&aBlock);
    v29 = v56;
    v30 = v19;
    v31 = objc_msgSend(v22, "addObserverForName:object:queue:usingBlock:", v24, v25, v26, v28, swift_release(v29).n128_f64[0]);
    _Block_release(v28);

    v32 = *(_QWORD *)&v30[OBJC_IVAR____TtC11Diagnostics12CardViewCell_deviceStateNotificationToken];
    *(_QWORD *)&v30[OBJC_IVAR____TtC11Diagnostics12CardViewCell_deviceStateNotificationToken] = v31;
    swift_unknownObjectRelease(v32);
    v33 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
    v34 = (void *)static OS_dispatch_queue.main.getter(v33);
    v35 = swift_allocObject(&unk_1001389A0, 32, 7);
    *(_QWORD *)(v35 + 16) = v30;
    *(_QWORD *)(v35 + 24) = v10;
    v55 = sub_10007AB20;
    v56 = v35;
    aBlock = (DARootViewController *)_NSConcreteStackBlock;
    v52 = 1107296256;
    v53 = sub_100030658;
    v54 = &unk_1001389B8;
    v36 = _Block_copy(&aBlock);
    v37 = v56;
    swift_retain(v10);
    v38 = v30;
    v39 = swift_release(v37);
    static DispatchQoS.unspecified.getter(v39);
    aBlock = &_swiftEmptyArrayStorage;
    v40 = sub_10002F158((unint64_t *)&qword_10016B5F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v41 = sub_100035CA4((uint64_t *)&unk_10016AD10);
    v42 = sub_100035CE4();
    v43 = v48;
    v44 = v50;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v41, v42, v50, v40);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v43, v36);
    _Block_release(v36);
    swift_release(v10);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v44);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v9, v47);
  }
  return result;
}

uint64_t sub_1000794E8(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  const char *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  unsigned __int8 v15;
  _QWORD v16[2];
  _BYTE v17[40];
  __int128 v18;
  __int128 v19;

  result = Notification.userInfo.getter(a1);
  if (result)
  {
    v4 = result;
    strcpy((char *)v16, "changeInfoKey");
    HIWORD(v16[1]) = -4864;
    AnyHashable.init<A>(_:)(v16, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v4 + 16) && (v12 = sub_100072B10((uint64_t)v17), (v5 & 1) != 0))
    {
      sub_1000370B0(*(_QWORD *)(v4 + 56) + 32 * v12, (uint64_t)&v18);
    }
    else
    {
      v18 = 0u;
      v19 = 0u;
    }
    swift_bridgeObjectRelease((DARootViewController *)v4, v5, v6, v7, v8, v9, v10, v11);
    sub_100036FDC((uint64_t)v17);
    if (*((_QWORD *)&v19 + 1))
    {
      result = swift_dynamicCast(v16, &v18, (char *)&type metadata for Any + 8, &type metadata for CardState.ChangedPropertyNotificationInfo, 6);
      if ((result & 1) != 0)
      {
        v13 = v16[0];
        v14 = v16[1];
        if ((v16[1] & 0x20) != 0)
        {
          v15 = *(_BYTE *)(v16[0] + 32);
          swift_retain(v16[0]);
          sub_10007A364(v15);
        }
        else
        {
          swift_retain(v16[0]);
        }
        if ((v14 & 8) != 0)
          (*(void (**)(uint64_t))((swift_isaMask & *a2) + 0x178))(v13);
        if ((v14 & 0x10) != 0)
          (*(void (**)(_QWORD))((swift_isaMask & *a2) + 0x180))(*(_QWORD *)(v13 + 24));
        return swift_release_n(v13, 2);
      }
    }
    else
    {
      return sub_100036FA0((uint64_t)&v18, (uint64_t *)&unk_10016B610);
    }
  }
  return result;
}

void sub_100079670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  const char *v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14[2];
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;

  v1 = Notification.userInfo.getter(a1);
  if (v1)
  {
    v2 = v1;
    v14[0] = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("info"));
    v14[1] = v3;
    AnyHashable.init<A>(_:)(v14, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v2 + 16) && (v11 = sub_100072B10((uint64_t)v15), (v4 & 1) != 0))
    {
      sub_1000370B0(*(_QWORD *)(v2 + 56) + 32 * v11, (uint64_t)&v16);
    }
    else
    {
      v16 = 0u;
      v17 = 0u;
    }
    swift_bridgeObjectRelease((DARootViewController *)v2, v4, v5, v6, v7, v8, v9, v10);
    sub_100036FDC((uint64_t)v15);
    if (*((_QWORD *)&v17 + 1))
    {
      v12 = sub_100037118(0, &qword_10016BA10, off_100131A98);
      if ((swift_dynamicCast(v14, &v16, (char *)&type metadata for Any + 8, v12, 6) & 1) != 0)
      {
        v13 = v14[0];
        sub_10007A184(v14[0]);

      }
    }
    else
    {
      sub_100036FA0((uint64_t)&v16, (uint64_t *)&unk_10016B610);
    }
  }
}

uint64_t sub_100079788(_QWORD *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  DARootViewController *v8;
  DARootViewController *v9;
  SEL v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t result;

  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x170))(a2);
  v4 = *(void **)(a2 + 40);
  v5 = objc_msgSend(v4, "suiteName");
  if (v5)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  (*(void (**)(uint64_t, DARootViewController *))((swift_isaMask & *a1) + 0x198))(v7, v9);
  swift_bridgeObjectRelease(v9, v10, v11, v12, v13, v14, v15, v16);
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x178))(a2);
  (*(void (**)(_QWORD))((swift_isaMask & *a1) + 0x180))(*(_QWORD *)(a2 + 24));
  v17 = objc_msgSend(v4, "progress");
  (*(void (**)(void))((swift_isaMask & *a1) + 0x188))();

  v18 = objc_msgSend(v4, "durationRemaining");
  (*(void (**)(id))((swift_isaMask & *a1) + 0x190))(v18);
  v19 = objc_msgSend(v4, "sessionSettings");
  (*(void (**)(void))((swift_isaMask & *a1) + 0x1A0))();

  sub_10007A364(*(_BYTE *)(a2 + 32));
  result = (*(uint64_t (**)(void *))((swift_isaMask & *a1) + 0x1A8))(v4);
  *((_BYTE *)a1 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_pauseStateAnimation) = 0;
  return result;
}

id sub_10007992C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  objc_msgSend(v1, "setBackgroundColor:", v2);

  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setCornerRadius:", 12.0);

  objc_msgSend(v1, "setClipsToBounds:", 0);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView);
  objc_msgSend(v4, "setAxis:", 1);
  objc_msgSend(v4, "setDistribution:", 0);
  objc_msgSend(v4, "setAlignment:", 0);
  return objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
}

void sub_100079A40()
{
  char *v0;
  void *v1;
  id v2;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer];
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView]);
  v2 = objc_msgSend(v0, "contentView");
  objc_msgSend(v2, "addSubview:", v1);

}

void sub_100079ABC()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  SEL v33;
  id v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  Class isa;

  v41 = *(id *)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView];
  v1 = objc_msgSend(v41, "bottomAnchor");
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer];
  v3 = objc_msgSend(v2, "bottomAnchor");
  v4 = objc_msgSend(v1, "constraintEqualToAnchor:", v3);

  LODWORD(v5) = 1148829696;
  objc_msgSend(v4, "setPriority:", v5);
  v40 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v7 = swift_allocObject(v6, 96, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10010CED0;
  v8 = objc_msgSend(v2, "centerXAnchor");
  v9 = objc_msgSend(v0, "contentView");
  v10 = objc_msgSend(v9, "centerXAnchor");

  v11 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);
  *(_QWORD *)(v7 + 32) = v11;
  v12 = objc_msgSend(v2, "topAnchor");
  v13 = objc_msgSend(v0, "contentView");
  v14 = objc_msgSend(v13, "topAnchor");

  v15 = objc_msgSend(v12, "constraintEqualToAnchor:", v14);
  *(_QWORD *)(v7 + 40) = v15;
  v16 = objc_msgSend(v2, "bottomAnchor");
  v17 = objc_msgSend(v0, "contentView");
  v18 = objc_msgSend(v17, "bottomAnchor");

  v19 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v18, -12.0);
  *(_QWORD *)(v7 + 48) = v19;
  v20 = objc_msgSend(v2, "widthAnchor");
  sub_10007AB28();
  v21 = objc_msgSend(v20, "constraintEqualToConstant:");

  *(_QWORD *)(v7 + 56) = v21;
  v22 = objc_msgSend(v41, "topAnchor");
  v23 = objc_msgSend(v2, "topAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v7 + 64) = v24;
  *(_QWORD *)(v7 + 72) = v4;
  v25 = v4;
  v26 = objc_msgSend(v41, "leadingAnchor");
  v27 = objc_msgSend(v2, "leadingAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v7 + 80) = v28;
  v29 = objc_msgSend(v41, "trailingAnchor");
  v30 = objc_msgSend(v2, "trailingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v7 + 88) = v31;
  specialized Array._endMutation()(v32);
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v7, v33, v34, v35, v36, v37, v38, v39);
  objc_msgSend(v40, "activateConstraints:", isa);

}

void sub_100079EF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardStateNotificationToken);
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:", v1);
    swift_unknownObjectRelease(v1);

  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_deviceStateNotificationToken);
  if (v4)
  {
    v5 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v4);
    v6 = objc_msgSend(v5, "defaultCenter");
    objc_msgSend(v6, "removeObserver:", v4);
    swift_unknownObjectRelease(v4);

  }
}

double sub_100079FF0()
{
  uint64_t v0;
  double result;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_deviceStateNotificationToken));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardStateNotificationToken));

  sub_100036FA0(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_controller, (uint64_t *)&unk_10016D850);
  sub_100035D74(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_layoutUpdateHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_layoutUpdateHandler + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState)).n128_u64[0];
  return result;
}

id sub_10007A078()
{
  void *v0;
  objc_super v2;

  sub_100079EF4();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10007A184(void *a1)
{
  _QWORD *v1;
  unsigned __int16 v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  v3 = (unsigned __int16)objc_msgSend(a1, "changedProperties");
  v13 = objc_msgSend(a1, "snapshot");
  if (objc_msgSend(v13, "phase") && objc_msgSend(v13, "phase") != (id)1)
  {
    v4 = objc_msgSend(v13, "progress");
    (*(void (**)(void))((swift_isaMask & *v1) + 0x188))();

  }
  if ((v3 & 0x100) != 0)
  {
    v6 = objc_msgSend(v13, "durationRemaining");
    (*(void (**)(id))((swift_isaMask & *v1) + 0x190))(v6);
    v5 = v13;
    if ((v3 & 2) == 0)
    {
LABEL_6:
      if ((v3 & 0x10) == 0)
        goto LABEL_7;
LABEL_15:
      v12 = objc_msgSend(v13, "sessionSettings");
      (*(void (**)(void))((swift_isaMask & *v1) + 0x1A0))();

      v5 = v13;
      if ((v3 & 0x40) == 0)
        goto LABEL_9;
      goto LABEL_8;
    }
  }
  else
  {
    v5 = v13;
    if ((v3 & 2) == 0)
      goto LABEL_6;
  }
  v7 = objc_msgSend(v5, "suiteName");
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v1) + 0x198))(v9, v11);
  swift_bridgeObjectRelease(v11);
  v5 = v13;
  if ((v3 & 0x10) != 0)
    goto LABEL_15;
LABEL_7:
  if ((v3 & 0x40) != 0)
  {
LABEL_8:
    (*(void (**)(id))((swift_isaMask & *v1) + 0x1A8))(v13);
    v5 = v13;
  }
LABEL_9:

}

uint64_t sub_10007A364(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_10007A380 + 4 * byte_10010D5B8[a1]))();
}

uint64_t sub_10007A380()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1B0))();
}

uint64_t sub_10007A39C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1B8))();
}

uint64_t sub_10007A3B8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1C0))();
}

uint64_t sub_10007A3D4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1C8))();
}

uint64_t sub_10007A3F0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1D0))();
}

uint64_t sub_10007A40C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1D8))();
}

uint64_t sub_10007A428()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1E0))();
}

uint64_t sub_10007A444()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1E8))();
}

uint64_t sub_10007A460()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F0))();
}

uint64_t sub_10007A47C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
}

uint64_t sub_10007A498()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x200))();
}

uint64_t sub_10007A4B4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x208))();
}

uint64_t sub_10007A4D0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x210))();
}

id sub_10007A5A4()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  char **v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  id v14;
  id v15;
  id v16;
  objc_super v18;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer];
  v3 = objc_msgSend(v2, "layer");
  v4 = objc_msgSend(v3, "borderColor");

  v5 = (void *)objc_opt_self(UIColor);
  v6 = &selRef_defaultMetrics;
  v7 = objc_msgSend(v5, "opaqueSeparatorColor");
  v8 = objc_msgSend(v7, "CGColor");

  if (v4)
  {
    if (v8)
    {
      type metadata accessor for CGColor(0);
      v10 = v9;
      v11 = sub_10002F158(&qword_10016C5E8, (uint64_t (*)(uint64_t))type metadata accessor for CGColor, (uint64_t)&unk_10010BBA8);
      v12 = v4;
      v13 = static _CFObject.== infix(_:_:)(v12, v8, v10, v11);

      v6 = &selRef_defaultMetrics;
      if ((v13 & 1) != 0)
        goto LABEL_10;
      goto LABEL_9;
    }
    v8 = v4;
  }
  else if (!v8)
  {
    goto LABEL_10;
  }

LABEL_9:
  v14 = objc_msgSend(v2, "layer");
  v15 = objc_msgSend(v5, v6[67]);
  v16 = objc_msgSend(v15, "CGColor");

  objc_msgSend(v14, "setBorderColor:", v16);
LABEL_10:
  v18.receiver = v1;
  v18.super_class = (Class)type metadata accessor for CardViewCell();
  return objc_msgSendSuper2(&v18, "layoutSubviews");
}

id sub_10007A79C(uint64_t a1, uint64_t a2, DARootViewController *a3)
{
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  NSString v13;
  SEL v14;
  id v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  objc_super v23;

  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics12CardViewCell_spacing] = 0x4024000000000000;
  v3[OBJC_IVAR____TtC11Diagnostics12CardViewCell_pauseStateAnimation] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics12CardViewCell_deviceStateNotificationToken] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardStateNotificationToken] = 0;
  v6 = OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView;
  v7 = type metadata accessor for CardStackView();
  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7));
  v9 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v8, "init");
  v10 = OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v11 = &v9[OBJC_IVAR____TtC11Diagnostics12CardViewCell_controller];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v12 = &v9[OBJC_IVAR____TtC11Diagnostics12CardViewCell_layoutUpdateHandler];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState] = 0;

  if (a3)
  {
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v14, v15, v16, v17, v18, v19, v20);
  }
  else
  {
    v13 = 0;
  }
  v23.receiver = v9;
  v23.super_class = (Class)type metadata accessor for CardViewCell();
  v21 = objc_msgSendSuper2(&v23, "initWithStyle:reuseIdentifier:", a1, v13);

  return v21;
}

id sub_10007A940(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics12CardViewCell_spacing] = 0x4024000000000000;
  v1[OBJC_IVAR____TtC11Diagnostics12CardViewCell_pauseStateAnimation] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics12CardViewCell_deviceStateNotificationToken] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardStateNotificationToken] = 0;
  v3 = OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView;
  v4 = type metadata accessor for CardStackView();
  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4));
  v6 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = &v6[OBJC_IVAR____TtC11Diagnostics12CardViewCell_controller];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  v9 = &v6[OBJC_IVAR____TtC11Diagnostics12CardViewCell_layoutUpdateHandler];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState] = 0;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for CardViewCell();
  v10 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);

  return v10;
}

uint64_t type metadata accessor for CardViewCell()
{
  return objc_opt_self(_TtC11Diagnostics12CardViewCell);
}

uint64_t sub_10007AAA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007AACC(uint64_t a1)
{
  uint64_t v1;

  return sub_1000794E8(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_10007AAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007AAE4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10007AAEC(uint64_t a1)
{
  sub_100079670(a1);
}

uint64_t sub_10007AAF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007AB20()
{
  uint64_t v0;

  return sub_100079788(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10007AB28()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_1000403CC();

  v1 = (void *)objc_opt_self(UIDevice);
  v2 = objc_msgSend(v1, "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3 != (id)1)
  {
    v4 = objc_msgSend(v1, "currentDevice");
    objc_msgSend(v4, "userInterfaceIdiom");

  }
}

id sub_10007AC2C(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  int DeviceClass;
  uint64_t v5;
  const char *v6;
  DARootViewController *v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  Swift::String v14;
  DARootViewController *v15;
  NSString v16;
  void *v17;
  id v18;
  const char *v19;
  void *v20;
  int v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  NSString v26;
  SEL v27;
  id v28;
  int v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  DARootViewController *v35;
  DARootViewController *v36;
  const char *v37;
  DARootViewController *v38;
  id v39;
  int v40;
  id v41;
  id v42;
  id v43;
  id v44;
  NSString v45;
  SEL v46;
  id v47;
  int v48;
  id v49;
  id v50;
  id v51;
  id v52;
  DARootViewController *v53;
  DARootViewController *v54;
  NSString v55;
  SEL v56;
  id v57;
  int v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  objc_super v65;
  uint64_t v66;
  DARootViewController *v67;

  v2 = v1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics37SelfServiceSuiteResultsViewController_entry] = a1;
  v3 = a1;
  _StringGuts.grow(_:)(35);
  DeviceClass = GestaltGetDeviceClass();
  v5 = sub_10009F870(DeviceClass);
  v7 = (DARootViewController *)v6;
  swift_bridgeObjectRelease((DARootViewController *)0xE000000000000000, v6, v8, v9, v10, v11, v12, v13);
  v66 = v5;
  v67 = v7;
  v14._countAndFlagsBits = 0xD000000000000021;
  v14._object = (void *)0x8000000100115D30;
  String.append(_:)(v14);
  v15 = v7;
  v16 = String._bridgeToObjectiveC()();
  v17 = (void *)objc_opt_self(UIImage);
  v18 = objc_msgSend(v17, "_systemImageNamed:", v16);

  if (v18)
  {
    swift_bridgeObjectRelease(v7, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15, v27, v28, v29, v30, v31, v32, v33);
    v18 = objc_msgSend(v17, "imageNamed:", v26);

  }
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v36 = v35;
  sub_10003FFA0(v34, v35, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000015, (void *)0x8000000100115D60);
  v38 = (DARootViewController *)v37;
  swift_bridgeObjectRelease(v36, v37, v39, v40, v41, v42, v43, v44);
  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v38, v46, v47, v48, v49, v50, v51, v52);
  sub_10007B4A4(v3);
  v54 = v53;
  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v54, v56, v57, v58, v59, v60, v61, v62);
  v65.receiver = v2;
  v65.super_class = (Class)type metadata accessor for SelfServiceSuiteResultsViewController();
  v63 = objc_msgSendSuper2(&v65, "initWithTitle:detailText:icon:contentLayout:", v45, v55, v18, 3);

  return v63;
}

void sub_10007AE20()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  char *v4;
  Class isa;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  DARootViewController *v39;
  Class v40;
  SEL v41;
  id v42;
  int v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  _OWORD v49[2];
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  objc_super v54;
  UIAction_optional v55;
  UIMenu_optional v56;

  v54.receiver = v0;
  v54.super_class = (Class)type metadata accessor for SelfServiceSuiteResultsViewController();
  objc_msgSendSuper2(&v54, "viewDidLoad");
  v1 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v1, "setHidesBackButton:", 1);

  v2 = objc_msgSend(v0, "navigationItem");
  sub_100037118(0, &qword_10016C620, UIBarButtonItem_ptr);
  sub_100037118(0, (unint64_t *)&qword_10016DFF0, UIAction_ptr);
  v3 = swift_allocObject(&unk_100138A10, 24, 7);
  *(_QWORD *)(v3 + 16) = v0;
  v4 = v0;
  v55.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10007B608, v3);
  v55.is_nil = 0;
  isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v55, v56).super.super.isa;
  objc_msgSend(v2, "setLeftBarButtonItem:", isa);

  v6 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics37SelfServiceSuiteResultsViewController_entry];
  v7 = objc_msgSend(v6, "results");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v4, "navigationController");
    v10 = objc_msgSend(v6, "testSuiteName");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v49[0] = xmmword_10010C1A0;
    v49[1] = xmmword_10010C1B0;
    v50 = v9;
    v51 = v11;
    v52 = v13;
    v53 = v8;
    v14 = objc_allocWithZone((Class)sub_100035CA4(&qword_10016B048));
    v15 = v8;
    v16 = (void *)UIHostingController.init(rootView:)(v49);
    v17 = objc_msgSend(v16, "view");
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v19 = objc_msgSend(v4, "contentView");
      objc_msgSend(v19, "addSubview:", v18);

      v48 = (id)objc_opt_self(NSLayoutConstraint);
      v20 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
      v21 = swift_allocObject(v20, 64, 7);
      *(_OWORD *)(v21 + 16) = xmmword_10010BF30;
      v22 = objc_msgSend(v18, "leadingAnchor");
      v23 = objc_msgSend(v4, "contentView");
      v24 = objc_msgSend(v23, "leadingAnchor");

      v25 = objc_msgSend(v22, "constraintEqualToAnchor:", v24);
      *(_QWORD *)(v21 + 32) = v25;
      v26 = objc_msgSend(v18, "trailingAnchor");
      v27 = objc_msgSend(v4, "contentView");
      v28 = objc_msgSend(v27, "trailingAnchor");

      v29 = objc_msgSend(v26, "constraintEqualToAnchor:", v28);
      *(_QWORD *)(v21 + 40) = v29;
      v30 = objc_msgSend(v18, "topAnchor");
      v31 = objc_msgSend(v4, "contentView");
      v32 = objc_msgSend(v31, "topAnchor");

      v33 = objc_msgSend(v30, "constraintEqualToAnchor:", v32);
      *(_QWORD *)(v21 + 48) = v33;
      v34 = objc_msgSend(v18, "bottomAnchor");
      v35 = objc_msgSend(v4, "contentView");
      v36 = objc_msgSend(v35, "bottomAnchor");

      v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);
      *(_QWORD *)(v21 + 56) = v37;
      *(_QWORD *)&v49[0] = v21;
      specialized Array._endMutation()(v38);
      v39 = *(DARootViewController **)&v49[0];
      sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
      v40 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v39, v41, v42, v43, v44, v45, v46, v47);
      objc_msgSend(v48, "activateConstraints:", v40);

    }
    else
    {

    }
  }
  else
  {
    objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);
  }
}

void sub_10007B340(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "navigationController");
  if (v2)
  {
    v3 = v2;

  }
}

void sub_10007B434()
{
  uint64_t v0;

}

id sub_10007B444()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceSuiteResultsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SelfServiceSuiteResultsViewController()
{
  return objc_opt_self(_TtC11Diagnostics37SelfServiceSuiteResultsViewController);
}

uint64_t sub_10007B4A4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v12;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v6, "setDateStyle:", 1);
  objc_msgSend(v6, "setTimeStyle:", 1);
  objc_msgSend(v6, "setDoesRelativeDateFormatting:", 1);
  v7 = objc_msgSend(a1, "date");
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = objc_msgSend(v6, "stringFromDate:", isa);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  return v10;
}

uint64_t sub_10007B5E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10007B608(int a1)
{
  uint64_t v1;

  sub_10007B340(a1, *(id *)(v1 + 16));
}

id sub_10007B854()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseTableViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseTableViewController()
{
  return objc_opt_self(_TtC11Diagnostics23BaseTableViewController);
}

void sub_10007B8A4()
{
  uint64_t v0;
  id v1;
  id v2;

  sub_10007992C();
  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "handleLaunchURLWithNotification:", v2, 0);

}

void sub_10007B944()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  SEL v19;
  id v20;
  int v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer];
  v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView];
  objc_msgSend(v2, "addSubview:", v3);
  v4 = objc_msgSend(v1, "contentView");
  objc_msgSend(v4, "addSubview:", v2);

  v26 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v26, "heightAnchor");
  v6 = objc_msgSend(v5, "constraintEqualToConstant:", 20.0);

  objc_msgSend(v6, "setActive:", 1);
  v7 = objc_msgSend(v3, "arrangedSubviews");
  v8 = sub_100037118(0, (unint64_t *)&qword_10016D860, UIView_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v18 = v9;
    else
      v18 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v17 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease((DARootViewController *)v9, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    v17 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((DARootViewController *)v9, v10, v11, v12, v13, v14, v15, v16);
  sub_10008D7DC(v26, v17, 1);

}

void sub_10007BAF0(void *a1)
{
  float v1;
  float v2;
  unsigned int v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  const char *v9;
  DARootViewController *v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  int v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;

  if (a1)
  {
    v24 = a1;
    objc_msgSend(v24, "floatValue");
    if (v1 >= 0.0)
    {
      objc_msgSend(v24, "floatValue");
      *(float *)&v3 = v2 / 100.0;
      v4 = sub_10007E2B8();
      v5 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v6 = swift_allocObject(v5, 72, 7);
      *(_OWORD *)(v6 + 16) = xmmword_10010BE30;
      v7 = objc_msgSend(v24, "integerValue");
      *(_QWORD *)(v6 + 56) = &type metadata for Int;
      *(_QWORD *)(v6 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v6 + 32) = v7;
      v8 = sub_10003FFA0(0, 0, v6, 0xD00000000000002ALL, (void *)0x80000001001162B0);
      v10 = (DARootViewController *)v9;
      swift_bridgeObjectRelease((DARootViewController *)v6, v9, v11, v12, v13, v14, v15, v16);
      sub_100077E64(v8, (uint64_t)v10, 0, v3);

      swift_bridgeObjectRelease(v10, v17, v18, v19, v20, v21, v22, v23);
    }
    else
    {

    }
  }
}

void sub_10007BC4C(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  DARootViewController *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  SEL v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  const char *v52;
  DARootViewController *v53;
  id v54;
  int v55;
  id v56;
  id v57;
  id v58;
  id v59;
  SEL v60;
  id v61;
  int v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  DARootViewController *v70;
  SEL v71;
  id v72;
  int v73;
  id v74;
  id v75;
  id v76;
  id v77;
  char *v78;
  uint64_t v79;
  double v80;
  id v81;
  Class isa;
  NSString v83;
  DARootViewController *v84;
  DARootViewController *v85;
  SEL v86;
  id v87;
  int v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  DARootViewController *v98;
  id v99;
  int v100;
  id v101;
  id v102;
  id v103;
  id v104;
  SEL v105;
  id v106;
  int v107;
  id v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  _QWORD v127[2];

  v2 = type metadata accessor for Date(0);
  v123 = *(_QWORD *)(v2 - 8);
  v124 = v2;
  v3 = __chkstk_darwin(v2);
  v126 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v125 = (char *)&v114 - v5;
  v6 = sub_100035CA4(&qword_10016C6D8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100035CA4(&qword_10016C6E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100035CA4(&qword_10016C6E8);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100035CA4(&qword_10016C6F0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100035CA4(&qword_10016C6F8);
  v22 = __chkstk_darwin(v21);
  if (a1 <= 0.0)
  {
    v67 = sub_10007DE98();
    v68 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000002BLL, (void *)0x8000000100116220);
    v70 = (DARootViewController *)v69;
    LOBYTE(v127[0]) = 0;
    sub_100077E64(v68, v69, 0, 3212836864);

    swift_bridgeObjectRelease(v70, v71, v72, v73, v74, v75, v76, v77);
  }
  else
  {
    v114 = v16;
    v115 = v20;
    v116 = v14;
    v117 = v18;
    v118 = v13;
    v119 = v12;
    v120 = v9;
    v121 = v7;
    v122 = v6;
    v25 = v126;
    v26 = a1 / 60.0;
    if (a1 / 60.0 >= 60.0)
    {
      v78 = v125;
      v79 = Date.init(timeIntervalSinceNow:)(v22, v26 * 60.0);
      v80 = Date.timeIntervalSinceReferenceDate.getter(v79);
      Date.init(timeIntervalSinceReferenceDate:)(ceil(v80 / 300.0) * 300.0);
      v81 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
      objc_msgSend(v81, "setDateStyle:", 3);
      objc_msgSend(v81, "setTimeStyle:", 1);
      objc_msgSend(v81, "setDoesRelativeDateFormatting:", 1);
      isa = Date._bridgeToObjectiveC()().super.isa;
      v83 = objc_msgSend(v81, "stringFromDate:", isa);

      if (!v83)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v85 = v84;
        v83 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v85, v86, v87, v88, v89, v90, v91, v92);
      }
      v93 = sub_10007DE98();
      v94 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v95 = swift_allocObject(v94, 72, 7);
      *(_OWORD *)(v95 + 16) = xmmword_10010BE30;
      *(_QWORD *)(v95 + 56) = sub_100037118(0, &qword_10016C700, NSString_ptr);
      *(_QWORD *)(v95 + 64) = sub_10004E1F4(&qword_10016C708, &qword_10016C700, NSString_ptr);
      *(_QWORD *)(v95 + 32) = v83;
      v96 = sub_10003FFA0(0, 0, v95, 0xD000000000000025, (void *)0x8000000100116250);
      v98 = (DARootViewController *)v97;
      swift_bridgeObjectRelease((DARootViewController *)v95, v97, v99, v100, v101, v102, v103, v104);
      LOBYTE(v127[0]) = 1;
      sub_100077E64(v96, (uint64_t)v98, 0, 0x100000000);

      swift_bridgeObjectRelease(v98, v105, v106, v107, v108, v109, v110, v111);
      v112 = v124;
      v113 = *(void (**)(char *, uint64_t))(v123 + 8);
      v113(v25, v124);
      v113(v78, v112);
    }
    else
    {
      v27 = ceil(v26 / 5.0) * 5.0;
      v28 = v22;
      v29 = v24;
      v30 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      v31 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "minutes");
      v32 = sub_100037118(0, &qword_10016C710, NSUnitDuration_ptr);
      Measurement.init(value:unit:)(v31, v32, v27);
      v33 = v114;
      static Measurement<>.FormatStyle.UnitWidth.wide.getter(v32);
      v34 = sub_100035CA4(&qword_10016C718);
      v35 = (uint64_t)v119;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v119, 1, 1, v34);
      v36 = v120;
      static MeasurementFormatUnitUsage.general.getter(v32);
      v37 = v115;
      static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)(v33, v36, v35, v32);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v36, v122);
      sub_100036FA0(v35, &qword_10016C6E0);
      (*(void (**)(char *, uint64_t))(v116 + 8))(v33, v118);
      v38 = sub_100080AF8();
      Measurement<>.formatted<A>(_:)(v127, v37, v28, v17, v38);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v37, v17);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
      v39 = (DARootViewController *)v127[1];
      v40 = sub_10007DE98();
      v41 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v42 = swift_allocObject(v41, 72, 7);
      *(_OWORD *)(v42 + 16) = xmmword_10010BE30;
      v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v39, v44, v45, v46, v47, v48, v49, v50);
      *(_QWORD *)(v42 + 56) = sub_100037118(0, &qword_10016C700, NSString_ptr);
      *(_QWORD *)(v42 + 64) = sub_10004E1F4(&qword_10016C708, &qword_10016C700, NSString_ptr);
      *(_QWORD *)(v42 + 32) = v43;
      v51 = sub_10003FFA0(0, 0, v42, 0xD000000000000027, (void *)0x8000000100116280);
      v53 = (DARootViewController *)v52;
      swift_bridgeObjectRelease((DARootViewController *)v42, v52, v54, v55, v56, v57, v58, v59);
      LOBYTE(v127[0]) = 1;
      sub_100077E64(v51, (uint64_t)v53, 0, 0x100000000);

      swift_bridgeObjectRelease(v53, v60, v61, v62, v63, v64, v65, v66);
    }
  }
}

void sub_10007C2FC()
{
  sub_10007C964(0x8000000100116200, (uint64_t (*)(void))sub_10007DA9C);
}

void sub_10007C318()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  SEL v6;
  id v7;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  int v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  const char *v26;
  void *v27;
  int v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  SEL v41;
  id v42;
  int v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  _BYTE v49[24];
  _QWORD v50[5];

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v1 = qword_100172378;
  v2 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v3 + 56) = &type metadata for String;
  v4 = sub_100047048();
  *(_QWORD *)(v3 + 64) = v4;
  *(_QWORD *)(v3 + 32) = 0xD000000000000020;
  *(_QWORD *)(v3 + 40) = 0x80000001001161D0;
  v5 = static os_log_type_t.default.getter(v4);
  os_log(_:dso:log:type:_:)("%@", 2, 2, &_mh_execute_header, v1, v5, v3);
  swift_bridgeObjectRelease((DARootViewController *)v3, v6, v7, v8, v9, v10, v11, v12);
  v13 = sub_10007DB2C();
  sub_10007D548(v13, 0);

  v14 = sub_10007E69C();
  v15 = objc_msgSend(v14, "viewControllers");

  v16 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  if (!((unint64_t)v17 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease((DARootViewController *)v17, v18, v19, v20, v21, v22, v23, v24);
LABEL_16:
    v48 = sub_10007E69C();
    objc_msgSend(v48, "scheduleModalPresentationWithPriority:animated:presentationCompletion:", 0, 1, 0);

    return;
  }
  if (v17 < 0)
    v39 = v17;
  else
    v39 = v17 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v17);
  v40 = _CocoaArrayWrapper.endIndex.getter(v39);
  swift_bridgeObjectRelease((DARootViewController *)v17, v41, v42, v43, v44, v45, v46, v47);
  if (!v40)
    goto LABEL_15;
LABEL_5:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v25 = *(id *)(v17 + 32);
LABEL_8:
    v33 = v25;
    swift_bridgeObjectRelease((DARootViewController *)v17, v26, v27, v28, v29, v30, v31, v32);
    v34 = type metadata accessor for EnhancedLoggingConsentViewController();
    v35 = swift_dynamicCastClass(v33, v34);
    if (v35)
    {
      v36 = v35;
      v50[3] = type metadata accessor for CardViewPersistentCell();
      v50[4] = &off_100138A50;
      v50[0] = v0;
      v37 = v36 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate;
      swift_beginAccess(v37, v49, 33, 0);
      v38 = v0;
      sub_100080AB0((uint64_t)v50, v37);
      swift_endAccess(v49);
    }

    goto LABEL_16;
  }
  __break(1u);
}

void sub_10007C57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  SEL v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  double v14;
  id v15;

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v0 = qword_100172378;
  v1 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v2 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v2 + 56) = &type metadata for String;
  v3 = sub_100047048();
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = 0xD000000000000019;
  *(_QWORD *)(v2 + 40) = 0x80000001001161B0;
  v4 = static os_log_type_t.default.getter(v3);
  os_log(_:dso:log:type:_:)("%@", 2, 2, &_mh_execute_header, v0, v4, v2);
  swift_bridgeObjectRelease((DARootViewController *)v2, v5, v6, v7, v8, v9, v10, v11);
  v12 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v13 = objc_msgSend(v12, "snapshot");

  objc_msgSend(v13, "durationRemaining");
  sub_10007BC4C(v14);
  v15 = sub_10007DE98();
  sub_10007D548(v15, 0);

}

void sub_10007C6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  SEL v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  const char *v18;
  void *v19;
  int v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  SEL v36;
  id v37;
  int v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  _QWORD v44[9];

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v0 = qword_100172378;
  v1 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v2 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v2 + 56) = &type metadata for String;
  v3 = sub_100047048();
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v2 + 40) = 0x8000000100116190;
  v4 = static os_log_type_t.default.getter(v3);
  os_log(_:dso:log:type:_:)("%@", 2, 2, &_mh_execute_header, v0, v4, v2);
  swift_bridgeObjectRelease((DARootViewController *)v2, v5, v6, v7, v8, v9, v10, v11);
  v12 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v13 = objc_msgSend(v12, "delegate");

  if (v13)
  {
    v14 = type metadata accessor for AppDelegate();
    v15 = swift_dynamicCastClass(v13, v14);
    if (!v15
      || (v16 = *(_QWORD *)(v15 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions)) == 0
      || !*(_QWORD *)(v16 + 16))
    {
LABEL_15:
      swift_unknownObjectRelease(v13);
      goto LABEL_16;
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v16 + 40));
    swift_bridgeObjectRetain(v16);
    String.hash(into:)(v44, 0x776569766572, 0xE600000000000000);
    v17 = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v16 + 32);
    v26 = v17 & ~v25;
    if (((*(_QWORD *)(v16 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
    {
      v27 = ~v25;
      while (*(_BYTE *)(*(_QWORD *)(v16 + 48) + v26) != 1)
      {
        v28 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, 0x776569766572, 0xE600000000000000, 0);
        swift_bridgeObjectRelease((DARootViewController *)0xE000000000000000, v29, v30, v31, v32, v33, v34, v35);
        if ((v28 & 1) != 0)
          goto LABEL_14;
        v26 = (v26 + 1) & v27;
        if (((*(_QWORD *)(v16 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
          goto LABEL_12;
      }
      swift_bridgeObjectRelease((DARootViewController *)v16, v18, v19, v20, v21, v22, v23, v24);
      v16 = 0xE600000000000000;
LABEL_14:
      swift_bridgeObjectRelease((DARootViewController *)v16, v18, v19, v20, v21, v22, v23, v24);
      sub_100080390();
      goto LABEL_15;
    }
LABEL_12:
    swift_unknownObjectRelease(v13);
    swift_bridgeObjectRelease((DARootViewController *)v16, v36, v37, v38, v39, v40, v41, v42);
  }
LABEL_16:
  v43 = sub_10007E080();
  sub_10007D548(v43, 0);

}

void sub_10007C948()
{
  sub_10007C964(0x8000000100116170, (uint64_t (*)(void))sub_10007E2B8);
}

void sub_10007C964(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  SEL v9;
  id v10;
  int v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v4 = qword_100172378;
  v5 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  v7 = sub_100047048();
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(v6 + 40) = a1;
  v8 = static os_log_type_t.default.getter(v7);
  os_log(_:dso:log:type:_:)("%@", 2, 2, &_mh_execute_header, v4, v8, v6);
  swift_bridgeObjectRelease((DARootViewController *)v6, v9, v10, v11, v12, v13, v14, v15);
  v16 = (id)a2();
  sub_10007D548(v16, 0);

}

void sub_10007CA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  SEL v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  void *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  const char *v27;
  void *v28;
  int v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  SEL v36;
  id v37;
  int v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v0 = qword_100172378;
  v1 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v2 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v2 + 56) = &type metadata for String;
  v3 = sub_100047048();
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = 0xD000000000000022;
  *(_QWORD *)(v2 + 40) = 0x8000000100116140;
  v4 = static os_log_type_t.default.getter(v3);
  os_log(_:dso:log:type:_:)("%@", 2, 2, &_mh_execute_header, v0, v4, v2);
  swift_bridgeObjectRelease((DARootViewController *)v2, v5, v6, v7, v8, v9, v10, v11);
  v12 = (void *)qword_10016B3C0;
  if (qword_10016B3C0)
  {
    v13 = type metadata accessor for SelfServiceDestinationPickerViewController();
    if (!swift_dynamicCastClass(v12, v13))
    {
      v34 = v12;
LABEL_23:
      v48 = v34;
      goto LABEL_24;
    }
  }
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  v14 = objc_msgSend((id)qword_100172310, "viewControllers");
  v15 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if (!((unint64_t)v16 >> 62))
  {
    v24 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
      goto LABEL_9;
    goto LABEL_20;
  }
  if (v16 < 0)
    v35 = v16;
  else
    v35 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v24 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease((DARootViewController *)v16, v36, v37, v38, v39, v40, v41, v42);
  if (!v24)
  {
LABEL_20:
    swift_bridgeObjectRelease((DARootViewController *)v16, v17, v18, v19, v20, v21, v22, v23);
    if (qword_10016A5F8 != -1)
      swift_once(&qword_10016A5F8, sub_100048E78);
    v34 = (id)qword_100172300;
    goto LABEL_23;
  }
LABEL_9:
  v25 = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_35:
    v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v16);
    goto LABEL_14;
  }
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v25 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_37:
    __break(1u);
LABEL_38:
    swift_once(&qword_10016A5F8, sub_100048E78);
    goto LABEL_27;
  }
  v26 = *(id *)(v16 + 8 * v25 + 32);
LABEL_14:
  v48 = v26;
  swift_bridgeObjectRelease((DARootViewController *)v16, v27, v28, v29, v30, v31, v32, v33);
LABEL_24:
  v43 = type metadata accessor for DashboardViewController();
  v44 = swift_dynamicCastClass(v48, v43);
  if (!v44 || *(uint64_t *)(v44 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount) < 1)
  {
    v47 = v48;
    goto LABEL_33;
  }
  if (qword_10016A5F8 != -1)
    goto LABEL_38;
LABEL_27:
  v45 = (void *)qword_10016B3C0;
  qword_10016B3C0 = 0;

  if (qword_10016A5E0 != -1)
    swift_once(&qword_10016A5E0, sub_10002F774);
  *(_BYTE *)(qword_1001722E0 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) = 3;
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  v46 = objc_msgSend((id)qword_100172310, "popToRootViewControllerAnimated:", 1);

  v47 = v46;
LABEL_33:

}

void sub_10007CDC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  SEL v19;
  id v20;
  int v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  Swift::Int v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  Swift::Int v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[24];

  v0 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v1);
  v6 = (char *)&v44 - v5;
  __chkstk_darwin(v4);
  v8 = (char *)&v44 - v7;
  v9 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v48 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  v10 = __chkstk_darwin(v9);
  v47 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v44 - v12;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v14 = qword_100172378;
  v15 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  v17 = sub_100047048();
  *(_QWORD *)(v16 + 64) = v17;
  *(_QWORD *)(v16 + 32) = 0xD00000000000001DLL;
  *(_QWORD *)(v16 + 40) = 0x8000000100116120;
  v18 = static os_log_type_t.default.getter(v17);
  os_log(_:dso:log:type:_:)("%@", 2, 2, &_mh_execute_header, v14, v18, v16);
  swift_bridgeObjectRelease((DARootViewController *)v16, v19, v20, v21, v22, v23, v24, v25);
  v26 = sub_10007E520();
  sub_10007D548(v26, 0);

  v27 = sub_10007E69C();
  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v28 = type metadata accessor for ModalPresentationCoordinator(0);
  v29 = sub_100036D34(v28, (uint64_t)qword_1001723D0);
  swift_beginAccess(v29, v50, 33, 0);
  if ((sub_1000C65B4(v27, 1, 0, 1, 0, 0) & 1) == 0)
  {
    v45 = v13;
    v46 = v3;
    v30 = (uint64_t)v6;
    v31 = *(_QWORD *)(v29 + *(int *)(v28 + 24));
    v32 = v27;
    v33 = swift_bridgeObjectRetain(v31);
    v34 = sub_1000C8C58(v33, v32);

    sub_1000C4E10(v34, (uint64_t)v8);
    v35 = swift_release(v34);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v48 + 48))(v8, 1, v49, v35) == 1)
    {
      sub_100036FA0((uint64_t)v8, (uint64_t *)&unk_10016AE90);
      v6 = (char *)v30;
    }
    else
    {
      v36 = (uint64_t)v45;
      sub_100036D7C((uint64_t)v8, (uint64_t)v45);
      v6 = (char *)v30;
      sub_1000A7860(v36, v30);
      sub_100036FA0(v30, (uint64_t *)&unk_10016AE90);
      sub_100036DC0(v36);
    }
    v3 = v46;
  }
  swift_endAccess(v50);

  v37 = sub_10007F068();
  swift_beginAccess(v29, v50, 33, 0);
  if ((sub_1000C65B4(v37, 1, 0, 1, 0, 0) & 1) == 0)
  {
    v38 = *(_QWORD *)(v29 + *(int *)(v28 + 24));
    v39 = v37;
    v40 = swift_bridgeObjectRetain(v38);
    v41 = sub_1000C8C58(v40, v39);

    sub_1000C4E10(v41, (uint64_t)v3);
    v42 = swift_release(v41);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v48 + 48))(v3, 1, v49, v42) == 1)
    {
      sub_100036FA0((uint64_t)v3, (uint64_t *)&unk_10016AE90);
    }
    else
    {
      v43 = v47;
      sub_100036D7C((uint64_t)v3, v47);
      sub_1000A7860(v43, (uint64_t)v6);
      sub_100036FA0((uint64_t)v6, (uint64_t *)&unk_10016AE90);
      sub_100036DC0(v43);
    }
  }
  swift_endAccess(v50);

}

void sub_10007D1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  SEL v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  void *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  const char *v27;
  void *v28;
  int v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  SEL v36;
  id v37;
  int v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v0 = qword_100172378;
  v1 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v2 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v2 + 56) = &type metadata for String;
  v3 = sub_100047048();
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = 0xD00000000000001DLL;
  *(_QWORD *)(v2 + 40) = 0x8000000100116100;
  v4 = static os_log_type_t.default.getter(v3);
  os_log(_:dso:log:type:_:)("%@", 2, 2, &_mh_execute_header, v0, v4, v2);
  swift_bridgeObjectRelease((DARootViewController *)v2, v5, v6, v7, v8, v9, v10, v11);
  v12 = (void *)qword_10016B3C0;
  if (qword_10016B3C0)
  {
    v13 = type metadata accessor for SelfServiceDestinationPickerViewController();
    if (!swift_dynamicCastClass(v12, v13))
    {
      v34 = v12;
LABEL_23:
      v48 = v34;
      goto LABEL_24;
    }
  }
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  v14 = objc_msgSend((id)qword_100172310, "viewControllers");
  v15 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if (!((unint64_t)v16 >> 62))
  {
    v24 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
      goto LABEL_9;
    goto LABEL_20;
  }
  if (v16 < 0)
    v35 = v16;
  else
    v35 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v24 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease((DARootViewController *)v16, v36, v37, v38, v39, v40, v41, v42);
  if (!v24)
  {
LABEL_20:
    swift_bridgeObjectRelease((DARootViewController *)v16, v17, v18, v19, v20, v21, v22, v23);
    if (qword_10016A5F8 != -1)
      swift_once(&qword_10016A5F8, sub_100048E78);
    v34 = (id)qword_100172300;
    goto LABEL_23;
  }
LABEL_9:
  v25 = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_35:
    v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v16);
    goto LABEL_14;
  }
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v25 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_37:
    __break(1u);
LABEL_38:
    swift_once(&qword_10016A5F8, sub_100048E78);
    goto LABEL_27;
  }
  v26 = *(id *)(v16 + 8 * v25 + 32);
LABEL_14:
  v48 = v26;
  swift_bridgeObjectRelease((DARootViewController *)v16, v27, v28, v29, v30, v31, v32, v33);
LABEL_24:
  v43 = type metadata accessor for DashboardViewController();
  v44 = swift_dynamicCastClass(v48, v43);
  if (!v44 || *(uint64_t *)(v44 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount) < 1)
  {
    v47 = v48;
    goto LABEL_33;
  }
  if (qword_10016A5F8 != -1)
    goto LABEL_38;
LABEL_27:
  v45 = (void *)qword_10016B3C0;
  qword_10016B3C0 = 0;

  if (qword_10016A5E0 != -1)
    swift_once(&qword_10016A5E0, sub_10002F774);
  *(_BYTE *)(qword_1001722E0 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) = 4;
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  v46 = objc_msgSend((id)qword_100172310, "popToRootViewControllerAnimated:", 1);

  v47 = v46;
LABEL_33:

}

void sub_10007D548(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id i;
  const char *v17;
  void *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  void *v30;
  int v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  const char *v37;
  void *v38;
  int v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  const char *v45;
  void *v46;
  int v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  void *v58;
  int v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  id v76;
  id v77;
  id v78;
  id v79;
  DARootViewController *v80;
  uint64_t v81;
  uint64_t v82;
  DARootViewController *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  SEL v88;
  id v89;
  int v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  SEL v99;
  id v100;
  int v101;
  id v102;
  id v103;
  id v104;
  id v105;
  _BYTE v106[24];
  _BYTE v107[24];

  v3 = v2;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_viewQueue);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_viewQueue, v107, 1, 0);
  v7 = *v6;
  if ((unint64_t)*v6 >> 62)
  {
    if (v7 < 0)
      v36 = *v6;
    else
      v36 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v6);
    if (_CocoaArrayWrapper.endIndex.getter(v36))
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease((DARootViewController *)v7, v9, v10, v11, v12, v13, v14, v15);
    goto LABEL_15;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*v6);
  if (!v8)
    goto LABEL_14;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
    goto LABEL_49;
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_51;
  }
  for (i = *(id *)(v7 + 32); ; i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7))
  {
    v24 = (int64_t)i;
    swift_bridgeObjectRelease((DARootViewController *)v7, v17, v18, v19, v20, v21, v22, v23);
    sub_100037118(0, &qword_10016D880, NSObject_ptr);
    if ((static NSObject.== infix(_:_:)(a1) & 1) != 0)
    {
      if (qword_10016A678 != -1)
        goto LABEL_59;
      goto LABEL_8;
    }

LABEL_15:
    v7 = *v6;
    if ((unint64_t)*v6 >> 62)
    {
      if (v7 < 0)
        v53 = *v6;
      else
        v53 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v6);
      v24 = _CocoaArrayWrapper.endIndex.getter(v53);
      if (!v24)
      {
LABEL_25:
        swift_bridgeObjectRelease((DARootViewController *)v7, v37, v38, v39, v40, v41, v42, v43);
        v54 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                                    + OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView), "arrangedSubviews"));
        v55 = sub_100037118(0, (unint64_t *)&qword_10016D860, UIView_ptr);
        v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

        if ((unint64_t)v56 >> 62)
        {
          if (v56 < 0)
            v98 = v56;
          else
            v98 = v56 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v56);
          v64 = _CocoaArrayWrapper.endIndex.getter(v98);
          swift_bridgeObjectRelease((DARootViewController *)v56, v99, v100, v101, v102, v103, v104, v105);
        }
        else
        {
          v64 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease((DARootViewController *)v56, v57, v58, v59, v60, v61, v62, v63);
        sub_10008D7DC(a1, v64, 1);
        goto LABEL_28;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*v6);
      if (!v24)
        goto LABEL_25;
    }
    if ((v7 & 0xC000000000000001) != 0)
    {
LABEL_51:
      v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
    }
    else
    {
      if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_53;
      }
      v44 = *(id *)(v7 + 32);
    }
    v52 = v44;
    swift_bridgeObjectRelease((DARootViewController *)v7, v45, v46, v47, v48, v49, v50, v51);
    sub_10008DF14(a1, v52, 1);

LABEL_28:
    swift_beginAccess(v6, v106, 33, 0);
    v7 = *v6;
    if (!((unint64_t)*v6 >> 62))
      break;
    if (v7 < 0)
      v86 = *v6;
    else
      v86 = v7 & 0xFFFFFFFFFFFFFF8;
    v87 = a1;
    swift_bridgeObjectRetain(v7);
    v3 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease((DARootViewController *)v7, v88, v89, v90, v91, v92, v93, v94);
    if ((v3 & 0x8000000000000000) == 0)
      goto LABEL_30;
    __break(1u);
LABEL_49:
    ;
  }
  v65 = a1;
LABEL_30:
  sub_100034D4C(0, 0, (uint64_t)a1);
  swift_endAccess(v106);
  if ((a2 & 1) != 0)
    return;
  v24 = *v6;
  if (!((unint64_t)*v6 >> 62))
  {
    v66 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v6);
    v67 = v66 - 1;
    if (!__OFSUB__(v66, 1))
      goto LABEL_33;
LABEL_58:
    __break(1u);
LABEL_59:
    swift_once(&qword_10016A678, sub_10008BF34);
LABEL_8:
    v25 = qword_100172378;
    v26 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v27 = swift_allocObject(v26, 72, 7);
    *(_OWORD *)(v27 + 16) = xmmword_10010BE30;
    *(_QWORD *)(v27 + 56) = sub_100037118(0, (unint64_t *)&qword_10016D860, UIView_ptr);
    *(_QWORD *)(v27 + 64) = sub_10004E1F4((unint64_t *)&qword_10016C730, (unint64_t *)&qword_10016D860, UIView_ptr);
    *(_QWORD *)(v27 + 32) = a1;
    v28 = static os_log_type_t.default.getter(a1);
    os_log(_:dso:log:type:_:)("Attempted to move forward, but this view is already the current view: %@", 72, 2, &_mh_execute_header, v25, v28, v27);

    goto LABEL_42;
  }
LABEL_53:
  if (v24 < 0)
    v95 = v24;
  else
    v95 = v24 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v24);
  v96 = _CocoaArrayWrapper.endIndex.getter(v95);
  v97 = __OFSUB__(v96, 1);
  v67 = v96 - 1;
  if (v97)
    goto LABEL_58;
LABEL_33:
  sub_100080C90(v67, v24);
  v69 = v68;
  v71 = (uint64_t)v70;
  v73 = (uint64_t)v72;
  v75 = v74;
  swift_bridgeObjectRelease((DARootViewController *)v24, v70, v72, v74, v76, v77, v78, v79);
  if ((v75 & 1) != 0)
  {
    v81 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v82 = swift_unknownObjectRetain_n(v69, 2);
    v83 = (DARootViewController *)swift_dynamicCastClass(v82, v81);
    if (!v83)
    {
      swift_unknownObjectRelease(v69);
      v83 = &_swiftEmptyArrayStorage;
    }
    v84 = *(_QWORD *)v83->remoteCardFilter;
    swift_release(v83);
    if (__OFSUB__(v75 >> 1, v73))
    {
      __break(1u);
    }
    else
    {
      v85 = v69;
      if (v84 == (v75 >> 1) - v73)
      {
        v80 = (DARootViewController *)swift_dynamicCastClass(v69, v81);
        if (!v80)
        {
          swift_unknownObjectRelease(v69);
          v80 = &_swiftEmptyArrayStorage;
        }
        goto LABEL_41;
      }
    }
    swift_unknownObjectRelease(v85);
  }
  v80 = sub_1000924F4(v69, v71, v73, v75);
LABEL_41:
  swift_unknownObjectRelease(v69);
  v27 = *v6;
  *v6 = (uint64_t)v80;
LABEL_42:
  swift_bridgeObjectRelease((DARootViewController *)v27, v29, v30, v31, v32, v33, v34, v35);
}

char *sub_10007DA34(void *a1)
{
  char *result;

  objc_msgSend(a1, "setStatus:", 3);
  objc_msgSend(a1, "setEndDate:", 0);
  result = (char *)objc_msgSend(a1, "retriesRemaining");
  if (!__OFSUB__(result, 1))
    return (char *)objc_msgSend(a1, "setRetriesRemaining:", result - 1);
  __break(1u);
  return result;
}

id sub_10007DA9C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt);
  }
  else
  {
    v4 = sub_10007E5B0(0xD000000000000020, (void *)0x8000000100116610, 0xD00000000000001FLL, (void *)0x8000000100116640);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10007DB2C()
{
  return sub_10007E094(&OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollFinishedPrompt, (uint64_t (*)(uint64_t))sub_10007DB40);
}

id sub_10007DB40(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v2 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0x45554E49544E4F43, (void *)0xE800000000000000);
  v4 = v3;
  v5 = swift_allocObject(&unk_100138DB8, 24, 7);
  *(_QWORD *)(v5 + 16) = a1;
  v6 = (void *)objc_opt_self(UIFontMetrics);
  v7 = a1;
  v8 = objc_msgSend(v6, "defaultMetrics");
  v9 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 20.0);
  v10 = objc_msgSend(v8, "scaledFontForFont:", v9);

  v11 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000020, (void *)0x8000000100116610);
  v13 = v12;
  v14 = sub_100035CA4(&qword_10016C728);
  v15 = swift_allocObject(v14, 80, 7);
  *(_OWORD *)(v15 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v15 + 32) = v2;
  *(_QWORD *)(v15 + 40) = v4;
  *(_QWORD *)(v15 + 48) = v10;
  *(_BYTE *)(v15 + 56) = 7;
  *(_QWORD *)(v15 + 64) = sub_100080C88;
  *(_QWORD *)(v15 + 72) = v5;
  v16 = objc_allocWithZone((Class)type metadata accessor for PromptView());
  return sub_100076DCC(20.0, v11, v13, 0, 0, 0, 0, v15, 0, 1, 0);
}

void sub_10007DD00(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  const char *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  SEL v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  _BYTE v38[24];
  _QWORD v39[5];

  v3 = sub_10007E69C();
  v4 = objc_msgSend(v3, "viewControllers");

  v5 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if (!((unint64_t)v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease((DARootViewController *)v6, v7, v8, v9, v10, v11, v12, v13);
LABEL_14:
    v37 = sub_10007E69C();
    objc_msgSend(v37, "scheduleModalPresentationWithPriority:animated:presentationCompletion:", 0, 1, 0);

    return;
  }
  if (v6 < 0)
    v28 = v6;
  else
    v28 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v29 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease((DARootViewController *)v6, v30, v31, v32, v33, v34, v35, v36);
  if (!v29)
    goto LABEL_13;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(id *)(v6 + 32);
LABEL_6:
    v22 = v14;
    swift_bridgeObjectRelease((DARootViewController *)v6, v15, v16, v17, v18, v19, v20, v21);
    v23 = type metadata accessor for EnhancedLoggingConsentViewController();
    v24 = swift_dynamicCastClass(v22, v23);
    if (v24)
    {
      v25 = v24;
      v39[3] = type metadata accessor for CardViewPersistentCell();
      v39[4] = &off_100138A50;
      v39[0] = a2;
      v26 = v25 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate;
      swift_beginAccess(v26, v38, 33, 0);
      v27 = a2;
      sub_100080AB0((uint64_t)v39, v26);
      swift_endAccess(v38);
    }

    goto LABEL_14;
  }
  __break(1u);
}

id sub_10007DE98()
{
  return sub_10007DEAC(&OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentRunningPrompt, (uint64_t (*)(void))sub_10007DF04);
}

id sub_10007DEAC(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2();
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_10007DF04()
{
  id v0;
  DARootViewController *v1;
  DARootViewController *v2;
  uint64_t v3;
  const char *v4;
  DARootViewController *v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  Swift::String v12;
  SEL v13;
  id v14;
  int v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  DARootViewController *v21;
  uint64_t v22;
  DARootViewController *v23;
  DARootViewController *v24;
  Swift::String v25;
  SEL v26;
  id v27;
  int v28;
  id v29;
  id v30;
  id v31;
  id v32;
  SEL v33;
  id v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;

  v0 = sub_10004016C(0xD000000000000021, 0x8000000100116590);
  v2 = v1;
  v3 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v0, v1);
  v5 = (DARootViewController *)v4;
  swift_bridgeObjectRelease(v2, v4, v6, v7, v8, v9, v10, v11);
  swift_bridgeObjectRetain(v5);
  v12._countAndFlagsBits = 2570;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v5, v13, v14, v15, v16, v17, v18, v19);
  v20 = v3;
  v21 = v5;
  v22 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000002BLL, (void *)0x80000001001165C0);
  v24 = v23;
  swift_bridgeObjectRetain(v21);
  v25._countAndFlagsBits = v22;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v21, v26, v27, v28, v29, v30, v31, v32);
  swift_bridgeObjectRelease(v24, v33, v34, v35, v36, v37, v38, v39);
  v40 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001ELL, (void *)0x80000001001165F0);
  v42 = v41;
  v43 = objc_allocWithZone((Class)type metadata accessor for PromptView());
  return sub_100076DCC(20.0, v40, v42, v20, (uint64_t)v21, 0, 0xE000000000000000, 0, 0, 1, 0);
}

id sub_10007E080()
{
  return sub_10007E094(&OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentFinishedPrompt, (uint64_t (*)(uint64_t))sub_10007E0F0);
}

id sub_10007E094(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_10007E0F0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v2 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000020, (void *)0x8000000100116540);
  v4 = v3;
  v5 = swift_allocObject(&unk_100138D90, 24, 7);
  *(_QWORD *)(v5 + 16) = a1;
  v6 = (void *)objc_opt_self(UIFontMetrics);
  v7 = a1;
  v8 = objc_msgSend(v6, "defaultMetrics");
  v9 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 20.0);
  v10 = objc_msgSend(v8, "scaledFontForFont:", v9);

  v11 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x8000000100116570);
  v13 = v12;
  v14 = sub_100035CA4(&qword_10016C728);
  v15 = swift_allocObject(v14, 80, 7);
  *(_OWORD *)(v15 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v15 + 32) = v2;
  *(_QWORD *)(v15 + 40) = v4;
  *(_QWORD *)(v15 + 48) = v10;
  *(_BYTE *)(v15 + 56) = 7;
  *(_QWORD *)(v15 + 64) = sub_100080C40;
  *(_QWORD *)(v15 + 72) = v5;
  v16 = objc_allocWithZone((Class)type metadata accessor for PromptView());
  return sub_100076DCC(20.0, v11, v13, 0, 0, 0, 0, v15, 0, 1, 0);
}

id sub_10007E2B8()
{
  return sub_10007DEAC(&OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUploadingPrompt, (uint64_t (*)(void))sub_10007E2CC);
}

id sub_10007E2CC()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  id result;
  void *v5;
  int wapiCapability;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  const char *v13;
  DARootViewController *v14;
  id v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  id v24;
  int v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;

  v0 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v1 = objc_msgSend(v0, "snapshot");

  v2 = objc_msgSend(v1, "consent");
  if (v2 == (id)3)
  {
LABEL_7:
    v9 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000020, (void *)0x80000001001164E0);
    v11 = v10;
    v12 = sub_10004016C(0xD000000000000023, 0x80000001001164B0);
    v14 = (DARootViewController *)v13;
    swift_bridgeObjectRelease((DARootViewController *)0x80000001001164B0, v13, v15, v16, v17, v18, v19, v20);
    v21 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v12, v14);
    v23 = (uint64_t)v22;
    swift_bridgeObjectRelease(v14, v22, v24, v25, v26, v27, v28, v29);
    v30 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000002BLL, (void *)0x8000000100116510);
    v32 = v31;
    v33 = objc_allocWithZone((Class)type metadata accessor for PromptView());
    v34 = sub_100076DCC(20.0, v9, v11, v21, v23, v30, v32, 0, 0, 1, 0);
    v35 = objc_msgSend((id)objc_opt_self(UIFont), "monospacedDigitSystemFontOfSize:weight:", 16.0, UIFontWeightRegular);
    sub_100077E64(0, 0, v35, 3212836864);

    return v34;
  }
  result = (id)MobileGestalt_get_current_device(v3);
  if (result)
  {
    v5 = result;
    wapiCapability = MobileGestalt_get_wapiCapability();

    if (wapiCapability)
      v7 = 0x4E414C575FLL;
    else
      v7 = 0x494649575FLL;
    v8 = 0xE500000000000000;
    String.append(_:)(*(Swift::String *)&v7);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_10007E520()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt);
  }
  else
  {
    v4 = sub_10007E5B0(0xD000000000000022, (void *)0x8000000100116450, 0xD000000000000021, (void *)0x8000000100116480);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10007E5B0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  v6 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, a1, a2);
  v8 = v7;
  v9 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, a3, a4);
  v11 = v10;
  v12 = objc_allocWithZone((Class)type metadata accessor for PromptView());
  v13 = sub_100076DCC(20.0, v6, v8, 0, 0, v9, v11, 0, 0, 1, 0);
  sub_100077E64(0, 0, 0, 3212836864);
  return v13;
}

id sub_10007E69C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  CGSize v9;
  id v10;
  void *v11;
  id v12;
  CGAffineTransform v14;
  CGSize v15;

  v1 = OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EnhancedLoggingConsentViewController()), "init");
    objc_msgSend(v4, "formSheetSize");
    v6 = v5;
    v8 = v7;
    CGAffineTransformMakeScale(&v14, 1.0, 1.2);
    v15.width = v6;
    v15.height = v8;
    v9 = CGSizeApplyAffineTransform(v15, &v14);
    objc_msgSend(v4, "setPreferredContentSize:", v9.width, v9.height);
    v10 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v4);
    objc_msgSend(v10, "setModalPresentationStyle:", 2);

    v11 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v10;
    v3 = v10;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

void sub_10007E7B8(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  Swift::Int v36;
  __n128 v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t inited;
  DARootViewController *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id *v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  Swift::Int v66;
  __n128 v67;
  uint64_t v68;
  char *v69;
  DARootViewController *v70;
  SEL v71;
  id v72;
  int v73;
  id v74;
  id v75;
  id v76;
  id v77;
  DARootViewController *v78;
  SEL v79;
  id v80;
  int v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  id v88;
  char v89[56];
  void **aBlock;
  uint64_t v91;
  void (*v92)(uint64_t, void *);
  void *v93;
  uint64_t (*v94)(id);
  uint64_t v95;

  v3 = v2;
  v5 = a2;
  v6 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v7 = __chkstk_darwin(v6);
  v9 = &v89[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = __chkstk_darwin(v7);
  v12 = &v89[-v11 - 8];
  __chkstk_darwin(v10);
  v14 = &v89[-v13 - 8];
  v15 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = &v89[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v17);
  v21 = &v89[-v20 - 8];
  if ((v5 - 1) > 1)
  {
    v26 = (uint64_t)v12;
    v27 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
    v28 = swift_allocObject(&unk_100138CF0, 41, 7);
    *(_QWORD *)(v28 + 16) = 6;
    *(_BYTE *)(v28 + 24) = 0;
    *(_QWORD *)(v28 + 32) = 0;
    *(_BYTE *)(v28 + 40) = 1;
    v94 = sub_100080B80;
    v95 = v28;
    aBlock = _NSConcreteStackBlock;
    v91 = 1107296256;
    v92 = sub_100040808;
    v93 = &unk_100138D08;
    v29 = _Block_copy(&aBlock);
    objc_msgSend(v27, "transactionWithBlock:", v29, swift_release(v95).n128_f64[0]);
    _Block_release(v29);

    objc_msgSend((id)objc_opt_self(ELSEvent), "createLoggingEventWith:", ELSEventTypeEnrollConsentDenied);
    v30 = sub_10007E69C();
    if (qword_10016A6D8 != -1)
      swift_once(&qword_10016A6D8, sub_1000C6380);
    v31 = type metadata accessor for ModalPresentationCoordinator(0);
    v32 = sub_100036D34(v31, (uint64_t)qword_1001723D0);
    swift_beginAccess(v32, &aBlock, 33, 0);
    if ((sub_1000C65B4(v30, 1, 0, 1, 0, 0) & 1) != 0)
      goto LABEL_23;
    v33 = *(_QWORD *)(v32 + *(int *)(v31 + 24));
    v34 = v30;
    v35 = swift_bridgeObjectRetain(v33);
    v36 = sub_1000C8C58(v35, v34);

    sub_1000C4E10(v36, (uint64_t)v9);
    v37 = swift_release(v36);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48))(v9, 1, v15, v37) == 1)
    {
      v38 = (uint64_t)v9;
LABEL_9:
      sub_100036FA0(v38, (uint64_t *)&unk_10016AE90);
LABEL_23:
      swift_endAccess(&aBlock);

      return;
    }
    sub_100036D7C((uint64_t)v9, (uint64_t)v19);
    sub_1000A7860((uint64_t)v19, v26);
    sub_100036FA0(v26, (uint64_t *)&unk_10016AE90);
    v54 = (uint64_t)v19;
LABEL_14:
    sub_100036DC0(v54);
    goto LABEL_23;
  }
  v22 = *(_QWORD **)(a1 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_consentHandles);
  if (v22[2])
  {
    v23 = v22[4];
    v24 = v22[5];
    objc_allocWithZone((Class)type metadata accessor for DetailedConsentNavigationController());
    swift_bridgeObjectRetain(v24);
    v25 = sub_10003D068(v23, v24);
    v88 = sub_10007E69C();
    objc_msgSend(v88, "showViewController:sender:", v25, v3);

    return;
  }
  v88 = v12;
  v39 = (void *)objc_opt_self(ELSManager);
  v40 = objc_msgSend(v39, "sharedManager");
  v41 = objc_msgSend(v40, "snapshot");

  LOBYTE(v40) = sub_1000E0A58();
  if ((v40 & 1) == 0)
  {
    v55 = objc_msgSend(v39, "sharedManager");
    v56 = swift_allocObject(&unk_100138D40, 41, 7);
    v57 = 1;
    if (v5 == 1)
      v57 = 2;
    *(_QWORD *)(v56 + 16) = 3;
    *(_BYTE *)(v56 + 24) = 0;
    *(_QWORD *)(v56 + 32) = v57;
    *(_BYTE *)(v56 + 40) = 0;
    v94 = sub_100080B80;
    v95 = v56;
    aBlock = _NSConcreteStackBlock;
    v91 = 1107296256;
    v92 = sub_100040808;
    v93 = &unk_100138D58;
    if (v5 == 1)
      v58 = (id *)&ELSEventTypeEnrollConsentApproved;
    else
      v58 = (id *)&ELSEventTypeEnrollConsentApprovedWithReview;
    v59 = _Block_copy(&aBlock);
    objc_msgSend(v55, "transactionWithBlock:", v59, swift_release(v95).n128_f64[0]);
    _Block_release(v59);

    v60 = *v58;
    objc_msgSend((id)objc_opt_self(ELSEvent), "createLoggingEventWith:", v60);

    v30 = sub_10007E69C();
    if (qword_10016A6D8 != -1)
      swift_once(&qword_10016A6D8, sub_1000C6380);
    v61 = type metadata accessor for ModalPresentationCoordinator(0);
    v62 = sub_100036D34(v61, (uint64_t)qword_1001723D0);
    swift_beginAccess(v62, &aBlock, 33, 0);
    if ((sub_1000C65B4(v30, 1, 0, 1, 0, 0) & 1) != 0)
      goto LABEL_23;
    v63 = *(_QWORD *)(v62 + *(int *)(v61 + 24));
    v64 = v30;
    v65 = swift_bridgeObjectRetain(v63);
    v66 = sub_1000C8C58(v65, v64);

    sub_1000C4E10(v66, (uint64_t)v14);
    v67 = swift_release(v66);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48))(v14, 1, v15, v67) == 1)
    {
      v38 = (uint64_t)v14;
      goto LABEL_9;
    }
    sub_100036D7C((uint64_t)v14, (uint64_t)v21);
    v87 = (uint64_t)v88;
    sub_1000A7860((uint64_t)v21, (uint64_t)v88);
    sub_100036FA0(v87, (uint64_t *)&unk_10016AE90);
    v54 = (uint64_t)v21;
    goto LABEL_14;
  }
  v42 = objc_msgSend(v39, "sharedManager");
  v43 = objc_msgSend(v42, "snapshot");

  v44 = objc_msgSend((id)objc_opt_self(DEDDevice), "currentDevice");
  if (v44)
  {
    v45 = v44;
    v46 = objc_msgSend(v44, "platform");

    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v49 = v48;

    v50 = sub_1000DFF44();
    v51 = sub_100035CA4(&qword_10016CF80);
    inited = swift_initStackObject(v51, v89);
    *(_OWORD *)(inited + 16) = xmmword_10010BE30;
    *(_QWORD *)(inited + 32) = v47;
    *(_QWORD *)(inited + 40) = v49;
    v53 = (DARootViewController *)sub_1000A4F88(inited, v50);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for String);
  }
  else
  {
    v53 = (DARootViewController *)sub_1000DFF44();
  }

  v68 = type metadata accessor for DeviceSelector();
  v69 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v68)), "init");
  v70 = sub_100092410((uint64_t)v53);
  swift_bridgeObjectRelease(v53, v71, v72, v73, v74, v75, v76, v77);
  v78 = *(DARootViewController **)&v69[OBJC_IVAR____TtC11Diagnostics14DeviceSelector_platformsFromQueue];
  *(_QWORD *)&v69[OBJC_IVAR____TtC11Diagnostics14DeviceSelector_platformsFromQueue] = v70;
  swift_bridgeObjectRelease(v78, v79, v80, v81, v82, v83, v84, v85);
  v86 = sub_10007E69C();
  objc_msgSend(v86, "showViewController:sender:", v69, v3);

}

id sub_10007EF68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  char *v6;
  char *v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
    v5 = objc_msgSend(v4, "snapshot");

    LODWORD(v4) = objc_msgSend(v5, "needsFollowup");
    if ((_DWORD)v4)
      v6 = sub_10007F068();
    else
      v6 = sub_10007FE7C();
    v7 = v6;
    v8 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v6);
    objc_msgSend(v8, "setModalPresentationStyle:", 2);
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

char *sub_10007F068()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t *v3;
  DARootViewController *v4;
  const char *v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  DARootViewController *v13;
  NSString v14;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  double v25;
  double v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  DARootViewController *v32;
  const char *v33;
  id v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  DARootViewController *v42;
  NSString v43;
  SEL v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t *v52;
  DARootViewController *v53;
  const char *v54;
  id v55;
  int v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  DARootViewController *v62;
  NSString v63;
  SEL v64;
  id v65;
  int v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  void (**v72)();
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t *v78;
  DARootViewController *v79;
  const char *v80;
  id v81;
  int v82;
  id v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  DARootViewController *v88;
  id v89;
  NSString v90;
  SEL v91;
  id v92;
  int v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  void (**v102)();
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  void (**v107)();
  id v108;
  char *v109;
  uint64_t v110;
  id v111;
  char *v112;

  v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConsentNoticeViewController()), "init");
  v2 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x8000000100113810);
  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText];
  v4 = *(DARootViewController **)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText + 8];
  *v3 = v2;
  v3[1] = (uint64_t)v5;
  swift_bridgeObjectRelease(v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel];
  v13 = (DARootViewController *)v3[1];
  if (v13)
  {
    swift_bridgeObjectRetain(v13);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v12, "setText:", v14);

  v22 = (void *)objc_opt_self(ELSManager);
  v23 = objc_msgSend(v22, "sharedManager");
  v24 = objc_msgSend(v23, "snapshot");

  objc_msgSend(v24, "totalDuration");
  v26 = v25;

  v27 = sub_10004E608(v26);
  if (v27 != 4)
  {
    v28 = v27;
    sub_10004E518(v26);
    if (v29)
      __asm { BR              X10 }
  }
  v30 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000002DLL, (void *)0x8000000100116300);
  v31 = (uint64_t *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
  v32 = *(DARootViewController **)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText + 8];
  *v31 = v30;
  v31[1] = (uint64_t)v33;
  swift_bridgeObjectRelease(v32, v33, v34, v35, v36, v37, v38, v39);
  v40 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
  v41 = v31[1];
  if (v41)
    v42 = (DARootViewController *)v31[1];
  else
    v42 = (DARootViewController *)0xE000000000000000;
  swift_bridgeObjectRetain(v41);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42, v44, v45, v46, v47, v48, v49, v50);
  objc_msgSend(v40, "setText:", v43);

  v51 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000026, (void *)0x8000000100116330);
  v52 = (uint64_t *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
  v53 = *(DARootViewController **)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle + 8];
  *v52 = v51;
  v52[1] = (uint64_t)v54;
  swift_bridgeObjectRelease(v53, v54, v55, v56, v57, v58, v59, v60);
  v61 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton];
  v62 = (DARootViewController *)v52[1];
  if (v62)
  {
    swift_bridgeObjectRetain(v62);
    v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v62, v64, v65, v66, v67, v68, v69, v70);
  }
  else
  {
    v63 = 0;
  }
  objc_msgSend(v61, "setTitle:forState:", v63, 0);

  v71 = swift_allocObject(&unk_100138B88, 32, 7);
  *(_QWORD *)(v71 + 16) = v0;
  *(_QWORD *)(v71 + 24) = v1;
  v72 = (void (**)())&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  v73 = *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  v74 = *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction + 8];
  *v72 = sub_100080BE8;
  v72[1] = (void (*)())v71;
  v75 = v0;
  v76 = v1;
  sub_100035D74(v73, v74);
  v77 = sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000025, (void *)0x8000000100116360);
  v78 = (uint64_t *)&v76[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle];
  v79 = *(DARootViewController **)&v76[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle
                                     + 8];
  *v78 = v77;
  v78[1] = (uint64_t)v80;
  swift_bridgeObjectRelease(v79, v80, v81, v82, v83, v84, v85, v86);
  v87 = *(void **)&v76[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton];
  if (v87)
  {
    v88 = (DARootViewController *)v78[1];
    v89 = v87;
    if (v88)
    {
      swift_bridgeObjectRetain(v88);
      v90 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v88, v91, v92, v93, v94, v95, v96, v97);
    }
    else
    {
      v90 = 0;
    }
    objc_msgSend(v87, "setTitle:forState:", v90, 0);

  }
  v98 = objc_msgSend(v22, "sharedManager");
  v99 = objc_msgSend(v98, "snapshot");

  v100 = objc_msgSend(v99, "retriesRemaining");
  if ((uint64_t)v100 <= 0)
  {
    v106 = swift_allocObject(&unk_100138BB0, 32, 7);
    *(_QWORD *)(v106 + 16) = v75;
    *(_QWORD *)(v106 + 24) = v76;
    v107 = (void (**)())&v76[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    v103 = *(_QWORD *)&v76[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    v104 = *(_QWORD *)&v76[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction + 8];
    *v107 = sub_100080BF0;
    v107[1] = (void (*)())v106;
    v108 = v75;
    v109 = v76;
  }
  else
  {
    v101 = swift_allocObject(&unk_100138C00, 24, 7);
    *(_QWORD *)(v101 + 16) = v75;
    v102 = (void (**)())&v76[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    v103 = *(_QWORD *)&v76[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    v104 = *(_QWORD *)&v76[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction + 8];
    *v102 = sub_100080C00;
    v102[1] = (void (*)())v101;
    v105 = v75;
  }
  sub_100035D74(v103, v104);
  v110 = swift_allocObject(&unk_100138BD8, 32, 7);
  *(_QWORD *)(v110 + 16) = v75;
  *(_QWORD *)(v110 + 24) = v76;
  v111 = v75;
  v112 = v76;
  sub_100087F10((uint64_t)sub_100080BF8, v110);
  swift_release(v110);
  return v112;
}

void sub_10007F6F4(uint64_t a1, void *a2)
{
  char *v3;
  id v4;
  void *v5;
  char *v6;

  v3 = sub_10007FE7C();
  v3[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_activationReason] = 0;

  v4 = objc_msgSend(a2, "navigationController");
  if (v4)
  {
    v5 = v4;
    v6 = sub_10007FE7C();
    objc_msgSend(v5, "pushViewController:animated:", v6, 1);

  }
}

void sub_10007F78C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  Swift::Int v21;
  __n128 v22;
  void *v23;
  _BYTE v24[16];
  _QWORD aBlock[6];

  v2 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v3 = __chkstk_darwin(v2);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v24[-v6];
  v8 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  objc_msgSend((id)objc_opt_self(ELSEvent), "createLoggingEventWith:", ELSEventTypeIssueDidNotOccurRetry);
  v12 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  aBlock[4] = sub_10007DA34;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100040808;
  aBlock[3] = &unk_100138C18;
  v13 = _Block_copy(aBlock);
  objc_msgSend(v12, "transactionWithBlock:", v13);
  _Block_release(v13);

  v15 = (void *)sub_10007EF68(v14);
  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v16 = type metadata accessor for ModalPresentationCoordinator(0);
  v17 = sub_100036D34(v16, (uint64_t)qword_1001723D0);
  swift_beginAccess(v17, aBlock, 33, 0);
  if ((sub_1000C65B4(v15, 1, 0, 1, 0, 0) & 1) == 0)
  {
    v18 = *(_QWORD *)(v17 + *(int *)(v16 + 24));
    v19 = v15;
    v20 = swift_bridgeObjectRetain(v18);
    v21 = sub_1000C8C58(v20, v19);

    sub_1000C4E10(v21, (uint64_t)v7);
    v22 = swift_release(v21);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v22) == 1)
    {
      sub_100036FA0((uint64_t)v7, (uint64_t *)&unk_10016AE90);
    }
    else
    {
      sub_100036D7C((uint64_t)v7, (uint64_t)v11);
      sub_1000A7860((uint64_t)v11, (uint64_t)v5);
      sub_100036FA0((uint64_t)v5, (uint64_t *)&unk_10016AE90);
      sub_100036DC0((uint64_t)v11);
    }
  }
  swift_endAccess(aBlock);

  v23 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController) = 0;

}

void sub_10007FA4C(uint64_t a1, void *a2)
{
  char *v3;
  id v4;
  void *v5;
  char *v6;

  v3 = sub_10007FE7C();
  v3[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_activationReason] = 1;

  v4 = objc_msgSend(a2, "navigationController");
  if (v4)
  {
    v5 = v4;
    v6 = sub_10007FE7C();
    objc_msgSend(v5, "pushViewController:animated:", v6, 1);

  }
}

void sub_10007FAE8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;

  v4 = swift_allocObject(&unk_100138C50, 24, 7);
  *(_QWORD *)(v4 + 16) = a1;
  v5 = swift_allocObject(&unk_100138C78, 24, 7);
  *(_QWORD *)(v5 + 16) = a2;
  v6 = a1;
  v7 = a2;
  v8 = sub_100087FEC((uint64_t)sub_100080C08, v4, (uint64_t)sub_10006D71C, v5);
  swift_release(v4);
  objc_msgSend(v7, "presentViewController:animated:completion:", v8, 1, 0, swift_release(v5).n128_f64[0]);

}

void sub_10007FBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  Swift::Int v23;
  __n128 v24;
  void *v25;
  _BYTE v26[16];
  _QWORD aBlock[5];
  uint64_t v28;

  v3 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v4 = __chkstk_darwin(v3);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v26[-v7];
  v9 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v14 = swift_allocObject(&unk_100138CA0, 41, 7);
  *(_QWORD *)(v14 + 16) = 6;
  *(_BYTE *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = 0;
  *(_BYTE *)(v14 + 40) = 1;
  aBlock[4] = sub_100080B80;
  v28 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100040808;
  aBlock[3] = &unk_100138CB8;
  v15 = _Block_copy(aBlock);
  objc_msgSend(v13, "transactionWithBlock:", v15, swift_release(v28).n128_f64[0]);
  _Block_release(v15);

  v17 = (void *)sub_10007EF68(v16);
  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v18 = type metadata accessor for ModalPresentationCoordinator(0);
  v19 = sub_100036D34(v18, (uint64_t)qword_1001723D0);
  swift_beginAccess(v19, aBlock, 33, 0);
  if ((sub_1000C65B4(v17, 1, 0, 1, 0, 0) & 1) == 0)
  {
    v20 = *(_QWORD *)(v19 + *(int *)(v18 + 24));
    v21 = v17;
    v22 = swift_bridgeObjectRetain(v20);
    v23 = sub_1000C8C58(v22, v21);

    sub_1000C4E10(v23, (uint64_t)v8);
    v24 = swift_release(v23);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v24) == 1)
    {
      sub_100036FA0((uint64_t)v8, (uint64_t *)&unk_10016AE90);
    }
    else
    {
      sub_100036D7C((uint64_t)v8, (uint64_t)v12);
      sub_1000A7860((uint64_t)v12, (uint64_t)v6);
      sub_100036FA0((uint64_t)v6, (uint64_t *)&unk_10016AE90);
      sub_100036DC0((uint64_t)v12);
    }
  }
  swift_endAccess(aBlock);

  v25 = *(void **)(a2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController) = 0;

}

char *sub_10007FE7C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController];
  }
  else
  {
    v4 = v0;
    type metadata accessor for FileReviewingTableViewController();
    v5 = swift_allocObject(&unk_100138A70, 24, 7);
    *(_QWORD *)(v5 + 16) = v0;
    v6 = v0;
    v7 = sub_100068E04((uint64_t)sub_100080B68, v5);
    v8 = *(void **)&v0[v1];
    *(_QWORD *)&v4[v1] = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_10007FF14(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  Swift::Int v27;
  __n128 v28;
  void *v29;
  _BYTE v30[16];
  void **aBlock;
  uint64_t v32;
  void (*v33)(uint64_t, void *);
  void *v34;
  uint64_t (*v35)(id);
  uint64_t v36;

  v4 = sub_100035CA4((uint64_t *)&unk_10016AE90);
  v5 = __chkstk_darwin(v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v30[-v8];
  v10 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    if (a1 == 1)
    {
      v14 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
      v15 = swift_allocObject(&unk_100138A98, 41, 7);
      *(_QWORD *)(v15 + 16) = 5;
      *(_BYTE *)(v15 + 24) = 0;
      *(_QWORD *)(v15 + 32) = 3;
      *(_BYTE *)(v15 + 40) = 0;
      v35 = sub_100080B80;
      v36 = v15;
      aBlock = _NSConcreteStackBlock;
      v32 = 1107296256;
      v33 = sub_100040808;
      v34 = &unk_100138AB0;
      v16 = _Block_copy(&aBlock);
      objc_msgSend(v14, "transactionWithBlock:", v16, swift_release(v36).n128_f64[0]);
      v17 = &ELSEventTypeUploadConsentApprovedCellular;
    }
    else
    {
      v14 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
      v19 = swift_allocObject(&unk_100138B38, 41, 7);
      *(_QWORD *)(v19 + 16) = 6;
      *(_BYTE *)(v19 + 24) = 0;
      *(_QWORD *)(v19 + 32) = 0;
      *(_BYTE *)(v19 + 40) = 0;
      v35 = sub_100080B80;
      v36 = v19;
      aBlock = _NSConcreteStackBlock;
      v32 = 1107296256;
      v33 = sub_100040808;
      v34 = &unk_100138B50;
      v16 = _Block_copy(&aBlock);
      objc_msgSend(v14, "transactionWithBlock:", v16, swift_release(v36).n128_f64[0]);
      v17 = &ELSEventTypeUploadConsentDenied;
    }
  }
  else
  {
    v14 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
    v18 = swift_allocObject(&unk_100138AE8, 41, 7);
    *(_QWORD *)(v18 + 16) = 5;
    *(_BYTE *)(v18 + 24) = 0;
    *(_QWORD *)(v18 + 32) = 2;
    *(_BYTE *)(v18 + 40) = 0;
    v35 = sub_100080B80;
    v36 = v18;
    aBlock = _NSConcreteStackBlock;
    v32 = 1107296256;
    v33 = sub_100040808;
    v34 = &unk_100138B00;
    v16 = _Block_copy(&aBlock);
    objc_msgSend(v14, "transactionWithBlock:", v16, swift_release(v36).n128_f64[0]);
    v17 = &ELSEventTypeUploadConsentApproved;
  }
  _Block_release(v16);

  v20 = objc_msgSend((id)objc_opt_self(ELSEvent), "createLoggingEventWith:", *v17);
  v21 = (void *)sub_10007EF68(v20);
  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v22 = type metadata accessor for ModalPresentationCoordinator(0);
  v23 = sub_100036D34(v22, (uint64_t)qword_1001723D0);
  swift_beginAccess(v23, &aBlock, 33, 0);
  if ((sub_1000C65B4(v21, 1, 0, 1, 0, 0) & 1) == 0)
  {
    v24 = *(_QWORD *)(v23 + *(int *)(v22 + 24));
    v25 = v21;
    v26 = swift_bridgeObjectRetain(v24);
    v27 = sub_1000C8C58(v26, v25);

    sub_1000C4E10(v27, (uint64_t)v9);
    v28 = swift_release(v27);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v11 + 48))(v9, 1, v10, v28) == 1)
    {
      sub_100036FA0((uint64_t)v9, (uint64_t *)&unk_10016AE90);
    }
    else
    {
      sub_100036D7C((uint64_t)v9, (uint64_t)v13);
      sub_1000A7860((uint64_t)v13, (uint64_t)v7);
      sub_100036FA0((uint64_t)v7, (uint64_t *)&unk_10016AE90);
      sub_100036DC0((uint64_t)v13);
    }
  }
  swift_endAccess(&aBlock);

  v29 = *(void **)(a2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController) = 0;

}

void sub_100080390()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  unint64_t v8;
  Swift::Int v9;
  const char *v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  SEL v21;
  id v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  SEL v28;
  id v29;
  int v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  _QWORD v36[9];

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "delegate");

  if (v1)
  {
    v2 = type metadata accessor for AppDelegate();
    v3 = swift_dynamicCastClass(v1, v2);
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
      v6 = objc_msgSend(v5, "snapshot");

      v7 = objc_msgSend(v6, "status");
      if (v7 == (id)4)
      {
        v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions);
        *(_QWORD *)(v4 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions) = 0;
        if (v8)
        {
          if (!*(_QWORD *)(v8 + 16)
            || (Hasher.init(_seed:)(v36, *(_QWORD *)(v8 + 40)),
                String.hash(into:)(v36, 0x776569766572, 0xE600000000000000),
                v9 = Hasher._finalize()(),
                v17 = -1 << *(_BYTE *)(v8 + 32),
                v18 = v9 & ~v17,
                ((*(_QWORD *)(v8 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0))
          {
LABEL_11:
            swift_unknownObjectRelease(v1);
            swift_bridgeObjectRelease((DARootViewController *)v8, v28, v29, v30, v31, v32, v33, v34);
            return;
          }
          v19 = ~v17;
          while (*(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) != 1)
          {
            v20 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, 0x776569766572, 0xE600000000000000, 0);
            swift_bridgeObjectRelease((DARootViewController *)0xE000000000000000, v21, v22, v23, v24, v25, v26, v27);
            if ((v20 & 1) != 0)
              goto LABEL_14;
            v18 = (v18 + 1) & v19;
            if (((*(_QWORD *)(v8 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
              goto LABEL_11;
          }
          swift_bridgeObjectRelease((DARootViewController *)v8, v10, v11, v12, v13, v14, v15, v16);
          v8 = 0xE600000000000000;
LABEL_14:
          swift_bridgeObjectRelease((DARootViewController *)v8, v10, v11, v12, v13, v14, v15, v16);
          v35 = sub_10007EF68();
          objc_msgSend(v35, "scheduleModalPresentationWithPriority:animated:presentationCompletion:", 0, 1, 0);

        }
      }
    }
    swift_unknownObjectRelease(v1);
  }
}

id sub_10008067C(uint64_t a1, uint64_t a2, DARootViewController *a3)
{
  char *v3;
  NSString v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  objc_super v16;

  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_formSheetXScaleMultiplier] = 0x3FF0000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_formSheetYScaleMultiplier] = 0x3FF3333333333333;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_viewQueue] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollFinishedPrompt] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentRunningPrompt] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentFinishedPrompt] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUploadingPrompt] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController] = 0;
  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v7, v8, v9, v10, v11, v12, v13);
  }
  else
  {
    v6 = 0;
  }
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for CardViewPersistentCell();
  v14 = objc_msgSendSuper2(&v16, "initWithStyle:reuseIdentifier:", a1, v6);

  return v14;
}

id sub_1000807E8(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_formSheetXScaleMultiplier] = 0x3FF0000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_formSheetYScaleMultiplier] = 0x3FF3333333333333;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_viewQueue] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollFinishedPrompt] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentRunningPrompt] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentFinishedPrompt] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUploadingPrompt] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CardViewPersistentCell();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

void sub_1000808FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_viewQueue));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollFinishedPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentRunningPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentFinishedPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUploadingPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController));

}

id sub_1000809A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardViewPersistentCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CardViewPersistentCell()
{
  return objc_opt_self(_TtC11Diagnostics22CardViewPersistentCell);
}

uint64_t sub_100080AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4(&qword_10016BCA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100080AF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C720;
  if (!qword_10016C720)
  {
    v1 = sub_100035D30(&qword_10016C6F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Measurement<A><>.FormatStyle, v1);
    atomic_store(result, (unint64_t *)&qword_10016C720);
  }
  return result;
}

uint64_t sub_100080B44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100080B68(char a1)
{
  uint64_t v1;

  sub_10007FF14(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100080B70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100080B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100080B94(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100080B9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100080BAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100080BBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100080BE8()
{
  uint64_t v0;

  sub_10007F6F4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100080BF0()
{
  uint64_t v0;

  sub_10007FA4C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100080BF8()
{
  uint64_t v0;

  sub_10007FAE8(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100080C00()
{
  uint64_t v0;

  sub_10007F78C(*(_QWORD *)(v0 + 16));
}

void sub_100080C08(uint64_t a1)
{
  uint64_t v1;

  sub_10007FBAC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100080C10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100080C20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100080C30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

void sub_100080C40()
{
  id v0;

  v0 = sub_10007EF68();
  objc_msgSend(v0, "scheduleModalPresentationWithPriority:animated:presentationCompletion:", 0, 1, 0);

}

void sub_100080C88(uint64_t a1)
{
  uint64_t v1;

  sub_10007DD00(a1, *(void **)(v1 + 16));
}

void sub_100080C90(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  SEL v12;
  id v13;
  int v14;
  id v15;
  id v16;
  id v17;
  id v18;
  SEL v19;
  id v20;
  int v21;
  id v22;
  id v23;
  id v24;
  id v25;
  Swift::Int v26;
  Swift::Int v27;
  uint64_t v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  SEL v37;
  id v38;
  int v39;
  id v40;
  id v41;
  id v42;
  id v43;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = a1;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      v6 = -v5;
      if (!__OFSUB__(0, v5))
        goto LABEL_4;
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  if (v2 < 0)
    v36 = v2;
  else
    v36 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease((DARootViewController *)v2, v37, v38, v39, v40, v41, v42, v43);
  v6 = -v5;
  if (__OFSUB__(0, v5))
    goto LABEL_33;
LABEL_4:
  v7 = -v3;
  if (v6 > 0 || v6 <= v7)
  {
    v8 = v5 - v3;
    if (__OFADD__(v5, v7))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v8 < 0)
    {
LABEL_37:
      __break(1u);
      return;
    }
    if (!v4)
      goto LABEL_7;
  }
  else
  {
    v8 = 0;
    if (!v4)
    {
LABEL_7:
      v9 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_16;
    }
  }
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease((DARootViewController *)v2, v12, v13, v14, v15, v16, v17, v18);
  if (v11 < 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  swift_bridgeObjectRetain(v2);
  v9 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease((DARootViewController *)v2, v19, v20, v21, v22, v23, v24, v25);
LABEL_16:
  if (v9 < v8)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if ((v2 & 0xC000000000000001) != 0 && v8)
  {
    sub_100037118(0, (unint64_t *)&qword_10016D860, UIView_ptr);
    v26 = 0;
    do
    {
      v27 = v26 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v26);
      v26 = v27;
    }
    while (v8 != v27);
  }
  if (v4)
  {
    if (v2 < 0)
      v28 = v2;
    else
      v28 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    _CocoaArrayWrapper.subscript.getter(0, v8, v28);
    swift_bridgeObjectRelease((DARootViewController *)v2, v29, v30, v31, v32, v33, v34, v35);
  }
  else
  {
    swift_bridgeObjectRetain(v2);
  }
}

uint64_t destroy for LaunchURL(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[4]);
}

uint64_t *initializeWithCopy for LaunchURL(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[4];
  a1[4] = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t *assignWithCopy for LaunchURL(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a1[4];
  v11 = a2[4];
  a1[4] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v10);
  return a1;
}

_QWORD *assignWithTake for LaunchURL(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(a1[3]);
  v5 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchURL(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LaunchURL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchURL()
{
  return &type metadata for LaunchURL;
}

uint64_t storeEnumTagSinglePayload for LaunchURL.EnhancedLoggingStateAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10008111C + 4 * byte_10010D6A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100081150 + 4 * byte_10010D6A0[v4]))();
}

uint64_t sub_100081150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100081158(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100081160);
  return result;
}

uint64_t sub_10008116C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100081174);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100081178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100081180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchURL.EnhancedLoggingStateAction()
{
  return &type metadata for LaunchURL.EnhancedLoggingStateAction;
}

uint64_t sub_10008119C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x776569766572;
  else
    v3 = 0;
  if (v2)
    v4 = 0xE000000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x776569766572;
  else
    v5 = 0;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE000000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10008122C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x2265746F6D655222;
  else
    v3 = 0x746C756166654422;
  if (v2)
    v4 = 0xE900000000000022;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x2265746F6D655222;
  else
    v5 = 0x746C756166654422;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE900000000000022;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1000812D4(char *a1, char *a2)
{
  return sub_10008119C(*a1, *a2);
}

Swift::Int sub_1000812E0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x776569766572;
  else
    v2 = 0;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE000000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10008134C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x776569766572;
  else
    v2 = 0;
  if (*v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE000000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100081394(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x776569766572;
  else
    v3 = 0;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE000000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1000813FC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100133C78, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100081458(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x776569766572;
  if (!*v1)
    v2 = 0;
  v3 = 0xE000000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_100081488()
{
  unint64_t result;

  result = qword_10016C738;
  if (!qword_10016C738)
  {
    result = swift_getWitnessTable(&unk_10010D754, &type metadata for LaunchURL.EnhancedLoggingStateAction);
    atomic_store(result, (unint64_t *)&qword_10016C738);
  }
  return result;
}

uint64_t sub_1000814CC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17[2];
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    sub_1000582D0(*v11, v13);
    sub_1000A8CDC(v17, v12, v13);
    result = sub_100058234(v17[0], v17[1]);
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release(v2);
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10008164C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  DARootViewController *v12;
  uint64_t v13;
  DARootViewController *v14;
  Swift::String v15;
  Swift::Int v16;
  SEL v17;
  id v18;
  int v19;
  id v20;
  id v21;
  id v22;
  id v23;
  const char *v24;
  void *v25;
  int v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  DARootViewController *v32;
  uint64_t v33;
  int v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  DARootViewController *v39;
  char v40;
  SEL v41;
  id v42;
  int v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  DARootViewController *v49;
  char v50;
  void *v51;

  v2 = type metadata accessor for URLQueryItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = &_swiftEmptySetSingleton;
  v51 = &_swiftEmptySetSingleton;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v49 = (DARootViewController *)a1;
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      v31 = v10(v5, v8, v2);
      v33 = URLQueryItem.name.getter(v31);
      v39 = v32;
      if (v33 == 0x697463612D736C65 && v32 == (DARootViewController *)0xEA00000000006E6FLL)
        break;
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(0x697463612D736C65, 0xEA00000000006E6FLL, v33, v32, 0);
      swift_bridgeObjectRelease(v39, v41, v42, v43, v44, v45, v46, v47);
      if ((v40 & 1) != 0)
        goto LABEL_4;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v8 += v9;
      if (!--v7)
      {
        swift_bridgeObjectRelease(v49, v24, v25, v26, v27, v28, v29, v30);
        return v51;
      }
    }
    swift_bridgeObjectRelease((DARootViewController *)0xEA00000000006E6FLL, (SEL)0xEA00000000006E6FLL, (id)0x697463612D736C65, v34, v35, v36, v37, v38);
LABEL_4:
    v11 = URLQueryItem.value.getter();
    if (v12)
      v13 = v11;
    else
      v13 = 0;
    if (v12)
      v14 = v12;
    else
      v14 = (DARootViewController *)0xE000000000000000;
    v15._countAndFlagsBits = v13;
    v15._object = v14;
    v16 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100133CC8, v15);
    swift_bridgeObjectRelease(v14, v17, v18, v19, v20, v21, v22, v23);
    sub_1000A96F0(&v50, v16 == 1);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_100081804(uint64_t a1, DARootViewController *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  DARootViewController *v14;
  DARootViewController *v15;
  void (*v16)(char *, uint64_t);
  const char *v17;
  void *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  _QWORD v29[2];

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v29 - v9;
  v11 = CharacterSet.init(charactersIn:)(0xD000000000000016, 0x80000001001166B0);
  v29[0] = a1;
  v29[1] = a2;
  CharacterSet.inverted.getter(v11);
  v12 = sub_10003F14C();
  v13 = StringProtocol.trimmingCharacters(in:)(v8, &type metadata for String, v12);
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  if (((unint64_t)v15 & 0x1000000000000000) != 0)
  {
    if (String.UTF8View._foreignCount()() <= 8)
      goto LABEL_6;
LABEL_16:
    v27 = 0;
    goto LABEL_17;
  }
  if (((unint64_t)v15 & 0x2000000000000000) != 0)
    v24 = ((unint64_t)v15 >> 56) & 0xF;
  else
    v24 = v13 & 0xFFFFFFFFFFFFLL;
  if (v24 > 8)
    goto LABEL_16;
LABEL_6:
  v25 = v13 & 0xFFFFFFFFFFFFLL;
  if (((unint64_t)v15 & 0x2000000000000000) != 0)
    v25 = ((unint64_t)v15 >> 56) & 0xF;
  if (!v25)
    goto LABEL_16;
  if (v13 == a1 && v15 == a2)
  {
    v27 = 1;
    v15 = a2;
  }
  else
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, a1, a2, 0);
  }
LABEL_17:
  swift_bridgeObjectRelease(v15, v17, v18, v19, v20, v21, v22, v23);
  v16(v10, v4);
  return v27 & 1;
}

void *sub_100081990(uint64_t a1, DARootViewController *a2)
{
  id v3;
  NSString v4;
  SEL v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  __int16 v13;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;

  v16 = &_swiftEmptySetSingleton;
  v3 = objc_allocWithZone((Class)NSScanner);
  swift_bridgeObjectRetain(a2);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2, v5, v6, v7, v8, v9, v10, v11);
  v12 = objc_msgSend(v3, "initWithString:", v4);

  v15 = 0;
  objc_msgSend(v12, "scanHexLongLong:", &v15);
  v13 = v15;
  if ((v15 & 1) != 0)
  {
    sub_1000A8CDC(&v17, 0, 0);
    sub_100058234(v17, v18);
    if ((v13 & 2) == 0)
    {
LABEL_3:
      if ((v13 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_3;
  }
  sub_1000A8CDC(&v17, 0, 1uLL);
  sub_100058234(v17, v18);
  if ((v13 & 4) == 0)
  {
LABEL_4:
    if ((v13 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  sub_1000A8CDC(&v17, 0, 2uLL);
  sub_100058234(v17, v18);
  if ((v13 & 8) == 0)
  {
LABEL_5:
    if ((v13 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  sub_1000A8CDC(&v17, 0, 3uLL);
  sub_100058234(v17, v18);
  if ((v13 & 0x10) == 0)
  {
LABEL_6:
    if ((v13 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  sub_1000A8CDC(&v17, 0, 4uLL);
  sub_100058234(v17, v18);
  if ((v13 & 0x20) == 0)
  {
LABEL_7:
    if ((v13 & 0x80) == 0)
      goto LABEL_8;
LABEL_16:
    sub_1000A8CDC(&v17, 0, 7uLL);
    sub_100058234(v17, v18);
    if ((v13 & 0x100) == 0)
      goto LABEL_9;
LABEL_17:
    sub_1000A8CDC(&v17, 0, 8uLL);

    sub_100058234(v17, v18);
    return v16;
  }
LABEL_15:
  sub_1000A8CDC(&v17, 0, 5uLL);
  sub_100058234(v17, v18);
  if ((v13 & 0x80) != 0)
    goto LABEL_16;
LABEL_8:
  if ((v13 & 0x100) != 0)
    goto LABEL_17;
LABEL_9:

  return v16;
}

void sub_100081B8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  DARootViewController *v14;
  const char *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  unint64_t v22;
  DARootViewController *v23;
  unint64_t v24;
  const char *v25;
  void *v26;
  int v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  DARootViewController *v35;
  void *v36;
  int v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  DARootViewController *v42;
  char v43;
  SEL v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  DARootViewController *v52;
  DARootViewController *v53;
  unint64_t v54;
  uint64_t v55;
  SEL v56;
  id v57;
  int v58;
  id v59;
  id v60;
  id v61;
  id v62;
  const char *v63;
  void *v64;
  int v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  unint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  SEL v72;
  id v73;
  int v74;
  id v75;
  id v76;
  id v77;
  id v78;
  const char *v79;
  void *v80;
  int v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  DARootViewController *v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  Swift::Int v91;
  const char *v92;
  void *v93;
  int v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  uint64_t v99;
  unint64_t v100;
  unsigned __int8 *remoteCardFilter;
  uint64_t v102;
  DARootViewController *v103;
  uint64_t *v104;
  uint64_t v105;
  unint64_t v106;
  Swift::Int v107;
  Swift::Int v108;
  uint64_t v109;
  char *v110;
  DARootViewController *v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  _QWORD v121[9];
  _QWORD v122[3];

  v2 = type metadata accessor for URLQueryItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100035CA4(&qword_10016C740);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v109 - v10;
  URLComponents.init(url:resolvingAgainstBaseURL:)(a1, 0);
  v110 = v11;
  sub_100082398((uint64_t)v11, (uint64_t)v9);
  v12 = type metadata accessor for URLComponents(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
  {
    sub_100082358((uint64_t)v9);
LABEL_35:
    sub_100082358((uint64_t)v110);
    return;
  }
  v115 = v3;
  v116 = v5;
  v14 = (DARootViewController *)URLComponents.queryItems.getter();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  if (!v14)
    goto LABEL_35;
  v113 = *(_QWORD *)v14->remoteCardFilter;
  if (!v113)
  {
    swift_bridgeObjectRelease(v14, v15, v16, v17, v18, v19, v20, v21);
    goto LABEL_35;
  }
  v22 = 0;
  v112 = (char *)v14 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
  v23 = (DARootViewController *)&_swiftEmptySetSingleton;
  v109 = v2;
  v111 = v14;
  while (v22 < *(_QWORD *)v14->remoteCardFilter)
  {
    v32 = *(_QWORD *)(v115 + 72);
    v114 = v22;
    v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v115 + 16))(v116, &v112[v32 * v22], v2);
    v34 = URLQueryItem.name.getter(v33);
    v42 = v35;
    if (v34 == 25705 && v35 == (DARootViewController *)0xE200000000000000)
    {
      swift_bridgeObjectRelease((DARootViewController *)0xE200000000000000, (SEL)0xE200000000000000, v36, v37, v38, v39, v40, v41);
    }
    else
    {
      v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, 25705, 0xE200000000000000, 0);
      swift_bridgeObjectRelease(v42, v44, v45, v46, v47, v48, v49, v50);
      if ((v43 & 1) == 0)
        goto LABEL_7;
    }
    v51 = URLQueryItem.value.getter();
    if (v52)
    {
      v53 = v52;
      v121[0] = v51;
      v121[1] = v52;
      v122[0] = 44;
      v122[1] = 0xE100000000000000;
      v54 = sub_10003F14C();
      v55 = StringProtocol.components<A>(separatedBy:)(v122, &type metadata for String, &type metadata for String, v54, v54);
      swift_bridgeObjectRelease(v53, v56, v57, v58, v59, v60, v61, v62);
      v119 = *(_QWORD *)(v55 + 16);
      if (v119)
      {
        v70 = 0;
        v117 = v55;
        v118 = v55 + 32;
        while (v70 < *(_QWORD *)(v55 + 16))
        {
          v87 = (uint64_t *)(v118 + 16 * v70);
          v89 = *v87;
          v88 = v87[1];
          v90 = HIBYTE(v88) & 0xF;
          if ((v88 & 0x2000000000000000) == 0)
            v90 = v89 & 0xFFFFFFFFFFFFLL;
          if (v90)
          {
            v120 = v70;
            Hasher.init(_seed:)(v121, v23[1].super.super.super.super.isa);
            swift_bridgeObjectRetain(v88);
            swift_bridgeObjectRetain(v23);
            String.hash(into:)(v121, v89, v88);
            v91 = Hasher._finalize()();
            v99 = -1 << v23->remoteCardFilter[16];
            v100 = v91 & ~v99;
            remoteCardFilter = v23[1].remoteCardFilter;
            if (((*(_QWORD *)&v23[1].remoteCardFilter[(v100 >> 3) & 0xFFFFFFFFFFFFF8] >> v100) & 1) != 0)
            {
              v102 = ~v99;
              v103 = v23;
              while (1)
              {
                v104 = (uint64_t *)(*(_QWORD *)v23[1].responder + 16 * v100);
                v105 = *v104;
                v106 = v104[1];
                Hasher.init(_seed:)(v121, 0);
                if (v106 >= 9)
                {
                  swift_bridgeObjectRetain(v106);
                  String.hash(into:)(v121, v105, v106);
                }
                else
                {
                  Hasher._combine(_:)(qword_10010D780[v106]);
                  sub_1000582D0(v105, v106);
                }
                v107 = Hasher._finalize()();
                Hasher.init(_seed:)(v121, 0);
                String.hash(into:)(v121, v89, v88);
                v108 = Hasher._finalize()();
                sub_100058234(v105, v106);
                if (v107 == v108)
                  break;
                v100 = (v100 + 1) & v102;
                v23 = v103;
                if (((*(_QWORD *)&remoteCardFilter[(v100 >> 3) & 0xFFFFFFFFFFFFF8] >> v100) & 1) == 0)
                  goto LABEL_16;
              }
              swift_bridgeObjectRelease((DARootViewController *)v88, v92, v93, v94, v95, v96, v97, v98);
              v23 = v103;
              v86 = v103;
            }
            else
            {
LABEL_16:
              swift_bridgeObjectRelease(v23, v92, v93, v94, v95, v96, v97, v98);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v23);
              v121[0] = v23;
              swift_bridgeObjectRetain(v88);
              sub_1000AB9B8(v89, v88, v100, isUniquelyReferenced_nonNull_native);
              v23 = (DARootViewController *)v121[0];
              swift_bridgeObjectRelease((DARootViewController *)v88, v72, v73, v74, v75, v76, v77, v78);
              v86 = (DARootViewController *)0x8000000000000000;
            }
            swift_bridgeObjectRelease(v86, v79, v80, v81, v82, v83, v84, v85);
            v55 = v117;
            v70 = v120;
          }
          if (++v70 == v119)
          {
            swift_bridgeObjectRelease((DARootViewController *)v55, v63, v64, v65, v66, v67, v68, v69);
            v2 = v109;
            goto LABEL_7;
          }
        }
        __break(1u);
        break;
      }
      swift_bridgeObjectRelease((DARootViewController *)v55, v63, v64, v65, v66, v67, v68, v69);
    }
LABEL_7:
    v24 = v114 + 1;
    (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v2);
    v22 = v24;
    v14 = v111;
    if (v24 == v113)
    {
      swift_bridgeObjectRelease(v111, v25, v26, v27, v28, v29, v30, v31);
      goto LABEL_35;
    }
  }
  __break(1u);
}

DARootViewController *sub_100082054@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  DARootViewController *v14;
  uint64_t v15;
  uint64_t v16;
  DARootViewController *v17;
  void *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  DARootViewController *v26;
  SEL v27;
  id v28;
  int v29;
  id v30;
  id v31;
  id v32;
  id v33;
  SEL v34;
  id v35;
  int v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  SEL v43;
  id v44;
  int v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  DARootViewController *result;
  DARootViewController *v52;
  DARootViewController *v53;
  uint64_t v54;
  SEL v55;
  id v56;
  int v57;
  id v58;
  id v59;
  id v60;
  id v61;
  const char *v62;
  void *v63;
  int v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  uint64_t v70;
  unint64_t v71;
  SEL v72;
  id v73;
  int v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  DARootViewController *v80;
  DARootViewController *v81;
  uint64_t v82;
  SEL v83;
  id v84;
  int v85;
  id v86;
  id v87;
  id v88;
  id v89;
  const char *v90;
  void *v91;
  int v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v4 = sub_100035CA4(&qword_10016C740);
  __chkstk_darwin(v4);
  v6 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URLComponents(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)(a1, 1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v11 = sub_100082358((uint64_t)v6);
    v12 = 0;
    v13 = 0;
    v14 = 0;
    goto LABEL_15;
  }
  v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v16 = URLComponents.host.getter(v15);
  v14 = v17;
  if (v17)
  {
    v13 = v16;
    v24 = ((unint64_t)v17 >> 56) & 0xF;
    if (((unint64_t)v17 & 0x2000000000000000) == 0)
      v24 = v16 & 0xFFFFFFFFFFFFLL;
    if (!v24)
    {
      swift_bridgeObjectRelease(v17, (SEL)v17, v18, v19, v20, v21, v22, v23);
      v13 = 0;
      v14 = 0;
    }
    v25 = URLComponents.queryItems.getter(v16);
    if (v25)
      goto LABEL_9;
LABEL_12:
    v11 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_14;
  }
  v13 = 0;
  v25 = URLComponents.queryItems.getter(v16);
  if (!v25)
    goto LABEL_12;
LABEL_9:
  v26 = (DARootViewController *)v25;
  if (*(_QWORD *)(v25 + 16))
  {
    v12 = sub_10008164C(v25);
    swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
    v11 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_bridgeObjectRelease(v26, v34, v35, v36, v37, v38, v39, v40);
LABEL_14:
  v12 = 0;
LABEL_15:
  v41 = URL.pathComponents.getter(v11);
  v42 = *(_QWORD *)(v41 + 16);
  swift_bridgeObjectRelease((DARootViewController *)v41, v43, v44, v45, v46, v47, v48, v49);
  if (v42 < 3)
  {
    v69 = &_swiftEmptySetSingleton;
  }
  else
  {
    result = (DARootViewController *)URL.pathComponents.getter(v50);
    if (*(_QWORD *)result->remoteCardFilter < 3uLL)
    {
      __break(1u);
      goto LABEL_31;
    }
    v52 = result;
    v54 = *(_QWORD *)&result[1].remoteCardFilter[8];
    v53 = *(DARootViewController **)&result[1].remoteCardFilter[16];
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRelease(v52, v55, v56, v57, v58, v59, v60, v61);
    if ((sub_100081804(v54, v53) & 1) != 0)
      v69 = sub_100081990(v54, v53);
    else
      v69 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v53, v62, v63, v64, v65, v66, v67, v68);
  }
  v70 = URL.pathComponents.getter(v50);
  v71 = *(_QWORD *)(v70 + 16);
  swift_bridgeObjectRelease((DARootViewController *)v70, v72, v73, v74, v75, v76, v77, v78);
  if (v71 < 2)
  {
    v97 = &_swiftEmptySetSingleton;
LABEL_29:
    sub_100081B8C(a1);
    v99 = sub_1000814CC(v98, (uint64_t)v97);
    v100 = type metadata accessor for URL(0);
    result = (DARootViewController *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 8))(a1, v100);
    *a2 = v69;
    a2[1] = v99;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v12;
    return result;
  }
  result = (DARootViewController *)URL.pathComponents.getter(v79);
  if (*(_QWORD *)result->remoteCardFilter >= 2uLL)
  {
    v80 = result;
    v82 = *(_QWORD *)result[1].responder;
    v81 = *(DARootViewController **)result[1].remoteCardFilter;
    swift_bridgeObjectRetain(v81);
    swift_bridgeObjectRelease(v80, v83, v84, v85, v86, v87, v88, v89);
    if ((sub_100081804(v82, v81) & 1) != 0)
      v97 = sub_100081990(v82, v81);
    else
      v97 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v81, v90, v91, v92, v93, v94, v95, v96);
    goto LABEL_29;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100082358(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100035CA4(&qword_10016C740);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100082398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4(&qword_10016C740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1000823E0(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  NSString v22;
  id v23;
  id v24;
  objc_super v26;

  v3 = OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableView;
  v4 = objc_allocWithZone((Class)type metadata accessor for IntrinsicSizeAdjustingTableView());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithFrame:style:", 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableViewHorizontalPadding] = 0x4034000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableViewVerticalPadding] = 0x403A000000000000;
  v5[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_hidesBackButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_suiteManager] = a1;
  v6 = a1;

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v9 = v8;
  sub_10003FFA0(v7, v8, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000016, (void *)0x8000000100116770);
  v11 = v10;
  swift_bridgeObjectRelease(v9);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v13 = sub_10004016C(0xD000000000000019, 0x8000000100116790);
  v15 = v14;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
  v18 = v17;
  sub_10003FFA0(v16, v17, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v13, v15);
  v20 = v19;
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v18);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v22);

  v26.receiver = v5;
  v26.super_class = (Class)type metadata accessor for SelfServiceSuitePickerViewController();
  v24 = objc_msgSendSuper2(&v26, "initWithTitle:detailText:icon:contentLayout:", v12, v21, v23, 3);

  return v24;
}

void sub_1000826A8()
{
  char *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  NSString v6;
  id v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_suiteManager];
  objc_msgSend(v1, "setDataSource:", v2);
  objc_msgSend(v1, "setDelegate:", v2);
  objc_msgSend(v1, "setSeparatorStyle:", 0);
  objc_msgSend(v1, "setShowsVerticalScrollIndicator:", 0);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v3);

  objc_msgSend(v1, "setScrollEnabled:", 0);
  objc_msgSend(v1, "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(v1, "setEstimatedRowHeight:", 300.0);
  v4 = type metadata accessor for SelfServiceViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v6);

  v7 = objc_msgSend(v0, "scrollView");
  objc_msgSend(v7, "setShowsVerticalScrollIndicator:", 0);

}

id sub_100082854()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  Class isa;
  SEL v24;
  id v25;
  int v26;
  id v27;
  id v28;
  id v29;
  id v30;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10010BF30;
  v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableView];
  v6 = objc_msgSend(v5, "leadingAnchor");
  v7 = objc_msgSend(v1, "contentView");
  v8 = objc_msgSend(v7, "leadingAnchor");

  v9 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v8, 20.0);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v5, "trailingAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "trailingAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v12, -20.0);
  *(_QWORD *)(v4 + 40) = v13;
  v14 = objc_msgSend(v5, "topAnchor");
  v15 = objc_msgSend(v1, "contentView");
  v16 = objc_msgSend(v15, "topAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v16, 26.0);
  *(_QWORD *)(v4 + 48) = v17;
  v18 = objc_msgSend(v5, "bottomAnchor");
  v19 = objc_msgSend(v1, "contentView");
  v20 = objc_msgSend(v19, "bottomAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v4 + 56) = v21;
  specialized Array._endMutation()(v22);
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v4, v24, v25, v26, v27, v28, v29, v30);
  objc_msgSend(v2, "activateConstraints:", isa);

  return objc_msgSend(v5, "invalidateIntrinsicContentSize");
}

void sub_100082CAC()
{
  uint64_t v0;

}

id sub_100082CD8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceSuitePickerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SelfServiceSuitePickerViewController()
{
  return objc_opt_self(_TtC11Diagnostics36SelfServiceSuitePickerViewController);
}

uint64_t sub_100082D60(char *a1, void *a2)
{
  void *v2;
  _QWORD *v5;
  void *v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  DARootViewController *v24;
  id v25;
  void *v26;
  SEL v27;
  id v28;
  int v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  DARootViewController *v37;
  DARootViewController *v38;
  char *v39;
  id v40;
  SEL v41;
  id v42;
  int v43;
  id v44;
  id v45;
  id v46;
  id v47;
  char *v48;
  id v49;
  char *v50;
  id v51;
  char *v52;
  id v53;
  char *v54;
  id v55;
  id v56;
  char *v57;
  id v58;
  id v59;
  char *v60;
  id v61;
  id v62;
  void *v64;
  id v65;
  DARootViewController *v66;
  id v67;
  void *v68;
  SEL v69;
  id v70;
  int v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  DARootViewController *v79;
  DARootViewController *v80;
  SEL v81;
  id v82;
  int v83;
  id v84;
  id v85;
  id v86;
  id v87;
  char *v88;
  id v89;
  uint64_t v90;
  void *v91;

  v5 = (_QWORD *)swift_allocObject(&unk_100139050, 40, 7);
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = v2;
  v6 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (!v6)
  {
    v48 = a1;
    v49 = a2;
    v50 = v48;
    v51 = v49;
    v52 = v50;
    v53 = v51;
    v54 = v52;
    v55 = v53;
    v56 = v2;
    swift_retain_n(v5, 3);
    v57 = v54;
    v58 = v55;
    v59 = v56;
    v60 = v57;
    v61 = v58;
    v62 = v59;
LABEL_7:
    swift_retain_n(v5, 3);
LABEL_8:
    sub_100083190(0, 1, a1, a2, v2);

    swift_release_n(v5, 2);
    goto LABEL_9;
  }
  v90 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  v7 = a1;
  v8 = a2;
  v9 = v7;
  v10 = v8;
  v11 = v9;
  v12 = v10;
  v13 = v11;
  v14 = v12;
  v91 = v2;
  v15 = v2;
  swift_retain_n(v5, 3);
  v16 = v13;
  v17 = v14;
  v18 = v15;
  v19 = v16;
  v20 = v17;
  v21 = v18;
  v22 = objc_msgSend(v6, "suitesAvailable");
  v23 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
  v24 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

  v25 = v20;
  v26 = sub_100083CF0((uint64_t)v24);
  swift_bridgeObjectRelease(v24, v27, v28, v29, v30, v31, v32, v33);

  if (v26)
  {
    if (qword_10016A6C8 != -1)
      swift_once(&qword_10016A6C8, sub_1000A66DC);
    v34 = qword_1001723C0;
    v35 = objc_msgSend(v26, "secondaryAssetLocator");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;

    v39 = v19;
    v40 = v25;
    swift_retain(v5);
    sub_1000B0B4C(v36, (unint64_t)v38, v34, v39, v40, (void (*)(_QWORD, uint64_t))sub_100083CE4, (uint64_t)v5);

    swift_bridgeObjectRelease(v38, v41, v42, v43, v44, v45, v46, v47);
    v2 = v91;
    goto LABEL_9;
  }
  v88 = v19;
  v2 = v91;
  v64 = *(void **)&a1[v90];
  if (!v64)
    goto LABEL_7;
  swift_retain_n(v5, 3);
  v65 = objc_msgSend(v64, "suitesAvailable");
  v66 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v65, v23);

  v67 = v25;
  v68 = sub_100083CF0((uint64_t)v66);
  swift_bridgeObjectRelease(v66, v69, v70, v71, v72, v73, v74, v75);

  if (!v68)
    goto LABEL_8;
  if (qword_10016A6C8 != -1)
    swift_once(&qword_10016A6C8, sub_1000A66DC);
  v76 = qword_1001723C0;
  v77 = objc_msgSend(v68, "primaryAssetLocator", v88);
  v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
  v80 = v79;

  swift_retain(v5);
  sub_1000B0854(v78, (unint64_t)v80, v76, (void (*)(_QWORD, uint64_t))sub_100083CE4, (uint64_t)v5);

  swift_bridgeObjectRelease(v80, v81, v82, v83, v84, v85, v86, v87);
  swift_release_n(v5, 3);
  v2 = v91;
LABEL_9:

  return swift_release_n(v5, 5);
}

uint64_t sub_100083190(void *a1, char a2, void *a3, void *a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  __n128 v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[5];
  uint64_t v35;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v13 - 8);
  v32 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_100139078, 49, 7);
  *(_QWORD *)(v18 + 16) = a3;
  *(_QWORD *)(v18 + 24) = a4;
  *(_QWORD *)(v18 + 32) = a1;
  *(_QWORD *)(v18 + 40) = a5;
  *(_BYTE *)(v18 + 48) = a2;
  aBlock[4] = sub_100084020;
  v35 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100139090;
  v19 = _Block_copy(aBlock);
  v20 = v35;
  v21 = a1;
  v22 = a5;
  v23 = a3;
  v24 = a4;
  v25 = swift_release(v20);
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v26 = sub_100035C5C();
  v27 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v28 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v10, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v15, v32);
}

void sub_100083394(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  DARootViewController *v11;
  id v12;
  void *v13;
  SEL v14;
  id v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  DARootViewController *v26;
  id v27;
  void *v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  DARootViewController *v38;
  DARootViewController *v39;
  void *v40;
  id v41;
  DARootViewController *v42;
  id v43;
  void *v44;
  SEL v45;
  id v46;
  int v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  DARootViewController *v58;
  DARootViewController *v59;
  uint64_t v60;
  const char *v61;
  void *v62;
  int v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  DARootViewController *v69;
  DARootViewController *v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  DARootViewController *v74;
  id v75;
  int v76;
  id v77;
  id v78;
  id v79;
  id v80;
  SEL v81;
  id v82;
  int v83;
  id v84;
  id v85;
  id v86;
  id v87;
  DARootViewController *v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  id v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v100;

  v7 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  v8 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (!v8)
  {
    v54 = a2;
    v55 = 0;
    v53 = 0;
    v96 = 0;
    v39 = (DARootViewController *)0xE000000000000000;
    v88 = (DARootViewController *)0xE000000000000000;
    v74 = (DARootViewController *)0xE000000000000000;
    v52 = a4;
    goto LABEL_21;
  }
  v9 = objc_msgSend(v8, "suitesAvailable");
  v10 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
  v11 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  v12 = a2;
  v13 = sub_100083CF0((uint64_t)v11);
  swift_bridgeObjectRelease(v11, v14, v15, v16, v17, v18, v19, v20);

  if (v13)
  {
    v21 = objc_msgSend(v13, "suiteNameLocalizedString");
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v94 = v23;
    v95 = v22;

    v24 = *(void **)(a1 + v7);
    if (v24)
      goto LABEL_4;
LABEL_14:
    v54 = a2;
    v55 = 0;
    v96 = 0;
    v39 = (DARootViewController *)0xE000000000000000;
    v74 = (DARootViewController *)0xE000000000000000;
    v52 = a4;
    v88 = (DARootViewController *)v94;
    v53 = v95;
    goto LABEL_21;
  }
  v94 = 0xE000000000000000;
  v95 = 0;
  v24 = *(void **)(a1 + v7);
  if (!v24)
    goto LABEL_14;
LABEL_4:
  v25 = objc_msgSend(v24, "suitesAvailable");
  v26 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v10);

  v27 = v12;
  v28 = sub_100083CF0((uint64_t)v26);
  swift_bridgeObjectRelease(v26, v29, v30, v31, v32, v33, v34, v35);

  if (v28)
  {
    v36 = objc_msgSend(v28, "suiteDescriptionLocalizedString");
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

    v40 = *(void **)(a1 + v7);
    if (v40)
      goto LABEL_6;
LABEL_16:
    v54 = a2;
    v96 = 0;
    v74 = (DARootViewController *)0xE000000000000000;
    v52 = a4;
    v53 = v95;
LABEL_18:
    v55 = v37;
    v88 = (DARootViewController *)v94;
    goto LABEL_21;
  }
  v37 = 0;
  v39 = (DARootViewController *)0xE000000000000000;
  v40 = *(void **)(a1 + v7);
  if (!v40)
    goto LABEL_16;
LABEL_6:
  v41 = objc_msgSend(v40, "suitesAvailable");
  v42 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, v10);

  v43 = v27;
  v44 = sub_100083CF0((uint64_t)v42);
  swift_bridgeObjectRelease(v42, v45, v46, v47, v48, v49, v50, v51);

  v52 = a4;
  v53 = v95;
  if (!v44)
  {
    v54 = a2;
    v96 = 0;
    v74 = (DARootViewController *)0xE000000000000000;
    goto LABEL_18;
  }
  v54 = a2;
  v55 = v37;
  v56 = objc_msgSend(v44, "estimatedCompletionTimeLocalizedString");
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
  v59 = v58;

  if (((unint64_t)v59 & 0x2000000000000000) != 0)
    v60 = ((unint64_t)v59 >> 56) & 0xF;
  else
    v60 = v57 & 0xFFFFFFFFFFFFLL;

  if (v60)
  {
    v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
    v70 = v69;
    v71 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v72 = swift_allocObject(v71, 72, 7);
    *(_OWORD *)(v72 + 16) = xmmword_10010BE30;
    *(_QWORD *)(v72 + 56) = &type metadata for String;
    *(_QWORD *)(v72 + 64) = sub_100047048();
    *(_QWORD *)(v72 + 32) = v57;
    *(_QWORD *)(v72 + 40) = v59;
    v96 = sub_10003FFA0(v68, v70, v72, 0xD00000000000001FLL, (void *)0x80000001001167B0);
    v74 = (DARootViewController *)v73;
    swift_bridgeObjectRelease(v70, v73, v75, v76, v77, v78, v79, v80);
    swift_bridgeObjectRelease((DARootViewController *)v72, v81, v82, v83, v84, v85, v86, v87);
  }
  else
  {
    swift_bridgeObjectRelease(v59, v61, v62, v63, v64, v65, v66, v67);
    v96 = 0;
    v74 = (DARootViewController *)0xE000000000000000;
  }
  v88 = (DARootViewController *)v94;
  v53 = v95;
LABEL_21:
  v89 = swift_allocObject(&unk_1001390C8, 32, 7);
  *(_QWORD *)(v89 + 16) = v52;
  *(_QWORD *)(v89 + 24) = v54;
  v90 = objc_allocWithZone((Class)type metadata accessor for SelfServiceSuiteDescriptionViewController());
  v91 = a3;
  v92 = v52;
  v93 = v54;
  v100 = sub_100060764(a3, v53, v88, v55, v39, v96, v74, (uint64_t)sub_10008405C, v89);
  v100[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_isShowingGlyph] = a5 & 1;
  objc_msgSend(v100, "setModalPresentationStyle:", 1);
  objc_msgSend(v92, "presentViewController:animated:completion:", v100, 1, 0);

}

void sub_1000837E0(uint64_t a1, void *a2)
{
  char *v2;
  void *v3;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _QWORD *v11;
  void (*v12)(char *, void *, double (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;

  v2 = *(char **)(a1 + OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_suiteManager);
  v3 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v3)
  {
    v5 = &v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate]);
    if (Strong)
    {
      v8 = Strong;
      v9 = *((_QWORD *)v5 + 1);
      ObjectType = swift_getObjectType(Strong, v7);
      v11 = (_QWORD *)swift_allocObject(&unk_1001390F0, 40, 7);
      v11[2] = v2;
      v11[3] = v3;
      v11[4] = a2;
      v12 = *(void (**)(char *, void *, double (*)(), _QWORD *, uint64_t, uint64_t))(v9 + 48);
      v15 = v3;
      v12(v2, a2, sub_100036644, v11, ObjectType, v9);
      swift_release(v11);
      swift_unknownObjectRelease(v8);

    }
  }
  else
  {
    v13 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v16 = (id)static OS_os_log.default.getter(v13);
    v14 = static os_log_type_t.default.getter(v16);
    os_log(_:dso:log:type:_:)("[SuiteManager] Device State is nil, suite won't be run", 54, 2, &_mh_execute_header, v16, v14, &_swiftEmptyArrayStorage);

  }
}

uint64_t sub_100083948(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(_QWORD, uint64_t), uint64_t a6)
{
  return sub_100083E48(a1, a3, a4, a5, a6);
}

uint64_t sub_10008395C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(a1, 1);
}

uint64_t sub_100083980(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  id v20;
  id v21;
  id v22;
  __n128 v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[5];
  _QWORD *v34;

  v5 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v29 = static OS_dispatch_queue.main.getter(v16);
  v17 = (_QWORD *)swift_allocObject(&unk_100139000, 56, 7);
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  v17[5] = a4;
  v17[6] = v4;
  aBlock[4] = sub_100083CB8;
  v34 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100139018;
  v18 = _Block_copy(aBlock);
  v19 = v34;
  v20 = a1;
  v21 = a2;
  sub_100035C4C(a3, a4);
  v22 = v5;
  v23 = swift_release(v19);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v24 = sub_100035C5C();
  v25 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v26 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v10, v24);
  v27 = (void *)v29;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v15, v31);
}

void sub_100083B8C(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  char *v15;

  objc_allocWithZone((Class)type metadata accessor for SelfServiceSuiteInProgressViewController());
  v15 = sub_10008F47C(a1, a2);
  v10 = (uint64_t *)&v15[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  v11 = *(_QWORD *)&v15[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  v12 = *(_QWORD *)&v15[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear + 8];
  *v10 = a3;
  v10[1] = a4;
  sub_100035C4C(a3, a4);
  sub_100035D74(v11, v12);
  v13 = objc_msgSend(a5, "navigationController");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "pushViewController:animated:", v15, 1);

  }
}

uint64_t sub_100083C74()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

void sub_100083CB8()
{
  uint64_t v0;

  sub_100083B8C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100083CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100083CD8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100083CE4(void *a1, char a2)
{
  void **v2;

  return sub_100083190(a1, a2, v2[2], v2[3], v2[4]);
}

void *sub_100083CF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  char v8;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v9))
  {
    sub_100037118(0, &qword_10016D880, NSObject_ptr);
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, "suiteID");
      v8 = static NSObject.== infix(_:_:)(v7);

      if ((v8 & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v5;
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_100083E48(uint64_t a1, uint64_t a2, void *a3, void (*a4)(_QWORD, uint64_t), uint64_t a5)
{
  void *v8;
  id v10;
  uint64_t v11;
  DARootViewController *v12;
  id v13;
  void *v14;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  DARootViewController *v25;
  DARootViewController *v26;
  SEL v27;
  id v28;
  int v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;

  if (a1)
    return ((uint64_t (*)(uint64_t, _QWORD))a4)(a1, 0);
  v8 = *(void **)(a2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v8)
  {
    swift_retain_n(a5, 3);
    v10 = objc_msgSend(v8, "suitesAvailable");
    v11 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
    v12 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

    v13 = a3;
    v14 = sub_100083CF0((uint64_t)v12);
    swift_bridgeObjectRelease(v12, v15, v16, v17, v18, v19, v20, v21);

    if (v14)
    {
      if (qword_10016A6C8 != -1)
        swift_once(&qword_10016A6C8, sub_1000A66DC);
      v22 = qword_1001723C0;
      v23 = objc_msgSend(v14, "primaryAssetLocator");
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

      swift_retain(a5);
      sub_1000B0854(v24, (unint64_t)v26, v22, a4, a5);

      swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
      v34 = a5;
      v35 = 4;
      return swift_release_n(v34, v35);
    }
  }
  else
  {
    swift_retain_n(a5, 3);
  }
  a4(0, 1);
  v34 = a5;
  v35 = 3;
  return swift_release_n(v34, v35);
}

uint64_t sub_100083FE4()
{
  id *v0;

  return swift_deallocObject(v0, 49, 7);
}

void sub_100084020()
{
  uint64_t v0;

  sub_100083394(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t sub_100084030()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10008405C()
{
  uint64_t v0;

  sub_1000837E0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

double sub_100084070@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  DARootViewController *v10;
  DARootViewController *v11;
  const char *v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  DARootViewController *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  double result;
  __int128 v33;
  unsigned __int8 v34;
  char v35;
  DARootViewController *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char v41;
  SEL v42;
  id v43;
  int v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _OWORD v60[2];
  __int16 v61;
  __int128 v62;
  __int128 v63;
  unsigned __int8 v64;
  char v65;

  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, "status");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  if (v9 == 0x73736563637573 && v11 == (DARootViewController *)0xE700000000000000)
  {
    v20 = (DARootViewController *)0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73736563637573, 0xE700000000000000, v9, v11, 0) & 1) != 0)
  {
    v20 = v11;
LABEL_8:
    swift_bridgeObjectRelease(v20, v12, v13, v14, v15, v16, v17, v18);
    v21 = Image.init(systemName:)(0xD000000000000015, 0x8000000100116850);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    v22 = Image.resizable(capInsets:resizingMode:)(v7, v21, 0.0, 0.0, 0.0, 0.0);
    v23 = swift_release(v21);
    v24 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v23);
    v25 = static Color.green.getter(v24);
    *(_QWORD *)&v60[0] = v22;
    *(_OWORD *)((char *)v60 + 8) = xmmword_10010C680;
    *((_QWORD *)&v60[1] + 1) = v25;
    LOBYTE(v61) = 0;
LABEL_9:
    swift_retain(v22);
    swift_retain(v25);
    v26 = sub_100035CA4(&qword_10016C798);
    v27 = sub_1000845C4();
    _ConditionalContent<>.init(storage:)(&v62, v60, v26, v26, v27, v27);
    v60[0] = v62;
    v60[1] = v63;
    v61 = v64;
    goto LABEL_10;
  }
  if (v9 == 0x6572756C696166 && v11 == (DARootViewController *)0xE700000000000000)
  {
    v37 = (DARootViewController *)0xE700000000000000;
    goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6572756C696166, 0xE700000000000000, v9, v11, 0) & 1) != 0)
  {
    v37 = v11;
LABEL_19:
    swift_bridgeObjectRelease(v37, v12, v13, v14, v15, v16, v17, v18);
    v38 = Image.init(systemName:)(0xD00000000000001BLL, 0x8000000100116830);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    v22 = Image.resizable(capInsets:resizingMode:)(v7, v38, 0.0, 0.0, 0.0, 0.0);
    v39 = swift_release(v38);
    v40 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v39);
    v25 = static Color.red.getter(v40);
    *(_QWORD *)&v60[0] = v22;
    *(_OWORD *)((char *)v60 + 8) = xmmword_10010C680;
    *((_QWORD *)&v60[1] + 1) = v25;
    LOBYTE(v61) = 1;
    goto LABEL_9;
  }
  if (v9 == 0x676E696E726177 && v11 == (DARootViewController *)0xE700000000000000)
  {
    swift_bridgeObjectRelease((DARootViewController *)0xE700000000000000, v12, v13, v14, v15, v16, v17, v18);
  }
  else
  {
    v41 = _stringCompareWithSmolCheck(_:_:expecting:)(0x676E696E726177, 0xE700000000000000, v9, v11, 0);
    swift_bridgeObjectRelease(v11, v42, v43, v44, v45, v46, v47, v48);
    if ((v41 & 1) == 0)
    {
      memset(v60, 0, sizeof(v60));
      LOBYTE(v61) = 1;
      v54 = sub_100035CA4(&qword_10016C798);
      v55 = sub_1000845C4();
      _ConditionalContent<>.init(storage:)(&v62, v60, v54, &type metadata for EmptyView, v55, &protocol witness table for EmptyView);
      v60[0] = v62;
      v60[1] = v63;
      LOBYTE(v61) = v64;
      HIBYTE(v61) = 1;
      v56 = sub_100035CA4(&qword_10016C7B8);
      v57 = sub_100035CA4(&qword_10016C7C0);
      v58 = sub_1000846E0();
      v59 = sub_100084744();
      _ConditionalContent<>.init(storage:)(&v62, v60, v56, v57, v58, v59);
      goto LABEL_11;
    }
  }
  v49 = Image.init(systemName:)(0xD000000000000018, 0x8000000100116810);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  v22 = Image.resizable(capInsets:resizingMode:)(v7, v49, 0.0, 0.0, 0.0, 0.0);
  v50 = swift_release(v49);
  v51 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v50);
  v25 = static Color.yellow.getter(v51);
  *(_QWORD *)&v60[0] = v22;
  *(_OWORD *)((char *)v60 + 8) = xmmword_10010C680;
  *((_QWORD *)&v60[1] + 1) = v25;
  LOBYTE(v61) = 0;
  swift_retain(v22);
  swift_retain(v25);
  v52 = sub_100035CA4(&qword_10016C798);
  v53 = sub_1000845C4();
  _ConditionalContent<>.init(storage:)(&v62, v60, v52, &type metadata for EmptyView, v53, &protocol witness table for EmptyView);
  v60[0] = v62;
  v60[1] = v63;
  LOBYTE(v61) = v64;
  HIBYTE(v61) = 1;
LABEL_10:
  v28 = sub_100035CA4(&qword_10016C7B8);
  v29 = sub_100035CA4(&qword_10016C7C0);
  v30 = sub_1000846E0();
  v31 = sub_100084744();
  _ConditionalContent<>.init(storage:)(&v62, v60, v28, v29, v30, v31);
  swift_release(v25);
  swift_release(v22);
LABEL_11:
  result = *(double *)&v62;
  v33 = v63;
  v34 = v64;
  v35 = v65;
  *(_OWORD *)a2 = v62;
  *(_OWORD *)(a2 + 16) = v33;
  *(_BYTE *)(a2 + 32) = v34;
  *(_BYTE *)(a2 + 33) = v35;
  return result;
}

unint64_t sub_1000845C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C7A0;
  if (!qword_10016C7A0)
  {
    v1 = sub_100035D30(&qword_10016C798);
    sub_100084630();
    sub_100084694();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C7A0);
  }
  return result;
}

unint64_t sub_100084630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C7A8;
  if (!qword_10016C7A8)
  {
    v1 = sub_100035D30(&qword_10016C7B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C7A8);
  }
  return result;
}

unint64_t sub_100084694()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016B318;
  if (!qword_10016B318)
  {
    v1 = sub_100035D30(&qword_10016B320);
    result = swift_getWitnessTable(&protocol conformance descriptor for _ForegroundStyleModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10016B318);
  }
  return result;
}

unint64_t sub_1000846E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C7C8;
  if (!qword_10016C7C8)
  {
    v1 = sub_100035D30(&qword_10016C7B8);
    sub_1000845C4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C7C8);
  }
  return result;
}

unint64_t sub_100084744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016C7D0;
  if (!qword_10016C7D0)
  {
    v1 = sub_100035D30(&qword_10016C7C0);
    sub_1000845C4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016C7D0);
  }
  return result;
}

id sub_1000847B0()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v0, "setFont:", v1);

  objc_msgSend(v0, "setNumberOfLines:", 1);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  objc_msgSend(v0, "setTextColor:", v2);

  return v0;
}

id sub_1000848A8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  objc_msgSend(v0, "setSelectionStyle:", 0);
  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "secondarySystemBackgroundColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setCornerRadius:", 12.0);

  v4 = objc_msgSend(v1, "secondarySystemBackgroundColor");
  objc_msgSend(v0, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v0, "layer");
  objc_msgSend(v5, "setCornerRadius:", 12.0);

  v6 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView];
  objc_msgSend(v6, "setDistribution:", 0);
  objc_msgSend(v6, "setDirectionalLayoutMargins:", 16.0, 18.0, 16.0, 16.0);
  objc_msgSend(v6, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_descriptionStackView];
  objc_msgSend(v7, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setDistribution:", 0);
  objc_msgSend(v7, "setSpacing:", 4.0);
  objc_msgSend(v6, "setAxis:", 0);
  objc_msgSend(v6, "setAlignment:", 3);
  objc_msgSend(v7, "setAxis:", 1);
  return objc_msgSend(v7, "setAlignment:", 1);
}

void sub_100084AAC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleLabel], "removeFromSuperview");
  v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImageView];
  objc_msgSend(v2, "removeFromSuperview");
  v3 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel], "removeFromSuperview");
  v4 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel], "removeFromSuperview");
  v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_descriptionStackView];
  objc_msgSend(v5, "removeFromSuperview");
  v6 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView];
  objc_msgSend(v6, "removeFromSuperview");
  objc_msgSend(v5, "addArrangedSubview:", *(_QWORD *)&v0[v1]);
  objc_msgSend(v5, "addArrangedSubview:", *(_QWORD *)&v0[v3]);
  objc_msgSend(v5, "addArrangedSubview:", *(_QWORD *)&v0[v4]);
  objc_msgSend(v6, "addArrangedSubview:", v2);
  objc_msgSend(v6, "addArrangedSubview:", v5);
  objc_msgSend(v6, "setCustomSpacing:afterView:", v2, 18.0);
  objc_msgSend(v6, "setCustomSpacing:afterView:", v5, 16.0);
  v7 = objc_msgSend(v0, "contentView");
  objc_msgSend(v7, "addSubview:", v6);

}

void sub_100084C1C()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  SEL v28;
  id v29;
  int v30;
  id v31;
  id v32;
  id v33;
  id v34;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v4 = swift_allocObject(v3, 80, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10010D820;
  v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView];
  v6 = objc_msgSend(v5, "bottomAnchor");
  v7 = objc_msgSend(v1, "contentView");
  v8 = objc_msgSend(v7, "bottomAnchor");

  v9 = objc_msgSend(v6, "constraintEqualToAnchor:", v8);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v5, "topAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "topAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v4 + 40) = v13;
  v14 = objc_msgSend(v5, "trailingAnchor");
  v15 = objc_msgSend(v1, "contentView");
  v16 = objc_msgSend(v15, "trailingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v4 + 48) = v17;
  v18 = objc_msgSend(v5, "leadingAnchor");
  v19 = objc_msgSend(v1, "contentView");
  v20 = objc_msgSend(v19, "leadingAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v4 + 56) = v21;
  v22 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImageView];
  v23 = objc_msgSend(v22, "widthAnchor");
  v24 = objc_msgSend(v23, "constraintEqualToConstant:", 40.0);

  *(_QWORD *)(v4 + 64) = v24;
  v25 = objc_msgSend(v22, "heightAnchor");
  v26 = objc_msgSend(v25, "constraintEqualToConstant:", 40.0);

  *(_QWORD *)(v4 + 72) = v26;
  specialized Array._endMutation()(v27);
  sub_100053B64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v4, v28, v29, v30, v31, v32, v33, v34);
  objc_msgSend(v2, "activateConstraints:", isa);

}

CGFloat sub_100084F9C()
{
  char *v0;
  id v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double Width;
  id v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGRect v21;

  v1 = objc_msgSend(v0, "contentView");
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v21.origin.x = v3;
  v21.origin.y = v5;
  v21.size.width = v7;
  v21.size.height = v9;
  Width = CGRectGetWidth(v21);
  v11 = objc_msgSend(v0, "contentView");
  objc_msgSend(v11, "layoutMargins");
  v13 = v12;

  v14 = Width - v13;
  v15 = objc_msgSend(v0, "contentView");
  objc_msgSend(v15, "layoutMargins");
  v17 = v16;

  LODWORD(v18) = 1148846080;
  LODWORD(v19) = 1112014848;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView], "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", v14 - v17, 1.79769313e308, v18, v19);
  return UIViewNoIntrinsicMetric;
}

id sub_1000850B8(uint64_t a1, uint64_t a2, DARootViewController *a3)
{
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  char *v18;
  uint64_t v19;
  NSString v20;
  SEL v21;
  id v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  objc_super v32;

  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconSpacing] = 0x4032000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_defaultSpacing] = 0x4030000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_defaultVerticalSpacing] = 0x4010000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconDimensionSize] = 0x4044000000000000;
  v4 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView;
  v5 = objc_allocWithZone((Class)UIStackView);
  v6 = v3;
  *(_QWORD *)&v3[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_descriptionStackView;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImage] = 0;
  v8 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImageView;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v9, "setContentMode:", 1);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v6[v8] = v9;
  v10 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleLabel;
  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = (void *)objc_opt_self(UIFont);
  v13 = objc_msgSend(v12, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  objc_msgSend(v11, "setFont:", v13);

  objc_msgSend(v11, "setNumberOfLines:", 2);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v6[v10] = v11;
  v14 = &v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleText];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v15 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel;
  v16 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v17 = objc_msgSend(v12, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v16, "setFont:", v17);

  objc_msgSend(v16, "setNumberOfLines:", 0);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v6[v15] = v16;
  v18 = &v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleText];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleTruncated] = 0;
  v19 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel;
  *(_QWORD *)&v6[v19] = sub_1000847B0();
  v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreEnabled] = 0;

  if (a3)
  {
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v21, v22, v23, v24, v25, v26, v27);
  }
  else
  {
    v20 = 0;
  }
  v32.receiver = v6;
  v32.super_class = (Class)type metadata accessor for SelfServiceViewCell();
  v28 = objc_msgSendSuper2(&v32, "initWithStyle:reuseIdentifier:", a1, v20);

  return v28;
}

id sub_100085408(void *a1)
{
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  char *v16;
  uint64_t v17;
  id v18;
  objc_super v21;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconSpacing] = 0x4032000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_defaultSpacing] = 0x4030000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_defaultVerticalSpacing] = 0x4010000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconDimensionSize] = 0x4044000000000000;
  v2 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView;
  v3 = objc_allocWithZone((Class)UIStackView);
  v4 = v1;
  *(_QWORD *)&v1[v2] = objc_msgSend(v3, "init");
  v5 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_descriptionStackView;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImage] = 0;
  v6 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImageView;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v7, "setContentMode:", 1);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v6] = v7;
  v8 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleLabel;
  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = (void *)objc_opt_self(UIFont);
  v11 = objc_msgSend(v10, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  objc_msgSend(v9, "setFont:", v11);

  objc_msgSend(v9, "setNumberOfLines:", 2);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v4[v8] = v9;
  v12 = &v4[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleText];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel;
  v14 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v15 = objc_msgSend(v10, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v14, "setFont:", v15);

  objc_msgSend(v14, "setNumberOfLines:", 0);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v4[v13] = v14;
  v16 = &v4[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleText];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v4[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleTruncated] = 0;
  v17 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel;
  *(_QWORD *)&v4[v17] = sub_1000847B0();
  v4[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreEnabled] = 0;

  v21.receiver = v4;
  v21.super_class = (Class)type metadata accessor for SelfServiceViewCell();
  v18 = objc_msgSendSuper2(&v21, "initWithCoder:", a1);

  return v18;
}

void sub_100085708()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleText + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleText + 8));

}

id sub_1000857AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SelfServiceViewCell()
{
  return objc_opt_self(_TtC11Diagnostics19SelfServiceViewCell);
}

uint64_t sub_1000858AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _QWORD);
  id v14;
  _BYTE v16[32];

  v0 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100035CA4((uint64_t *)&unk_10016E470);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v8 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 16.0, UIFontWeightSemibold);
  v9 = objc_msgSend(v7, "scaledFontForFont:", v8);

  static UIButton.Configuration.plain()();
  v10 = swift_allocObject(&unk_100139168, 24, 7);
  *(_QWORD *)(v10 + 16) = v9;
  v11 = v9;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10003CFA4, v10);
  v12 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v6);

  v13 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v16);
  UIBackgroundConfiguration.cornerRadius.setter(10.0);
  v13(v16, 0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for UIButton.Configuration.CornerStyle.fixed(_:), v0);
  UIButton.Configuration.cornerStyle.setter(v3);
  UIButton.Configuration.contentInsets.setter(15.0, 15.0, 15.0, 15.0);
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  return UIButton.Configuration.baseForegroundColor.setter(v14);
}

void sub_100085AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void (*v15)(_BYTE *, _QWORD);
  _BYTE v16[32];

  v0 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100035CA4((uint64_t *)&unk_10016E470);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v8 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 16.0);
  v9 = objc_msgSend(v7, "scaledFontForFont:", v8);

  static UIButton.Configuration.plain()();
  v10 = swift_allocObject(&unk_100139140, 24, 7);
  *(_QWORD *)(v10 + 16) = v9;
  v11 = v9;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10003CF9C, v10);
  v12 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v6);

  v13 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v14 = objc_msgSend(v13, "userInterfaceIdiom");

  if (v14 == (id)6)
  {
    v15 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v16);
    UIBackgroundConfiguration.cornerRadius.setter(10.0);
    v15(v16, 0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for UIButton.Configuration.CornerStyle.fixed(_:), v0);
    UIButton.Configuration.cornerStyle.setter(v3);
  }
}

_QWORD *sub_100085CF4(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  _QWORD *v19;
  uint64_t (*v20)(void);
  _QWORD *v21;
  char v22;
  void *v23;
  uint64_t v24;
  objc_super v26;

  swift_getObjectType(v2, a2);
  v3 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_fontSizeTitleRegular] = 0x4040000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_fontSizeTitleSE] = 0x4038000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titlePadding] = 0x4024000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_buttonSpacing] = 0x402E000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_buttonPadding] = 0x4044000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleBodyPadding] = 0x402E000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_sidePadding] = 0x4034000000000000;
  v6 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
  *v7 = 0;
  v7[1] = 0;
  v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody] = 1;
  v8 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
  *v8 = 0;
  v8[1] = 0;
  v9 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction];
  *v12 = 0;
  v12[1] = 0;
  v13 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_scrollView;
  v14 = objc_allocWithZone((Class)UIScrollView);
  v15 = v2;
  *(_QWORD *)&v2[v13] = objc_msgSend(v14, "init");
  v16 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v17 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView;
  *(_QWORD *)&v15[v17] = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton] = 0;
  sub_100037118(0, &qword_10016AD30, UIButton_ptr);
  sub_1000858AC();
  *(_QWORD *)&v15[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton] = UIButton.init(configuration:primaryAction:)(v5, 0);

  v18 = (objc_class *)type metadata accessor for ConsentNoticeViewController();
  v26.receiver = v15;
  v26.super_class = v18;
  v19 = objc_msgSendSuper2(&v26, "initWithNibName:bundle:", 0, 0);
  v20 = *(uint64_t (**)(void))((swift_isaMask & *v19) + 0x200);
  v21 = v19;
  v22 = v20();
  v23 = v21;
  if ((v22 & 1) != 0)
  {
    sub_100085AD0();
    v24 = UIButton.init(configuration:primaryAction:)(v5, 0);

    v23 = *(void **)((char *)v21 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton);
    *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton) = v24;
  }

  return v21;
}

_QWORD *sub_100085FC8(void *a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t (*v22)(void);
  _QWORD *v23;
  uint64_t v24;
  objc_super v26;

  swift_getObjectType(v2, a2);
  v4 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_fontSizeTitleRegular] = 0x4040000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_fontSizeTitleSE] = 0x4038000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titlePadding] = 0x4024000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_buttonSpacing] = 0x402E000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_buttonPadding] = 0x4044000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleBodyPadding] = 0x402E000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_sidePadding] = 0x4034000000000000;
  v7 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
  *v8 = 0;
  v8[1] = 0;
  v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody] = 1;
  v9 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction];
  *v13 = 0;
  v13[1] = 0;
  v14 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_scrollView;
  v15 = objc_allocWithZone((Class)UIScrollView);
  v16 = v2;
  *(_QWORD *)&v2[v14] = objc_msgSend(v15, "init");
  v17 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel;
  *(_QWORD *)&v16[v17] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v18 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView;
  *(_QWORD *)&v16[v18] = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  *(_QWORD *)&v16[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton] = 0;
  sub_100037118(0, &qword_10016AD30, UIButton_ptr);
  sub_1000858AC();
  *(_QWORD *)&v16[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton] = UIButton.init(configuration:primaryAction:)(v6, 0);

  v19 = (objc_class *)type metadata accessor for ConsentNoticeViewController();
  v26.receiver = v16;
  v26.super_class = v19;
  v20 = objc_msgSendSuper2(&v26, "initWithCoder:", a1);
  v21 = v20;
  if (v20)
  {
    v22 = *(uint64_t (**)(void))((swift_isaMask & *v20) + 0x200);
    v23 = v20;
    if ((v22() & 1) != 0)
    {
      sub_100085AD0();
      v24 = UIButton.init(configuration:primaryAction:)(v6, 0);

      a1 = *(void **)((char *)v23 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton);
      *(_QWORD *)((char *)v23 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton) = v24;
    }
    else
    {

    }
  }

  return v21;
}

void sub_1000862B8(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for ConsentNoticeViewController();
  objc_msgSendSuper2(&v11, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "navigationBar");

    v6 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    objc_msgSend(v5, "setBackgroundImage:forBarMetrics:", v6, 0);

  }
  v7 = objc_msgSend(v1, "navigationController");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "navigationBar");

    v10 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    objc_msgSend(v9, "setShadowImage:", v10);

  }
}

void sub_10008642C()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  id v54;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = (void *)objc_opt_self(UIColor);
    v4 = objc_msgSend(v3, "systemBackgroundColor");
    objc_msgSend(v2, "setBackgroundColor:", v4);

    v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_scrollView];
    v6 = objc_msgSend(v3, "clearColor");
    objc_msgSend(v5, "setBackgroundColor:", v6);

    objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = (void *)objc_opt_self(UIFontMetrics);
    v8 = objc_msgSend(v7, "defaultMetrics");
    v9 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v9, "bounds");
    v11 = v10;

    if (v11 > 568.0)
      v12 = 32.0;
    else
      v12 = 24.0;
    v13 = (void *)objc_opt_self(UIFont);
    v14 = objc_msgSend(v13, "systemFontOfSize:weight:", v12, UIFontWeightBold);
    v54 = objc_msgSend(v8, "scaledFontForFont:", v14);

    v15 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel];
    objc_msgSend(v15, "setMinimumScaleFactor:", 0.6);
    objc_msgSend(v15, "setFont:", v54);
    objc_msgSend(v15, "setTextAlignment:", 1);
    v16 = objc_msgSend(v0, "traitCollection");
    v17 = objc_msgSend(v16, "preferredContentSizeCategory");

    LOBYTE(v16) = UIContentSizeCategory.isAccessibilityCategory.getter(v17);
    if ((v16 & 1) != 0)
      v18 = 0;
    else
      v18 = 2;
    objc_msgSend(v15, "setNumberOfLines:", v18);
    objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v19 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
    v20 = objc_msgSend(v7, "defaultMetrics");
    v21 = objc_msgSend(v13, "systemFontOfSize:", 16.0);
    v22 = objc_msgSend(v20, "scaledFontForFont:", v21);

    objc_msgSend(v19, "setFont:", v22);
    objc_msgSend(v19, "setTextAlignment:", 1);
    objc_msgSend(v19, "setScrollEnabled:", 0);
    objc_msgSend(v19, "setEditable:", 0);
    objc_msgSend(v19, "setSelectable:", 0);
    v53 = v3;
    v23 = objc_msgSend(v3, "clearColor");
    objc_msgSend(v19, "setBackgroundColor:", v23);

    objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v24 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton];
    v25 = objc_msgSend(v24, "titleLabel");
    if (v25)
    {
      v26 = v25;
      objc_msgSend(v25, "setAdjustsFontSizeToFitWidth:", 1);

    }
    v27 = objc_msgSend(v24, "titleLabel");
    if (v27)
    {
      v28 = v27;
      objc_msgSend(v27, "setAllowsDefaultTighteningForTruncation:", 1);

    }
    v29 = objc_msgSend(v24, "titleLabel");
    if (v29)
    {
      v30 = v29;
      objc_msgSend(v29, "setMinimumScaleFactor:", 0.875);

    }
    v31 = objc_msgSend(v24, "tintColor");
    objc_msgSend(v24, "setBackgroundColor:", v31);

    v32 = objc_msgSend(v24, "layer");
    objc_msgSend(v32, "setCornerRadius:", 10.0);

    objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v24, "addTarget:action:forControlEvents:", v0, "primaryButtonPressed:", 64);
    v33 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton;
    v34 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton];
    if (v34)
    {
      v35 = objc_msgSend(v34, "titleLabel");
      if (v35)
      {
        v36 = v35;
        objc_msgSend(v35, "setAdjustsFontSizeToFitWidth:", 1);

      }
      v37 = *(void **)&v0[v33];
      if (v37)
      {
        v38 = objc_msgSend(v37, "titleLabel");
        if (v38)
        {
          v39 = v38;
          objc_msgSend(v38, "setAllowsDefaultTighteningForTruncation:", 1);

        }
        v40 = *(void **)&v0[v33];
        if (v40)
        {
          v41 = objc_msgSend(v40, "titleLabel");
          if (v41)
          {
            v42 = v41;
            objc_msgSend(v41, "setMinimumScaleFactor:", 0.8);

          }
        }
      }
    }
    v43 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v44 = objc_msgSend(v43, "userInterfaceIdiom");

    if (v44 == (id)6)
    {
      v45 = *(void **)&v0[v33];
      if (!v45
        || (v46 = v45,
            v47 = objc_msgSend(v53, "secondarySystemBackgroundColor"),
            objc_msgSend(v46, "setBackgroundColor:", v47),
            v46,
            v47,
            (v48 = *(void **)&v0[v33]) == 0))
      {
LABEL_30:

        return;
      }
      v49 = objc_msgSend(v48, "layer");
      objc_msgSend(v49, "setCornerRadius:", 10.0);

    }
    v50 = *(void **)&v0[v33];
    if (v50)
    {
      objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v51 = *(void **)&v0[v33];
      if (v51)
      {
        v52 = v51;
        objc_msgSend(v52, "addTarget:action:forControlEvents:", v0, "secondaryButtonPressed:", 64);

      }
    }
    goto LABEL_30;
  }
  __break(1u);
}

void sub_100086ACC()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  if (v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody] == 1)
  {
    v1 = objc_msgSend(v0, "view");
    if (!v1)
    {
LABEL_11:
      __break(1u);
      return;
    }
    v2 = v1;
    v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_scrollView];
    objc_msgSend(v1, "addSubview:", v3);

    objc_msgSend(v3, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel]);
    objc_msgSend(v3, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView]);
  }
  v4 = objc_msgSend(v0, "view");
  if (!v4)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = v4;
  objc_msgSend(v4, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton]);

  v6 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton];
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v0, "view");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "addSubview:", v7);

      return;
    }
    goto LABEL_10;
  }
}

void sub_100086C20()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  char **v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  Class isa;
  SEL v70;
  id v71;
  int v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  void *v101;
  id v102;
  id v103;
  id v104;
  void *v105;
  void *v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  DARootViewController *v111;
  NSArray v112;
  SEL v113;
  id v114;
  int v115;
  id v116;
  id v117;
  id v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  id v123;
  void *v124;
  void *v125;
  id v126;
  id v127;
  id v128;
  uint64_t v129;
  DARootViewController *v130;
  SEL v131;
  id v132;
  int v133;
  id v134;
  id v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  id v141;
  void *v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  void *v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  void *v154;
  void *v155;
  id v156;
  id v157;
  id v158;
  uint64_t v159;
  SEL v160;
  id v161;
  int v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  Class v169;

  v1 = v0;
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_scrollView);
  objc_msgSend(v2, "sizeToFit");
  v3 = &selRef_setFill;
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody) == 1)
  {
    v4 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
    v5 = swift_allocObject(v4, 136, 7);
    *(_OWORD *)(v5 + 16) = xmmword_10010D860;
    v6 = objc_msgSend(v2, "topAnchor");
    v7 = objc_msgSend(v1, "view");
    if (!v7)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v8 = v7;
    v9 = objc_msgSend(v7, "safeAreaLayoutGuide");

    v10 = objc_msgSend(v9, "topAnchor");
    v11 = objc_msgSend(v6, "constraintEqualToAnchor:", v10);

    *(_QWORD *)(v5 + 32) = v11;
    v12 = objc_msgSend(v2, "leadingAnchor");
    v13 = objc_msgSend(v1, "view");
    if (!v13)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v14 = v13;
    v15 = objc_msgSend(v13, "safeAreaLayoutGuide");

    v16 = objc_msgSend(v15, "leadingAnchor");
    v17 = objc_msgSend(v12, "constraintEqualToAnchor:", v16);

    *(_QWORD *)(v5 + 40) = v17;
    v18 = objc_msgSend(v2, "trailingAnchor");
    v19 = objc_msgSend(v1, "view");
    if (!v19)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v20 = v19;
    v21 = objc_msgSend(v19, "safeAreaLayoutGuide");

    v22 = objc_msgSend(v21, "trailingAnchor");
    v23 = objc_msgSend(v18, "constraintEqualToAnchor:", v22);

    *(_QWORD *)(v5 + 48) = v23;
    v24 = objc_msgSend(v2, "bottomAnchor");
    v25 = objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton), "topAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, -20.0);

    *(_QWORD *)(v5 + 56) = v26;
    v27 = *(void **)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel);
    v28 = objc_msgSend(v27, "topAnchor");
    v29 = objc_msgSend(v2, "contentLayoutGuide");
    v30 = objc_msgSend(v29, "topAnchor");

    v31 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v30, 10.0);
    *(_QWORD *)(v5 + 64) = v31;
    v32 = objc_msgSend(v27, "leadingAnchor");
    v33 = objc_msgSend(v2, "contentLayoutGuide");
    v34 = objc_msgSend(v33, "leadingAnchor");

    v35 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v34, 20.0);
    *(_QWORD *)(v5 + 72) = v35;
    v36 = objc_msgSend(v27, "trailingAnchor");
    v37 = objc_msgSend(v2, "contentLayoutGuide");
    v38 = objc_msgSend(v37, "trailingAnchor");

    v39 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v38, -20.0);
    *(_QWORD *)(v5 + 80) = v39;
    v40 = objc_msgSend(v27, "centerXAnchor");
    v41 = objc_msgSend(v1, "view");
    if (!v41)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v42 = v41;
    v43 = objc_msgSend(v41, "safeAreaLayoutGuide");

    v44 = objc_msgSend(v43, "centerXAnchor");
    v45 = objc_msgSend(v40, "constraintEqualToAnchor:", v44);

    *(_QWORD *)(v5 + 88) = v45;
    v46 = *(void **)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView);
    v47 = objc_msgSend(v46, "topAnchor");
    v48 = objc_msgSend(v27, "bottomAnchor");
    v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, 15.0);

    *(_QWORD *)(v5 + 96) = v49;
    v50 = objc_msgSend(v46, "leadingAnchor");
    v51 = objc_msgSend(v2, "contentLayoutGuide");
    v52 = objc_msgSend(v51, "leadingAnchor");

    v53 = objc_msgSend(v50, "constraintEqualToAnchor:", v52);
    *(_QWORD *)(v5 + 104) = v53;
    v54 = objc_msgSend(v46, "trailingAnchor");
    v55 = objc_msgSend(v2, "contentLayoutGuide");
    v56 = objc_msgSend(v55, "trailingAnchor");

    v57 = objc_msgSend(v54, "constraintEqualToAnchor:", v56);
    *(_QWORD *)(v5 + 112) = v57;
    v58 = objc_msgSend(v46, "centerXAnchor");
    v59 = objc_msgSend(v1, "view");
    if (!v59)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v60 = v59;
    v167 = (id)objc_opt_self(NSLayoutConstraint);
    v61 = objc_msgSend(v60, "safeAreaLayoutGuide");

    v62 = objc_msgSend(v61, "centerXAnchor");
    v63 = objc_msgSend(v58, "constraintEqualToAnchor:", v62);

    *(_QWORD *)(v5 + 120) = v63;
    v64 = objc_msgSend(v46, "bottomAnchor");
    v65 = objc_msgSend(v2, "contentLayoutGuide");
    v66 = objc_msgSend(v65, "bottomAnchor");

    v67 = objc_msgSend(v64, "constraintEqualToAnchor:", v66);
    *(_QWORD *)(v5 + 128) = v67;
    specialized Array._endMutation()(v68);
    sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease((DARootViewController *)v5, v70, v71, v72, v73, v74, v75, v76);
    objc_msgSend(v167, "activateConstraints:", isa);

    v3 = &selRef_setFill;
  }
  if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x200))() & 1) == 0
    || (v77 = *(void **)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton)) == 0)
  {
    v120 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
    v121 = swift_allocObject(v120, 40, 7);
    *(_OWORD *)(v121 + 16) = xmmword_10010C200;
    v106 = *(void **)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton);
    v122 = objc_msgSend(v106, "bottomAnchor");
    v105 = v1;
    v123 = objc_msgSend(v1, "view");
    if (!v123)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v124 = v123;
    v125 = (void *)objc_opt_self(NSLayoutConstraint);
    v126 = objc_msgSend(v124, "safeAreaLayoutGuide");

    v127 = objc_msgSend(v126, "bottomAnchor");
    v128 = objc_msgSend(v122, v3[507], v127, -15.0);

    *(_QWORD *)(v121 + 32) = v128;
    specialized Array._endMutation()(v129);
    v130 = (DARootViewController *)v121;
    sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
    v112.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v130, v131, v132, v133, v134, v135, v136, v137);
    objc_msgSend(v125, "activateConstraints:", v112.super.isa);
LABEL_17:

    v138 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
    v139 = swift_allocObject(v138, 56, 7);
    *(_OWORD *)(v139 + 16) = xmmword_10010D870;
    v140 = objc_msgSend(v106, "leadingAnchor");
    v141 = objc_msgSend(v105, "view");
    if (v141)
    {
      v142 = v141;
      v143 = objc_msgSend(v141, "safeAreaLayoutGuide");

      v144 = objc_msgSend(v143, "leadingAnchor");
      v145 = objc_msgSend(v140, "constraintEqualToAnchor:constant:", v144, 40.0);

      *(_QWORD *)(v139 + 32) = v145;
      v146 = objc_msgSend(v106, "trailingAnchor");
      v147 = objc_msgSend(v105, "view");
      if (v147)
      {
        v148 = v147;
        v149 = objc_msgSend(v147, "safeAreaLayoutGuide");

        v150 = objc_msgSend(v149, "trailingAnchor");
        v151 = objc_msgSend(v146, "constraintEqualToAnchor:constant:", v150, -40.0);

        *(_QWORD *)(v139 + 40) = v151;
        v152 = objc_msgSend(v106, "centerXAnchor");
        v153 = objc_msgSend(v105, "view");
        if (v153)
        {
          v154 = v153;
          v155 = (void *)objc_opt_self(NSLayoutConstraint);
          v156 = objc_msgSend(v154, "safeAreaLayoutGuide");

          v157 = objc_msgSend(v156, "centerXAnchor");
          v158 = objc_msgSend(v152, "constraintEqualToAnchor:", v157);

          *(_QWORD *)(v139 + 48) = v158;
          specialized Array._endMutation()(v159);
          sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
          v169 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease((DARootViewController *)v139, v160, v161, v162, v163, v164, v165, v166);
          objc_msgSend(v155, "activateConstraints:", v169);

          return;
        }
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v78 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v79 = swift_allocObject(v78, 72, 7);
  *(_OWORD *)(v79 + 16) = xmmword_10010CA80;
  v168 = v77;
  v80 = objc_msgSend(v168, "bottomAnchor");
  v81 = objc_msgSend(v1, "view");
  if (!v81)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v82 = v81;
  v83 = objc_msgSend(v81, "safeAreaLayoutGuide");

  v84 = objc_msgSend(v83, "bottomAnchor");
  v85 = objc_msgSend(v80, v3[507], v84, -40.0);

  *(_QWORD *)(v79 + 32) = v85;
  v86 = objc_msgSend(v168, "leadingAnchor");
  v87 = objc_msgSend(v1, "view");
  if (!v87)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v88 = v87;
  v89 = objc_msgSend(v87, "safeAreaLayoutGuide");

  v90 = objc_msgSend(v89, "leadingAnchor");
  v91 = objc_msgSend(v86, v3[507], v90, 40.0);

  *(_QWORD *)(v79 + 40) = v91;
  v92 = objc_msgSend(v168, "trailingAnchor");
  v93 = objc_msgSend(v1, "view");
  if (!v93)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v94 = v93;
  v95 = objc_msgSend(v93, "safeAreaLayoutGuide");

  v96 = objc_msgSend(v95, "trailingAnchor");
  v97 = objc_msgSend(v92, v3[507], v96, -40.0);

  *(_QWORD *)(v79 + 48) = v97;
  v98 = objc_msgSend(v168, "centerXAnchor");
  v99 = objc_msgSend(v1, "view");
  if (v99)
  {
    v100 = v99;
    v101 = (void *)objc_opt_self(NSLayoutConstraint);
    v102 = objc_msgSend(v100, "safeAreaLayoutGuide");

    v103 = objc_msgSend(v102, "centerXAnchor");
    v104 = objc_msgSend(v98, "constraintEqualToAnchor:", v103);

    *(_QWORD *)(v79 + 56) = v104;
    v105 = v1;
    v106 = *(void **)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton);
    v107 = objc_msgSend(v106, "bottomAnchor");
    v108 = objc_msgSend(v168, "topAnchor");
    v109 = objc_msgSend(v107, v3[507], v108, -15.0);

    *(_QWORD *)(v79 + 64) = v109;
    specialized Array._endMutation()(v110);
    v111 = (DARootViewController *)v79;
    sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
    v112.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v111, v113, v114, v115, v116, v117, v118, v119);
    objc_msgSend(v101, "activateConstraints:", v112.super.isa);

    goto LABEL_17;
  }
LABEL_33:
  __break(1u);
}

void sub_100087C04(char *a1, uint64_t a2, void *a3, _QWORD *a4)
{
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v7;
  id v8;
  uint64_t v9;
  char *v10;

  v4 = &a1[*a4];
  v5 = *(void (**)(uint64_t))v4;
  if (*(_QWORD *)v4)
  {
    v7 = *((_QWORD *)v4 + 1);
    v8 = a3;
    v10 = a1;
    v9 = sub_100035C4C((uint64_t)v5, v7);
    v5(v9);
    sub_100035D74((uint64_t)v5, v7);

  }
}

void sub_100087CC0(uint64_t a1, const char *a2, void *a3, int a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  SEL v9;
  id v10;
  int v11;
  id v12;
  id v13;
  id v14;
  id v15;
  SEL v16;
  id v17;
  int v18;
  id v19;
  id v20;
  id v21;
  id v22;
  SEL v23;
  id v24;
  int v25;
  id v26;
  id v27;
  id v28;
  id v29;

  swift_bridgeObjectRelease(*(DARootViewController **)(v8 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText + 8), a2, a3, a4, a5, a6, a7, a8);
  swift_bridgeObjectRelease(*(DARootViewController **)(v8 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText + 8), v9, v10, v11, v12, v13, v14, v15);
  swift_bridgeObjectRelease(*(DARootViewController **)(v8 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle + 8), v16, v17, v18, v19, v20, v21, v22);
  swift_bridgeObjectRelease(*(DARootViewController **)(v8 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle + 8), v23, v24, v25, v26, v27, v28, v29);
  sub_100035D74(*(_QWORD *)(v8 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction), *(_QWORD *)(v8 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction + 8));
  sub_100035D74(*(_QWORD *)(v8 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction), *(_QWORD *)(v8 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction + 8));
  sub_100035D74(*(_QWORD *)(v8 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction), *(_QWORD *)(v8 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction + 8));

}

id sub_100087DA8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConsentNoticeViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ConsentNoticeViewController()
{
  return objc_opt_self(_TtC11Diagnostics27ConsentNoticeViewController);
}

uint64_t sub_100087EEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100087F10(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v3 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction];
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction + 8];
  *v3 = a1;
  v3[1] = a2;
  sub_100035C4C(a1, a2);
  sub_100035D74(v4, v5);
  v6 = *v3;
  v9 = objc_msgSend(v2, "navigationItem");
  if (v6)
  {
    v7 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v2, "cancelButtonPressed:");
    objc_msgSend(v9, "setLeftBarButtonItem:", v7);

    v8 = v7;
  }
  else
  {
    objc_msgSend(v9, "setLeftBarButtonItem:", 0);
    v8 = v9;
  }

}

id sub_100087FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  DARootViewController *v8;
  DARootViewController *v9;
  DARootViewController *v10;
  DARootViewController *v11;
  NSString v12;
  SEL v13;
  id v14;
  int v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSString v20;
  SEL v21;
  id v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  DARootViewController *v29;
  DARootViewController *v30;
  _QWORD *v31;
  id v32;
  NSString v33;
  SEL v34;
  id v35;
  int v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  DARootViewController *v44;
  DARootViewController *v45;
  _QWORD *v46;
  id v47;
  NSString v48;
  SEL v49;
  id v50;
  int v51;
  id v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  void **v59;
  uint64_t v60;
  void (*v61)(uint64_t, void *);
  void *v62;
  void *v63;
  _QWORD *v64;

  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001ALL, (void *)0x8000000100116B50);
  v9 = v8;
  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001CLL, (void *)0x8000000100116B70);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9, v13, v14, v15, v16, v17, v18, v19);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11, v21, v22, v23, v24, v25, v26, v27);
  v28 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v20, 1);

  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000018, (void *)0x8000000100116B90);
  v30 = v29;
  v31 = (_QWORD *)swift_allocObject(&unk_100139190, 40, 7);
  v31[2] = a1;
  v31[3] = a2;
  v31[4] = v28;
  swift_retain(a2);
  v32 = v28;
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30, v34, v35, v36, v37, v38, v39, v40);
  v63 = sub_100088338;
  v64 = v31;
  v59 = _NSConcreteStackBlock;
  v60 = 1107296256;
  v61 = sub_100040808;
  v62 = &unk_1001391A8;
  v41 = _Block_copy(&v59);
  swift_release(v64);
  v42 = (void *)objc_opt_self(UIAlertAction);
  v43 = objc_msgSend(v42, "actionWithTitle:style:handler:", v33, 2, v41);
  _Block_release(v41);

  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000017, (void *)0x8000000100116BB0);
  v45 = v44;
  v46 = (_QWORD *)swift_allocObject(&unk_1001391E0, 40, 7);
  v46[2] = a3;
  v46[3] = a4;
  v46[4] = v32;
  v47 = v32;
  sub_100035C4C(a3, a4);
  v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v45, v49, v50, v51, v52, v53, v54, v55);
  v63 = sub_10008835C;
  v64 = v46;
  v59 = _NSConcreteStackBlock;
  v60 = 1107296256;
  v61 = sub_100040808;
  v62 = &unk_1001391F8;
  v56 = _Block_copy(&v59);
  v57 = objc_msgSend(v42, "actionWithTitle:style:handler:", v48, 1, v56, swift_release(v64).n128_f64[0]);
  _Block_release(v56);

  objc_msgSend(v47, "addAction:", v43);
  objc_msgSend(v47, "addAction:", v57);

  return v47;
}

id sub_100088338(uint64_t a1)
{
  return sub_1000886F0(a1, 13);
}

uint64_t sub_100088340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100088350(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100088360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  DARootViewController *v8;
  DARootViewController *v9;
  DARootViewController *v10;
  DARootViewController *v11;
  NSString v12;
  SEL v13;
  id v14;
  int v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSString v20;
  SEL v21;
  id v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  DARootViewController *v29;
  DARootViewController *v30;
  _QWORD *v31;
  id v32;
  NSString v33;
  SEL v34;
  id v35;
  int v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  DARootViewController *v44;
  DARootViewController *v45;
  _QWORD *v46;
  id v47;
  NSString v48;
  SEL v49;
  id v50;
  int v51;
  id v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  void **v59;
  uint64_t v60;
  void (*v61)(uint64_t, void *);
  void *v62;
  void *v63;
  _QWORD *v64;

  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000021, (void *)0x8000000100116BD0);
  v9 = v8;
  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000023, (void *)0x8000000100116C00);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9, v13, v14, v15, v16, v17, v18, v19);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11, v21, v22, v23, v24, v25, v26, v27);
  v28 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v20, 1);

  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000020, (void *)0x8000000100116C30);
  v30 = v29;
  v31 = (_QWORD *)swift_allocObject(&unk_100139230, 40, 7);
  v31[2] = a1;
  v31[3] = a2;
  v31[4] = v28;
  swift_retain(a2);
  v32 = v28;
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30, v34, v35, v36, v37, v38, v39, v40);
  v63 = sub_1000886E8;
  v64 = v31;
  v59 = _NSConcreteStackBlock;
  v60 = 1107296256;
  v61 = sub_100040808;
  v62 = &unk_100139248;
  v41 = _Block_copy(&v59);
  swift_release(v64);
  v42 = (void *)objc_opt_self(UIAlertAction);
  v43 = objc_msgSend(v42, "actionWithTitle:style:handler:", v33, 2, v41);
  _Block_release(v41);

  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000024, (void *)0x8000000100116C60);
  v45 = v44;
  v46 = (_QWORD *)swift_allocObject(&unk_100139280, 40, 7);
  v46[2] = a3;
  v46[3] = a4;
  v46[4] = v32;
  v47 = v32;
  sub_100035C4C(a3, a4);
  v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v45, v49, v50, v51, v52, v53, v54, v55);
  v63 = sub_10008835C;
  v64 = v46;
  v59 = _NSConcreteStackBlock;
  v60 = 1107296256;
  v61 = sub_100040808;
  v62 = &unk_100139298;
  v56 = _Block_copy(&v59);
  v57 = objc_msgSend(v42, "actionWithTitle:style:handler:", v48, 1, v56, swift_release(v64).n128_f64[0]);
  _Block_release(v56);

  objc_msgSend(v47, "addAction:", v43);
  objc_msgSend(v47, "addAction:", v57);

  return v47;
}

uint64_t sub_1000886BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

id sub_1000886E8(uint64_t a1)
{
  return sub_1000886F0(a1, 14);
}

id sub_1000886F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  (*(void (**)(_QWORD))(v2 + 16))(*(_QWORD *)(v2 + 32));
  return objc_msgSend((id)objc_opt_self(DSAnalytics), "sendAnalyticsWithEvent:", a2);
}

uint64_t sub_100088738()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008876C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(*(_QWORD *)(v0 + 32));
  return result;
}

id sub_1000887B0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = (void *)objc_opt_self(UIFont);
  v2 = objc_msgSend(v1, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v3 = objc_msgSend(v2, "fontDescriptor");
  v4 = objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", 2);

  if (v4)
  {
    v5 = objc_msgSend(v1, "fontWithDescriptor:size:", v4, 0.0);

    v2 = v5;
  }
  objc_msgSend(v0, "setFont:", v2);
  objc_msgSend(v0, "setNumberOfLines:", 0);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);

  return v0;
}

void sub_1000888EC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  unint64_t v14;
  id v15;
  const char *v16;
  void *v17;
  int v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  const char *v26;
  void *v27;
  int v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  unint64_t v33;
  id v34;
  const char *v35;
  void *v36;
  int v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  SEL v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  SEL v52;
  id v53;
  int v54;
  id v55;
  id v56;
  id v57;
  id v58;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView);
  v2 = objc_msgSend(v1, "layer");
  objc_msgSend(v2, "setCornerRadius:", 2.5);

  objc_msgSend(v1, "setClipsToBounds:", 1);
  v3 = objc_msgSend(v1, "layer");
  v4 = objc_msgSend(v3, "sublayers");

  if (!v4)
    goto LABEL_10;
  v5 = sub_100037118(0, &qword_10016C9A8, CALayer_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
    goto LABEL_24;
  v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v14 <= 1)
  {
    swift_bridgeObjectRelease((DARootViewController *)v6, v7, v8, v9, v10, v11, v12, v13);
    while (1)
    {
LABEL_10:
      v24 = objc_msgSend(v1, "subviews");
      v25 = sub_100037118(0, (unint64_t *)&qword_10016D860, UIView_ptr);
      v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

      if (!((unint64_t)v6 >> 62))
      {
        v33 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_12;
      }
      v43 = v6 < 0 ? v6 : v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v33 = _CocoaArrayWrapper.endIndex.getter(v43);
      swift_bridgeObjectRelease((DARootViewController *)v6, v44, v45, v46, v47, v48, v49, v50);
      if ((v33 & 0x8000000000000000) != 0)
        break;
LABEL_12:
      if (v33 <= 1)
      {
        swift_bridgeObjectRelease((DARootViewController *)v6, v26, v27, v28, v29, v30, v31, v32);
        goto LABEL_18;
      }
      if ((v6 & 0xC000000000000001) != 0)
        goto LABEL_29;
      if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
      {
        v34 = *(id *)(v6 + 40);
        goto LABEL_16;
      }
      __break(1u);
LABEL_31:
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v6);
LABEL_8:
      v23 = v15;
      swift_bridgeObjectRelease((DARootViewController *)v6, v16, v17, v18, v19, v20, v21, v22);
      objc_msgSend(v23, "setCornerRadius:", 2.5);

    }
    __break(1u);
LABEL_24:
    if (v6 < 0)
      v51 = v6;
    else
      v51 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v14 = _CocoaArrayWrapper.endIndex.getter(v51);
    swift_bridgeObjectRelease((DARootViewController *)v6, v52, v53, v54, v55, v56, v57, v58);
    if ((v14 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_29:
      v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v6);
LABEL_16:
      v42 = v34;
      swift_bridgeObjectRelease((DARootViewController *)v6, v35, v36, v37, v38, v39, v40, v41);
      objc_msgSend(v42, "setClipsToBounds:", 1);

LABEL_18:
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      return;
    }
  }
  if ((v6 & 0xC000000000000001) != 0)
    goto LABEL_31;
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v15 = *(id *)(v6 + 40);
    goto LABEL_8;
  }
  __break(1u);
}

id sub_100088BA0()
{
  char *v0;

  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView]);
  return objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel]);
}

void sub_100088C00()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  SEL v37;
  id v38;
  int v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  Class isa;

  v1 = v0;
  v44 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v3 = swift_allocObject(v2, 112, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010D8B0;
  v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView];
  v5 = objc_msgSend(v4, "centerYAnchor");
  v6 = objc_msgSend(v1, "centerYAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v3 + 32) = v7;
  v8 = objc_msgSend(v4, "leadingAnchor");
  v9 = objc_msgSend(v1, "leadingAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v3 + 40) = v10;
  v11 = objc_msgSend(v4, "trailingAnchor");
  v12 = objc_msgSend(v1, "trailingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v3 + 48) = v13;
  v14 = objc_msgSend(v4, "heightAnchor");
  v15 = objc_msgSend(v14, "constraintEqualToConstant:", 5.0);

  *(_QWORD *)(v3 + 56) = v15;
  v16 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel;
  v17 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel], "leadingAnchor");
  v18 = objc_msgSend(v4, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v3 + 64) = v19;
  v20 = objc_msgSend(*(id *)&v1[v16], "trailingAnchor");
  v21 = objc_msgSend(v4, "trailingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v3 + 72) = v22;
  v23 = objc_msgSend(*(id *)&v1[v16], "bottomAnchor");
  v24 = objc_msgSend(v4, "topAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, -8.0);

  *(_QWORD *)(v3 + 80) = v25;
  v26 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel;
  v27 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel], "topAnchor");
  v28 = objc_msgSend(v4, "bottomAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, 8.0);

  *(_QWORD *)(v3 + 88) = v29;
  v30 = objc_msgSend(*(id *)&v1[v26], "leadingAnchor");
  v31 = objc_msgSend(v4, "leadingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v3 + 96) = v32;
  v33 = objc_msgSend(*(id *)&v1[v26], "trailingAnchor");
  v34 = objc_msgSend(v4, "trailingAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v3 + 104) = v35;
  specialized Array._endMutation()(v36);
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v3, v37, v38, v39, v40, v41, v42, v43);
  objc_msgSend(v44, "activateConstraints:", isa);

}

id sub_100089088(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  char *v17;
  objc_super v19;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_textSpacing] = 0x4020000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressViewHeight] = 0x4014000000000000;
  v9 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView;
  v10 = objc_allocWithZone((Class)UIProgressView);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  *(_DWORD *)&v11[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progress] = 0;
  v12 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel;
  *(_QWORD *)&v11[v12] = sub_1000887B0();
  v13 = &v11[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleText];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel;
  v15 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v16 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  objc_msgSend(v15, "setFont:", v16);

  objc_msgSend(v15, "setNumberOfLines:", 0);
  objc_msgSend(v15, "setTextAlignment:", 1);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v15, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v11[v14] = v15;
  v17 = &v11[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleText];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for SelfServiceProgressView();
  return objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
}

id sub_100089270(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_textSpacing] = 0x4020000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressViewHeight] = 0x4014000000000000;
  v3 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView;
  v4 = objc_allocWithZone((Class)UIProgressView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  *(_DWORD *)&v5[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progress] = 0;
  v6 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel;
  *(_QWORD *)&v5[v6] = sub_1000887B0();
  v7 = &v5[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleText];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel;
  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  objc_msgSend(v9, "setFont:", v10);

  objc_msgSend(v9, "setNumberOfLines:", 0);
  objc_msgSend(v9, "setTextAlignment:", 1);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v5[v8] = v9;
  v11 = &v5[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleText];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for SelfServiceProgressView();
  v12 = objc_msgSendSuper2(&v14, "initWithCoder:", a1);

  return v12;
}

uint64_t sub_100089440()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleText + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleText
                                             + 8));
}

id sub_1000894A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceProgressView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SelfServiceProgressView()
{
  return objc_opt_self(_TtC11Diagnostics23SelfServiceProgressView);
}

void destroy for SelfServiceSuiteResultsView(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
}

uint64_t initializeWithCopy for SelfServiceSuiteResultsView(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  v8 = v4;
  swift_bridgeObjectRetain(v6);
  v9 = v7;
  return a1;
}

_QWORD *assignWithCopy for SelfServiceSuiteResultsView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  a1[5] = a2[5];
  v7 = a2[6];
  v8 = a1[6];
  a1[6] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = (void *)a2[7];
  v10 = (void *)a1[7];
  a1[7] = v9;
  v11 = v9;

  return a1;
}

__n128 initializeWithTake for SelfServiceSuiteResultsView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SelfServiceSuiteResultsView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for SelfServiceSuiteResultsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelfServiceSuiteResultsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SelfServiceSuiteResultsView()
{
  return &type metadata for SelfServiceSuiteResultsView;
}

uint64_t sub_100089790(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10011ED38, 1);
}

uint64_t sub_1000897A0@<X0>(void *a1@<X8>)
{
  double *v1;
  double *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BYTE v32[392];
  _BYTE v33[400];
  char v34;
  _QWORD v35[61];

  v2 = v1;
  v31 = a1;
  v30 = sub_100035CA4(&qword_10016CA48);
  __chkstk_darwin(v30);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RoundedRectangle(0);
  v6 = __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = static VerticalAlignment.center.getter(v6);
  sub_1000899F0(v1, (uint64_t)v32);
  v33[392] = 0;
  v10 = memcpy(&v33[7], v32, 0x181uLL);
  v11 = static Edge.Set.vertical.getter(v10);
  v12 = EdgeInsets.init(_all:)(v1[4]);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v34 = 0;
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v20 = Color.init(_:)(v19);
  v21 = static Edge.Set.all.getter(v20);
  v35[0] = v9;
  v35[1] = 0;
  LOBYTE(v35[2]) = 0;
  memcpy((char *)&v35[2] + 1, v33, 0x188uLL);
  LOBYTE(v35[52]) = v11;
  *(double *)&v35[53] = v12;
  v35[54] = v14;
  v35[55] = v16;
  v35[56] = v18;
  LOBYTE(v35[57]) = v34;
  v35[58] = v20;
  LOBYTE(v35[59]) = v21;
  v22 = *((_QWORD *)v2 + 2);
  v23 = (char *)v8 + *(int *)(v5 + 20);
  v24 = enum case for RoundedCornerStyle.continuous(_:);
  v25 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  *v8 = v22;
  v8[1] = v22;
  sub_10008B064((uint64_t)v8, (uint64_t)v4);
  *(_WORD *)&v4[*(int *)(v30 + 36)] = 256;
  v26 = sub_100035CA4(&qword_10016CA50);
  v27 = v31;
  sub_10006E3E0((uint64_t)v4, (uint64_t)v31 + *(int *)(v26 + 36), &qword_10016CA48);
  memcpy(v27, v35, 0x1D9uLL);
  sub_10008B0A8((uint64_t)v35);
  sub_100036FA0((uint64_t)v4, &qword_10016CA48);
  sub_10008B1FC((uint64_t)v8);
  return sub_10008B238((uint64_t)v35);
}

uint64_t *sub_1000899F0@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  DARootViewController *v29;
  DARootViewController *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  DARootViewController *v39;
  DARootViewController *v40;
  SEL v41;
  id v42;
  int v43;
  id v44;
  id v45;
  id v46;
  id v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  DARootViewController *v52;
  SEL v53;
  id v54;
  int v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  void *v77;
  int v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  uint64_t v83;
  id v84;
  unsigned __int8 v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  char v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  SEL v113;
  id v114;
  int v115;
  id v116;
  id v117;
  id v118;
  id v119;
  uint64_t v121;
  SEL v122;
  id v123;
  int v124;
  id v125;
  id v126;
  id v127;
  id v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  double *v135;
  char v136;
  char v137;
  char v138;
  uint64_t v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  DARootViewController *v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  char v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  char v182;
  _BYTE v183[136];
  char v184;
  char v185;
  _QWORD v186[4];
  char v187;
  char v188;
  int v189;
  __int16 v190;
  uint64_t v191;
  char v192;
  _BYTE v193[7];
  uint64_t v194;
  char v195;
  _BYTE v196[7];
  uint64_t v197;
  uint64_t v198;
  char v199;
  _BYTE v200[7];
  double v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  uint64_t v206[2];
  char v207;
  _BYTE v208[7];
  void (*v209)(void *@<X0>, unsigned __int8@<W1>, _QWORD *@<X8>);
  uint64_t v210;
  uint64_t v211;
  char v212;
  _BYTE v213[7];
  uint64_t v214;
  char v215;
  _BYTE v216[7];
  uint64_t v217;
  uint64_t v218;
  char v219;
  _BYTE v220[7];
  double v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char v225;
  uint64_t v226;
  char v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  _BYTE v239[7];
  _BYTE v240[7];
  char v241;
  _BYTE v242[7];
  char v243;
  _BYTE v244[7];
  char v245;
  char v246;
  _BYTE v247[7];
  _BYTE v248[7];
  char v249;
  _BYTE v250[7];
  char v251;
  int v252;
  __int16 v253;
  char v254;

  v140 = (id)*((_QWORD *)a1 + 6);
  v4 = objc_msgSend(v140, "assetLocator");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = swift_allocObject(&unk_100139490, 32, 7);
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  v159 = v8;
  v135 = a1;
  v9 = *a1;
  v10 = static Alignment.center.getter();
  v12 = _FrameLayout.init(width:height:alignment:)(&v226, *(_QWORD *)&v9, 0, *(_QWORD *)&v9, 0, v10, v11);
  LOBYTE(v9) = v227;
  v154 = v226;
  v155 = v228;
  LOBYTE(v5) = v229;
  v157 = v231;
  v158 = v230;
  v156 = static Edge.Set.horizontal.getter(v12);
  v13 = a1[3];
  v14 = EdgeInsets.init(_all:)(v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v245 = 0;
  v243 = LOBYTE(v9);
  v241 = v5;
  v238 = 0;
  v21 = objc_msgSend(v140, "name");
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  *(_QWORD *)v183 = v22;
  *(_QWORD *)&v183[8] = v24;
  v25 = sub_10003F14C();
  v26 = Text.init<A>(_:)(v183, &type metadata for String, v25);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = static Font.title3.getter();
  v34 = Text.font(_:)(v33, v26, v28, v32, v30);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  swift_release(v33);
  sub_100076B54(v26, v28, v32);
  swift_bridgeObjectRelease(v30, v41, v42, v43, v44, v45, v46, v47);
  v48 = static Font.Weight.semibold.getter();
  v49 = Text.fontWeight(_:)(*(_QWORD *)&v48, 0, v34, v36, v38 & 1, v40);
  v151 = v50;
  v152 = v49;
  v137 = v51;
  v153 = v52;
  sub_100076B54(v34, v36, v38 & 1);
  swift_bridgeObjectRelease(v40, v53, v54, v55, v56, v57, v58, v59);
  v60 = objc_msgSend(v140, "status");
  sub_100084070(v60, (uint64_t)v183);

  v61 = *(_QWORD *)v183;
  v149 = *(_QWORD *)&v183[16];
  v150 = *(_QWORD *)&v183[8];
  v148 = *(_QWORD *)&v183[24];
  v147 = v183[32];
  LOBYTE(v28) = v183[33];
  v62 = *((_QWORD *)v135 + 1);
  v63 = static Alignment.center.getter();
  v65 = _FrameLayout.init(width:height:alignment:)(&v232, v62, 0, v62, 0, v63, v64);
  LOBYTE(v62) = v233;
  v142 = v232;
  v143 = v234;
  LOBYTE(v30) = v235;
  v145 = v237;
  v146 = v236;
  v144 = static Edge.Set.horizontal.getter(v65);
  v66 = EdgeInsets.init(_all:)(v13);
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v254 = v28;
  v251 = v62;
  v249 = (char)v30;
  v246 = 0;
  v73 = objc_msgSend(v140, "sections");
  v74 = sub_100037118(0, &qword_10016C448, ASTSuiteResultSection_ptr);
  v75 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v73, v74);

  if ((unint64_t)v75 >> 62)
  {
    if (v75 < 0)
      v121 = v75;
    else
      v121 = v75 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v75);
    v83 = _CocoaArrayWrapper.endIndex.getter(v121);
    swift_bridgeObjectRelease((DARootViewController *)v75, v122, v123, v124, v125, v126, v127, v128);
  }
  else
  {
    v83 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((DARootViewController *)v75, v76, v77, v78, v79, v80, v81, v82);
  if (v83)
  {
    v141 = (id)Image.init(systemName:)(0x2E6E6F7276656863, 0xED00007468676972);
    v84 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
    v139 = Color.init(uiColor:)(v84);
    v85 = static Edge.Set.trailing.getter();
    v86 = EdgeInsets.init(_all:)(v135[5]);
    v88 = v87;
    v90 = v89;
    v92 = v91;
    v93 = v85;
    v94 = 1;
  }
  else
  {
    v139 = 0;
    v141 = 0;
    v94 = 0;
    v93 = 0;
    v86 = 0.0;
    v88 = 0;
    v90 = 0;
    v92 = 0;
  }
  v95 = v137 & 1;
  v138 = v245;
  LODWORD(v164) = *(_DWORD *)v244;
  *(_DWORD *)((char *)&v164 + 3) = *(_DWORD *)&v244[3];
  LODWORD(v163) = *(_DWORD *)v242;
  *(_DWORD *)((char *)&v163 + 3) = *(_DWORD *)&v242[3];
  v133 = v243;
  v134 = v241;
  LODWORD(v162) = *(_DWORD *)v240;
  *(_DWORD *)((char *)&v162 + 3) = *(_DWORD *)&v240[3];
  *(_DWORD *)((char *)&v161 + 3) = *(_DWORD *)&v239[3];
  LODWORD(v161) = *(_DWORD *)v239;
  v136 = v238;
  v129 = v254;
  v130 = v251;
  v131 = v249;
  v132 = v246;
  *((_QWORD *)&v165 + 1) = v159;
  LOBYTE(v166) = v245;
  DWORD1(v166) = *(_DWORD *)&v244[3];
  *(_DWORD *)((char *)&v166 + 1) = *(_DWORD *)v244;
  *((_QWORD *)&v166 + 1) = sub_100048610;
  *(_QWORD *)&v167 = 0;
  *((_QWORD *)&v167 + 1) = v154;
  LOBYTE(v168) = v243;
  DWORD1(v168) = *(_DWORD *)&v242[3];
  *(_DWORD *)((char *)&v168 + 1) = *(_DWORD *)v242;
  *((_QWORD *)&v168 + 1) = v155;
  LOBYTE(v169) = v241;
  DWORD1(v169) = *(_DWORD *)&v240[3];
  *(_DWORD *)((char *)&v169 + 1) = *(_DWORD *)v240;
  *((_QWORD *)&v169 + 1) = v158;
  *(_QWORD *)&v170 = v157;
  BYTE8(v170) = v156;
  HIDWORD(v170) = *(_DWORD *)&v239[3];
  *(_DWORD *)((char *)&v170 + 9) = *(_DWORD *)v239;
  *(double *)&v171 = v14;
  *((_QWORD *)&v171 + 1) = v16;
  *(_QWORD *)&v172 = v18;
  *((_QWORD *)&v172 + 1) = v20;
  v173 = v238;
  *(_QWORD *)&v174 = v61;
  *((_QWORD *)&v174 + 1) = v150;
  *(_QWORD *)&v175 = v149;
  *((_QWORD *)&v175 + 1) = v148;
  LOBYTE(v176) = v147;
  BYTE1(v176) = v254;
  WORD3(v176) = v253;
  *(_DWORD *)((char *)&v176 + 2) = v252;
  *((_QWORD *)&v176 + 1) = v142;
  LOBYTE(v177) = v251;
  DWORD1(v177) = *(_DWORD *)&v250[3];
  *(_DWORD *)((char *)&v177 + 1) = *(_DWORD *)v250;
  *((_QWORD *)&v177 + 1) = v143;
  LOBYTE(v178) = v249;
  DWORD1(v178) = *(_DWORD *)&v248[3];
  *(_DWORD *)((char *)&v178 + 1) = *(_DWORD *)v248;
  *((_QWORD *)&v178 + 1) = v146;
  *(_QWORD *)&v179 = v145;
  BYTE8(v179) = v144;
  HIDWORD(v179) = *(_DWORD *)&v247[3];
  *(_DWORD *)((char *)&v179 + 9) = *(_DWORD *)v247;
  *(double *)&v180 = v66;
  *((_QWORD *)&v180 + 1) = v68;
  *(_QWORD *)&v181 = v70;
  *((_QWORD *)&v181 + 1) = v72;
  v182 = v246;
  v96 = v181;
  *(_OWORD *)&v183[103] = v180;
  v97 = v178;
  *(_OWORD *)&v183[87] = v179;
  v98 = v177;
  *(_OWORD *)&v183[39] = v176;
  v99 = v174;
  *(_OWORD *)&v183[23] = v175;
  v100 = v171;
  v101 = v172;
  *(_BYTE *)(a2 + 128) = v238;
  v102 = v95;
  v185 = v95;
  v184 = 1;
  *(_OWORD *)&v183[119] = v96;
  v183[135] = v182;
  *(_OWORD *)&v183[55] = v98;
  *(_OWORD *)&v183[71] = v97;
  *(_OWORD *)&v183[7] = v99;
  *(_BYTE *)(a2 + 152) = v95;
  *(_BYTE *)(a2 + 176) = 1;
  *(_QWORD *)(a2 + 305) = *(_QWORD *)&v183[128];
  v103 = *(_OWORD *)&v183[96];
  v104 = *(_OWORD *)&v183[112];
  v105 = *(_OWORD *)&v183[64];
  *(_OWORD *)(a2 + 257) = *(_OWORD *)&v183[80];
  *(_OWORD *)(a2 + 273) = v103;
  *(_OWORD *)(a2 + 289) = v104;
  *(_QWORD *)&v165 = sub_10008B3B0;
  v106 = v168;
  *(_OWORD *)(a2 + 32) = v167;
  *(_OWORD *)(a2 + 48) = v106;
  v107 = v166;
  *(_OWORD *)a2 = v165;
  *(_OWORD *)(a2 + 16) = v107;
  v108 = v169;
  v109 = v170;
  *(_OWORD *)(a2 + 96) = v100;
  *(_OWORD *)(a2 + 112) = v101;
  *(_OWORD *)(a2 + 64) = v108;
  *(_OWORD *)(a2 + 80) = v109;
  *(_QWORD *)(a2 + 136) = v152;
  *(_QWORD *)(a2 + 144) = v151;
  *(_QWORD *)(a2 + 160) = v153;
  *(_QWORD *)(a2 + 168) = 0;
  v110 = *(_OWORD *)v183;
  *(_OWORD *)(a2 + 193) = *(_OWORD *)&v183[16];
  v111 = *(_OWORD *)&v183[48];
  *(_OWORD *)(a2 + 209) = *(_OWORD *)&v183[32];
  *(_OWORD *)(a2 + 225) = v111;
  *(_OWORD *)(a2 + 241) = v105;
  *(_OWORD *)(a2 + 177) = v110;
  *(_QWORD *)(a2 + 320) = v141;
  *(_QWORD *)(a2 + 328) = v94;
  *(_QWORD *)(a2 + 336) = v139;
  *(_QWORD *)(a2 + 344) = v93;
  *(double *)(a2 + 352) = v86;
  *(_QWORD *)(a2 + 360) = v88;
  *(_QWORD *)(a2 + 368) = v90;
  *(_QWORD *)(a2 + 376) = v92;
  *(_BYTE *)(a2 + 384) = 0;
  v160 = v95;
  v112 = v94;
  sub_10008B3B8((uint64_t *)&v165);
  sub_1000769B4(v152, v151, v102);
  swift_bridgeObjectRetain(v153);
  sub_10008B3F4((uint64_t)&v174, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076A34, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076A58);
  sub_10008B1D0((uint64_t)v141, v112, v139);
  sub_10008B360((uint64_t)v141, v112, v139);
  v186[0] = v61;
  v186[1] = v150;
  v186[2] = v149;
  v186[3] = v148;
  v187 = v147;
  v188 = v129;
  v189 = v252;
  v190 = v253;
  v191 = v142;
  v192 = v130;
  *(_DWORD *)v193 = *(_DWORD *)v250;
  *(_DWORD *)&v193[3] = *(_DWORD *)&v250[3];
  v194 = v143;
  v195 = v131;
  *(_DWORD *)&v196[3] = *(_DWORD *)&v248[3];
  *(_DWORD *)v196 = *(_DWORD *)v248;
  v197 = v146;
  v198 = v145;
  v199 = v144;
  *(_DWORD *)&v200[3] = *(_DWORD *)&v247[3];
  *(_DWORD *)v200 = *(_DWORD *)v247;
  v201 = v66;
  v202 = v68;
  v203 = v70;
  v204 = v72;
  v205 = v132;
  sub_10008B3F4((uint64_t)v186, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076AC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076AEC);
  sub_100076B54(v152, v151, v160);
  swift_bridgeObjectRelease(v153, v113, v114, v115, v116, v117, v118, v119);
  v206[0] = (uint64_t)sub_10008B3B0;
  v206[1] = v159;
  v207 = v138;
  *(_DWORD *)v208 = v164;
  *(_DWORD *)&v208[3] = *(_DWORD *)((char *)&v164 + 3);
  v209 = sub_100048610;
  v210 = 0;
  v211 = v154;
  v212 = v133;
  *(_DWORD *)v213 = v163;
  *(_DWORD *)&v213[3] = *(_DWORD *)((char *)&v163 + 3);
  v214 = v155;
  v215 = v134;
  *(_DWORD *)&v216[3] = *(_DWORD *)((char *)&v162 + 3);
  *(_DWORD *)v216 = v162;
  v217 = v158;
  v218 = v157;
  v219 = v156;
  *(_DWORD *)&v220[3] = *(_DWORD *)((char *)&v161 + 3);
  *(_DWORD *)v220 = v161;
  v221 = v14;
  v222 = v16;
  v223 = v18;
  v224 = v20;
  v225 = v136;
  return sub_10008B434(v206);
}

uint64_t sub_10008A368@<X0>(void *a1@<X8>)
{
  return sub_1000897A0(a1);
}

void sub_10008A3A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  DARootViewController *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  void *v32;
  int v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  SEL v47;
  id v48;
  int v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  SEL v55;
  id v56;
  int v57;
  id v58;
  id v59;
  id v60;
  id v61;
  DARootViewController *v62;
  int v63;
  int v64;

  v4 = sub_100035CA4(&qword_10016C9C8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v62 - v8;
  v11 = *(_QWORD *)(a1 + 40);
  v10 = *(DARootViewController **)(a1 + 48);
  v12 = swift_bridgeObjectRetain(v10);
  v13 = static Font.title2.getter(v12);
  v64 = static Edge.Set.top.getter();
  v14 = EdgeInsets.init(_all:)(*(double *)(a1 + 8));
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v63 = static Edge.Set.bottom.getter();
  v21 = EdgeInsets.init(_all:)(*(double *)(a1 + 16));
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = objc_msgSend(*(id *)(a1 + 56), "components");
  v29 = sub_100037118(0, &qword_10016B040, ASTSuiteResultComponent_ptr);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

  if ((unint64_t)v30 >> 62)
  {
    if (v30 < 0)
      v54 = v30;
    else
      v54 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v30);
    v38 = _CocoaArrayWrapper.endIndex.getter(v54);
    swift_bridgeObjectRelease((DARootViewController *)v30, v55, v56, v57, v58, v59, v60, v61);
  }
  else
  {
    v38 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((DARootViewController *)v30, v31, v32, v33, v34, v35, v36, v37);
  if (v38)
  {
    v62 = v10;
    v40 = __chkstk_darwin(v39);
    *(&v62 - 2) = (DARootViewController *)a1;
    v41 = static Axis.Set.vertical.getter(v40);
    v42 = sub_100035CA4(&qword_10016C9D0);
    v43 = sub_1000489C4(&qword_10016C9D8, &qword_10016C9D0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    ScrollView.init(_:showsIndicators:content:)(v41, 1, sub_10008AC00, &v62 - 4, v42, v43);
    v10 = v62;
    v44 = sub_100035CA4(&qword_10016C9E0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v9, 0, 1, v44);
  }
  else
  {
    v45 = sub_100035CA4(&qword_10016C9E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v9, 1, 1, v45);
  }
  sub_10006E3E0((uint64_t)v9, (uint64_t)v7, &qword_10016C9C8);
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v13;
  *(_BYTE *)(a2 + 24) = v64;
  *(double *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v16;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v20;
  *(_BYTE *)(a2 + 64) = 0;
  *(_BYTE *)(a2 + 72) = v63;
  *(double *)(a2 + 80) = v21;
  *(_QWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 96) = v25;
  *(_QWORD *)(a2 + 104) = v27;
  *(_BYTE *)(a2 + 112) = 0;
  v46 = sub_100035CA4(&qword_10016C9E8);
  sub_10006E3E0((uint64_t)v7, a2 + *(int *)(v46 + 48), &qword_10016C9C8);
  swift_bridgeObjectRetain(v10);
  swift_retain(v13);
  sub_100036FA0((uint64_t)v9, &qword_10016C9C8);
  sub_100036FA0((uint64_t)v7, &qword_10016C9C8);
  swift_release(v13);
  swift_bridgeObjectRelease(v10, v47, v48, v49, v50, v51, v52, v53);
}

uint64_t sub_10008A6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  _QWORD v16[2];
  uint64_t v17;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  sub_100035CA4(&qword_10016C9F0);
  v4 = objc_msgSend(*(id *)(a1 + 56), "components");
  v5 = sub_100037118(0, &qword_10016B040, ASTSuiteResultComponent_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  v17 = v6;
  KeyPath = swift_getKeyPath(&unk_10010D9A8);
  v8 = (_OWORD *)swift_allocObject(&unk_1001393A8, 80, 7);
  v9 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v9;
  v10 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v10;
  sub_10008ACA4(a1);
  v11 = sub_100035CA4(&qword_10016C9F8);
  v12 = sub_100035CA4(&qword_10016CA00);
  v13 = sub_1000489C4(&qword_10016CA08, &qword_10016C9F8, (uint64_t)&protocol conformance descriptor for [A]);
  v16[0] = sub_100035D30(&qword_10016CA10);
  v16[1] = sub_10008ACE4();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v16, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  return ForEach<>.init(_:id:content:)(&v17, KeyPath, sub_10008AC9C, v8, v11, v12, v13, &protocol witness table for String, OpaqueTypeConformance2);
}

void sub_10008A860(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, "name");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_10008A8B4(id *a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  id v9;

  v9 = *a1;
  static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)(*(double *)(a2 + 24));
  v3 = swift_allocObject(&unk_1001393D0, 88, 7);
  *(_QWORD *)(v3 + 16) = v9;
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 40) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 72) = v5;
  v6 = v9;
  sub_10008ACA4(a2);
  v7 = sub_100035CA4(&qword_10016CA10);
  v8 = sub_10008ACE4();
  View.onTapGesture(count:perform:)(1, sub_10008ADD0, v3, v7, v8);
  swift_release(v3);

}

void sub_10008A9BC(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  SEL v20;
  id v21;
  int v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __int128 v27;
  uint64_t v28;
  void *v29;
  _BYTE v30[8];
  void *v31;

  v4 = objc_msgSend(a1, "sections");
  v5 = sub_100037118(0, &qword_10016C448, ASTSuiteResultSection_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v19 = v6;
    else
      v19 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v14 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease((DARootViewController *)v6, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((DARootViewController *)v6, v7, v8, v9, v10, v11, v12, v13);
  if (v14)
  {
    sub_10008ADDC(a2 + 32, (uint64_t)v30);
    sub_10008ADDC((uint64_t)v30, (uint64_t)&v31);
    v15 = v31;
    if (v31)
    {
      v27 = xmmword_10010D910;
      v28 = 0x4030000000000000;
      v29 = a1;
      v16 = objc_allocWithZone((Class)sub_100035CA4(&qword_10016CA30));
      v17 = a1;
      v18 = (void *)UIHostingController.init(rootView:)(&v27);
      objc_msgSend(v15, "pushViewController:animated:", v18, 1, v27, v28, v29);

    }
  }
}

uint64_t sub_10008AAEC@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v21[4];

  v3 = sub_100035CA4(&qword_10016C9B0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[1];
  v21[0] = *v1;
  v21[1] = v7;
  v8 = v1[3];
  v21[2] = v1[2];
  v21[3] = v8;
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v4);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v9 = sub_100035CA4(&qword_10016C9B8);
  sub_10008A3A8((uint64_t)v21, (uint64_t)&v6[*(int *)(v9 + 44)]);
  v11 = static Edge.Set.horizontal.getter(v10);
  v12 = EdgeInsets.init(_all:)(*(double *)v21);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_10006E3E0((uint64_t)v6, a1, &qword_10016C9B0);
  v19 = a1 + *(int *)(sub_100035CA4(&qword_10016C9C0) + 36);
  *(_BYTE *)v19 = v11;
  *(double *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v16;
  *(_QWORD *)(v19 + 32) = v18;
  *(_BYTE *)(v19 + 40) = 0;
  return sub_100036FA0((uint64_t)v6, &qword_10016C9B0);
}

uint64_t sub_10008AC00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10008A6D4(*(_QWORD *)(v1 + 16), a1);
}

const char *sub_10008AC08()
{
  return "name";
}

void sub_10008AC18(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setName:", v3);

}

uint64_t sub_10008AC68()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 80, 7);
}

void sub_10008AC9C(id *a1)
{
  uint64_t v1;

  sub_10008A8B4(a1, v1 + 16);
}

uint64_t sub_10008ACA4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(void **)(a1 + 56);
  v4 = *(id *)(a1 + 32);
  swift_bridgeObjectRetain(v2);
  v5 = v3;
  return a1;
}

unint64_t sub_10008ACE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016CA18;
  if (!qword_10016CA18)
  {
    v1 = sub_100035D30(&qword_10016CA10);
    sub_10008AD50();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016CA18);
  }
  return result;
}

unint64_t sub_10008AD50()
{
  unint64_t result;

  result = qword_10016CA20;
  if (!qword_10016CA20)
  {
    result = swift_getWitnessTable(&unk_10010D9F4, &type metadata for SelfServiceResultsComponentCellView);
    atomic_store(result, (unint64_t *)&qword_10016CA20);
  }
  return result;
}

uint64_t sub_10008AD94()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 88, 7);
}

void sub_10008ADD0()
{
  uint64_t v0;

  sub_10008A9BC(*(void **)(v0 + 16), v0 + 24);
}

uint64_t sub_10008ADDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4(&qword_10016CA28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for SelfServiceResultsComponentCellView(uint64_t a1)
{

}

uint64_t initializeWithCopy for SelfServiceResultsComponentCellView(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for SelfServiceResultsComponentCellView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v3 = (void *)a2[6];
  v4 = (void *)a1[6];
  a1[6] = v3;
  v5 = v3;

  return a1;
}

__n128 initializeWithTake for SelfServiceResultsComponentCellView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SelfServiceResultsComponentCellView(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for SelfServiceResultsComponentCellView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelfServiceResultsComponentCellView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SelfServiceResultsComponentCellView()
{
  return &type metadata for SelfServiceResultsComponentCellView;
}

unint64_t sub_10008AFD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016CA38;
  if (!qword_10016CA38)
  {
    v1 = sub_100035D30(&qword_10016C9C0);
    sub_1000489C4(&qword_10016CA40, &qword_10016C9B0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016CA38);
  }
  return result;
}

uint64_t sub_10008B054(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10011ED60, 1);
}

uint64_t sub_10008B064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008B0A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 160);
  v4 = *(_QWORD *)(a1 + 168);
  v5 = *(_BYTE *)(a1 + 176);
  v6 = *(_QWORD *)(a1 + 184);
  v7 = *(_QWORD *)(a1 + 224);
  v11 = *(_QWORD *)(a1 + 216);
  v12 = *(_QWORD *)(a1 + 208);
  v8 = *(_QWORD *)(a1 + 232);
  v13 = *(_BYTE *)(a1 + 241);
  v15 = *(_QWORD *)(a1 + 352);
  v16 = *(_QWORD *)(a1 + 344);
  v14 = *(_QWORD *)(a1 + 360);
  v17 = *(_QWORD *)(a1 + 464);
  v9 = *(_BYTE *)(a1 + 240);
  sub_100048A28(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_retain(v2);
  sub_1000769B4(v3, v4, v5);
  swift_bridgeObjectRetain(v6);
  sub_100076AB8(v12, v11, v7, v8, v9, v13, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076A34, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076A58);
  sub_10008B1D0(v16, v15, v14);
  swift_retain(v17);
  return a1;
}

uint64_t sub_10008B1D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_retain(result);
    return swift_retain(a3);
  }
  return result;
}

uint64_t sub_10008B1FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008B238(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  DARootViewController *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  SEL v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 160);
  v4 = *(_QWORD *)(a1 + 168);
  v5 = *(_BYTE *)(a1 + 176);
  v6 = *(DARootViewController **)(a1 + 184);
  v7 = *(_QWORD *)(a1 + 224);
  v18 = *(_QWORD *)(a1 + 216);
  v19 = *(_QWORD *)(a1 + 208);
  v8 = *(_QWORD *)(a1 + 232);
  v20 = *(_BYTE *)(a1 + 241);
  v22 = *(_QWORD *)(a1 + 352);
  v23 = *(_QWORD *)(a1 + 344);
  v21 = *(_QWORD *)(a1 + 360);
  v24 = *(_QWORD *)(a1 + 464);
  v9 = *(_BYTE *)(a1 + 240);
  sub_100048A60(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_release(v2);
  sub_100076B54(v3, v4, v5);
  swift_bridgeObjectRelease(v6, v10, v11, v12, v13, v14, v15, v16);
  sub_100076AB8(v19, v18, v7, v8, v9, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076AC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_100076AEC);
  sub_10008B360(v23, v22, v21);
  swift_release(v24);
  return a1;
}

uint64_t sub_10008B360(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_release(result);
    return swift_release(a3);
  }
  return result;
}

uint64_t sub_10008B38C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008B3B0()
{
  uint64_t v0;

  return sub_10004824C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t *sub_10008B3B8(uint64_t *a1)
{
  uint64_t v2;

  v2 = a1[4];
  sub_100048A28(*a1, a1[1]);
  swift_retain(v2);
  return a1;
}

uint64_t sub_10008B3F4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  sub_100076AB8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32), *(_BYTE *)(a1 + 33), a2, a3);
  return a1;
}

uint64_t *sub_10008B434(uint64_t *a1)
{
  uint64_t v2;

  v2 = a1[4];
  sub_100048A60(*a1, a1[1]);
  swift_release(v2);
  return a1;
}

unint64_t sub_10008B474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016CA58;
  if (!qword_10016CA58)
  {
    v1 = sub_100035D30(&qword_10016CA50);
    sub_10008B4F8();
    sub_1000489C4(&qword_10016CAA0, &qword_10016CA48, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016CA58);
  }
  return result;
}

unint64_t sub_10008B4F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016CA60;
  if (!qword_10016CA60)
  {
    v1 = sub_100035D30(&qword_10016CA68);
    sub_10008B57C();
    sub_1000489C4(&qword_10016CA90, &qword_10016CA98, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016CA60);
  }
  return result;
}

unint64_t sub_10008B57C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016CA70;
  if (!qword_10016CA70)
  {
    v1 = sub_100035D30(&qword_10016CA78);
    sub_1000489C4(&qword_10016CA80, &qword_10016CA88, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016CA70);
  }
  return result;
}

id sub_10008B604()
{
  return sub_10006E090(0);
}

id sub_10008B60C()
{
  return sub_10006E090(1);
}

uint64_t sub_10008B614(uint64_t a1, const char *a2, void *a3, int a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;

  swift_bridgeObjectRelease(*(DARootViewController **)(v8 + 24), a2, a3, a4, a5, a6, a7, a8);
  sub_100035D74(*(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48));
  return swift_deallocClassInstance(v8, 56, 7);
}

uint64_t type metadata accessor for AlertAction()
{
  return objc_opt_self(_TtC11Diagnostics11AlertAction);
}

_QWORD *sub_10008B660(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  _BOOL4 v19;
  _BOOL4 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;

  sub_10005BE38(a1, (uint64_t)&v61);
  v1 = v61;
  if (v67)
  {
    if (v67 != 1)
    {
      if (v67 == 2)
      {
        if (!(v65 | v66 | v61 | v64 | v63 | v62))
        {
          v42 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
          v3 = swift_allocObject(v42, 40, 7);
          *(_OWORD *)(v3 + 16) = xmmword_10010C200;
          v43 = type metadata accessor for AlertAction();
          v5 = swift_allocObject(v43, 56, 7);
          v6 = v5;
          *(_QWORD *)(v5 + 16) = 0xD000000000000026;
          *(_QWORD *)(v5 + 24) = 0x8000000100116D40;
          v7 = sub_10008B604;
          goto LABEL_22;
        }
        if (v61 == 1 && !(v65 | v66 | v64 | v63 | v62))
        {
          v2 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
          v3 = swift_allocObject(v2, 40, 7);
          *(_OWORD *)(v3 + 16) = xmmword_10010C200;
          v4 = type metadata accessor for AlertAction();
          v5 = swift_allocObject(v4, 56, 7);
          v6 = v5;
          strcpy((char *)(v5 + 16), "OPEN_SETTINGS");
          *(_WORD *)(v5 + 30) = -4864;
          v7 = sub_10008B60C;
LABEL_22:
          *(_QWORD *)(v5 + 32) = 0;
          *(_QWORD *)(v5 + 40) = v7;
          goto LABEL_23;
        }
      }
      v8 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
      v3 = swift_allocObject(v8, 40, 7);
      *(_OWORD *)(v3 + 16) = xmmword_10010C200;
      v9 = type metadata accessor for AlertAction();
      v5 = swift_allocObject(v9, 56, 7);
      v6 = v5;
      *(_QWORD *)(v5 + 16) = 19279;
      *(_QWORD *)(v5 + 24) = 0xE200000000000000;
      *(_QWORD *)(v5 + 32) = 1;
      *(_QWORD *)(v5 + 40) = 0;
LABEL_23:
      *(_QWORD *)(v5 + 48) = 0;
      v44 = sub_100035D74(0, 0);
      *(_QWORD *)(v3 + 32) = v6;
      v60 = (_QWORD *)v3;
      specialized Array._endMutation()(v44);
      return v60;
    }
    v31 = v63;
    v32 = v64;
    v33 = v65;
    v34 = v66;
    v60 = _swiftEmptyArrayStorage;
    if (v63)
    {
      v35 = swift_allocObject(&unk_100139518, 32, 7);
      *(_QWORD *)(v35 + 16) = v31;
      *(_QWORD *)(v35 + 24) = v32;
      v36 = type metadata accessor for AlertAction();
      v37 = (_QWORD *)swift_allocObject(v36, 56, 7);
      v37[2] = 0x545345545F444E45;
      v37[3] = 0xEB00000000474E49;
      v37[4] = 2;
      v37[5] = sub_1000370F8;
      v37[6] = v35;
      sub_100035C4C(v31, v32);
      sub_100035C4C(v31, v32);
      sub_100035C4C(v33, v34);
      sub_100035C4C(v31, v32);
      sub_100035D74(0, 0);
      v38 = swift_retain(v37);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
      v40 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v39 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v40 >= v39 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
      v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v37);
      specialized Array._endMutation()(v41);
      sub_100035D74(v31, v32);
      swift_release(v37);
      if (!v33)
        goto LABEL_28;
    }
    else
    {
      sub_100035C4C(v65, v66);
      if (!v33)
      {
LABEL_28:
        v52 = type metadata accessor for AlertAction();
        v53 = (_QWORD *)swift_allocObject(v52, 56, 7);
        v53[2] = 0x4C45434E4143;
        v53[3] = 0xE600000000000000;
        v53[4] = 1;
        v53[5] = 0;
        v53[6] = 0;
        v54 = sub_100035D74(0, 0);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
        v56 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v55 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v56 >= v55 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
        v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v53);
        specialized Array._endMutation()(v57);
        sub_100035D74(v31, v32);
        sub_100035D74(v33, v34);
        return v60;
      }
    }
    v45 = swift_allocObject(&unk_1001394F0, 32, 7);
    *(_QWORD *)(v45 + 16) = v33;
    *(_QWORD *)(v45 + 24) = v34;
    v46 = type metadata accessor for AlertAction();
    v47 = (_QWORD *)swift_allocObject(v46, 56, 7);
    v47[2] = 0x59524F54534948;
    v47[3] = 0xE700000000000000;
    v47[4] = 0;
    v47[5] = sub_1000371AC;
    v47[6] = v45;
    swift_retain_n(v34, 2);
    sub_100035D74(0, 0);
    v48 = swift_retain(v47);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
    v50 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v49 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v50 >= v49 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
    v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v47);
    specialized Array._endMutation()(v51);
    sub_100035D74(v33, v34);
    swift_release(v47);
    goto LABEL_28;
  }
  v11 = (void *)v62;
  v10 = v63;
  v13 = v64;
  v12 = v65;
  v14 = v66;
  v15 = (void *)objc_opt_self(UIDevice);
  v16 = v11;
  sub_100035C4C(v10, v13);
  sub_100035C4C(v12, v14);
  v17 = objc_msgSend(v15, "currentDevice");
  v18 = objc_msgSend(v17, "userInterfaceIdiom");

  v19 = v18 == (id)1;
  v20 = v11 == 0;
  if (v19 && v20)
    v21 = 1414092869;
  else
    v21 = 0xD000000000000017;
  if (v19 && v20)
    v22 = 0xE400000000000000;
  else
    v22 = 0x80000001001141C0;
  v23 = swift_allocObject(&unk_100139540, 33, 7);
  *(_QWORD *)(v23 + 16) = v10;
  *(_QWORD *)(v23 + 24) = v13;
  *(_BYTE *)(v23 + 32) = v1;
  v24 = type metadata accessor for AlertAction();
  v25 = (_QWORD *)swift_allocObject(v24, 56, 7);
  v25[2] = v21;
  v25[3] = v22;
  v25[4] = 2;
  v25[5] = sub_10008BD38;
  v25[6] = v23;
  sub_100035C4C(v10, v13);
  sub_100035D74(0, 0);
  v26 = swift_allocObject(&unk_100139568, 32, 7);
  *(_QWORD *)(v26 + 16) = v12;
  *(_QWORD *)(v26 + 24) = v14;
  v27 = (_QWORD *)swift_allocObject(v24, 56, 7);
  v27[2] = 0x4C45434E4143;
  v27[3] = 0xE600000000000000;
  v27[4] = 1;
  v27[5] = sub_10008BDA8;
  v27[6] = v26;
  sub_100035C4C(v12, v14);
  sub_100035D74(0, 0);
  v28 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_10010C080;
  *(_QWORD *)(v29 + 32) = v25;
  *(_QWORD *)(v29 + 40) = v27;
  v59 = v29;
  specialized Array._endMutation()(v29);
  v30 = v59;
  swift_retain(v25);
  swift_retain(v27);

  sub_100035D74(v10, v13);
  sub_100035D74(v12, v14);
  swift_release(v27);
  swift_release(v25);
  return (_QWORD *)v30;
}

uint64_t sub_10008BD0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008BD30()
{
  return sub_10008BD70(33);
}

void sub_10008BD38(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  void (*v19)(void);
  unsigned __int8 v20;

  v19 = *(void (**)(void))(v18 + 16);
  v20 = *(_BYTE *)(v18 + 32);
  if (v19)
    v19();
  sub_100098BDC(v20, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10008BD68()
{
  return sub_10008BD70(32);
}

uint64_t sub_10008BD70(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 16))
    swift_release(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10008BDA8()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

id sub_10008BDD4(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, "setImage:", a2);
}

void sub_10008BDE4()
{
  void *v0;
  uint64_t v1;

  sub_10008C0F8();
  v0 = (void *)static OS_os_log.disabled.getter();
  if (qword_10016A680 != -1)
    swift_once(&qword_10016A680, sub_10008BFD0);
  if (byte_10016CBA8 == 1)
  {
    v1 = OS_os_log.init(subsystem:category:)(0xD000000000000015, 0x8000000100116D90, 1953722216, 0xE400000000000000);

    v0 = (void *)v1;
  }
  qword_100172368 = (uint64_t)v0;
}

void sub_10008BE84()
{
  void *v0;
  uint64_t v1;

  sub_10008C0F8();
  v0 = (void *)static OS_os_log.disabled.getter();
  if (qword_10016A680 != -1)
    swift_once(&qword_10016A680, sub_10008BFD0);
  if (byte_10016CBA8 == 1)
  {
    v1 = OS_os_log.init(subsystem:category:)(0xD000000000000015, 0x8000000100116D90, 0x617A696C61636F6CLL, 0xEC0000006E6F6974);

    v0 = (void *)v1;
  }
  qword_100172370 = (uint64_t)v0;
}

void sub_10008BF34()
{
  void *v0;
  uint64_t v1;

  sub_10008C0F8();
  v0 = (void *)static OS_os_log.disabled.getter();
  if (qword_10016A680 != -1)
    swift_once(&qword_10016A680, sub_10008BFD0);
  if (byte_10016CBA8 == 1)
  {
    v1 = OS_os_log.init(subsystem:category:)(0xD000000000000015, 0x8000000100116D90, 26997, 0xE200000000000000);

    v0 = (void *)v1;
  }
  qword_100172378 = (uint64_t)v0;
}

uint64_t sub_10008BFD0()
{
  uint64_t result;

  result = sub_10008BFF0();
  byte_10016CBA8 = result & 1;
  return result;
}

uint64_t sub_10008BFF0()
{
  unsigned int has_internal_content;
  __CFString *v1;
  __CFString *v2;
  int AppBooleanValue;
  Boolean keyExistsAndHasValidFormat;

  has_internal_content = os_variant_has_internal_content("com.apple.Diagnostics");
  v1 = (__CFString *)String._bridgeToObjectiveC()();
  v2 = (__CFString *)String._bridgeToObjectiveC()();
  keyExistsAndHasValidFormat = 0;
  CFPreferencesAppSynchronize(v1);
  AppBooleanValue = CFPreferencesGetAppBooleanValue(v2, v1, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat)
    return AppBooleanValue != 0;
  else
    return has_internal_content;
}

uint64_t sub_10008C0C8()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for Logging()
{
  return objc_opt_self(_TtC11Diagnostics7Logging);
}

unint64_t sub_10008C0F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016B180;
  if (!qword_10016B180)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10016B180);
  }
  return result;
}

id sub_10008C200()
{
  _BYTE *v0;
  DARootViewController *v1;
  DARootViewController *v2;
  NSString v3;
  SEL v4;
  id v5;
  int v6;
  id v7;
  id v8;
  id v9;
  id v10;
  DARootViewController *v11;
  DARootViewController *v12;
  NSString v13;
  SEL v14;
  id v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSString v21;
  id v22;
  id v23;
  objc_super v25;

  v0[OBJC_IVAR____TtC11Diagnostics23NoSessionViewController__showingDeviceInformation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics23NoSessionViewController__infoButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics23NoSessionViewController__deviceInformationView] = 0;
  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000013, (void *)0x8000000100116ED0);
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2, v4, v5, v6, v7, v8, v9, v10);
  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000017, (void *)0x8000000100116EF0);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v21);

  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for NoSessionViewController();
  v23 = objc_msgSendSuper2(&v25, "initWithTitle:detailText:icon:contentLayout:", v3, v13, v22, 2);

  return v23;
}

void sub_10008C364()
{
  void *v0;
  void *v1;
  id v2;
  DARootViewController *v3;
  DARootViewController *v4;
  NSString v5;
  SEL v6;
  id v7;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  objc_super v15;

  v1 = v0;
  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for NoSessionViewController();
  objc_msgSendSuper2(&v15, "viewDidLoad");
  objc_msgSend(v0, "setModalPresentationStyle:", 2);
  v2 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  sub_10003FFA0(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000017, (void *)0x80000001001141C0);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4, v6, v7, v8, v9, v10, v11, v12);
  objc_msgSend(v2, "setTitle:forState:", v5, 0);

  sub_100037118(0, (unint64_t *)&qword_10016DFF0, UIAction_ptr);
  v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10008C510, 0);
  objc_msgSend(v2, "addAction:forControlEvents:", v13, 64);

  v14 = objc_msgSend(v1, "buttonTray");
  objc_msgSend(v14, "addButton:", v2);

  if (objc_msgSend((id)objc_opt_self(CBSUtilities), "isCheckerBoardActive"))
    objc_msgSend(v1, "setupInfoButton");

}

void sub_10008C510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  id v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;

  v18 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  v19 = objc_msgSend(v18, "isCheckerBoardActive");
  swift_unknownObjectRelease(v18);
  if (v19)
    sub_100066B64(1);
  else
    sub_100098BDC(9u, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

void sub_10008C5D8(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_100098BDC(0x13u, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

void sub_10008C5E4()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  id v24;
  void *v25;
  double MidX;
  objc_super v27;
  CGRect v28;
  CGRect v29;

  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for NoSessionViewController();
  objc_msgSendSuper2(&v27, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "infoButton");

  if (v1)
  {
    v2 = objc_msgSend(v0, "view");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v0, "infoButton");
      if (v4)
      {
        v5 = v4;
        objc_msgSend(v3, "bringSubviewToFront:", v4);

        v6 = objc_msgSend(v0, "view");
        if (v6)
        {
          v7 = v6;
          if (UIApp)
          {
            v8 = objc_msgSend(UIApp, "userInterfaceLayoutDirection");
            v9 = objc_msgSend(v0, "infoButton");
            if (v9)
            {
              v10 = v9;
              if (v8 == (id)1)
                v11 = 4;
              else
                v11 = 8;
              objc_msgSend(v9, "bounds");
              v13 = v12;
              v15 = v14;

              objc_msgSend(v7, "_rectTuckedInBoundingPathCorner:withSize:cornerRadii:minimumPadding:", v11, v13, v15, 0.0, 0.0, 0.0, 0.0, 0.0);
              v17 = v16;
              v19 = v18;
              v21 = v20;
              v23 = v22;

              v24 = objc_msgSend(v0, "infoButton");
              if (v24)
              {
                v25 = v24;
                v28.origin.x = v17;
                v28.origin.y = v19;
                v28.size.width = v21;
                v28.size.height = v23;
                MidX = CGRectGetMidX(v28);
                v29.origin.x = v17;
                v29.origin.y = v19;
                v29.size.width = v21;
                v29.size.height = v23;
                objc_msgSend(v25, "setCenter:", MidX, CGRectGetMidY(v29));

                return;
              }
LABEL_18:
              __break(1u);
              return;
            }
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
}

id sub_10008C890()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoSessionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NoSessionViewController()
{
  return objc_opt_self(_TtC11Diagnostics23NoSessionViewController);
}

uint64_t sub_10008CBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008CC0C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_10008CC14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v21 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS.QoSClass(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000676C4();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.default(_:), v9);
  v13 = (void *)static OS_dispatch_queue.global(qos:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v14 = swift_allocObject(&unk_100139608, 32, 7);
  *(_QWORD *)(v14 + 16) = v21;
  *(_QWORD *)(v14 + 24) = a2;
  aBlock[4] = sub_10008D3B0;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100139620;
  v15 = _Block_copy(aBlock);
  swift_retain(a2);
  static DispatchQoS.unspecified.getter(v16);
  v24 = _swiftEmptyArrayStorage;
  v17 = sub_100035C5C();
  v18 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v19 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v18, v19, v3, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

void sub_10008CE54(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v4 = qword_100172378;
  v5 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("Checking for session availability", 33, 2, &_mh_execute_header, v4, v5, _swiftEmptyArrayStorage);
  v6 = swift_allocObject(&unk_100139658, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = (void *)objc_opt_self(CBSUtilities);
  swift_retain_n(a2, 2);
  if (objc_msgSend(v7, "isSSRBootIntentSet"))
  {
    byte_10016CC90 = 2;
    a1(2);
    swift_release(a2);
    swift_release(v6);
  }
  else
  {
    v8 = qword_100172378;
    v9 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("Checking AST 2 activity", 23, 2, &_mh_execute_header, v8, v9, _swiftEmptyArrayStorage);
    v10 = objc_msgSend(objc_allocWithZone((Class)DADiagnosticsSessionAvailability), "init");
    v11 = qword_100172388;
    if (qword_100172388)
    {
      swift_bridgeObjectRetain(qword_100172388);
      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v11);
    }
    else
    {
      v12 = 0;
    }
    v13 = swift_allocObject(&unk_100139680, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_10008D3B8;
    *(_QWORD *)(v13 + 24) = v6;
    v16[4] = sub_10008D3C0;
    v17 = v13;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_1000A2514;
    v16[3] = &unk_100139698;
    v14 = _Block_copy(v16);
    v15 = v17;
    swift_retain(v6);
    swift_release(v15);
    objc_msgSend(v10, "checkAvailabilityWithTicketNumber:timeout:exitWhenDone:completion:", v12, 0, v14, 30.0);
    _Block_release(v14);
    swift_release(a2);
    swift_release(v6);

  }
}

double sub_10008D0B4(char a1, void (*a2)(void), uint64_t a3)
{
  double result;
  uint64_t v6;

  if ((a1 - 1) > 1u)
  {
    v6 = swift_allocObject(&unk_1001396D0, 32, 7);
    *(_QWORD *)(v6 + 16) = a2;
    *(_QWORD *)(v6 + 24) = a3;
    swift_retain(a3);
    sub_10008D140((uint64_t)sub_10008D3FC, v6);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  else
  {
    byte_10016CC90 = a1;
    a2();
  }
  return result;
}

void sub_10008D140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v4 = qword_100172378;
  v5 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("Refreshing ELS status", 21, 2, &_mh_execute_header, v4, v5, _swiftEmptyArrayStorage);
  v6 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
  v7 = swift_allocObject(&unk_1001395B8, 32, 7);
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v10[4] = sub_10008D2E4;
  v11 = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10008D32C;
  v10[3] = &unk_1001395D0;
  v8 = _Block_copy(v10);
  v9 = v11;
  swift_retain(a2);
  objc_msgSend(v6, "refreshWithCompletion:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);

}

uint64_t sub_10008D284(char a1, char a2, uint64_t (*a3)(void))
{
  char v3;
  char v4;

  if ((a2 & 1) != 0)
    v3 = 1;
  else
    v3 = 2;
  if ((a1 & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  byte_10016CC90 = v4;
  return a3();
}

uint64_t sub_10008D2C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008D2E4(void *a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);

  v2 = *(uint64_t (**)(void))(v1 + 16);
  if ((unint64_t)objc_msgSend(a1, "status") >= 2)
    byte_10016CC90 = 3;
  return v2();
}

void sub_10008D32C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_10008D398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008D3A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10008D3B0()
{
  uint64_t v0;

  sub_10008CE54(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_10008D3B8(char a1)
{
  uint64_t v1;

  return sub_10008D0B4(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10008D3C0(char a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(void);
  char v4;
  char v5;

  v3 = *(uint64_t (**)(void))(v2 + 16);
  if ((a2 & 1) != 0)
    v4 = 1;
  else
    v4 = 2;
  if ((a1 & 1) != 0)
    v5 = v4;
  else
    v5 = 0;
  byte_10016CC90 = v5;
  return v3();
}

uint64_t sub_10008D3FC(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);

  v2 = *(uint64_t (**)(void))(v1 + 16);
  byte_10016CC90 = a1;
  return v2();
}

id sub_10008D508()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseStackView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseStackView()
{
  return objc_opt_self(_TtC11Diagnostics13BaseStackView);
}

void sub_10008D7DC(void *a1, uint64_t a2, char a3)
{
  char *v3;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  objc_super v18;

  v7 = (objc_class *)type metadata accessor for CardStackView();
  v8 = UIFocusEnvironment.contains(_:)(a1, v7);
  if ((v8 & 1) != 0)
  {
    if (qword_10016A678 != -1)
      v8 = swift_once(&qword_10016A678, sub_10008BF34);
    v9 = qword_100172378;
    v10 = static os_log_type_t.error.getter(v8);
    os_log(_:dso:log:type:_:)("Attempted to add a view that already exists elsewhere in the stack", 66, 2, &_mh_execute_header, v9, v10, &_swiftEmptyArrayStorage);
  }
  else
  {
    objc_msgSend(a1, "setClipsToBounds:", 1);
    objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v11 = type metadata accessor for CardStackSubviewContainer();
    v12 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11)), "init");
    v12[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_animated] = a3 & 1;
    v13 = *(void **)&v12[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView];
    *(_QWORD *)&v12[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView] = a1;
    v14 = a1;
    sub_1000D26B0(v13);
    sub_1000D2A94();

    sub_10008E824(v12, a2);
    v18.receiver = v3;
    v18.super_class = v7;
    objc_msgSendSuper2(&v18, "insertArrangedSubview:atIndex:", v12, a2);
    v15 = *(void (**)(uint64_t))&v3[OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler];
    if (v15)
    {
      v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler + 8];
      v17 = swift_retain(v16);
      v15(v17);
      sub_100035D74((uint64_t)v15, v16);
    }

  }
}

void sub_10008D9A8(void *a1, char a2)
{
  void *v2;
  void *v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  const char *v27;
  void *v28;
  int v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  DARootViewController *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  void *v42;
  int v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  SEL v63;
  id v64;
  int v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  SEL v71;
  id v72;
  int v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  SEL v80;
  char v81;
  id v82;
  int v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t (*v88)();
  uint64_t (**v89)();
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  id v95;
  void *v96;
  unint64_t v97;
  id v98;
  id v99;
  unint64_t v100;
  void *v101;

  v3 = v2;
  v5 = objc_msgSend(v3, "arrangedSubviews");
  v97 = sub_10008F2B8();
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v97);

  v95 = v3;
  v96 = a1;
  if ((unint64_t)v6 >> 62)
  {
LABEL_25:
    if (v6 < 0)
      v54 = v6;
    else
      v54 = v6 & 0xFFFFFFFFFFFFFF8;
    v55 = a1;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v54);
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = a1;
    swift_bridgeObjectRetain(v6);
    if (v7)
    {
LABEL_3:
      v100 = v6 & 0xC000000000000001;
      v9 = 4;
      while (1)
      {
        a1 = (void *)(v9 - 4);
        if (v100)
          v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v6);
        else
          v10 = *(id *)(v6 + 8 * v9);
        v11 = v10;
        v12 = v9 - 3;
        if (__OFADD__(a1, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        v13 = type metadata accessor for CardStackSubviewContainer();
        v14 = swift_dynamicCastClass(v11, v13);
        if (v14)
        {
          v15 = v14;
          v16 = *(void **)(v14 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
          if (v16)
          {
            v17 = v96;
            v18 = v11;
            v98 = (id)v13;
            v19 = v7;
            v20 = v15;
            v21 = v6;
            v22 = v16;
            v23 = static NSObject.== infix(_:_:)(v22);

            v6 = v21;
            v24 = v20;
            v7 = v19;

            if ((v23 & 1) != 0)
              break;
          }
        }

        ++v9;
        if (v12 == v7)
          goto LABEL_29;
      }
      v101 = v18;

      swift_bridgeObjectRelease_n(v6, 2);
      v25 = objc_msgSend(v95, "arrangedSubviews");
      v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v97);

      if ((unint64_t)v26 >> 62)
      {
        if (v26 < 0)
          v70 = v26;
        else
          v70 = v26 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v26);
        v34 = _CocoaArrayWrapper.endIndex.getter(v70);
        swift_bridgeObjectRelease((DARootViewController *)v26, v71, v72, v73, v74, v75, v76, v77);
        if (v34)
          goto LABEL_14;
      }
      else
      {
        v34 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v34)
        {
LABEL_14:
          v93 = v17;
          specialized ContiguousArray.reserveCapacity(_:)(v34);
          if (v34 < 0)
          {
            __break(1u);
            return;
          }
          v35 = 0;
          v36 = v26 & 0xC000000000000001;
          v37 = (DARootViewController *)v26;
          do
          {
            if (v36)
              v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v26);
            else
              v48 = *(id *)(v26 + 8 * v35 + 32);
            v49 = v48;
            v50 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
            v51 = swift_dynamicCastClass(v49, v98);
            if (v51)
            {
              v52 = *(void **)(v51 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
              if (v52)
              {
                v53 = v52;

                v49 = v50;
                v50 = v53;
              }
            }

            ++v35;
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v38);
            v39 = *(_QWORD *)_swiftEmptyArrayStorage.remoteCardFilter;
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v39);
            v40 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v50);
            specialized ContiguousArray._endMutation()(v40);
            v26 = (uint64_t)v37;
          }
          while (v34 != v35);
          swift_bridgeObjectRelease(v37, v41, v42, v43, v44, v45, v46, v47);
          v17 = v93;
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRelease((DARootViewController *)v26, v27, v28, v29, v30, v31, v32, v33);
LABEL_38:
      sub_1000E0F28((uint64_t)v17, (uint64_t)&_swiftEmptyArrayStorage);
      v79 = v78;
      v81 = (char)v80;
      swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v80, v82, v83, v84, v85, v86, v87);
      if ((v81 & 1) == 0)
      {
        v99 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
        objc_msgSend(v99, "setClipsToBounds:", 1);
        objc_msgSend(v99, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v88 = (uint64_t (*)())swift_allocObject(&unk_100139770, 40, 7);
        *((_QWORD *)v88 + 2) = v95;
        *((_QWORD *)v88 + 3) = v24;
        *((_QWORD *)v88 + 4) = v79;
        v89 = (uint64_t (**)())(v24
                             + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedViewRemovedCompletion);
        v90 = *(_QWORD *)(v24 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedViewRemovedCompletion);
        v91 = *(_QWORD *)(v24
                        + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedViewRemovedCompletion
                        + 8);
        *v89 = sub_10008F414;
        v89[1] = v88;
        v92 = v101;
        v95;
        sub_100035D74(v90, v91);
        sub_10008DF14(v99, v17, a2 & 1);

        return;
      }

      v56 = v96;
      goto LABEL_30;
    }
  }
LABEL_29:
  v56 = v96;

  v57 = swift_bridgeObjectRelease_n(v6, 2);
LABEL_30:
  if (qword_10016A678 != -1)
    v57 = swift_once(&qword_10016A678, sub_10008BF34);
  v58 = qword_100172378;
  v59 = static os_log_type_t.error.getter(v57);
  v60 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v61 = swift_allocObject(v60, 72, 7);
  *(_OWORD *)(v61 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v61 + 56) = v97;
  *(_QWORD *)(v61 + 64) = sub_10008F380();
  *(_QWORD *)(v61 + 32) = v56;
  v62 = v56;
  os_log(_:dso:log:type:_:)("Arranged subviews does not contain view: %@, cannot perform remove", 66, 2, &_mh_execute_header, v58, v59, v61);
  swift_bridgeObjectRelease((DARootViewController *)v61, v63, v64, v65, v66, v67, v68, v69);
}

uint64_t sub_10008DEC0(uint64_t a1, char *a2, unint64_t a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  sub_10008EF00(a2, a3);
  objc_msgSend(a2, "removeFromSuperview");
  v4 = &a2[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedViewRemovedCompletion];
  v5 = *(_QWORD *)&a2[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedViewRemovedCompletion];
  v6 = *(_QWORD *)&a2[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedViewRemovedCompletion + 8];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  return sub_100035D74(v5, v6);
}

void sub_10008DF14(void *a1, void *a2, char a3)
{
  char *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  id v76;
  uint64_t v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  void (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char *v88;
  char *v89;
  void *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;

  v6 = objc_msgSend(v3, "arrangedSubviews");
  v91 = sub_10008F2B8();
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v91);

  v88 = v3;
  v86 = a3;
  v90 = a2;
  if ((unint64_t)v7 >> 62)
  {
LABEL_25:
    if (v7 < 0)
      v36 = v7;
    else
      v36 = v7 & 0xFFFFFFFFFFFFFF8;
    v37 = a2;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v36);
    if (v8)
      goto LABEL_3;
LABEL_29:
    v38 = v90;

    swift_bridgeObjectRelease_n(v7, 2);
LABEL_30:
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v39 = qword_100172378;
    v40 = static os_log_type_t.error.getter();
    v41 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v42 = swift_allocObject(v41, 72, 7);
    *(_OWORD *)(v42 + 16) = xmmword_10010BE30;
    *(_QWORD *)(v42 + 56) = v91;
    *(_QWORD *)(v42 + 64) = sub_10008F380();
    *(_QWORD *)(v42 + 32) = v38;
    v43 = v38;
    os_log(_:dso:log:type:_:)("Arranged subviews does not contain view: %@, cannot perform swap", 64, 2, &_mh_execute_header, v39, v40, v42);
    swift_bridgeObjectRelease(v42);
    return;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = a2;
  swift_bridgeObjectRetain(v7);
  if (!v8)
    goto LABEL_29;
LABEL_3:
  a2 = (void *)(v7 & 0xC000000000000001);
  v10 = 4;
  while (1)
  {
    if (a2)
      v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v7);
    else
      v11 = *(id *)(v7 + 8 * v10);
    v12 = v11;
    v13 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    v14 = type metadata accessor for CardStackSubviewContainer();
    v15 = swift_dynamicCastClass(v12, v14);
    if (v15)
    {
      v92 = OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView;
      v16 = *(void **)(v15 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
      if (v16)
      {
        v89 = (char *)v15;
        v17 = v90;
        v94 = v12;
        v18 = v16;
        v19 = static NSObject.== infix(_:_:)(v18);

        if ((v19 & 1) != 0)
          break;
      }
    }

    ++v10;
    if (v13 == v8)
      goto LABEL_29;
  }

  swift_bridgeObjectRelease_n(v7, 2);
  v20 = objc_msgSend(v88, "arrangedSubviews");
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v91);

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v44 = v21;
    else
      v44 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v23 = _CocoaArrayWrapper.endIndex.getter(v44);
    v22 = v21;
    swift_bridgeObjectRelease(v21);
    v24 = v14;
    if (v23)
      goto LABEL_14;
LABEL_37:
    swift_bridgeObjectRelease(v22);
    goto LABEL_38;
  }
  v22 = v21;
  v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  v24 = v14;
  if (!v23)
    goto LABEL_37;
LABEL_14:
  specialized ContiguousArray.reserveCapacity(_:)(v23);
  if (v23 < 0)
  {
    __break(1u);
LABEL_53:
    if (v7 < 0)
      v60 = v7;
    else
      v60 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v49 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease(v7);
    if (!v49)
      goto LABEL_57;
    goto LABEL_41;
  }
  v25 = v22;
  v26 = 0;
  v27 = v22 & 0xC000000000000001;
  do
  {
    if (v27)
      v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v25);
    else
      v30 = *(id *)(v25 + 8 * v26 + 32);
    v31 = v30;
    v32 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v33 = swift_dynamicCastClass(v31, v24);
    if (v33)
    {
      v34 = *(void **)(v33 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
      if (v34)
      {
        v35 = v34;

        v31 = v32;
        v32 = v35;
      }
    }

    ++v26;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v28);
    a2 = (void *)_swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(a2);
    v29 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(a2, v32);
    specialized ContiguousArray._endMutation()(v29);
  }
  while (v23 != v26);
  swift_bridgeObjectRelease(v25);
LABEL_38:
  sub_1000E0F28((uint64_t)v17, (uint64_t)_swiftEmptyArrayStorage);
  v14 = v45;
  v47 = v46;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if ((v47 & 1) != 0)
  {

    v38 = v90;
    goto LABEL_30;
  }
  v48 = objc_msgSend(v88, "arrangedSubviews");
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, v91);

  if ((unint64_t)v7 >> 62)
    goto LABEL_53;
  v49 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v49)
    goto LABEL_57;
LABEL_41:
  specialized ContiguousArray.reserveCapacity(_:)(v49);
  if (v49 < 0)
  {
    __break(1u);
LABEL_75:
    swift_once(&qword_10016A678, sub_10008BF34);
    goto LABEL_59;
  }
  v50 = 0;
  do
  {
    if ((v7 & 0xC000000000000001) != 0)
      v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v7);
    else
      v54 = *(id *)(v7 + 8 * v50 + 32);
    v55 = v54;
    v56 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v57 = swift_dynamicCastClass(v55, v24);
    if (v57)
    {
      v58 = *(void **)(v57 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
      if (v58)
      {
        v59 = v58;

        v55 = v56;
        v56 = v59;
      }
    }

    ++v50;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v51);
    v52 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v52);
    v53 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v56);
    specialized ContiguousArray._endMutation()(v53);
  }
  while (v49 != v50);
LABEL_57:
  swift_bridgeObjectRelease(v7);
  a2 = a1;
  v61 = sub_1000B37A4((uint64_t)a1, (uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if ((v61 & 1) == 0)
  {
    objc_msgSend(a1, "setClipsToBounds:", 1);
    objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v89[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_animated] = v86 & 1;
    v80 = *(void **)&v89[v92];
    *(_QWORD *)&v89[v92] = a1;
    v81 = a1;
    sub_1000D26B0(v80);
    sub_1000D2A94();

    sub_10008EF00(v89, v14);
    sub_10008E824(v89, v14);
    objc_msgSend(v88, "layoutIfNeeded");
    v82 = *(void (**)(uint64_t))&v88[OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler];
    if (v82)
    {
      v83 = *(_QWORD *)&v88[OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler + 8];
      v84 = swift_retain(v83);
      v82(v84);
      sub_100035D74((uint64_t)v82, v83);
    }

    return;
  }
  if (qword_10016A678 != -1)
    goto LABEL_75;
LABEL_59:
  v62 = qword_100172378;
  v63 = static os_log_type_t.error.getter();
  v64 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v65 = swift_allocObject(v64, 112, 7);
  *(_OWORD *)(v65 + 16) = xmmword_10010C3D0;
  *(_QWORD *)(v65 + 56) = v91;
  *(_QWORD *)(v65 + 64) = sub_10008F380();
  *(_QWORD *)(v65 + 32) = a2;
  v66 = a2;
  v67 = objc_msgSend(v88, "arrangedSubviews");
  v68 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v67, v91);

  if ((unint64_t)v68 >> 62)
  {
    if (v68 < 0)
      v85 = v68;
    else
      v85 = v68 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v68);
    v69 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(v68);
    if (v69)
      goto LABEL_61;
LABEL_80:
    swift_bridgeObjectRelease(v68);
LABEL_81:
    *(_QWORD *)(v65 + 96) = sub_100035CA4(&qword_10016CD08);
    *(_QWORD *)(v65 + 104) = sub_10008F3C8();
    *(_QWORD *)(v65 + 72) = _swiftEmptyArrayStorage;
    os_log(_:dso:log:type:_:)("Attempted to swap in a view (%@) that already exists elsewhere in the stack: %@", 79, 2, &_mh_execute_header, v62, v63, v65);

    swift_bridgeObjectRelease(v65);
    return;
  }
  v69 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v69)
    goto LABEL_80;
LABEL_61:
  v93 = v62;
  specialized ContiguousArray.reserveCapacity(_:)(v69);
  if ((v69 & 0x8000000000000000) == 0)
  {
    v70 = 0;
    do
    {
      if ((v68 & 0xC000000000000001) != 0)
        v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v70, v68);
      else
        v74 = *(id *)(v68 + 8 * v70 + 32);
      v75 = v74;
      v76 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      v77 = swift_dynamicCastClass(v75, v24);
      if (v77)
      {
        v78 = *(void **)(v77 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
        if (v78)
        {
          v79 = v78;

          v75 = v76;
          v76 = v79;
        }
      }

      ++v70;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v71);
      v72 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v72);
      v73 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v76);
      specialized ContiguousArray._endMutation()(v73);
    }
    while (v69 != v70);
    swift_bridgeObjectRelease(v68);
    v62 = v93;
    v63 = v63;
    goto LABEL_81;
  }
  __break(1u);
}

void sub_10008E824(char *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void *, _QWORD *, uint64_t, uint64_t);
  id v17;
  void *v18;
  char v19;
  id v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView];
  if (!v6
    || (v25[0] = *(_QWORD *)&a1[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView],
        v7 = sub_10008F2B8(),
        v8 = v6,
        v9 = sub_100035CA4(&qword_10016CD00),
        (swift_dynamicCast(&v22, v25, v7, v9, 6) & 1) == 0))
  {
    v24 = 0;
    v22 = 0u;
    v23 = 0u;
    goto LABEL_7;
  }
  if (!*((_QWORD *)&v23 + 1))
  {
LABEL_7:
    sub_10008F278((uint64_t)&v22);
    v19 = 1;
    goto LABEL_8;
  }
  sub_100078EBC(&v22, (uint64_t)v25);
  v10 = v26;
  v11 = v27;
  sub_10003CEC8(v25, v26);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  if ((v12 & 1) != 0)
  {
    v13 = (_QWORD *)swift_allocObject(&unk_100139748, 24, 7);
    v13[2] = v3;
    v14 = v26;
    v15 = v27;
    sub_10008F2F4((uint64_t)v25, v26);
    v16 = *(void (**)(void *, _QWORD *, uint64_t, uint64_t))(v15 + 40);
    v17 = v3;
    v18 = sub_10008F378;
  }
  else
  {
    v13 = (_QWORD *)swift_allocObject(&unk_100139720, 40, 7);
    v13[2] = v3;
    v13[3] = a1;
    v13[4] = a2;
    v14 = v26;
    v15 = v27;
    sub_10008F2F4((uint64_t)v25, v26);
    v16 = *(void (**)(void *, _QWORD *, uint64_t, uint64_t))(v15 + 40);
    v20 = v3;
    v21 = a1;
    v18 = sub_10008F348;
  }
  v16(v18, v13, v14, v15);
  v19 = v12 ^ 1;
  sub_10003CEEC(v25);
LABEL_8:
  sub_10008EA8C(a1, a2, v19 & 1);
}

uint64_t sub_10008E9DC(uint64_t result)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler);
  if (v1)
  {
    v2 = *(_QWORD *)(result + OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler + 8);
    v3 = swift_retain(v2);
    v1(v3);
    return sub_100035D74((uint64_t)v1, v2);
  }
  return result;
}

void sub_10008EA2C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  sub_10008ECB0(a2, a3);
  v4 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler);
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler + 8);
    v6 = swift_retain(v5);
    v4(v6);
    sub_100035D74((uint64_t)v4, v5);
  }
}

void sub_10008EA8C(char *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  void *v4;
  id v8;
  id v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _BYTE v22[24];

  v4 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView];
  if (!v4)
  {
    if (qword_10016A678 == -1)
    {
LABEL_5:
      v12 = qword_100172378;
      v13 = static os_log_type_t.error.getter();
      os_log(_:dso:log:type:_:)("Container added does not contain a subview", 42, 2, &_mh_execute_header, v12, v13, _swiftEmptyArrayStorage);
      return;
    }
LABEL_17:
    swift_once(&qword_10016A678, sub_10008BF34);
    goto LABEL_5;
  }
  v8 = v4;
  v9 = objc_msgSend(a1, "heightAnchor");
  if ((a3 & 1) != 0)
  {
    objc_msgSend(v8, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
    v11 = objc_msgSend(v9, "constraintEqualToConstant:", v10);
  }
  else
  {
    v14 = objc_msgSend(v8, "heightAnchor");
    v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v14);

    v9 = v14;
  }

  objc_msgSend(v11, "setActive:", 1);
  v15 = (uint64_t *)(v3 + OBJC_IVAR____TtC11Diagnostics13CardStackView_heightConstraints);
  swift_beginAccess(v15, v22, 33, 0);
  v16 = *v15;
  if (!((unint64_t)*v15 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v11;
    if (v17 >= a2)
      goto LABEL_9;
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v16 < 0)
    v19 = *v15;
  else
    v19 = v16 & 0xFFFFFFFFFFFFFF8;
  v20 = v11;
  swift_bridgeObjectRetain(v16);
  v21 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v16);
  if (v21 < a2)
    goto LABEL_15;
LABEL_9:
  if (a2 < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_100034B64(a2, a2, (uint64_t)v11);
  swift_endAccess(v22);

}

void sub_10008ECB0(uint64_t a1, unint64_t a2)
{
  char *v2;
  char **v3;
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  double v13;
  id v14;
  uint64_t v15;
  id v16;
  _BYTE v17[24];

  v4 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
  if (v4)
  {
    v6 = (unint64_t)&v2[OBJC_IVAR____TtC11Diagnostics13CardStackView_heightConstraints];
    swift_beginAccess(&v2[OBJC_IVAR____TtC11Diagnostics13CardStackView_heightConstraints], v17, 0, 0);
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6 >> 62)
    {
      if (v7 < 0)
        v15 = *(_QWORD *)v6;
      else
        v15 = v7 & 0xFFFFFFFFFFFFFF8;
      v16 = v4;
      swift_bridgeObjectRetain(v7);
      v8 = _CocoaArrayWrapper.endIndex.getter(v15);
      swift_bridgeObjectRelease(v7);
      if (v8 <= (uint64_t)a2)
        goto LABEL_17;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      v9 = v4;
      if (v8 <= (uint64_t)a2)
      {
LABEL_17:

        return;
      }
    }
    v10 = *(_QWORD *)v6;
    if ((*(_QWORD *)v6 & 0xC000000000000001) == 0)
    {
      if ((a2 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        v11 = *(id *)(v10 + 8 * a2 + 32);
        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_27;
    }
    swift_bridgeObjectRetain(*(_QWORD *)v6);
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v10);
    swift_bridgeObjectRelease(v10);
LABEL_8:
    v3 = &selRef_defaultMetrics;
    objc_msgSend(v11, "setActive:", 0);

    v8 = *(_QWORD *)v6;
    if ((*(_QWORD *)v6 & 0xC000000000000001) == 0)
    {
      if ((a2 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        v12 = *(id *)(v8 + 8 * a2 + 32);
        goto LABEL_12;
      }
      __break(1u);
      goto LABEL_30;
    }
LABEL_27:
    swift_bridgeObjectRetain(v8);
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v8);
    swift_bridgeObjectRelease(v8);
LABEL_12:
    objc_msgSend(v4, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
    objc_msgSend(v12, "setConstant:", v13);

    v6 = *(_QWORD *)v6;
    if ((v6 & 0xC000000000000001) == 0)
    {
      if ((a2 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        v14 = *(id *)(v6 + 8 * a2 + 32);
LABEL_16:
        objc_msgSend(v14, v3[70], 1);

        objc_msgSend(v2, "layoutIfNeeded");
        goto LABEL_17;
      }
      __break(1u);
      return;
    }
LABEL_30:
    swift_bridgeObjectRetain(v6);
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v6);
    swift_bridgeObjectRelease(v6);
    goto LABEL_16;
  }
}

uint64_t sub_10008EF00(char *a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC11Diagnostics13CardStackView_heightConstraints);
  result = swift_beginAccess(v2 + OBJC_IVAR____TtC11Diagnostics13CardStackView_heightConstraints, v22, 0, 0);
  v7 = *v5;
  if ((*v5 & 0xC000000000000001) == 0)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
    {
      v8 = *(id *)(v7 + 8 * a2 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain(*v5);
  v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v7);
  swift_bridgeObjectRelease(v7);
LABEL_5:
  objc_msgSend(v8, "setActive:", 0);
  objc_msgSend(a1, "removeConstraint:", v8);
  swift_beginAccess(v5, v19, 33, 0);
  v9 = (void *)sub_1000E1558(a2);
  swift_endAccess(v19);

  v10 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView];
  if (v10
    && (v19[0] = v10,
        v11 = sub_10008F2B8(),
        v12 = v10,
        v13 = sub_100035CA4(&qword_10016CD00),
        (swift_dynamicCast(&v16, v19, v11, v13, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v17 + 1))
    {
      sub_100078EBC(&v16, (uint64_t)v19);
      v14 = v20;
      v15 = v21;
      sub_10008F2F4((uint64_t)v19, v20);
      (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v15 + 40))(0, 0, v14, v15);

      return sub_10003CEEC(v19);
    }
  }
  else
  {
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
  }

  return sub_10008F278((uint64_t)&v16);
}

void sub_10008F1BC()
{
  uint64_t v0;
  SEL v1;
  id v2;
  int v3;
  id v4;
  id v5;
  id v6;
  id v7;

  sub_100035D74(*(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler + 8));
  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + OBJC_IVAR____TtC11Diagnostics13CardStackView_heightConstraints), v1, v2, v3, v4, v5, v6, v7);
}

id sub_10008F1EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardStackView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CardStackView()
{
  return objc_opt_self(_TtC11Diagnostics13CardStackView);
}

uint64_t sub_10008F278(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100035CA4(&qword_10016CCF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10008F2B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016D860;
  if (!qword_10016D860)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10016D860);
  }
  return result;
}

uint64_t sub_10008F2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10008F31C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_10008F348()
{
  uint64_t v0;

  sub_10008EA2C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10008F354()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008F378()
{
  uint64_t v0;

  return sub_10008E9DC(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10008F380()
{
  unint64_t result;
  unint64_t v1;

  result = qword_10016C730;
  if (!qword_10016C730)
  {
    v1 = sub_10008F2B8();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10016C730);
  }
  return result;
}

unint64_t sub_10008F3C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016CD10;
  if (!qword_10016CD10)
  {
    v1 = sub_100035D30(&qword_10016CD08);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10016CD10);
  }
  return result;
}

uint64_t sub_10008F414()
{
  uint64_t v0;

  return sub_10008DEC0(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

id sub_10008F420()
{
  uint64_t v0;
  objc_super v2;

  v2.receiver = *(id *)(v0 + 16);
  v2.super_class = (Class)type metadata accessor for CardStackView();
  return objc_msgSendSuper2(&v2, "layoutSubviews");
}

uint64_t sub_10008F45C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008F46C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

char *sub_10008F47C(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  id v20;
  char *result;
  void *v22;
  int wapiCapability;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  char *v42;
  id v43;
  id v44;
  void *v45;
  int DeviceClass;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  NSString v51;
  void *v52;
  id v53;
  NSString v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  void *v61;
  void *v62;
  objc_super v63;
  objc_super v64;
  uint64_t v65;
  uint64_t v66;

  *(_QWORD *)&v2[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_progressViewHorizontalPadding] = 0x4046000000000000;
  v5 = OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_progressView;
  v6 = type metadata accessor for SelfServiceProgressView();
  v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6));
  v8 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v7, "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_imageView] = 0;
  v9 = &v8[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteManager] = a1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteID] = a2;
  v10 = a1;
  v11 = a2;

  if (*(_QWORD *)&v10[OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint] != 2)
  {
    _StringGuts.grow(_:)(31);
    DeviceClass = GestaltGetDeviceClass();
    v47 = sub_10009F870(DeviceClass);
    v49 = v48;
    swift_bridgeObjectRelease(0xE000000000000000);
    v65 = v47;
    v66 = v49;
    v50._countAndFlagsBits = 0xD00000000000001DLL;
    v50._object = (void *)0x8000000100117270;
    String.append(_:)(v50);
    v51 = String._bridgeToObjectiveC()();
    v52 = (void *)objc_opt_self(UIImage);
    v53 = objc_msgSend(v52, "_systemImageNamed:", v51);

    if (v53)
    {
      swift_bridgeObjectRelease(v49);
    }
    else
    {
      v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v49);
      v53 = objc_msgSend(v52, "imageNamed:", v54);

    }
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
    v57 = v56;
    sub_10003FFA0(v55, v56, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001CLL, (void *)0x8000000100117290);
    v59 = v58;
    swift_bridgeObjectRelease(v57);
    v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v59);
    v64.receiver = v8;
    v64.super_class = (Class)type metadata accessor for SelfServiceSuiteInProgressViewController();
    v42 = (char *)objc_msgSendSuper2(&v64, "initWithTitle:detailText:icon:contentLayout:", v60, 0, v53, 3);

    return v42;
  }
  v61 = v10;
  v62 = v11;
  v12 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v13 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v14 = objc_msgSend(v13, "configurationWithHierarchicalColor:", v12);

  v15 = objc_msgSend(v13, "configurationWithScale:", 3);
  v16 = objc_msgSend(v14, "configurationByApplyingConfiguration:", v15);

  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v18, v17);

  v20 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v19);
  objc_msgSend(v20, "setContentMode:", 1);
  v65 = 0xD00000000000001FLL;
  v66 = 0x80000001001172D0;
  result = (char *)(id)MobileGestalt_get_current_device(objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0));
  if (result)
  {
    v22 = result;
    wapiCapability = MobileGestalt_get_wapiCapability();

    if (wapiCapability)
      v24 = 0x4E414C575FLL;
    else
      v24 = 0x494649575FLL;
    v25 = 0xE500000000000000;
    String.append(_:)(*(Swift::String *)&v24);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
    v28 = v27;
    sub_10003FFA0(v26, v27, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001CLL, (void *)0x80000001001172F0);
    v30 = v29;
    swift_bridgeObjectRelease(v28);
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v32 = sub_10004016C(v65, v66);
    v34 = v33;
    swift_bridgeObjectRelease(v66);
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
    v37 = v36;
    sub_10003FFA0(v35, v36, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v32, v34);
    v39 = v38;
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v37);
    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    v63.receiver = v8;
    v63.super_class = (Class)type metadata accessor for SelfServiceSuiteInProgressViewController();
    v41 = objc_msgSendSuper2(&v63, "initWithTitle:detailText:icon:contentLayout:", v31, v40, 0, 3);

    v42 = (char *)v41;
    v43 = objc_msgSend(v42, "headerView");
    v44 = objc_msgSend(v43, "customIconContainerView");

    if (v44)
    {
      objc_msgSend(v44, "addSubview:", v20);

      v45 = *(void **)&v42[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_imageView];
      *(_QWORD *)&v42[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_imageView] = v20;

    }
    else
    {

      v45 = v62;
    }

    return v42;
  }
  __break(1u);
  return result;
}

void sub_10008FAE4()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char *v7;
  Class isa;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  DARootViewController *v14;
  id v15;
  void *v16;
  SEL v17;
  id v18;
  int v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  DARootViewController *v27;
  unint64_t v28;
  const char *v29;
  void *v30;
  int v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t *v37;
  DARootViewController *v38;
  DARootViewController *v39;
  void *v40;
  id v41;
  NSString v42;
  SEL v43;
  id v44;
  int v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  DARootViewController *v52;
  id v53;
  void *v54;
  SEL v55;
  id v56;
  int v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  DARootViewController *v64;
  DARootViewController *v65;
  uint64_t v66;
  const char *v67;
  void *v68;
  int v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  uint64_t v74;
  DARootViewController *v75;
  DARootViewController *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  const char *v80;
  const char *v81;
  id v82;
  int v83;
  id v84;
  id v85;
  id v86;
  id v87;
  SEL v88;
  id v89;
  int v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t *v95;
  DARootViewController *v96;
  SEL v97;
  id v98;
  int v99;
  id v100;
  id v101;
  id v102;
  id v103;
  DARootViewController *v104;
  void *v105;
  id v106;
  SEL v107;
  id v108;
  int v109;
  id v110;
  id v111;
  id v112;
  id v113;
  char *v114;
  id v115;
  UIAction_optional v116;
  UIMenu_optional v117;

  v1 = v0;
  v2 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v2, "setHidesBackButton:", 1);

  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteManager];
  v4 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint) == 1)
  {
    v5 = objc_msgSend(v0, "navigationItem");
    sub_100037118(0, &qword_10016C620, UIBarButtonItem_ptr);
    sub_100037118(0, (unint64_t *)&qword_10016DFF0, UIAction_ptr);
    v6 = swift_allocObject(&unk_1001399D8, 24, 7);
    *(_QWORD *)(v6 + 16) = v0;
    v7 = v0;
    v116.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100093B80, v6);
    v116.is_nil = 0;
    isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemCancel, v116, v117).super.super.isa;
    objc_msgSend(v5, "setLeftBarButtonItem:", isa);

  }
  v114 = *(char **)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_progressView];
  objc_msgSend(v114, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  v10 = *(void **)(v3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v10)
  {
    v11 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteID];
    v12 = objc_msgSend(v10, "suitesAvailable");
    v13 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
    v14 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

    v15 = v11;
    v16 = sub_100083CF0((uint64_t)v14);
    swift_bridgeObjectRelease(v14, v17, v18, v19, v20, v21, v22, v23);

    if (v16)
    {
      v24 = v4;
      v25 = objc_msgSend(v16, "suiteNameLocalizedString");
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = (unint64_t)v27;

      v36 = HIBYTE(v28) & 0xF;
      if ((v28 & 0x2000000000000000) == 0)
        v36 = v26 & 0xFFFFFFFFFFFFLL;
      if (!v36)
      {
        swift_bridgeObjectRelease((DARootViewController *)v28, v29, v30, v31, v32, v33, v34, v35);
        v4 = v24;
        v50 = *(void **)(v3 + v9);
        if (!v50)
          return;
        goto LABEL_11;
      }
      v37 = (uint64_t *)&v114[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleText];
      v38 = *(DARootViewController **)&v114[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleText + 8];
      *v37 = v26;
      v37[1] = v28;
      swift_bridgeObjectRelease(v38, v29, v30, v31, v32, v33, v34, v35);
      v39 = (DARootViewController *)v37[1];
      v4 = v24;
      if (v39)
      {
        v40 = *(void **)&v114[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel];
        swift_bridgeObjectRetain(v37[1]);
        v41 = v40;
        v42 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v39, v43, v44, v45, v46, v47, v48, v49);
        objc_msgSend(v41, "setText:", v42);

        v4 = v24;
      }
    }
    v50 = *(void **)(v3 + v9);
    if (!v50)
      return;
LABEL_11:
    v51 = objc_msgSend(v50, "suitesAvailable");
    v52 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, v13);

    v53 = v15;
    v54 = sub_100083CF0((uint64_t)v52);
    swift_bridgeObjectRelease(v52, v55, v56, v57, v58, v59, v60, v61);

    if (v54)
    {
      v62 = objc_msgSend(v54, "estimatedCompletionTimeLocalizedString");
      v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
      v65 = v64;

      if (((unint64_t)v65 & 0x2000000000000000) != 0)
        v66 = ((unint64_t)v65 >> 56) & 0xF;
      else
        v66 = v63 & 0xFFFFFFFFFFFFLL;

      if (v66 && *(_QWORD *)(v3 + v4) == 1)
      {
        v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Localizable-SelfService"));
        v76 = v75;
        v77 = sub_100035CA4((uint64_t *)&unk_10016BE40);
        v78 = swift_allocObject(v77, 72, 7);
        *(_OWORD *)(v78 + 16) = xmmword_10010BE30;
        *(_QWORD *)(v78 + 56) = &type metadata for String;
        *(_QWORD *)(v78 + 64) = sub_100047048();
        *(_QWORD *)(v78 + 32) = v63;
        *(_QWORD *)(v78 + 40) = v65;
        v79 = sub_10003FFA0(v74, v76, v78, 0xD000000000000023, (void *)0x8000000100117400);
        v81 = v80;
        swift_bridgeObjectRelease(v76, v80, v82, v83, v84, v85, v86, v87);
        swift_bridgeObjectRelease((DARootViewController *)v78, v88, v89, v90, v91, v92, v93, v94);
        v95 = (uint64_t *)&v114[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleText];
        v96 = *(DARootViewController **)&v114[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleText + 8];
        *v95 = v79;
        v95[1] = (uint64_t)v81;
        swift_bridgeObjectRelease(v96, v97, v98, v99, v100, v101, v102, v103);
        v104 = (DARootViewController *)v95[1];
        if (v104)
        {
          v105 = *(void **)&v114[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel];
          swift_bridgeObjectRetain(v95[1]);
          v106 = v105;
          v115 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v104, v107, v108, v109, v110, v111, v112, v113);
          objc_msgSend(v106, "setText:", v115);

        }
      }
      else
      {
        swift_bridgeObjectRelease(v65, v67, v68, v69, v70, v71, v72, v73);
      }
    }
  }
}

void sub_10008FFF0(int a1, char *a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a2, "navigationItem");
  v4 = objc_msgSend(v3, "leftBarButtonItem");

  if (v4)
  {
    objc_msgSend(v4, "setEnabled:", 0);

  }
  sub_100070098(*(void **)&a2[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteID]);
}

void sub_100090084()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  SEL v26;
  id v27;
  int v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  Class v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  Class v51;
  SEL v52;
  id v53;
  int v54;
  id v55;
  id v56;
  id v57;
  id v58;
  objc_class *v59;

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010BF30;
  v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_progressView];
  v5 = objc_msgSend(v4, "leadingAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "leadingAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v7, 44.0);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(v4, "trailingAnchor");
  v10 = objc_msgSend(v1, "contentView");
  v11 = objc_msgSend(v10, "trailingAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v11, -44.0);
  *(_QWORD *)(v3 + 40) = v12;
  v13 = objc_msgSend(v4, "centerXAnchor");
  v14 = objc_msgSend(v1, "view");
  if (!v14)
  {
    __break(1u);
    goto LABEL_9;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "centerXAnchor");

  v17 = objc_msgSend(v13, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v3 + 48) = v17;
  v18 = objc_msgSend(v4, "centerYAnchor");
  v19 = objc_msgSend(v1, "view");
  if (!v19)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v20 = v19;
  v21 = (void *)objc_opt_self(NSLayoutConstraint);
  v22 = objc_msgSend(v20, "centerYAnchor");

  v23 = objc_msgSend(v18, "constraintEqualToAnchor:", v22);
  *(_QWORD *)(v3 + 56) = v23;
  specialized Array._endMutation()(v24);
  sub_100037118(0, (unint64_t *)&qword_10016B060, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v3, v26, v27, v28, v29, v30, v31, v32);
  objc_msgSend(v21, "activateConstraints:", isa);

  v33 = objc_msgSend(v1, "headerView");
  v59 = (objc_class *)objc_msgSend(v33, "customIconContainerView");

  v34 = v59;
  if (v59)
  {
    v35 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_imageView];
    if (v35)
    {
      v36 = swift_allocObject(v2, 64, 7);
      *(_OWORD *)(v36 + 16) = xmmword_10010BF30;
      v37 = v35;
      v38 = objc_msgSend(v37, "heightAnchor");
      v39 = -[objc_class heightAnchor](v59, "heightAnchor");
      v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

      *(_QWORD *)(v36 + 32) = v40;
      v41 = objc_msgSend(v37, "widthAnchor");
      v42 = -[objc_class widthAnchor](v59, "widthAnchor");
      v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

      *(_QWORD *)(v36 + 40) = v43;
      v44 = objc_msgSend(v37, "centerXAnchor");
      v45 = -[objc_class centerXAnchor](v59, "centerXAnchor");
      v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

      *(_QWORD *)(v36 + 48) = v46;
      v47 = objc_msgSend(v37, "centerYAnchor");
      v48 = -[objc_class centerYAnchor](v59, "centerYAnchor");
      v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

      *(_QWORD *)(v36 + 56) = v49;
      specialized Array._endMutation()(v50);
      v51 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease((DARootViewController *)v36, v52, v53, v54, v55, v56, v57, v58);
      objc_msgSend(v21, "activateConstraints:", v51);

      v34 = v51;
    }

  }
}

uint64_t sub_1000905B8(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t result;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for SelfServiceSuiteInProgressViewController();
  objc_msgSendSuper2(&v8, "viewDidAppear:", a1 & 1);
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteManager]
     + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
  *(_QWORD *)(v3 + 8) = &off_1001397D8;
  result = swift_unknownObjectWeakAssign(v3, v1);
  v5 = *(void (**)(uint64_t))&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  if (v5)
  {
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear + 8];
    v7 = swift_retain(v6);
    v5(v7);
    return sub_100035D74((uint64_t)v5, v6);
  }
  return result;
}

id sub_1000906F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceSuiteInProgressViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SelfServiceSuiteInProgressViewController()
{
  return objc_opt_self(_TtC11Diagnostics40SelfServiceSuiteInProgressViewController);
}

double sub_1000907B0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  __n128 v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double result;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  DARootViewController *v37;
  _QWORD aBlock[5];
  _QWORD *v39;

  v33 = a4;
  v31 = a3;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v36 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS.QoSClass(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchQoS.QoSClass.default(_:), v12);
  v16 = (void *)static OS_dispatch_queue.global(qos:)(v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v17 = (_QWORD *)swift_allocObject(&unk_100139820, 56, 7);
  v17[2] = a2;
  v17[3] = a1;
  v18 = v31;
  v19 = v32;
  v17[4] = v32;
  v17[5] = v18;
  v20 = v33;
  v17[6] = v33;
  aBlock[4] = sub_100091AD4;
  v39 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100139838;
  v21 = _Block_copy(aBlock);
  v22 = a2;
  v23 = a1;
  v24 = v19;
  swift_retain(v20);
  static DispatchQoS.unspecified.getter(v25);
  v37 = &_swiftEmptyArrayStorage;
  v26 = sub_100035C5C();
  v27 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v28 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v37, v27, v28, v6, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  *(_QWORD *)&result = swift_release(v39).n128_u64[0];
  return result;
}

uint64_t sub_100090A20(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  id v11;
  void *v12;
  DARootViewController *v13;
  _QWORD *v14;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;
  SEL v22;
  id v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  _QWORD *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  char *v35;
  id v36;
  void *v37;
  uint64_t v38;
  DARootViewController *v39;
  DARootViewController *v40;
  uint64_t v41;
  SEL v42;
  id v43;
  int v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  DARootViewController *v54;
  id v55;
  void *v56;
  SEL v57;
  id v58;
  int v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  DARootViewController *v66;
  DARootViewController *v67;
  SEL v68;
  id v69;
  int v70;
  id v71;
  id v72;
  id v73;
  id v74;
  unint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  SEL v84;
  id v85;
  int v86;
  id v87;
  id v88;
  id v89;
  id v90;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[3];
  _BYTE v97[16];

  v10 = swift_allocObject(&unk_100139870, 24, 7);
  *(_QWORD *)(v10 + 16) = &_swiftEmptyArrayStorage;
  v11 = objc_msgSend(a1, "imageLocators");
  if (v11)
  {
    v12 = v11;
    v13 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for String);

    if (qword_10016A6C8 != -1)
      swift_once(&qword_10016A6C8, sub_1000A66DC);
    v14 = sub_1000A6740((uint64_t)v13);
    swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
    *(_QWORD *)(v10 + 16) = v14;
    swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v22, v23, v24, v25, v26, v27, v28);
  }
  v29 = (_QWORD *)swift_allocObject(&unk_100139898, 64, 7);
  v29[2] = v10;
  v29[3] = a1;
  v29[4] = a2;
  v29[5] = a3;
  v29[6] = a4;
  v29[7] = a5;
  swift_retain_n(v10, 2);
  v30 = a1;
  v31 = a2;
  v32 = a3;
  swift_retain_n(a5, 2);
  v33 = v30;
  v34 = (char *)v31;
  v35 = (char *)v32;
  v36 = objc_msgSend(v33, "iconLocator");
  if (v36)
  {
    v37 = v36;
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v40 = v39;

    if (qword_10016A6C8 != -1)
      swift_once(&qword_10016A6C8, sub_1000A66DC);
    v41 = qword_1001723C0;
    swift_retain(v29);
    sub_1000B12CC(v38, (unint64_t)v40, v41, (void (*)(_QWORD))sub_100091B64, (uint64_t)v29);
    swift_bridgeObjectRelease(v40, v42, v43, v44, v45, v46, v47, v48);
    swift_release(a5);

    v49 = 2;
    swift_release_n(v10, 2);
    return swift_release_n(v29, v49);
  }
  v94 = a4;
  v50 = *(void **)&v34[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v50)
  {
    v51 = *(void **)&v35[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteID];
    swift_retain_n(v29, 3);
    v52 = objc_msgSend(v50, "suitesAvailable");
    v53 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
    v54 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v52, v53);

    v55 = v51;
    v56 = sub_100083CF0((uint64_t)v54);
    swift_bridgeObjectRelease(v54, v57, v58, v59, v60, v61, v62, v63);

    if (v56)
    {
      if (qword_10016A6C8 != -1)
        swift_once(&qword_10016A6C8, sub_1000A66DC);
      v95 = qword_1001723C0;
      v64 = objc_msgSend(v56, "primaryAssetLocator");
      v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
      v67 = v66;

      swift_retain(v29);
      sub_1000B0EE4(v65, (unint64_t)v67, v95, (void (*)(_QWORD))sub_100091B64, (uint64_t)v29);
      swift_release(a5);

      swift_release_n(v10, 2);
      swift_bridgeObjectRelease(v67, v68, v69, v70, v71, v72, v73, v74);
      v49 = 5;
      return swift_release_n(v29, v49);
    }
  }
  else
  {
    swift_retain_n(v29, 3);
  }
  v75 = sub_10006630C();
  v76 = swift_allocError(&type metadata for String, v75, 0, 0);
  *v77 = 0xD000000000000018;
  v77[1] = 0x8000000100117310;
  v78 = swift_errorRetain(v76);
  if (qword_10016A678 != -1)
    v78 = swift_once(&qword_10016A678, sub_10008BF34);
  v93 = qword_100172378;
  v92 = static os_log_type_t.error.getter(v78);
  v79 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v80 = swift_allocObject(v79, 72, 7);
  *(_OWORD *)(v80 + 16) = xmmword_10010BE30;
  swift_getErrorValue(v76, v97, v96);
  v81 = Error.localizedDescription.getter(v96[1], v96[2]);
  v83 = v82;
  *(_QWORD *)(v80 + 56) = &type metadata for String;
  *(_QWORD *)(v80 + 64) = sub_100047048();
  *(_QWORD *)(v80 + 32) = v81;
  *(_QWORD *)(v80 + 40) = v83;
  os_log(_:dso:log:type:_:)("Instructional prompt icon loading error: %@", 43, 2, &_mh_execute_header, v93, v92, v80);
  swift_bridgeObjectRelease((DARootViewController *)v80, v84, v85, v86, v87, v88, v89, v90);
  swift_errorRelease(v76);
  sub_100090F14(0, v10, v33, v34, v35, v94, a5);
  swift_errorRelease(v76);
  swift_release(a5);

  swift_release_n(v10, 2);
  v49 = 4;
  return swift_release_n(v29, v49);
}

uint64_t sub_100090F14(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[5];
  _QWORD *v43;

  v35 = a6;
  v36 = a7;
  v37 = type metadata accessor for DispatchWorkItemFlags(0);
  v41 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v14 - 8);
  v40 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v38 = static OS_dispatch_queue.main.getter(v17);
  v18 = (_QWORD *)swift_allocObject(&unk_1001398C0, 72, 7);
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a5;
  v19 = v35;
  v20 = v36;
  v18[6] = a1;
  v18[7] = v19;
  v18[8] = v20;
  aBlock[4] = sub_1000933A0;
  v43 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_1001398D8;
  v21 = _Block_copy(aBlock);
  v22 = v43;
  v23 = a1;
  swift_retain(v20);
  swift_retain(a2);
  v24 = a3;
  v25 = a4;
  v26 = a5;
  v27 = swift_release(v22);
  static DispatchQoS.unspecified.getter(v27);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v28 = sub_100035C5C();
  v29 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v30 = sub_100035CE4();
  v31 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v37, v28);
  v32 = (void *)v38;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v13, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v16, v40);
}

void sub_100091138(uint64_t a1, void *a2, uint64_t a3, char *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  DARootViewController *v27;
  id v28;
  void *v29;
  SEL v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  void (*v48)();
  void (**v49)();
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  char v59[24];

  swift_beginAccess(a1 + 16, v59, 0, 0);
  v14 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(v14);
  v15 = objc_msgSend(a2, "instructions");
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String);

  v17 = objc_msgSend(a2, "instructionsStyle");
  v18 = objc_msgSend(a2, "localizedTitle");
  v57 = a6;
  v58 = a4;
  v55 = (uint64_t)v17;
  v56 = v16;
  if (v18)
  {
    v19 = v18;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v22 = v21;
LABEL_6:

    goto LABEL_8;
  }
  v23 = *(void **)(a3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v23)
  {
    v24 = *(void **)&a4[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteID];
    v25 = objc_msgSend(v23, "suitesAvailable");
    v26 = sub_100037118(0, (unint64_t *)&unk_10016B6B0, ASTSuite_ptr);
    v27 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

    v28 = v24;
    v29 = sub_100083CF0((uint64_t)v27);
    swift_bridgeObjectRelease(v27, v30, v31, v32, v33, v34, v35, v36);

    if (v29)
    {
      v19 = objc_msgSend(v29, "suiteNameLocalizedString");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v37;

      goto LABEL_6;
    }
  }
  v20 = 0;
  v22 = 0xE000000000000000;
LABEL_8:
  v38 = objc_msgSend(a2, "localizedSubtitle");
  if (v38)
  {
    v39 = v38;
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v42 = v41;

  }
  else
  {
    v40 = 0;
    v42 = 0xE000000000000000;
  }
  v43 = objc_msgSend(a2, "options");
  v44 = sub_100035CA4(&qword_10016B6A8);
  v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, v44);

  objc_allocWithZone((Class)type metadata accessor for SelfServiceInstructionsViewController());
  v46 = a5;
  v47 = (char *)sub_1000D3EFC(v14, v56, v55, v20, v22, v40, v42, v45, a5, 3);
  v48 = (void (*)())swift_allocObject(&unk_100139910, 40, 7);
  *((_QWORD *)v48 + 2) = v57;
  *((_QWORD *)v48 + 3) = a7;
  *((_QWORD *)v48 + 4) = a2;
  v49 = (void (**)())&v47[OBJC_IVAR____TtC11Diagnostics37SelfServiceInstructionsViewController_onButtonPress];
  v50 = *(_QWORD *)&v47[OBJC_IVAR____TtC11Diagnostics37SelfServiceInstructionsViewController_onButtonPress];
  v51 = *(_QWORD *)&v47[OBJC_IVAR____TtC11Diagnostics37SelfServiceInstructionsViewController_onButtonPress + 8];
  *v49 = sub_1000933E0;
  v49[1] = v48;
  swift_retain(a7);
  v52 = a2;
  sub_100035D74(v50, v51);
  v53 = objc_msgSend(v58, "navigationController");
  if (v53)
  {
    v54 = v53;
    objc_msgSend(v53, "pushViewController:animated:", v47, 1);

  }
}

uint64_t sub_10009144C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  SEL v14;
  id v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _QWORD v22[3];
  _BYTE v23[8];

  if (a2)
  {
    v6 = swift_errorRetain(a2);
    if (qword_10016A678 != -1)
      v6 = swift_once(&qword_10016A678, sub_10008BF34);
    v7 = qword_100172378;
    v8 = static os_log_type_t.error.getter(v6);
    v9 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v10 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v10 + 16) = xmmword_10010BE30;
    swift_getErrorValue(a2, v23, v22);
    v11 = Error.localizedDescription.getter(v22[1], v22[2]);
    v13 = v12;
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    *(_QWORD *)(v10 + 64) = sub_100047048();
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v13;
    os_log(_:dso:log:type:_:)("Instructional prompt icon loading error: %@", 43, 2, &_mh_execute_header, v7, v8, v10);
    swift_bridgeObjectRelease((DARootViewController *)v10, v14, v15, v16, v17, v18, v19, v20);
    swift_errorRelease(a2);
  }
  return a3(a1);
}

void sub_100091588(uint64_t a1, id a2, void *a3)
{
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  void *v21;
  int v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  DARootViewController *v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  SEL v49;
  id v50;
  int v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  SEL v57;
  id v58;
  int v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;

  if (!a1)
  {
    if (a3)
    {
      v14 = a3;
      v15 = objc_msgSend(v14, "results");
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v15, "components");
        v18 = sub_100037118(0, &qword_10016B040, ASTSuiteResultComponent_ptr);
        v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

        if ((unint64_t)v19 >> 62)
        {
          if (v19 < 0)
            v56 = v19;
          else
            v56 = v19 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v19);
          v27 = _CocoaArrayWrapper.endIndex.getter(v56);
          swift_bridgeObjectRelease((DARootViewController *)v19, v57, v58, v59, v60, v61, v62, v63);
        }
        else
        {
          v27 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease((DARootViewController *)v19, v20, v21, v22, v23, v24, v25, v26);
        if (v27)
        {
          v28 = objc_msgSend(v16, "components");
          v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v18);

          if ((unint64_t)v29 >> 62)
          {
            if (v29 < 0)
              v64 = v29;
            else
              v64 = v29 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v29);
            v30 = _CocoaArrayWrapper.endIndex.getter(v64);
          }
          else
          {
            v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v29);
          }
          v66 = a2;
          v67 = v14;
          v65 = v16;
          if (v30)
          {
            if (v30 < 1)
            {
              __break(1u);
              return;
            }
            v31 = 0;
            v32 = &_swiftEmptyArrayStorage;
            do
            {
              if ((v29 & 0xC000000000000001) != 0)
                v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v29);
              else
                v33 = *(id *)(v29 + 8 * v31 + 32);
              v34 = v33;
              v35 = objc_msgSend(v33, "assetLocator", v65, v66, v67);
              v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
              v38 = v37;

              if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
                v32 = (DARootViewController *)sub_100091B94(0, *(_QWORD *)v32->remoteCardFilter + 1, 1, v32);
              v40 = *(_QWORD *)v32->remoteCardFilter;
              v39 = *(_QWORD *)&v32->remoteCardFilter[8];
              if (v40 >= v39 >> 1)
                v32 = (DARootViewController *)sub_100091B94((_QWORD *)(v39 > 1), v40 + 1, 1, v32);
              ++v31;
              *(_QWORD *)v32->remoteCardFilter = v40 + 1;
              v41 = (char *)v32 + 16 * v40;
              *((_QWORD *)v41 + 4) = v36;
              *((_QWORD *)v41 + 5) = v38;
            }
            while (v30 != v31);
          }
          else
          {
            v32 = &_swiftEmptyArrayStorage;
          }
          swift_bridgeObjectRelease_n(v29, 2);
          if (qword_10016A6C8 != -1)
            swift_once(&qword_10016A6C8, sub_1000A66DC);
          v47 = qword_1001723C0;
          v68 = v67;
          v48 = v66;
          sub_1000B16C4((uint64_t)v32, v47, v48, v68);

          swift_bridgeObjectRelease(v32, v49, v50, v51, v52, v53, v54, v55);
          v46 = v68;
          goto LABEL_37;
        }

      }
      else
      {
        v16 = v14;
      }

    }
    v45 = objc_msgSend(a2, "navigationController");
    if (!v45)
      return;
    v68 = v45;
    v46 = objc_msgSend(v45, "popViewControllerAnimated:", 1);
LABEL_37:

    return;
  }
  v5 = swift_errorRetain(a1);
  v6 = static os_log_type_t.error.getter(v5);
  sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  swift_errorRetain(a1);
  v7 = swift_errorRetain(a1);
  v8 = static OS_os_log.default.getter(v7);
  v9 = v6;
  if (os_log_type_enabled(v8, v6))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(a1);
    v12 = _swift_stdlib_bridgeErrorToNSError(a1);
    v69 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);
    *v11 = v12;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error occurred upon suite finish: %@", v10, 0xCu);
    v13 = sub_100035CA4((uint64_t *)&unk_10016E010);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  v42 = objc_msgSend(a2, "navigationController");
  if (v42)
  {
    v43 = v42;
    v44 = objc_msgSend(v42, "popViewControllerAnimated:", 1);
    swift_errorRelease(a1);

  }
  else
  {
    swift_errorRelease(a1);
  }
}

uint64_t sub_100091A80(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_10009315C(a3, a4);
}

uint64_t sub_100091A8C(uint64_t a1, void *a2)
{
  return sub_100092E8C(a2);
}

uint64_t sub_100091A98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100091AD4()
{
  uint64_t v0;

  return sub_100090A20(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100091AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100091AF4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100091AFC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100091B20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100091B64(void *a1)
{
  uint64_t v1;

  return sub_100090F14(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_100091B74(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return _swift_stdlib_bridgeErrorToNSError(v1);
}

_QWORD *sub_100091B94(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100035CA4(&qword_10016CF80);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100092BA4(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100091CA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100091FF0(a1, a2, a3, a4, &qword_10016BBB8, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

DARootViewController *sub_100091CB4(DARootViewController *result, int64_t a2, char a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8)
{
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  DARootViewController *v15;
  int64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  const void *v19;

  v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    v11 = a2;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(a4 + 24);
  v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2)
    goto LABEL_8;
  if (v11 + 0x4000000000000000 >= 0)
  {
    v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v11 = a2;
LABEL_8:
    v12 = *(_QWORD *)(a4 + 16);
    if (v11 <= v12)
      v13 = *(_QWORD *)(a4 + 16);
    else
      v13 = v11;
    if (v13)
    {
      v14 = sub_100035CA4(&qword_10016BA48);
      v15 = (DARootViewController *)swift_allocObject(v14, 16 * v13 + 32, 7);
      v16 = j__malloc_size(v15);
      v17 = v16 - 32;
      if (v16 < 32)
        v17 = v16 - 17;
      *(_QWORD *)v15->remoteCardFilter = v12;
      *(_QWORD *)&v15->remoteCardFilter[8] = 2 * (v17 >> 4);
      v18 = &v15->remoteCardFilter[16];
      if ((v9 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v15 = &_swiftEmptyArrayStorage;
      v18 = &_swiftEmptyArrayStorage.remoteCardFilter[16];
      if ((result & 1) != 0)
      {
LABEL_15:
        v19 = (const void *)(a4 + 32);
        if (v15 != (DARootViewController *)a4 || (unint64_t)v18 >= a4 + 32 + 16 * v12)
          memmove(v18, v19, 16 * v12);
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_24;
      }
    }
    sub_100092C94(0, v12, (unint64_t)v18, a4);
LABEL_24:
    swift_bridgeObjectRelease((DARootViewController *)a4, (SEL)v19, v18, a4, a5, a6, a7, a8);
    return v15;
  }
  __break(1u);
  return result;
}

DARootViewController *sub_100091DC0(DARootViewController *result, int64_t a2, char a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8)
{
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  DARootViewController *v15;
  int64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  const void *v19;

  v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    v11 = a2;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(a4 + 24);
  v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2)
    goto LABEL_8;
  if (v11 + 0x4000000000000000 >= 0)
  {
    v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v11 = a2;
LABEL_8:
    v12 = *(_QWORD *)(a4 + 16);
    if (v11 <= v12)
      v13 = *(_QWORD *)(a4 + 16);
    else
      v13 = v11;
    if (v13)
    {
      v14 = sub_100035CA4(&qword_10016CD78);
      v15 = (DARootViewController *)swift_allocObject(v14, 8 * v13 + 32, 7);
      v16 = j__malloc_size(v15);
      v17 = v16 - 32;
      if (v16 < 32)
        v17 = v16 - 25;
      *(_QWORD *)v15->remoteCardFilter = v12;
      *(_QWORD *)&v15->remoteCardFilter[8] = 2 * (v17 >> 3);
      v18 = &v15->remoteCardFilter[16];
      if ((v9 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v15 = &_swiftEmptyArrayStorage;
      v18 = &_swiftEmptyArrayStorage.remoteCardFilter[16];
      if ((result & 1) != 0)
      {
LABEL_15:
        v19 = (const void *)(a4 + 32);
        if (v15 != (DARootViewController *)a4 || (unint64_t)v18 >= a4 + 32 + 8 * v12)
          memmove(v18, v19, 8 * v12);
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_24;
      }
    }
    sub_100092D84(0, v12, (unint64_t)v18, a4);
LABEL_24:
    swift_bridgeObjectRelease((DARootViewController *)a4, (SEL)v19, v18, a4, a5, a6, a7, a8);
    return v15;
  }
  __break(1u);
  return result;
}

DARootViewController *sub_100091ECC(DARootViewController *result, int64_t a2, char a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8)
{
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  DARootViewController *v15;
  int64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  const void *v19;

  v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    v11 = a2;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(a4 + 24);
  v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2)
    goto LABEL_8;
  if (v11 + 0x4000000000000000 >= 0)
  {
    v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v11 = a2;
LABEL_8:
    v12 = *(_QWORD *)(a4 + 16);
    if (v11 <= v12)
      v13 = *(_QWORD *)(a4 + 16);
    else
      v13 = v11;
    if (v13)
    {
      v14 = sub_1000A4B20();
      v15 = (DARootViewController *)swift_allocObject(v14, ((*(unsigned int *)(v14 + 48) + 7) & 0x1FFFFFFF8) + 8 * v13, *(unsigned __int16 *)(v14 + 52) | 7);
      v16 = j__malloc_size(v15);
      v17 = v16 - 32;
      if (v16 < 32)
        v17 = v16 - 25;
      *(_QWORD *)v15->remoteCardFilter = v12;
      *(_QWORD *)&v15->remoteCardFilter[8] = 2 * (v17 >> 3);
      v18 = &v15->remoteCardFilter[16];
      if ((v9 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v15 = &_swiftEmptyArrayStorage;
      v18 = &_swiftEmptyArrayStorage.remoteCardFilter[16];
      if ((result & 1) != 0)
      {
LABEL_15:
        v19 = (const void *)(a4 + 32);
        if (v15 != (DARootViewController *)a4 || (unint64_t)v18 >= a4 + 32 + 8 * v12)
          memmove(v18, v19, 8 * v12);
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_24;
      }
    }
    sub_100093074(0, v12, (char *)v18, a4);
LABEL_24:
    swift_bridgeObjectRelease((DARootViewController *)a4, (SEL)v19, v18, a4, a5, a6, a7, a8);
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100091FDC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100091FF0(a1, a2, a3, a4, &qword_10016BE60, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_100091FF0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100035CA4(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100093938(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

DARootViewController *sub_1000921FC(DARootViewController *result, int64_t a2, char a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8)
{
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  DARootViewController *v15;
  size_t v16;
  unsigned __int8 *v17;
  const void *v18;

  v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    v11 = a2;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(a4 + 24);
  v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2)
    goto LABEL_8;
  if (v11 + 0x4000000000000000 >= 0)
  {
    v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v11 = a2;
LABEL_8:
    v12 = *(_QWORD *)(a4 + 16);
    if (v11 <= v12)
      v13 = *(_QWORD *)(a4 + 16);
    else
      v13 = v11;
    if (v13)
    {
      v14 = sub_100035CA4(&qword_10016CD70);
      v15 = (DARootViewController *)swift_allocObject(v14, 40 * v13 + 32, 7);
      v16 = j__malloc_size(v15);
      *(_QWORD *)v15->remoteCardFilter = v12;
      *(_QWORD *)&v15->remoteCardFilter[8] = 2 * ((uint64_t)(v16 - 32) / 40);
      v17 = &v15->remoteCardFilter[16];
      if ((v9 & 1) != 0)
      {
LABEL_13:
        v18 = (const void *)(a4 + 32);
        if (v15 != (DARootViewController *)a4 || (unint64_t)v17 >= a4 + 32 + 40 * v12)
          memmove(v17, v18, 40 * v12);
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v15 = &_swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage.remoteCardFilter[16];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100093A50(0, v12, (unint64_t)v17, a4);
LABEL_22:
    swift_bridgeObjectRelease((DARootViewController *)a4, (SEL)v18, v17, a4, a5, a6, a7, a8);
    return v15;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10009231C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = j__malloc_size(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    v7 = sub_1000BD0FC((unint64_t)(v4 + 4), v2, v1);
    v1 = v8;
    swift_bridgeObjectRelease(v7);
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v9 = v1;
    else
      v9 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

DARootViewController *sub_100092410(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return &_swiftEmptyArrayStorage;
  v3 = sub_100035CA4(&qword_10016CF80);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_1000929A8((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_100040800(v8);
  if (v7 != v1)
  {
    __break(1u);
    return &_swiftEmptyArrayStorage;
  }
  return (DARootViewController *)v4;
}

DARootViewController *sub_1000924F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_100092508(a1, a2, a3, a4, (unint64_t *)&qword_10016D860, UIView_ptr);
}

DARootViewController *sub_100092508(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5, _QWORD *a6)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  DARootViewController *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  DARootViewController *result;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v7)
    return &_swiftEmptyArrayStorage;
  v12 = 8 * v7;
  if (v7 <= 0)
  {
    v14 = &_swiftEmptyArrayStorage;
    if (v6 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v13 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v14 = (DARootViewController *)swift_allocObject(v13, v12 + 32, 7);
  v15 = j__malloc_size(v14);
  v16 = v15 - 32;
  if (v15 < 32)
    v16 = v15 - 25;
  *(_QWORD *)v14->remoteCardFilter = v7;
  *(_QWORD *)&v14->remoteCardFilter[8] = (2 * (v16 >> 3)) | 1;
  if (v6 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v7 < 0)
  {
LABEL_19:
    result = (DARootViewController *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v17 = a2 + 8 * a3;
  if (v17 >= (unint64_t)&v14->remoteCardFilter[v12 + 16]
    || (unint64_t)&v14->remoteCardFilter[16] >= v17 + v12)
  {
    sub_100037118(0, a5, a6);
    swift_arrayInitWithCopy(&v14->remoteCardFilter[16]);
    return v14;
  }
  result = (DARootViewController *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t *sub_1000926A0(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD v36[5];

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v8 = a4;
    else
      v8 = a4 & 0xFFFFFFFFFFFFFF8;
    v9 = __CocoaSet.makeIterator()(v8);
    v10 = sub_100037118(0, (unint64_t *)&unk_10016D870, NSError_ptr);
    v11 = sub_100093B88();
    result = Set.Iterator.init(_cocoa:)(v36, v9, v10, v11);
    v4 = v36[0];
    v12 = v36[1];
    v13 = v36[2];
    v14 = v36[3];
    v15 = v36[4];
    v32 = v7;
    if (v6)
      goto LABEL_6;
LABEL_39:
    v16 = 0;
LABEL_49:
    *v32 = v4;
    v32[1] = v12;
    v32[2] = v13;
    v32[3] = v14;
    v32[4] = v15;
    return (uint64_t *)v16;
  }
  v14 = 0;
  v28 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v28;
  v29 = -v28;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  else
    v30 = -1;
  v15 = v30 & *(_QWORD *)(a4 + 56);
  v32 = result;
  if (!a2)
    goto LABEL_39;
LABEL_6:
  if (!a3)
  {
    v16 = 0;
    goto LABEL_49;
  }
  if (a3 < 0)
    goto LABEL_51;
  v16 = 0;
  v33 = (unint64_t)(v13 + 64) >> 6;
  v31 = v13;
  while (1)
  {
    if (v4 < 0)
    {
      v23 = v12;
      v24 = __CocoaSet.Iterator.next()(result);
      if (!v24)
        goto LABEL_48;
      v25 = v24;
      v34 = v24;
      v26 = sub_100037118(0, (unint64_t *)&unk_10016D870, NSError_ptr);
      swift_unknownObjectRetain(v25);
      swift_dynamicCast(&v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
      v19 = v35;
      result = (uint64_t *)swift_unknownObjectRelease(v25);
      v12 = v23;
      if (!v19)
        goto LABEL_48;
      goto LABEL_11;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_10;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v33)
    {
      v15 = 0;
      goto LABEL_48;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_26;
    v22 = v14 + 2;
    if (v14 + 2 >= v33)
    {
      v15 = 0;
      ++v14;
      goto LABEL_48;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v33)
        goto LABEL_45;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_26;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v33)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_48;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v33)
        {
LABEL_45:
          v15 = 0;
          v14 = v22;
          goto LABEL_48;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v27 = v14 + 6;
          while (v33 != v27)
          {
            v21 = *(_QWORD *)(v12 + 8 * v27++);
            if (v21)
            {
              v20 = v27 - 1;
              goto LABEL_26;
            }
          }
          v15 = 0;
          v14 = v33 - 1;
          goto LABEL_48;
        }
        goto LABEL_26;
      }
    }
    v20 = v22;
LABEL_26:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_10:
    result = (uint64_t *)*(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_48;
LABEL_11:
    ++v16;
    *v6++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_48:
      v13 = v31;
      goto LABEL_49;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1000929A8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100092BA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100092C94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100092D84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      sub_100035CA4(&qword_10016C1D0);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100092E8C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  __n128 v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_100139938, 32, 7);
  *(_QWORD *)(v13 + 16) = v1;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_100093478;
  v26 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100139950;
  v14 = _Block_copy(aBlock);
  v15 = v26;
  v16 = v2;
  v17 = a1;
  v18 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v19 = sub_100035C5C();
  v20 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v21 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v4, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

char *sub_100093074(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10009315C(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  id v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[5];
  _QWORD *v27;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_100139988, 40, 7);
  v14[2] = a2;
  v14[3] = v2;
  v14[4] = a1;
  aBlock[4] = sub_100093514;
  v27 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_1001399A0;
  v15 = _Block_copy(aBlock);
  v16 = v27;
  swift_errorRetain(a2);
  v17 = a1;
  v18 = v3;
  v19 = swift_release(v16);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v20 = sub_100035C5C();
  v21 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v22 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v6, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v24);
}

uint64_t sub_100093354()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1000933A0()
{
  uint64_t v0;

  sub_100091138(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(char **)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1000933B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1000933E0()
{
  uint64_t v0;
  void (*v1)(void);
  id v2;

  v1 = *(void (**)(void))(v0 + 16);
  v2 = objc_msgSend(*(id *)(v0 + 32), "identifier");
  v1();

}

uint64_t sub_10009344C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100093478()
{
  uint64_t v0;
  uint64_t v1;
  float v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_progressView);
  objc_msgSend(*(id *)(v0 + 24), "floatValue");
  *(float *)(v1 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progress) = v2 / 100.0;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView), "setProgress:animated:", 1);
}

uint64_t sub_1000934E0()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100093514()
{
  uint64_t v0;

  sub_100091588(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_100093520(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  uint64_t v10;
  SEL v11;
  id v12;
  int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  SEL v20;
  id v21;
  int v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  SEL v37;
  id v38;
  int v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v45;
  uint64_t v46;
  SEL v47;
  id v48;
  int v49;
  id v50;
  id v51;
  id v52;
  id v53;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v2 = a2;
  v3 = a1;
  v4 = a2 >> 62;
  if (a2 >> 62)
  {
LABEL_21:
    if (v2 < 0)
      v18 = v2;
    else
      v18 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease((DARootViewController *)v2, v20, v21, v22, v23, v24, v25, v26);
    v27 = v19 - v3;
    if (__OFSUB__(v19, v3))
      goto LABEL_37;
    swift_bridgeObjectRetain(v2);
    v28 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease((DARootViewController *)v2, v29, v30, v31, v32, v33, v34, v35);
    swift_bridgeObjectRetain(v2);
    v36 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease((DARootViewController *)v2, v37, v38, v39, v40, v41, v42, v43);
    if (v36 < 0)
    {
LABEL_38:
      __break(1u);
      return;
    }
    if (v28 >= (v27 & ~(v27 >> 63)) || v28 <= -1)
      v45 = v27 & ~(v27 >> 63);
    else
      v45 = v28;
    if (v27 >= 1)
      v7 = v45;
    else
      v7 = v27 & ~(v27 >> 63);
    swift_bridgeObjectRetain(v2);
    v46 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease((DARootViewController *)v2, v47, v48, v49, v50, v51, v52, v53);
    if (v46 >= v7)
      goto LABEL_10;
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5 >= ((v5 - a1) & ~((uint64_t)(v5 - a1) >> 63)))
    v6 = (v5 - a1) & ~((uint64_t)(v5 - a1) >> 63);
  else
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((uint64_t)(v5 - a1) >= 1)
    v7 = v6;
  else
    v7 = (v5 - a1) & ~((uint64_t)(v5 - a1) >> 63);
  if ((uint64_t)v5 < v7)
    goto LABEL_36;
LABEL_10:
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v8 = 0;
    do
    {
      v9 = v8 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v8);
      v8 = v9;
    }
    while (v7 != v9);
  }
  if (v4)
  {
    if (v2 < 0)
      v10 = v2;
    else
      v10 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    _CocoaArrayWrapper.subscript.getter(0, v7, v10);
    swift_bridgeObjectRelease((DARootViewController *)v2, v11, v12, v13, v14, v15, v16, v17);
  }
  else
  {
    swift_bridgeObjectRetain(v2);
  }
}

void sub_1000936F4(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  DARootViewController *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  DARootViewController *v21;
  uint64_t v22;
  uint64_t v23;
  DARootViewController *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  Class isa;
  SEL v32;
  id v33;
  int v34;
  id v35;
  id v36;
  id v37;
  id v38;
  DARootViewController *v39;

  v3 = objc_msgSend(a1, "navigationController");
  if (!v3)
    return;
  v4 = v3;
  objc_allocWithZone((Class)type metadata accessor for SelfServiceSuiteResultsViewController());
  v5 = sub_10007AC2C(a2);
  v6 = objc_msgSend(v4, "viewControllers");
  v7 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v8 = (DARootViewController *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  sub_100093520(1, (unint64_t)v8);
  v10 = v9;
  v12 = (uint64_t)v11;
  v14 = (uint64_t)v13;
  v16 = v15;
  swift_bridgeObjectRelease(v8, v11, v13, v15, v17, v18, v19, v20);
  if ((v16 & 1) != 0)
  {
    v22 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v23 = swift_unknownObjectRetain_n(v10, 2);
    v24 = (DARootViewController *)swift_dynamicCastClass(v23, v22);
    if (!v24)
    {
      swift_unknownObjectRelease(v10);
      v24 = &_swiftEmptyArrayStorage;
    }
    v25 = *(_QWORD *)v24->remoteCardFilter;
    swift_release(v24);
    if (__OFSUB__(v16 >> 1, v14))
    {
      __break(1u);
    }
    else
    {
      v26 = v10;
      if (v25 == (v16 >> 1) - v14)
      {
        v21 = (DARootViewController *)swift_dynamicCastClass(v10, v22);
        if (!v21)
        {
          swift_unknownObjectRelease(v10);
          v21 = &_swiftEmptyArrayStorage;
        }
        goto LABEL_10;
      }
    }
    swift_unknownObjectRelease(v26);
  }
  v21 = sub_100092508(v10, v12, v14, v16, (unint64_t *)&qword_10016C200, UIViewController_ptr);
LABEL_10:
  swift_unknownObjectRelease(v10);
  v39 = v21;
  v27 = v5;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  v29 = *(_QWORD *)(((unint64_t)v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v28 = *(_QWORD *)(((unint64_t)v39 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v29 >= v28 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
  v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
  specialized Array._endMutation()(v30);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v39, v32, v33, v34, v35, v36, v37, v38);
  objc_msgSend(v4, "setViewControllers:animated:", isa, 1);

}

uint64_t sub_100093938(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100093A50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 40 * a1 + 32;
  v7 = a3 + 40 * v4;
  if (v6 >= v7 || v6 + 40 * v4 <= a3)
  {
    sub_100035CA4((uint64_t *)&unk_10016BE50);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100093B5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100093B80(int a1)
{
  uint64_t v1;

  sub_10008FFF0(a1, *(char **)(v1 + 16));
}

unint64_t sub_100093B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016CD80;
  if (!qword_10016CD80)
  {
    v1 = sub_100037118(255, (unint64_t *)&unk_10016D870, NSError_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10016CD80);
  }
  return result;
}

double sub_100093BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  DARootViewController *v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS.QoSClass(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000676C4();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchQoS.QoSClass.default(_:), v10);
  v14 = (void *)static OS_dispatch_queue.global(qos:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v15 = swift_allocObject(&unk_100139A08, 32, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  aBlock[4] = sub_100094EEC;
  v27 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100139A20;
  v16 = _Block_copy(aBlock);
  swift_retain(a2);
  static DispatchQoS.unspecified.getter(v17);
  v25 = &_swiftEmptyArrayStorage;
  v18 = sub_10002F158((unint64_t *)&qword_10016B5F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v20 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v23);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

NSString sub_100093E4C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10016CD88 = (uint64_t)result;
  return result;
}

NSString sub_100093E80()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10016CD90 = (uint64_t)result;
  return result;
}

uint64_t sub_100093EB4(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t inited;
  NSString *v11;
  DARootViewController *v12;
  DARootViewController *v13;
  uint64_t v14;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  SEL v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  __int128 v38;
  void (*v39)(uint64_t);
  _BYTE v40[40];

  v39 = a1;
  v1 = type metadata accessor for URLResourceValues(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(fileURLWithPath:isDirectory:)(0x657461766972702FLL, 0xEC0000007261762FLL, 1);
  v9 = sub_100035CA4((uint64_t *)&unk_10016C1A0);
  inited = swift_initStackObject(v9, v40);
  v38 = xmmword_10010BE30;
  *(_OWORD *)(inited + 16) = xmmword_10010BE30;
  *(_QWORD *)(inited + 32) = NSURLVolumeAvailableCapacityKey;
  v11 = NSURLVolumeAvailableCapacityKey;
  sub_100098FDC(inited);
  v13 = v12;
  swift_setDeallocating(inited);
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy(inited + 32, 1, v14);
  URL.resourceValues(forKeys:)(v13);
  swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
  v22 = URLResourceValues.volumeAvailableCapacity.getter();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((v24 & 1) != 0)
  {
LABEL_12:
    v26 = 1;
    goto LABEL_13;
  }
  if (qword_10016A688 != -1)
    swift_once(&qword_10016A688, sub_100093E4C);
  v25 = sub_100094A9C((const __CFString *)qword_10016CD88);
  if ((v22 & 0x8000000000000000) != 0 || v22 < v25)
  {
    if (qword_10016A678 != -1)
      v25 = swift_once(&qword_10016A678, sub_10008BF34);
    static os_log_type_t.error.getter(v25);
    v27 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v28 = swift_allocObject(v27, 112, 7);
    *(_OWORD *)(v28 + 16) = xmmword_10010C3D0;
    if (qword_10016A690 != -1)
      swift_once(&qword_10016A690, sub_100093E80);
    v29 = sub_100094A9C((const __CFString *)qword_10016CD90);
    *(_QWORD *)(v28 + 56) = &type metadata for UInt64;
    *(_QWORD *)(v28 + 64) = &protocol witness table for UInt64;
    *(_QWORD *)(v28 + 32) = v29;
    *(_QWORD *)(v28 + 96) = &type metadata for Int;
    *(_QWORD *)(v28 + 104) = &protocol witness table for Int;
    *(_QWORD *)(v28 + 72) = v22;
    os_log(_:dso:log:type:_:)("Insufficient disk space available. Need %d free, but only have %d.", (_DWORD)v38, DWORD2(v38));
    swift_bridgeObjectRelease((DARootViewController *)v28, v30, v31, v32, v33, v34, v35, v36);
    goto LABEL_12;
  }
  v26 = 0;
LABEL_13:
  v39(v26);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unsigned __int8 *sub_100094280(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  const char *v10;
  unint64_t v11;
  id v12;
  int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  unsigned __int8 *v18;
  SEL v19;
  id v20;
  int v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v28 = a2;
  swift_bridgeObjectRetain(a2);
  v4 = String.init<A>(_:)(&v27, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v6 = v4;
  v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v9 = HIBYTE(v7) & 0xF;
    v27 = v6;
    v28 = v7 & 0xFFFFFFFFFFFFFFLL;
    v8 = (unsigned __int8 *)&v27;
    goto LABEL_7;
  }
  v6 = sub_1000945E0(v4, v5);
  v11 = (unint64_t)v10;
  swift_bridgeObjectRelease((DARootViewController *)v7, v10, v12, v13, v14, v15, v16, v17);
  v7 = v11;
  if ((v11 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }
LABEL_7:
  v18 = sub_100094364(v8, v9, a3);
  swift_bridgeObjectRelease((DARootViewController *)v7, v19, v20, v21, v22, v23, v24, v25);
  return v18;
}

unsigned __int8 *sub_100094364(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1000945E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  DARootViewController *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  SEL v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = (DARootViewController *)v5;
  v9 = sub_10009465C(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6, v10, v11, v12, v13, v14, v15, v16);
  return v9;
}

uint64_t sub_10009465C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  DARootViewController *v13;
  SEL v14;
  id v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  _QWORD v22[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_1000947A0(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_1000475AC(v12, 0);
      v5 = sub_10009488C((unint64_t)v22, v8 + 32, v9, a1, a2, v5, a4);
      v13 = (DARootViewController *)v22[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)&_swiftEmptyArrayStorage;
    }
    v21 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v21;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v22[0] = a3;
    v22[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v22 + v8, v9 - v8);
  }
}

unint64_t sub_1000947A0(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_100047610(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_100047610(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }
  __break(1u);
  return result;
}

unint64_t sub_10009488C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_100047610(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_100047610(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100094A9C(const __CFString *a1)
{
  id v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CFPropertyListRef v9;
  uint64_t v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t result;
  DARootViewController *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned __int8 *v22;
  unint64_t v23;
  char v24;
  unsigned __int8 v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  unint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  unsigned __int8 v34;
  unint64_t v35;
  unint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  CFPropertyListRef v41;

  CFPreferencesAppSynchronize(CFSTR("com.apple.Diagnostics"));
  v2 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  v3 = objc_msgSend(v2, "isCheckerBoardActive");
  swift_unknownObjectRelease(v2);
  v4 = 0;
  if ((v3 & 1) == 0)
  {
    type metadata accessor for CFString(0);
    v6 = v5;
    if (qword_10016A688 != -1)
      swift_once(&qword_10016A688, sub_100093E4C);
    v7 = qword_10016CD88;
    v8 = sub_10002F158(&qword_10016B1B8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_10010BB38);
    if ((static _CFObject.== infix(_:_:)(a1, v7, v6, v8) & 1) != 0)
      v4 = 0;
    else
      v4 = 0x200000;
  }
  v9 = CFPreferencesCopyAppValue(a1, CFSTR("com.apple.Diagnostics"));
  if (!v9)
    return v4;
  v10 = (uint64_t)v9;
  v41 = v9;
  swift_unknownObjectRetain(v9);
  if ((swift_dynamicCast(&v39, &v41, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_67;
  result = v39;
  v18 = (DARootViewController *)v40;
  v19 = HIBYTE(v40) & 0xF;
  v20 = v39 & 0xFFFFFFFFFFFFLL;
  if ((v40 & 0x2000000000000000) != 0)
    v21 = HIBYTE(v40) & 0xF;
  else
    v21 = v39 & 0xFFFFFFFFFFFFLL;
  if (!v21)
  {
    swift_bridgeObjectRelease((DARootViewController *)v40, (SEL)v20, v11, v12, v13, v14, v15, v16);
    goto LABEL_67;
  }
  if ((v40 & 0x1000000000000000) != 0)
  {
    v23 = (unint64_t)sub_100094280(v39, v40, 10);
    v24 = v20;
    goto LABEL_45;
  }
  if ((v40 & 0x2000000000000000) == 0)
  {
    if ((v39 & 0x1000000000000000) != 0)
      v22 = (unsigned __int8 *)((v40 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v22 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v39, v40);
    v23 = (unint64_t)sub_100094364(v22, v20, 10);
    v24 = v20 & 1;
LABEL_45:
    swift_bridgeObjectRelease(v18, (SEL)v20, v11, v12, v13, v14, v15, v16);
    if ((v24 & 1) == 0)
    {
      swift_unknownObjectRelease(v10);
      return v23;
    }
LABEL_67:
    v39 = v10;
    if ((swift_dynamicCast(&v41, &v39, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for UInt64, 6) & 1) != 0)
      return (uint64_t)v41;
    return v4;
  }
  v40 &= 0xFFFFFFFFFFFFFFuLL;
  if (v39 == 43)
  {
    if (v19)
    {
      if (v19 != 1 && (BYTE1(v39) - 48) <= 9u)
      {
        v23 = (BYTE1(v39) - 48);
        if (v19 == 2)
          goto LABEL_44;
        if ((BYTE2(v39) - 48) <= 9u)
        {
          v23 = 10 * (BYTE1(v39) - 48) + (BYTE2(v39) - 48);
          v28 = v19 - 3;
          if (v28)
          {
            v29 = (unsigned __int8 *)&v39 + 3;
            while (1)
            {
              v30 = *v29 - 48;
              if (v30 > 9)
                goto LABEL_41;
              if (!is_mul_ok(v23, 0xAuLL))
                goto LABEL_41;
              v26 = __CFADD__(10 * v23, v30);
              v23 = 10 * v23 + v30;
              if (v26)
                goto LABEL_41;
              v24 = 0;
              ++v29;
              if (!--v28)
                goto LABEL_45;
            }
          }
          goto LABEL_44;
        }
      }
      goto LABEL_41;
    }
  }
  else
  {
    if (v39 != 45)
    {
      if (v19 && (v39 - 48) <= 9u)
      {
        v23 = (v39 - 48);
        if (v19 == 1)
          goto LABEL_44;
        if ((BYTE1(v39) - 48) <= 9u)
        {
          v23 = 10 * (v39 - 48) + (BYTE1(v39) - 48);
          v31 = v19 - 2;
          if (v31)
          {
            v32 = (unsigned __int8 *)&v39 + 2;
            while (1)
            {
              v33 = *v32 - 48;
              if (v33 > 9)
                goto LABEL_41;
              if (!is_mul_ok(v23, 0xAuLL))
                goto LABEL_41;
              v26 = __CFADD__(10 * v23, v33);
              v23 = 10 * v23 + v33;
              if (v26)
                goto LABEL_41;
              v24 = 0;
              ++v32;
              if (!--v31)
                goto LABEL_45;
            }
          }
          goto LABEL_44;
        }
      }
LABEL_41:
      v23 = 0;
LABEL_42:
      v24 = 1;
      goto LABEL_45;
    }
    if (v19)
    {
      if (v19 != 1)
      {
        v25 = BYTE1(v39) - 48;
        if ((BYTE1(v39) - 48) <= 9u)
        {
          v23 = 0;
          v26 = v25 == 0;
          v27 = -(uint64_t)v25;
          if (!v26)
            goto LABEL_42;
          if (v19 == 2)
          {
            v24 = 0;
            v23 = v27;
            goto LABEL_45;
          }
          v34 = BYTE2(v39) - 48;
          if ((BYTE2(v39) - 48) <= 9u && is_mul_ok(v27, 0xAuLL))
          {
            v35 = 10 * v27;
            v23 = v35 - v34;
            if (v35 >= v34)
            {
              v36 = v19 - 3;
              if (v36)
              {
                v37 = (unsigned __int8 *)&v39 + 3;
                while (1)
                {
                  v38 = *v37 - 48;
                  if (v38 > 9)
                    goto LABEL_41;
                  if (!is_mul_ok(v23, 0xAuLL))
                    goto LABEL_41;
                  v26 = 10 * v23 >= v38;
                  v23 = 10 * v23 - v38;
                  if (!v26)
                    goto LABEL_41;
                  v24 = 0;
                  ++v37;
                  if (!--v36)
                    goto LABEL_45;
                }
              }
LABEL_44:
              v24 = 0;
              goto LABEL_45;
            }
          }
        }
      }
      goto LABEL_41;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100094EC8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100094EEC()
{
  uint64_t v0;

  return sub_100093EB4(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_100094EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100094F04(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100095038()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseTableViewCell()
{
  return objc_opt_self(_TtC11Diagnostics17BaseTableViewCell);
}

uint64_t sub_100095088(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1000950B8 + 4 * byte_10010DBF8[a1]))(0x22656D6F4822, 0xE600000000000000);
}

uint64_t sub_1000950B8()
{
  return 0x6572676173694422;
}

uint64_t sub_1000950D4()
{
  return 0x7373696D73694422;
}

uint64_t sub_1000950F0()
{
  return 0x226C65636E614322;
}

uint64_t sub_100095108()
{
  return 0x22656E6F4422;
}

uint64_t sub_100095118()
{
  return 0x76697463616E4922;
}

unint64_t sub_100095138()
{
  return 0xD000000000000013;
}

uint64_t sub_1000952A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  DARootViewController *v4;
  DARootViewController *v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  DARootViewController *v15;
  char v16;
  SEL v17;
  id v18;
  int v19;
  id v20;
  id v21;
  id v22;
  id v23;

  v2 = *a2;
  v3 = sub_100095088(*a1);
  v5 = v4;
  v6 = sub_100095088(v2);
  if (v3 == v6 && v5 == (DARootViewController *)v7)
  {
    v16 = 1;
    v15 = v5;
  }
  else
  {
    v15 = (DARootViewController *)v7;
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5, v7, v8, v9, v10, v11, v12, v13);
  swift_bridgeObjectRelease(v15, v17, v18, v19, v20, v21, v22, v23);
  return v16 & 1;
}

Swift::Int sub_100095330()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  DARootViewController *v3;
  DARootViewController *v4;
  SEL v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v13[9];

  v1 = *v0;
  Hasher.init(_seed:)(v13, 0);
  v2 = sub_100095088(v1);
  v4 = v3;
  String.hash(into:)(v13, v2, v3);
  swift_bridgeObjectRelease(v4, v5, v6, v7, v8, v9, v10, v11);
  return Hasher._finalize()();
}

void sub_100095390(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  DARootViewController *v4;
  DARootViewController *v5;
  SEL v6;
  id v7;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = sub_100095088(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
}

Swift::Int sub_1000953D0(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  DARootViewController *v4;
  DARootViewController *v5;
  SEL v6;
  id v7;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v14[9];

  v2 = *v1;
  Hasher.init(_seed:)(v14, a1);
  v3 = sub_100095088(v2);
  v5 = v4;
  String.hash(into:)(v14, v3, v4);
  swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
  return Hasher._finalize()();
}

uint64_t sub_10009542C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100099208(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100095458@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100095088(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100095480(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  SEL v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  _QWORD v17[3];
  _BYTE v18[8];

  v2 = static os_log_type_t.error.getter(a1);
  v3 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v4 = swift_allocObject(v3, 72, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10010BE30;
  swift_getErrorValue(a1, v18, v17);
  v5 = Error.localizedDescription.getter(v17[1], v17[2]);
  v7 = v6;
  *(_QWORD *)(v4 + 56) = &type metadata for String;
  *(_QWORD *)(v4 + 64) = sub_100047048();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  v8 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  v9 = (void *)static OS_os_log.default.getter(v8);
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header, v9, "%@", 2, 2, v4);
  swift_bridgeObjectRelease((DARootViewController *)v4, v10, v11, v12, v13, v14, v15, v16);

}

void sub_1000955B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _BYTE *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  SEL v18;
  id v19;
  int v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  _BYTE *v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v2 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount);
  if (v3 != a1)
  {
    v4 = v1;
    if (!a1 && v3 >= 1 && (sub_10004C8D0() & 1) == 0)
    {
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor), "startWithPriority:completion:", -1, 0);
      sub_1000987F4();
    }
    if (*(uint64_t *)(v1 + v2) < 1)
    {
      if (qword_10016A5F0 != -1)
        swift_once(&qword_10016A5F0, sub_100044F78);
      v28 = (void *)qword_1001722E8;
      v29 = *(NSObject **)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue);
      v30 = swift_allocObject(&unk_10013A110, 24, 7);
      *(_QWORD *)(v30 + 16) = v28;
      v31 = swift_allocObject(&unk_10013A138, 32, 7);
      *(_QWORD *)(v31 + 16) = sub_10009BEE4;
      *(_QWORD *)(v31 + 24) = v30;
      v54 = (uint64_t)sub_100052C38;
      v55 = v31;
      v50 = (uint64_t)_NSConcreteStackBlock;
      v51 = (id)1107296256;
      v52 = (uint64_t)sub_100048E58;
      v53 = &unk_10013A150;
      v32 = _Block_copy(&v50);
      v33 = v55;
      v34 = v28;
      swift_retain(v31);
      swift_release(v33);
      dispatch_sync(v29, v32);
      _Block_release(v32);
      LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v31, "", 88, 147, 46, 1);
      swift_release(v30);
      swift_release(v31);
      if ((v29 & 1) != 0)
      {
        __break(1u);
        return;
      }
      v35 = (_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
      *(_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = (*(_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState) & 1) == 0;
      v36 = sub_100046588();
      objc_msgSend(v36, "setNearbySharingEnabled:", (*v35 & 1) == 0);

      v37 = qword_1001722E8;
      v38 = sub_100046588();
      objc_msgSend(v38, "setDiscoverableMode:", *(_QWORD *)(v37 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting));

      v39 = *(void **)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_captureButtonAssertion);
      if (v39)
        objc_msgSend(v39, "invalidate");
      objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor), "stopWithCompletion:", 0);
      v40 = *(void **)(v4 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_lockButtonConsumer);
      if (v40)
        objc_msgSend(v40, "invalidate");
      v41 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v42 = objc_msgSend(v41, "applicationState");

      if (v42 == (id)2)
        sub_100098BDC(0xCu, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, (uint64_t)v53, v54, v55, v56, v57, v58, v59);
      v27 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      objc_msgSend(v27, "setInteger:forKey:", 0, CFSTR("InCurrentSession"));
      goto LABEL_22;
    }
    if (qword_10016A5F0 != -1)
      swift_once(&qword_10016A5F0, sub_100044F78);
    v5 = (void *)qword_1001722E8;
    v6 = *(NSObject **)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue);
    v7 = swift_allocObject(&unk_10013A188, 24, 7);
    *(_QWORD *)(v7 + 16) = v5;
    v8 = swift_allocObject(&unk_10013A1B0, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_10009BEEC;
    *(_QWORD *)(v8 + 24) = v7;
    v54 = (uint64_t)sub_100052C38;
    v55 = v8;
    v50 = (uint64_t)_NSConcreteStackBlock;
    v51 = (id)1107296256;
    v52 = (uint64_t)sub_100048E58;
    v53 = &unk_10013A1C8;
    v9 = _Block_copy(&v50);
    v10 = v55;
    v11 = v5;
    swift_retain(v8);
    swift_release(v10);
    dispatch_sync(v6, v9);
    _Block_release(v9);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v8, "", 88, 136, 46, 1);
    swift_release(v7);
    swift_release(v8);
    if ((v6 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v12 = (_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
      *(_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = 1;
      v13 = sub_100046588();
      objc_msgSend(v13, "setNearbySharingEnabled:", (*v12 & 1) == 0);

      sub_100046614();
      sub_100046828();
      v14 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v8 = swift_allocObject(v14, 72, 7);
      *(_OWORD *)(v8 + 16) = xmmword_10010BE30;
      if (qword_10016A678 == -1)
      {
LABEL_11:
        v15 = (void *)qword_100172378;
        *(_QWORD *)(v8 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
        *(_QWORD *)(v8 + 64) = sub_10009BB5C((unint64_t *)&qword_10016B690, (unint64_t *)&qword_10016B180, OS_os_log_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
        *(_QWORD *)(v8 + 32) = v15;
        v16 = (void *)static OS_os_log.default.getter(v15);
        v17 = static os_log_type_t.default.getter(v16);
        os_log(_:dso:log:type:_:)("Invalidating inactivity timer", 29, 2, &_mh_execute_header, v16, v17, v8);
        swift_bridgeObjectRelease((DARootViewController *)v8, v18, v19, v20, v21, v22, v23, v24);

        v25 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimer;
        objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimer), "invalidate");
        v26 = *(void **)(v4 + v25);
        *(_QWORD *)(v4 + v25) = 0;

        v27 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        objc_msgSend(v27, "setInteger:forKey:", 1, CFSTR("InCurrentSession"));
LABEL_22:

        return;
      }
    }
    swift_once(&qword_10016A678, sub_10008BF34);
    goto LABEL_11;
  }
}

void sub_100095B7C(char a1)
{
  uint64_t v1;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  const char *v19;
  void *v20;
  int v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  SEL v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  void *v52;
  _QWORD *v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  uint64_t (*v58)(uint64_t);
  _QWORD *v59;
  uint64_t v60;
  double v61;
  id v62;
  void *v63;
  NSObject *v64;
  uint64_t v65;
  void *v66;
  id v67;
  _BYTE *v68;
  id v69;
  void *v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t);
  void *v75;
  uint64_t (*v76)(uint64_t);
  id v77;
  id v78;
  void *v79;
  char *v80;
  NSObject *v81;
  uint64_t v82;
  void *v83;
  uint64_t (*v84)(uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  id v89;
  uint64_t v90;
  id v91;
  void **v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  void *v95;
  uint64_t (*v96)();
  uint64_t (*v97)(uint64_t);

  isEscapingClosureAtFileLocation = OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground) != (a1 & 1))
  {
    v3 = v1;
    v4 = (void *)qword_10016B3C0;
    if (qword_10016B3C0)
    {
      v5 = type metadata accessor for SelfServiceDestinationPickerViewController();
      if (!swift_dynamicCastClass(v4, v5))
      {
        v27 = v4;
        goto LABEL_21;
      }
    }
    if (qword_10016A600 != -1)
      swift_once(&qword_10016A600, sub_1000490B8);
    v6 = objc_msgSend((id)qword_100172310, "viewControllers");
    v7 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v28 = v8;
      else
        v28 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v16 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease((DARootViewController *)v8, v29, v30, v31, v32, v33, v34, v35);
      if (v16)
      {
LABEL_8:
        v17 = v16 - 1;
        if (__OFSUB__(v16, 1))
        {
          __break(1u);
        }
        else if ((v8 & 0xC000000000000001) == 0)
        {
          if ((v17 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v17 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v18 = *(id *)(v8 + 8 * v17 + 32);
LABEL_13:
            v26 = v18;
            swift_bridgeObjectRelease((DARootViewController *)v8, v19, v20, v21, v22, v23, v24, v25);
            while (1)
            {
              v36 = type metadata accessor for DashboardViewController();
              v37 = swift_dynamicCastClass(v26, v36);
              v8 = v37;
              if (!v37)

              if (*(_BYTE *)(v3 + isEscapingClosureAtFileLocation) == 1)
                break;
              v53 = &unk_100172000;
              v60 = 0x10010B000;
              v57 = sub_100048E58;
              if (*(uint64_t *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount) < 1)
                goto LABEL_39;
              if (qword_10016A5F0 != -1)
                goto LABEL_56;
LABEL_36:
              v70 = (void *)qword_1001722E8;
              v71 = *(NSObject **)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleQueue);
              v72 = swift_allocObject(&unk_100139D28, 24, 7);
              *(_QWORD *)(v72 + 16) = v70;
              v73 = swift_allocObject(&unk_100139D50, 32, 7);
              *(_QWORD *)(v73 + 16) = sub_10009BAE4;
              *(_QWORD *)(v73 + 24) = v72;
              v96 = sub_100052C38;
              v97 = (uint64_t (*)(uint64_t))v73;
              v92 = _NSConcreteStackBlock;
              v93 = 1107296256;
              v74 = v57;
              v94 = v57;
              v95 = &unk_100139D68;
              v75 = _Block_copy(&v92);
              v76 = v97;
              v77 = v70;
              swift_retain(v73);
              swift_release(v76);
              dispatch_sync(v71, v75);
              _Block_release(v75);
              LOBYTE(v71) = swift_isEscapingClosureAtFileLocation(v73, "", 88, 38, 39, 1);
              swift_release(v72);
              *(_QWORD *)&v38 = swift_release(v73).n128_u64[0];
              if ((v71 & 1) != 0)
              {
                __break(1u);
                return;
              }
              v57 = v74;
              v53 = &unk_100172000;
              v60 = (uint64_t)"teractionAnimating>\"24";
              if (v8)
              {
                v78 = *(id *)(v8 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager);
                sub_1000A4140();

              }
LABEL_39:
              objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor), "stopWithCompletion:", 0, v38);
              v79 = *(void **)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_lockButtonConsumer);
              if (v79)
                objc_msgSend(v79, "invalidate");
              if (qword_10016A5F0 != -1)
                goto LABEL_52;
LABEL_42:
              v80 = (char *)v53[93];
              v81 = *(NSObject **)&v80[OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue];
              v82 = swift_allocObject(&unk_100139CB0, 24, 7);
              *(_QWORD *)(v82 + 16) = v80;
              v3 = swift_allocObject(&unk_100139CD8, 32, 7);
              *(_QWORD *)(v3 + 16) = sub_1000740B0;
              *(_QWORD *)(v3 + 24) = v82;
              v96 = sub_100052C38;
              v97 = (uint64_t (*)(uint64_t))v3;
              v92 = _NSConcreteStackBlock;
              v93 = *(_QWORD *)(v60 + 3616);
              v94 = v57;
              v95 = &unk_100139CF0;
              v83 = _Block_copy(&v92);
              v84 = v97;
              v85 = v80;
              swift_retain(v3);
              swift_release(v84);
              dispatch_sync(v81, v83);
              _Block_release(v83);
              isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 88, 147, 46, 1);
              swift_release(v82);
              swift_release(v3);
              if ((isEscapingClosureAtFileLocation & 1) == 0)
              {
                v87 = v53[93];
                sub_100046438(v86);
                v88 = (_BYTE *)(v87 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
                *(_BYTE *)(v87 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = (*(_BYTE *)(v87 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState) & 1) == 0;
                v89 = sub_100046588();
                objc_msgSend(v89, "setNearbySharingEnabled:", (*v88 & 1) == 0);

                v90 = v53[93];
                v91 = sub_100046588();
                objc_msgSend(v91, "setDiscoverableMode:", *(_QWORD *)(v90 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting));

                goto LABEL_44;
              }
              __break(1u);
LABEL_54:
              swift_once(&qword_10016A5F8, sub_100048E78);
LABEL_20:
              v27 = (id)qword_100172300;
LABEL_21:
              v26 = v27;
            }
            if (qword_10016A5F0 != -1)
LABEL_50:
              v37 = swift_once(&qword_10016A5F0, sub_100044F78);
            sub_100046274(v37);
            v39 = sub_100035CA4((uint64_t *)&unk_10016BE40);
            v40 = swift_allocObject(v39, 72, 7);
            *(_OWORD *)(v40 + 16) = xmmword_10010BE30;
            if (qword_10016A678 != -1)
              swift_once(&qword_10016A678, sub_10008BF34);
            v41 = (void *)qword_100172378;
            *(_QWORD *)(v40 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
            *(_QWORD *)(v40 + 64) = sub_10009BB5C((unint64_t *)&qword_10016B690, (unint64_t *)&qword_10016B180, OS_os_log_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
            *(_QWORD *)(v40 + 32) = v41;
            v42 = (void *)static OS_os_log.default.getter(v41);
            v43 = static os_log_type_t.default.getter(v42);
            os_log(_:dso:log:type:_:)("Invalidating inactivity timer", 29, 2, &_mh_execute_header, v42, v43, v40);
            swift_bridgeObjectRelease((DARootViewController *)v40, v44, v45, v46, v47, v48, v49, v50);

            v51 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimer;
            objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimer), "invalidate");
            v52 = *(void **)(v3 + v51);
            *(_QWORD *)(v3 + v51) = 0;

            v53 = (_QWORD *)qword_1001722E8;
            v54 = *(NSObject **)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleQueue);
            v55 = swift_allocObject(&unk_100139DA0, 24, 7);
            *(_QWORD *)(v55 + 16) = v53;
            v56 = swift_allocObject(&unk_100139DC8, 32, 7);
            *(_QWORD *)(v56 + 16) = sub_10009BAFC;
            *(_QWORD *)(v56 + 24) = v55;
            v96 = sub_100052C38;
            v97 = (uint64_t (*)(uint64_t))v56;
            v92 = _NSConcreteStackBlock;
            v93 = 1107296256;
            v94 = sub_100048E58;
            v95 = &unk_100139DE0;
            v57 = (uint64_t (*)(uint64_t))_Block_copy(&v92);
            v58 = v97;
            v59 = v53;
            swift_retain(v56);
            swift_release(v58);
            dispatch_sync(v54, v57);
            _Block_release(v57);
            v60 = swift_isEscapingClosureAtFileLocation(v56, "", 88, 56, 39, 1);
            swift_release(v55);
            *(_QWORD *)&v61 = swift_release(v56).n128_u64[0];
            if ((v60 & 1) != 0)
            {
              __break(1u);
LABEL_52:
              swift_once(&qword_10016A5F0, sub_100044F78);
              goto LABEL_42;
            }
            if (v8)
            {
              v62 = *(id *)(v8 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager);
              sub_1000A414C();

            }
            if (*(uint64_t *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount) < 1)
              goto LABEL_44;
            objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor), "startWithPriority:completion:", -1, 0, v61);
            sub_1000987F4();
            v63 = (void *)qword_1001722E8;
            v64 = *(NSObject **)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue);
            v65 = swift_allocObject(&unk_100139E18, 24, 7);
            *(_QWORD *)(v65 + 16) = v63;
            v3 = swift_allocObject(&unk_100139E40, 32, 7);
            *(_QWORD *)(v3 + 16) = sub_10009BB14;
            *(_QWORD *)(v3 + 24) = v65;
            v96 = sub_100052C38;
            v97 = (uint64_t (*)(uint64_t))v3;
            v92 = _NSConcreteStackBlock;
            v93 = 1107296256;
            v94 = sub_100048E58;
            v95 = &unk_100139E58;
            v66 = _Block_copy(&v92);
            v57 = v97;
            v67 = v63;
            swift_retain(v3);
            swift_release(v57);
            dispatch_sync(v64, v66);
            _Block_release(v66);
            LOBYTE(v64) = swift_isEscapingClosureAtFileLocation(v3, "", 88, 136, 46, 1);
            swift_release(v65);
            swift_release(v3);
            if ((v64 & 1) == 0)
            {
              v68 = (_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
              *(_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = 1;
              v69 = sub_100046588();
              objc_msgSend(v69, "setNearbySharingEnabled:", (*v68 & 1) == 0);

              sub_100046614();
LABEL_44:

              return;
            }
            __break(1u);
LABEL_56:
            swift_once(&qword_10016A5F0, sub_100044F78);
            goto LABEL_36;
          }
          __break(1u);
          goto LABEL_50;
        }
        v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v8);
        goto LABEL_13;
      }
    }
    else
    {
      v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v16)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease((DARootViewController *)v8, v9, v10, v11, v12, v13, v14, v15);
    if (qword_10016A5F8 != -1)
      goto LABEL_54;
    goto LABEL_20;
  }
}

void sub_1000964B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  __int128 v16;
  __int128 v17;

  v3 = Notification.userInfo.getter(a1);
  if (!v3)
  {
    v16 = 0u;
    v17 = 0u;
LABEL_10:
    sub_100036FA0((uint64_t)&v16, (uint64_t *)&unk_10016B610);
    goto LABEL_11;
  }
  v4 = v3;
  *(_QWORD *)&v16 = 0xD000000000000012;
  *((_QWORD *)&v16 + 1) = 0x8000000100113570;
  AnyHashable.init<A>(_:)(&v16, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v12 = sub_100072B10((uint64_t)v15), (v5 & 1) != 0))
  {
    sub_1000370B0(*(_QWORD *)(v4 + 56) + 32 * v12, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease((DARootViewController *)v4, v5, v6, v7, v8, v9, v10, v11);
  sub_100036FDC((uint64_t)v15);
  if (!*((_QWORD *)&v17 + 1))
    goto LABEL_10;
  if (!swift_dynamicCast(v15, &v16, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
  {
LABEL_11:
    v13 = 0;
    goto LABEL_12;
  }
  v13 = v15[0];
LABEL_12:
  v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount) = v13;
  sub_1000955B4(v14);
}

void sub_1000965C8(uint64_t a1, uint64_t a2)
{
  char v2;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;

  v2 = *(_BYTE *)(a2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground) = 1;
  sub_100095B7C(v2);
  if (qword_10016A5F0 != -1)
    swift_once(&qword_10016A5F0, sub_100044F78);
  v3 = (void *)qword_1001722E8;
  v4 = *(NSObject **)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleQueue);
  v5 = swift_allocObject(&unk_10013A098, 24, 7);
  *(_QWORD *)(v5 + 16) = v3;
  v6 = swift_allocObject(&unk_10013A0C0, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_10009BEDC;
  *(_QWORD *)(v6 + 24) = v5;
  v10[4] = sub_100052C38;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100048E58;
  v10[3] = &unk_10013A0D8;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = v3;
  swift_retain(v6);
  swift_release(v8);
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v6, "", 88, 56, 39, 1);
  swift_release(v5);
  swift_release(v6);
  if ((v4 & 1) != 0)
    __break(1u);
}

id sub_10009673C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id result;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t inited;
  DARootViewController *v13;
  uint64_t v14;
  id v15;
  const char *v16;
  void *v17;
  int v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  DARootViewController *v24;
  DARootViewController *v25;
  id v26;
  Class isa;
  SEL v28;
  id v29;
  int v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  DARootViewController *v39;
  void *v40;
  SEL v41;
  id v42;
  int v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  NSString v53;
  id v54;
  id v55;
  uint64_t v56;
  id v57;
  SEL v58;
  id v59;
  int v60;
  id v61;
  id v62;
  id v63;
  id v64;
  _QWORD v65[2];
  uint64_t v66;
  _BYTE v67[40];

  v4 = sub_100035CA4((uint64_t *)&unk_10016B680);
  __chkstk_darwin(v4);
  v6 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10016A5F0 != -1)
    swift_once(&qword_10016A5F0, sub_100044F78);
  v7 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_rootViewController);
  result = objc_msgSend(v7, "view");
  if (result)
  {
    v9 = result;
    v10 = objc_msgSend((id)objc_opt_self(_UIPhysicalButtonConfiguration), "_configurationWithPhysicalButton:behavior:behaviorOptions:", 3, 1, 0);
    v11 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
    inited = swift_initStackObject(v11, v67);
    *(_OWORD *)(inited + 16) = xmmword_10010C200;
    *(_QWORD *)(inited + 32) = v10;
    v66 = inited;
    specialized Array._endMutation()(inited);
    v13 = (DARootViewController *)v66;
    if ((unint64_t)v66 >> 62)
    {
      if (v66 < 0)
        v56 = v66;
      else
        v56 = v66 & 0xFFFFFFFFFFFFFF8;
      v57 = v10;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v56);
      swift_bridgeObjectRelease(v13, v58, v59, v60, v61, v62, v63, v64);
    }
    else
    {
      v14 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
      v15 = v10;
    }
    v65[0] = v6;
    v65[1] = a1;
    v23 = a2;
    if (v14)
    {
      sub_1000998A8((uint64_t)v13);
      v25 = v24;
    }
    else
    {
      v25 = (DARootViewController *)&_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRelease(v13, v16, v17, v18, v19, v20, v21, v22);
    v26 = objc_allocWithZone((Class)_UIPhysicalButtonInteraction);
    sub_100037118(0, &qword_10016CFB0, _UIPhysicalButtonConfiguration_ptr);
    sub_10009BB5C(&qword_10016CFB8, &qword_10016CFB0, _UIPhysicalButtonConfiguration_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    swift_unknownObjectRetain(v7);
    isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v25, v28, v29, v30, v31, v32, v33, v34);
    v35 = objc_msgSend(v26, "initWithConfigurations:delegate:", isa, v7);

    objc_msgSend(v9, "addInteraction:", v35);
    v36 = objc_msgSend(v23, "URLContexts");
    v37 = sub_100037118(0, &qword_10016CF88, UIOpenURLContext_ptr);
    v38 = sub_10009BB5C(&qword_10016CF90, &qword_10016CF88, UIOpenURLContext_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v39 = (DARootViewController *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v36, v37, v38);

    v40 = (void *)sub_1000C4F34((uint64_t)v39);
    swift_bridgeObjectRelease(v39, v41, v42, v43, v44, v45, v46, v47);
    if (v40)
    {
      v48 = objc_msgSend(v40, "URL");

      v49 = v65[0];
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v48);

      v50 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 0, 1, v50);
    }
    else
    {
      v51 = type metadata accessor for URL(0);
      v49 = v65[0];
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v65[0], 1, 1, v51);
    }
    sub_100096E30(v49);
    v52 = objc_allocWithZone((Class)NSURLCache);
    v53 = String._bridgeToObjectiveC()();
    v54 = objc_msgSend(v52, "initWithMemoryCapacity:diskCapacity:diskPath:", 104857600, 104857600, v53);

    objc_msgSend((id)objc_opt_self(NSURLCache), "setSharedURLCache:", v54);
    v55 = objc_msgSend((id)objc_opt_self(DANvramUtil), "sharedInstance");
    objc_msgSend(v55, "syncASTDefaultsToNVRam");

    return (id)sub_100036FA0(v49, (uint64_t *)&unk_10016B680);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100096E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  SEL v17;
  id v18;
  int v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  DARootViewController *v27;
  DARootViewController *v28;
  uint64_t v29;
  char **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  SEL v35;
  id v36;
  int v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  DARootViewController *v43;
  SEL v44;
  id v45;
  int v46;
  id v47;
  id v48;
  id v49;
  id v50;
  const char *v51;
  void *v52;
  int v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  DARootViewController *v61;
  SEL v62;
  id v63;
  int v64;
  id v65;
  id v66;
  id v67;
  id v68;
  Swift::Int v69;
  const char *v70;
  void *v71;
  int v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char v80;
  SEL v81;
  id v82;
  int v83;
  id v84;
  id v85;
  id v86;
  id v87;
  const char *v88;
  void *v89;
  int v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  DARootViewController *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  SEL v101;
  id v102;
  int v103;
  id v104;
  id v105;
  id v106;
  id v107;
  const char *v108;
  void *v109;
  int v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  DARootViewController *v117;
  DARootViewController *v118;
  SEL v119;
  id v120;
  int v121;
  id v122;
  id v123;
  id v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  SEL v131;
  id v132;
  int v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  NSString v139;
  DARootViewController *v140;
  uint64_t v141;
  DARootViewController *v142;
  DARootViewController *v143;
  void *v144;
  void *v145;
  DARootViewController *v146;
  id v147;
  NSString v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  SEL v153;
  id v154;
  int v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  SEL v166;
  id v167;
  int v168;
  id v169;
  id v170;
  id v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  SEL v175;
  id v176;
  int v177;
  id v178;
  id v179;
  id v180;
  id v181;
  SEL v182;
  id v183;
  int v184;
  id v185;
  id v186;
  id v187;
  id v188;
  DARootViewController *v189;
  SEL v190;
  id v191;
  int v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  id v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t inited;
  uint64_t v205;
  const char *v206;
  void *v207;
  int v208;
  void *v209;
  void *v210;
  void *v211;
  void *v212;
  uint64_t v213;
  uint64_t v214;
  char v215;
  DARootViewController *v216;
  SEL v217;
  id v218;
  int v219;
  id v220;
  id v221;
  id v222;
  id v223;
  SEL v224;
  id v225;
  int v226;
  id v227;
  id v228;
  id v229;
  id v230;
  SEL v231;
  id v232;
  int v233;
  id v234;
  id v235;
  id v236;
  id v237;
  uint64_t v238;
  DARootViewController *v239;
  uint64_t v240;
  char v241;
  DARootViewController *v242;
  DARootViewController *v243;
  SEL v244;
  id v245;
  int v246;
  id v247;
  id v248;
  id v249;
  id v250;
  SEL v251;
  id v252;
  int v253;
  id v254;
  id v255;
  id v256;
  id v257;
  SEL v258;
  id v259;
  int v260;
  id v261;
  id v262;
  id v263;
  id v264;
  id v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  uint64_t v269;
  __int128 v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char v275[48];
  __int128 v276;
  uint64_t v277;
  DARootViewController *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  _BYTE v282[16];

  v2 = v1;
  v4 = sub_100035CA4((uint64_t *)&unk_10016B680);
  __chkstk_darwin(v4);
  v6 = (char *)&v266 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v272 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v266 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v271 = (char *)&v266 - v11;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v12 = qword_100172378;
  v13 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v14 = swift_allocObject(v13, 72, 7);
  v270 = xmmword_10010BE30;
  *(_OWORD *)(v14 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  v15 = sub_100047048();
  *(_QWORD *)(v14 + 64) = v15;
  strcpy((char *)(v14 + 32), "handle(url:)");
  *(_BYTE *)(v14 + 45) = 0;
  *(_WORD *)(v14 + 46) = -5120;
  v16 = static os_log_type_t.default.getter(v15);
  os_log(_:dso:log:type:_:)("## %@", 5, 2, &_mh_execute_header, v12, v16, v14);
  swift_bridgeObjectRelease((DARootViewController *)v14, v17, v18, v19, v20, v21, v22, v23);
  v24 = (void *)objc_opt_self(NSUserDefaults);
  v25 = objc_msgSend(v24, "standardUserDefaults");
  v26 = objc_msgSend(v25, "stringForKey:", CFSTR("currentTicketNumber"));

  if (v26)
  {
    v269 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v28 = v27;

  }
  else
  {
    v269 = 0;
    v28 = 0;
  }
  sub_10009A388(a1, (uint64_t)v6);
  v29 = v272;
  v30 = &selRef_bluetoothID;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v272 + 48))(v6, 1, v7) != 1)
  {
    v268 = v24;
    v58 = v271;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v271, v6, v7);
    v59 = v58;
    v30 = &selRef_bluetoothID;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v10, v59, v7);
    sub_100082054((uint64_t)v10, &v276);
    v60 = v279;
    v61 = *(DARootViewController **)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions) = v279;
    swift_bridgeObjectRetain(v60);
    swift_bridgeObjectRelease(v61, v62, v63, v64, v65, v66, v67, v68);
    if (v60 && *(_QWORD *)(v60 + 16))
    {
      v267 = v2;
      Hasher.init(_seed:)(&v273, *(_QWORD *)(v60 + 40));
      swift_bridgeObjectRetain(v60);
      String.hash(into:)(&v273, 0x776569766572, 0xE600000000000000);
      v69 = Hasher._finalize()();
      v77 = -1 << *(_BYTE *)(v60 + 32);
      v78 = v69 & ~v77;
      if (((*(_QWORD *)(v60 + 56 + ((v78 >> 3) & 0xFFFFFFFFFFFFF8)) >> v78) & 1) != 0)
      {
        v79 = ~v77;
        while (1)
        {
          if (*(_BYTE *)(*(_QWORD *)(v60 + 48) + v78) == 1)
          {
            swift_bridgeObjectRelease((DARootViewController *)v60, v70, v71, v72, v73, v74, v75, v76);
            v146 = (DARootViewController *)0xE600000000000000;
            goto LABEL_34;
          }
          v80 = _stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, 0x776569766572, 0xE600000000000000, 0);
          swift_bridgeObjectRelease((DARootViewController *)0xE000000000000000, v81, v82, v83, v84, v85, v86, v87);
          if ((v80 & 1) != 0)
            break;
          v78 = (v78 + 1) & v79;
          if (((*(_QWORD *)(v60 + 56 + ((v78 >> 3) & 0xFFFFFFFFFFFFF8)) >> v78) & 1) == 0)
            goto LABEL_16;
        }
        v146 = (DARootViewController *)v60;
LABEL_34:
        swift_bridgeObjectRelease(v146, v70, v71, v72, v73, v74, v75, v76);
        v147 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        v148 = String._bridgeToObjectiveC()();
        v30 = &selRef_bluetoothID;
        objc_msgSend(v147, "postNotificationName:object:", v148, 0);

        sub_10009A3D0((uint64_t)&v277, (uint64_t)v282);
        sub_10009A3D0((uint64_t)v282, (uint64_t)&v273);
        v2 = v267;
        if (!v274)
          goto LABEL_35;
        goto LABEL_18;
      }
LABEL_16:
      swift_bridgeObjectRelease((DARootViewController *)v60, v70, v71, v72, v73, v74, v75, v76);
      v2 = v267;
      v30 = &selRef_bluetoothID;
    }
    sub_10009A3D0((uint64_t)&v277, (uint64_t)v282);
    sub_10009A3D0((uint64_t)v282, (uint64_t)&v273);
    if (!v274)
    {
LABEL_35:
      if (v28)
      {
        v267 = qword_100172378;
        v149 = swift_allocObject(v13, 112, 7);
        *(_OWORD *)(v149 + 16) = xmmword_10010C3D0;
        *(_QWORD *)(v149 + 56) = &type metadata for String;
        *(_QWORD *)(v149 + 64) = v15;
        *(_QWORD *)(v149 + 32) = v269;
        *(_QWORD *)(v149 + 40) = v28;
        v150 = URL.absoluteString.getter(v149);
        *(_QWORD *)(v149 + 96) = &type metadata for String;
        *(_QWORD *)(v149 + 104) = v15;
        *(_QWORD *)(v149 + 72) = v150;
        *(_QWORD *)(v149 + 80) = v151;
        v152 = static os_log_type_t.default.getter(v150);
        os_log(_:dso:log:type:_:)("## Opened With NO ticket URL (purging stale \"%@\"): %@", 53, 2, &_mh_execute_header, v267, v152, v149);
        swift_bridgeObjectRelease((DARootViewController *)v149, v153, v154, v155, v156, v157, v158, v159);
        v160 = objc_msgSend(v268, "standardUserDefaults");
        objc_msgSend(v160, "removeObjectForKey:", CFSTR("currentTicketNumber"));

      }
      else
      {
        v161 = qword_100172378;
        v162 = swift_allocObject(v13, 72, 7);
        *(_OWORD *)(v162 + 16) = v270;
        v163 = URL.absoluteString.getter(v162);
        *(_QWORD *)(v162 + 56) = &type metadata for String;
        *(_QWORD *)(v162 + 64) = v15;
        *(_QWORD *)(v162 + 32) = v163;
        *(_QWORD *)(v162 + 40) = v164;
        v165 = static os_log_type_t.default.getter(v163);
        os_log(_:dso:log:type:_:)("## Opened With NO ticket URL (nothing stale to purge): %@", 57, 2, &_mh_execute_header, v161, v165, v162);
        swift_bridgeObjectRelease((DARootViewController *)v162, v166, v167, v168, v169, v170, v171, v172);
      }
LABEL_38:
      v140 = v278;
      if (v278)
      {
LABEL_39:
        v173 = v2;
        v174 = v277;
        v281 = v276;
        swift_bridgeObjectRetain(v140);
        sub_10009A418(&v281);
        v280 = *((_QWORD *)&v276 + 1);
        sub_10009A418(&v280);
        swift_bridgeObjectRelease((DARootViewController *)v60, v175, v176, v177, v178, v179, v180, v181);
        swift_bridgeObjectRelease(v140, v182, v183, v184, v185, v186, v187, v188);
        v189 = (DARootViewController *)qword_100172388;
        qword_100172380 = v174;
        qword_100172388 = (uint64_t)v140;
        v2 = v173;
        swift_bridgeObjectRelease(v189, v190, v191, v192, v193, v194, v195, v196);
        v197 = objc_msgSend(objc_allocWithZone((Class)DADeviceLocal), "init");
        v198 = objc_msgSend(v197, "state");

        v199 = objc_msgSend(v198, "serialNumber");
        v200 = static String._unconditionallyBridgeFromObjectiveC(_:)(v199);
        v202 = v201;

        v203 = sub_100035CA4(&qword_10016CF80);
        inited = swift_initStackObject(v203, v275);
        *(_OWORD *)(inited + 16) = v270;
        *(_QWORD *)(inited + 32) = v200;
        *(_QWORD *)(inited + 40) = v202;
        v205 = sub_1000E0934(inited);
        swift_setDeallocating(inited);
        swift_arrayDestroy(inited + 32, 1, &type metadata for String);
        v145 = sub_100058354(v205, v206, v207, v208, v209, v210, v211, v212);
        v213 = v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter;
        v142 = *(DARootViewController **)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter);
        v143 = *(DARootViewController **)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter + 8);
        *(_QWORD *)v213 = v145;
        *(_QWORD *)(v213 + 8) = v214;
        *(_BYTE *)(v213 + 16) = v215 & 1;
        goto LABEL_40;
      }
LABEL_31:
      swift_bridgeObjectRelease((DARootViewController *)v60, v108, v109, v110, v111, v112, v113, v114);
      v141 = v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter;
      v142 = *(DARootViewController **)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter);
      v143 = *(DARootViewController **)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter + 8);
      v144 = (void *)v276;
      *(_OWORD *)v141 = v276;
      *(_BYTE *)(v141 + 16) = 1;
      v145 = v144;
LABEL_40:
      v216 = (DARootViewController *)swift_bridgeObjectRetain(v145);
      swift_bridgeObjectRelease(v216, v217, v218, v219, v220, v221, v222, v223);
      swift_bridgeObjectRelease(v143, v224, v225, v226, v227, v228, v229, v230);
      swift_bridgeObjectRelease(v142, v231, v232, v233, v234, v235, v236, v237);
      (*(void (**)(char *, uint64_t))(v272 + 8))(v271, v7);
      goto LABEL_41;
    }
LABEL_18:
    swift_bridgeObjectRelease(v28, v88, v89, v90, v91, v92, v93, v94);
    v95 = v278;
    if (v278)
    {
      if (qword_100172388
        && (v277 == qword_100172380 && v278 == (DARootViewController *)qword_100172388
         || (_stringCompareWithSmolCheck(_:_:expecting:)(v277, v278, qword_100172380, qword_100172388, 0) & 1) != 0))
      {
        goto LABEL_23;
      }
    }
    else if (!qword_100172388)
    {
LABEL_23:
      v96 = qword_100172378;
      v97 = swift_allocObject(v13, 72, 7);
      *(_OWORD *)(v97 + 16) = v270;
      v98 = URL.absoluteString.getter(v97);
      *(_QWORD *)(v97 + 56) = &type metadata for String;
      *(_QWORD *)(v97 + 64) = v15;
      *(_QWORD *)(v97 + 32) = v98;
      *(_QWORD *)(v97 + 40) = v99;
      v100 = static os_log_type_t.default.getter(v98);
      os_log(_:dso:log:type:_:)("## Opened With CURRENT ticket URL: %@", 37, 2, &_mh_execute_header, v96, v100, v97);
      swift_bridgeObjectRelease((DARootViewController *)v97, v101, v102, v103, v104, v105, v106, v107);
      v30 = &selRef_bluetoothID;
      goto LABEL_38;
    }
    v126 = qword_100172378;
    v127 = swift_allocObject(v13, 72, 7);
    *(_OWORD *)(v127 + 16) = v270;
    v128 = URL.absoluteString.getter(v127);
    *(_QWORD *)(v127 + 56) = &type metadata for String;
    *(_QWORD *)(v127 + 64) = v15;
    *(_QWORD *)(v127 + 32) = v128;
    *(_QWORD *)(v127 + 40) = v129;
    v130 = static os_log_type_t.default.getter(v128);
    os_log(_:dso:log:type:_:)("## Opened With NEW ticket URL: %@", 33, 2, &_mh_execute_header, v126, v130, v127);
    swift_bridgeObjectRelease((DARootViewController *)v127, v131, v132, v133, v134, v135, v136, v137);
    v138 = objc_msgSend(v268, "standardUserDefaults");
    if (v95)
      v139 = String._bridgeToObjectiveC()();
    else
      v139 = 0;
    v30 = &selRef_bluetoothID;
    objc_msgSend(v138, "setObject:forKey:", v139, CFSTR("currentTicketNumber"));

    swift_unknownObjectRelease(v139);
    v140 = v278;
    if (v278)
      goto LABEL_39;
    goto LABEL_31;
  }
  v31 = sub_100036FA0((uint64_t)v6, (uint64_t *)&unk_10016B680);
  v32 = qword_100172378;
  if (v28)
  {
    v33 = swift_allocObject(v13, 72, 7);
    *(_OWORD *)(v33 + 16) = v270;
    *(_QWORD *)(v33 + 56) = &type metadata for String;
    *(_QWORD *)(v33 + 64) = v15;
    *(_QWORD *)(v33 + 32) = v269;
    *(_QWORD *)(v33 + 40) = v28;
    v34 = static os_log_type_t.default.getter(v33);
    os_log(_:dso:log:type:_:)("## Opened With no URL (purging stale \"%@\")", 42, 2, &_mh_execute_header, v32, v34, v33);
    swift_bridgeObjectRelease((DARootViewController *)v33, v35, v36, v37, v38, v39, v40, v41);
    v42 = objc_msgSend(v24, "standardUserDefaults");
    objc_msgSend(v42, "removeObjectForKey:", CFSTR("currentTicketNumber"));

    v43 = (DARootViewController *)qword_100172388;
    qword_100172380 = 0;
    qword_100172388 = 0;
    swift_bridgeObjectRelease(v43, v44, v45, v46, v47, v48, v49, v50);
  }
  else
  {
    v115 = static os_log_type_t.default.getter(v31);
    os_log(_:dso:log:type:_:)("## Opened With no URL (nothing stale to purge)", 46, 2, &_mh_execute_header, v32, v115, &_swiftEmptyArrayStorage);
  }
  v116 = v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter;
  v118 = *(DARootViewController **)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter);
  v117 = *(DARootViewController **)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter + 8);
  *(_QWORD *)v116 = &_swiftEmptySetSingleton;
  *(_QWORD *)(v116 + 8) = &_swiftEmptySetSingleton;
  *(_BYTE *)(v116 + 16) = 1;
  swift_bridgeObjectRelease(v117, v51, v52, v53, v54, v55, v56, v57);
  swift_bridgeObjectRelease(v118, v119, v120, v121, v122, v123, v124, v125);
LABEL_41:
  if (qword_10016A648 != -1)
    swift_once(&qword_10016A648, sub_100053F8C);
  v238 = qword_100172340;
  v239 = *(DARootViewController **)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter);
  v240 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter + 8);
  v241 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter + 16);
  v242 = *(DARootViewController **)(qword_100172340 + 16);
  v243 = *(DARootViewController **)(qword_100172340 + 24);
  *(_QWORD *)(qword_100172340 + 16) = v239;
  *(_QWORD *)(v238 + 24) = v240;
  *(_BYTE *)(v238 + 32) = v241;
  swift_bridgeObjectRetain_n(v239, 2);
  swift_bridgeObjectRetain(v240);
  swift_bridgeObjectRelease(v239, v244, v245, v246, v247, v248, v249, v250);
  swift_bridgeObjectRelease(v243, v251, v252, v253, v254, v255, v256, v257);
  swift_bridgeObjectRelease(v242, v258, v259, v260, v261, v262, v263, v264);
  v265 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10016A650 != -1)
    swift_once(&qword_10016A650, sub_100057180);
  objc_msgSend(v265, v30[364], qword_100172348, 0);

  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_firstActionTaken) & 1) != 0)
    sub_100099DE8();
  else
    sub_1000979AC();
}

void sub_1000979AC()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  SEL v9;
  id v10;
  int v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  SEL v22;
  id v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  void *v35;
  int v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  const char *v44;
  void *v45;
  int v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  SEL v54;
  id v55;
  int v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;

  v1 = v0;
  v2 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10010BE30;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v4 = (void *)qword_100172378;
  v5 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  *(_QWORD *)(v3 + 56) = v5;
  v6 = sub_10009BB5C((unint64_t *)&qword_10016B690, (unint64_t *)&qword_10016B180, OS_os_log_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v3 + 64) = v6;
  *(_QWORD *)(v3 + 32) = v4;
  v7 = (void *)static OS_os_log.default.getter(v4);
  v8 = static os_log_type_t.default.getter(v7);
  os_log(_:dso:log:type:_:)("## Performing first action", 26, 2, &_mh_execute_header, v7, v8, v3);
  swift_bridgeObjectRelease((DARootViewController *)v3, v9, v10, v11, v12, v13, v14, v15);

  v1[OBJC_IVAR____TtC11Diagnostics11AppDelegate_firstActionTaken] = 1;
  v16 = swift_allocObject(&unk_100139A80, 24, 7);
  *(_QWORD *)(v16 + 16) = v1;
  v17 = v1;
  sub_10008D140((uint64_t)sub_100098FD4, v16);
  swift_release(v16);
  if ((sub_100099C04() & 1) != 0)
  {
    v18 = swift_allocObject(v2, 72, 7);
    *(_OWORD *)(v18 + 16) = xmmword_10010BE30;
    v19 = (void *)qword_100172378;
    *(_QWORD *)(v18 + 56) = v5;
    *(_QWORD *)(v18 + 64) = v6;
    *(_QWORD *)(v18 + 32) = v19;
    v20 = (void *)static OS_os_log.default.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    os_log(_:dso:log:type:_:)("## Skipping Terms and Conditions", 32, 2, &_mh_execute_header, v20, v21, v18);
    swift_bridgeObjectRelease((DARootViewController *)v18, v22, v23, v24, v25, v26, v27, v28);

    if (qword_10016A5E0 != -1)
      swift_once(&qword_10016A5E0, sub_10002F774);
    *(_BYTE *)(qword_1001722E0 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsAccepted) = 1;
    v29 = (void *)qword_10016B3C0;
    if (qword_10016B3C0)
    {
      v30 = type metadata accessor for SelfServiceDestinationPickerViewController();
      if (!swift_dynamicCastClass(v29, v30))
      {
        v52 = v29;
LABEL_26:
        v51 = v52;
        goto LABEL_27;
      }
    }
    if (qword_10016A600 != -1)
      swift_once(&qword_10016A600, sub_1000490B8);
    v31 = objc_msgSend((id)qword_100172310, "viewControllers", 1, 2);
    v32 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

    if ((unint64_t)v33 >> 62)
    {
      if (v33 < 0)
        v53 = v33;
      else
        v53 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v33);
      v41 = _CocoaArrayWrapper.endIndex.getter(v53);
      swift_bridgeObjectRelease((DARootViewController *)v33, v54, v55, v56, v57, v58, v59, v60);
      if (v41)
      {
LABEL_12:
        v42 = v41 - 1;
        if (__OFSUB__(v41, 1))
        {
          __break(1u);
        }
        else if ((v33 & 0xC000000000000001) == 0)
        {
          if ((v42 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v42 < *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v43 = *(id *)(v33 + 8 * v42 + 32);
LABEL_17:
            v51 = v43;
            swift_bridgeObjectRelease((DARootViewController *)v33, v44, v45, v46, v47, v48, v49, v50);
LABEL_27:
            v61 = type metadata accessor for DashboardViewController();
            if (swift_dynamicCastClass(v51, v61))
              sub_10005FC04();

            sub_100099DE8();
            return;
          }
          __break(1u);
          goto LABEL_34;
        }
        v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v42, v33);
        goto LABEL_17;
      }
    }
    else
    {
      v41 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v41)
        goto LABEL_12;
    }
    swift_bridgeObjectRelease((DARootViewController *)v33, v34, v35, v36, v37, v38, v39, v40);
    if (qword_10016A5F8 == -1)
    {
LABEL_25:
      v52 = (id)qword_100172300;
      goto LABEL_26;
    }
LABEL_34:
    swift_once(&qword_10016A5F8, sub_100048E78);
    goto LABEL_25;
  }
}

void sub_100097D94(char a1, void *a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  char *v15;
  unint64_t v16;
  id v17;
  const char *v18;
  void *v19;
  int v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  SEL v28;
  id v29;
  int v30;
  id v31;
  id v32;
  id v33;
  id v34;
  objc_class *v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  const char *v40;
  void *v41;
  int v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  id v48;
  const char *v49;
  void *v50;
  int v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  SEL v59;
  id v60;
  int v61;
  id v62;
  id v63;
  id v64;
  id v65;
  char v66;
  id v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  char *v71;
  id v72;
  _QWORD v73[5];
  uint64_t v74;

  if (a1 == 3)
  {
    v3 = (void *)qword_10016B3C0;
    if (qword_10016B3C0
      && (v4 = type metadata accessor for SelfServiceDestinationPickerViewController(), !swift_dynamicCastClass(v3, v4)))
    {
      v26 = v3;
    }
    else
    {
      if (qword_10016A600 != -1)
        swift_once(&qword_10016A600, sub_1000490B8);
      v5 = objc_msgSend((id)qword_100172310, "viewControllers");
      v6 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
      v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

      if ((unint64_t)v7 >> 62)
      {
        if (v7 < 0)
          v27 = v7;
        else
          v27 = v7 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v7);
        v15 = (char *)_CocoaArrayWrapper.endIndex.getter(v27);
        swift_bridgeObjectRelease((DARootViewController *)v7, v28, v29, v30, v31, v32, v33, v34);
        if (v15)
        {
LABEL_8:
          v16 = (unint64_t)(v15 - 1);
          if (__OFSUB__(v15, 1))
          {
            __break(1u);
          }
          else if ((v7 & 0xC000000000000001) == 0)
          {
            if ((v16 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v16 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v17 = *(id *)(v7 + 8 * v16 + 32);
LABEL_13:
              v25 = v17;
              swift_bridgeObjectRelease((DARootViewController *)v7, v18, v19, v20, v21, v22, v23, v24);
              goto LABEL_23;
            }
            __break(1u);
            goto LABEL_56;
          }
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v7);
          goto LABEL_13;
        }
      }
      else
      {
        v15 = *(char **)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v15)
          goto LABEL_8;
      }
      swift_bridgeObjectRelease((DARootViewController *)v7, v8, v9, v10, v11, v12, v13, v14);
      if (qword_10016A5F8 != -1)
        swift_once(&qword_10016A5F8, sub_100048E78);
      v26 = (id)qword_100172300;
    }
    v25 = v26;
LABEL_23:
    v35 = (objc_class *)type metadata accessor for DashboardViewController();
    v15 = (char *)swift_dynamicCastClass(v25, v35);
    if (v15)
    {
      v36 = (void *)qword_10016B3C0;
      if (!qword_10016B3C0)
        goto LABEL_28;
    }
    else
    {

      v15 = (char *)objc_msgSend(objc_allocWithZone(v35), "initWithStyle:", 1);
      v36 = (void *)qword_10016B3C0;
      if (!qword_10016B3C0)
        goto LABEL_28;
    }
    v37 = type metadata accessor for SelfServiceDestinationPickerViewController();
    if (!swift_dynamicCastClass(v36, v37))
    {
      v57 = v36;
      goto LABEL_46;
    }
LABEL_28:
    if (qword_10016A600 != -1)
      swift_once(&qword_10016A600, sub_1000490B8);
    v38 = objc_msgSend((id)qword_100172310, "viewControllers");
    v39 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);

    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v58 = v7;
      else
        v58 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v47 = _CocoaArrayWrapper.endIndex.getter(v58);
      swift_bridgeObjectRelease((DARootViewController *)v7, v59, v60, v61, v62, v63, v64, v65);
      if (v47)
      {
LABEL_32:
        v16 = v47 - 1;
        if (!__OFSUB__(v47, 1))
        {
          if ((v7 & 0xC000000000000001) == 0)
          {
            if ((v16 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v16 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v48 = *(id *)(v7 + 8 * v16 + 32);
LABEL_37:
              v56 = v48;
              swift_bridgeObjectRelease((DARootViewController *)v7, v49, v50, v51, v52, v53, v54, v55);
              goto LABEL_47;
            }
            __break(1u);
            goto LABEL_60;
          }
LABEL_57:
          v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v7);
          goto LABEL_37;
        }
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
    }
    else
    {
      v47 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v47)
        goto LABEL_32;
    }
    swift_bridgeObjectRelease((DARootViewController *)v7, v40, v41, v42, v43, v44, v45, v46);
    if (qword_10016A5F8 != -1)
      swift_once(&qword_10016A5F8, sub_100048E78);
    v57 = (id)qword_100172300;
LABEL_46:
    v56 = v57;
LABEL_47:
    sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
    v66 = static NSObject.== infix(_:_:)(v56);

    if ((v66 & 1) != 0)
    {
LABEL_50:
      v67 = objc_msgSend((id)objc_opt_self(ELSManager), "sharedManager");
      v68 = swift_allocObject(&unk_100139B70, 32, 7);
      *(_QWORD *)(v68 + 16) = v15;
      *(_QWORD *)(v68 + 24) = a2;
      v73[4] = sub_10009A340;
      v74 = v68;
      v73[0] = _NSConcreteStackBlock;
      v73[1] = 1107296256;
      v73[2] = sub_10008D32C;
      v73[3] = &unk_100139B88;
      v69 = _Block_copy(v73);
      v70 = v74;
      v71 = v15;
      v72 = a2;
      objc_msgSend(v67, "refreshWithCompletion:", v69, swift_release(v70).n128_f64[0]);
      _Block_release(v69);

      return;
    }
    if (qword_10016A5F8 == -1)
    {
LABEL_49:
      sub_10004C4A4(v15, 1, 0, 0);
      goto LABEL_50;
    }
LABEL_60:
    swift_once(&qword_10016A5F8, sub_100048E78);
    goto LABEL_49;
  }
}

uint64_t sub_100098234(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_100139BC0, 40, 7);
  v16[2] = a1;
  v16[3] = a4;
  v16[4] = a5;
  aBlock[4] = sub_10009A37C;
  v30 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_100139BD8;
  v17 = _Block_copy(aBlock);
  v18 = v30;
  v19 = a1;
  v20 = a4;
  v21 = a5;
  v22 = swift_release(v18);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v23 = sub_100035C5C();
  v24 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v25 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v8, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v27);
}

void sub_100098428(void *a1)
{
  void *v2;
  void *v3;

  if (objc_msgSend(a1, "status") == (id)7)
  {
    if (qword_10016A5F8 != -1)
      swift_once(&qword_10016A5F8, sub_100048E78);
    v2 = (void *)qword_10016B3C0;
    qword_10016B3C0 = 0;

    if (qword_10016A5E0 != -1)
      swift_once(&qword_10016A5E0, sub_10002F774);
    *(_BYTE *)(qword_1001722E0 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) = 0;
    if (qword_10016A600 == -1)
      goto LABEL_14;
    goto LABEL_16;
  }
  if (objc_msgSend(a1, "status") == (id)8)
  {
    if (qword_10016A5F8 != -1)
      swift_once(&qword_10016A5F8, sub_100048E78);
    v3 = (void *)qword_10016B3C0;
    qword_10016B3C0 = 0;

    if (qword_10016A5E0 != -1)
      swift_once(&qword_10016A5E0, sub_10002F774);
    *(_BYTE *)(qword_1001722E0 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) = 4;
    if (qword_10016A600 == -1)
      goto LABEL_14;
LABEL_16:
    swift_once(&qword_10016A600, sub_1000490B8);
LABEL_14:

    return;
  }
  sub_10005FC04();
  sub_100099DE8();
}

uint64_t sub_100098610(unsigned __int8 a1, void *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v3 = a1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  result = __chkstk_darwin(v8);
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3 == 1)
  {
    v13 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
    v14 = (void *)static OS_dispatch_queue.main.getter(v13);
    v15 = swift_allocObject(&unk_100139B20, 24, 7);
    *(_QWORD *)(v15 + 16) = a2;
    aBlock[4] = sub_10009A300;
    v24 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100030658;
    aBlock[3] = &unk_100139B38;
    v16 = _Block_copy(aBlock);
    v17 = v24;
    v18 = a2;
    v19 = swift_release(v17);
    static DispatchQoS.unspecified.getter(v19);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v20 = sub_100035C5C();
    v21 = sub_100035CA4((uint64_t *)&unk_10016AD10);
    v22 = sub_100035CE4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v4, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v16);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return result;
}

void sub_1000987F4()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  v1 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  v2 = objc_msgSend(v1, "isCheckerBoardActive");
  swift_unknownObjectRelease(v1);
  if ((v2 & 1) == 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(BSPlatform), "sharedInstance");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, "homeButtonType");

      if (v5 == (id)2)
      {
        v6 = objc_msgSend((id)objc_opt_self(SBSHardwareButtonService), "sharedInstance");
        v7 = objc_msgSend(v6, "beginConsumingPressesForButtonKind:eventConsumer:priority:", 2, v0, 0);

        v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_lockButtonConsumer);
        *(_QWORD *)(v0 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_lockButtonConsumer) = v7;
        swift_unknownObjectRelease(v8);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10009890C()
{
  sub_100066B64(0);
}

id sub_100098950()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  objc_super v11;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics11AppDelegate_window] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions] = 0;
  v1 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_rootViewController;
  v2 = qword_10016A5F8;
  v3 = v0;
  if (v2 != -1)
    swift_once(&qword_10016A5F8, sub_100048E78);
  v4 = (void *)qword_100172300;
  *(_QWORD *)&v3[v1] = qword_100172300;
  v5 = &v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter];
  *(_QWORD *)v5 = &_swiftEmptySetSingleton;
  *((_QWORD *)v5 + 1) = &_swiftEmptySetSingleton;
  v5[16] = 1;
  v6 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor;
  v7 = objc_allocWithZone((Class)DSHardwareButtonEventMonitor);
  v8 = v4;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_lockButtonConsumer] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimer] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimeInterval] = 0x407E000000000000;
  v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_firstActionTaken] = 0;
  v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_wasEverInForeground] = 0;
  v9 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_launcherServiceManager;
  *(_QWORD *)&v3[v9] = objc_msgSend((id)objc_opt_self(DALauncherServiceManager), "sharedInstance");
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount] = 0;
  v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground] = 0;

  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for AppDelegate();
  return objc_msgSendSuper2(&v11, "init");
}

id sub_100098AE8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppDelegate()
{
  return objc_opt_self(_TtC11Diagnostics11AppDelegate);
}

void sub_100098BDC(unsigned __int8 a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v19 = qword_100172378;
  v20 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v21 = swift_allocObject(v20, 72, 7);
  *(_OWORD *)(v21 + 16) = xmmword_10010BE30;
  v22 = sub_100095088(a1);
  v24 = v23;
  *(_QWORD *)(v21 + 56) = &type metadata for String;
  *(_QWORD *)(v21 + 64) = sub_100047048();
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v24;
  v25 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("## Exiting application for reason: %@", 37, 2, &_mh_execute_header, v19, v25, v21);
  swift_bridgeObjectRelease(v21);
  objc_msgSend((id)objc_opt_self(DALauncherServiceManager), "sharedInstance");
  __asm { BR              X10 }
}

uint64_t sub_100098FB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100098FD4(char a1)
{
  uint64_t v1;

  sub_100097D94(a1, *(void **)(v1 + 16));
}

void sub_100098FDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  DARootViewController *v9;
  DARootViewController *v10;
  id v11;
  Swift::Int v12;
  SEL v13;
  id v14;
  int v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  DARootViewController *v26;
  DARootViewController *v27;
  uint64_t v28;
  DARootViewController *v29;
  DARootViewController *v31;
  char v32;
  SEL v33;
  id v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  SEL v40;
  id v41;
  int v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  DARootViewController *v49;
  uint64_t v50;
  DARootViewController *v51;
  DARootViewController *v53;
  char v54;
  SEL v55;
  id v56;
  int v57;
  id v58;
  id v59;
  id v60;
  id v61;
  SEL v62;
  id v63;
  int v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100035CA4(&qword_10016CFD0);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v72 = v1;
    v73 = a1 + 32;
    do
    {
      v6 = *(void **)(v73 + 8 * v4);
      v7 = *(_QWORD *)(v3 + 40);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v10 = v9;
      Hasher.init(_seed:)(v74, v7);
      v11 = v6;
      String.hash(into:)(v74, v8, v10);
      v12 = Hasher._finalize()();
      swift_bridgeObjectRelease(v10, v13, v14, v15, v16, v17, v18, v19);
      v20 = -1 << *(_BYTE *)(v3 + 32);
      v21 = v12 & ~v20;
      v22 = v21 >> 6;
      v23 = *(_QWORD *)(v5 + 8 * (v21 >> 6));
      v24 = 1 << v21;
      if (((1 << v21) & v23) != 0)
      {
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v21));
        v27 = v26;
        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        if (v25 == v28 && v27 == v29)
        {
LABEL_3:
          swift_bridgeObjectRelease_n(v27, 2);
LABEL_4:

          goto LABEL_5;
        }
        v31 = v29;
        v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v27, v28, v29, 0);
        swift_bridgeObjectRelease(v27, v33, v34, v35, v36, v37, v38, v39);
        swift_bridgeObjectRelease(v31, v40, v41, v42, v43, v44, v45, v46);
        if ((v32 & 1) != 0)
          goto LABEL_4;
        v47 = ~v20;
        while (1)
        {
          v21 = (v21 + 1) & v47;
          v22 = v21 >> 6;
          v23 = *(_QWORD *)(v5 + 8 * (v21 >> 6));
          v24 = 1 << v21;
          if ((v23 & (1 << v21)) == 0)
            break;
          v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v21));
          v27 = v49;
          v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
          if (v48 == v50 && v27 == v51)
            goto LABEL_3;
          v53 = v51;
          v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v27, v50, v51, 0);
          swift_bridgeObjectRelease(v27, v55, v56, v57, v58, v59, v60, v61);
          swift_bridgeObjectRelease(v53, v62, v63, v64, v65, v66, v67, v68);
          if ((v54 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v22) = v24 | v23;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v21) = v11;
      v69 = *(_QWORD *)(v3 + 16);
      v70 = __OFADD__(v69, 1);
      v71 = v69 + 1;
      if (v70)
      {
        __break(1u);
        return;
      }
      *(_QWORD *)(v3 + 16) = v71;
LABEL_5:
      ++v4;
    }
    while (v4 != v72);
  }
}

uint64_t sub_100099208(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_100133D18, a1, a2, &unk_10016A700);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x14)
    return 20;
  else
    return v3;
}

void sub_100099258(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v54;
  id v55;
  void **aBlock;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  void *v59;
  void *v60;
  uint64_t v61;

  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v4 = qword_100172378;
  v5 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v6 = swift_allocObject(v5, 112, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10010C3D0;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  *(_QWORD *)(v6 + 64) = sub_100047048();
  *(_QWORD *)(v6 + 32) = 0xD00000000000001FLL;
  *(_QWORD *)(v6 + 40) = 0x8000000100117AF0;
  *(_QWORD *)(v6 + 96) = sub_100037118(0, &qword_10016CF98, UISceneConnectionOptions_ptr);
  *(_QWORD *)(v6 + 104) = sub_10009BB5C((unint64_t *)&unk_10016CFA0, &qword_10016CF98, UISceneConnectionOptions_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v6 + 72) = a2;
  v55 = a2;
  v7 = static os_log_type_t.default.getter(v55);
  os_log(_:dso:log:type:_:)("## %@. connectionOptions: %@", 28, 2, &_mh_execute_header, v4, v7, v6);
  swift_bridgeObjectRelease((DARootViewController *)v6, v8, v9, v10, v11, v12, v13, v14);

  v15 = (void *)objc_opt_self(NSNotificationCenter);
  v16 = objc_msgSend(v15, "defaultCenter");
  if (qword_10016A6E8 != -1)
    swift_once(&qword_10016A6E8, sub_1000E1648);
  v17 = qword_1001723F0;
  v18 = (void *)objc_opt_self(NSOperationQueue);
  v19 = objc_msgSend(v18, "mainQueue");
  v20 = swift_allocObject(&unk_100139F80, 24, 7);
  *(_QWORD *)(v20 + 16) = v2;
  v60 = sub_10009BB9C;
  v61 = v20;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_100048DB4;
  v59 = &unk_100139F98;
  v21 = _Block_copy(&aBlock);
  v22 = v61;
  v23 = v2;
  v24 = objc_msgSend(v16, "addObserverForName:object:queue:usingBlock:", v17, 0, v19, v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);
  swift_unknownObjectRelease(v24);

  v25 = objc_msgSend(v15, "defaultCenter");
  if (qword_10016A618 != -1)
    swift_once(&qword_10016A618, sub_10004ABE8);
  v26 = qword_100172330;
  v27 = objc_msgSend(v18, "mainQueue", a1);
  v28 = swift_allocObject(&unk_100139FD0, 24, 7);
  *(_QWORD *)(v28 + 16) = v23;
  v60 = sub_10009BBA4;
  v61 = v28;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_100048DB4;
  v59 = &unk_100139FE8;
  v29 = _Block_copy(&aBlock);
  v30 = v61;
  v31 = v23;
  v32 = objc_msgSend(v25, "addObserverForName:object:queue:usingBlock:", v26, 0, v27, v29, swift_release(v30).n128_f64[0]);
  _Block_release(v29);
  swift_unknownObjectRelease(v32);

  v33 = objc_msgSend(v15, "defaultCenter");
  if (qword_10016A610 != -1)
    swift_once(&qword_10016A610, sub_10004ABB4);
  v34 = qword_100172328;
  v35 = objc_msgSend(v18, "mainQueue");
  v36 = swift_allocObject(&unk_10013A020, 24, 7);
  *(_QWORD *)(v36 + 16) = v31;
  v60 = sub_10009BBD4;
  v61 = v36;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_100048DB4;
  v59 = &unk_10013A038;
  v37 = _Block_copy(&aBlock);
  v38 = v61;
  v39 = (char *)v31;
  v40 = objc_msgSend(v33, "addObserverForName:object:queue:usingBlock:", v34, 0, v35, v37, swift_release(v38).n128_f64[0]);
  _Block_release(v37);
  swift_unknownObjectRelease(v40);

  v41 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  LOBYTE(v35) = objc_msgSend(v41, "isCheckerBoardActive");
  swift_unknownObjectRelease(v41);
  if ((v35 & 1) == 0)
  {
    v42 = objc_msgSend((id)objc_opt_self(BSPlatform), "sharedInstance");
    if (!v42)
    {
      __break(1u);
      return;
    }
    v43 = v42;
    v44 = objc_msgSend(v42, "homeButtonType");

    if (v44 != (id)2)
      objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor], "addTarget:action:forButtonEvents:propagate:", v39, "handleButtonEventWithEvent:", 62914563, 0);
  }
  v45 = objc_opt_self(UIWindowScene);
  v46 = objc_msgSend(objc_allocWithZone((Class)UIWindow), "initWithWindowScene:", swift_dynamicCastObjCClassUnconditional(v54, v45, 0, 0, 0));
  v47 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_window;
  v48 = *(void **)&v39[OBJC_IVAR____TtC11Diagnostics11AppDelegate_window];
  *(_QWORD *)&v39[OBJC_IVAR____TtC11Diagnostics11AppDelegate_window] = v46;

  v49 = *(void **)&v39[v47];
  if (v49)
  {
    objc_msgSend(v49, "setRootViewController:", *(_QWORD *)&v39[OBJC_IVAR____TtC11Diagnostics11AppDelegate_rootViewController]);
    v49 = *(void **)&v39[v47];
  }
  objc_msgSend(v49, "makeKeyAndVisible");
  v50 = swift_allocObject(&unk_10013A070, 32, 7);
  *(_QWORD *)(v50 + 16) = v39;
  *(_QWORD *)(v50 + 24) = v55;
  v51 = v55;
  v52 = v39;
  sub_1000497D4(0, (uint64_t (*)(id))sub_10009BC08);
  swift_release(v50);
}

void sub_1000998A8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char v34;
  uint64_t v35;
  id v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  id v42;
  Swift::Int v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char v50;
  uint64_t v51;
  id v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 *v56;
  DARootViewController *v57;
  uint64_t v58;
  uint64_t v59;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease((DARootViewController *)v1, v7, v8, v9, v10, v11, v12, v13);
    if (v3)
    {
LABEL_3:
      sub_100035CA4((uint64_t *)&unk_10016CFC0);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v14 = v1;
      else
        v14 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease((DARootViewController *)v1, v15, v16, v17, v18, v19, v20, v21);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v22 = (char *)(v4 + 7);
  v59 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v23 = 0;
    v57 = (DARootViewController *)v1;
    while (1)
    {
      while (1)
      {
        v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v1);
        v25 = __OFADD__(v23++, 1);
        if (v25)
        {
          __break(1u);
          goto LABEL_42;
        }
        v26 = v24;
        v27 = NSObject._rawHashValue(seed:)(v4[5]);
        v28 = -1 << *((_BYTE *)v4 + 32);
        v29 = v27 & ~v28;
        v30 = v29 >> 6;
        v31 = *(_QWORD *)&v22[8 * (v29 >> 6)];
        v32 = 1 << v29;
        if (((1 << v29) & v31) != 0)
          break;
LABEL_26:
        *(_QWORD *)&v22[8 * v30] = v32 | v31;
        *(_QWORD *)(v4[6] + 8 * v29) = v26;
        v38 = v4[2];
        v25 = __OFADD__(v38, 1);
        v39 = v38 + 1;
        if (v25)
          goto LABEL_43;
        v4[2] = v39;
        if (v23 == v5)
          return;
      }
      sub_100037118(0, &qword_10016CFB0, _UIPhysicalButtonConfiguration_ptr);
      v33 = *(id *)(v4[6] + 8 * v29);
      v34 = static NSObject.== infix(_:_:)(v33);

      if ((v34 & 1) == 0)
      {
        v35 = ~v28;
        while (1)
        {
          v29 = (v29 + 1) & v35;
          v30 = v29 >> 6;
          v31 = *(_QWORD *)&v22[8 * (v29 >> 6)];
          v32 = 1 << v29;
          if ((v31 & (1 << v29)) == 0)
            break;
          v36 = *(id *)(v4[6] + 8 * v29);
          v37 = static NSObject.== infix(_:_:)(v36);

          if ((v37 & 1) != 0)
            goto LABEL_17;
        }
        v1 = (uint64_t)v57;
        v5 = v59;
        goto LABEL_26;
      }
LABEL_17:
      swift_unknownObjectRelease(v26);
      v1 = (uint64_t)v57;
      v5 = v59;
      if (v23 == v59)
        return;
    }
  }
  v40 = 0;
  v56 = (unsigned __int8 *)(v1 + 32);
  v58 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v40 != v58)
  {
    v41 = v4[5];
    v42 = *(id *)&v56[8 * v40];
    v43 = NSObject._rawHashValue(seed:)(v41);
    v44 = -1 << *((_BYTE *)v4 + 32);
    v45 = v43 & ~v44;
    v46 = v45 >> 6;
    v47 = *(_QWORD *)&v22[8 * (v45 >> 6)];
    v48 = 1 << v45;
    if (((1 << v45) & v47) != 0)
    {
      sub_100037118(0, &qword_10016CFB0, _UIPhysicalButtonConfiguration_ptr);
      v49 = *(id *)(v4[6] + 8 * v45);
      v50 = static NSObject.== infix(_:_:)(v49);

      if ((v50 & 1) != 0)
      {
LABEL_30:

        goto LABEL_31;
      }
      v51 = ~v44;
      while (1)
      {
        v45 = (v45 + 1) & v51;
        v46 = v45 >> 6;
        v47 = *(_QWORD *)&v22[8 * (v45 >> 6)];
        v48 = 1 << v45;
        if ((v47 & (1 << v45)) == 0)
          break;
        v52 = *(id *)(v4[6] + 8 * v45);
        v53 = static NSObject.== infix(_:_:)(v52);

        if ((v53 & 1) != 0)
          goto LABEL_30;
      }
    }
    *(_QWORD *)&v22[8 * v46] = v48 | v47;
    *(_QWORD *)(v4[6] + 8 * v45) = v42;
    v54 = v4[2];
    v25 = __OFADD__(v54, 1);
    v55 = v54 + 1;
    if (v25)
      goto LABEL_44;
    v4[2] = v55;
LABEL_31:
    if (++v40 == v59)
      return;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

uint64_t sub_100099C04()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  void *v3;
  id v4;
  unsigned __int8 v5;
  id v6;
  NSString v7;
  id v8;
  NSString v9;
  unsigned __int8 v10;
  id v11;
  NSString v12;
  unsigned __int8 v13;
  id v14;
  id v16;

  v0 = (void *)objc_opt_self(DAPlatform);
  v1 = objc_msgSend(v0, "currentPlatform");
  v2 = objc_msgSend(v1, "didSetProxyServerInformation");
  swift_unknownObjectRelease(v1);
  if ((v2 & 1) != 0)
    return 1;
  v3 = (void *)objc_opt_self(NSUserDefaults);
  v4 = objc_msgSend(v3, "standardUserDefaults");
  v5 = objc_msgSend(v4, "BOOLForKey:", CFSTR("SkipTermsAndConditions"));

  if ((v5 & 1) != 0)
    return 1;
  v6 = objc_allocWithZone((Class)NSUserDefaults);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithSuiteName:", v7);

  if (v8)
  {
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v8, "BOOLForKey:", v9);

    if ((v10 & 1) != 0)
      return 1;
  }
  v11 = objc_msgSend(v3, "standardUserDefaults");
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "BOOLForKey:", v12);

  if ((v13 & 1) != 0)
    return 1;
  v16 = objc_msgSend(v0, "currentPlatform");
  v14 = objc_msgSend(v16, "isInBoxUpdateModeActive");
  swift_unknownObjectRelease(v16);
  return (uint64_t)v14;
}

void sub_100099DE8()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  const char *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  SEL v24;
  id v25;
  int v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  SEL v39;
  id v40;
  int v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  DARootViewController *v53;
  NSString v54;
  SEL v55;
  id v56;
  int v57;
  id v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  _QWORD aBlock[5];
  uint64_t v67;

  v0 = (void *)qword_10016B3C0;
  if (qword_10016B3C0)
  {
    v1 = type metadata accessor for SelfServiceDestinationPickerViewController();
    if (!swift_dynamicCastClass(v0, v1))
    {
      v22 = v0;
LABEL_20:
      v65 = v22;
      goto LABEL_21;
    }
  }
  if (qword_10016A600 != -1)
    swift_once(&qword_10016A600, sub_1000490B8);
  v2 = objc_msgSend((id)qword_100172310, "viewControllers");
  v3 = sub_100037118(0, (unint64_t *)&qword_10016C200, UIViewController_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
    v12 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_7;
LABEL_18:
    swift_bridgeObjectRelease((DARootViewController *)v4, v5, v6, v7, v8, v9, v10, v11);
    if (qword_10016A5F8 == -1)
    {
LABEL_19:
      v22 = (id)qword_100172300;
      goto LABEL_20;
    }
LABEL_36:
    swift_once(&qword_10016A5F8, sub_100048E78);
    goto LABEL_19;
  }
  if (v4 < 0)
    v23 = v4;
  else
    v23 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v12 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease((DARootViewController *)v4, v24, v25, v26, v27, v28, v29, v30);
  if (!v12)
    goto LABEL_18;
LABEL_7:
  v13 = v12 - 1;
  if (__OFSUB__(v12, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_33:
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v4);
    goto LABEL_12;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v13 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v14 = *(id *)(v4 + 8 * v13 + 32);
LABEL_12:
  v65 = v14;
  swift_bridgeObjectRelease((DARootViewController *)v4, v15, v16, v17, v18, v19, v20, v21);
LABEL_21:
  v31 = type metadata accessor for DashboardViewController();
  v32 = swift_dynamicCastClass(v65, v31);
  if (v32
    && (v33 = (void *)v32,
        *(_BYTE *)(*(_QWORD *)(v32 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
                 + OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly) == 1))
  {
    v34 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v35 = swift_allocObject(v34, 72, 7);
    *(_OWORD *)(v35 + 16) = xmmword_10010BE30;
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v36 = (void *)qword_100172378;
    *(_QWORD *)(v35 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    *(_QWORD *)(v35 + 64) = sub_10009BB5C((unint64_t *)&qword_10016B690, (unint64_t *)&qword_10016B180, OS_os_log_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v35 + 32) = v36;
    v37 = (void *)static OS_os_log.default.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    os_log(_:dso:log:type:_:)("## Evaluating persistent only", 29, 2, &_mh_execute_header, v37, v38, v35);
    swift_bridgeObjectRelease((DARootViewController *)v35, v39, v40, v41, v42, v43, v44, v45);

    v46 = swift_allocObject(&unk_100139AA8, 24, 7);
    *(_QWORD *)(v46 + 16) = v33;
    v47 = (void *)objc_opt_self(CBSUtilities);
    v48 = v65;
    v49 = objc_msgSend(v47, "isSSRBootIntentSet");
    if ((_DWORD)v49)
    {
      byte_10016CC90 = 2;
      sub_100098610(2u, v33);

      swift_release(v46);
    }
    else
    {
      v50 = qword_100172378;
      v51 = static os_log_type_t.default.getter(v49);
      os_log(_:dso:log:type:_:)("Checking AST 2 activity", 23, 2, &_mh_execute_header, v50, v51, &_swiftEmptyArrayStorage);
      v52 = objc_msgSend(objc_allocWithZone((Class)DADiagnosticsSessionAvailability), "init");
      v53 = (DARootViewController *)qword_100172388;
      if (qword_100172388)
      {
        swift_bridgeObjectRetain(qword_100172388);
        v54 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v53, v55, v56, v57, v58, v59, v60, v61);
      }
      else
      {
        v54 = 0;
      }
      v62 = swift_allocObject(&unk_100139AD0, 32, 7);
      *(_QWORD *)(v62 + 16) = sub_10009A2BC;
      *(_QWORD *)(v62 + 24) = v46;
      aBlock[4] = sub_1000370A8;
      v67 = v62;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000A2514;
      aBlock[3] = &unk_100139AE8;
      v63 = _Block_copy(aBlock);
      v64 = v67;
      swift_retain(v46);
      swift_release(v64);
      objc_msgSend(v52, "checkAvailabilityWithTicketNumber:timeout:exitWhenDone:completion:", v54, 0, v63, 30.0);
      _Block_release(v63);

      swift_release(v46);
    }
  }
  else
  {

  }
}

uint64_t sub_10009A2BC(unsigned __int8 a1)
{
  uint64_t v1;

  return sub_100098610(a1, *(void **)(v1 + 16));
}

uint64_t sub_10009A2C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009A2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10009A2F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10009A300()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
           + OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly) = 0;
  return sub_1000E16E4();
}

uint64_t sub_10009A340(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100098234(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_10009A348()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_10009A37C()
{
  uint64_t v0;

  sub_100098428(*(void **)(v0 + 16));
}

uint64_t sub_10009A388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4((uint64_t *)&unk_10016B680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009A3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4(&qword_10016CF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10009A418(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

uint64_t sub_10009A440(DARootViewController *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  SEL v20;
  id v21;
  int v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void (*v37)(char *, char *, uint64_t);
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;

  v2 = sub_100035CA4((uint64_t *)&unk_10016B680);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v40 - v6;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v40 - v13;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v15 = qword_100172378;
  v16 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v17 = swift_allocObject(v16, 72, 7);
  *(_OWORD *)(v17 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v17 + 56) = &type metadata for String;
  v18 = sub_100047048();
  *(_QWORD *)(v17 + 64) = v18;
  *(_QWORD *)(v17 + 32) = 0xD000000000000019;
  *(_QWORD *)(v17 + 40) = 0x8000000100117AB0;
  v19 = static os_log_type_t.default.getter(v18);
  os_log(_:dso:log:type:_:)("## %@", 5, 2, &_mh_execute_header, v15, v19, v17);
  swift_bridgeObjectRelease((DARootViewController *)v17, v20, v21, v22, v23, v24, v25, v26);
  v27 = swift_bridgeObjectRetain(a1);
  v28 = (void *)sub_1000C4F34(v27);
  swift_bridgeObjectRelease(a1, v29, v30, v31, v32, v33, v34, v35);
  if (v28)
  {
    v36 = objc_msgSend(v28, "URL");

    static URL._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v37 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v37(v7, v12, v8);
    v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
    v38(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v37(v14, v7, v8);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v5, v14, v8);
      v38(v5, 0, 1, v8);
      sub_100096E30((uint64_t)v5);
      sub_100036FA0((uint64_t)v5, (uint64_t *)&unk_10016B680);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  return sub_100036FA0((uint64_t)v7, (uint64_t *)&unk_10016B680);
}

void sub_10009ABEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  DARootViewController *v17;
  uint64_t v18;
  DARootViewController *v19;
  DARootViewController *v20;
  SEL v21;
  id v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  SEL v28;
  id v29;
  int v30;
  id v31;
  id v32;
  id v33;
  id v34;
  SEL v35;
  id v36;
  int v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;

  v1 = v0;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v2 = qword_100172378;
  v3 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v4 = swift_allocObject(v3, 72, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v4 + 56) = &type metadata for String;
  v5 = sub_100047048();
  *(_QWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 32) = 0xD00000000000001CLL;
  *(_QWORD *)(v4 + 40) = 0x8000000100117A50;
  v6 = static os_log_type_t.default.getter(v5);
  os_log(_:dso:log:type:_:)("## %@", 5, 2, &_mh_execute_header, v2, v6, v4);
  swift_bridgeObjectRelease((DARootViewController *)v4, v7, v8, v9, v10, v11, v12, v13);
  v14 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground) = 1;
  sub_100095B7C(v14);
  sub_1000497D4(0, 0);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_wasEverInForeground) & 1) == 0)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_wasEverInForeground) = 1;
    if (qword_10016A648 != -1)
      swift_once(&qword_10016A648, sub_100053F8C);
    v15 = qword_100172340;
    v16 = v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter;
    v17 = *(DARootViewController **)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter);
    v18 = *(_QWORD *)(v16 + 8);
    LOBYTE(v16) = *(_BYTE *)(v16 + 16);
    v19 = *(DARootViewController **)(qword_100172340 + 16);
    v20 = *(DARootViewController **)(qword_100172340 + 24);
    *(_QWORD *)(qword_100172340 + 16) = v17;
    *(_QWORD *)(v15 + 24) = v18;
    *(_BYTE *)(v15 + 32) = v16;
    swift_bridgeObjectRetain_n(v17, 2);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRelease(v17, v21, v22, v23, v24, v25, v26, v27);
    swift_bridgeObjectRelease(v20, v28, v29, v30, v31, v32, v33, v34);
    swift_bridgeObjectRelease(v19, v35, v36, v37, v38, v39, v40, v41);
    v42 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10016A650 != -1)
      swift_once(&qword_10016A650, sub_100057180);
    objc_msgSend(v42, "postNotificationName:object:", qword_100172348, 0);

  }
  sub_100099DE8();
}

void sub_10009AE00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  id v18;
  uint64_t v19;
  id v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  id v29[9];

  v1 = v0;
  if (qword_10016A678 != -1)
    swift_once(&qword_10016A678, sub_10008BF34);
  v2 = qword_100172378;
  v3 = sub_100035CA4((uint64_t *)&unk_10016BE40);
  v4 = swift_allocObject(v3, 72, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10010BE30;
  *(_QWORD *)(v4 + 56) = &type metadata for String;
  v5 = sub_100047048();
  *(_QWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(v4 + 40) = 0x8000000100117A10;
  v6 = static os_log_type_t.default.getter(v5);
  os_log(_:dso:log:type:_:)("## %@", 5, 2, &_mh_execute_header, v2, v6, v4);
  swift_bridgeObjectRelease((DARootViewController *)v4, v7, v8, v9, v10, v11, v12, v13);
  v14 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground) = 0;
  sub_100095B7C(v14);
  if (qword_10016A6D8 != -1)
    swift_once(&qword_10016A6D8, sub_1000C6380);
  v15 = type metadata accessor for ModalPresentationCoordinator(0);
  v16 = sub_100036D34(v15, (uint64_t)qword_1001723D0);
  swift_beginAccess(v16, v29, 33, 0);
  sub_1000C5184(0, 0);
  swift_endAccess(v29);
  if (qword_10016A5F0 != -1)
    swift_once(&qword_10016A5F0, sub_100044F78);
  v17 = (_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
  *(_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = (*(_BYTE *)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState) & 1) == 0;
  v18 = sub_100046588();
  objc_msgSend(v18, "setNearbySharingEnabled:", (*v17 & 1) == 0);

  v19 = qword_1001722E8;
  v20 = sub_100046588();
  objc_msgSend(v20, "setDiscoverableMode:", *(_QWORD *)(v19 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting));

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_launcherServiceManager), "informExitingForReason:", 0);
  if (*(uint64_t *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount) <= 0)
    sub_100098BDC(0xCu, v21, v22, v23, v24, v25, v26, v27, v28, v29[0], (uint64_t)v29[1], (uint64_t)v29[2], (uint64_t)v29[3], (uint64_t)v29[4], (uint64_t)v29[5], (uint64_t)v29[6], (uint64_t)v29[7], (uint64_t)v29[8]);
}

void sub_10009B048()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = (void *)objc_opt_self(NSUserDefaults);
  v1 = objc_msgSend(v0, "standardUserDefaults");
  objc_msgSend(v1, "setInteger:forKey:", 0, CFSTR("InCurrentSession"));

  v2 = objc_msgSend(v0, "standardUserDefaults");
  v3 = objc_msgSend(v2, "stringForKey:", CFSTR("currentTicketNumber"));

  if (v3)
  {

    v4 = objc_msgSend(v0, "standardUserDefaults");
    objc_msgSend(v4, "removeObjectForKey:", CFSTR("currentTicketNumber"));

  }
}

void sub_10009B408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v4 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000370B0(a1, (uint64_t)aBlock);
  v7 = swift_dynamicCast(v6, aBlock, (char *)&type metadata for Any + 8, v4, 6);
  if (!(_DWORD)v7)
  {
    v17 = static os_log_type_t.error.getter(v7);
    v18 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v14 = (void *)static OS_os_log.default.getter(v18);
    os_log(_:dso:log:_:_:)(v17, &_mh_execute_header, v14, "Unknown caller is requesting an orientation lock, ignoring", 58, 2, &_swiftEmptyArrayStorage);
LABEL_11:

    return;
  }
  sub_10009BDE4((uint64_t)v6);
  qword_10016CDC0 = a2;
  if (a2 == 2)
  {
    v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v9 = objc_msgSend(v8, "delegate");

    if (v9)
    {
      v10 = type metadata accessor for AppDelegate();
      v11 = swift_dynamicCastClass(v9, v10);
      if (!v11
        || (v12 = *(void **)(v11 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_window)) == 0
        || (v13 = objc_msgSend(v12, "windowScene")) == 0)
      {
        swift_unknownObjectRelease(v9);
        return;
      }
      v14 = v13;
      v15 = objc_msgSend(objc_allocWithZone((Class)UIWindowSceneGeometryPreferencesIOS), "initWithInterfaceOrientations:", 2);
      aBlock[4] = sub_100095480;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100040808;
      aBlock[3] = &unk_10013A280;
      v16 = _Block_copy(aBlock);
      objc_msgSend(v14, "requestGeometryUpdateWithPreferences:errorHandler:", v15, v16);
      _Block_release(v16);

      if (qword_10016A5F8 != -1)
        swift_once(&qword_10016A5F8, sub_100048E78);
      objc_msgSend((id)qword_100172300, "setNeedsUpdateOfSupportedInterfaceOrientations");
      swift_unknownObjectRelease(v9);
      goto LABEL_11;
    }
  }
}

void sub_10009B674(uint64_t a1)
{
  id v1;
  NSString v2;
  unsigned __int8 v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  SEL v11;
  id v12;
  int v13;
  id v14;
  id v15;
  id v16;
  id v17;

  if (a1 == 2)
  {
    v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v2 = String._bridgeToObjectiveC()();
    v3 = objc_msgSend(v1, "BOOLForKey:", v2);

    if ((v3 & 1) == 0)
    {
      v4 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
      v5 = objc_msgSend(v4, "isInBoxUpdateModeActive");
      swift_unknownObjectRelease(v4);
      if ((v5 & 1) == 0)
      {
        v6 = sub_100035CA4((uint64_t *)&unk_10016BE40);
        v7 = swift_allocObject(v6, 72, 7);
        *(_OWORD *)(v7 + 16) = xmmword_10010BE30;
        if (qword_10016A678 != -1)
          swift_once(&qword_10016A678, sub_10008BF34);
        v8 = (void *)qword_100172378;
        *(_QWORD *)(v7 + 56) = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
        *(_QWORD *)(v7 + 64) = sub_10009BB5C((unint64_t *)&qword_10016B690, (unint64_t *)&qword_10016B180, OS_os_log_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
        *(_QWORD *)(v7 + 32) = v8;
        v9 = (void *)static OS_os_log.default.getter(v8);
        v10 = static os_log_type_t.default.getter(v9);
        os_log(_:dso:log:type:_:)("## Consuming lock button long press event", 41, 2, &_mh_execute_header, v9, v10, v7);
        swift_bridgeObjectRelease((DARootViewController *)v7, v11, v12, v13, v14, v15, v16, v17);

        sub_100066B64(0);
      }
    }
  }
}

void sub_10009B85C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSString v11;
  unsigned __int8 v12;
  id v13;
  unsigned __int8 v14;
  uint64_t v15;
  void *v16;
  void *v17;
  __n128 v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[6];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
    v10 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v10, "BOOLForKey:", v11);

    if ((v12 & 1) == 0)
    {
      v13 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
      v14 = objc_msgSend(v13, "isInBoxUpdateModeActive");
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) == 0)
      {
        v15 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
        v16 = (void *)static OS_dispatch_queue.main.getter(v15);
        aBlock[4] = sub_10009890C;
        aBlock[5] = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100030658;
        aBlock[3] = &unk_100139C00;
        v17 = _Block_copy(aBlock);
        static DispatchQoS.unspecified.getter(v18);
        aBlock[0] = &_swiftEmptyArrayStorage;
        v19 = sub_100035C5C();
        v20 = sub_100035CA4((uint64_t *)&unk_10016AD10);
        v21 = sub_100035CE4();
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v2, v19);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v17);
        _Block_release(v17);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
    }
  }
}

void sub_10009BABC()
{
  uint64_t v0;

  sub_1000459FC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10009BAC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009BAD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10009BAE4()
{
  uint64_t v0;

  sub_100044FA4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10009BAEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10009BAFC()
{
  uint64_t v0;

  sub_1000453E4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10009BB04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10009BB14()
{
  uint64_t v0;

  sub_100045F68(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10009BB1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10009BB2C()
{
  uint64_t v0;

  sub_100045E5C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10009BB34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10009BB44()
{
  uint64_t v0;

  sub_100045CC8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10009BB4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009BB5C(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100037118(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10009BB9C(uint64_t a1)
{
  uint64_t v1;

  sub_1000964B0(a1, *(_QWORD *)(v1 + 16));
}

void sub_10009BBA4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground) = 0;
  sub_100095B7C(v2);
}

void sub_10009BBD4(uint64_t a1)
{
  uint64_t v1;

  sub_1000965C8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10009BBDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10009BC08()
{
  uint64_t v0;

  return sub_10009673C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10009BC10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009BC20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009BC30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t getEnumTagSinglePayload for ExitReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ExitReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_10009BD1C + 4 * byte_10010DC11[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_10009BD50 + 4 * byte_10010DC0C[v4]))();
}

uint64_t sub_10009BD50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009BD58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10009BD60);
  return result;
}

uint64_t sub_10009BD6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10009BD74);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_10009BD78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009BD80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExitReason()
{
  return &type metadata for ExitReason;
}

unint64_t sub_10009BDA0()
{
  unint64_t result;

  result = qword_10016CFD8;
  if (!qword_10016CFD8)
  {
    result = swift_getWitnessTable(&unk_10010DCB4, &type metadata for ExitReason);
    atomic_store(result, (unint64_t *)&qword_10016CFD8);
  }
  return result;
}

uint64_t sub_10009BDE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10009BEFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id i;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  void *v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_100037118(0, &qword_10016AF00, UIScene_ptr);
    v5 = sub_1000407A8();
    v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    v1 = v27[0];
    v25 = v27[1];
    v7 = v27[2];
    v8 = v27[3];
    v9 = v27[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v24 = v7;
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
LABEL_11:
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
    goto LABEL_32;
  }
  v21 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v21 < v13)
    {
      v22 = *(_QWORD *)(v25 + 8 * v21);
      v16 = v8 + 1;
      if (v22)
        goto LABEL_31;
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_36;
      v22 = *(_QWORD *)(v25 + 8 * v16);
      if (v22)
        goto LABEL_31;
      v16 = v8 + 3;
      if (v8 + 3 >= v13)
        goto LABEL_36;
      v22 = *(_QWORD *)(v25 + 8 * v16);
      if (v22)
        goto LABEL_31;
      v16 = v8 + 4;
      if (v8 + 4 >= v13)
        goto LABEL_36;
      v22 = *(_QWORD *)(v25 + 8 * v16);
      if (v22)
      {
LABEL_31:
        v14 = (v22 - 1) & v22;
        v15 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_32:
        for (i = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15); i; v14 = v9)
        {
          if (!objc_msgSend(i, "activationState", v24))
            break;

          v8 = v16;
          v9 = v14;
          if ((v1 & 0x8000000000000000) == 0)
            goto LABEL_11;
LABEL_13:
          v17 = __CocoaSet.Iterator.next()(v6);
          if (!v17)
            break;
          v18 = v17;
          v26 = v17;
          v19 = sub_100037118(0, &qword_10016AF00, UIScene_ptr);
          swift_unknownObjectRetain(v18);
          swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
          i = v28;
          swift_unknownObjectRelease(v18);
          v16 = v8;
        }
        goto LABEL_36;
      }
      v16 = v8 + 5;
      if (v8 + 5 < v13)
      {
        v22 = *(_QWORD *)(v25 + 8 * v16);
        if (!v22)
        {
          v23 = v8 + 6;
          while (v13 != v23)
          {
            v22 = *(_QWORD *)(v25 + 8 * v23++);
            if (v22)
            {
              v16 = v23 - 1;
              goto LABEL_31;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_31;
      }
    }
LABEL_36:
    sub_100040800(v1);
    return;
  }
  __break(1u);
}

uint64_t sub_10009C1B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  int *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v22;
  SEL v23;
  id v24;
  int v25;
  id v26;
  id v27;
  id v28;
  id v29;
  char v30;
  _QWORD v31[2];

  *a5 = 0x4044000000000000;
  v10 = (int *)type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  v11 = (_QWORD *)((char *)a5 + v10[5]);
  *v11 = swift_getKeyPath(&unk_10010DCF0);
  v12 = sub_100035CA4(&qword_10016CFE0);
  swift_storeEnumTagMultiPayload(v11, v12, 0);
  v13 = (char *)a5 + v10[6];
  *(_QWORD *)v13 = swift_getKeyPath(&unk_10010DD20);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  *(_QWORD *)((char *)a5 + v10[8]) = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease((DARootViewController *)a1, v23, v24, v25, v26, v27, v28, v29);
  }
  else
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 <= a2)
    v15 = 0;
  else
    v15 = a2;
  v16 = (char *)a5 + v10[10];
  *(_QWORD *)((char *)a5 + v10[9]) = v15;
  *(_QWORD *)v16 = a3;
  v16[8] = a4 & 1;
  if ((a4 & 1) != 0 || a3 > 0x18 || ((1 << a3) & 0x1010100) == 0)
  {
    v17 = v10[7];
    v30 = 0;
  }
  else
  {
    v17 = v10[7];
    v30 = 1;
  }
  State.init(wrappedValue:)(v31, &v30, &type metadata for Bool);
  v18 = v31[1];
  v19 = (char *)a5 + v17;
  *v19 = v31[0];
  *((_QWORD *)v19 + 1) = v18;
  v20 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  objc_msgSend(v20, "hideSceneStatusBar");
  return swift_unknownObjectRelease(v20);
}

uint64_t type metadata accessor for SelfServiceInstructionsFullScreenViewerView(uint64_t a1)
{
  uint64_t result;

  result = qword_10016D048;
  if (!qword_10016D048)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SelfServiceInstructionsFullScreenViewerView);
  return result;
}

uint64_t sub_10009C3A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (**v32)(uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[12];
  uint64_t v44;
  _BYTE v45[207];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _OWORD v57[3];

  v2 = v1;
  v39 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = static Color.black.getter(v8);
  v41 = static SafeAreaRegions.all.getter(v42);
  v10 = static Edge.Set.all.getter(v41);
  v40 = v10;
  v11 = static Alignment.center.getter(v10);
  v37 = v12;
  v38 = v11;
  sub_10009C6C4(v2, (uint64_t)v43);
  *(_OWORD *)&v45[151] = v43[9];
  *(_OWORD *)&v45[167] = v43[10];
  *(_OWORD *)&v45[183] = v43[11];
  *(_OWORD *)&v45[87] = v43[5];
  *(_OWORD *)&v45[103] = v43[6];
  *(_OWORD *)&v45[119] = v43[7];
  *(_OWORD *)&v45[135] = v43[8];
  *(_OWORD *)&v45[23] = v43[1];
  *(_OWORD *)&v45[39] = v43[2];
  *(_OWORD *)&v45[55] = v43[3];
  *(_OWORD *)&v45[71] = v43[4];
  *(_QWORD *)&v45[199] = v44;
  *(_OWORD *)&v45[7] = v43[0];
  sub_10009DC4C(v2, (uint64_t)v9);
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = v14 + v7;
  v16 = v13 | 7;
  v34 = swift_allocObject(&unk_10013A310, v14 + v7, v13 | 7);
  sub_10009DC94((uint64_t)v9, v34 + v14);
  v56 = *(_OWORD *)&v45[160];
  v57[0] = *(_OWORD *)&v45[176];
  *(_OWORD *)((char *)v57 + 15) = *(_OWORD *)&v45[191];
  v52 = *(_OWORD *)&v45[96];
  v53 = *(_OWORD *)&v45[112];
  v54 = *(_OWORD *)&v45[128];
  v55 = *(_OWORD *)&v45[144];
  v48 = *(_OWORD *)&v45[32];
  v49 = *(_OWORD *)&v45[48];
  v50 = *(_OWORD *)&v45[64];
  v51 = *(_OWORD *)&v45[80];
  v46 = *(_OWORD *)v45;
  v47 = *(_OWORD *)&v45[16];
  v17 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v18 = v35;
  NSNotificationCenter.publisher(for:object:)(UIDeviceOrientationDidChangeNotification, 0);

  sub_10009DC4C(v2, (uint64_t)v9);
  v19 = swift_allocObject(&unk_10013A338, v15, v16);
  sub_10009DC94((uint64_t)v9, v19 + v14);
  v20 = sub_100035CA4(&qword_10016D0A0);
  v21 = v36;
  v22 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(a1 + *(int *)(v20 + 52), v18, v39);
  v23 = v54;
  *(_OWORD *)(a1 + 161) = v55;
  v24 = v57[0];
  *(_OWORD *)(a1 + 177) = v56;
  *(_OWORD *)(a1 + 193) = v24;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)((char *)v57 + 15);
  v25 = v50;
  *(_OWORD *)(a1 + 97) = v51;
  v26 = v53;
  *(_OWORD *)(a1 + 113) = v52;
  *(_OWORD *)(a1 + 129) = v26;
  *(_OWORD *)(a1 + 145) = v23;
  v27 = v46;
  *(_OWORD *)(a1 + 33) = v47;
  v28 = v49;
  *(_OWORD *)(a1 + 49) = v48;
  *(_OWORD *)(a1 + 65) = v28;
  *(_OWORD *)(a1 + 81) = v25;
  v29 = v41;
  *(_QWORD *)a1 = v42;
  *(_QWORD *)(a1 + 8) = v29;
  *(_BYTE *)(a1 + 16) = v40;
  *(_OWORD *)(a1 + 17) = v27;
  v30 = v37;
  *(_QWORD *)(a1 + 224) = v38;
  *(_QWORD *)(a1 + 232) = v30;
  v31 = v34;
  *(_QWORD *)(a1 + 240) = sub_10009DCD8;
  *(_QWORD *)(a1 + 248) = v31;
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  v32 = (void (**)(uint64_t))(a1 + *(int *)(v20 + 56));
  *v32 = sub_10009DCE8;
  v32[1] = (void (*)(uint64_t))v19;
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v18, v22);
}

void sub_10009C6C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  double v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  char v62;
  char v63;
  uint64_t v64;
  _QWORD v65[7];
  unsigned __int8 v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;

  v4 = (int *)type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  v5 = *((_QWORD *)v4 - 1);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + *(int *)(__chkstk_darwin(v4) + 32));
  sub_10009DC4C(a1, (uint64_t)v7);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_10013A360, v10 + v6, v9 | 7);
  sub_10009DC94((uint64_t)v7, v11 + v10);
  v12 = v4[10];
  v13 = *(_QWORD *)(a1 + v4[9]);
  v14 = *(_QWORD *)(a1 + v12);
  v15 = *(unsigned __int8 *)(a1 + v12 + 8);
  v16 = swift_bridgeObjectRetain(v8);
  v48 = v14;
  v49 = v15;
  v17 = sub_1000CA760(v65, v16, sub_10009DD74, v11, v13, 0, v14, v15);
  v18 = v65[0];
  v19 = v65[1];
  v20 = v65[2];
  v60 = v65[3];
  v59 = v65[4];
  v58 = v65[5];
  v57 = v65[6];
  v56 = v66;
  v55 = v67;
  v61 = v68;
  v54 = v69;
  v53 = v70;
  v52 = v71;
  v51 = static SafeAreaRegions.all.getter(v17);
  v50 = static Edge.Set.all.getter(v51);
  v21 = a1 + v4[7];
  v22 = *(_BYTE *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  LOBYTE(v72) = *(_BYTE *)v21;
  v73 = v23;
  sub_100035CA4(&qword_10016D0A8);
  State.wrappedValue.getter(&v64);
  LODWORD(v11) = v64;
  v24 = a1 + v4[6];
  v25 = *(_QWORD *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v27 = *(_BYTE *)(v24 + 16);
  sub_10009D424(*(_QWORD *)v24, v26, v27);
  v28 = sub_1000CC644(v25, v26, v27);
  sub_10009D4D4(v25, v26, v27);
  if ((_DWORD)v11 == 1)
  {
    if (qword_10016A6D0 != -1)
      swift_once(&qword_10016A6D0, sub_1000C0D54);
    v28 = v28 * (1.0 / *(double *)&qword_1001723C8);
  }
  LOBYTE(v72) = v22;
  v73 = v23;
  State.wrappedValue.getter(&v64);
  v29 = v64;
  sub_10009D424(v25, v26, v27);
  v30 = sub_1000CC644(v25, v26, v27);
  v31 = sub_10009D4D4(v25, v26, v27);
  if ((v29 & 1) == 0)
  {
    if (qword_10016A6D0 != -1)
      v31 = swift_once(&qword_10016A6D0, sub_1000C0D54);
    v30 = v30 * *(double *)&qword_1001723C8 + 30.0;
  }
  v32 = static Alignment.center.getter(v31);
  v34 = _FrameLayout.init(width:height:alignment:)(&v72, *(_QWORD *)&v28, 0, *(_QWORD *)&v30, 0, v32, v33);
  v35 = v72;
  v36 = v74;
  v37 = v76;
  v38 = v77;
  if ((v49 & 1) != 0)
    goto LABEL_14;
  if (v48 == 8 || v48 == 24)
  {
    v39 = 0xBFF921FB54442D18;
    goto LABEL_16;
  }
  if (v48 != 16)
LABEL_14:
    v39 = 0;
  else
    v39 = 0x3FF921FB54442D18;
LABEL_16:
  v40 = v52;
  v62 = v52;
  LOBYTE(v64) = v73;
  v63 = v75;
  v41 = static UnitPoint.center.getter(v34);
  v42 = v64;
  v43 = v63;
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v19;
  *(_QWORD *)(a2 + 16) = v20;
  v44 = v59;
  *(_QWORD *)(a2 + 24) = v60;
  *(_QWORD *)(a2 + 32) = v44;
  v45 = v57;
  *(_QWORD *)(a2 + 40) = v58;
  *(_QWORD *)(a2 + 48) = v45;
  *(_BYTE *)(a2 + 56) = v56;
  *(_QWORD *)(a2 + 64) = v55;
  *(_OWORD *)(a2 + 72) = v61;
  v46 = v53;
  *(_QWORD *)(a2 + 88) = v54;
  *(_QWORD *)(a2 + 96) = v46;
  *(_BYTE *)(a2 + 104) = v40;
  *(_QWORD *)(a2 + 112) = v51;
  *(_BYTE *)(a2 + 120) = v50;
  *(_QWORD *)(a2 + 128) = v35;
  *(_BYTE *)(a2 + 136) = v42;
  *(_QWORD *)(a2 + 144) = v36;
  *(_BYTE *)(a2 + 152) = v43;
  *(_QWORD *)(a2 + 160) = v37;
  *(_QWORD *)(a2 + 168) = v38;
  *(_QWORD *)(a2 + 176) = v39;
  *(double *)(a2 + 184) = v41;
  *(_QWORD *)(a2 + 192) = v47;
}

uint64_t sub_10009CB4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];
  uint64_t v21;

  v4 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100035CA4(&qword_10016D0B8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10009DC4C(a1, (uint64_t)v7);
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_10013A388, v13 + v6, v12 | 7);
  sub_10009DC94((uint64_t)v7, v14 + v13);
  v21 = a1;
  v15 = sub_100035CA4(&qword_10016D0C0);
  v16 = sub_10009DEFC();
  v17 = Button.init(action:label:)(sub_10009DEAC, v14, sub_10009DEF4, v20, v15, v16);
  LOBYTE(v15) = static Edge.Set.all.getter(v17);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 16))(a2, v11, v8);
  v18 = a2 + *(int *)(sub_100035CA4(&qword_10016D130) + 36);
  *(_BYTE *)v18 = v15;
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_BYTE *)(v18 + 40) = 1;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10009CCD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  id v7;
  _QWORD v9[4];

  v2 = type metadata accessor for DismissAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[3] = type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  v6 = sub_10009DD34(v9);
  sub_10009DC4C(a1, (uint64_t)v6);
  sub_10009B408((uint64_t)v9, 2);
  sub_10003CEEC(v9);
  v7 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  objc_msgSend(v7, "showSceneStatusBar");
  swift_unknownObjectRelease(v7);
  sub_1000CC400((uint64_t)v5);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10009CDD4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  v20 = Image.init(systemName:)(0xD000000000000022, 0x8000000100117BC0);
  v19 = static Font.title2.getter();
  KeyPath = swift_getKeyPath(&unk_10010DE28);
  v4 = static Color.white.getter();
  v5 = swift_getKeyPath(&unk_10010DE58);
  v6 = *a1;
  v7 = static Alignment.center.getter();
  v9 = _FrameLayout.init(width:height:alignment:)(&v21, v6, 0, v6, 0, v7, v8);
  v10 = v21;
  v11 = v22;
  v12 = v23;
  v13 = v24;
  v14 = v25;
  v15 = v26;
  v16 = static Color.black.getter(v9);
  result = static Edge.Set.all.getter();
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = KeyPath;
  *(_QWORD *)(a2 + 16) = v19;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v10;
  *(_BYTE *)(a2 + 48) = v11;
  *(_QWORD *)(a2 + 56) = v12;
  *(_BYTE *)(a2 + 64) = v13;
  *(_QWORD *)(a2 + 72) = v14;
  *(_QWORD *)(a2 + 80) = v15;
  *(_QWORD *)(a2 + 88) = v16;
  *(_BYTE *)(a2 + 96) = result;
  return result;
}

uint64_t sub_10009CEE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  void *ObjCClassFromMetadata;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _BYTE v19[32];
  _QWORD v20[4];

  v2 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  __chkstk_darwin(v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100037118(0, &qword_10016D0B0, UIPageControl_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v5);
  v7 = objc_msgSend(ObjCClassFromMetadata, "appearance");
  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "whiteColor");
  objc_msgSend(v7, "setCurrentPageIndicatorTintColor:", v9);

  v10 = objc_msgSend(ObjCClassFromMetadata, "appearance");
  v11 = objc_msgSend(v8, "whiteColor");
  v12 = objc_msgSend(v11, "colorWithAlphaComponent:", 0.5);

  objc_msgSend(v10, "setPageIndicatorTintColor:", v12);
  v20[3] = v2;
  v13 = sub_10009DD34(v20);
  sub_10009DC4C(a1, (uint64_t)v13);
  sub_1000370B0((uint64_t)v20, (uint64_t)v19);
  v14 = swift_dynamicCast(v4, v19, (char *)&type metadata for Any + 8, v2, 6);
  if ((_DWORD)v14)
  {
    sub_10009BDE4((uint64_t)v4);
    qword_10016CDC0 = 30;
  }
  else
  {
    v15 = static os_log_type_t.error.getter(v14);
    v16 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
    v17 = (void *)static OS_os_log.default.getter(v16);
    os_log(_:dso:log:_:_:)(v15, &_mh_execute_header, v17, "Unknown caller is requesting an orientation lock, ignoring", 58, 2, &_swiftEmptyArrayStorage);

  }
  return sub_10003CEEC(v20);
}

void sub_10009D10C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  DARootViewController *v9;
  void *v10;
  SEL v11;
  id v12;
  int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _BYTE v25[9];
  uint64_t v26;

  v3 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  if (*(_BYTE *)(a2 + *(int *)(v3 + 40) + 8) == 1)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v6 = objc_msgSend(v5, "connectedScenes");

    v7 = sub_100037118(0, &qword_10016AF00, UIScene_ptr);
    v8 = sub_1000407A8();
    v9 = (DARootViewController *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v6, v7, v8);

    sub_10009BEFC((uint64_t)v9);
    v24 = v10;
    swift_bridgeObjectRelease(v9, v11, v12, v13, v14, v15, v16, v17);
    if (v24)
    {
      v18 = objc_opt_self(UIWindowScene);
      v19 = (void *)swift_dynamicCastObjCClass(v24, v18);
      if (v19)
      {
        v20 = sub_10009DD24((uint64_t)objc_msgSend(v19, "interfaceOrientation"));
        v21 = a2 + *(int *)(v4 + 28);
        v22 = *(_QWORD *)(v21 + 8);
        v25[1] = *(_BYTE *)v21;
        v26 = v22;
        v25[0] = v20;
        swift_retain(v22);
        v23 = sub_100035CA4(&qword_10016D0A8);
        State.wrappedValue.setter(v25, v23);
        swift_release(v22);

      }
      else
      {

      }
    }
  }
}

uint64_t sub_10009D294()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t *sub_10009D2BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = sub_100035CA4(&qword_10016CFE0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = 1;
    }
    else
    {
      v14 = *v9;
      *v8 = *v9;
      swift_retain(v14);
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v12);
    v15 = a3[6];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)v17;
    v19 = *((_QWORD *)v17 + 1);
    v20 = v17[16];
    sub_10009D424(*(_QWORD *)v17, v19, v20);
    *(_QWORD *)v16 = v18;
    *((_QWORD *)v16 + 1) = v19;
    v16[16] = v20;
    v21 = a3[7];
    v22 = a3[8];
    v23 = (char *)v4 + v21;
    v24 = (char *)a2 + v21;
    *v23 = *v24;
    v25 = *((_QWORD *)v24 + 1);
    *((_QWORD *)v23 + 1) = v25;
    v26 = *(uint64_t *)((char *)a2 + v22);
    *(uint64_t *)((char *)v4 + v22) = v26;
    v27 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v28[8] = v29[8];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    swift_retain(v25);
    swift_bridgeObjectRetain(v26);
  }
  return v4;
}

uint64_t sub_10009D424(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_retain(result);
  return result;
}

void sub_10009D430(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = sub_100035CA4(&qword_10016CFE0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  sub_10009D4D4(*(_QWORD *)(a1 + a2[6]), *(_QWORD *)(a1 + a2[6] + 8), *(_BYTE *)(a1 + a2[6] + 16));
  swift_release(*(_QWORD *)(a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(DARootViewController **)(a1 + a2[8]), v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_10009D4D4(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_release(result);
  return result;
}

_QWORD *sub_10009D4E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = sub_100035CA4(&qword_10016CFE0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    v12 = *v8;
    *v7 = *v8;
    swift_retain(v12);
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = *((_QWORD *)v15 + 1);
  v18 = v15[16];
  sub_10009D424(*(_QWORD *)v15, v17, v18);
  *(_QWORD *)v14 = v16;
  *((_QWORD *)v14 + 1) = v17;
  v14[16] = v18;
  v19 = a3[7];
  v20 = a3[8];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *v21 = *v22;
  v23 = *((_QWORD *)v22 + 1);
  *((_QWORD *)v21 + 1) = v23;
  v24 = *(_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v24;
  v25 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v26[8] = v27[8];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  swift_retain(v23);
  swift_bridgeObjectRetain(v24);
  return a1;
}

_QWORD *sub_10009D61C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  DARootViewController *v29;
  SEL v30;
  id v31;
  int v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10009D790((uint64_t)a1 + v6);
    v9 = sub_100035CA4(&qword_10016CFE0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      v12 = *v8;
      *v7 = *v8;
      swift_retain(v12);
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = *((_QWORD *)v15 + 1);
  v18 = v15[16];
  sub_10009D424(*(_QWORD *)v15, v17, v18);
  v19 = *(_QWORD *)v14;
  v20 = *((_QWORD *)v14 + 1);
  v21 = v14[16];
  *(_QWORD *)v14 = v16;
  *((_QWORD *)v14 + 1) = v17;
  v14[16] = v18;
  sub_10009D4D4(v19, v20, v21);
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *v23 = *v24;
  v25 = *((_QWORD *)v23 + 1);
  v26 = *((_QWORD *)v24 + 1);
  *((_QWORD *)v23 + 1) = v26;
  swift_retain(v26);
  swift_release(v25);
  v27 = a3[8];
  v28 = *(_QWORD *)((char *)a2 + v27);
  v29 = *(DARootViewController **)((char *)a1 + v27);
  *(_QWORD *)((char *)a1 + v27) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29, v30, v31, v32, v33, v34, v35, v36);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v37 = a3[10];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *(_QWORD *)v39;
  v38[8] = v39[8];
  *(_QWORD *)v38 = v40;
  return a1;
}

uint64_t sub_10009D790(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100035CA4(&qword_10016CFE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_10009D7D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100035CA4(&qword_10016CFE0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v15 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  v16 = a3[10];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  return a1;
}

_QWORD *sub_10009D8DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  DARootViewController *v23;
  SEL v24;
  id v25;
  int v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  char *v32;
  char *v33;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_10009D790((uint64_t)a1 + v6);
    v9 = sub_100035CA4(&qword_10016CFE0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = v13[16];
  v15 = *(_QWORD *)v12;
  v16 = *((_QWORD *)v12 + 1);
  v17 = v12[16];
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v12[16] = v14;
  sub_10009D4D4(v15, v16, v17);
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *v19 = *v20;
  v21 = *((_QWORD *)v19 + 1);
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_release(v21);
  v22 = a3[8];
  v23 = *(DARootViewController **)((char *)a1 + v22);
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
  v31 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  return a1;
}

uint64_t sub_10009DA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009DA34);
}

uint64_t sub_10009DA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100035CA4(&qword_10016CFE8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10009DAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009DAC4);
}

uint64_t sub_10009DAC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100035CA4(&qword_10016CFE8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

void sub_10009DB44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_10009DBE8(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10010DD90;
    v4[3] = &unk_10010DDA8;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[6] = &unk_10010DDC0;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

void sub_10009DBE8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10016D058)
  {
    v2 = type metadata accessor for DismissAction(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10016D058);
  }
}

uint64_t sub_10009DC3C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10011F328, 1);
}

uint64_t sub_10009DC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009DC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009DCD8()
{
  return sub_10009DEB8(sub_10009CEE4);
}

void sub_10009DCE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0) - 8)
                          + 80);
  sub_10009D10C(a1, v1 + ((v3 + 16) & ~v3));
}

BOOL sub_10009DD24(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

_QWORD *sub_10009DD34(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_10009DD74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0) - 8)
                          + 80);
  return sub_10009CB4C(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_10009DDC4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  SEL v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v1 = (int *)type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = (_QWORD *)(v0 + v4 + v1[5]);
  v8 = sub_100035CA4(&qword_10016CFE0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  sub_10009D4D4(*(_QWORD *)(v6 + v1[6]), *(_QWORD *)(v6 + v1[6] + 8), *(_BYTE *)(v6 + v1[6] + 16));
  swift_release(*(_QWORD *)(v6 + v1[7] + 8));
  swift_bridgeObjectRelease(*(DARootViewController **)(v6 + v1[8]), v10, v11, v12, v13, v14, v15, v16);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10009DEAC()
{
  return sub_10009DEB8(sub_10009CCD0);
}

uint64_t sub_10009DEB8(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SelfServiceInstructionsFullScreenViewerView(0) - 8)
                          + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_10009DEF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10009CDD4(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_10009DEFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016D0C8;
  if (!qword_10016D0C8)
  {
    v1 = sub_100035D30(&qword_10016D0C0);
    sub_10009DF80();
    sub_1000489C4(&qword_10016D120, &qword_10016D128, (uint64_t)&protocol conformance descriptor for _MaskEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016D0C8);
  }
  return result;
}

unint64_t sub_10009DF80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016D0D0;
  if (!qword_10016D0D0)
  {
    v1 = sub_100035D30(&qword_10016D0D8);
    sub_10009E004();
    sub_1000489C4(&qword_10016CA90, &qword_10016CA98, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016D0D0);
  }
  return result;
}

unint64_t sub_10009E004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016D0E0;
  if (!qword_10016D0E0)
  {
    v1 = sub_100035D30(&qword_10016D0E8);
    sub_10009E070();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016D0E0);
  }
  return result;
}

unint64_t sub_10009E070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016D0F0;
  if (!qword_10016D0F0)
  {
    v1 = sub_100035D30(&qword_10016D0F8);
    sub_10009E0F4();
    sub_1000489C4(&qword_10016C3F8, &qword_10016C400, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016D0F0);
  }
  return result;
}

unint64_t sub_10009E0F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016D100;
  if (!qword_10016D100)
  {
    v1 = sub_100035D30(&qword_10016D108);
    sub_1000489C4(&qword_10016D110, &qword_10016D118, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10016D100);
  }
  return result;
}

uint64_t sub_10009E178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10009E1A0(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_10009E1D0()
{
  return sub_1000489C4(&qword_10016D138, &qword_10016D0A0, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
}

id sub_10009E1FC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  NSString v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  _QWORD v25[5];
  _QWORD v26[5];
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  _BYTE v32[8];
  uint64_t v33;

  sub_10009E56C(a1, (uint64_t)v26);
  v4 = v26[1];
  v5 = (void *)v26[2];
  v6 = (void *)v26[3];
  v7 = (void *)v26[4];
  sub_10009E56C(a1, (uint64_t)v32);
  if (v33)
  {
    if (v7)
      goto LABEL_3;
LABEL_10:
    v16 = (void *)objc_opt_self(UIImage);
    sub_10009E694(a1);
    v17 = String._bridgeToObjectiveC()();
    v18 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v16, "_systemImageNamed:fallback:", v17, v18);

    if (!v15)
    {

      swift_bridgeObjectRelease(v4);
      return v15;
    }
    v11 = objc_msgSend(v15, "imageWithTintColor:", v6);

    if (v11)
      goto LABEL_5;
    goto LABEL_12;
  }
  if (qword_10016A6B0 != -1)
    swift_once(&qword_10016A6B0, sub_10009E678);
  sub_1000E0CE0(a2, qword_1001723A8, v25);
  sub_10009E56C((uint64_t)v25, (uint64_t)&v27);
  v4 = v28;
  if (!v28)
  {
    v19 = sub_100035CA4((uint64_t *)&unk_10016BE40);
    v20 = swift_allocObject(v19, 72, 7);
    *(_OWORD *)(v20 + 16) = xmmword_10010BE30;
    if (qword_10016A678 != -1)
      swift_once(&qword_10016A678, sub_10008BF34);
    v21 = (void *)qword_100172378;
    *(_QWORD *)(v20 + 56) = sub_10008C0F8();
    *(_QWORD *)(v20 + 64) = sub_100046FF0();
    *(_QWORD *)(v20 + 32) = v21;
    v22 = (void *)static OS_os_log.default.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    os_log(_:dso:log:type:_:)("Failed to load glyph attributes", 31, 2, &_mh_execute_header, v22, v23, v20);
    swift_bridgeObjectRelease(v20);

    return 0;
  }
  v5 = v29;
  v6 = v30;
  v7 = v31;
  if (!v31)
    goto LABEL_10;
LABEL_3:
  swift_bridgeObjectRetain(v4);
  v8 = v7;
  sub_10009E694(a1);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

  if (!v10)
  {

    swift_bridgeObjectRelease(v4);
    return 0;
  }
  v11 = objc_msgSend(v10, "imageWithTintColor:renderingMode:", v8, 1);

  if (!v11)
  {
LABEL_12:

    swift_bridgeObjectRelease(v4);
    return 0;
  }
LABEL_5:
  v12 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v13 = v11;
  v14 = objc_msgSend(v12, "configurationWithFont:", v5);
  v15 = objc_msgSend(v13, "imageWithConfiguration:", v14);

  swift_bridgeObjectRelease(v4);
  return v15;
}

uint64_t sub_10009E56C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4(&qword_10016D140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_10009E5B4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.478431373, 1.0, 1.0);
  qword_100172390 = (uint64_t)result;
  return result;
}

id sub_10009E5F8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.607843137, 1.0);
  qword_100172398 = (uint64_t)result;
  return result;
}

id sub_10009E634()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 1.0, 0.584313725, 0.0, 1.0);
  qword_1001723A0 = (uint64_t)result;
  return result;
}

void sub_10009E678()
{
  sub_10009E70C();
}

uint64_t sub_10009E694(uint64_t a1)
{
  sub_10009E6C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32));
  return a1;
}

id sub_10009E6C4(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v7;
  id v8;
  id result;

  if (a2)
  {
    v7 = a5;
    swift_bridgeObjectRetain(a2);
    v8 = a3;
    return a4;
  }
  return result;
}

void sub_10009E70C()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  objc_msgSend(v0, "userInterfaceLayoutDirection");

  JUMPOUT(0x10009E8CCLL);
}

void sub_10009F4F0(_QWORD *a1@<X8>)
{
  *a1 = &off_100133C00;
}

void destroy for Glyph.Attributes(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

_QWORD *initializeWithCopy for Glyph.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v6 = (void *)a2[4];
  a1[4] = v6;
  swift_bridgeObjectRetain(v3);
  v7 = v4;
  v8 = v5;
  v9 = v6;
  return a1;
}

_QWORD *assignWithCopy for Glyph.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = (void *)a2[3];
  v10 = (void *)a1[3];
  a1[3] = v9;
  v11 = v9;

  v12 = (void *)a1[4];
  v13 = (void *)a2[4];
  a1[4] = v13;
  v14 = v13;

  return a1;
}

uint64_t assignWithTake for Glyph.Attributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for Glyph.Attributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Glyph.Attributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Glyph.Attributes()
{
  return &type metadata for Glyph.Attributes;
}

uint64_t storeEnumTagSinglePayload for Glyph(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_10009F758 + 4 * byte_10010DE9D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_10009F78C + 4 * byte_10010DE98[v4]))();
}

uint64_t sub_10009F78C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009F794(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10009F79CLL);
  return result;
}

uint64_t sub_10009F7A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10009F7B0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_10009F7B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009F7BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Glyph()
{
  return &type metadata for Glyph;
}

unint64_t sub_10009F7DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016D148;
  if (!qword_10016D148)
  {
    v1 = sub_100035D30(&qword_10016D150);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10016D148);
  }
  return result;
}

unint64_t sub_10009F82C()
{
  unint64_t result;

  result = qword_10016D158;
  if (!qword_10016D158)
  {
    result = swift_getWitnessTable(&unk_10010DF38, &type metadata for Glyph);
    atomic_store(result, (unint64_t *)&qword_10016D158);
  }
  return result;
}

uint64_t sub_10009F870(int a1)
{
  int v1;
  uint64_t result;

  v1 = a1 - 1;
  result = 1684107369;
  switch(v1)
  {
    case 0:
      result = 0x656E6F687069;
      break;
    case 1:
      result = 1685024873;
      break;
    case 2:
      return result;
    case 3:
      result = 0x7674656C707061;
      break;
    case 5:
      result = 0x6863746177;
      break;
    case 10:
      result = 0x6E6F69736976;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

id sub_10009F914()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView);
  objc_msgSend(v1, "hideCheck");
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  return objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
}

id sub_10009F9B8()
{
  char *v0;

  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView]);
  return objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView]);
}

void sub_10009FA00()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  SEL v32;
  id v33;
  int v34;
  id v35;
  id v36;
  id v37;
  id v38;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
  v4 = swift_allocObject(v3, 96, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10010CED0;
  v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView];
  v6 = objc_msgSend(v5, "centerXAnchor");
  v7 = objc_msgSend(v1, "centerXAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "centerYAnchor");
  v10 = objc_msgSend(v1, "centerYAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, 1.0);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v5, "widthAnchor");
  v13 = objc_msgSend(v1, "widthAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, -12.0);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(v5, "heightAnchor");
  v16 = objc_msgSend(v1, "heightAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -12.0);

  *(_QWORD *)(v4 + 56) = v17;
  v18 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView];
  v19 = objc_msgSend(v18, "topAnchor");
  v20 = objc_msgSend(v1, "topAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v4 + 64) = v21;
  v22 = objc_msgSend(v18, "bottomAnchor");
  v23 = objc_msgSend(v1, "bottomAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v4 + 72) = v24;
  v25 = objc_msgSend(v18, "leadingAnchor");
  v26 = objc_msgSend(v1, "leadingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v4 + 80) = v27;
  v28 = objc_msgSend(v18, "trailingAnchor");
  v29 = objc_msgSend(v1, "trailingAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v4 + 88) = v30;
  specialized Array._endMutation()(v31);
  sub_100053B64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((DARootViewController *)v4, v32, v33, v34, v35, v36, v37, v38);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_10009FDD0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  objc_super v16;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_yOffset] = 0x3FF0000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_padding] = 0xC028000000000000;
  v9 = OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v4;
  v12 = objc_msgSend(v10, "systemBackgroundColor");
  v13 = objc_msgSend(objc_allocWithZone((Class)DACheckAnimationView), "initWithColor:lineWidth:scale:", v12, 2.5, 0.33);

  *(_QWORD *)&v4[v9] = v13;
  v14 = OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView;
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for CheckmarkView();
  return objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
}

id sub_10009FF20(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_yOffset] = 0x3FF0000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_padding] = 0xC028000000000000;
  v3 = OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v1;
  v6 = objc_msgSend(v4, "systemBackgroundColor");
  v7 = objc_msgSend(objc_allocWithZone((Class)DACheckAnimationView), "initWithColor:lineWidth:scale:", v6, 2.5, 0.33);

  *(_QWORD *)&v1[v3] = v7;
  v8 = OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for CheckmarkView();
  v9 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);

  return v9;
}

void sub_1000A0058()
{
  uint64_t v0;

}

id sub_1000A0084()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CheckmarkView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CheckmarkView()
{
  return objc_opt_self(_TtC11Diagnostics13CheckmarkView);
}

id sub_1000A01D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseTableView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseTableView()
{
  return objc_opt_self(_TtC11Diagnostics13BaseTableView);
}

id sub_1000A0228()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  sub_10008642C();
  v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody] = 0;
  v1 = &v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate];
  *v1 = v0;
  v1[1] = &off_10013A5A8;
  v3 = v0;
  swift_unknownObjectRelease(v2);
  v4 = OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView;
  v5 = *(void **)&v3[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView];
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v5;
  v8 = objc_msgSend(v6, "clearColor");
  objc_msgSend(v7, "setBackgroundColor:", v8);

  objc_msgSend(*(id *)&v3[v4], "setEstimatedRowHeight:", 60.0);
  v9 = *(void **)&v3[v4];
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v9;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.1);
  objc_msgSend(v11, "setTableHeaderView:", v12);

  objc_msgSend(*(id *)&v3[v4], "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(*(id *)&v3[v4], "setDelegate:", v3);
  return objc_msgSend(*(id *)&v3[v4], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
}

id sub_1000A039C()
{
  return sub_1000A1B1C();
}

void sub_1000A03A4()
{
  char *v0;
  id v1;
  id v2;

  sub_100086ACC();
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView]);

  }
  else
  {
    __break(1u);
  }
}

void sub_1000A0400()
{
  _BYTE *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  void *v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  SEL v100;
  id v101;
  int v102;
  id v103;
  id v104;
  id v105;
  id v106;
  void *v107;
  Class isa;

  sub_100086C20();
  if (v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody] == 1)
  {
    v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView], "bottomAnchor");
    goto LABEL_5;
  }
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "safeAreaLayoutGuide");

    v1 = objc_msgSend(v4, "topAnchor");
LABEL_5:
    v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel];
    v6 = objc_msgSend(v0, "view");
    if (v6)
    {
      v7 = v6;
      v107 = v1;
      objc_msgSend(v6, "center");
      v9 = v8;

      objc_msgSend(v5, "center");
      objc_msgSend(v5, "setCenter:", v9);
      v10 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
      v11 = objc_msgSend(v0, "view");
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v11, "center");
        v14 = v13;

        objc_msgSend(v10, "center");
        objc_msgSend(v10, "setCenter:", v14);
        v15 = sub_100035CA4((uint64_t *)&unk_10016ACE0);
        v16 = swift_allocObject(v15, 152, 7);
        *(_OWORD *)(v16 + 16) = xmmword_10010DFC0;
        v17 = sub_1000A0EA4();
        v18 = objc_msgSend(v17, "contentView");

        v19 = objc_msgSend(v18, "topAnchor");
        v20 = sub_1000A0EA4();
        v21 = objc_msgSend(v20, "topAnchor");

        v22 = objc_msgSend(v19, "constraintEqualToAnchor:", v21);
        *(_QWORD *)(v16 + 32) = v22;
        v23 = sub_1000A0EA4();
        v24 = objc_msgSend(v23, "contentView");

        v25 = objc_msgSend(v24, "leadingAnchor");
        v26 = sub_1000A0EA4();
        v27 = objc_msgSend(v26, "leadingAnchor");

        v28 = objc_msgSend(v25, "constraintEqualToAnchor:", v27);
        *(_QWORD *)(v16 + 40) = v28;
        v29 = sub_1000A0EA4();
        v30 = objc_msgSend(v29, "contentView");

        v31 = objc_msgSend(v30, "trailingAnchor");
        v32 = sub_1000A0EA4();
        v33 = objc_msgSend(v32, "trailingAnchor");

        v34 = objc_msgSend(v31, "constraintEqualToAnchor:", v33);
        *(_QWORD *)(v16 + 48) = v34;
        v35 = sub_1000A0EA4();
        v36 = objc_msgSend(v35, "contentView");

        v37 = objc_msgSend(v36, "bottomAnchor");
        v38 = sub_1000A0EA4();
        v39 = objc_msgSend(v38, "bottomAnchor");

        v40 = objc_msgSend(v37, "constraintEqualToAnchor:", v39);
        *(_QWORD *)(v16 + 56) = v40;
        v41 = objc_msgSend(v5, "topAnchor");
        v42 = sub_1000A0EA4();
        v43 = objc_msgSend(v42, "contentView");

        v44 = objc_msgSend(v43, "safeAreaLayoutGuide");
        v45 = objc_msgSend(v44, "topAnchor");

        v46 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v45, 10.0);
        *(_QWORD *)(v16 + 64) = v46;
        v47 = objc_msgSend(v5, "leadingAnchor");
        v48 = sub_1000A0EA4();
        v49 = objc_msgSend(v48, "contentView");

        v50 = objc_msgSend(v49, "safeAreaLayoutGuide");
        v51 = objc_msgSend(v50, "leadingAnchor");

        v52 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v51, 20.0);
        *(_QWORD *)(v16 + 72) = v52;
        v53 = objc_msgSend(v5, "trailingAnchor");
        v54 = sub_1000A0EA4();
        v55 = objc_msgSend(v54, "contentView");

        v56 = objc_msgSend(v55, "safeAreaLayoutGuide");
        v57 = objc_msgSend(v56, "trailingAnchor");

        v58 = objc_msgSend(v53, "constraintEqualToAnchor:constant:", v57, -20.0);
        *(_QWORD *)(v16 + 80) = v58;
        v59 = objc_msgSend(v10, "topAnchor");
        v60 = objc_msgSend(v5, "bottomAnchor");
        v61 = objc_msgSend(v59, "constraintEqualToAnchor:constant:", v60, 15.0);

        *(_QWORD *)(v16 + 88) = v61;
        v62 = objc_msgSend(v10, "leadingAnchor");
        v63 = sub_1000A0EA4();
        v64 = objc_msgSend(v63, "contentView");

        v65 = objc_msgSend(v64, "safeAreaLayoutGuide");
        v66 = objc_msgSend(v65, "leadingAnchor");

        v67 = objc_msgSend(v62, "constraintEqualToAnchor:constant:", v66, 20.0);
        *(_QWORD *)(v16 + 96) = v67;
        v68 = objc_msgSend(v10, "trailingAnchor");
        v69 = sub_1000A0EA4();
        v70 = objc_msgSend(v69, "contentView");

        v71 = objc_msgSend(v70, "safeAreaLayoutGuide");
        v72 = objc_msgSend(v71, "trailingAnchor");

        v73 = objc_msgSend(v68, "constraintEqualToAnchor:constant:", v72, -20.0);
        *(_QWORD *)(v16 + 104) = v73;
        v74 = objc_msgSend(v10, "bottomAnchor");
        v75 = sub_1000A0EA4();
        v76 = objc_msgSend(v75, "contentView");

        v77 = objc_msgSend(v76, "safeAreaLayoutGuide");
        v78 = objc_msgSend(v77, "bottomAnchor");

        v79 = objc_msgSend(v74, "constraintEqualToAnchor:", v78);
        *(_QWORD *)(v16 + 112) = v79;
        v80 = OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView;
        v81 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView], "topAnchor");
        v82 = objc_msgSend(v81, "constraintEqualToAnchor:", v107);

        *(_QWORD *)(v16 + 120) = v82;
        v83 = objc_msgSend(*(id *)&v0[v80], "leadingAnchor");
        v84 = objc_msgSend(v0, "view");
        if (v84)
        {
          v85 = v84;
          v86 = objc_msgSend(v84, "safeAreaLayoutGuide");

          v87 = objc_msgSend(v86, "leadingAnchor");
          v88 = objc_msgSend(v83, "constraintEqualToAnchor:", v87);

          *(_QWORD *)(v16 + 128) = v88;
          v89 = objc_msgSend(*(id *)&v0[v80], "trailingAnchor");
          v90 = objc_msgSend(v0, "view");
          if (v90)
          {
            v91 = v90;
            v92 = (void *)objc_opt_self(NSLayoutConstraint);
            v93 = objc_msgSend(v91, "safeAreaLayoutGuide");

            v94 = objc_msgSend(v93, "trailingAnchor");
            v95 = objc_msgSend(v89, "constraintEqualToAnchor:", v94);

            *(_QWORD *)(v16 + 136) = v95;
            v96 = objc_msgSend(*(id *)&v0[v80], "bottomAnchor");
            v97 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton], "topAnchor");
            v98 = objc_msgSend(v96, "constraintEqualToAnchor:constant:", v97, -20.0);

            *(_QWORD *)(v16 + 144) = v98;
            specialized Array._endMutation()(v99);
            sub_100053B64();
            isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease((DARootViewController *)v16, v100, v101, v102, v103, v104, v105, v106);
            objc_msgSend(v92, "activateConstraints:", isa);

            return;
          }
          goto LABEL_13;
        }
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_14:
  __break(1u);
}

id sub_1000A0EA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell);
  }
  else
  {
    v4 = sub_1000A1204(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1000A0FC4()
{
  return 0;
}

uint64_t sub_1000A0FCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = IndexPath.section.getter(v5);
  if (result)
  {
    v9 = IndexPath.row.getter();
    result = IndexPath.section.getter(v9);
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else
    {
      result = IndexPath.init(row:section:)(v9, result - 1);
      v11 = v1 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate;
      v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate);
      if (v12)
      {
        v13 = *(_QWORD *)(v11 + 8);
        ObjectType = swift_getObjectType(v12, v10);
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v13 + 24))(a1, v7, ObjectType, v13);
        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
    }
    __break(1u);
  }
  return result;
}

id sub_1000A1204(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = objc_msgSend(v4, "contentView");
  objc_msgSend(v6, "addSubview:", *(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel));

  v7 = objc_msgSend(v4, "contentView");
  objc_msgSend(v7, "addSubview:", *(_QWORD *)(a1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView));

  objc_msgSend(v4, "setSelectionStyle:", 0);
  v8 = objc_msgSend(v4, "contentView");
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  return v4;
}

char *sub_1000A1350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = IndexPath.section.getter(v6);
  if (!v9)
    return (char *)sub_1000A0EA4();
  v10 = IndexPath.row.getter(v9);
  result = (char *)IndexPath.section.getter(v10);
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    result = (char *)IndexPath.init(row:section:)(v10, result - 1);
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate);
    if (v13)
    {
      v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate + 8);
      ObjectType = swift_getObjectType(v13, v12);
      v16 = *(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v14 + 8);
      swift_unknownObjectRetain(v13);
      v17 = v16(a1, v8, ObjectType, v14);
      swift_unknownObjectRelease(v13);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return (char *)v17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A1530(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Class isa;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(void *, char *, uint64_t, uint64_t);
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectRowAtIndexPath:animated:", isa, 1);

  result = IndexPath.section.getter(v9);
  if (result)
  {
    v11 = IndexPath.row.getter();
    result = IndexPath.section.getter(v11);
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else
    {
      result = IndexPath.init(row:section:)(v11, result - 1);
      v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate);
      if (v13)
      {
        v14 = *(_QWORD *)(v2
                        + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate
                        + 8);
        ObjectType = swift_getObjectType(v13, v12);
        v16 = *(void (**)(void *, char *, uint64_t, uint64_t))(v14 + 32);
        swift_unknownObjectRetain(v13);
        v16(a1, v7, ObjectType, v14);
        swift_unknownObjectRelease(v13);
        return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
    }
    __break(1u);
  }
  return result;
}

id sub_1000A17A0()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  char *v4;
  objc_super v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_cellHeight] = 0x404E000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_fontSizeTableCell] = 0x4031000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_fontSizeTableCellDetail] = 0x402A000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_headerSection] = 0;
  v1 = OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView;
  v2 = objc_allocWithZone((Class)UITableView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "initWithFrame:style:", 1, 0.0, 0.0, 0.0, 0.0);
  v4 = &v3[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell] = 0;

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for ConsentNoticeTableViewController();
  return objc_msgSendSuper2(&v6, "init");
}

id sub_1000A18A4(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_cellHeight] = 0x404E000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_fontSizeTableCell] = 0x4031000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_fontSizeTableCellDetail] = 0x402A000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_headerSection] = 0;
  v3 = OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView;
  v4 = objc_allocWithZone((Class)UITableView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithFrame:style:", 1, 0.0, 0.0, 0.0, 0.0);
  v6 = &v5[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell] = 0;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for ConsentNoticeTableViewController();
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

void sub_1000A19C8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate));

}

id sub_1000A1A04()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConsentNoticeTableViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ConsentNoticeTableViewController()
{
  return objc_opt_self(_TtC11Diagnostics32ConsentNoticeTableViewController);
}

uint64_t sub_1000A1A9C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2B8))();
}

uint64_t sub_1000A1AB8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x288))();
}

CGFloat sub_1000A1AD4()
{
  return UITableViewAutomaticDimension;
}

uint64_t sub_1000A1AE4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2C0))();
}

uint64_t sub_1000A1B00()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x298))();
}

id sub_1000A1B1C()
{
  id v0;
  NSString v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;

  v0 = objc_allocWithZone((Class)UITableViewCell);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithStyle:reuseIdentifier:", 3, v1);

  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = (void *)objc_opt_self(UIFontMetrics);
  v7 = objc_msgSend(v6, "defaultMetrics");
  v8 = (void *)objc_opt_self(UIFont);
  v9 = objc_msgSend(v8, "systemFontOfSize:weight:", 17.0, UIFontWeightBold);
  v10 = objc_msgSend(v7, "scaledFontForFont:", v9);

  v11 = objc_msgSend(v4, "textLabel");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "setFont:", v10);

  }
  v13 = objc_msgSend(v6, "defaultMetrics");
  v14 = objc_msgSend(v8, "systemFontOfSize:", 13.0);
  v15 = objc_msgSend(v13, "scaledFontForFont:", v14);

  v16 = objc_msgSend(v4, "detailTextLabel");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "setFont:", v15);

  }
  v18 = objc_msgSend(v4, "detailTextLabel");
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v3, "secondaryLabelColor");
    objc_msgSend(v19, "setTextColor:", v20);

  }
  return v4;
}

_QWORD *sub_1000A1DA0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v14 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      v12 = v5;
      swift_errorRetain(v5);
      swift_errorRetain(v5);
      v6 = sub_100035CA4(&qword_10016D600);
      v7 = sub_100037118(0, (unint64_t *)&unk_10016D870, NSError_ptr);
      swift_dynamicCast(&v13, &v12, v6, v7, 7);
      v8 = v13;
      v9 = swift_errorRelease(v5);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v10 = v14[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
      v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
      specialized ContiguousArray._endMutation()(v11);
      --v2;
    }
    while (v2);
    return v14;
  }
  return result;
}

DARootViewController *sub_1000A1EB0(uint64_t a1)
{
  int64_t v1;
  DARootViewController *v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  _OWORD v10[2];
  DARootViewController *v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = &_swiftEmptyArrayStorage;
  if (v1)
  {
    v11 = &_swiftEmptyArrayStorage;
    sub_1000572D8(0, v1, 0);
    v4 = (uint64_t *)(a1 + 32);
    v2 = &_swiftEmptyArrayStorage;
    do
    {
      v9 = *v4;
      v5 = sub_100035CA4(&qword_10016D5E8);
      swift_dynamicCast(v10, &v9, v5, (char *)&type metadata for Any + 8, 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_1000572D8(0, *(_QWORD *)v2->remoteCardFilter + 1, 1);
        v2 = v11;
      }
      v7 = *(_QWORD *)v2->remoteCardFilter;
      v6 = *(_QWORD *)&v2->remoteCardFilter[8];
      if (v7 >= v6 >> 1)
      {
        sub_1000572D8(v6 > 1, v7 + 1, 1);
        v2 = v11;
      }
      *(_QWORD *)v2->remoteCardFilter = v7 + 1;
      sub_10006E2D0(v10, &v2->remoteCardFilter[32 * v7 + 16]);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

DARootViewController *sub_1000A1FD8(uint64_t a1)
{
  int64_t v1;
  DARootViewController *v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v9[2];
  _OWORD v10[2];
  DARootViewController *v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = &_swiftEmptyArrayStorage;
  if (v1)
  {
    v11 = &_swiftEmptyArrayStorage;
    sub_1000572D8(0, v1, 0);
    v2 = &_swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v9[0] = *(v4 - 1);
      v9[1] = v5;
      swift_bridgeObjectRetain(v5);
      swift_dynamicCast(v10, v9, &type metadata for String, (char *)&type metadata for Any + 8, 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_1000572D8(0, *(_QWORD *)v2->remoteCardFilter + 1, 1);
        v2 = v11;
      }
      v7 = *(_QWORD *)v2->remoteCardFilter;
      v6 = *(_QWORD *)&v2->remoteCardFilter[8];
      if (v7 >= v6 >> 1)
      {
        sub_1000572D8(v6 > 1, v7 + 1, 1);
        v2 = v11;
      }
      v4 += 2;
      *(_QWORD *)v2->remoteCardFilter = v7 + 1;
      sub_10006E2D0(v10, &v2->remoteCardFilter[32 * v7 + 16]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1000A20FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  __n128 v31;
  _QWORD aBlock[5];
  uint64_t v33;
  char v34[24];

  swift_beginAccess(v2 + 56, v34, 0, 0);
  v5 = *(_QWORD *)(v2 + 56);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v5);
    v6 = sub_100072A94(a1, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v6);
      swift_unknownObjectRetain(v8);
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v5);
      v9 = objc_msgSend(v8, "state");
      v10 = objc_msgSend(v9, "phase");

      if (v10)
      {
        v11 = objc_msgSend(v8, "state");
        v12 = objc_msgSend(v11, "phase");

        if (v12 != (id)1)
          goto LABEL_9;
      }
      v13 = objc_msgSend(v8, "state");
      v14 = objc_msgSend(v13, "phase");

      if (v14 == (id)1)
      {
        sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
        v15 = (void *)static OS_os_log.default.getter();
        v16 = static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)("Resetting device state...", 25, 2, &_mh_execute_header, v15, v16, _swiftEmptyArrayStorage);

        v17 = objc_msgSend(v8, "state");
        objc_msgSend(v17, "resetState");

      }
      v18 = objc_msgSend(v8, "state");
      objc_msgSend(v18, "setPhase:", 2);

      v19 = objc_opt_self(DADeviceLocalRemoteRunner);
      if (swift_dynamicCastObjCClass(v8, v19))
      {
        objc_msgSend(v8, "start");
LABEL_9:
        swift_unknownObjectRelease(v8);
        return;
      }
      v20 = swift_allocObject(&unk_10013A628, 24, 7);
      *(_QWORD *)(v20 + 16) = v8;
      v21 = (void *)objc_opt_self(CBSUtilities);
      swift_unknownObjectRetain_n(v8, 2);
      if (objc_msgSend(v21, "isSSRBootIntentSet"))
      {
        byte_10016CC90 = 2;
        objc_msgSend(v8, "start");
        v22 = swift_release(v20);
        swift_unknownObjectRelease_n(v8, 2, v22);
      }
      else
      {
        if (qword_10016A678 != -1)
          swift_once(&qword_10016A678, sub_10008BF34);
        v23 = qword_100172378;
        v24 = static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)("Checking AST 2 activity", 23, 2, &_mh_execute_header, v23, v24, _swiftEmptyArrayStorage);
        v25 = objc_msgSend(objc_allocWithZone((Class)DADiagnosticsSessionAvailability), "init");
        v26 = qword_100172388;
        if (qword_100172388)
        {
          swift_bridgeObjectRetain(qword_100172388);
          v27 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v26);
        }
        else
        {
          v27 = 0;
        }
        v28 = swift_allocObject(&unk_10013A650, 32, 7);
        *(_QWORD *)(v28 + 16) = sub_1000A4B90;
        *(_QWORD *)(v28 + 24) = v20;
        aBlock[4] = sub_1000370A8;
        v33 = v28;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000A2514;
        aBlock[3] = &unk_10013A668;
        v29 = _Block_copy(aBlock);
        v30 = v33;
        swift_retain(v20);
        swift_release(v30);
        objc_msgSend(v25, "checkAvailabilityWithTicketNumber:timeout:exitWhenDone:completion:", v27, 0, v29, 30.0);
        _Block_release(v29);
        v31 = swift_release(v20);
        swift_unknownObjectRelease_n(v8, 2, v31);

      }
    }
    else
    {
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v5);
    }
  }
}

uint64_t sub_1000A2514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v6 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v6(a2, a3);
  return swift_release(v5);
}

NSString sub_1000A255C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1001723B0 = (uint64_t)result;
  return result;
}

NSString sub_1000A2590()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1001723B8 = (uint64_t)result;
  return result;
}

void sub_1000A25C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  char **v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  DARootViewController *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  char **v49;
  DARootViewController *v50;
  DARootViewController *v51;
  char isUniquelyReferenced_nonNull_native;
  DARootViewController *v53;
  SEL v54;
  id v55;
  int v56;
  id v57;
  id v58;
  id v59;
  id v60;
  SEL v61;
  id v62;
  int v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t inited;
  id v72;
  DARootViewController *v73;
  Class isa;
  SEL v75;
  id v76;
  int v77;
  id v78;
  id v79;
  id v80;
  id v81;
  int64_t v82;
  unint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  int64_t v89;
  unint64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  DARootViewController *v94;
  id v95;
  char *v96;
  id v97;
  id v98;
  uint64_t v99;
  DARootViewController *v100;
  DARootViewController *v101;
  DARootViewController *v102;
  unint64_t v103;
  SEL v104;
  char v105;
  id v106;
  int v107;
  id v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  char v113;
  const char *v114;
  void *v115;
  int v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  uint64_t v121;
  DARootViewController *v122;
  SEL v123;
  id v124;
  int v125;
  id v126;
  id v127;
  id v128;
  id v129;
  SEL v130;
  id v131;
  int v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  DARootViewController *v142;
  Class v143;
  SEL v144;
  id v145;
  int v146;
  id v147;
  id v148;
  id v149;
  id v150;
  uint64_t *v151;
  unint64_t *v152;
  unint64_t *v153;
  unint64_t *v154;
  int64_t v155;
  unint64_t *v156;
  uint64_t ObjectType;
  int64_t v158;
  int64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162[176];
  char v163[176];
  __objc2_prot *v164;
  DARootViewController *v165;
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  __int128 v169;
  __int128 v170;
  uint64_t v171;

  v3 = *(_QWORD *)(v1 + 64);
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v3 + 16) >> 3)
  {
    *(_QWORD *)&v169 = v3;
    swift_bridgeObjectRetain(v3);
    sub_1000A5F30(a1);
    v4 = (unint64_t *)v3;
  }
  else
  {
    swift_bridgeObjectRetain(v3);
    v4 = sub_1000A5294(a1, v3);
  }
  v5 = *(_QWORD *)(v161 + 64);
  if (*(_QWORD *)(v5 + 16) <= *(_QWORD *)(a1 + 16) >> 3)
  {
    *(_QWORD *)&v169 = a1;
    swift_bridgeObjectRetain(a1);
    v14 = swift_bridgeObjectRetain(v5);
    sub_1000A5F30(v14);
    swift_bridgeObjectRelease((DARootViewController *)v5, v15, v16, v17, v18, v19, v20, v21);
    v153 = (unint64_t *)a1;
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    v6 = swift_bridgeObjectRetain(v5);
    v153 = sub_1000A5294(v6, a1);
    swift_bridgeObjectRelease((DARootViewController *)v5, v7, v8, v9, v10, v11, v12, v13);
  }
  v22 = 0;
  v154 = v4 + 7;
  v23 = 1 << *((_BYTE *)v4 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v4[7];
  v26 = (uint64_t *)(v161 + 56);
  v155 = (unint64_t)(v23 + 63) >> 6;
  v27 = &selRef_setFill;
  v152 = v4;
  while (v25)
  {
    v28 = __clz(__rbit64(v25));
    v25 &= v25 - 1;
    v29 = v28 | (v22 << 6);
LABEL_26:
    sub_100074074(v4[6] + 40 * v29, (uint64_t)&v169);
    v166 = v169;
    v167 = v170;
    v168 = v171;
    v33 = sub_100035CA4(&qword_10016C2F8);
    if ((swift_dynamicCast(&v165, &v166, &type metadata for AnyHashable, v33, 6) & 1) != 0)
    {
      v159 = v22;
      v34 = v165;
      v164 = &OBJC_PROTOCOL___DADeviceWithUI;
      v35 = swift_dynamicCastObjCProtocolConditional(v165, 1, &v164);
      if (v35)
      {
        v37 = (void *)v35;
        swift_unknownObjectRetain(v34);
        v38 = objc_msgSend(v37, "delegate");
        swift_unknownObjectRelease(v38);
        if (!v38)
        {
          v39 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
          v40 = objc_msgSend(v39, "delegate");

          if (v40)
          {
            v41 = type metadata accessor for AppDelegate();
            v42 = swift_dynamicCastClass(v40, v41);
            if (v42)
            {
              v43 = v42;
              if (qword_10016A608 != -1)
                swift_once(&qword_10016A608, sub_10004913C);
              v44 = qword_100172318;
              objc_msgSend(v37, "setViewControllerDelegate:", qword_100172318);
              objc_msgSend(v37, "setStatusBarResponder:", v44);
              v45 = *(_QWORD *)(v43 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_rootViewController);
              objc_msgSend(v37, "setBrightnessResponder:", v45);
              objc_msgSend(v37, "setVolumeHUDResponder:", v45);
              objc_msgSend(v37, "setUserAlertResponder:", v45);
              objc_msgSend(v37, "setDelegate:", v161);
              v27 = &selRef_setFill;
            }
            swift_unknownObjectRelease(v40);
          }
        }
        swift_unknownObjectRelease(v34);
      }
      ObjectType = swift_getObjectType(v34, v36);
      v46 = objc_msgSend(v34, v27[129]);
      v47 = objc_msgSend(v46, "serialNumber");

      v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
      v49 = v27;
      v51 = v50;

      swift_beginAccess(v26, &v166, 33, 0);
      swift_unknownObjectRetain(v34);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v26);
      v165 = (DARootViewController *)*v26;
      *v26 = 0x8000000000000000;
      sub_1000E81F8((uint64_t)v34, v48, (uint64_t)v51, isUniquelyReferenced_nonNull_native);
      v53 = (DARootViewController *)*v26;
      *v26 = (uint64_t)v165;
      swift_bridgeObjectRelease(v51, v54, v55, v56, v57, v58, v59, v60);
      swift_bridgeObjectRelease(v53, v61, v62, v63, v64, v65, v66, v67);
      swift_endAccess(&v166);
      v68 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_10016A6B8 != -1)
        swift_once(&qword_10016A6B8, sub_1000A255C);
      v69 = qword_1001723B0;
      v70 = sub_100035CA4((uint64_t *)&unk_10016BA20);
      inited = swift_initStackObject(v70, v163);
      *(_OWORD *)(inited + 16) = xmmword_10010C3D0;
      strcpy((char *)&v166, "deviceStateKey");
      HIBYTE(v166) = -18;
      AnyHashable.init<A>(_:)(&v166, &type metadata for String, &protocol witness table for String);
      v72 = objc_msgSend(v34, v49[129]);
      *(_QWORD *)(inited + 96) = sub_100037118(0, &qword_10016C2F0, off_100131A90);
      *(_QWORD *)(inited + 72) = v72;
      *(_QWORD *)&v166 = 0x654B656369766564;
      *((_QWORD *)&v166 + 1) = 0xE900000000000079;
      AnyHashable.init<A>(_:)(&v166, &type metadata for String, &protocol witness table for String);
      *(_QWORD *)(inited + 168) = ObjectType;
      *(_QWORD *)(inited + 144) = v34;
      swift_unknownObjectRetain(v34);
      v73 = (DARootViewController *)sub_10006DCBC(inited);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v73, v75, v76, v77, v78, v79, v80, v81);
      objc_msgSend(v68, "postNotificationName:object:userInfo:", v69, v161, isa);

      -[DARootViewController connect](v34, "connect");
      swift_unknownObjectRelease(v34);
      v27 = v49;
      v4 = v152;
      v22 = v159;
    }
  }
  v30 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (v30 >= v155)
    goto LABEL_39;
  v31 = v154[v30];
  ++v22;
  if (v31)
    goto LABEL_25;
  v22 = v30 + 1;
  if (v30 + 1 >= v155)
    goto LABEL_39;
  v31 = v154[v22];
  if (v31)
    goto LABEL_25;
  v22 = v30 + 2;
  if (v30 + 2 >= v155)
    goto LABEL_39;
  v31 = v154[v22];
  if (v31)
  {
LABEL_25:
    v25 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v22 << 6);
    goto LABEL_26;
  }
  v32 = v30 + 3;
  if (v32 >= v155)
  {
LABEL_39:
    swift_release(v4);
    v82 = 0;
    v83 = v153;
    v156 = v153 + 7;
    v84 = 1 << *((_BYTE *)v153 + 32);
    v85 = -1;
    if (v84 < 64)
      v85 = ~(-1 << v84);
    v86 = v85 & v153[7];
    v158 = (unint64_t)(v84 + 63) >> 6;
    v151 = (uint64_t *)(v161 + 56);
    while (1)
    {
      if (v86)
      {
        v87 = __clz(__rbit64(v86));
        v86 &= v86 - 1;
        v88 = v87 | (v82 << 6);
      }
      else
      {
        v89 = v82 + 1;
        if (__OFADD__(v82, 1))
          goto LABEL_70;
        if (v89 >= v158)
        {
LABEL_68:
          swift_release(v83);
          return;
        }
        v90 = v156[v89];
        ++v82;
        if (!v90)
        {
          v82 = v89 + 1;
          if (v89 + 1 >= v158)
            goto LABEL_68;
          v90 = v156[v82];
          if (!v90)
          {
            v82 = v89 + 2;
            if (v89 + 2 >= v158)
              goto LABEL_68;
            v90 = v156[v82];
            if (!v90)
            {
              v91 = v89 + 3;
              if (v91 >= v158)
                goto LABEL_68;
              v90 = v156[v91];
              if (!v90)
              {
                while (1)
                {
                  v82 = v91 + 1;
                  if (__OFADD__(v91, 1))
                    goto LABEL_72;
                  if (v82 >= v158)
                    goto LABEL_68;
                  v90 = v156[v82];
                  ++v91;
                  if (v90)
                    goto LABEL_57;
                }
              }
              v82 = v91;
            }
          }
        }
LABEL_57:
        v86 = (v90 - 1) & v90;
        v88 = __clz(__rbit64(v90)) + (v82 << 6);
      }
      sub_100074074(v83[6] + 40 * v88, (uint64_t)&v169);
      v166 = v169;
      v167 = v170;
      v168 = v171;
      v92 = sub_100035CA4(&qword_10016C2F8);
      if ((swift_dynamicCast(&v165, &v166, &type metadata for AnyHashable, v92, 6) & 1) != 0)
      {
        v94 = v165;
        v160 = swift_getObjectType(v165, v93);
        v95 = objc_msgSend(v94, v27[129]);
        v96 = (char *)objc_msgSend(v95, "phase");

        if ((unint64_t)(v96 - 2) <= 2)
          -[DARootViewController end](v94, "end");
        v97 = objc_msgSend(v94, v27[129], v151);
        v98 = objc_msgSend(v97, "serialNumber");

        v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
        v101 = v100;

        swift_beginAccess(v26, &v166, 33, 0);
        v102 = (DARootViewController *)*v26;
        swift_bridgeObjectRetain(*v26);
        v103 = sub_100072A94(v99, (uint64_t)v101);
        v105 = (char)v104;
        swift_bridgeObjectRelease(v102, v104, v106, v107, v108, v109, v110, v111);
        v112 = 0;
        if ((v105 & 1) != 0)
        {
          v113 = swift_isUniquelyReferenced_nonNull_native(*v26);
          v121 = *v26;
          v165 = (DARootViewController *)*v26;
          *v26 = 0x8000000000000000;
          if ((v113 & 1) == 0)
          {
            sub_1000E8960();
            v121 = (uint64_t)v165;
          }
          swift_bridgeObjectRelease(*(DARootViewController **)(*(_QWORD *)(v121 + 48) + 16 * v103 + 8), v114, v115, v116, v117, v118, v119, v120);
          v112 = *(_QWORD *)(*(_QWORD *)(v121 + 56) + 8 * v103);
          sub_1000E7AE4(v103, v121);
          v122 = (DARootViewController *)*v26;
          *v26 = v121;
          swift_bridgeObjectRelease(v122, v123, v124, v125, v126, v127, v128, v129);
        }
        swift_endAccess(&v166);
        swift_unknownObjectRelease(v112);
        swift_bridgeObjectRelease(v101, v130, v131, v132, v133, v134, v135, v136);
        v137 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_10016A6C0 != -1)
          swift_once(&qword_10016A6C0, sub_1000A2590);
        v138 = qword_1001723B8;
        v139 = sub_100035CA4((uint64_t *)&unk_10016BA20);
        v140 = swift_initStackObject(v139, v162);
        *(_OWORD *)(v140 + 16) = xmmword_10010C3D0;
        strcpy((char *)&v166, "deviceStateKey");
        HIBYTE(v166) = -18;
        AnyHashable.init<A>(_:)(&v166, &type metadata for String, &protocol witness table for String);
        v27 = &selRef_setFill;
        v141 = -[DARootViewController state](v94, "state");
        *(_QWORD *)(v140 + 96) = sub_100037118(0, &qword_10016C2F0, off_100131A90);
        *(_QWORD *)(v140 + 72) = v141;
        *(_QWORD *)&v166 = 0x654B656369766564;
        *((_QWORD *)&v166 + 1) = 0xE900000000000079;
        AnyHashable.init<A>(_:)(&v166, &type metadata for String, &protocol witness table for String);
        *(_QWORD *)(v140 + 168) = v160;
        *(_QWORD *)(v140 + 144) = v94;
        swift_unknownObjectRetain(v94);
        v142 = (DARootViewController *)sub_10006DCBC(v140);
        v143 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v142, v144, v145, v146, v147, v148, v149, v150);
        objc_msgSend(v137, "postNotificationName:object:userInfo:", v138, v161, v143);
        swift_unknownObjectRelease(v94);

        v83 = v153;
        v26 = v151;
      }
    }
  }
  v31 = v154[v32];
  if (v31)
  {
    v22 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v22 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v22 >= v155)
      goto LABEL_39;
    v31 = v154[v22];
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
}

double sub_1000A3134()
{
  uint64_t v0;
  uint64_t isEscapingClosureAtFileLocation;
  char *v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  DARootViewController *v22;
  DARootViewController *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  NSObject *v28;
  uint64_t v29;
  void *v30;
  id v31;
  double result;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  SEL v39;
  id v40;
  int v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void **aBlock;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  uint64_t (*v50)();
  uint64_t v51;
  char v52[24];

  swift_beginAccess(v0 + 72, v52, 0, 0);
  v3 = 0;
  v4 = *(_QWORD *)(v0 + 72);
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v4 + 64;
  v8 = v6 & *(_QWORD *)(v4 + 64);
  v9 = (unint64_t)(v5 + 63) >> 6;
  do
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v3 << 6);
    }
    else
    {
      v13 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      if (v13 >= v9)
        goto LABEL_26;
      v14 = *(_QWORD *)(v7 + 8 * v13);
      ++v3;
      if (!v14)
      {
        v3 = v13 + 1;
        if (v13 + 1 >= v9)
          goto LABEL_26;
        v14 = *(_QWORD *)(v7 + 8 * v3);
        if (!v14)
        {
          v3 = v13 + 2;
          if (v13 + 2 >= v9)
            goto LABEL_26;
          v14 = *(_QWORD *)(v7 + 8 * v3);
          if (!v14)
          {
            v3 = v13 + 3;
            if (v13 + 3 >= v9)
              goto LABEL_26;
            v14 = *(_QWORD *)(v7 + 8 * v3);
            if (!v14)
            {
              v15 = v13 + 4;
              if (v15 >= v9)
              {
LABEL_26:
                v24 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
                v25 = (void *)static OS_os_log.default.getter(v24);
                v26 = static os_log_type_t.default.getter(v25);
                os_log(_:dso:log:type:_:)("No devices active which require a prevent idle task assertion.", 62, 2, &_mh_execute_header, v25, v26, &_swiftEmptyArrayStorage);

                if (qword_10016A5F0 != -1)
                  goto LABEL_36;
                goto LABEL_27;
              }
              v14 = *(_QWORD *)(v7 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v3 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_33;
                  if (v3 >= v9)
                    goto LABEL_26;
                  v14 = *(_QWORD *)(v7 + 8 * v3);
                  ++v15;
                  if (v14)
                    goto LABEL_22;
                }
              }
              v3 = v15;
            }
          }
        }
      }
LABEL_22:
      v8 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v3 << 6);
    }
    isEscapingClosureAtFileLocation = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v11);
    v12 = objc_opt_self(DADeviceLocalPersistent);
  }
  while (swift_dynamicCastObjCClass(isEscapingClosureAtFileLocation, v12));
  sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  swift_bridgeObjectRetain(v4);
  v16 = swift_unknownObjectRetain(isEscapingClosureAtFileLocation);
  v17 = (void *)static OS_os_log.default.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  os_log(_:dso:log:type:_:)("Active devices need a prevent idle task assertion.", 50, 2, &_mh_execute_header, v17, v18, &_swiftEmptyArrayStorage);

  if (qword_10016A5F0 == -1)
    goto LABEL_24;
LABEL_34:
  swift_once(&qword_10016A5F0, sub_100044F78);
LABEL_24:
  v2 = (char *)qword_1001722E8;
  LODWORD(v19) = getpid();
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v21 = objc_msgSend(v20, "bundleIdentifier");

  if (!v21)
    goto LABEL_29;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;

  while (1)
  {
    v33 = *(NSObject **)&v2[OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendQueue];
    v34 = swift_allocObject(&unk_10013A6F0, 28, 7);
    *(_QWORD *)(v34 + 16) = v2;
    *(_DWORD *)(v34 + 24) = v19;
    v35 = swift_allocObject(&unk_10013A718, 32, 7);
    *(_QWORD *)(v35 + 16) = sub_1000A5EAC;
    *(_QWORD *)(v35 + 24) = v34;
    v50 = sub_10003CDD4;
    v51 = v35;
    aBlock = _NSConcreteStackBlock;
    v47 = 1107296256;
    v48 = sub_100048E58;
    v49 = &unk_10013A730;
    v36 = _Block_copy(&aBlock);
    v37 = v51;
    v38 = v2;
    swift_retain(v35);
    swift_release(v37);
    dispatch_sync(v33, v36);
    _Block_release(v36);
    LOBYTE(v33) = swift_isEscapingClosureAtFileLocation(v35, "", 88, 68, 43, 1);
    swift_release(v4);
    swift_unknownObjectRelease(isEscapingClosureAtFileLocation);
    swift_bridgeObjectRelease(v23, v39, v40, v41, v42, v43, v44, v45);
    swift_release(v34);
    *(_QWORD *)&result = swift_release(v35).n128_u64[0];
    if ((v33 & 1) == 0)
      break;
    __break(1u);
LABEL_36:
    swift_once(&qword_10016A5F0, sub_100044F78);
LABEL_27:
    v27 = (void *)qword_1001722E8;
    v28 = *(NSObject **)(qword_1001722E8 + OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendQueue);
    v4 = swift_allocObject(&unk_10013A768, 24, 7);
    *(_QWORD *)(v4 + 16) = v27;
    v29 = swift_allocObject(&unk_10013A790, 32, 7);
    *(_QWORD *)(v29 + 16) = sub_10009BABC;
    *(_QWORD *)(v29 + 24) = v4;
    v50 = sub_100052C38;
    v51 = v29;
    aBlock = _NSConcreteStackBlock;
    v47 = 1107296256;
    v48 = sub_100048E58;
    v49 = &unk_10013A7A8;
    v30 = _Block_copy(&aBlock);
    v19 = v51;
    v31 = v27;
    swift_retain(v29);
    swift_release(v19);
    dispatch_sync(v28, v30);
    _Block_release(v30);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v29, "", 88, 87, 43, 1);
    swift_release(v4);
    *(_QWORD *)&result = swift_release(v29).n128_u64[0];
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_29:
    v23 = 0;
  }
  return result;
}

uint64_t sub_1000A363C()
{
  uint64_t v0;
  uint64_t v1;
  DARootViewController *inited;
  id v3;
  unsigned __int8 v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  DARootViewController *v23;
  SEL v24;
  id v25;
  int v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  Class isa;
  SEL v33;
  id v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  DARootViewController *v41;
  Class v42;
  SEL v43;
  id v44;
  int v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  __CFString *v59;
  id v60;
  void *v61;
  uint64_t v62;
  id v63;
  void **aBlock;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  void *v68;
  void *v69;
  uint64_t v70;
  _BYTE v71[64];

  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v0 + 64) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v0 + 72) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v0 + 80) = 0;
  v1 = sub_1000A4B20();
  inited = (DARootViewController *)swift_initStackObject(v1, v71);
  *(_OWORD *)inited->remoteCardFilter = xmmword_10010E050;
  *(_QWORD *)&inited->remoteCardFilter[16] = sub_100037118(0, &qword_10016D540, off_100131A88);
  inited[1].super.super.super.super.isa = (Class)sub_100037118(0, &qword_10016D548, off_100131A58);
  *(_QWORD *)inited[1].responder = sub_100037118(0, &qword_10016D550, off_100131A60);
  *(_QWORD *)inited[1].remoteCardFilter = sub_100037118(0, &qword_10016D558, off_100131A70);
  v3 = objc_msgSend((id)objc_opt_self(DAPlatform), "currentPlatform");
  v4 = objc_msgSend(v3, "isCheckerBoardActive");
  swift_unknownObjectRelease(v3);
  if ((v4 & 1) == 0)
  {
    v5 = sub_100037118(0, &qword_10016D560, off_100131A68);
    inited = sub_100091ECC((DARootViewController *)1, 5, 1, (uint64_t)inited, v6, v7, v8, v9);
    *(_QWORD *)inited->remoteCardFilter = 5;
    *(_QWORD *)&inited[1].remoteCardFilter[8] = v5;
    v14 = *(_QWORD *)&inited->remoteCardFilter[8];
    if (v14 <= 0xB)
      inited = sub_100091ECC((DARootViewController *)(v14 > 1), 6, 1, (uint64_t)inited, v10, v11, v12, v13);
    v15 = sub_100037118(0, &qword_10016D568, off_100131A80);
    *(_QWORD *)inited->remoteCardFilter = 6;
    *(_QWORD *)&inited[1].remoteCardFilter[16] = v15;
  }
  if (os_variant_has_internal_content("com.apple.Diagnostics"))
  {
    v21 = *(_QWORD *)inited->remoteCardFilter;
    v20 = *(_QWORD *)&inited->remoteCardFilter[8];
    if (v21 >= v20 >> 1)
      inited = sub_100091ECC((DARootViewController *)(v20 > 1), v21 + 1, 1, (uint64_t)inited, v16, v17, v18, v19);
    v22 = sub_100037118(0, (unint64_t *)&unk_10016D570, off_100131A78);
    *(_QWORD *)inited->remoteCardFilter = v21 + 1;
    *(_QWORD *)&inited->remoteCardFilter[8 * v21 + 16] = v22;
  }
  v23 = sub_1000A1EB0((uint64_t)inited);
  swift_bridgeObjectRelease(inited, v24, v25, v26, v27, v28, v29, v30);
  v31 = objc_allocWithZone((Class)NSSet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23, v33, v34, v35, v36, v37, v38, v39);
  v40 = objc_msgSend(v31, "initWithArray:", isa);

  aBlock = 0;
  static Set._forceBridgeFromObjectiveC(_:result:)(v40, &aBlock, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
  v41 = (DARootViewController *)aBlock;
  if (!aBlock)
    __break(1u);

  v42 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v41, v43, v44, v45, v46, v47, v48, v49);
  v50 = objc_msgSend((id)objc_opt_self(DADeviceObserverAggregator), "aggregatorWithObserverClasses:", v42);

  v51 = *(void **)(v0 + 80);
  *(_QWORD *)(v0 + 80) = v50;

  v52 = *(void **)(v0 + 80);
  if (v52)
  {
    v69 = sub_1000A4BD4;
    v70 = v0;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_1000A3D28;
    v68 = &unk_10013A690;
    v53 = _Block_copy(&aBlock);
    v54 = v70;
    v55 = v52;
    swift_retain(v0);
    v56 = objc_msgSend(v55, "beginDiscoveringDevicesWithHandler:", v53, swift_release(v54).n128_f64[0]);
    _Block_release(v53);
    swift_unknownObjectRelease(v56);

  }
  v57 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v58 = (void *)objc_opt_self(NSOperationQueue);
  v59 = CFSTR("com.apple.Diagnostics.deviceStateChangedNotification");
  v60 = objc_msgSend(v58, "mainQueue");
  v69 = sub_1000A4BDC;
  v70 = v0;
  aBlock = _NSConcreteStackBlock;
  v66 = 1107296256;
  v67 = sub_100048DB4;
  v68 = &unk_10013A6B8;
  v61 = _Block_copy(&aBlock);
  v62 = v70;
  swift_retain(v0);
  v63 = objc_msgSend(v57, "addObserverForName:object:queue:usingBlock:", v59, 0, v60, v61, swift_release(v62).n128_f64[0]);
  _Block_release(v61);
  swift_unknownObjectRelease(v63);

  return v0;
}

uint64_t sub_1000A3B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100037118(0, (unint64_t *)&qword_10016AD00, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_10013A7E0, 32, 7);
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_1000A5F28;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100030658;
  aBlock[3] = &unk_10013A7F8;
  v14 = _Block_copy(aBlock);
  v15 = v24;
  swift_retain(a2);
  swift_bridgeObjectRetain(a1);
  v16 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v17 = sub_100035C5C();
  v18 = sub_100035CA4((uint64_t *)&unk_10016AD10);
  v19 = sub_100035CE4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v4, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1000A3CF0(uint64_t a1, uint64_t a2)
{
  DARootViewController *v2;
  SEL v3;
  id v4;
  int v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v2 = *(DARootViewController **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = a2;
  swift_bridgeObjectRetain(a2);
  sub_1000A25C4((uint64_t)v2);
  swift_bridgeObjectRelease(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1000A3D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
  swift_retain(v2);
  v3(v4);
  swift_release(v2);
  return swift_bridgeObjectRelease(v4);
}

void sub_1000A3D88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  unint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  DARootViewController *v22;
  DARootViewController *v23;
  id v24;
  id v25;
  uint64_t v26;
  DARootViewController *v27;
  DARootViewController *v28;
  const char *v29;
  void *v30;
  int v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  const char *v38;
  void *v39;
  int v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  SEL v46;
  id v47;
  int v48;
  id v49;
  id v50;
  id v51;
  id v52;
  SEL v53;
  id v54;
  int v55;
  id v56;
  id v57;
  id v58;
  id v59;
  DARootViewController **v60;
  char isUniquelyReferenced_nonNull_native;
  DARootViewController *v62;
  SEL v63;
  id v64;
  int v65;
  id v66;
  id v67;
  id v68;
  id v69;
  SEL v70;
  id v71;
  int v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  SEL v78;
  id v79;
  int v80;
  id v81;
  id v82;
  id v83;
  id v84;
  DARootViewController *v85;
  uint64_t v86;
  SEL v87;
  id v88;
  int v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  _QWORD v95[2];
  id v96[5];
  __int128 v97;
  __int128 v98;

  v3 = Notification.userInfo.getter(a1);
  if (!v3)
  {
    v97 = 0u;
    v98 = 0u;
LABEL_14:
    sub_100036FA0((uint64_t)&v97, (uint64_t *)&unk_10016B610);
    return;
  }
  v4 = v3;
  v95[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("info"));
  v95[1] = v5;
  AnyHashable.init<A>(_:)(v95, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v13 = sub_100072B10((uint64_t)v96), (v6 & 1) != 0))
  {
    sub_1000370B0(*(_QWORD *)(v4 + 56) + 32 * v13, (uint64_t)&v97);
  }
  else
  {
    v97 = 0u;
    v98 = 0u;
  }
  swift_bridgeObjectRelease((DARootViewController *)v4, v6, v7, v8, v9, v10, v11, v12);
  sub_100036FDC((uint64_t)v96);
  if (!*((_QWORD *)&v98 + 1))
    goto LABEL_14;
  v14 = sub_100037118(0, &qword_10016BA10, off_100131A98);
  if ((swift_dynamicCast(v96, &v97, (char *)&type metadata for Any + 8, v14, 6) & 1) == 0)
    return;
  v15 = v96[0];
  v16 = objc_msgSend(v96[0], "snapshot");
  v17 = objc_msgSend(v16, "phase");

  v18 = (unint64_t)v17 - 2;
  v19 = objc_msgSend(v15, "snapshot");
  v20 = objc_msgSend(v19, "serialNumber");

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  if (v18 > 2)
  {
    swift_beginAccess(a2 + 72, v96, 33, 0);
    v77 = sub_1000E5EE0(v21, (uint64_t)v23);
    swift_endAccess(v96);
    swift_bridgeObjectRelease(v23, v78, v79, v80, v81, v82, v83, v84);
    swift_unknownObjectRelease(v77);
    sub_1000A3134();
LABEL_22:

    return;
  }
  v24 = objc_msgSend(v15, "snapshot");
  v25 = objc_msgSend(v24, "serialNumber");

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  swift_beginAccess(a2 + 56, v96, 0, 0);
  v36 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(v36 + 16))
  {
    v85 = v28;
LABEL_19:
    swift_bridgeObjectRelease(v85, v29, v30, v31, v32, v33, v34, v35);
    swift_beginAccess(a2 + 72, &v97, 33, 0);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain(*(_QWORD *)(a2 + 56));
  v37 = sub_100072A94(v26, (uint64_t)v28);
  if ((v38 & 1) == 0)
  {
    swift_bridgeObjectRelease(v28, v38, v39, v40, v41, v42, v43, v44);
    v85 = (DARootViewController *)v36;
    goto LABEL_19;
  }
  v45 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v37);
  swift_unknownObjectRetain(v45);
  swift_bridgeObjectRelease(v28, v46, v47, v48, v49, v50, v51, v52);
  swift_bridgeObjectRelease((DARootViewController *)v36, v53, v54, v55, v56, v57, v58, v59);
  v60 = (DARootViewController **)(a2 + 72);
  swift_beginAccess(a2 + 72, &v97, 33, 0);
  if (!v45)
  {
LABEL_20:
    v86 = sub_1000E5EE0(v21, (uint64_t)v23);
    swift_bridgeObjectRelease(v23, v87, v88, v89, v90, v91, v92, v93);
    swift_unknownObjectRelease(v86);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v60);
  v95[0] = *v60;
  *v60 = (DARootViewController *)0x8000000000000000;
  sub_1000E81F8(v45, v21, (uint64_t)v23, isUniquelyReferenced_nonNull_native);
  v62 = *v60;
  *v60 = (DARootViewController *)v95[0];
  swift_bridgeObjectRelease(v23, v63, v64, v65, v66, v67, v68, v69);
  swift_bridgeObjectRelease(v62, v70, v71, v72, v73, v74, v75, v76);
LABEL_21:
  swift_endAccess(&v97);
  if ((objc_msgSend(v15, "changedProperties", sub_1000A3134()) & 2) == 0)
    goto LABEL_22;
  v94 = objc_msgSend(v15, "snapshot");

}

void sub_1000A4140()
{
  sub_1000A4164((SEL *)&selRef_suspendTests);
}

void sub_1000A414C()
{
  sub_1000A4164((SEL *)&selRef_resumeTests);
}

void sub_1000A4158()
{
  sub_1000A4164((SEL *)&selRef_end);
}

void sub_1000A4164(SEL *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  id v15;
  id v17;
  _OWORD v18[2];
  uint64_t v19;
  _OWORD v20[2];
  uint64_t v21;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = v2 + 56;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 64));
  v8 = 0;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_21:
    sub_100074074(*(_QWORD *)(v2 + 48) + 40 * v10, (uint64_t)v20);
    v18[0] = v20[0];
    v18[1] = v20[1];
    v19 = v21;
    v14 = sub_100035CA4(&qword_10016C2F8);
    if ((swift_dynamicCast(&v17, v18, &type metadata for AnyHashable, v14, 6) & 1) != 0)
    {
      v15 = v17;
      if (objc_msgSend(v17, "isLocal"))
        objc_msgSend(v15, *a1);
      swift_unknownObjectRelease(v15);
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_20;
  v8 = v11 + 1;
  if (v11 + 1 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_20;
  v8 = v11 + 2;
  if (v11 + 2 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
  {
LABEL_20:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_21;
  }
  v13 = v11 + 3;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release(v2);
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

double sub_1000A4338(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, unint64_t);
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  double result;

  v4 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;

  v4(v6, v8);
  sub_100066264(v6, v8);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_1000A43A8()
{
  uint64_t v0;
  SEL v1;
  id v2;
  int v3;
  id v4;
  id v5;
  id v6;
  id v7;
  SEL v8;
  id v9;
  int v10;
  id v11;
  id v12;
  id v13;
  id v14;
  SEL v15;
  id v16;
  int v17;
  id v18;
  id v19;
  id v20;
  id v21;

  sub_100036FA0(v0 + 16, (uint64_t *)&unk_10016C2E0);
  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + 56), v1, v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + 64), v8, v9, v10, v11, v12, v13, v14);
  swift_bridgeObjectRelease(*(DARootViewController **)(v0 + 72), v15, v16, v17, v18, v19, v20, v21);

  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for DeviceManager()
{
  return objc_opt_self(_TtC11Diagnostics13DeviceManager);
}

void sub_1000A4414(unsigned __int8 a1, id a2)
{
  id v3;
  id v4;
  id v5;

  if (a1 - 1 > 1)
  {
    v3 = objc_msgSend(a2, "state");
    objc_msgSend(v3, "setPhase:", 0);

    v4 = objc_msgSend(a2, "state");
    objc_msgSend(v4, "addErrorCode:userInfo:", 0, 0);

    v5 = objc_msgSend(a2, "state");
    objc_msgSend(v5, "removeErrorCode:", 0);

  }
  else
  {
    objc_msgSend(a2, "start");
  }
}

uint64_t sub_1000A4590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];
  uint64_t v17;

  swift_beginAccess(v4 + 16, v15, 0, 0);
  sub_1000A60D4(v4 + 16, (uint64_t)v16);
  if (!v17)
    return sub_100036FA0((uint64_t)v16, (uint64_t *)&unk_10016C2E0);
  sub_10003CE84((uint64_t)v16, (uint64_t)v12);
  sub_100036FA0((uint64_t)v16, (uint64_t *)&unk_10016C2E0);
  v9 = v13;
  v10 = v14;
  sub_10003CEC8(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24))(v4, a1, a2, a3, a4, v9, v10);
  return sub_10003CEEC(v12);
}

void sub_1000A471C(uint64_t a1, uint64_t a2, NSString a3, uint64_t a4)
{
  id v6;

  if (a3)
    a3 = String._bridgeToObjectiveC()();
  v6 = a3;
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a4, a1);

}

uint64_t sub_1000A4770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];
  uint64_t v17;

  swift_beginAccess(v4 + 16, v15, 0, 0);
  sub_1000A60D4(v4 + 16, (uint64_t)v16);
  if (!v17)
    return sub_100036FA0((uint64_t)v16, (uint64_t *)&unk_10016C2E0);
  sub_10003CE84((uint64_t)v16, (uint64_t)v12);
  sub_100036FA0((uint64_t)v16, (uint64_t *)&unk_10016C2E0);
  v9 = v13;
  v10 = v14;
  sub_10003CEC8(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, a1, a2, a3, a4, v9, v10);
  return sub_10003CEEC(v12);
}

uint64_t sub_1000A4920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];
  uint64_t v17;

  swift_beginAccess(v4 + 16, v15, 0, 0);
  sub_1000A60D4(v4 + 16, (uint64_t)v16);
  if (!v17)
    return sub_100036FA0((uint64_t)v16, (uint64_t *)&unk_10016C2E0);
  sub_10003CE84((uint64_t)v16, (uint64_t)v12);
  sub_100036FA0((uint64_t)v16, (uint64_t *)&unk_10016C2E0);
  v9 = v13;
  v10 = v14;
  sub_10003CEC8(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32))(v4, a1, a2, a3, a4, v9, v10);
  return sub_10003CEEC(v12);
}

uint64_t sub_1000A4AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return a4(0);
}

void sub_1000A4ACC(int a1, int a2, id a3, void (*a4)(void))
{
  id v5;

  v5 = objc_msgSend(a3, "identifier");
  a4();

}

uint64_t sub_1000A4B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = sub_100035CA4(&qword_10016D5E8);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_10016ACE0;
  else
    v2 = (uint64_t *)&unk_10016D5F0;
  return sub_100035CA4(v2);
}

uint64_t sub_1000A4B6C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000A4B90(unsigned __int8 a1)
{
  uint64_t v1;

  sub_1000A4414(a1, *(id *)(v1 + 16));
}

uint64_t sub_1000A4B98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A4BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000A4BCC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000A4BD4(uint64_t a1)
{
  uint64_t v1;

  return sub_1000A3B00(a1, v1);
}

void sub_1000A4BDC(uint64_t a1)
{
  uint64_t v1;

  sub_1000A3D88(a1, v1);
}

void *sub_1000A4BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t isStackAllocationSafe;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38[2];

  v2 = a2;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }
  v38[0] = a1;
  v36 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
LABEL_30:
    if (a1 < 0)
      v31 = a1;
    else
      v31 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v31))
      goto LABEL_4;
LABEL_21:
    swift_bridgeObjectRelease(a1);
    return (void *)v2;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v4)
    goto LABEL_21;
LABEL_4:
  v5 = 0;
  v6 = v2 + 56;
  v37 = a1 & 0xC000000000000001;
  v7 = a1 & 0xFFFFFFFFFFFFFF8;
  v35 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 < 0)
    v7 = a1;
  v33 = a1 + 32;
  v34 = v7;
  while (1)
  {
    if (v37)
    {
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
    }
    else
    {
      if (v5 >= *(_QWORD *)(v35 + 16))
        __break(1u);
      v8 = *(id *)(v33 + 8 * v5);
    }
    v9 = v8;
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
    v12 = -1 << *(_BYTE *)(v2 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
      break;
LABEL_19:

    if (v36)
    {
      swift_bridgeObjectRetain(a1);
      v19 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(a1);
      if (v5 == v19)
        goto LABEL_21;
    }
    else if (v5 == *(_QWORD *)(v35 + 16))
    {
      goto LABEL_21;
    }
  }
  sub_100037118(0, (unint64_t *)&unk_10016D870, NSError_ptr);
  v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v13);
  v15 = static NSObject.== infix(_:_:)(v14);

  if ((v15 & 1) == 0)
  {
    v16 = ~v12;
    do
    {
      v13 = (v13 + 1) & v16;
      if (((*(_QWORD *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_19;
      v17 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      v18 = static NSObject.== infix(_:_:)(v17);

    }
    while ((v18 & 1) == 0);
  }

  v38[1] = v5;
  v21 = *(_BYTE *)(v2 + 32);
  v22 = v21 & 0x3F;
  v23 = (1 << v21) + 63;
  v24 = v23 >> 6;
  v25 = 8 * (v23 >> 6);
  if (v22 < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v23 >> 6), 8), (_DWORD)isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v32 - ((v25 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v25);
    sub_1000A56CC((unint64_t *)((char *)&v32 - ((v25 + 15) & 0x3FFFFFFFFFFFFFF0)), v24, v2, v13, v38);
    v27 = v26;
    swift_release(v2);
    swift_bridgeObjectRelease(v38[0]);
  }
  else
  {
    v28 = (void *)swift_slowAlloc(v25, -1);
    memcpy(v28, (const void *)(v2 + 56), v25);
    sub_1000A56CC((unint64_t *)v28, v24, v2, v13, v38);
    v27 = v29;
    swift_release(v2);
    swift_bridgeObjectRelease(v38[0]);
    swift_slowDealloc(v28, -1, -1);
  }
  return (void *)v27;
}

void *sub_1000A4F88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t *v14;
  DARootViewController *v15;
  uint64_t v16;
  Swift::Int v17;
  const char *v18;
  void *v19;
  int v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  BOOL v32;
  uint64_t isStackAllocationSafe;
  char v34;
  unsigned int v35;
  unint64_t v36;
  uint64_t v37;
  size_t v38;
  uint64_t v39;
  uint64_t v40;
  SEL v41;
  id v42;
  int v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  SEL v50;
  id v51;
  int v52;
  id v53;
  id v54;
  id v55;
  id v56;
  _QWORD v58[2];
  _QWORD v59[9];
  DARootViewController *v60;
  uint64_t v61;

  v2 = a2;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }
  v60 = (DARootViewController *)a1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = a2 + 56;
    v58[0] = a1 + 32;
    swift_bridgeObjectRetain(a1);
    v6 = 0;
    while (1)
    {
      v14 = (uint64_t *)(v58[0] + 16 * v6);
      v16 = *v14;
      v15 = (DARootViewController *)v14[1];
      ++v6;
      Hasher.init(_seed:)(v59, *(_QWORD *)(v2 + 40));
      swift_bridgeObjectRetain(v15);
      String.hash(into:)(v59, v16, v15);
      v17 = Hasher._finalize()();
      v25 = -1 << *(_BYTE *)(v2 + 32);
      v26 = v17 & ~v25;
      if (((*(_QWORD *)(v5 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
      {
        v27 = *(_QWORD *)(v2 + 48);
        v28 = (_QWORD *)(v27 + 16 * v26);
        v18 = (const char *)v28[1];
        v29 = *v28 == v16 && v18 == (const char *)v15;
        if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v18, v16, v15, 0) & 1) != 0)
        {
          swift_bridgeObjectRelease(v15, v18, v19, v20, v21, v22, v23, v24);
          v61 = v6;
LABEL_19:
          v34 = *(_BYTE *)(v2 + 32);
          v35 = v34 & 0x3F;
          v36 = (1 << v34) + 63;
          v37 = v36 >> 6;
          v38 = 8 * (v36 >> 6);
          if (v35 < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v36 >> 6), 8),
                (_DWORD)isStackAllocationSafe))
          {
            __chkstk_darwin(isStackAllocationSafe);
            memcpy((char *)v58 - ((v38 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v38);
            sub_1000A59A0((_QWORD *)((char *)v58 - ((v38 + 15) & 0x3FFFFFFFFFFFFFF0)), v37, v2, v26, &v60);
            v40 = v39;
            swift_release(v2);
            swift_bridgeObjectRelease(v60, v41, v42, v43, v44, v45, v46, v47);
          }
          else
          {
            v48 = (void *)swift_slowAlloc(v38, -1);
            memcpy(v48, (const void *)(v2 + 56), v38);
            sub_1000A59A0((unint64_t *)v48, v37, v2, v26, &v60);
            v40 = v49;
            swift_release(v2);
            swift_bridgeObjectRelease(v60, v50, v51, v52, v53, v54, v55, v56);
            swift_slowDealloc(v48, -1, -1);
          }
          return (void *)v40;
        }
        v30 = ~v25;
        while (1)
        {
          v26 = (v26 + 1) & v30;
          if (((*(_QWORD *)(v5 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
            break;
          v31 = (_QWORD *)(v27 + 16 * v26);
          v18 = (const char *)v31[1];
          v32 = *v31 == v16 && v18 == (const char *)v15;
          if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v31, v18, v16, v15, 0) & 1) != 0)
          {
            v61 = v6;
            swift_bridgeObjectRelease(v15, v18, v19, v20, v21, v22, v23, v24);
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease(v15, v18, v19, v20, v21, v22, v23, v24);
      if (v6 == v4)
      {
        swift_bridgeObjectRelease((DARootViewController *)a1, v7, v8, v9, v10, v11, v12, v13);
        return (void *)v2;
      }
    }
  }
  return (void *)v2;
}

unint64_t *sub_1000A5294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t isStackAllocationSafe;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  size_t v26;
  unint64_t *v27;
  void *v28;
  unint64_t *v29;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;
  uint64_t v41[5];

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(a1 + 56);
    v41[0] = a1;
    v41[1] = a1 + 56;
    v34 = ~v5;
    v41[2] = ~v5;
    v8 = a2 + 56;
    v9 = 0;
    v35 = (unint64_t)(63 - v5) >> 6;
    v33 = v35 - 6;
    v32 = swift_bridgeObjectRetain(a1) + 104;
    while (1)
    {
      if (v7)
      {
        v10 = (v7 - 1) & v7;
        v11 = __clz(__rbit64(v7)) | (v9 << 6);
        v12 = v9;
      }
      else
      {
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
          __break(1u);
        if (v13 >= v35)
          goto LABEL_36;
        v14 = *(_QWORD *)(v4 + 8 * v13);
        v12 = v9 + 1;
        if (!v14)
        {
          v12 = v9 + 2;
          if (v9 + 2 >= v35)
            goto LABEL_36;
          v14 = *(_QWORD *)(v4 + 8 * v12);
          if (!v14)
          {
            v12 = v9 + 3;
            if (v9 + 3 >= v35)
              goto LABEL_36;
            v14 = *(_QWORD *)(v4 + 8 * v12);
            if (!v14)
            {
              v12 = v9 + 4;
              if (v9 + 4 >= v35)
                goto LABEL_36;
              v14 = *(_QWORD *)(v4 + 8 * v12);
              if (!v14)
              {
                v12 = v9 + 5;
                if (v9 + 5 >= v35)
                  goto LABEL_36;
                v14 = *(_QWORD *)(v4 + 8 * v12);
                if (!v14)
                {
                  v15 = v9;
                  while (v33 != v15)
                  {
                    v14 = *(_QWORD *)(v32 + 8 * v15++);
                    if (v14)
                    {
                      v12 = v15 + 5;
                      goto LABEL_24;
                    }
                  }
LABEL_36:
                  v38 = 0;
                  v36 = 0u;
                  v37 = 0u;
LABEL_37:
                  sub_100040800(a1);
                  sub_100036FA0((uint64_t)&v36, &qword_10016D5E0);
                  return (unint64_t *)v2;
                }
              }
            }
          }
        }
LABEL_24:
        v10 = (v14 - 1) & v14;
        v11 = __clz(__rbit64(v14)) + (v12 << 6);
      }
      sub_100074074(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)&v36);
      if (!*((_QWORD *)&v37 + 1))
        goto LABEL_37;
      v39[0] = v36;
      v39[1] = v37;
      v40 = v38;
      v16 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
      v17 = -1 << *(_BYTE *)(v2 + 32);
      v18 = v16 & ~v17;
      if (((*(_QWORD *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
        break;
LABEL_6:
      sub_100036FDC((uint64_t)v39);
      v7 = v10;
      v9 = v12;
    }
    v19 = ~v17;
    while (1)
    {
      sub_100074074(*(_QWORD *)(v2 + 48) + 40 * v18, (uint64_t)&v36);
      v20 = static AnyHashable.== infix(_:_:)(&v36, v39);
      sub_100036FDC((uint64_t)&v36);
      if ((v20 & 1) != 0)
        break;
      v18 = (v18 + 1) & v19;
      if (((*(_QWORD *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        goto LABEL_6;
    }
    v41[3] = v12;
    v41[4] = v10;
    isStackAllocationSafe = sub_100036FDC((uint64_t)v39);
    v22 = *(_BYTE *)(v2 + 32);
    v23 = v22 & 0x3F;
    v24 = (1 << v22) + 63;
    v25 = v24 >> 6;
    v26 = 8 * (v24 >> 6);
    if (v23 <= 0xD
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v24 >> 6), 8), (_DWORD)isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v31 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v26);
      v27 = sub_1000A5BC8((unint64_t *)((char *)&v31 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0)), v25, v2, v18, v41);
      swift_release(v2);
      sub_100040800(v41[0]);
      return v27;
    }
    else
    {
      v28 = (void *)swift_slowAlloc(v26, -1);
      memcpy(v28, (const void *)(v2 + 56), v26);
      v29 = sub_1000A5BC8((unint64_t *)v28, v25, v2, v18, v41);
      swift_release(v2);
      sub_100040800(v41[0]);
      swift_slowDealloc(v28, -1, -1);
      return v29;
    }
  }
  else
  {
    swift_release(a2);
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

void sub_1000A56CC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  unint64_t i;
  unint64_t v25;
  id v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;

  v5 = a5;
  v7 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v37 = v7 - 1;
  v9 = *a5;
  v8 = a5[1];
  if ((unint64_t)*a5 >> 62)
  {
    if (v9 < 0)
      v10 = *a5;
    else
      v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*a5);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v9);
    if (v8 == v11)
      goto LABEL_3;
  }
  else if (v8 == *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_retain(a3);
    sub_1000C7698(a1, a2, v37, a3);
    return;
  }
  v39 = a3 + 56;
  v38 = v5;
  while (1)
  {
    v12 = *v5;
    v13 = v5[1];
    if ((*v5 & 0xC000000000000001) != 0)
    {
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5[1], v12);
      v32 = v5[1];
      v15 = v32 + 1;
      if (__OFADD__(v32, 1))
        goto LABEL_40;
      goto LABEL_13;
    }
    if ((v13 & 0x8000000000000000) != 0)
      break;
    if (v13 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_39;
    v14 = *(id *)(v12 + 8 * v13 + 32);
    v15 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_40;
LABEL_13:
    v5[1] = v15;
    v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a3 + 40));
    v17 = -1 << *(_BYTE *)(a3 + 32);
    v18 = v16 & ~v17;
    v19 = v18 >> 6;
    v20 = 1 << v18;
    if (((1 << v18) & *(_QWORD *)(v39 + 8 * (v18 >> 6))) == 0)
      goto LABEL_20;
    sub_100037118(0, (unint64_t *)&unk_10016D870, NSError_ptr);
    v21 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v18);
    v22 = static NSObject.== infix(_:_:)(v21);

    if ((v22 & 1) == 0)
    {
      v23 = ~v17;
      for (i = v18 + 1; ; i = v25 + 1)
      {
        v25 = i & v23;
        if (((*(_QWORD *)(v39 + (((i & v23) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v23)) & 1) == 0)
          break;
        v26 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v25);
        v27 = static NSObject.== infix(_:_:)(v26);

        if ((v27 & 1) != 0)
        {

          v19 = v25 >> 6;
          v20 = 1 << v25;
          goto LABEL_22;
        }
      }
LABEL_20:

LABEL_26:
      v5 = v38;
      goto LABEL_27;
    }

LABEL_22:
    v28 = a1[v19];
    a1[v19] = v28 & ~v20;
    if ((v20 & v28) == 0)
      goto LABEL_26;
    v5 = v38;
    v29 = v37 - 1;
    if (__OFSUB__(v37, 1))
      goto LABEL_41;
    --v37;
    if (!v29)
      return;
LABEL_27:
    v31 = *v5;
    v30 = v5[1];
    if ((unint64_t)*v5 >> 62)
    {
      if (v31 < 0)
        v33 = *v5;
      else
        v33 = v31 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v5);
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);
      swift_bridgeObjectRelease(v31);
      if (v30 == v34)
        goto LABEL_3;
    }
    else if (v30 == *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_1000A59A0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  DARootViewController *v12;
  uint64_t v13;
  Swift::Int v14;
  const char *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v38;
  _QWORD v39[9];
  uint64_t v40;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v38 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain(a3);
    sub_1000C7BB4(a1, a2, v38, a3);
    return;
  }
  v40 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_29;
    v11 = v8 + 16 * v7;
    v13 = *(_QWORD *)(v11 + 32);
    v12 = *(DARootViewController **)(v11 + 40);
    a5[1] = v7 + 1;
    Hasher.init(_seed:)(v39, *(_QWORD *)(a3 + 40));
    swift_bridgeObjectRetain(v12);
    String.hash(into:)(v39, v13, v12);
    v14 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(a3 + 32);
    v23 = v14 & ~v22;
    v24 = v23 >> 6;
    v25 = 1 << v23;
    if (((1 << v23) & *(_QWORD *)(v40 + 8 * (v23 >> 6))) == 0)
      goto LABEL_4;
    v26 = *(_QWORD *)(a3 + 48);
    v27 = (_QWORD *)(v26 + 16 * v23);
    v15 = (const char *)v27[1];
    v28 = *v27 == v13 && v15 == (const char *)v12;
    if (!v28 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v27, v15, v13, v12, 0) & 1) == 0)
    {
      v31 = ~v22;
      for (i = v23 + 1; ; i = v33 + 1)
      {
        v33 = i & v31;
        if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
          break;
        v34 = (_QWORD *)(v26 + 16 * v33);
        v15 = (const char *)v34[1];
        v35 = *v34 == v13 && v15 == (const char *)v12;
        if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v34, v15, v13, v12, 0) & 1) != 0)
        {
          swift_bridgeObjectRelease(v12, v15, v16, v17, v18, v19, v20, v21);
          v24 = v33 >> 6;
          v25 = 1 << v33;
          goto LABEL_15;
        }
      }
LABEL_4:
      swift_bridgeObjectRelease(v12, v15, v16, v17, v18, v19, v20, v21);
      goto LABEL_5;
    }
    swift_bridgeObjectRelease(v12, v15, v16, v17, v18, v19, v20, v21);
LABEL_15:
    v29 = a1[v24];
    a1[v24] = v29 & ~v25;
    if ((v25 & v29) != 0)
    {
      v30 = v38 - 1;
      if (__OFSUB__(v38, 1))
        goto LABEL_30;
      --v38;
      if (!v30)
        return;
    }
LABEL_5:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

unint64_t *sub_1000A5BC8(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  uint64_t v37;

  v7 = *(_QWORD *)(a3 + 16);
  v31 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v37 = v7 - 1;
  v8 = a3 + 56;
  while (1)
  {
    v9 = *a5;
    v10 = a5[1];
    v12 = a5[2];
    v11 = a5[3];
    v13 = a5[4];
    if (!v13)
      break;
    v14 = (v13 - 1) & v13;
    v15 = __clz(__rbit64(v13)) | (v11 << 6);
LABEL_21:
    sub_100074074(*(_QWORD *)(v9 + 48) + 40 * v15, (uint64_t)&v32);
    v21 = *((_QWORD *)&v33 + 1);
    *a5 = v9;
    a5[1] = v10;
    a5[2] = v12;
    a5[3] = v11;
    a5[4] = v14;
    if (!v21)
      goto LABEL_32;
    v35[0] = v32;
    v35[1] = v33;
    v36 = v34;
    v22 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(a3 + 40));
    v23 = -1 << *(_BYTE *)(a3 + 32);
    v24 = v22 & ~v23;
    if (((*(_QWORD *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
    {
      v25 = ~v23;
      while (1)
      {
        sub_100074074(*(_QWORD *)(a3 + 48) + 40 * v24, (uint64_t)&v32);
        v26 = static AnyHashable.== infix(_:_:)(&v32, v35);
        sub_100036FDC((uint64_t)&v32);
        if ((v26 & 1) != 0)
          break;
        v24 = (v24 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
          goto LABEL_2;
      }
      result = (unint64_t *)sub_100036FDC((uint64_t)v35);
      v27 = (v24 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v28 = *(unint64_t *)((char *)v31 + v27);
      *(unint64_t *)((char *)v31 + v27) = v28 & ~(1 << v24);
      if ((v28 & (1 << v24)) != 0)
      {
        v29 = v37 - 1;
        if (__OFSUB__(v37, 1))
          goto LABEL_34;
        --v37;
        if (!v29)
          return (unint64_t *)&_swiftEmptySetSingleton;
      }
    }
    else
    {
LABEL_2:
      result = (unint64_t *)sub_100036FDC((uint64_t)v35);
    }
  }
  v16 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    v17 = (unint64_t)(v12 + 64) >> 6;
    v18 = a5[3];
    if (v16 >= v17)
      goto LABEL_31;
    v19 = *(_QWORD *)(v10 + 8 * v16);
    if (!v19)
    {
      v18 = v11 + 1;
      if (v11 + 2 >= v17)
        goto LABEL_31;
      v19 = *(_QWORD *)(v10 + 8 * (v11 + 2));
      if (v19)
      {
        v16 = v11 + 2;
      }
      else
      {
        v18 = v11 + 2;
        if (v11 + 3 >= v17)
          goto LABEL_31;
        v19 = *(_QWORD *)(v10 + 8 * (v11 + 3));
        if (v19)
        {
          v16 = v11 + 3;
        }
        else
        {
          v16 = v11 + 4;
          v18 = v11 + 3;
          if (v11 + 4 >= v17)
            goto LABEL_31;
          v19 = *(_QWORD *)(v10 + 8 * v16);
          if (!v19)
          {
            v18 = v17 - 1;
            v20 = v11 + 5;
            while (v17 != v20)
            {
              v19 = *(_QWORD *)(v10 + 8 * v20++);
              if (v19)
              {
                v16 = v20 - 1;
                goto LABEL_20;
              }
            }
LABEL_31:
            v34 = 0;
            v32 = 0u;
            v33 = 0u;
            *a5 = v9;
            a5[1] = v10;
            a5[2] = v12;
            a5[3] = v18;
            a5[4] = 0;
LABEL_32:
            sub_100036FA0((uint64_t)&v32, &qword_10016D5E0);
            swift_retain(a3);
            return (unint64_t *)sub_1000C7E48(v31, a2, v37, a3);
          }
        }
      }
    }
LABEL_20:
    v14 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v16 << 6);
    v11 = v16;
    goto LABEL_21;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1000A5E88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 28, 7);
}

void sub_1000A5EAC()
{
  uint64_t v0;

  sub_1000454F4(*(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24));
}

uint64_t sub_1000A5EB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A5EC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A5EEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A5EFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000A5F28()
{
  uint64_t v0;

  sub_1000A3CF0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1000A5F30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  _BYTE v14[40];
  _OWORD v15[2];
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_24;
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    sub_100074074(*(_QWORD *)(a1 + 48) + 40 * v10, (uint64_t)v17);
    v15[0] = v17[0];
    v15[1] = v17[1];
    v16 = v18;
    sub_1000A7DA8((uint64_t)v15, (uint64_t)v14);
    sub_100036FA0((uint64_t)v14, &qword_10016D5E0);
    sub_100036FDC((uint64_t)v15);
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1000A60D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100035CA4((uint64_t *)&unk_10016C2E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A611C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A6140()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_1000A6150(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1000A471C(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

double sub_1000A6158(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  NSString v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  double result;
  os_log_type_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30[5];
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];

  swift_beginAccess(a5 + 56, v33, 0, 0);
  v10 = *(_QWORD *)(a5 + 56);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = swift_retain(a6);
  if (v11)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v10);
    v13 = sub_100072A94(a1, a2);
    if ((v14 & 1) != 0)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v13);
      swift_unknownObjectRetain(v15);
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v10);
      v16 = objc_opt_self(DADeviceLocal);
      v17 = swift_dynamicCastObjCClass(v15, v16);
      if (v17)
      {
        v18 = (void *)v17;
        v19 = String._bridgeToObjectiveC()();
        v20 = swift_allocObject(&unk_10013A8A8, 32, 7);
        *(_QWORD *)(v20 + 16) = sub_1000A6688;
        *(_QWORD *)(v20 + 24) = a6;
        v30[4] = (uint64_t)sub_1000370F8;
        v31 = v20;
        v30[0] = (uint64_t)_NSConcreteStackBlock;
        v30[1] = 1107296256;
        v30[2] = (uint64_t)sub_1000A4338;
        v30[3] = (uint64_t)&unk_10013A8C0;
        v21 = _Block_copy(v30);
        v22 = v31;
        swift_retain(a6);
        objc_msgSend(v18, "getAsset:completion:", v19, v21, swift_release(v22).n128_f64[0]);
        _Block_release(v21);
        swift_release(a6);
        swift_unknownObjectRelease(v15);

        return result;
      }
      v12 = swift_unknownObjectRelease(v15);
    }
    else
    {
      swift_bridgeObjectRelease(a2);
      v12 = swift_bridgeObjectRelease(v10);
    }
  }
  v24 = static os_log_type_t.error.getter(v12);
  sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
  v25 = swift_bridgeObjectRetain_n(a2, 2);
  v26 = static OS_os_log.default.getter(v25);
  v27 = v24;
  if (os_log_type_enabled(v26, v24))
  {
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v30[0] = v29;
    *(_DWORD *)v28 = 136315138;
    swift_bridgeObjectRetain(a2);
    v32 = sub_10004711C(a1, a2, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Unable to find the device with %s serial number or the device is not local", v28, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a2, 2);
  }

  sub_1000656D4(0, 0xF000000000000000, a6);
  *(_QWORD *)&result = swift_release(a6).n128_u64[0];
  return result;
}

double sub_1000A6464(void *a1, char a2, uint64_t a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  DARootViewController *v12;
  DARootViewController *v13;
  const char *v14;
  void *v15;
  int v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  DARootViewController *v27;
  DARootViewController *v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  SEL v36;
  id v37;
  int v38;
  id v39;
  id v40;
  id v41;
  id v42;
  double result;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];
  _BYTE v48[24];
  uint64_t v49;

  v8 = swift_allocObject(&unk_10013A880, 24, 7);
  *(_QWORD *)(v8 + 16) = a4;
  _Block_copy(a4);
  v9 = objc_msgSend(a1, "state");
  v10 = objc_msgSend(v9, "suiteName");

  if (v10)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    swift_beginAccess(a3 + 16, v47, 0, 0);
    sub_1000A60D4(a3 + 16, (uint64_t)v48);
    if (v49)
    {
      sub_10003CE84((uint64_t)v48, (uint64_t)v44);
      sub_100036FA0((uint64_t)v48, (uint64_t *)&unk_10016C2E0);
      v21 = a2;
      v23 = v45;
      v22 = v46;
      sub_10003CEC8(v44, v45);
      v24 = objc_msgSend(a1, "state");
      v25 = objc_msgSend(v24, "serialNumber");

      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      (*(void (**)(uint64_t, uint64_t, DARootViewController *, _QWORD, uint64_t, DARootViewController *, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v22 + 8))(a3, v11, v13, v21 & 1, v26, v28, sub_1000A6674, v8, v23, v22);
      swift_bridgeObjectRelease(v28, v29, v30, v31, v32, v33, v34, v35);
      swift_bridgeObjectRelease(v13, v36, v37, v38, v39, v40, v41, v42);
      sub_10003CEEC(v44);
    }
    else
    {
      swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
      sub_100036FA0((uint64_t)v48, (uint64_t *)&unk_10016C2E0);
    }
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  else
  {
    a4[2](a4, 1);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000A6674(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_1000A6688(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000656D4(a1, a2, v2);
}

id sub_1000A66DC()
{
  uint64_t v0;
  _QWORD *v1;
  id result;

  v0 = type metadata accessor for UIImageAsyncLoader();
  v1 = (_QWORD *)swift_allocObject(v0, 48, 7);
  v1[2] = &_swiftEmptySetSingleton;
  v1[3] = &_swiftEmptySetSingleton;
  v1[4] = 10;
  result = objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
  v1[5] = result;
  qword_1001723C0 = (uint64_t)v1;
  return result;
}

_QWORD *sub_1000A6740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  dispatch_semaphore_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;

  v2 = v1;
  v4 = type metadata accessor for DispatchTimeInterval(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v19 - v13;
  v20 = _swiftEmptyArrayStorage;
  v15 = dispatch_semaphore_create(0);
  v16 = sub_1000AF914(a1, v2, &v20, (uint64_t)v15);
  static DispatchTime.now()(v16);
  *v7 = 10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchTimeInterval.seconds(_:), v4);
  + infix(_:_:)(v12, v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  OS_dispatch_semaphore.wait(timeout:)(v14);

  v17(v14, v8);
  return v20;
}

uint64_t sub_1000A68BC(void *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t result;
  _QWORD *v10;

  if (a2 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = sub_100035CA4(&qword_10016D738);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v5[2] = a2;
      v10 = v5;
      v5[4] = a1;
      if (a2 != 1)
      {
        v5[5] = a1;
        v6 = a2 - 2;
        if (v6)
        {
          v7 = v5 + 6;
          do
          {
            *v7++ = a1;
            v8 = a1;
            --v6;
          }
          while (v6);
        }
        v5 = a1;
      }
    }
    else
    {
      v10 = _swiftEmptyArrayStorage;

    }
    specialized Array._endMutation()(v5);
    return (uint64_t)v10;
  }
  return result;
}

void sub_1000A69AC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, NSObject *a5)
{
  uint64_t *v8;
  uint64_t v9;
  id v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  SEL v25;
  id v26;
  int v27;
  id v28;
  id v29;
  id v30;
  id v31;
  _BYTE v32[24];
  _QWORD v33[3];
  _BYTE v34[8];

  if (!a1)
  {
    if (a2)
    {
      v16 = swift_errorRetain(a2);
      v17 = static os_log_type_t.error.getter(v16);
      v18 = sub_100035CA4((uint64_t *)&unk_10016BE40);
      v19 = swift_allocObject(v18, 72, 7);
      *(_OWORD *)(v19 + 16) = xmmword_10010BE30;
      swift_getErrorValue(a2, v34, v33);
      v20 = Error.localizedDescription.getter(v33[1], v33[2]);
      v22 = v21;
      *(_QWORD *)(v19 + 56) = &type metadata for String;
      *(_QWORD *)(v19 + 64) = sub_100047048();
      *(_QWORD *)(v19 + 32) = v20;
      *(_QWORD *)(v19 + 40) = v22;
      v23 = sub_100037118(0, (unint64_t *)&qword_10016B180, OS_os_log_ptr);
      v24 = (void *)static OS_os_log.default.getter(v23);
      os_log(_:dso:log:_:_:)(v17, &_mh_execute_header, v24, "Icon loading error occurred: %@", 31, 2, v19);
      swift_bridgeObjectRelease((DARootViewController *)v19, v25, v26, v27, v28, v29, v30, v31);

      swift_errorRelease(a2);
    }
    goto LABEL_8;
  }
  v8 = (uint64_t *)(a3 + 16);
  swift_beginAccess(a3 + 16, v32, 33, 0);
  v9 = *v8;
  v10 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
  *v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((a4 & 0x8000000000000000) == 0)
      goto LABEL_4;
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = sub_100034AE8(v9);
  *v8 = v9;
  if ((a4 & 0x8000000000000000) != 0)
    goto LABEL_10;
LABEL_4:
  if (*(_QWORD *)(v9 + 16) > a4)
  {
    v12 = v9 + 8 * a4;
    v13 = *(void **)(v12 + 32);
    *(_QWORD *)(v12 + 32) = a1;

    specialized Array._endMutation()(v14);
    swift_endAccess(v32);

LABEL_8:
    dispatch_group_leave(a5);
    return;
  }
LABEL_11:
  __break(1u);
}

id sub_1000A6B58(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v6 = sub_100035CA4(&qword_10016D710);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(a3 + 40);
  objc_msgSend(v10, "lock");
  v11 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v11 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v11)
    return objc_msgSend(v10, "unlock");
  v12 = type metadata accessor for ImageLoader(0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v23 = 0;
  v24 = 2;
  swift_bridgeObjectRetain(a2);
  Published.init(initialValue:)(&v23, &type metadata for AsyncImagePhase);
  v14 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
  *(_QWORD *)(v13 + v14) = objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
  *(_BYTE *)(v13 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
  v15 = (_QWORD *)(v13 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  *v15 = a1;
  v15[1] = a2;
  swift_beginAccess(v13 + OBJC_IVAR____TtC11Diagnostics11ImageLoader__phase, &v23, 33, 0);
  v16 = sub_100035CA4(&qword_10016C120);
  Published.projectedValue.getter(v16);
  swift_endAccess(&v23);
  v17 = (_QWORD *)swift_allocObject(&unk_10013A948, 48, 7);
  v17[2] = Int.id.getter;
  v17[3] = 0;
  v17[4] = a3;
  v17[5] = v13;
  v18 = sub_1000A71BC();
  swift_retain(a3);
  swift_retain(v13);
  v19 = Publisher<>.sink(receiveValue:)(sub_1000B1FD4, v17, v6, v18);
  v20 = swift_release(v17);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v20);
  swift_beginAccess(a3 + 16, &v23, 33, 0);
  AnyCancellable.store(in:)(a3 + 16);
  swift_endAccess(&v23);
  swift_release(v19);
  swift_beginAccess(a3 + 24, &v23, 33, 0);
  swift_retain(v13);
  sub_1000A89F8(&v22, v13);
  swift_endAccess(&v23);
  swift_release(v22);
  sub_100065014();
  return objc_msgSend(v10, "unlock", swift_release(v13).n128_f64[0]);
}

id sub_1000A6DFC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v6 = sub_100035CA4(&qword_10016D710);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(a3 + 40);
  objc_msgSend(v10, "lock");
  v11 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v11 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v11)
    return objc_msgSend(v10, "unlock");
  v12 = type metadata accessor for ImageLoader(0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v23 = 0;
  v24 = 2;
  swift_bridgeObjectRetain(a2);
  Published.init(initialValue:)(&v23, &type metadata for AsyncImagePhase);
  v14 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
  *(_QWORD *)(v13 + v14) = objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
  *(_BYTE *)(v13 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
  v15 = (_QWORD *)(v13 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  *v15 = a1;
  v15[1] = a2;
  swift_beginAccess(v13 + OBJC_IVAR____TtC11Diagnostics11ImageLoader__phase, &v23, 33, 0);
  v16 = sub_100035CA4(&qword_10016C120);
  Published.projectedValue.getter(v16);
  swift_endAccess(&v23);
  v17 = (_QWORD *)swift_allocObject(&unk_10013A920, 48, 7);
  v17[2] = Int.id.getter;
  v17[3] = 0;
  v17[4] = a3;
  v17[5] = v13;
  v18 = sub_1000A71BC();
  swift_retain(a3);
  swift_retain(v13);
  v19 = Publisher<>.sink(receiveValue:)(sub_1000A71B0, v17, v6, v18);
  v20 = swift_release(v17);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v20);
  swift_beginAccess(a3 + 16, &v23, 33, 0);
  AnyCancellable.store(in:)(a3 + 16);
  swift_endAccess(&v23);
  swift_release(v19);
  swift_beginAccess(a3 + 24, &v23, 33, 0);
  swift_retain(v13);
  sub_1000A89F8(&v22, v13);
  swift_endAccess(&v23);
  swift_release(v22);
  sub_100065014();
  return objc_msgSend(v10, "unlock", swift_release(v13).n128_f64[0]);
}

double sub_1000A70A0(uint64_t a1, void (*a2)(void *, void *), uint64_t a3, uint64_t a4, const char *a5)
{
  void *v8;
  int v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  double result;
  _BYTE v15[24];

  v8 = *(void **)a1;
  v9 = *(unsigned __int8 *)(a1 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    v12 = v8;
    v10 = v8;
    v11 = 0;
    goto LABEL_5;
  }
  if (v9 == 1)
  {
    swift_errorRetain(*(_QWORD *)a1);
    v10 = 0;
    v11 = v8;
LABEL_5:
    a2(v10, v11);
    sub_100048A04(v8, v9);
  }
  swift_beginAccess(a4 + 24, v15, 33, 0);
  v13 = sub_1000A7F08(a5);
  swift_endAccess(v15);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_1000A7158()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for UIImageAsyncLoader()
{
  return objc_opt_self(_TtC11Diagnostics18UIImageAsyncLoader);
}

double sub_1000A71B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1000A70A0(a1, *(void (**)(void *, void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(const char **)(v1 + 40));
}

unint64_t sub_1000A71BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10016D718;
  if (!qword_10016D718)
  {
    v1 = sub_100035D30(&qword_10016D710);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_10016D718);
  }
  return result;
}

Swift::Int sub_1000A7208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_100035CA4(&qword_10016D760);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()();
    if (v6)
    {
      v7 = v6;
      v8 = sub_100037118(0, (unint64_t *)&unk_10016D870, NSError_ptr);
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_1000A9C50(v16 + 1);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()();
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_1000A73FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[9];
  uint64_t v24;
  uint64_t v25;

  if (a2)
  {
    sub_100035CA4(&qword_10016D720);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v25 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for ImageLoader(0);
      do
      {
        v23[0] = v7;
        swift_dynamicCast(&v24, v23, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v25;
        v18 = *(_QWORD *)(v25 + 16);
        if (*(_QWORD *)(v25 + 24) <= v18)
        {
          sub_1000A9EEC(v18 + 1);
          v4 = v25;
        }
        v9 = v24;
        Hasher.init(_seed:)(v23, *(_QWORD *)(v4 + 40));
        v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
        v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8);
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v23, v10, v11);
        swift_bridgeObjectRelease(v11);
        result = Hasher._finalize()();
        v13 = v4 + 56;
        v14 = -1 << *(_BYTE *)(v4 + 32);
        v15 = result & ~v14;
        v16 = v15 >> 6;
        if (((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6))) != 0)
        {
          v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v19 = 0;
          v20 = (unint64_t)(63 - v14) >> 6;
          do
          {
            if (++v16 == v20 && (v19 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v21 = v16 == v20;
            if (v16 == v20)
              v16 = 0;
            v19 |= v21;
            v22 = *(_QWORD *)(v13 + 8 * v16);
          }
          while (v22 == -1);
          v17 = __clz(__rbit64(~v22)) + (v16 << 6);
        }
        *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_1000A7624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[9];
  uint64_t v26;
  uint64_t v27;

  if (a2)
  {
    sub_100035CA4(&qword_10016D740);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v27 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for CardState();
      do
      {
        v25[0] = v7;
        swift_dynamicCast(&v26, v25, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v27;
        v20 = *(_QWORD *)(v27 + 16);
        if (*(_QWORD *)(v27 + 24) <= v20)
        {
          sub_1000AA4DC(v20 + 1);
          v4 = v27;
        }
        v9 = v26;
        Hasher.init(_seed:)(v25, *(_QWORD *)(v4 + 40));
        v10 = objc_msgSend(*(id *)(v9 + 40), "serialNumber");
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v13 = v12;

        String.hash(into:)(v25, v11, v13);
        swift_bridgeObjectRelease(v13);
        result = Hasher._finalize()();
        v15 = v4 + 56;
        v16 = -1 << *(_BYTE *)(v4 + 32);
        v17 = result & ~v16;
        v18 = v17 >> 6;
        if (((-1 << v17) & ~*(_QWORD *)(v4 + 56 + 8 * (v17 >> 6))) != 0)
        {
          v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v4 + 56 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v21 = 0;
          v22 = (unint64_t)(63 - v16) >> 6;
          do
          {
            if (++v18 == v22 && (v21 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v23 = v18 == v22;
            if (v18 == v22)
              v18 = 0;
            v21 |= v23;
            v24 = *(_QWORD *)(v15 + 8 * v18);
          }
          while (v24 == -1);
          v19 = __clz(__rbit64(~v24)) + (v18 << 6);
        }
        *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v19) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

uint64_t sub_1000A7860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  char v35;
  uint64_t *v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[9];

  v45 = a2;
  v4 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v51 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v43 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v43 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v43 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v43 - v17;
  v43 = v2;
  v19 = *v2;
  Hasher.init(_seed:)(v52, *(_QWORD *)(*v2 + 40));
  v20 = *(void **)a1;
  swift_bridgeObjectRetain(v19);
  v21 = v20;
  NSObject.hash(into:)(v52);

  Hasher._combine(_:)(*(unsigned __int8 *)(a1 + 8));
  Hasher._combine(_:)(*(_QWORD *)(a1 + 16));
  v46 = v4;
  v22 = type metadata accessor for Date(0);
  v23 = sub_1000AF8CC();
  dispatch thunk of Hashable.hash(into:)(v52, v22, v23);
  v24 = Hasher._finalize()();
  v25 = -1 << *(_BYTE *)(v19 + 32);
  v26 = v24 & ~v25;
  v27 = v19;
  v28 = v19 + 56;
  if (((*(_QWORD *)(v28 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
  {
    v49 = ~v25;
    v50 = v27;
    v44 = v5;
    v29 = *(_QWORD *)(v5 + 72);
    while (1)
    {
      v31 = *(_QWORD *)(v27 + 48);
      v48 = v29 * v26;
      sub_100037010(v31 + v29 * v26, (uint64_t)v18);
      v32 = v18[8];
      v33 = *(unsigned __int8 *)(a1 + 8);
      sub_100037010((uint64_t)v18, (uint64_t)v16);
      sub_100037010(a1, (uint64_t)v13);
      if (v32 != v33)
        break;
      v47 = *((_QWORD *)v16 + 2);
      v34 = *((_QWORD *)v13 + 2);
      sub_100036DC0((uint64_t)v13);
      sub_100036DC0((uint64_t)v16);
      sub_100037010((uint64_t)v18, (uint64_t)v10);
      v30 = v51;
      sub_100037010(a1, v51);
      if (v47 != v34)
        goto LABEL_4;
      v35 = static Date.== infix(_:_:)(&v10[*(int *)(v46 + 28)], v30 + *(int *)(v46 + 28));
      sub_100036DC0(v30);
      sub_100036DC0((uint64_t)v10);
      sub_100036DC0((uint64_t)v18);
      if ((v35 & 1) != 0)
      {
        swift_bridgeObjectRelease(v50);
        v36 = v43;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v43);
        v38 = *v36;
        v52[0] = *v36;
        *v36 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000AC410();
          v38 = v52[0];
        }
        v39 = v45;
        sub_100036D7C(*(_QWORD *)(v38 + 48) + v48, v45);
        sub_1000AEEB8(v26);
        v40 = *v36;
        *v36 = v52[0];
        swift_bridgeObjectRelease(v40);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v39, 0, 1, v46);
      }
LABEL_5:
      v27 = v50;
      v26 = (v26 + 1) & v49;
      if (((*(_QWORD *)(v28 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      {
        swift_bridgeObjectRelease(v50);
        v5 = v44;
        v42 = v45;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v42, 1, 1, v46);
      }
    }
    sub_100036DC0((uint64_t)v13);
    sub_100036DC0((uint64_t)v16);
    sub_100037010((uint64_t)v18, (uint64_t)v10);
    v30 = v51;
    sub_100037010(a1, v51);
LABEL_4:
    sub_100036DC0(v30);
    sub_100036DC0((uint64_t)v10);
    sub_100036DC0((uint64_t)v18);
    goto LABEL_5;
  }
  swift_bridgeObjectRelease(v27);
  v42 = v45;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v42, 1, 1, v46);
}

uint64_t sub_1000A7BD4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = a1;
    v7 = __CocoaSet.contains(_:)();

    if ((v7 & 1) != 0)
    {
      sub_1000AE868(v5, (uint64_t)v6);
      v9 = v8;
      swift_bridgeObjectRelease(v4);
      return v9;
    }
LABEL_15:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  v10 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain(v4);
  v11 = NSObject._rawHashValue(seed:)(v10);
  v12 = -1 << *(_BYTE *)(v4 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    goto LABEL_15;
  sub_100037118(0, (unint64_t *)&unk_10016D870, NSError_ptr);
  v14 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
  v15 = static NSObject.== infix(_:_:)(v14);

  if ((v15 & 1) == 0)
  {
    v16 = ~v12;
    do
    {
      v13 = (v13 + 1) & v16;
      if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
      v17 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
      v18 = static NSObject.== infix(_:_:)(v17);

    }
    while ((v18 & 1) == 0);
  }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v20 = *v2;
  v23 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000AC608();
    v20 = v23;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * v13);
  sub_1000AF178(v13);
  v21 = *v2;
  *v2 = v23;
  swift_bridgeObjectRelease(v21);
  return v9;
}

void sub_1000A7DA8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  DARootViewController **v2;
  DARootViewController **v3;
  DARootViewController *v6;
  Swift::Int isa;
  Swift::Int v8;
  const char *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  char isUniquelyReferenced_nonNull_native;
  DARootViewController *v21;
  uint64_t v22;
  __int128 v23;
  DARootViewController *v24;
  SEL v25;
  id v26;
  int v27;
  id v28;
  id v29;
  id v30;
  id v31;
  _QWORD v32[5];

  v3 = v2;
  v6 = *v3;
  isa = (Swift::Int)(*v3)[1].super.super.super.super.isa;
  swift_bridgeObjectRetain(*v3);
  v8 = AnyHashable._rawHashValue(seed:)(isa);
  v16 = -1 << v6->remoteCardFilter[16];
  v17 = v8 & ~v16;
  if (((*(_QWORD *)&v6[1].remoteCardFilter[(v17 >> 3) & 0xFFFFFFFFFFFFF8] >> v17) & 1) != 0)
  {
    v18 = ~v16;
    while (1)
    {
      sub_100074074(*(_QWORD *)v6[1].responder + 40 * v17, (uint64_t)v32);
      v19 = static AnyHashable.== infix(_:_:)(v32, a1);
      sub_100036FDC((uint64_t)v32);
      if ((v19 & 1) != 0)
        break;
      v17 = (v17 + 1) & v18;
      if (((*(_QWORD *)&v6[1].remoteCardFilter[(v17 >> 3) & 0xFFFFFFFFFFFFF8] >> v17) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease(v6, v9, v10, v11, v12, v13, v14, v15);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v21 = *v3;
    v32[0] = *v3;
    *v3 = (DARootViewController *)0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000ACFE8();
      v21 = (DARootViewController *)v32[0];
    }
    v22 = *(_QWORD *)v21[1].responder + 40 * v17;
    v23 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v22;
    *(_OWORD *)(a2 + 16) = v23;
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(v22 + 32);
    sub_1000AF318(v17);
    v24 = *v3;
    *v3 = (DARootViewController *)v32[0];
    swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v6, v9, v10, v11, v12, v13, v14, v15);
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

uint64_t sub_1000A7F08(const char *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  const char *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  const char *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  DARootViewController *v24;
  uint64_t v25;
  DARootViewController *v26;
  SEL v27;
  id v28;
  int v29;
  id v30;
  id v31;
  id v32;
  id v33;
  Swift::Int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  BOOL v44;
  _QWORD v46[9];

  v2 = v1;
  v4 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    Hasher.init(_seed:)(v46, *(_QWORD *)(v4 + 40));
    v25 = *(_QWORD *)&a1[OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator];
    v26 = *(DARootViewController **)&a1[OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8];
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v26);
    String.hash(into:)(v46, v25, v26);
    swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
    v34 = Hasher._finalize()();
    v35 = -1 << *(_BYTE *)(v4 + 32);
    v36 = v34 & ~v35;
    if (((*(_QWORD *)(v4 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0)
    {
      v37 = *(_QWORD *)(v4 + 48);
      v38 = (_QWORD *)(*(_QWORD *)(v37 + 8 * v36) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
      v8 = (const char *)v38[1];
      v39 = *v38 == v25 && v8 == (const char *)v26;
      if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v38, v8, v25, v26, 0) & 1) != 0)
      {
LABEL_13:
        swift_bridgeObjectRelease((DARootViewController *)v4, v8, v9, v10, v11, v12, v13, v14);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
        v41 = *v2;
        v46[0] = *v2;
        *v2 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1000AC960(&qword_10016D720);
          v41 = v46[0];
        }
        v23 = *(_QWORD *)(*(_QWORD *)(v41 + 48) + 8 * v36);
        sub_1000AF4E0(v36);
        v24 = (DARootViewController *)*v2;
        *v2 = v46[0];
        goto LABEL_16;
      }
      v42 = ~v35;
      while (1)
      {
        v36 = (v36 + 1) & v42;
        if (((*(_QWORD *)(v4 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
          break;
        v43 = (_QWORD *)(*(_QWORD *)(v37 + 8 * v36) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
        v8 = (const char *)v43[1];
        v44 = *v43 == v25 && v8 == (const char *)v26;
        if (v44 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v43, v8, v25, v26, 0) & 1) != 0)
          goto LABEL_13;
      }
    }
LABEL_25:
    swift_bridgeObjectRelease((DARootViewController *)v4, v8, v9, v10, v11, v12, v13, v14);
    return 0;
  }
  if (v4 < 0)
    v5 = *v2;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v6 = swift_retain(a1);
  v7 = __CocoaSet.contains(_:)(v6, v5);
  swift_release(a1);
  if ((v7 & 1) == 0)
    goto LABEL_25;
  sub_1000AEA00(v5, a1, v9, v10, v11, v12, v13, v14);
  v23 = v22;
  v24 = (DARootViewController *)v4;
LABEL_16:
  swift_bridgeObjectRelease(v24, v15, v16, v17, v18, v19, v20, v21);
  return v23;
}

uint64_t sub_1000A811C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  const char *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  const char *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  DARootViewController *v24;
  id v25;
  uint64_t v26;
  DARootViewController *v27;
  DARootViewController *v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  Swift::Int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  DARootViewController *v44;
  DARootViewController *v45;
  id v46;
  uint64_t v47;
  DARootViewController *v48;
  DARootViewController *v49;
  const char *v50;
  void *v51;
  int v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  char v58;
  SEL v59;
  id v60;
  int v61;
  id v62;
  id v63;
  id v64;
  id v65;
  SEL v66;
  id v67;
  int v68;
  id v69;
  id v70;
  id v71;
  id v72;
  char isUniquelyReferenced_nonNull_native;
  DARootViewController *v74;
  DARootViewController **v76;
  id v77;
  _QWORD v78[9];

  v2 = v1;
  v4 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v2;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v6 = swift_retain(a1);
    v7 = __CocoaSet.contains(_:)(v6, v5);
    swift_release(a1);
    if ((v7 & 1) != 0)
    {
      sub_1000AEBE0(v5, a1, v9, v10, v11, v12, v13, v14);
      v23 = v22;
      v24 = (DARootViewController *)v4;
LABEL_21:
      swift_bridgeObjectRelease(v24, v15, v16, v17, v18, v19, v20, v21);
      return v23;
    }
  }
  else
  {
    Hasher.init(_seed:)(v78, *(_QWORD *)(v4 + 40));
    v77 = *(id *)(a1 + 40);
    v25 = objc_msgSend(v77, "serialNumber", swift_bridgeObjectRetain(v4).n128_f64[0]);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    String.hash(into:)(v78, v26, v28);
    swift_bridgeObjectRelease(v28, v29, v30, v31, v32, v33, v34, v35);
    v36 = Hasher._finalize()();
    v37 = -1 << *(_BYTE *)(v4 + 32);
    v38 = v36 & ~v37;
    if (((*(_QWORD *)(v4 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) != 0)
    {
      v76 = (DARootViewController **)v2;
      v39 = ~v37;
      while (1)
      {
        v40 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v38);
        v41 = *(void **)(v40 + 40);
        swift_retain(v40);
        v42 = objc_msgSend(v41, "serialNumber");
        v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
        v45 = v44;

        v46 = objc_msgSend(v77, "serialNumber");
        v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
        v49 = v48;

        if (v43 == v47 && v45 == v49)
        {
          swift_bridgeObjectRelease((DARootViewController *)v4, v50, v51, v52, v53, v54, v55, v56);
          swift_release(v40);
          swift_bridgeObjectRelease_n(v45, 2);
          goto LABEL_18;
        }
        v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v45, v47, v49, 0);
        swift_release(v40);
        swift_bridgeObjectRelease(v45, v59, v60, v61, v62, v63, v64, v65);
        swift_bridgeObjectRelease(v49, v66, v67, v68, v69, v70, v71, v72);
        if ((v58 & 1) != 0)
          break;
        v38 = (v38 + 1) & v39;
        if (((*(_QWORD *)(v4 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
          goto LABEL_15;
      }
      swift_bridgeObjectRelease((DARootViewController *)v4, v8, v9, v10, v11, v12, v13, v14);
LABEL_18:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v76);
      v74 = *v76;
      v78[0] = *v76;
      *v76 = (DARootViewController *)0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000AC960(&qword_10016D740);
        v74 = (DARootViewController *)v78[0];
      }
      v23 = *(_QWORD *)(*(_QWORD *)v74[1].responder + 8 * v38);
      sub_1000AF6C8(v38);
      v24 = *v76;
      *v76 = (DARootViewController *)v78[0];
      goto LABEL_21;
    }
  }
LABEL_15:
  swift_bridgeObjectRelease((DARootViewController *)v4, v8, v9, v10, v11, v12, v13, v14);
  return 0;
}

uint64_t sub_1000A83B8(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = sub_100037118(0, (unint64_t *)&unk_10016D870, NSError_ptr);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_1000A7208(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_1000A9C50(v29);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_1000AB0E8((uint64_t)v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      sub_100037118(0, (unint64_t *)&unk_10016D870, NSError_ptr);
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19);

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_1000AB30C((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_1000A8654(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[9];

  v3 = v2;
  v6 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v46 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v49 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v42 - v10;
  v12 = __chkstk_darwin(v9);
  v50 = (uint64_t)&v42 - v13;
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v42 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v42 - v18;
  __chkstk_darwin(v17);
  v44 = (char *)&v42 - v20;
  v21 = *v2;
  Hasher.init(_seed:)(v51, *(_QWORD *)(*v2 + 40));
  v22 = *(void **)a2;
  swift_bridgeObjectRetain(v21);
  v23 = v22;
  NSObject.hash(into:)(v51);

  Hasher._combine(_:)(*(unsigned __int8 *)(a2 + 8));
  Hasher._combine(_:)(*(_QWORD *)(a2 + 16));
  v45 = v6;
  v24 = type metadata accessor for Date(0);
  v25 = sub_1000AF8CC();
  dispatch thunk of Hashable.hash(into:)(v51, v24, v25);
  v26 = Hasher._finalize()();
  v27 = -1 << *(_BYTE *)(v21 + 32);
  v28 = v26 & ~v27;
  v48 = v21 + 56;
  if (((*(_QWORD *)(v21 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
  {
    swift_bridgeObjectRelease(v21);
    v38 = a1;
    goto LABEL_12;
  }
  v42 = v3;
  v43 = a1;
  v29 = ~v27;
  v30 = *(_QWORD *)(v46 + 72);
  v47 = v21;
  do
  {
    sub_100037010(*(_QWORD *)(v21 + 48) + v30 * v28, (uint64_t)v19);
    v32 = v19[8];
    v33 = *(unsigned __int8 *)(a2 + 8);
    sub_100037010((uint64_t)v19, (uint64_t)v16);
    sub_100037010(a2, v50);
    if (v32 != v33)
    {
      sub_100036DC0(v50);
      sub_100036DC0((uint64_t)v16);
      sub_100037010((uint64_t)v19, (uint64_t)v11);
      v31 = v49;
      sub_100037010(a2, v49);
LABEL_4:
      sub_100036DC0(v31);
      sub_100036DC0((uint64_t)v11);
      sub_100036DC0((uint64_t)v19);
      v21 = v47;
      goto LABEL_5;
    }
    v46 = v30 * v28;
    v34 = *((_QWORD *)v16 + 2);
    v35 = *(_QWORD *)(v50 + 16);
    sub_100036DC0(v50);
    sub_100036DC0((uint64_t)v16);
    sub_100037010((uint64_t)v19, (uint64_t)v11);
    v31 = v49;
    sub_100037010(a2, v49);
    if (v34 != v35)
      goto LABEL_4;
    v36 = static Date.== infix(_:_:)(&v11[*(int *)(v45 + 28)], v31 + *(int *)(v45 + 28));
    sub_100036DC0(v31);
    sub_100036DC0((uint64_t)v11);
    sub_100036DC0((uint64_t)v19);
    v21 = v47;
    if ((v36 & 1) != 0)
    {
      swift_bridgeObjectRelease(v47);
      sub_100036DC0(a2);
      sub_100037010(*(_QWORD *)(*v42 + 48) + v46, v43);
      return 0;
    }
LABEL_5:
    v28 = (v28 + 1) & v29;
  }
  while (((*(_QWORD *)(v48 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0);
  swift_bridgeObjectRelease(v21);
  v3 = v42;
  v38 = v43;
LABEL_12:
  v39 = (uint64_t)v44;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  sub_100037010(a2, v39);
  v51[0] = *v3;
  *v3 = 0x8000000000000000;
  sub_1000AB490(v39, v28, isUniquelyReferenced_nonNull_native);
  v41 = *v3;
  *v3 = v51[0];
  swift_bridgeObjectRelease(v41);
  sub_100036D7C(a2, v38);
  return 1;
}

uint64_t sub_1000A89F8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  Swift::Int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  _QWORD v36[9];
  uint64_t v37;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = swift_retain(a2);
    v9 = __CocoaSet.member(for:)(v8, v7);
    swift_release(a2);
    if (v9)
    {
      swift_bridgeObjectRelease(v6);
      swift_release(a2);
      v37 = v9;
      v10 = type metadata accessor for ImageLoader(0);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(v36, &v37, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v36[0];
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v25 = sub_1000A73FC(v7, result + 1);
    v36[0] = v25;
    v26 = *(_QWORD *)(v25 + 16);
    if (*(_QWORD *)(v25 + 24) <= v26)
    {
      v28 = v26 + 1;
      swift_retain(a2);
      sub_1000A9EEC(v28);
      v27 = v36[0];
    }
    else
    {
      v27 = v25;
      swift_retain(a2);
    }
    sub_1000AB168(a2, v27);
    v29 = *v3;
    *v3 = v27;
  }
  else
  {
    Hasher.init(_seed:)(v36, *(_QWORD *)(v6 + 40));
    v12 = (uint64_t *)(a2 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v14);
    String.hash(into:)(v36, v13, v14);
    swift_bridgeObjectRelease(v14);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v6 + 32);
    v17 = v15 & ~v16;
    if (((*(_QWORD *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
    {
      v18 = *(_QWORD *)(v6 + 48);
      v19 = (_QWORD *)(*(_QWORD *)(v18 + 8 * v17) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
      v20 = v19[1];
      v21 = *v12;
      v22 = v12[1];
      v23 = *v19 == v21 && v20 == v22;
      if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, v21, v22, 0) & 1) != 0)
      {
LABEL_13:
        swift_release(a2);
        swift_bridgeObjectRelease(v6);
        v24 = *(_QWORD *)(*(_QWORD *)(*v3 + 48) + 8 * v17);
        *a1 = v24;
        swift_retain(v24);
        return 0;
      }
      v30 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v30;
        if (((*(_QWORD *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          break;
        v31 = (_QWORD *)(*(_QWORD *)(v18 + 8 * v17) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
        v32 = v31[1];
        v33 = *v31 == v21 && v32 == v22;
        if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v31, v32, v21, v22, 0) & 1) != 0)
          goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v36[0] = *v3;
    *v3 = 0x8000000000000000;
    v35 = swift_retain(a2);
    sub_1000AB7D4(v35, v17, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v36[0];
  }
  swift_bridgeObjectRelease(v29);
  *a1 = a2;
  return 1;
}

uint64_t sub_1000A8CDC(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  DARootViewController **v3;
  DARootViewController *v7;
  Swift::Int v8;
  const char *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  char isUniquelyReferenced_nonNull_native;
  DARootViewController *v25;
  SEL v26;
  id v27;
  int v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  DARootViewController **v37;
  _QWORD v38[9];

  v7 = *v3;
  Hasher.init(_seed:)(v38, (*v3)[1].super.super.super.super.isa);
  if (a3 >= 9)
  {
    swift_bridgeObjectRetain(v7);
    String.hash(into:)(v38, a2, a3);
  }
  else
  {
    Hasher._combine(_:)(qword_10010E198[a3]);
    swift_bridgeObjectRetain(v7);
  }
  v8 = Hasher._finalize()();
  v16 = -1 << v7->remoteCardFilter[16];
  v17 = v8 & ~v16;
  v37 = v3;
  if (((*(_QWORD *)&v7[1].remoteCardFilter[(v17 >> 3) & 0xFFFFFFFFFFFFF8] >> v17) & 1) != 0)
  {
    v18 = ~v16;
    while (1)
    {
      v19 = (uint64_t *)(*(_QWORD *)v7[1].responder + 16 * v17);
      v20 = *v19;
      v21 = v19[1];
      Hasher.init(_seed:)(v38, 0);
      if (v21 >= 9)
      {
        swift_bridgeObjectRetain(v21);
        String.hash(into:)(v38, v20, v21);
      }
      else
      {
        Hasher._combine(_:)(qword_10010E198[v21]);
        sub_1000582D0(v20, v21);
      }
      v22 = Hasher._finalize()();
      Hasher.init(_seed:)(v38, 0);
      if (a3 >= 9)
        String.hash(into:)(v38, a2, a3);
      else
        Hasher._combine(_:)(qword_10010E198[a3]);
      v23 = Hasher._finalize()();
      sub_100058234(v20, v21);
      if (v22 == v23)
        break;
      v17 = (v17 + 1) & v18;
      if (((*(_QWORD *)&v7[1].remoteCardFilter[(v17 >> 3) & 0xFFFFFFFFFFFFF8] >> v17) & 1) == 0)
        goto LABEL_14;
    }
    swift_bridgeObjectRelease(v7, v9, v10, v11, v12, v13, v14, v15);
    sub_100058234(a2, a3);
    v34 = (uint64_t *)(*(_QWORD *)(*v37)[1].responder + 16 * v17);
    v35 = *v34;
    v36 = v34[1];
    *a1 = *v34;
    a1[1] = v36;
    sub_1000582D0(v35, v36);
    return 0;
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease(v7, v9, v10, v11, v12, v13, v14, v15);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v37);
    v38[0] = *v37;
    *v37 = (DARootViewController *)0x8000000000000000;
    sub_1000582D0(a2, a3);
    sub_1000AB9B8(a2, a3, v17, isUniquelyReferenced_nonNull_native);
    v25 = *v37;
    *v37 = (DARootViewController *)v38[0];
    swift_bridgeObjectRelease(v25, v26, v27, v28, v29, v30, v31, v32);
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
}

uint64_t sub_1000A8F3C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  Swift::Int v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v43;
  _QWORD v44[9];
  uint64_t v45;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    v41 = v2;
    Hasher.init(_seed:)(v44, *(_QWORD *)(v6 + 40));
    v11 = *(void **)(a2 + 40);
    swift_bridgeObjectRetain(v6);
    v12 = objc_msgSend(v11, "serialNumber");
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    String.hash(into:)(v44, v13, v15);
    swift_bridgeObjectRelease(v15);
    v16 = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(v6 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      v43 = ~v17;
      while (1)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v18);
        v20 = *(void **)(v19 + 40);
        swift_retain(v19);
        v21 = objc_msgSend(v20, "serialNumber");
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        v25 = objc_msgSend(*(id *)(a2 + 40), "serialNumber");
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        if (v22 == v26 && v24 == v28)
        {
          swift_release(a2);
          swift_bridgeObjectRelease(v6);
          swift_release(v19);
          swift_bridgeObjectRelease_n(v24, 2);
          goto LABEL_24;
        }
        v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v28, 0);
        swift_release(v19);
        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v28);
        if ((v30 & 1) != 0)
          break;
        v18 = (v18 + 1) & v43;
        if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          goto LABEL_15;
      }
      swift_release(a2);
      swift_bridgeObjectRelease(v6);
LABEL_24:
      v40 = *(_QWORD *)(*(_QWORD *)(*v41 + 48) + 8 * v18);
      *a1 = v40;
      swift_retain(v40);
      return 0;
    }
LABEL_15:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v41);
    v44[0] = *v41;
    *v41 = 0x8000000000000000;
    v32 = swift_retain(a2);
    sub_1000ABBE0(v32, v18, isUniquelyReferenced_nonNull_native);
    v33 = *v41;
    *v41 = v44[0];
    swift_bridgeObjectRelease(v33);
    *a1 = a2;
    return 1;
  }
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v8 = swift_retain(a2);
  v9 = __CocoaSet.member(for:)(v8, v7);
  swift_release(a2);
  if (!v9)
  {
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v35 = sub_1000A7624(v7, result + 1);
    v44[0] = v35;
    v36 = *(_QWORD *)(v35 + 16);
    if (*(_QWORD *)(v35 + 24) <= v36)
    {
      v38 = v36 + 1;
      swift_retain(a2);
      sub_1000AA4DC(v38);
      v37 = v44[0];
    }
    else
    {
      v37 = v35;
      swift_retain(a2);
    }
    sub_1000AB22C(a2, v37);
    v39 = *v3;
    *v3 = v37;
    swift_bridgeObjectRelease(v39);
    *a1 = a2;
    return 1;
  }
  swift_bridgeObjectRelease(v6);
  swift_release(a2);
  v45 = v9;
  v10 = type metadata accessor for CardState();
  swift_unknownObjectRetain(v9);
  swift_dynamicCast(v44, &v45, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
  *a1 = v44[0];
  swift_unknownObjectRelease(v9);
  return 0;
}

uint64_t sub_1000A92B8(uint64_t *a1, uint64_t a2, DARootViewController *a3)
{
  DARootViewController **v3;
  DARootViewController *v7;
  Swift::Int v8;
  const char *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  SEL v21;
  id v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  char isUniquelyReferenced_nonNull_native;
  DARootViewController *v35;
  SEL v36;
  id v37;
  int v38;
  id v39;
  id v40;
  id v41;
  id v42;
  _QWORD v43[9];

  v7 = *v3;
  Hasher.init(_seed:)(v43, (*v3)[1].super.super.super.super.isa);
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v43, a2, a3);
  v8 = Hasher._finalize()();
  v16 = -1 << v7->remoteCardFilter[16];
  v17 = v8 & ~v16;
  if (((*(_QWORD *)&v7[1].remoteCardFilter[(v17 >> 3) & 0xFFFFFFFFFFFFF8] >> v17) & 1) != 0)
  {
    v18 = *(_QWORD *)v7[1].responder;
    v19 = (_QWORD *)(v18 + 16 * v17);
    v9 = (const char *)v19[1];
    v20 = *v19 == a2 && v9 == (const char *)a3;
    if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v9, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3, v9, v10, v11, v12, v13, v14, v15);
      swift_bridgeObjectRelease(v7, v21, v22, v23, v24, v25, v26, v27);
      v28 = (uint64_t *)(*(_QWORD *)(*v3)[1].responder + 16 * v17);
      v29 = v28[1];
      *a1 = *v28;
      a1[1] = v29;
      swift_bridgeObjectRetain(v29);
      return 0;
    }
    v31 = ~v16;
    while (1)
    {
      v17 = (v17 + 1) & v31;
      if (((*(_QWORD *)&v7[1].remoteCardFilter[(v17 >> 3) & 0xFFFFFFFFFFFFF8] >> v17) & 1) == 0)
        break;
      v32 = (_QWORD *)(v18 + 16 * v17);
      v9 = (const char *)v32[1];
      v33 = *v32 == a2 && v9 == (const char *)a3;
      if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v32, v9, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7, v9, v10, v11, v12, v13, v14, v15);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v43[0] = *v3;
  *v3 = (DARootViewController *)0x8000000000000000;
  swift_bridgeObjectRetain(a3);
  sub_1000ABE30(a2, (uint64_t)a3, v17, isUniquelyReferenced_nonNull_native);
  v35 = *v3;
  *v3 = (DARootViewController *)v43[0];
  swift_bridgeObjectRelease(v35, v36, v37, v38, v39, v40, v41, v42);
  *a1 = a2;
  a1[1] = (uint64_t)a3;
  return 1;
}

Swift::Int sub_1000A9464(_QWORD *a1, uint64_t a2)
{
  DARootViewController **v2;
  DARootViewController *v4;
  Swift::UInt v5;
  uint64_t v6;
  DARootViewController **v7;
  uint64_t v8;
  DARootViewController *v9;
  SEL v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  Swift::Int result;
  const char *v18;
  void *v19;
  const char *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  BOOL v30;
  unint64_t v31;
  const char **v33;
  const char **v34;
  Swift::UInt v35;
  SEL v37;
  id v38;
  int v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v46;
  DARootViewController *v47;
  SEL v48;
  id v49;
  int v50;
  id v51;
  id v52;
  id v53;
  id v54;
  DARootViewController **v55;
  uint64_t v57;
  _QWORD v58[9];

  v4 = *v2;
  Hasher.init(_seed:)(v58, (*v2)[1].super.super.super.super.isa);
  v5 = *(_QWORD *)(a2 + 16);
  Hasher._combine(_:)(v5);
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(v4);
    v7 = (DARootViewController **)(a2 + 40);
    do
    {
      v8 = (uint64_t)*(v7 - 1);
      v9 = *v7;
      swift_bridgeObjectRetain(*v7);
      String.hash(into:)(v58, v8, v9);
      swift_bridgeObjectRelease(v9, v10, v11, v12, v13, v14, v15, v16);
      v7 += 2;
      --v6;
    }
    while (v6);
  }
  else
  {
    swift_bridgeObjectRetain(v4);
  }
  result = Hasher._finalize()();
  v25 = -1 << v4->remoteCardFilter[16];
  v26 = result & ~v25;
  if (((*(_QWORD *)&v4[1].remoteCardFilter[(v26 >> 3) & 0xFFFFFFFFFFFFF8] >> v26) & 1) != 0)
  {
    v57 = ~v25;
    v27 = *(_QWORD *)v4[1].responder;
    while (1)
    {
      v28 = *(_QWORD **)(v27 + 8 * v26);
      if (v28[2] == v5)
      {
        if (!v5 || v28 == (_QWORD *)a2)
          goto LABEL_36;
        v29 = *(_QWORD *)(a2 + 16);
        if (!v29)
          goto LABEL_40;
        result = v28[4];
        v18 = (const char *)v28[5];
        v19 = *(void **)(a2 + 32);
        v20 = *(const char **)(a2 + 40);
        v30 = (void *)result == v19 && v18 == v20;
        if (v30
          || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v18, v19, v20, 0), (result & 1) != 0))
        {
          if (v5 == 1)
            goto LABEL_36;
          v31 = v29 - 2;
          if (v29 < 2)
            goto LABEL_41;
          result = v28[6];
          v18 = (const char *)v28[7];
          v19 = *(void **)(a2 + 48);
          v20 = *(const char **)(a2 + 56);
          if ((void *)result == v19 && v18 == v20)
            break;
          result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v18, v19, v20, 0);
          if ((result & 1) != 0)
            break;
        }
      }
LABEL_8:
      v26 = (v26 + 1) & v57;
      if (((*(_QWORD *)&v4[1].remoteCardFilter[(v26 >> 3) & 0xFFFFFFFFFFFFF8] >> v26) & 1) == 0)
        goto LABEL_37;
    }
    if (v5 == 2)
    {
LABEL_36:
      swift_bridgeObjectRelease((DARootViewController *)a2, v18, v19, (int)v20, v21, v22, v23, v24);
      swift_bridgeObjectRelease(v4, v37, v38, v39, v40, v41, v42, v43);
      v44 = *(_QWORD *)(*(_QWORD *)(*v55)[1].responder + 8 * v26);
      *a1 = v44;
      swift_bridgeObjectRetain(v44);
      return 0;
    }
    v33 = (const char **)(v28 + 9);
    v34 = (const char **)(a2 + 72);
    v35 = v5 - 2;
    while (v35)
    {
      if (!v31)
        goto LABEL_39;
      result = (Swift::Int)*(v33 - 1);
      v18 = *v33;
      v19 = (void *)*(v34 - 1);
      v20 = *v34;
      if ((void *)result != v19 || v18 != v20)
      {
        result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v18, v19, v20, 0);
        if ((result & 1) == 0)
          goto LABEL_8;
      }
      --v31;
      v34 += 2;
      v33 += 2;
      if (!--v35)
        goto LABEL_36;
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
LABEL_37:
    swift_bridgeObjectRelease(v4, v18, v19, (int)v20, v21, v22, v23, v24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v55);
    v58[0] = *v55;
    *v55 = (DARootViewController *)0x8000000000000000;
    v46 = (_QWORD *)swift_bridgeObjectRetain(a2);
    sub_1000ABFC8(v46, v26, isUniquelyReferenced_nonNull_native);
    v47 = *v55;
    *v55 = (DARootViewController *)v58[0];
    swift_bridgeObjectRelease(v47, v48, v49, v50, v51, v52, v53, v54);
    *a1 = a2;
    return 1;
  }
  return result;
}

uint64_t sub_1000A96F0(_BYTE *a1, char a2)
{
  DARootViewController **v2;
  DARootViewController *v4;
  uint64_t v5;
  DARootViewController *v6;
  SEL v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  Swift::Int v14;
  const char *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  DARootViewController *v26;
  char v28;
  SEL v29;
  id v30;
  int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  SEL v36;
  id v37;
  int v38;
  id v39;
  id v40;
  id v41;
  id v42;
  char isUniquelyReferenced_nonNull_native;
  char v44;
  DARootViewController *v45;
  SEL v46;
  id v47;
  int v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t result;
  SEL v54;
  id v55;
  int v56;
  id v57;
  id v58;
  id v59;
  id v60;
  DARootViewController **v61;
  _QWORD v63[9];

  v4 = *v2;
  Hasher.init(_seed:)(v63, (*v2)[1].super.super.super.super.isa);
  if ((a2 & 1) != 0)
    v5 = 0x776569766572;
  else
    v5 = 0;
  if ((a2 & 1) != 0)
    v6 = (DARootViewController *)0xE600000000000000;
  else
    v6 = (DARootViewController *)0xE000000000000000;
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v63, v5, v6);
  swift_bridgeObjectRelease(v6, v7, v8, v9, v10, v11, v12, v13);
  v14 = Hasher._finalize()();
  v22 = -1 << v4->remoteCardFilter[16];
  v23 = v14 & ~v22;
  if (((*(_QWORD *)&v4[1].remoteCardFilter[(v23 >> 3) & 0xFFFFFFFFFFFFF8] >> v23) & 1) != 0)
  {
    v24 = ~v22;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)v4[1].responder + v23))
        v25 = 0x776569766572;
      else
        v25 = 0;
      if (*(_BYTE *)(*(_QWORD *)v4[1].responder + v23))
        v26 = (DARootViewController *)0xE600000000000000;
      else
        v26 = (DARootViewController *)0xE000000000000000;
      if (v25 == v5 && v26 == v6)
      {
        swift_bridgeObjectRelease(v4, v15, v16, v17, v18, v19, v20, v21);
        swift_bridgeObjectRelease(v6, v54, v55, v56, v57, v58, v59, v60);
        goto LABEL_24;
      }
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, v5, v6, 0);
      swift_bridgeObjectRelease(v26, v29, v30, v31, v32, v33, v34, v35);
      swift_bridgeObjectRelease(v6, v36, v37, v38, v39, v40, v41, v42);
      if ((v28 & 1) != 0)
        break;
      v23 = (v23 + 1) & v24;
      if (((*(_QWORD *)&v4[1].remoteCardFilter[(v23 >> 3) & 0xFFFFFFFFFFFFF8] >> v23) & 1) == 0)
        goto LABEL_21;
    }
    v6 = v4;
LABEL_24:
    swift_bridgeObjectRelease(v6, v15, v16, v17, v18, v19, v20, v21);
    result = 0;
    v44 = *(_BYTE *)(*(_QWORD *)(*v61)[1].responder + v23);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease(v4, v15, v16, v17, v18, v19, v20, v21);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v61);
    v63[0] = *v61;
    *v61 = (DARootViewController *)0x8000000000000000;
    v44 = a2 & 1;
    sub_1000AC238(a2 & 1, v23, isUniquelyReferenced_nonNull_native);
    v45 = *v61;
    *v61 = (DARootViewController *)v63[0];
    swift_bridgeObjectRelease(v45, v46, v47, v48, v49, v50, v51, v52);
    result = 1;
  }
  *a1 = v44;
  return result;
}

void sub_1000A98C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[9];

  v2 = v1;
  v4 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin();
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100035CA4(&qword_10016D730);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_39;
  v35 = v2;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v37 = (_QWORD *)(v7 + 56);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v36 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  swift_retain(v7);
  v15 = 0;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_26;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v19 >= v36)
      goto LABEL_35;
    v20 = v37[v19];
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v36)
        goto LABEL_35;
      v20 = v37[v15];
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v36)
          goto LABEL_35;
        v20 = v37[v15];
        if (!v20)
          break;
      }
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_26:
    v22 = *(_QWORD *)(v38 + 72);
    sub_100036D7C(*(_QWORD *)(v7 + 48) + v22 * v18, (uint64_t)v6);
    Hasher.init(_seed:)(v40, *(_QWORD *)(v9 + 40));
    v23 = *(id *)v6;
    NSObject.hash(into:)(v40);

    Hasher._combine(_:)(v6[8]);
    Hasher._combine(_:)(*((_QWORD *)v6 + 2));
    v24 = type metadata accessor for Date(0);
    v25 = sub_1000AF8CC();
    dispatch thunk of Hashable.hash(into:)(v40, v24, v25);
    v26 = Hasher._finalize()();
    v27 = -1 << *(_BYTE *)(v9 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v14 + 8 * (v28 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v14 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v14 + 8 * v29);
      }
      while (v33 == -1);
      v16 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v14 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    sub_100036D7C((uint64_t)v6, *(_QWORD *)(v9 + 48) + v16 * v22);
    ++*(_QWORD *)(v9 + 16);
  }
  v21 = v19 + 3;
  if (v21 < v36)
  {
    v20 = v37[v21];
    if (!v20)
    {
      while (1)
      {
        v15 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_41;
        if (v15 >= v36)
          goto LABEL_35;
        v20 = v37[v15];
        ++v21;
        if (v20)
          goto LABEL_25;
      }
    }
    v15 = v21;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v7);
  v2 = v35;
  v34 = 1 << *(_BYTE *)(v7 + 32);
  if (v34 > 63)
    bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v37 = -1 << v34;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_39:
  swift_release(v7);
  *v2 = v9;
}

void sub_1000A9C50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100035CA4(&qword_10016D760);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_36;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_36;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_36;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_36:
                swift_release(v3);
                v2 = v30;
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v13 >= v11)
                    goto LABEL_36;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v6 + 40));
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_1000A9EEC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100035CA4(&qword_10016D720);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v31 = v2;
    v32 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v16 >= v10)
          goto LABEL_36;
        v17 = v32[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v10)
            goto LABEL_36;
          v17 = v32[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v10)
              goto LABEL_36;
            v17 = v32[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v31;
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v17 = v32[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v17 = v32[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_26;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_26:
        v9 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
      Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
      v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
      v21 = *(_QWORD *)(v19 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8);
      swift_bridgeObjectRetain(v21);
      String.hash(into:)(v33, v20, v21);
      swift_bridgeObjectRelease(v21);
      v22 = Hasher._finalize()();
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v25);
        }
        while (v29 == -1);
        v13 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_1000AA1E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100035CA4(&qword_10016D768);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_39;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_39;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_39;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_39:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_45;
                  if (v12 >= v10)
                    goto LABEL_39;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v22 = *v20;
      v21 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      if (v21 >= 9)
        String.hash(into:)(v34, v22, v21);
      else
        Hasher._combine(_:)(qword_10010E198[v21]);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v22;
      v14[1] = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_1000AA4DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  _QWORD v35[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100035CA4(&qword_10016D740);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v34 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v32 = v2;
    v33 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v33)
          goto LABEL_36;
        v16 = v34[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v33)
            goto LABEL_36;
          v16 = v34[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v33)
              goto LABEL_36;
            v16 = v34[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v33)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v34[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v33)
                    goto LABEL_36;
                  v16 = v34[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      Hasher.init(_seed:)(v35, *(_QWORD *)(v6 + 40));
      v19 = objc_msgSend(*(id *)(v18 + 40), "serialNumber");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      String.hash(into:)(v35, v20, v22);
      swift_bridgeObjectRelease(v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v10 + 8 * v26);
        }
        while (v30 == -1);
        v12 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_1000AA7FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100035CA4(&qword_10016D750);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_1000AAAD8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  DARootViewController **v21;
  uint64_t v22;
  DARootViewController *v23;
  SEL v24;
  id v25;
  int v26;
  id v27;
  id v28;
  id v29;
  id v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  _QWORD v43[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100035CA4(&qword_10016D758);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v42 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v40 = v2;
    v41 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v15 >= v41)
          goto LABEL_39;
        v16 = v42[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v41)
            goto LABEL_39;
          v16 = v42[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v41)
              goto LABEL_39;
            v16 = v42[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v41)
              {
LABEL_39:
                swift_release(v3);
                v2 = v40;
                v39 = 1 << *(_BYTE *)(v3 + 32);
                if (v39 > 63)
                  bzero(v42, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v39;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v42[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_45;
                  if (v11 >= v41)
                    goto LABEL_39;
                  v16 = v42[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = v3;
      v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      Hasher.init(_seed:)(v43, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(*(_QWORD *)(v19 + 16));
      v20 = *(_QWORD *)(v19 + 16);
      if (v20)
      {
        v21 = (DARootViewController **)(v19 + 40);
        do
        {
          v22 = (uint64_t)*(v21 - 1);
          v23 = *v21;
          swift_bridgeObjectRetain(*v21);
          String.hash(into:)(v43, v22, v23);
          swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
          v21 += 2;
          --v20;
        }
        while (v20);
      }
      v31 = Hasher._finalize()();
      v32 = -1 << *(_BYTE *)(v6 + 32);
      v33 = v31 & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v10 + 8 * (v33 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v10 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v10 + 8 * v34);
        }
        while (v38 == -1);
        v12 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      v3 = v18;
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v19;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

