id sub_100007CF4(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100007D5C;
  v2[3] = &unk_100284898;
  v2[4] = *(_QWORD *)(a1 + 32);
  return +[UIView animateWithDuration:animations:](UIView, "animateWithDuration:animations:", v2, 0.150000006);
}

void sub_100007D5C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contactLabel"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_100007D90(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addContactButton"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

id sub_100007DC4(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100007E2C;
  v2[3] = &unk_100284898;
  v2[4] = *(_QWORD *)(a1 + 32);
  return +[UIView animateWithDuration:animations:](UIView, "animateWithDuration:animations:", v2, 0.150000006);
}

void sub_100007E2C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addContactButton"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_100007E60(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contactLabel"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

void sub_100007E94(uint64_t a1)
{
  double v2;
  double v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  id v8;

  v2 = 0.0;
  v3 = 0.0;
  if (*(_BYTE *)(a1 + 48))
  {
    if (*(_QWORD *)(a1 + 40))
      v3 = 1.0;
    else
      v3 = 0.0;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contactLabel"));
  objc_msgSend(v4, "setAlpha:", v3);

  if (*(_BYTE *)(a1 + 48))
  {
    if (*(_QWORD *)(a1 + 40))
      v2 = 0.0;
    else
      v2 = 1.0;
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addContactButton"));
  objc_msgSend(v5, "setAlpha:", v2);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  v8 = v6;
  v7 = 1.0;
  if (!*(_BYTE *)(a1 + 49))
    v7 = 0.0;
  objc_msgSend(v6, "setDeleteButtonAlpha:", v7);

}

void sub_1000092F8(id a1)
{
  unint64_t v1;

  v1 = +[PHUIConfiguration screenSize](PHUIConfiguration, "screenSize");
  if (v1 == 7 || v1 == 2)
    qword_1002D4F20 = 0x3FB47AE147AE147BLL;
}

unint64_t sub_1000093AC(uint64_t a1)
{
  unint64_t result;
  uint64_t v2;

  result = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  if (result > 7)
    v2 = 1;
  else
    v2 = qword_10023F020[result];
  qword_1002DC598 = v2;
  return result;
}

void sub_100009434(id a1)
{
  unint64_t v1;

  v1 = +[PHUIConfiguration screenSize](PHUIConfiguration, "screenSize");
  if (v1 == 7 || v1 == 2)
    byte_1002DC5A8 = 1;
}

void sub_1000094A8(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unint64_t v6;
  BOOL v7;
  double v8;
  double v9;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[PHUIConfiguration screenSize](PHUIConfiguration, "screenSize");
  v7 = v6 == 7 || v6 == 2;
  v8 = 3.40282347e38;
  if (v7)
    v8 = 420.0;
  if (v3 >= v5)
    v9 = v5;
  else
    v9 = v3;
  if (v8 >= v9)
    v8 = v9;
  qword_1002DC5B8 = *(_QWORD *)&v8;
}

void sub_100009578(id a1)
{
  byte_1002DC5C8 = (id)+[PHUIConfiguration screenSize](PHUIConfiguration, "screenSize") == (id)6;
}

void sub_10000999C(id a1)
{
  unint64_t v1;
  double v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = +[PHUIConfiguration inCallControlSize](PHUIConfiguration, "inCallControlSize");
  v2 = 10.0;
  if (v1 - 1 <= 3)
    v2 = dbl_10023F060[v1 - 1];
  v5 = (id)objc_claimAutoreleasedReturnValue(+[UIFont systemFontOfSize:](UIFont, "systemFontOfSize:", v2));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "withCaseSensitiveAttribute"));
  v4 = (void *)qword_1002DC5D8;
  qword_1002DC5D8 = v3;

}

void sub_100009A4C(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[UIFont systemFontOfSize:weight:](UIFont, "systemFontOfSize:weight:", 20.0, UIFontWeightMedium));
  v2 = (void *)qword_1002DC5E8;
  qword_1002DC5E8 = v1;

}

void sub_100009AC8(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[UIFont monospacedDigitSystemFontOfSize:weight:](UIFont, "monospacedDigitSystemFontOfSize:weight:", 15.0, UIFontWeightRegular));
  v2 = (void *)qword_1002DC5F8;
  qword_1002DC5F8 = v1;

}

void sub_100009B44(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[UIFont monospacedDigitSystemFontOfSize:weight:](UIFont, "monospacedDigitSystemFontOfSize:weight:", 18.0, UIFontWeightRegular));
  v2 = (void *)qword_1002DC608;
  qword_1002DC608 = v1;

}

void sub_100009BC0(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[UIFont monospacedDigitSystemFontOfSize:weight:](UIFont, "monospacedDigitSystemFontOfSize:weight:", 20.0, UIFontWeightRegular));
  v2 = (void *)qword_1002DC618;
  qword_1002DC618 = v1;

}

void sub_100009D84(id a1)
{
  unint64_t v1;
  double v2;
  uint64_t v3;
  void *v4;

  v1 = +[PHUIConfiguration screenSize](PHUIConfiguration, "screenSize");
  v2 = 18.0;
  if (v1 == 6)
    v2 = 20.0;
  v3 = objc_claimAutoreleasedReturnValue(+[UIFont monospacedDigitSystemFontOfSize:weight:](UIFont, "monospacedDigitSystemFontOfSize:weight:", v2, UIFontWeightRegular));
  v4 = (void *)qword_1002DC628;
  qword_1002DC628 = v3;

}

void sub_100009E94(id a1)
{
  unint64_t v1;
  double v2;
  uint64_t v3;
  void *v4;

  v1 = +[PHUIConfiguration inCallControlSize](PHUIConfiguration, "inCallControlSize");
  v2 = 10.0;
  if (v1 - 1 <= 3)
    v2 = dbl_10023F060[v1 - 1];
  v3 = objc_claimAutoreleasedReturnValue(+[UIFont monospacedDigitSystemFontOfSize:weight:](UIFont, "monospacedDigitSystemFontOfSize:weight:", v2, UIFontWeightLight));
  v4 = (void *)qword_1002DC638;
  qword_1002DC638 = v3;

}

void sub_100009F34(id a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[UIFontDescriptor phPreferredFontDescriptorForTextStyle:](UIFontDescriptor, "phPreferredFontDescriptorForTextStyle:", UIFontTextStyleBody));
  objc_msgSend(v3, "pointSize");
  v1 = objc_claimAutoreleasedReturnValue(+[UIFont monospacedDigitSystemFontOfSize:weight:](UIFont, "monospacedDigitSystemFontOfSize:weight:"));
  v2 = (void *)qword_1002DC648;
  qword_1002DC648 = v1;

}

void sub_10000A010(id a1)
{
  unint64_t v1;

  v1 = +[PHUIConfiguration screenSize](PHUIConfiguration, "screenSize");
  if (v1 == 7 || v1 == 2)
    byte_1002DC658 = 1;
}

void sub_10000CB5C(uint64_t a1)
{
  double v2;
  double v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "labelAlphaValueForActivityState:", *(unsigned __int16 *)(a1 + 40));
  v3 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "participantMarqueeLabel"));
  objc_msgSend(v4, "setAlpha:", v3);

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusLabel"));
  objc_msgSend(v5, "setAlpha:", v3);

}

UIFont *__cdecl sub_10000D3EC(UIFont *self, SEL a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[2];
  _QWORD v11[2];
  void *v12;
  UIFontDescriptorAttributeName v13;
  void *v14;

  v13 = UIFontDescriptorFeatureSettingsAttribute;
  v10[0] = UIFontFeatureTypeIdentifierKey;
  v10[1] = UIFontFeatureSelectorIdentifierKey;
  v11[0] = &off_1002965F8;
  v11[1] = &off_100296610;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v11, v10, 2));
  v12 = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v12, 1));
  v14 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v14, &v13, 1));

  v6 = (void *)objc_claimAutoreleasedReturnValue(-[UIFont fontDescriptor](self, "fontDescriptor"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "fontDescriptorByAddingAttributes:", v5));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIFont fontWithDescriptor:size:](UIFont, "fontWithDescriptor:size:", v7, 0.0));
  return (UIFont *)v8;
}

id sub_10000D538(void *a1)
{
  return sub_10000D540(a1, 0);
}

id sub_10000D540(void *a1, void *a2)
{
  __CFString *v3;
  __CFString *v4;
  void *v5;
  void *v6;

  v3 = a1;
  v4 = a2;
  if (!v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v4 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bundleIdentifier"));

  }
  if (-[__CFString length](v3, "length") && -[__CFString length](v4, "length"))
    v6 = (void *)CFPreferencesCopyValue(v3, v4, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
  else
    v6 = 0;

  return v6;
}

void sub_10000D5F0(void *a1, void *a2)
{
  sub_10000D5F8(a1, a2, 0);
}

void sub_10000D5F8(void *a1, void *a2, void *a3)
{
  id v5;
  __CFString *v6;
  void *v7;
  __CFString *key;

  key = a1;
  v5 = a2;
  v6 = a3;
  if (!v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v6 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "bundleIdentifier"));

  }
  if (-[__CFString length](key, "length") && -[__CFString length](v6, "length"))
  {
    CFPreferencesSetValue(key, v5, v6, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
    CFPreferencesSynchronize(v6, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
  }

}

void sub_10000E2D0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_10000E41C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

void sub_10000E450(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "videoOverlayViewController:isShowingOverlay:", *(_QWORD *)(a1 + 32), 0);

}

void sub_10000EA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000EA24(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10000EA34(uint64_t a1)
{

}

void sub_10000EA3C(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_10000ECCC(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("com.apple.mobilephone.tuRouteUI", 0);
  v2 = (void *)qword_1002DC668;
  qword_1002DC668 = (uint64_t)v1;

}

void sub_10000EE38(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10000EE4C(uint64_t a1)
{
  void *v2;
  void *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unsigned int v8;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AVSystemController sharedAVSystemController](AVSystemController, "sharedAVSystemController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "attributeForKey:", AVSystemController_HeadphoneJackIsConnectedAttribute));
  v4 = objc_msgSend(v3, "BOOLValue");

  if ((v4 & 1) != 0 || objc_msgSend(WeakRetained, "isBluetoothLE"))
  {
    v5 = *(_QWORD *)(a1 + 32);
    v6 = objc_claimAutoreleasedReturnValue(+[UIImage headphonesRouteGlyphForDisplayStyle:](UIImage, "headphonesRouteGlyphForDisplayStyle:", 1));
  }
  else
  {
    v8 = objc_msgSend(WeakRetained, "isAuxiliary");
    v5 = *(_QWORD *)(a1 + 32);
    if (!v8)
    {
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
      goto LABEL_5;
    }
    v6 = objc_claimAutoreleasedReturnValue(+[UIImage bluetoothAudioRouteGlyphForDisplayStyle:](UIImage, "bluetoothAudioRouteGlyphForDisplayStyle:", 1));
  }
  v7 = (void *)v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v5, v6);

LABEL_5:
}

const __CFString *sub_10000EF40(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5)
    return CFSTR("call");
  else
    return *(&off_100284C00 + a1 - 1);
}

uint64_t sub_10000FCB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10000FE14(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  v4 = a2;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1000100BC(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  v4 = a2;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_10001017C(id a1, PHSingleCallParticipantLabelView *a2)
{
  void *v2;
  double v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  PHSingleCallParticipantLabelView *v12;

  v12 = a2;
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[PHSingleCallParticipantLabelView secondaryInfoLabel](v12, "secondaryInfoLabel"));
  v3 = 0.0;
  objc_msgSend(v2, "setAlpha:", 0.0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[CNKFeatures sharedInstance](CNKFeatures, "sharedInstance"));
  v5 = objc_msgSend(v4, "isHeroImageEnabled");

  if ((v5 & 1) == 0)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(-[PHSingleCallParticipantLabelView traitCollection](v12, "traitCollection"));
    v7 = objc_msgSend(v6, "_backlightLuminance");

    if (v7 != (id)1)
      v3 = 1.0;
    v8 = (void *)objc_claimAutoreleasedReturnValue(-[PHAbstractCallParticipantLabelView statusLabel](v12, "statusLabel"));
    objc_msgSend(v8, "setAlpha:", v3);

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(-[PHSingleCallParticipantLabelView callDisplayStyleManager](v12, "callDisplayStyleManager"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[PHUIConfiguration singleCallStatusLabelFontForCallDisplayStyle:](PHUIConfiguration, "singleCallStatusLabelFontForCallDisplayStyle:", objc_msgSend(v9, "callDisplayStyle")));
  v11 = (void *)objc_claimAutoreleasedReturnValue(-[PHAbstractCallParticipantLabelView statusLabel](v12, "statusLabel"));
  objc_msgSend(v11, "setFont:", v10);

}

void sub_100010290(id a1, PHSingleCallParticipantLabelView *a2)
{
  PHSingleCallParticipantLabelView *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[PHSingleCallParticipantLabelView secondaryInfoLabel](v2, "secondaryInfoLabel"));
  objc_msgSend(v3, "setAlpha:", 1.0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(-[PHSingleCallParticipantLabelView callDisplayStyleManager](v2, "callDisplayStyleManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[PHUIConfiguration singleCallStatusLabelFontForCallDisplayStyle:](PHUIConfiguration, "singleCallStatusLabelFontForCallDisplayStyle:", objc_msgSend(v4, "callDisplayStyle")));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[PHSingleCallParticipantLabelView secondaryInfoLabel](v2, "secondaryInfoLabel"));
  objc_msgSend(v6, "setFont:", v5);

  v7 = (void *)objc_claimAutoreleasedReturnValue(-[PHSingleCallParticipantLabelView callDisplayStyleManager](v2, "callDisplayStyleManager"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[PHUIConfiguration singleCallStatusLabelFontForCallDisplayStyle:](PHUIConfiguration, "singleCallStatusLabelFontForCallDisplayStyle:", objc_msgSend(v7, "callDisplayStyle")));
  v9 = (void *)objc_claimAutoreleasedReturnValue(-[PHAbstractCallParticipantLabelView statusLabel](v2, "statusLabel"));
  objc_msgSend(v9, "setFont:", v8);

  v10 = (id)objc_claimAutoreleasedReturnValue(-[PHAbstractCallParticipantLabelView statusLabel](v2, "statusLabel"));
  objc_msgSend(v10, "setAlpha:", 1.0);

}

void sub_1000117E8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v2 = *(unsigned __int8 *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusLabel"));
  objc_msgSend(v3, "setHidden:", v2);

  v4 = *(unsigned __int8 *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "iconView"));
  objc_msgSend(v5, "setHidden:", v4);

  v6 = *(unsigned __int8 *)(a1 + 40);
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "badgeView"));
  objc_msgSend(v7, "setHidden:", v6);

}

void sub_1000118D0(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "iconView"));
  objc_msgSend(v2, "setHidden:", 1);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "badgeView"));
  objc_msgSend(v3, "setHidden:", 1);

}

void sub_100012B3C(uint64_t a1)
{
  void *v2;
  CGAffineTransform v3;
  CGAffineTransform v4;

  CGAffineTransformMakeScale(&v4, 0.9, 0.9);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "participantMarqueeLabel"));
  v3 = v4;
  objc_msgSend(v2, "setTransform:", &v3);

}

void sub_100012BA4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "participantMarqueeLabel"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusLabel"));
  objc_msgSend(v3, "setAlpha:", 0.0);

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "badgeView"));
  objc_msgSend(v4, "setAlpha:", 0.0);

}

void sub_100012C20(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];
  _OWORD v10[2];
  __int128 v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstNameLabel"));
  v8 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v10[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v7 = v10[0];
  v10[1] = v8;
  v11 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  v6 = v11;
  objc_msgSend(v2, "setTransform:", v10);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastNameLabel"));
  v9[0] = v7;
  v9[1] = v8;
  v9[2] = v6;
  objc_msgSend(v3, "setTransform:", v9);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstNameLabel"));
  objc_msgSend(v4, "setAlpha:", 1.0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastNameLabel"));
  objc_msgSend(v5, "setAlpha:", 1.0);

}

void sub_100012F98(uint64_t a1)
{
  void *v2;
  void *v3;
  CGAffineTransform v4;
  CGAffineTransform v5;
  CGAffineTransform v6;
  CGAffineTransform v7;

  CGAffineTransformMakeScale(&v7, 0.9, 0.9);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstNameLabel"));
  v6 = v7;
  objc_msgSend(v2, "setTransform:", &v6);

  CGAffineTransformMakeScale(&v5, 0.9, 0.9);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastNameLabel"));
  v4 = v5;
  objc_msgSend(v3, "setTransform:", &v4);

}

void sub_100013048(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstNameLabel"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastNameLabel"));
  objc_msgSend(v3, "setAlpha:", 0.0);

}

void sub_1000130A8(uint64_t a1)
{
  void *v2;
  __int128 v3;
  void *v4;
  void *v5;
  void *v6;
  _OWORD v7[3];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "participantMarqueeLabel"));
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v7[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v7[1] = v3;
  v7[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v7);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "participantMarqueeLabel"));
  objc_msgSend(v4, "setAlpha:", 1.0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusLabel"));
  objc_msgSend(v5, "setAlpha:", 1.0);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "badgeView"));
  objc_msgSend(v6, "setAlpha:", 1.0);

}

void sub_100013C44(uint64_t a1, uint64_t a2)
{
  id v4;
  NSObject *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  id v11;

  if (*(_BYTE *)(a1 + 48))
    objc_msgSend(*(id *)(a1 + 32), "setWantsBlur:", 0);
  if (!a2)
  {
    v4 = sub_1000C5588();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1001A8120(v5);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "sharedProfileStateOracle"));
    v11 = 0;
    v7 = objc_msgSend(v6, "updateContactAndNicknamesForAutoUpdateWithError:", &v11);
    v8 = v11;

    if (v8)
    {
      v9 = sub_1000C5588();
      v10 = objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1001A80AC((uint64_t)v8, v10);

    }
  }
}

void sub_10001505C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100015078(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "animateToFirstLabel");
    WeakRetained = v2;
  }

}

void sub_1000151B0(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusLabel"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "posterNameViewModel"));
  objc_msgSend(v3, "updatePosterNameAlpha:", 0.0);

}

id *sub_10001520C(id *result, int a2)
{
  id *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[5];

  if (a2)
  {
    v2 = result;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(result[4], "statusLabel"));
    objc_msgSend(v3, "setAttributedOrPlainText:", v2[5]);

    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[4], "posterNameViewModel"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[4], "statusLabel"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "text"));
    objc_msgSend(v4, "updateStatus:", v6);

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000152E8;
    v7[3] = &unk_100284898;
    v7[4] = v2[4];
    return (id *)+[UIView animateWithDuration:animations:](UIView, "animateWithDuration:animations:", v7, 0.200000003);
  }
  return result;
}

void sub_1000152E8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  void *v11;
  id v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstNameLabel"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "text"));
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastNameLabel"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "text"));
    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstNameLabel"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "text"));
      if (objc_msgSend(v7, "length"))
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastNameLabel"));
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "text"));
        if (objc_msgSend(v9, "length"))
          v10 = 0.0;
        else
          v10 = 1.0;

      }
      else
      {
        v10 = 1.0;
      }

    }
    else
    {
      v10 = 1.0;
    }

  }
  else
  {
    v10 = 1.0;
  }

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusLabel"));
  objc_msgSend(v11, "setAlpha:", v10);

  v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "posterNameViewModel"));
  objc_msgSend(v12, "updatePosterNameAlpha:", 1.0);

}

void sub_100016194(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  CGAffineTransform *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  CGAffineTransform v11;
  CGAffineTransform v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  if (!objc_msgSend(v2, "isCallRinging"))
  {

    goto LABEL_5;
  }
  v3 = objc_msgSend(*(id *)(a1 + 32), "ambientLayout");

  if (!v3)
  {
LABEL_5:
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avatarView"));
    v5 = v4;
    v7 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v8 = *(_OWORD *)&CGAffineTransformIdentity.a;
    v9 = v7;
    v10 = *(_OWORD *)&CGAffineTransformIdentity.tx;
    v6 = (CGAffineTransform *)&v8;
    goto LABEL_6;
  }
  CGAffineTransformMakeScale(&v12, 0.9, 0.9);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avatarView"));
  v5 = v4;
  v11 = v12;
  v6 = &v11;
LABEL_6:
  objc_msgSend(v4, "setTransform:", v6, v8, v9, v10, *(_OWORD *)&v11.a, *(_OWORD *)&v11.c, *(_OWORD *)&v11.tx);

}

uint64_t sub_100016260(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100019D30(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_10001B310(id a1)
{
  id v1;
  void *v2;

  v1 = -[PHPIPController initForScreenSharing:]([PHPIPController alloc], "initForScreenSharing:", 0);
  v2 = (void *)qword_1002DC678;
  qword_1002DC678 = (uint64_t)v1;

}

id sub_10001B708(uint64_t a1, void *a2)
{
  uint64_t v2;

  if (*(_BYTE *)(a1 + 32))
    v2 = 5;
  else
    v2 = 4;
  return _objc_msgSend(a2, "setContentType:", v2);
}

void sub_10001BD64(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_10001BD88(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  uint64_t v4;
  _QWORD block[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "setRotating:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v3, "postNotificationName:object:", CFSTR("PHPIPControllerDidRotateNotification"), *(_QWORD *)(a1 + 32));

  v4 = *(_QWORD *)(a1 + 40);
  if (v4)
    (*(void (**)(void))(v4 + 16))();
  if (objc_msgSend(WeakRetained, "wantsPreferredContentSizeUpdateAfterRotationFinishes"))
  {
    objc_msgSend(WeakRetained, "setWantsPreferredContentSizeUpdateAfterRotationFinishes:", 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001BE5C;
    block[3] = &unk_100284898;
    block[4] = WeakRetained;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }

}

void sub_10001BE5C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pipProxy"));
  objc_msgSend(v1, "preferredContentSizeDidChangeForViewController");

}

void sub_10001BE8C(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "setRotating:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v4, "postNotificationName:object:", CFSTR("PHPIPControllerWillRotateNotification"), *(_QWORD *)(a1 + 32));

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pipProxy"));
  objc_msgSend(v5, "rotateContentContainer:withCompletionHandler:", a2, *(_QWORD *)(a1 + 40));

}

void sub_10001C410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001C43C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setPipState:", 3);

}

id sub_10001CA3C(uint64_t a1)
{
  id result;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1 + 32), "pipState");
  if (!result)
  {
    result = objc_msgSend(*(id *)(a1 + 32), "shouldObtainDismissalAssertions");
    if ((_DWORD)result)
      return objc_msgSend(objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32), v3), "inCallRootViewControllerClass"), "releaseDismissalAssertionForReason:", CFSTR("PHPIPPresenceReason"));
  }
  return result;
}

BOOL sub_10001DE5C(id a1, TUConversationActivitySession *a2)
{
  TUConversationActivitySession *v2;
  BOOL v3;

  v2 = a2;
  v3 = -[TUConversationActivitySession state](v2, "state") == (id)1
    || -[TUConversationActivitySession state](v2, "state") == 0;

  return v3;
}

BOOL sub_10001DEA8(id a1, TUConversationParticipant *a2, BOOL *a3)
{
  return -[TUConversationParticipant isScreenEnabled](a2, "isScreenEnabled", a3);
}

void sub_10001F598(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  id v5;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "speechSynthesizer"));
  v5 = 0;
  objc_msgSend(v1, "pauseSpeakingAtNextBoundary:synchronously:error:", 1, 0, &v5);
  v2 = v5;

  if (v2)
  {
    v3 = sub_1000C5588();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1001A8298();

  }
}

void sub_10001F958(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "speechSynthesizer"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "startSpeakingRequest:", *(_QWORD *)(a1 + 32)));

    if (v5)
    {
      v6 = sub_1000C5588();
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1001A8298();

    }
    objc_msgSend(v3, "setPlayAnnouncementBlock:", 0);

  }
}

void sub_10001F9F4(uint64_t a1)
{
  double v2;
  dispatch_time_t v3;

  objc_msgSend(*(id *)(a1 + 32), "setPlayAnnouncementBlock:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "delay");
  v3 = dispatch_time(0, (uint64_t)(v2 * *(double *)""));
  dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, *(dispatch_block_t *)(a1 + 40));
}

void sub_10001FAEC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "playAnnouncementBlock"));
  v3 = v2;
  if (v2)
    dispatch_block_cancel(v2);
  objc_msgSend(*(id *)(a1 + 32), "setPlayAnnouncementBlock:", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "speechSynthesizer"));
  v8 = 0;
  objc_msgSend(v4, "stopSpeakingAtNextBoundary:synchronously:error:", 1, 0, &v8);
  v5 = v8;

  if (v5)
  {
    v6 = sub_1000C5588();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1001A8298();

  }
}

void sub_10002002C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id sub_100020764(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "currentState");
  if ((_DWORD)result == 7)
    return objc_msgSend(*(id *)(a1 + 32), "setCurrentState:", 0);
  return result;
}

void sub_1000213C4(uint64_t a1, void *a2)
{
  id v3;
  id *v4;
  id v5;
  void *v6;
  id v7;

  v3 = objc_msgSend(a2, "response");
  if (v3 == (id)2)
  {
    v4 = (id *)(a1 + 40);
  }
  else
  {
    if (v3 != (id)1)
      return;
    v4 = (id *)(a1 + 32);
  }
  v5 = *v4;
  if (v5)
  {
    v7 = v5;
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"));
    objc_msgSend(v6, "openSensitiveURL:withOptions:", v7, 0);

  }
}

id sub_10002169C(uint64_t a1)
{
  id result;
  double v3;
  double v4;
  double v5;

  result = +[PHUIConfiguration inCallBottomBarSpacing](PHUIConfiguration, "inCallBottomBarSpacing");
  v3 = 50.0;
  switch((unint64_t)result)
  {
    case 0uLL:
      break;
    case 2uLL:
      v3 = 85.5;
      break;
    case 3uLL:
      v3 = 78.3000031;
      break;
    case 4uLL:
      v3 = 54.0;
      break;
    case 5uLL:
      result = objc_msgSend(*(id *)(a1 + 40), "homeButtonOffsetForView:", *(_QWORD *)(a1 + 32), 50.0);
      v5 = 124.0;
      goto LABEL_8;
    case 6uLL:
      result = objc_msgSend(*(id *)(a1 + 40), "homeButtonOffsetForView:", *(_QWORD *)(a1 + 32), 50.0);
      v5 = 126.0;
LABEL_8:
      v3 = v5 - v4;
      break;
    default:
      v3 = 61.0;
      break;
  }
  qword_1002DC688 = *(_QWORD *)&v3;
  return result;
}

void sub_10002178C(id a1)
{
  unint64_t v1;
  uint64_t v2;

  v1 = +[PHUIConfiguration inCallBottomBarLowerOffset](PHUIConfiguration, "inCallBottomBarLowerOffset");
  v2 = 0;
  if (v1 - 1 <= 4)
    v2 = qword_10023F228[v1 - 1];
  qword_1002DC698 = v2;
}

void sub_100021BF8(id a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  _QWORD v20[2];
  uint8_t buf[4];
  void *v22;

  v1 = sub_1000C5588();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PHAudioCallViewController: Requested Punch Out presentation", buf, 2u);
  }

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "frontmostAudioOrVideoCall"));

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "provider"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bundleIdentifier"));

    v7 = objc_msgSend(v6, "length");
    v8 = sub_1000C5588();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    v10 = v9;
    if (v7)
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v22 = v6;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Punching out to app with bundle identifier %@", buf, 0xCu);
      }

      v19[0] = FBSOpenApplicationOptionKeyUnlockDevice;
      v19[1] = FBSOpenApplicationOptionKeyPromptUnlockDevice;
      v20[0] = &__kCFBooleanTrue;
      v20[1] = &__kCFBooleanTrue;
      v10 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v20, v19, 2));
      v11 = objc_alloc_init((Class)FBSOpenApplicationService);
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[FBSOpenApplicationOptions optionsWithDictionary:](FBSOpenApplicationOptions, "optionsWithDictionary:", v10));
      objc_msgSend(v11, "openApplication:withOptions:completion:", v6, v12, &stru_100285130);

    }
    else if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      sub_1001A82F8((uint64_t)v4, v10, v13, v14, v15, v16, v17, v18);
    }

  }
}

void sub_100021DFC(id a1, BSProcessHandle *a2, NSError *a3)
{
  BSProcessHandle *v4;
  NSError *v5;
  id v6;
  NSObject *v7;
  int v8;
  BSProcessHandle *v9;
  __int16 v10;
  NSError *v11;

  v4 = a2;
  v5 = a3;
  v6 = sub_1000C5588();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 138412546;
    v9 = v4;
    v10 = 2112;
    v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Punchout completed - Process: %@ Error: %@", (uint8_t *)&v8, 0x16u);
  }

}

void sub_100021FAC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = a1 + 32;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "provider"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bundleIdentifier"));

  if (objc_msgSend(v4, "length"))
  {
    objc_msgSend(*(id *)(a1 + 40), "activateProviderInBackgroundWithBundleID:", v4);
  }
  else
  {
    v5 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1001A8360(v2, v6, v7, v8, v9, v10, v11, v12);

  }
}

void sub_10002217C(id a1, BOOL a2, NSError *a3)
{
  NSError *v3;
  id v4;
  NSObject *v5;
  int v6;
  NSError *v7;

  v3 = a3;
  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138412290;
    v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Background activation completed - Error: %@", (uint8_t *)&v6, 0xCu);
  }

}

void sub_10002272C(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1002DC6A8;
  qword_1002DC6A8 = (uint64_t)v1;

}

void sub_100022B8C(id a1)
{
  PHAudioInterruptionController *v1;
  void *v2;

  v1 = objc_alloc_init(PHAudioInterruptionController);
  v2 = (void *)qword_1002DC6B8;
  qword_1002DC6B8 = (uint64_t)v1;

}

void sub_100022E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100022E74(uint64_t a1)
{
  id WeakRetained;
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Communication policy changed notification fired", v4, 2u);
  }

  objc_msgSend(WeakRetained, "handleCommunicationPolicyChangedNotification");
}

BOOL sub_100023740(id a1, TUCall *a2)
{
  TUCall *v2;
  unsigned __int8 v3;

  v2 = a2;
  if ((-[TUCall isSOS](v2, "isSOS") & 1) != 0)
    v3 = 1;
  else
    v3 = -[TUCall isEmergency](v2, "isEmergency");

  return v3;
}

void sub_100023CAC(id a1)
{
  uint64_t i;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableString stringWithString:](NSMutableString, "stringWithString:", CFSTR("01234567890abcdefghijklmnopqrstuvwxyz+*#")));
  for (i = 0; i != 12; ++i)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[TPNumberPadButton localizedLettersForCharacter:](TPNumberPadButton, "localizedLettersForCharacter:", qword_10023F260[i]));
    objc_msgSend(v6, "appendString:", v2);

  }
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceCharacterSet](NSCharacterSet, "whitespaceCharacterSet"));
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "stringByTrimmingCharactersInSet:", v3));
  v5 = (void *)qword_1002DC6C8;
  qword_1002DC6C8 = v4;

}

void sub_100025B94(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "speechSynthesizer"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "startSpeakingRequest:", *(_QWORD *)(a1 + 40)));

  if (v3)
  {
    v4 = sub_1000C5588();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1001A83CC((uint64_t)v3, v5);

  }
}

void sub_1000265D8(uint64_t a1)
{
  void *v2;
  __int128 v3;
  void *v4;
  _OWORD v5[3];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v5);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v4, "setAlpha:", 1.0);

}

BOOL sub_100026A34(id a1, TUCall *a2)
{
  TUCall *v2;
  BOOL v3;

  v2 = a2;
  if (-[TUCall isConversation](v2, "isConversation"))
    v3 = -[TUCall status](v2, "status") == 3;
  else
    v3 = 0;

  return v3;
}

id sub_100026CC4(uint64_t a1)
{
  id result;
  _QWORD v3[5];
  _QWORD v4[4];
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "activePhoneCallExists");
  if ((result & 1) == 0)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100026D64;
    v4[3] = &unk_100284898;
    v5 = *(_QWORD *)(a1 + 32);
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100026DE0;
    v3[3] = &unk_1002848C0;
    v3[4] = v5;
    return +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", v4, v3, 0.349999994);
  }
  return result;
}

void sub_100026D64(uint64_t a1)
{
  void *v2;
  void *v3;
  CGAffineTransform v4;
  CGAffineTransform v5;

  CGAffineTransformMakeScale(&v5, 1.5, 1.5);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v4 = v5;
  objc_msgSend(v2, "setTransform:", &v4);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v3, "setAlpha:", 0.0);

}

void sub_100026DE0(uint64_t a1)
{
  void *v2;
  __int128 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  _OWORD v14[3];
  uint8_t buf[16];

  if ((objc_msgSend(*(id *)(a1 + 32), "activePhoneCallExists") & 1) == 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v5, "removeObserver:", *(_QWORD *)(a1 + 32));

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[SOSManager sharedInstance](SOSManager, "sharedInstance"));
    v7 = objc_msgSend(v6, "currentSOSInitiationState");

    if (v7 == (id)1)
    {
      v8 = sub_1000C5588();
      v4 = objc_claimAutoreleasedReturnValue(v8);
      if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
        goto LABEL_10;
      *(_WORD *)buf = 0;
      v9 = "Not dismissing PHCarplayInCallViewController's remoteViewControllerProxy because SOS is active";
    }
    else
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_remoteViewControllerProxy"));
      objc_msgSend(v10, "dismiss");

      v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "delegate"));
      objc_msgSend(v12, "hideCarPlayUI");

      v13 = sub_1000C5588();
      v4 = objc_claimAutoreleasedReturnValue(v13);
      if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
        goto LABEL_10;
      *(_WORD *)buf = 0;
      v9 = "Dismissing PHCarPlayInCallViewController";
    }
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, v9, buf, 2u);
    goto LABEL_10;
  }
  if (!objc_msgSend(*(id *)(a1 + 32), "activePhoneCallExists"))
    return;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v14[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v14[1] = v3;
  v14[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v14);

  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  -[NSObject setAlpha:](v4, "setAlpha:", 1.0);
LABEL_10:

}

void sub_1000292F0(uint64_t a1)
{
  unsigned int v2;
  double v3;
  void *v4;
  id v5;

  v2 = objc_msgSend(*(id *)(a1 + 32), "isHighlighted");
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "roundView"));
  v3 = 0.649999976;
  if (!v2)
    v3 = 0.100000001;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](UIColor, "colorWithWhite:alpha:", 1.0, v3));
  objc_msgSend(v5, "setBackgroundColor:", v4);

}

void sub_10002C6C4(id a1)
{
  +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHScreenTimeAlertAssertionReason"));
}

void sub_10002D990(id a1)
{
  unint64_t v1;
  double v2;

  v1 = +[PHUIConfiguration inCallControlSpacing](PHUIConfiguration, "inCallControlSpacing");
  v2 = 41.0;
  if (!v1)
    v2 = 34.0;
  qword_1002DC6F0 = *(_QWORD *)&v2;
}

void sub_10002EE0C(id *a1)
{
  id v2;

  objc_msgSend(a1[4], "setAlpha:", 0.0);
  objc_msgSend(a1[5], "setAlpha:", 0.0);
  objc_msgSend(a1[6], "setAlpha:", 0.0);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "singleCallLabelView"));
  objc_msgSend(v2, "setAlpha:", 1.0);

}

id sub_10002EE70(id *a1)
{
  objc_msgSend(a1[4], "removeFromSuperview");
  objc_msgSend(a1[5], "removeFromSuperview");
  return objc_msgSend(a1[6], "removeFromSuperview");
}

void sub_10002EEA0(id *a1)
{
  void *v2;
  id v3;

  objc_msgSend(a1[4], "setAlpha:", 0.0);
  objc_msgSend(a1[5], "setAlpha:", 0.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "topMultipleCallLabelView"));
  objc_msgSend(v2, "setAlpha:", 1.0);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "bottomMultipleCallLabelView"));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

id sub_10002EF14(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  return objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
}

id sub_100030DC4(void *a1)
{
  id v1;
  id v2;
  void *v3;

  v1 = a1;
  if (!v1)
    v1 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v2 = objc_alloc_init((Class)NSDateFormatter);
  objc_msgSend(v2, "setDateStyle:", 0);
  objc_msgSend(v2, "setTimeStyle:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stringFromDate:", v1));

  return v3;
}

BOOL sub_100030E48(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  _BOOL8 v10;

  v1 = a1;
  if (!v1)
    v1 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v2 = objc_alloc_init((Class)NSDateFormatter);
  objc_msgSend(v2, "setLocalizedDateFormatFromTemplate:", CFSTR("j"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stringFromDate:", v1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet decimalDigitCharacterSet](NSCharacterSet, "decimalDigitCharacterSet"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "invertedSet"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "componentsSeparatedByCharactersInSet:", v5));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "componentsJoinedByString:", &stru_10028DC20));

  v8 = objc_alloc_init((Class)NSNumberFormatter);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "numberFromString:", v7));

  v10 = objc_msgSend(v9, "intValue") == 1;
  return v10;
}

id sub_100030F68(void *a1, int a2)
{
  id v3;
  _BOOL4 v4;
  void *v5;
  void *v6;
  const __CFString *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;

  v3 = a1;
  if (!v3)
    v3 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v4 = sub_100030E48(v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v6 = v5;
  if (v4)
  {
    if (a2)
      v7 = CFSTR("SOS_KAPPA_MASKED_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_SINGULAR");
    else
      v7 = CFSTR("SOS_KAPPA_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_SINGULAR");
  }
  else if (a2)
  {
    v7 = CFSTR("SOS_KAPPA_MASKED_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_PLURAL");
  }
  else
  {
    v7 = CFSTR("SOS_KAPPA_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_PLURAL");
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", v7, &stru_10028DC20, CFSTR("Localizable-kappa")));
  v9 = sub_100030DC4(v3);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v8, v10));

  return v11;
}

id sub_100031078(void *a1)
{
  id v1;
  _BOOL4 v2;
  void *v3;
  void *v4;
  const __CFString *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;

  v1 = a1;
  if (!v1)
    v1 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v2 = sub_100030E48(v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v4 = v3;
  if (v2)
    v5 = CFSTR("SOS_NEWTON_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_SINGULAR");
  else
    v5 = CFSTR("SOS_NEWTON_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_PLURAL");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", v5, &stru_10028DC20, CFSTR("Localizable-Stewie")));
  v7 = sub_100030DC4(v1);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v6, v8));

  return v9;
}

void sub_100031F94(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  PHEmergencyHandsetDialerNumberPadButton *v6;
  signed int v7;
  uint64_t v8;
  void *v9;
  id v10;

  v5 = a2;
  v6 = [PHEmergencyHandsetDialerNumberPadButton alloc];
  v7 = objc_msgSend(v5, "intValue");

  v8 = v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
  v10 = -[PHEmergencyHandsetDialerNumberPadButton initForCharacter:style:](v6, "initForCharacter:style:", v8, objc_msgSend(v9, "userInterfaceStyle"));

  objc_msgSend(*(id *)(a1 + 40), "insertObject:atIndex:", v10, a3);
}

void sub_100032244(id a1)
{
  void *v1;
  void *v2;
  double v3;
  int v4;
  BOOL v5;
  double v6;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "currentMode"));
  objc_msgSend(v2, "size");
  v4 = (int)v3;

  v5 = v4 > 2207 || v4 == 1334;
  v6 = 13.0;
  if (v5)
    v6 = 15.0;
  qword_1002D57C8 = *(_QWORD *)&v6;
}

void sub_100033090(id a1)
{
  unint64_t v1;
  double v2;

  v1 = +[PHUIConfiguration inCallBottomBarSpacing](PHUIConfiguration, "inCallBottomBarSpacing");
  v2 = 8.0;
  if (v1 == 6)
    v2 = 11.0;
  qword_1002DC708 = *(_QWORD *)&v2;
}

id sub_100033828(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

id sub_100034D60(void *a1)
{
  id v1;
  CGContext *CurrentContext;
  id v3;
  CGColor *v4;
  UIImage *ImageFromCurrentImageContext;
  void *v6;
  CGSize v8;
  CGRect v9;

  v1 = a1;
  v8.width = 1.0;
  v8.height = 1.0;
  UIGraphicsBeginImageContext(v8);
  CurrentContext = UIGraphicsGetCurrentContext();
  v3 = objc_retainAutorelease(v1);
  v4 = (CGColor *)objc_msgSend(v3, "CGColor");

  CGContextSetFillColorWithColor(CurrentContext, v4);
  v9.origin.x = 0.0;
  v9.origin.y = 0.0;
  v9.size.width = 1.0;
  v9.size.height = 1.0;
  CGContextFillRect(CurrentContext, v9);
  ImageFromCurrentImageContext = UIGraphicsGetImageFromCurrentImageContext();
  v6 = (void *)objc_claimAutoreleasedReturnValue(ImageFromCurrentImageContext);
  UIGraphicsEndImageContext();
  return v6;
}

uint64_t sub_100037D34(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = a1;
  v2 = (uint64_t)objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = *(_QWORD *)v7;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v7 != v3)
          objc_enumerationMutation(v1);
        if (objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * i), "type", (_QWORD)v6) == (id)4)
        {
          v2 = 1;
          goto LABEL_11;
        }
      }
      v2 = (uint64_t)objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_11:

  return v2;
}

uint64_t start(int a1, char **a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  objc_class *v7;
  NSString *v8;
  NSString *v9;
  uint64_t v10;

  v4 = objc_autoreleasePoolPush();
  v5 = +[ICSApplicationServices sharedInstance](ICSApplicationServices, "sharedInstance");
  v7 = (objc_class *)objc_opt_class(ICSApplicationDelegate, v6);
  v8 = NSStringFromClass(v7);
  v9 = (NSString *)objc_claimAutoreleasedReturnValue(v8);
  v10 = UIApplicationMain(a1, a2, 0, v9);

  objc_autoreleasePoolPop(v4);
  return v10;
}

id sub_100038CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "addAttribute:value:range:", NSForegroundColorAttributeName, *(_QWORD *)(a1 + 40), a2, a3);
}

id sub_10003A654(uint64_t a1)
{
  uint64_t v2;
  objc_super v4;

  v2 = *(unsigned __int8 *)(a1 + 40);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)PHCarPlayInCallKeypadViewController;
  objc_msgSendSuper2(&v4, "setLimitedSoftPhoneKeypad:", v2);
  return objc_msgSend(*(id *)(a1 + 32), "postMessageOverlayIfNeeded");
}

void sub_10003C2B8(uint64_t a1)
{
  unsigned __int8 v2;
  void *v3;
  unsigned int v4;
  void *v5;
  double v6;
  double v7;
  unsigned int v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  unsigned int v14;
  id v15;

  v2 = objc_msgSend(*(id *)(a1 + 32), "isEnabled");
  v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    v4 = objc_msgSend(v3, "isSelected");
    v5 = *(void **)(a1 + 32);
    if (v4)
    {
      v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "roundView"));
      v6 = 1.0;
      v7 = 1.0;
LABEL_10:
      v10 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](UIColor, "colorWithWhite:alpha:", v6, v7));
LABEL_11:
      v11 = (void *)v10;
      objc_msgSend(v15, "setBackgroundColor:", v10);

      return;
    }
    v8 = objc_msgSend(v5, "isHighlighted");
    v9 = *(void **)(a1 + 32);
    if (v8)
    {
      v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "roundView"));
      v7 = 0.649999976;
    }
    else
    {
      v12 = objc_msgSend(v9, "controlType");
      v13 = *(void **)(a1 + 32);
      if (v12 == (id)15)
      {
        v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "roundView"));
        v10 = objc_claimAutoreleasedReturnValue(+[UIColor systemRedColor](UIColor, "systemRedColor"));
        goto LABEL_11;
      }
      v14 = objc_msgSend(v13, "isButtonLayoutEnabled");
      v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "roundView"));
      if (v14)
      {
        v10 = objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
        goto LABEL_11;
      }
      v7 = 0.100000001;
    }
LABEL_9:
    v6 = 1.0;
    goto LABEL_10;
  }
  if ((objc_msgSend(v3, "isButtonLayoutEnabled") & 1) == 0)
  {
    v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "roundView"));
    v7 = 0.0500000007;
    goto LABEL_9;
  }
}

id sub_10003C7A4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  NSString *v4;
  void *v5;
  void *v6;
  void *v7;
  int v9;
  void *v10;

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = NSStringFromCGPoint(*(CGPoint *)(a1 + 40));
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    v9 = 138412290;
    v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Presenting audio routing menu at location: %@", (uint8_t *)&v9, 0xCu);

  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "menuDataSource"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "menuForAudioControlsButton:", *(_QWORD *)(a1 + 32)));

  return v7;
}

void sub_10003D304(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10003D320(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD v18[2];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "lagunaActions"));
    if (objc_msgSend(v6, "count"))
    {
      v7 = v6;
      v8 = v3;
      if (v7)
      {
        v9 = v8;
        if (objc_msgSend(v8, "count"))
        {
          v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithTitle:image:identifier:options:children:](UIMenu, "menuWithTitle:image:identifier:options:children:", &stru_10028DC20, 0, 0, 1, v9));
          v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithTitle:image:identifier:options:children:](UIMenu, "menuWithTitle:image:identifier:options:children:", &stru_10028DC20, 0, 0, 1, v7));
          v18[0] = v10;
          v18[1] = v11;
          v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v18, 2));
          v13 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithTitle:image:identifier:options:children:](UIMenu, "menuWithTitle:image:identifier:options:children:", &stru_10028DC20, 0, 0, 1, v12));

          objc_msgSend(v5, "setMenu:", v13);
        }
        else
        {
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "menu"));
          v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "menuByReplacingChildren:", v7));
          objc_msgSend(v5, "setMenu:", v17);

        }
        goto LABEL_10;
      }
    }
    else
    {
      v14 = v3;
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "menu"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "menuByReplacingChildren:", v3));
    objc_msgSend(v5, "setMenu:", v16);

    v7 = 0;
LABEL_10:

  }
}

uint64_t sub_10003D51C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10003D5D0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id *v4;
  void *v5;
  void *v6;
  void (**v7)(id, _QWORD);

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v5 = *(void **)(v2 + 16);
  v4 = (id *)(v2 + 16);
  if (v5 != v3)
  {
    objc_storeStrong(v4, v3);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "menuChangeHandler"));

    if (v6)
    {
      v7 = (void (**)(id, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "menuChangeHandler"));
      v7[2](v7, *(_QWORD *)(a1 + 40));

    }
  }
}

void sub_10003D7A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10003D7C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10003D7DC(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  NSObject *v6;
  _QWORD block[5];
  id v8;
  id v9;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "reloadQueue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10003D89C;
    block[3] = &unk_1002854F0;
    v9 = *(id *)(a1 + 32);
    block[4] = v5;
    v8 = v3;
    dispatch_async(v6, block);

  }
}

void sub_10003D89C(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 48);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "menuActionsWithRoutes:", *(_QWORD *)(a1 + 40)));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

void sub_10003DE64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003DE80(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    if (objc_msgSend(WeakRetained, "style") == (id)3)
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[AVAudioSession sharedInstance](AVAudioSession, "sharedInstance"));
      objc_msgSend(v3, "activateVoicemailAudioSession");

    }
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "delegate"));
    objc_msgSend(v4, "audioRoutingMenuController:didSelectRoute:", v5, *(_QWORD *)(a1 + 32));

  }
  if (objc_msgSend(*(id *)(a1 + 32), "isSpeaker"))
    +[TPTipsHelper donateEventSpeakerUsed](TPTipsHelper, "donateEventSpeakerUsed");

}

void sub_10003E2A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003E2C0(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  char v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v6 = WeakRetained;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    v4 = objc_opt_respondsToSelector(v3, "audioRoutingMenuController:didSelectLagunaActionForHandle:conversation:");

    WeakRetained = v6;
    if ((v4 & 1) != 0)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "delegate"));
      objc_msgSend(v5, "audioRoutingMenuController:didSelectLagunaActionForHandle:conversation:", v6, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

      WeakRetained = v6;
    }
  }

}

void sub_10003E460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003E47C(uint64_t a1)
{
  id WeakRetained;
  unsigned int v2;
  void *v3;
  char v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v6 = WeakRetained;
    v2 = objc_msgSend(WeakRetained, "isMuted");
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "delegate"));
    v4 = objc_opt_respondsToSelector(v3, "audioRoutingMenuController:didToggleMute:");

    WeakRetained = v6;
    if ((v4 & 1) != 0)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "delegate"));
      objc_msgSend(v5, "audioRoutingMenuController:didToggleMute:", v6, v2 ^ 1);

      WeakRetained = v6;
    }
  }

}

void sub_10003EDE4(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(+[AVSystemController sharedAVSystemController](AVSystemController, "sharedAVSystemController"));
  objc_msgSend(v1, "startObservingNotificationsForAVSystemController:", v2);

}

id sub_10003FC50(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_playCallAnnouncement:", *(_QWORD *)(a1 + 40));
}

id sub_10003FD04(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "start");
}

id sub_10003FD78(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  uint8_t v6[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Stopping ringtone and announcement", v6, 2u);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callAnnouncement"));
  objc_msgSend(v4, "stop");

  objc_msgSend(*(id *)(a1 + 32), "setAudioSessionIdentifier:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "setCallAnnouncement:", 0);
}

void sub_10003FED8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:userInfo:", CFSTR("PHRingtoneControllerAudioSessionIdentifierDidChangeNotification"), *(_QWORD *)(a1 + 32), 0);

}

void sub_100040068(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "stopObservingNotificationsForAVSystemController:", *(_QWORD *)(a1 + 40));
  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[AVSystemController sharedAVSystemController](AVSystemController, "sharedAVSystemController"));
  objc_msgSend(v2, "startObservingNotificationsForAVSystemController:", v3);

}

id sub_100040214(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAudioSessionIdentifier:", objc_msgSend(*(id *)(a1 + 32), "audioSessionIdentifierForSessionDescriptors:", *(_QWORD *)(a1 + 40)));
}

void sub_100040B34(id a1)
{
  PHInCallUtilities *v1;
  void *v2;

  v1 = objc_alloc_init(PHInCallUtilities);
  v2 = (void *)qword_1002DC718;
  qword_1002DC718 = (uint64_t)v1;

}

void sub_100040E4C()
{
  id v0;
  NSObject *v1;
  uint8_t v2[16];

  v0 = sub_1000C5588();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "LockscreenMessagingChangedNotification", v2, 2u);
  }

  byte_1002DC73A = 0;
}

void sub_100040EB8()
{
  id v0;
  NSObject *v1;
  uint8_t v2[16];

  v0 = sub_1000C5588();
  v1 = objc_claimAutoreleasedReturnValue(v0);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "LostMode changed", v2, 2u);
  }

  byte_1002DC738 = 0;
}

void sub_100041864(uint64_t a1)
{
  int v2;
  __CFNotificationCenter *DarwinNotifyCenter;

  v2 = BYSetupAssistantNeedsToRun();
  byte_1002DC748 = v2;
  if (v2)
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterAddObserver(DarwinNotifyCenter, *(const void **)(a1 + 32), (CFNotificationCallback)sub_1000418C0, BYSetupAssistantFinishedDarwinNotification, 0, CFNotificationSuspensionBehaviorDrop);
  }
}

void sub_1000418C0(__CFNotificationCenter *a1, const void *a2, const __CFString *a3)
{
  byte_1002DC748 = 0;
  CFNotificationCenterRemoveObserver(a1, a2, a3, 0);
}

uint64_t sub_100041BB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v1 = qword_1002DC750;
  v6 = qword_1002DC750;
  if (!qword_1002DC750)
  {
    v7 = *(_OWORD *)off_100285608;
    v8 = 0;
    v1 = _sl_dlopen(&v7, a1);
    v4[3] = v1;
    qword_1002DC750 = v1;
  }
  _Block_object_dispose(&v3, 8);
  return v1;
}

void sub_100041C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100041C88()
{
  uint64_t v0;
  _QWORD v2[5];
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = qword_1002DC758;
  v6 = qword_1002DC758;
  if (!qword_1002DC758)
  {
    v2[0] = _NSConcreteStackBlock;
    v2[1] = 3221225472;
    v2[2] = sub_100041D38;
    v2[3] = &unk_100285628;
    v2[4] = &v3;
    sub_100041D38((uint64_t)v2);
    v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_100041D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_100041D38(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;

  v5 = 0;
  v2 = (void *)sub_100041BB8((uint64_t)&v5);
  v3 = v5;
  if (!v2)
  {
    v3 = (char *)abort_report_np("%s", v5);
    goto LABEL_5;
  }
  if (v5)
LABEL_5:
    free(v3);
  result = dlsym(v2, "_AXSPhoneLockToEndCallEnabled");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  qword_1002DC758 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100042490(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nameAndLabelLabel"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_1000424C4(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nameAndLabelLabel"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

void sub_1000424F8(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nameAndLabelLabel"));
  objc_msgSend(v2, "setAttributedText:", v1);

}

void sub_10004309C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  id *v15;
  uint64_t v16;

  objc_destroyWeak(v15);
  _Block_object_dispose(&a15, 8);
  objc_destroyWeak((id *)(v16 - 56));
  _Unwind_Resume(a1);
}

void sub_1000430D4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  NSObject *v5;
  uint8_t v6[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    if ((objc_msgSend(WeakRetained, "pauseTimer") & 1) == 0
      && !--*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    {
      v4 = sub_1000C5588();
      v5 = objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PHCheckInView,check-in completed with no user interaction", v6, 2u);
      }

      objc_msgSend(v3, "stopAndNotifyResult:", 0);
    }
  }

}

void sub_100044084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000440A0(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSMutableArray);
  v2 = (void *)qword_1002DC768;
  qword_1002DC768 = (uint64_t)v1;

}

uint64_t sub_1000440C8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000440D8(uint64_t a1)
{

}

id sub_1000440E0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  return objc_msgSend((id)qword_1002DC768, "removeObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
}

BOOL sub_100044158(void *a1)
{
  return (void *)+[PHUIConfiguration inCallControlAlignment](PHUIConfiguration, "inCallControlAlignment") == a1;
}

void sub_1000441C8(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  id v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  __int16 v17;
  int v18;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[CADisplay mainDisplay](CADisplay, "mainDisplay"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  if (v3 >= v5)
    v6 = v3;
  else
    v6 = v5;
  v7 = (int)v6;
  v8 = MGGetProductType();
  if (v7 == 1136)
    goto LABEL_5;
  if (v8 <= 2795618602)
  {
    if (v8 > 851437780)
    {
      if (v8 <= 2688879998)
      {
        if (v8 != 851437781)
        {
          if (v8 != 1169082144)
            goto LABEL_23;
          goto LABEL_42;
        }
LABEL_32:
        v11 = v7 == 2556;
        goto LABEL_45;
      }
      if (v8 != 2688879999)
      {
        if (v8 != 2793418701)
          goto LABEL_23;
        goto LABEL_32;
      }
      goto LABEL_33;
    }
    if (v8 == 133314240)
      goto LABEL_32;
    if (v8 != 330877086)
    {
      v10 = 574536383;
LABEL_22:
      if (v8 != v10)
        goto LABEL_23;
LABEL_33:
      v12 = v7 == 2796;
      goto LABEL_34;
    }
    v12 = v7 == 2868;
LABEL_34:
    v9 = 14;
    if (!v12)
      v9 = 15;
    goto LABEL_47;
  }
  if (v8 <= 3001488777)
  {
    if (v8 == 2795618603)
    {
      v11 = v7 == 2622;
LABEL_45:
      v9 = 9;
      if (v11)
        v9 = 12;
      goto LABEL_47;
    }
    if (v8 == 2940697645)
      goto LABEL_32;
    v10 = 2941181571;
    goto LABEL_22;
  }
  if (v8 <= 3885279869)
  {
    if (v8 == 3001488778)
    {
LABEL_42:
      v11 = v7 == 2532;
      goto LABEL_45;
    }
    v10 = 3825599860;
    goto LABEL_22;
  }
  if (v8 == 4201643249)
  {
    v12 = v7 == 2778;
    goto LABEL_34;
  }
  if (v8 == 3885279870)
  {
    v9 = 9;
    if (v7 == 2436)
      v9 = 10;
    goto LABEL_47;
  }
LABEL_23:
  if (v7 > 2271)
  {
    if (v7 > 2531)
    {
      if (v7 > 2731)
      {
        if (v7 == 2732 || v7 == 2752)
        {
          v9 = 7;
          goto LABEL_47;
        }
        if (v7 == 2778)
        {
          v9 = 14;
          goto LABEL_47;
        }
        goto LABEL_48;
      }
      if (v7 == 2532)
      {
        v9 = 12;
        goto LABEL_47;
      }
      if (v7 != 2688)
        goto LABEL_48;
LABEL_74:
      v9 = 5;
      goto LABEL_47;
    }
    if (v7 > 2387)
    {
      if (v7 != 2388)
      {
        if (v7 != 2436)
          goto LABEL_48;
        goto LABEL_77;
      }
    }
    else
    {
      if (v7 == 2272)
      {
LABEL_5:
        v9 = 0;
LABEL_47:
        qword_1002DC770 = v9;
        goto LABEL_48;
      }
      if (v7 != 2360)
        goto LABEL_48;
    }
    v9 = 8;
    goto LABEL_47;
  }
  v9 = 2;
  if (v7 > 2000)
  {
    if (v7 > 2078)
    {
      switch(v7)
      {
        case 2079:
          v9 = 9;
          break;
        case 2208:
          v9 = 6;
          break;
        case 2224:
          v9 = 3;
          break;
        default:
          goto LABEL_48;
      }
      goto LABEL_47;
    }
    if (v7 != 2001)
    {
      if (v7 == 2048)
        goto LABEL_47;
      goto LABEL_48;
    }
LABEL_79:
    v9 = 1;
    goto LABEL_47;
  }
  if (v7 > 1623)
  {
    if (v7 != 1624)
    {
      if (v7 != 1792)
        goto LABEL_48;
      goto LABEL_74;
    }
LABEL_77:
    v9 = 4;
    goto LABEL_47;
  }
  if (v7 == 1024)
    goto LABEL_47;
  if (v7 == 1334)
    goto LABEL_79;
LABEL_48:
  v13 = sub_1000C5588();
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v15 = 134218240;
    v16 = qword_1002DC770;
    v17 = 1024;
    v18 = v7;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Determined screen size to be %ld for screenHeight: %d", (uint8_t *)&v15, 0x12u);
  }

}

char *sub_1000445EC(uint64_t a1)
{
  char *result;
  uint64_t v2;

  result = (char *)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  if ((unint64_t)(result - 1) > 0xE)
    v2 = 3;
  else
    v2 = qword_10023F600[(_QWORD)(result - 1)];
  qword_1002D5838 = v2;
  return result;
}

unint64_t sub_1000446A0(uint64_t a1)
{
  unint64_t result;
  uint64_t v2;

  result = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  if (result > 0xE)
    v2 = 1;
  else
    v2 = qword_10023F678[result];
  qword_1002DC788 = v2;
  return result;
}

unint64_t sub_100044750(uint64_t a1)
{
  unint64_t result;
  uint64_t v2;

  result = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  if (result > 0xF)
    v2 = 1;
  else
    v2 = qword_10023F6F0[result];
  qword_1002DC798 = v2;
  return result;
}

char *sub_100044800(uint64_t a1)
{
  char *result;
  uint64_t v2;

  result = (char *)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  if ((unint64_t)(result - 1) > 7)
    v2 = 1;
  else
    v2 = qword_10023F770[(_QWORD)(result - 1)];
  qword_1002DC7A8 = v2;
  return result;
}

id sub_1000448C0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "screenSize");
  byte_1002DC7B8 = result == 0;
  return result;
}

char *sub_10004495C(uint64_t a1)
{
  char *result;
  uint64_t v2;

  result = (char *)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  if ((unint64_t)(result - 5) > 9)
    v2 = 2;
  else
    v2 = qword_10023F7B0[(_QWORD)(result - 5)];
  qword_1002D5840 = v2;
  return result;
}

unint64_t sub_100044A1C(uint64_t a1)
{
  unint64_t result;

  result = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  byte_1002DC7D0 = (result < 0xF) & (0x5060u >> result);
  return result;
}

unint64_t sub_100044AD0(uint64_t a1)
{
  unint64_t result;

  result = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  byte_1002DC7E0 = (result < 0xF) & (0x5060u >> result);
  return result;
}

unint64_t sub_100044D9C(uint64_t a1)
{
  unint64_t result;
  uint64_t v2;

  result = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  if (result > 0xE)
    v2 = 1;
  else
    v2 = qword_10023F830[result];
  qword_1002DC7F0 = v2;
  return result;
}

char *sub_100044E4C(uint64_t a1)
{
  char *result;
  uint64_t v2;

  result = (char *)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  if ((unint64_t)(result - 1) > 0xE)
    v2 = 2;
  else
    v2 = qword_10023F8A8[(_QWORD)(result - 1)];
  qword_1002D5848 = v2;
  return result;
}

unint64_t sub_100044F00(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;

  if (objc_msgSend(*(id *)(a1 + 32), "shouldUseExplicitLayoutDimensions"))
  {
    result = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "yOffsetForDialerLCDViewForDxDevices");
  }
  else
  {
    result = +[PHUIConfiguration screenSize](PHUIConfiguration, "screenSize");
    if (result > 7)
      v3 = 0x4061000000000000;
    else
      v3 = qword_10023F920[result];
  }
  qword_1002DC808 = v3;
  return result;
}

double sub_100045014(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double result;

  objc_msgSend(*(id *)(a1 + 32), "yOffsetForDialerLCDView");
  v3 = v2;
  objc_msgSend(*(id *)(a1 + 32), "yParticipantsViewAdjustmentForKeypad");
  result = v3 + v4;
  qword_1002DC818 = *(_QWORD *)&result;
  return result;
}

void sub_100045098(id a1)
{
  if (!+[PHUIConfiguration screenSize](PHUIConfiguration, "screenSize"))
    qword_1002DC828 = 0x4046800000000000;
}

id sub_1000451C4(uint64_t a1)
{
  id result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "screenSize");
  v2 = 1;
  if (result == (id)7)
    v2 = 2;
  if (result == (id)6)
    v2 = 0;
  qword_1002DC838 = v2;
  return result;
}

unint64_t sub_10004526C(uint64_t a1)
{
  unint64_t result;
  uint64_t v2;

  result = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  if (result > 8)
    v2 = 0x4055900000000000;
  else
    v2 = qword_10023F990[result];
  qword_1002D5850 = v2;
  return result;
}

char *sub_100045320(uint64_t a1)
{
  char *result;
  double v2;

  result = (char *)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  v2 = 13.0;
  if ((unint64_t)(result - 4) <= 0xA)
    v2 = dbl_10023F9D8[(_QWORD)(result - 4)];
  qword_1002D5858 = *(_QWORD *)&v2;
  return result;
}

id sub_1000453D0(uint64_t a1)
{
  id result;
  BOOL v2;
  double v3;

  result = objc_msgSend(*(id *)(a1 + 32), "screenSize");
  v2 = result == (id)9 || result == (id)4;
  v3 = 0.0;
  if (v2)
    v3 = 2.5;
  qword_1002DC858 = *(_QWORD *)&v3;
  return result;
}

id sub_100045478(uint64_t a1)
{
  id result;
  double v2;

  result = objc_msgSend(*(id *)(a1 + 32), "screenSize");
  v2 = 4.0;
  if (result == (id)4)
    v2 = 17.0;
  qword_1002DC868 = *(_QWORD *)&v2;
  return result;
}

char *sub_100045520(uint64_t a1)
{
  char *result;
  double v2;

  result = (char *)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  v2 = 1.0;
  if ((unint64_t)(result - 1) <= 0xE)
    v2 = dbl_10023FA30[(_QWORD)(result - 1)];
  qword_1002D5860 = *(_QWORD *)&v2;
  return result;
}

unint64_t sub_100045608(uint64_t a1)
{
  unint64_t result;

  result = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "screenSize");
  byte_1002DC880 = (result < 9) & (0x18Cu >> result);
  return result;
}

id sub_1000456BC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "screenSize");
  byte_1002DC890 = result == (id)7;
  return result;
}

id sub_100045764(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "screenSize");
  byte_1002DC8A0 = result == (id)6;
  return result;
}

id sub_100045800(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "screenSize");
  byte_1002DC8B0 = result == 0;
  return result;
}

void sub_100045890(id a1)
{
  unint64_t v1;

  v1 = +[PHUIConfiguration inCallControlSpacing](PHUIConfiguration, "inCallControlSpacing");
  if (v1 <= 6)
    byte_1002DC8C0 = (7u >> v1) & 1;
}

void sub_1000462C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000462E4(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[4];
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "delegate"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sceneManager"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "callScene"));

    if (v5)
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_1000463B8;
      v6[3] = &unk_100284898;
      v7 = v5;
      TUDispatchMainIfNecessary(v6);

    }
  }

}

id sub_1000463B8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "requestTransitionToPresentationMode:shouldDismissCMASAlerts:", 2, 0);
}

void sub_100048C08(id a1)
{
  id v1;
  id v2;

  v1 = +[PHAudioInterruptionController sharedInstance](PHAudioInterruptionController, "sharedInstance");
  v2 = +[PHInCallUIUtilities sharedInstance](PHInCallUIUtilities, "sharedInstance");
}

void sub_10004A404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10004A44C(uint64_t a1)
{
  id WeakRetained;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = objc_alloc((Class)TUJoinConversationRequest);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](NSSet, "set"));
    v6 = objc_msgSend(v3, "initWithConversationLink:otherInvitedHandles:sendLetMeInRequest:", v4, v5, 0);

    objc_msgSend(v6, "setVideoEnabled:", 1);
    objc_msgSend(v6, "setWantsStagingArea:", 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[TUConversationInvitationPreference standardInvitationPreferencesForLink](TUConversationInvitationPreference, "standardInvitationPreferencesForLink"));
    objc_msgSend(v6, "setInvitationPreferences:", v7);

    if (v6)
      v8 = objc_msgSend(*(id *)(a1 + 40), "openJoinConversationRequest:", v6);
    else
      v8 = 0;

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

void sub_10004A538(id a1, BOOL a2, NSError *a3)
{
  NSError *v3;
  id v4;
  NSObject *v5;
  int v6;
  NSError *v7;

  v3 = a3;
  if (v3)
  {
    v4 = sub_1000C5588();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = 138412290;
      v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Failed to open FaceTime application with error: %@", (uint8_t *)&v6, 0xCu);
    }

  }
}

uint64_t sub_10004A5E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_10004B0C4(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  _QWORD v5[4];
  id v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t);
  id v13;

  v8 = 0;
  v9 = &v8;
  v10 = 0x3032000000;
  v11 = sub_10004B19C;
  v12 = sub_10004B1AC;
  v13 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10004B1B4;
  v5[3] = &unk_1002857C8;
  v6 = a2;
  v7 = &v8;
  v2 = v6;
  _os_activity_initiate((void *)&_mh_execute_header, "StartCall", OS_ACTIVITY_FLAG_DEFAULT, v5);

  v3 = (id)v9[5];
  _Block_object_dispose(&v8, 8);

  return v3;
}

uint64_t sub_10004B19C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10004B1AC(uint64_t a1)
{

}

void sub_10004B1B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dialWithRequest:", *(_QWORD *)(a1 + 32)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10004B5BC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;

  v2 = sub_100079340();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    v6 = 138412546;
    v7 = v4;
    v8 = 2112;
    v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "UUID: %@ request: %@", (uint8_t *)&v6, 0x16u);
  }

}

void sub_10004BCD8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

BOOL sub_10004BD14(uint64_t a1)
{
  id WeakRetained;
  _BOOL8 v2;
  void *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((objc_msgSend(WeakRetained, "isClarityBoardActive") & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentInCallScene"));
    v2 = objc_msgSend(v3, "presentationMode") == (id)1;

  }
  return v2;
}

id sub_10004BD78(uint64_t a1)
{
  id WeakRetained;
  id v2;
  void *v3;
  void *v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((objc_msgSend(WeakRetained, "isClarityBoardActive") & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentInCallScene"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
    v2 = objc_msgSend(v4, "isAttachedToWindowedAccessoryWithValidFrameForCurrentScene");

  }
  return v2;
}

BOOL sub_10004BDE8(uint64_t a1)
{
  id WeakRetained;
  _BOOL8 v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((objc_msgSend(WeakRetained, "isClarityBoardActive") & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sceneManager"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ambientScene"));

    if (v4 && !objc_msgSend(v4, "activationState"))
    {
      v2 = 0;
    }
    else
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentInCallScene"));
      if (objc_msgSend(v5, "presentationMode"))
      {
        v2 = 0;
      }
      else
      {
        v6 = (void *)objc_claimAutoreleasedReturnValue(+[PHPIPController defaultPIPController](PHPIPController, "defaultPIPController"));
        v2 = objc_msgSend(v6, "pipState") == 0;

      }
    }

  }
  return v2;
}

void sub_10004BFDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10004BFFC(uint64_t a1)
{
  id WeakRetained;
  uint64_t v2;
  void *v3;
  void *v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((objc_msgSend(WeakRetained, "isClarityBoardActive") & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentInCallScene"));
    if (objc_msgSend(v3, "presentationMode"))
    {
      v2 = 0;
    }
    else
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[PHPIPController defaultPIPController](PHPIPController, "defaultPIPController"));
      v2 = objc_msgSend(v4, "isPIPProxyActive") ^ 1;

    }
  }

  return v2;
}

BOOL sub_10004C084(id a1)
{
  void *v1;
  unsigned __int8 v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[PHPIPController defaultPIPController](PHPIPController, "defaultPIPController"));
  v2 = objc_msgSend(v1, "isPIPProxyActiveAndHidden");

  return v2;
}

BOOL sub_10004C0C0(id a1)
{
  void *v1;
  unsigned __int8 v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
  v2 = objc_msgSend(v1, "hasCurrentCalls");

  return v2;
}

BOOL sub_10004C0FC(id a1)
{
  void *v1;
  unsigned __int8 v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[PHInCallUtilities sharedInstance](PHInCallUtilities, "sharedInstance"));
  v2 = objc_msgSend(v1, "hasStatusBarSuppressionReasons");

  return v2;
}

BOOL sub_10004CB24(id a1, TUCall *a2)
{
  return -[TUCall isActive](a2, "isActive");
}

BOOL sub_10004D830(id a1, TUCall *a2)
{
  TUCall *v2;
  void *v3;
  unsigned __int8 v4;

  v2 = a2;
  if (-[TUCall isActive](v2, "isActive"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(-[TUCall provider](v2, "provider"));
    v4 = objc_msgSend(v3, "supportsDynamicSystemUI");

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_10004DCD8(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  id v11;
  unsigned int v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id location;
  uint8_t buf[4];
  id v18;
  __int16 v19;
  unsigned int v20;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v3 = objc_msgSend(v2, "hasPendingOrExistingSceneOfType:", *(_QWORD *)(a1 + 48));

  if ((v3 & 1) != 0)
  {
    v4 = sub_1000C56D8();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Not requesting a new scene presentation because one already exists", buf, 2u);
    }
  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
    v6 = *(_QWORD *)(a1 + 48);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
    objc_msgSend(v5, "didRequestSceneOfType:withIdentifier:", v6, v7);

    objc_initWeak(&location, *(id *)(a1 + 32));
    v8 = *(_QWORD *)(a1 + 40);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_10004DF18;
    v13[3] = &unk_1002858D8;
    objc_copyWeak(&v15, &location);
    v14 = *(id *)(a1 + 40);
    +[SBSInCallPresentationRequest performPresentationWithConfiguration:completion:](SBSInCallPresentationRequest, "performPresentationWithConfiguration:completion:", v8, v13);
    v9 = (id)sub_1000C56D8();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = SBSInCallPresentationModeDescription(objc_msgSend(*(id *)(a1 + 40), "preferredPresentationMode"));
      v11 = (id)objc_claimAutoreleasedReturnValue(v10);
      v12 = objc_msgSend(*(id *)(a1 + 40), "isUserInitiated");
      *(_DWORD *)buf = 138543618;
      v18 = v11;
      v19 = 1024;
      v20 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Requested a new scene with presentationMode=%{public}@ userInitiated=%d", buf, 0x12u);

    }
    objc_destroyWeak(&v15);
    objc_destroyWeak(&location);
  }
}

void sub_10004DEEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004DF18(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (v3)
  {
    if (WeakRetained)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sceneManager"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
      objc_msgSend(v6, "didInvalidatePendingSceneOfType:withIdentifier:", 0, v7);

      v8 = sub_1000C56D8();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1001A8A68();
    }
  }

}

void sub_10004E110(id a1)
{
  id v1;

  v1 = (id)objc_opt_new(CLFSystemShellSwitcher);
  byte_1002DC8D0 = objc_msgSend(v1, "isClarityBoardEnabled");

}

void sub_10004E87C(uint64_t a1)
{
  void *v2;
  id v3;
  _QWORD v4[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentInCallScene"));
  v3 = objc_msgSend(*(id *)(a1 + 40), "isOutgoing");
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10004E908;
  v4[3] = &unk_100285948;
  v4[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "ics_requestTransitionToPresentationMode:shouldDismissCMASAlerts:analyticsSource:completion:", 2, v3, 0, v4);

}

id sub_10004E908(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "dismissAnsweredCallBannerIfNeeded");
}

void sub_10004EA98(id a1, NSError *a2)
{
  NSError *v2;
  NSObject *v3;

  v2 = a2;
  if (v2)
  {
    v3 = sub_1000C56D8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1001A8AC8();
  }

}

void sub_10004EC48(id a1, NSError *a2)
{
  NSError *v2;
  NSObject *v3;
  int v4;
  NSError *v5;

  v2 = a2;
  v3 = sub_1000C56D8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error requesting ClarityBoard presentation: %@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_10004F380(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bannerPresentationManager"));
  objc_msgSend(v1, "showGreenTea3PHUD");

}

BOOL sub_10004F63C(id a1, TUCall *a2)
{
  TUCall *v2;
  void *v3;
  unsigned int v4;

  v2 = a2;
  if (-[TUCall isActive](v2, "isActive"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(-[TUCall provider](v2, "provider"));
    v4 = objc_msgSend(v3, "supportsDynamicSystemUI") ^ 1;

  }
  else
  {
    LOBYTE(v4) = 0;
  }

  return v4;
}

void sub_10004FD20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004FD4C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id WeakRetained;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  const __CFString *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  NSObject *v25;
  const __CFString *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  _QWORD v34[4];
  id v35;
  id v36[2];
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  void *v40;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v7 = sub_1000C56D8();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = v7;
      v9 = NSStringFromPGBackgroundPIPAuthorizationState(a3);
      v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      v11 = sub_10000EF40(*(_QWORD *)(a1 + 56));
      v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      *(_DWORD *)buf = 138543618;
      v38 = v10;
      v39 = 2114;
      v40 = v12;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "PiP Background authorization changed to state: %{public}@ for scene type: %{public}@", buf, 0x16u);

    }
    switch(a3)
    {
      case 2:
        v16 = sub_1000C56D8();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Aquired authorization to open PiP in the background; requesting background presentation",
            buf,
            2u);
        }
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bannerPresentationManager"));
        objc_msgSend(v17, "setApplicationState:", 0);

        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sceneManager"));
        v19 = *(_QWORD *)(a1 + 56);
        v34[0] = _NSConcreteStackBlock;
        v34[1] = 3221225472;
        v34[2] = sub_100050128;
        v34[3] = &unk_1002859F0;
        objc_copyWeak(v36, (id *)(a1 + 48));
        v36[1] = *(id *)(a1 + 56);
        v35 = *(id *)(a1 + 32);
        objc_msgSend(v18, "waitForRegistrationOfSceneWithType:completion:", v19, v34);

        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sceneManager"));
        v21 = *(_QWORD *)(a1 + 56);
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
        objc_msgSend(v20, "didInvalidatePendingSceneOfType:withIdentifier:", v21, v22);

        objc_msgSend(WeakRetained, "performPresentationWithConfiguration:forSceneType:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56));
        objc_destroyWeak(v36);
        break;
      case 3:
      case 5:
        objc_msgSend(WeakRetained, "revokeAndRemoveBackgroundPiPAuthorizationForSceneTypeIfNeeded:", *(_QWORD *)(a1 + 56));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sceneManager"));
        v14 = *(_QWORD *)(a1 + 56);
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
        objc_msgSend(v13, "didInvalidatePendingSceneOfType:withIdentifier:", v14, v15);

        break;
      case 4:
        v23 = sub_1000C56D8();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          v24 = *(_QWORD *)(a1 + 56);
          v25 = v23;
          v26 = sub_10000EF40(v24);
          v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
          v28 = SBSInCallPresentationModeDescription(objc_msgSend(*(id *)(a1 + 40), "preferredPresentationMode"));
          v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
          *(_DWORD *)buf = 138543618;
          v38 = v27;
          v39 = 2114;
          v40 = v29;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "PiP background authorization disallowed for %{public}@ scene; configuration.preferredPresentationMode: %{public}@",
            buf,
            0x16u);

        }
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bannerPresentationManager"));
        objc_msgSend(v30, "setApplicationState:", 1);

        objc_msgSend(WeakRetained, "revokeAndRemoveBackgroundPiPAuthorizationForSceneTypeIfNeeded:", *(_QWORD *)(a1 + 56));
        v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sceneManager"));
        v32 = *(_QWORD *)(a1 + 56);
        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
        objc_msgSend(v31, "didInvalidatePendingSceneOfType:withIdentifier:", v32, v33);

        break;
      default:
        break;
    }
  }

}

void sub_100050108(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100050128(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  const __CFString *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  void *v20;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "remoteAlertShellViewControllerForWindowScene:", v3));
    v7 = sub_1000C56D8();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = *(_QWORD *)(a1 + 48);
      v9 = v7;
      v10 = sub_10000EF40(v8);
      v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      v12 = *(_QWORD *)(a1 + 32);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "pipController"));
      v15 = 138543874;
      v16 = v11;
      v17 = 2114;
      v18 = v12;
      v19 = 2114;
      v20 = v13;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Aquired scene of type %{public}@; setting clientSessionIdentifier '%{public}@' on PiP controller: %{public}@",
        (uint8_t *)&v15,
        0x20u);

    }
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "pipController"));
    objc_msgSend(v14, "setClientSessionIdentifierFromPiPAuthorization:", *(_QWORD *)(a1 + 32));

  }
}

void sub_1000505F8(id a1, NSError *a2)
{
  NSError *v2;
  NSObject *v3;

  v2 = a2;
  v3 = sub_1000C56D8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_1001A8B80();

}

void sub_100050698(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  BOOL v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  const __CFString *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  NSObject *v18;
  const __CFString *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  const __CFString *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  NSObject *v31;
  void *v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  void *v36;
  NSObject *v37;
  void *v38;
  NSObject *v39;
  void *v40;
  id v41;
  int v42;
  id v43;
  __int16 v44;
  void *v45;
  __int16 v46;
  void *v47;

  objc_msgSend(*(id *)(a1 + 32), "revokeAndRemoveBackgroundPiPAuthorizationForSceneTypeIfNeeded:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "sceneOfType:", *(_QWORD *)(a1 + 40)));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "session"));
  v5 = objc_msgSend(v3, "presentationMode");
  if (v3)
    v6 = v4 == 0;
  else
    v6 = 1;
  if (!v6)
  {
    v12 = v5;
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "remoteAlertShellViewControllerForWindowScene:", v3));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "pipController"));
    objc_msgSend(v14, "cancelPIPIfNeeded");

    if (!*(_QWORD *)(a1 + 40))
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bannerPresentationManager"));
      objc_msgSend(v15, "bannerDismissedBySpringBoard");

    }
    v16 = sub_1000C56D8();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = *(_QWORD *)(a1 + 40);
      v18 = v16;
      v19 = sub_10000EF40(v17);
      v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
      v42 = 138543874;
      v43 = v20;
      v44 = 2112;
      v45 = v3;
      v46 = 2112;
      v47 = v4;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Requesting scene session destruction for type: %{public}@; scene: %@; with session: %@",
        (uint8_t *)&v42,
        0x20u);

    }
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    objc_msgSend(v21, "SBSUI_requestInCallSceneSessionDestruction:withReason:completion:", v4, 0, 0);

    v22 = sub_1000C56D8();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      v23 = *(_QWORD *)(a1 + 40);
      v24 = v22;
      v25 = sub_10000EF40(v23);
      v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
      v42 = 138543362;
      v43 = v26;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "Cleared the current active scene of type %{public}@", (uint8_t *)&v42, 0xCu);

    }
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "pipController"));
    objc_msgSend(v27, "setWindowForTransitionAnimation:", 0);

    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
    objc_msgSend(v28, "didDismissSceneOfType:", *(_QWORD *)(a1 + 40));

    v29 = *(_QWORD *)(a1 + 40);
    if (v29 == 1)
    {
      if (v12 == (id)2)
      {
        v31 = sub_1000C56D8();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v42) = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "Requesting to return to fullscreen canvas due to end of screen sharing session", (uint8_t *)&v42, 2u);
        }
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "callScene"));
        objc_msgSend(v32, "requestTransitionToPresentationMode:shouldDismissCMASAlerts:", 2, 0);

        goto LABEL_21;
      }
    }
    else if (!v29)
    {
      v30 = (void *)objc_claimAutoreleasedReturnValue(+[PHInCallUtilities sharedInstance](PHInCallUtilities, "sharedInstance"));
      objc_msgSend(v30, "stopAllowingRingingCallStatusIndicator");
LABEL_21:

    }
    goto LABEL_23;
  }
  v7 = sub_1000C56D8();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(_QWORD *)(a1 + 40);
    v9 = v7;
    v10 = sub_10000EF40(v8);
    v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    v42 = 138543874;
    v43 = v11;
    v44 = 2112;
    v45 = v3;
    v46 = 2112;
    v47 = v4;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Warning: Not requesting scene session destruction because there's no active scene of type: %{public}@; scene:%@ or"
      " session:%@ to destroy",
      (uint8_t *)&v42,
      0x20u);

  }
LABEL_23:
  v33 = sub_1000C56D8();
  if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
  {
    v34 = *(void **)(a1 + 32);
    v35 = v33;
    v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "allInCallScenes"));
    v42 = 138412290;
    v43 = v36;
    _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "The set of all tracked scenes is %@", (uint8_t *)&v42, 0xCu);

  }
  v37 = sub_1000C56D8();
  if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
  {
    v38 = *(void **)(a1 + 32);
    v39 = v37;
    v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "allInCallScenes"));
    v41 = objc_msgSend(v40, "count");
    v42 = 134217984;
    v43 = v41;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "Number of scenes tracked is %lu", (uint8_t *)&v42, 0xCu);

  }
}

void sub_100050C14(id a1, NSError *a2)
{
  NSError *v2;
  NSObject *v3;
  int v4;
  NSError *v5;

  v2 = a2;
  v3 = sub_1000C56D8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error destroying Assistive Access scene: %@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_1000510AC(id a1, NSError *a2)
{
  NSError *v2;
  NSObject *v3;
  int v4;
  NSError *v5;

  v2 = a2;
  v3 = sub_1000C56D8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error requesting SOS ClarityBoard presentation: %@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_100051454(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentInCallScene"));
  objc_msgSend(v2, "requestTransitionToPresentationMode:shouldDismissCMASAlerts:", 3, *(unsigned __int8 *)(a1 + 40));

}

void sub_100053694(uint64_t a1, char a2)
{
  id v3;
  NSObject *v4;
  __CFNotificationCenter *DarwinNotifyCenter;
  void *v6;
  id v7;
  __CFNotificationCenter *v8;
  __CFString *v9;
  uint8_t v10[16];

  if ((a2 & 1) == 0)
  {
    v3 = sub_1000C5588();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "A call could not be initiated.", v10, 2u);
    }

    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, TUCallCenterInCallServiceDialRequestFailureNotification, 0, 0, 1u);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "failureNotification"));
    v7 = objc_msgSend(v6, "length");

    if (v7)
    {
      v8 = CFNotificationCenterGetDarwinNotifyCenter();
      v9 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "failureNotification"));
      CFNotificationCenterPostNotification(v8, v9, 0, 0, 1u);

    }
  }
}

id sub_10005377C(uint64_t a1)
{
  void *v2;
  id v3;
  __CFNotificationCenter *DarwinNotifyCenter;
  __CFString *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "successNotification"));
  v3 = objc_msgSend(v2, "length");

  if (v3)
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    v5 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "successNotification"));
    CFNotificationCenterPostNotification(DarwinNotifyCenter, v5, 0, 0, 1u);

  }
  return _objc_msgSend(*(id *)(a1 + 40), "initiateCallForDialRequest:completionHandler:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48));
}

uint64_t sub_1000537FC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[4];
  id v13;
  uint8_t buf[4];
  uint64_t v15;

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v15 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Will launch ICS for ScreenTime dial request: %@", buf, 0xCu);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICSPreferences sharedPreferences](ICSPreferences, "sharedPreferences"));
  v6 = objc_msgSend(v5, "hasAdoptedModernInCallAPI");

  if (v6)
  {
    v7 = *(void **)(a1 + 40);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "URL"));
    objc_msgSend(v7, "startScreenTimeFlowWithURL:", v8);
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[SOSInCallUILauncher sharedInCallUILauncher](SOSInCallUILauncher, "sharedInCallUILauncher"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "URL"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10005397C;
    v12[3] = &unk_100285AC8;
    v13 = *(id *)(a1 + 48);
    objc_msgSend(v9, "launchInCallUIForReason:withRequestURL:completion:", 3, v10, v12);

    v8 = v13;
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

uint64_t sub_10005397C(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  _DWORD v7[2];

  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Did launch ICS for ScreenTime %d", (uint8_t *)v7, 8u);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100053A38(id *a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  id v17;
  NSObject *v18;
  _QWORD v19[4];
  id v20;
  id v21;
  id v22;
  uint8_t buf[4];
  void *v24;

  v2 = sub_1000F8B14();
  if (!v2)
    return;
  v3 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[PHInCallUIUtilities sharedInstance](PHInCallUIUtilities, "sharedInstance"));
  if ((objc_msgSend(v4, "isSpringBoardLocked") & 1) == 0)
  {

    goto LABEL_6;
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "contactIdentifier"));

  if (!v5)
  {
LABEL_6:
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "handle"));
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "value"));
    goto LABEL_7;
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedContactStore](TUCallCenter, "sharedContactStore"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "contactIdentifier"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "contactForIdentifier:", v7));

  v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "displayName"));
LABEL_7:
  v10 = (void *)v9;

  if (objc_msgSend(v10, "destinationIdIsPhoneNumber"))
  {
    v11 = TUHomeCountryCode();
    v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    v13 = TUFormattedPhoneNumber(v10, v12);
    v14 = objc_claimAutoreleasedReturnValue(v13);

    v10 = (void *)v14;
  }
  v15 = sub_1000C5588();
  v16 = objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v24 = v10;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Presenting RTT/TTY call prompt for caller ID %@", buf, 0xCu);
  }

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100053CA0;
  v19[3] = &unk_100285AF0;
  v20 = a1[4];
  v21 = a1[5];
  v22 = a1[6];
  objc_msgSend(v3, "displayCallPromptForContact:withCompletion:", v10, v19);
  v17 = sub_1000C5588();
  v18 = objc_claimAutoreleasedReturnValue(v17);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v24 = v10;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Finished executing RTT/TTY call prompt block %@", buf, 0xCu);
  }

}

void sub_100053CA0(_QWORD *a1, uint64_t a2)
{
  id v4;
  NSObject *v5;
  void *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 134217984;
    v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Dismissing RTT/TTY call prompt. User chose TTYCallType %lu.", (uint8_t *)&v8, 0xCu);
  }

  switch(a2)
  {
    case 0:
      v6 = (void *)a1[4];
      v7 = 1;
      goto LABEL_7;
    case 1:
    case 2:
      v6 = (void *)a1[4];
      v7 = 2;
      goto LABEL_7;
    case 3:
      v6 = (void *)a1[4];
      v7 = 3;
LABEL_7:
      objc_msgSend(v6, "setTtyType:", v7);
      (*(void (**)(void))(a1[5] + 16))();
      break;
    case 4:
      (*(void (**)(void))(a1[6] + 16))();
      break;
    default:
      return;
  }
}

void sub_100053DB0(uint64_t a1, void *a2)
{
  id v3;
  ICSEmergencyCallbackModeAlert *v4;
  void *v5;
  id v6;
  ICSEmergencyCallbackModeAlert *v7;
  _QWORD v8[5];
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = a2;
  v4 = [ICSEmergencyCallbackModeAlert alloc];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100053E90;
  v8[3] = &unk_100285B40;
  v5 = *(void **)(a1 + 40);
  v8[4] = *(_QWORD *)(a1 + 32);
  v9 = v3;
  v10 = v5;
  v11 = *(id *)(a1 + 48);
  v12 = *(id *)(a1 + 56);
  v6 = v3;
  v7 = -[ICSEmergencyCallbackModeAlert initWithDialRequest:completion:](v4, "initWithDialRequest:completion:", v6, v8);
  -[ICSEmergencyCallbackModeAlert show](v7, "show");

}

uint64_t sub_100053E90(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  uint8_t v8[16];
  uint8_t buf[16];

  v2 = result;
  if (a2 == 1)
  {
    v6 = sub_1000C5588();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Emergency callback mode is enabled and user chose to cancel the call.", v8, 2u);
    }

    return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 64) + 16))();
  }
  else if (!a2)
  {
    v3 = sub_1000C5588();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Emergency callback mode is enabled and user chose to proceed with the call.", buf, 2u);
    }

    if (objc_msgSend(*(id *)(v2 + 32), "shouldShowRTTAlertForDialRequest:", *(_QWORD *)(v2 + 40)))
      v5 = *(_QWORD *)(v2 + 48);
    else
      v5 = *(_QWORD *)(v2 + 56);
    return (*(uint64_t (**)(void))(v5 + 16))();
  }
  return result;
}

void sub_100053F7C(uint64_t a1)
{
  PHTelephonyAccountUnavailableAlert *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  PHTelephonyAccountUnavailableAlert *v8;
  _QWORD v9[4];
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v2 = [PHTelephonyAccountUnavailableAlert alloc];
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "provider"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "prioritizedSenderIdentities"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000540A0;
  v9[3] = &unk_100285B90;
  v5 = *(id *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(void **)(a1 + 48);
  v10 = v5;
  v11 = v6;
  v12 = v7;
  v13 = *(id *)(a1 + 56);
  v14 = *(id *)(a1 + 64);
  v15 = *(id *)(a1 + 72);
  v16 = *(id *)(a1 + 80);
  v8 = -[PHTelephonyAccountUnavailableAlert initWithSenderIdentities:completion:](v2, "initWithSenderIdentities:completion:", v4, v9);

  -[PHTelephonyAccountUnavailableAlert show](v8, "show");
}

void sub_1000540A0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  int v9;
  id v10;

  v3 = a2;
  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      v9 = 138412290;
      v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "User chose to initiate dial request using sender identity %@.", (uint8_t *)&v9, 0xCu);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "accountUUID"));
    objc_msgSend(*(id *)(a1 + 32), "setLocalSenderIdentityAccountUUID:", v7);

    if (objc_msgSend(*(id *)(a1 + 40), "shouldShowEmergencyCallbackModeAlertForDialRequest:", *(_QWORD *)(a1 + 32)))
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    }
    else
    {
      if (objc_msgSend(*(id *)(a1 + 40), "shouldShowScreenTimeAlertForDialRequest:", *(_QWORD *)(a1 + 32)))
      {
        v8 = *(_QWORD *)(a1 + 56);
      }
      else if (objc_msgSend(*(id *)(a1 + 40), "shouldShowRTTAlertForDialRequest:", *(_QWORD *)(a1 + 32)))
      {
        v8 = *(_QWORD *)(a1 + 64);
      }
      else
      {
        v8 = *(_QWORD *)(a1 + 72);
      }
      (*(void (**)(void))(v8 + 16))();
    }
  }
  else
  {
    if (v6)
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Sender identity is nil; user cancelled the dial request.",
        (uint8_t *)&v9,
        2u);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 80) + 16))();
  }

}

uint64_t sub_100054210(uint64_t a1, int a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint8_t v7[16];

  if (!a2)
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
  v3 = sub_1000C5588();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "User confirmed intent to initiate an emergency call using a Wi-Fi network.", v7, 2u);
  }

  if (objc_msgSend(*(id *)(a1 + 32), "shouldShowRTTAlertForDialRequest:", *(_QWORD *)(a1 + 40)))
    v5 = *(_QWORD *)(a1 + 48);
  else
    v5 = *(_QWORD *)(a1 + 56);
  return (*(uint64_t (**)(void))(v5 + 16))();
}

uint64_t sub_1000542B4(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  _DWORD v7[2];

  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Dial request UI prompt alert returned dial=%d", (uint8_t *)v7, 8u);
  }

  if (a2)
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  else
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_100054384(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  _DWORD v7[2];

  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Dial request call end stewie alert returned dial=%d", (uint8_t *)v7, 8u);
  }

  if (a2)
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  else
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

id sub_100054454(uint64_t a1, int a2)
{
  if (a2)
    return objc_msgSend(*(id *)(a1 + 32), "show");
  else
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_100054A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  uint64_t v22;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v22 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_100054AC4(id a1)
{
  __CFNotificationCenter *DarwinNotifyCenter;

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, TUCallCenterInCallServiceDialRequestFailureNotification, 0, 0, 1u);
}

uint64_t sub_100054AF0(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  _DWORD v7[2];

  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Did launch ICS for ScreenTime %d", (uint8_t *)v7, 8u);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100054BA8(uint64_t a1, int a2)
{
  id WeakRetained;
  id v5;
  NSObject *v6;
  _DWORD v7[2];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v5 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7[0] = 67109120;
      v7[1] = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Join request UI prompt alert returned dial=%d", (uint8_t *)v7, 8u);
    }

    objc_msgSend(WeakRetained, "setProcessAssertionCompletion:", 0);
    if (a2)
      objc_msgSend(WeakRetained, "showOrCreateCallForConversationRequest:", *(_QWORD *)(a1 + 32));
  }

}

id sub_100054C84(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "invalidate");
}

void sub_100055034(id a1, SBSUIInCallWindowScene *a2)
{
  SBSUIInCallWindowScene *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  SBSUIInCallWindowScene *v9;

  v2 = a2;
  v3 = sub_1000C55F8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 138543362;
    v9 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Retrieved InCall scene, showing keypad; scene=%{public}@",
      (uint8_t *)&v8,
      0xCu);
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[SBSUIInCallWindowScene keyWindow](v2, "keyWindow"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "rootViewController"));

  v7 = objc_opt_class(PHInCallRemoteAlertShellViewController, v6);
  if ((objc_opt_isKindOfClass(v5, v7) & 1) != 0)
    objc_msgSend(v5, "showKeypadIfPossible");

}

void sub_100055348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100055374(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  ICSActivationContext *v5;
  id v6;
  NSObject *v7;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v3)
  {
    v5 = -[ICSActivationContext initWithVideoMessageURL:]([ICSActivationContext alloc], "initWithVideoMessageURL:", v3);
    objc_msgSend(WeakRetained, "setActivationContext:", v5);

    objc_msgSend(WeakRetained, "performPresentationForVideoMessage");
  }
  else
  {
    v6 = sub_1000C5588();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
      sub_1001A8D8C(a1, v7);

  }
}

void sub_100055960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005598C(uint64_t a1)
{
  id WeakRetained;
  id v2;
  NSObject *v3;
  void *v4;
  void (**v5)(void);
  uint8_t v6[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Process assertion timer fired...", v6, 2u);
  }

  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "invalidatePreventSuspensionAssertion");
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "processAssertionCompletion"));

    if (v4)
    {
      v5 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "processAssertionCompletion"));
      v5[2]();

    }
    objc_msgSend(WeakRetained, "setProcessAssertionCompletion:", 0);
    objc_msgSend(WeakRetained, "setProcessAssertionTimer:", 0);
  }

}

void sub_100055D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100055DC4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id WeakRetained;
  int v6;
  id v7;

  v3 = a2;
  v4 = sub_1000C55F8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138543362;
    v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Finished creating InCall scene, will now show controls; scene=%{public}@",
      (uint8_t *)&v6,
      0xCu);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "showCallControlsForCurrentContext");

}

void sub_100056210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100056234(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;

  v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000562CC;
  v2[3] = &unk_100285D08;
  objc_copyWeak(&v3, (id *)(a1 + 40));
  objc_msgSend(v1, "ics_requestTransitionToPresentationMode:shouldDismissCMASAlerts:analyticsSource:completion:", 2, 1, 0, v2);
  objc_destroyWeak(&v3);
}

void sub_1000562B8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000562CC(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bannerPresentationManager"));
  objc_msgSend(v1, "showInCallHUD");

}

BOOL sub_100056A0C(id a1, TUCall *a2)
{
  TUCall *v2;
  BOOL v3;

  v2 = a2;
  if (-[TUCall isVideo](v2, "isVideo"))
    v3 = -[TUCall status](v2, "status") == 4;
  else
    v3 = 0;

  return v3;
}

BOOL sub_100056A54(id a1, TUCall *a2)
{
  TUCall *v2;
  BOOL v3;

  v2 = a2;
  if (-[TUCall isConversation](v2, "isConversation"))
    v3 = -[TUCall status](v2, "status") == 3;
  else
    v3 = 0;

  return v3;
}

BOOL sub_100056B08(id a1, TUCall *a2)
{
  TUCall *v2;
  BOOL v3;

  v2 = a2;
  if (-[TUCall isVideo](v2, "isVideo"))
    v3 = -[TUCall status](v2, "status") == 4;
  else
    v3 = 0;

  return v3;
}

BOOL sub_100056B50(id a1, TUCall *a2)
{
  TUCall *v2;
  BOOL v3;

  v2 = a2;
  if (-[TUCall isConversation](v2, "isConversation"))
    v3 = -[TUCall status](v2, "status") == 3;
  else
    v3 = 0;

  return v3;
}

void sub_100057390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  id *v27;
  uint64_t v28;

  objc_destroyWeak(v27);
  objc_destroyWeak((id *)(v28 - 88));
  _Unwind_Resume(a1);
}

void sub_1000573C4(uint64_t a1)
{
  _QWORD *WeakRetained;
  NSObject *v3;
  void *v4;
  uint8_t v5[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = sub_1000C55F8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "requestToPresentBanner timed out, presenting banner", v5, 2u);
  }
  v4 = (void *)WeakRetained[21];
  WeakRetained[21] = 0;

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_100057460(id result)
{
  uint64_t v1;
  id *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = *(_QWORD *)(*((_QWORD *)result + 6) + 8);
  if (!*(_BYTE *)(v1 + 24))
  {
    v2 = (id *)result;
    *(_BYTE *)(v1 + 24) = 1;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)result + 4), "bannerPresentationRequestTimer"));
    objc_msgSend(v3, "invalidate");

    result = objc_msgSend(v2[4], "setBannerPresentationRequestTimer:", 0);
    if (v2[5])
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "frontmostAudioOrVideoCall"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "activeConversationForCall:", v6));
      objc_msgSend(v2[4], "setShouldAttemptRePresentationOfBannerOnConversationUpdate:", v7 == 0);

      return (id)(*((uint64_t (**)(void))v2[5] + 2))();
    }
  }
  return result;
}

void sub_100057558(uint64_t a1, void *a2)
{
  id v3;
  unsigned int v4;
  NSObject *v5;
  const __CFString *v6;
  int v7;
  const __CFString *v8;
  __int16 v9;
  id v10;

  v3 = a2;
  v4 = objc_msgSend(v3, "systemControlsShouldPresentAsEmbedded");
  v5 = sub_1000C55F8();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = CFSTR("NO");
    if (v4)
      v6 = CFSTR("YES");
    v7 = 138543618;
    v8 = v6;
    v9 = 2114;
    v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Retrieved InCall scene, icsPresentingFullscreen:%{public}@; scene=%{public}@",
      (uint8_t *)&v7,
      0x16u);
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_100057640(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  int v5;
  id v6;

  v3 = a2;
  v4 = sub_1000C55F8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138543362;
    v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Retrieved Ambient InCall scene, scene=%{public}@", (uint8_t *)&v5, 0xCu);
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_100057ED0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  NSObject *v5;

  v4 = a3;
  if (v4)
  {
    v5 = sub_1000C55F8();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1001A8F80(a1, (uint64_t)v4, v5);
  }

}

void sub_100059A00(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_100059A10(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

BOOL sub_10005A154()
{
  CFPreferencesAppSynchronize(CFSTR("com.apple.purplebuddy"));
  return CFPreferencesGetAppBooleanValue(CFSTR("ForceNoBuddy"), CFSTR("com.apple.purplebuddy"), 0)
      || CFPreferencesGetAppBooleanValue(CFSTR("SetupDone"), CFSTR("com.apple.purplebuddy"), 0) != 0;
}

void sub_10005A650(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10005A66C(uint64_t a1, double a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  +[NSDate timeIntervalSinceReferenceDate](NSDate, "timeIntervalSinceReferenceDate");
  v5 = v4;
  objc_msgSend(WeakRetained, "interactiveStartTime");
  objc_msgSend(WeakRetained, "setTimeTillCancelCall:", v5 - v6);
  objc_msgSend(WeakRetained, "interactiveStartTime");
  if (v7 <= 0.0 || (objc_msgSend(WeakRetained, "timeTillCancelCall"), v8 < 0.0))
    objc_msgSend(WeakRetained, "setTimeTillCancelCall:", -1.0);
  objc_msgSend(WeakRetained, "setInteractiveStartTime:", 0.0);
  objc_msgSend(WeakRetained, "setWasCallCancelled:", 1);
  objc_msgSend(WeakRetained, "setSliderProgressDuration:", a2);
  if (*(_BYTE *)(a1 + 40))
  {
    objc_msgSend(WeakRetained, "setClawResolution:", 8);
    objc_msgSend(WeakRetained, "setSlidingViewExitReason:", 4);
    objc_msgSend(WeakRetained, "submitSOSUserActivityMetric");
    objc_msgSend(WeakRetained, "setSlidingViewEntryReason:", 3);
  }
  else
  {
    objc_msgSend(WeakRetained, "submitSOSUserActivityMetric");
  }
  if (a2 >= 0.2)
    objc_msgSend(WeakRetained, "raiseAccidentalSOSNotification");

}

id sub_10005AB3C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "handleVolumeHUDEnablement");
  return objc_msgSend(*(id *)(a1 + 32), "handleVolumeChanges");
}

_QWORD *sub_10005B284(uint64_t a1)
{
  _QWORD *result;

  result = *(_QWORD **)(a1 + 32);
  if (result[4] != 2)
  {
    result = objc_msgSend(result, "shouldDropBioAuthTokenOnDismiss");
    if ((result & 1) == 0)
      return objc_msgSend(*(id *)(a1 + 32), "deactivateSOS");
  }
  return result;
}

id sub_10005B448(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateInteractiveState");
}

void sub_10005BF6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005BF88(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  unsigned int v8;
  id v9;
  NSObject *v10;
  _DWORD v11[2];

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "label"));
  v8 = objc_msgSend(v7, "containsString:", CFSTR("AMBULANCE"));

  if (v8)
  {
    v9 = sub_1000C5588();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11[0] = 67109120;
      v11[1] = a3;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "PHSOSViewController,ambulance handle found at %d", (uint8_t *)v11, 8u);
    }

    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
}

void sub_10005C530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005C55C(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (a2)
  {
    objc_msgSend(WeakRetained, "setRequestedCallActive:", 0);
    objc_msgSend(v5, "setCallDialStartTime:", -1.0);
    objc_msgSend(v5, "setPostCallMode");
  }
  else
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentView"));
    objc_msgSend(v4, "removeFromSuperview");

  }
}

void sub_10005C6EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005C710(uint64_t a1, char a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((a2 & 1) == 0)
  {
    v7 = WeakRetained;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "infoLabel"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("SOS_NOTIFICATION_FAILED"), &stru_10028DC20, CFSTR("InCallService")));
    objc_msgSend(v4, "setText:", v6);

    WeakRetained = v7;
  }

}

void sub_10005CAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10005CAF8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "handleVolumeHUDEnablement");
  return objc_msgSend(*(id *)(a1 + 32), "handleVolumeChanges");
}

void sub_10005CB20(uint64_t a1, uint64_t a2)
{
  void *v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setVolumeMaxedPending:", 0);
  objc_msgSend(WeakRetained, "handleVolumeChanges");
  if (a2 == 2)
  {
    objc_msgSend(WeakRetained, "setSosMode:", 3);
    v5 = CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 48);
    if (v5 < 0.0)
      v5 = -1.0;
    objc_msgSend(WeakRetained, "setTimeTillCancelCall:", v5);
    objc_msgSend(WeakRetained, "setWasCallCancelled:", 1);
    objc_msgSend(WeakRetained, "submitSOSResolutionMetric:", 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "getCheckInViewModel"));
    objc_msgSend(v6, "timeout");
    v8 = v7;
    objc_msgSend(*(id *)(a1 + 32), "timeTillCancelCall");
    v10 = v8 - v9;

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coreAnalyticsReporter"));
    objc_msgSend(v11, "reportSOSUserCancelled:lastFlowState:countdownValue:", objc_msgSend(*(id *)(a1 + 32), "sosTrigger"), 1, (uint64_t)v10);

    goto LABEL_9;
  }
  if (a2 == 1)
  {
    objc_msgSend(WeakRetained, "setIsUserResponsive:", 1);
    objc_msgSend(WeakRetained, "dialEmergencyCall");
    goto LABEL_9;
  }
  v4 = WeakRetained;
  if (!a2)
  {
    objc_msgSend(WeakRetained, "setSosMode:", 1);
LABEL_9:
    v4 = WeakRetained;
  }

}

void sub_10005D290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005D2B4(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  double v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v8 = WeakRetained;
  if (a2)
  {
    if (a2 != 1)
      goto LABEL_6;
    objc_msgSend(WeakRetained, "setIsUserResponsive:", 1);
  }
  else
  {
    objc_msgSend(WeakRetained, "setCallAutoDialled:", 1);
  }
  WeakRetained = v8;
LABEL_6:
  if ((objc_msgSend(WeakRetained, "sosTrigger") == (id)1 || objc_msgSend(v8, "sosTrigger") == (id)2)
    && (+[SOSUtilities clawReleaseToCallSupport](SOSUtilities, "clawReleaseToCallSupport"), v4 != 0.0)
    && (v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "sosHandles")),
        v6 = objc_msgSend(v5, "count"),
        v5,
        (unint64_t)v6 <= 1))
  {
    objc_msgSend(v8, "setVolumeMaxedPending:", 1);
    objc_msgSend(v8, "handleVolumeChanges");
    objc_msgSend(v8, "setSlidingViewExitReason:", 11);
    objc_msgSend(v8, "submitSOSUserActivityMetric");
    +[PHInCallRootViewController obtainDismissalAssertionForReason:](PHInCallRootViewController, "obtainDismissalAssertionForReason:", CFSTR("PHCallBufferScreenAssertionReason"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v7, "postNotificationName:object:userInfo:", CFSTR("PHCallBufferNotification"), 0, 0);

  }
  else
  {
    objc_msgSend(v8, "dialEmergencyCall");
  }

}

void sub_10005D734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  id *v10;
  id *v11;
  id *v12;
  id *v13;
  uint64_t v14;

  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(v10);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v14 - 112));
  _Unwind_Resume(a1);
}

void sub_10005D77C(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v10 = WeakRetained;
  switch(a2)
  {
    case 0:
      objc_msgSend(WeakRetained, "setCallAutoDialled:", 1);
      objc_msgSend(v10, "setClawResolution:", 3);
      goto LABEL_8;
    case 1:
      objc_msgSend(WeakRetained, "setCallAutoDialled:", 0);
      if (objc_msgSend(v10, "clawResolution") == (id)5)
        objc_msgSend(v10, "setClawSwipeAfterRTCTimeout:", 1);
      objc_msgSend(v10, "setSlidingViewExitReason:", 3);
      objc_msgSend(v10, "setClawResolution:", 9);
      goto LABEL_7;
    case 2:
      objc_msgSend(WeakRetained, "setClawResolution:", 5);
      objc_msgSend(v10, "interactiveStartTime");
      v5 = v4;
      v6 = -1.0;
      if (v5 > 0.0)
      {
        +[NSDate timeIntervalSinceReferenceDate](NSDate, "timeIntervalSinceReferenceDate", -1.0);
        v8 = v7;
        objc_msgSend(v10, "interactiveStartTime");
        v6 = v8 - v9;
      }
      objc_msgSend(v10, "setTimeTillCancelCall:", v6);
      objc_msgSend(v10, "raiseAccidentalSOSNotification");
      objc_msgSend(v10, "setSlidingViewExitReason:", 5);
      objc_msgSend(v10, "submitSOSUserActivityMetric");
      objc_msgSend(v10, "setSlidingViewEntryReason:", 4);
      goto LABEL_13;
    case 3:
      objc_msgSend(WeakRetained, "setClawResolution:", 4);
      objc_msgSend(v10, "raiseAccidentalSOSNotification");
      goto LABEL_13;
    case 4:
    case 5:
      objc_msgSend(WeakRetained, "setClawResolution:", 3);
      objc_msgSend(v10, "setCallAutoDialled:", 1);
      objc_msgSend(v10, "setSlidingViewExitReason:", 12);
LABEL_7:
      objc_msgSend(v10, "submitSOSUserActivityMetric");
LABEL_8:
      objc_msgSend(v10, "handleAnimationSlidingCompletionResponse");
LABEL_13:
      WeakRetained = v10;
      break;
    default:
      break;
  }

}

void sub_10005D8F0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "clearStatusHeartbeatTimer");
  objc_msgSend(WeakRetained, "setSosMode:", 7);
  objc_msgSend(WeakRetained, "setSlidingViewExitReason:", 2);
  objc_msgSend(WeakRetained, "submitSOSUserActivityMetric");

}

void sub_10005D93C(uint64_t a1, uint64_t a2)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setVolumeMaxedPending:", a2);
  objc_msgSend(WeakRetained, "handleVolumeChanges");

}

void sub_10005D980(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setSlidingViewExitReason:", 1);
  objc_msgSend(WeakRetained, "submitSOSUserActivityMetric");

}

void sub_10005D9B8(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  uint64_t v5;
  void *v6;
  dispatch_queue_global_t global_queue;
  NSObject *v8;
  void *v9;
  id v10;
  id WeakRetained;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  LODWORD(v3) = +[PHSOSViewController shouldShowMedicalID:](PHSOSViewController, "shouldShowMedicalID:", v4);

  if ((_DWORD)v3)
    v5 = *(_QWORD *)(a1 + 32);
  else
    v5 = 0;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "slidingView"));
  objc_msgSend(v6, "setMedicalIDSlidingButtonCompletionBlock:", v5);

  global_queue = dispatch_get_global_queue(-32768, 0);
  v8 = objc_claimAutoreleasedReturnValue(global_queue);
  dispatch_async(v8, &stru_100285FA8);

  if (objc_msgSend(WeakRetained, "currentInteractiveState") == (id)1)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "slidingView"));
    v10 = objc_msgSend(v9, "slidingViewState");

    if (v10 != (id)1)
      objc_msgSend(WeakRetained, "interactiveStart");
  }

}

void sub_10005DAA4(id a1)
{
  +[PHSOSAlertController playSOSEntryHaptic](PHSOSAlertController, "playSOSEntryHaptic");
}

void sub_10005DC04(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "deactivateSOS");

}

void sub_10005DDF4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setPostContactNotificationMode");

}

void sub_10005DF74(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setPostContactNotificationMode");

}

void sub_10005E1DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005E200(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setSosMode:", 5);
  objc_msgSend(WeakRetained, "notifyEmergencyContacts");

}

void sub_10005E504(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_10005E534(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "clearStatusHeartbeatTimer");
  if (a2 == 1)
  {
    objc_msgSend(WeakRetained, "setSosMode:", 7);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "coreAnalyticsReporter"));
    v10 = objc_msgSend(WeakRetained, "sosTrigger");
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "restingView"));
    v6 = objc_msgSend(v5, "hasMedicalIDSlider");
    v7 = v3;
    v8 = v10;
    v9 = 1;
    goto LABEL_5;
  }
  if (!a2)
  {
    objc_msgSend(WeakRetained, "setIsUserResponsive:", 1);
    objc_msgSend(WeakRetained, "dialEmergencyCall");
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "coreAnalyticsReporter"));
    v4 = objc_msgSend(WeakRetained, "sosTrigger");
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "restingView"));
    v6 = objc_msgSend(v5, "hasMedicalIDSlider");
    v7 = v3;
    v8 = v4;
    v9 = 0;
LABEL_5:
    objc_msgSend(v7, "reportSOSRestingResponse:restingResponse:hasMedicalID:", v8, v9, v6);

  }
}

void sub_10005E630(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  _BOOL8 v4;
  void *v5;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  v4 = +[PHSOSViewController shouldShowMedicalID:](PHSOSViewController, "shouldShowMedicalID:", v3);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "restingView"));
  objc_msgSend(v5, "setHasMedicalIDSlider:", v4);

}

void sub_10005E834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005E850(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  unsigned __int8 v3;
  id v4;
  NSObject *v5;
  id v6;
  NSObject *v7;
  uint8_t v8[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((objc_msgSend(WeakRetained, "sosMode") == (id)2 || objc_msgSend(WeakRetained, "sosMode") == (id)9)
    && (v2 = (void *)objc_claimAutoreleasedReturnValue(+[PHInCallRootViewController dismissalAssertions](PHInCallRootViewController, "dismissalAssertions")), v3 = objc_msgSend(v2, "containsObject:", CFSTR("PHSOSCallAssertionReason")), v2, (v3 & 1) != 0))
  {
    v4 = sub_1000C5588();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PHSOSViewController,status heartbeat timer fired", v8, 2u);
    }

    objc_msgSend(WeakRetained, "sendFlowStateUpdateForCurrentSOSMode");
  }
  else
  {
    v6 = sub_1000C5588();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1001A9444();

    objc_msgSend(WeakRetained, "clearStatusHeartbeatTimer");
  }

}

void sub_10005EBF4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_10005EC20(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  id v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  uint8_t v13[8];
  id v14;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (a2 == 1)
  {
    objc_msgSend(WeakRetained, "setSosMode:", 7);
  }
  else if (!a2)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("sms://open?groupid="), "stringByAppendingString:", IMStewieChatIdentifier));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v5));
    v14 = 0;
    v7 = TUOpenURLWithError(v6, 0, 1, &v14);
    v8 = v14;

    v9 = sub_1000C5588();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    v11 = v10;
    if (v7)
    {
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "PHSOSViewController,successfully opened messages,deactivating SOS", v13, 2u);
      }

      objc_msgSend(v4, "deactivateSOS");
    }
    else
    {
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1001A9470((uint64_t)v8, v11, v12);

    }
  }

}

void sub_10005ED5C(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  _BOOL8 v4;
  void *v5;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  v4 = +[PHSOSViewController shouldShowMedicalID:](PHSOSViewController, "shouldShowMedicalID:", v3);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "alertRestingView"));
  objc_msgSend(v5, "setHasMedicalIDSlider:", v4);

}

void sub_10005EED8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10005EF68;
  v6[3] = &unk_100286020;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

uint64_t sub_10005EF68(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, *(_QWORD *)(a1 + 32));
  return result;
}

void sub_10005F080(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

void sub_10005F09C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  unsigned __int8 v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  ICSMedicalIDViewController *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint8_t v20[16];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = +[PHSOSViewController shouldShowMedicalID:](PHSOSViewController, "shouldShowMedicalID:", v3);
  v6 = sub_1000C5588();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  if ((v5 & 1) != 0)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Medical ID data fetched", v20, 2u);
    }

    if (_os_feature_enabled_impl("Health", "medicalid_v2"))
    {
      v9 = (ICSMedicalIDViewController *)objc_claimAutoreleasedReturnValue(+[MIUIDisplayConfiguration lockScreenConfiguration](MIUIDisplayConfiguration, "lockScreenConfiguration"));
      -[ICSMedicalIDViewController setIsHomeIndicatorHidden:](v9, "setIsHomeIndicatorHidden:", 1);
      v10 = objc_alloc((Class)MIUIMedicalIDViewController);
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "healthStore"));
      v12 = objc_msgSend(v10, "initWithHealthStore:medicalIDData:displayConfiguration:", v11, v3, v9);

      v13 = objc_msgSend(objc_alloc((Class)UINavigationController), "initWithRootViewController:", v12);
      objc_msgSend(WeakRetained, "setMedicalIDNavigationController:", v13);

      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "medicalIDNavigationController"));
      objc_msgSend(v14, "setModalPresentationStyle:", 6);

      v15 = objc_msgSend(objc_alloc((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, *(_QWORD *)(a1 + 32), "dismissMedicalIDViewController");
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "navigationItem"));
      objc_msgSend(v16, "setRightBarButtonItem:", v15);

    }
    else
    {
      v9 = objc_alloc_init(ICSMedicalIDViewController);
      -[ICSMedicalIDViewController setDelegate:](v9, "setDelegate:", *(_QWORD *)(a1 + 32));
      -[ICSMedicalIDViewController setShowsDismissButton:](v9, "setShowsDismissButton:", 1);
      -[ICSMedicalIDViewController setShowsShowWhenLockedState:](v9, "setShowsShowWhenLockedState:", 0);
      -[ICSMedicalIDViewController setShowsEmergencyAccessState:](v9, "setShowsEmergencyAccessState:", 0);
      -[ICSMedicalIDViewController setMedicalID:](v9, "setMedicalID:", v3);
      v17 = objc_msgSend(objc_alloc((Class)UINavigationController), "initWithRootViewController:", v9);
      objc_msgSend(WeakRetained, "setMedicalIDNavigationController:", v17);

      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "medicalIDNavigationController"));
      objc_msgSend(v18, "setModalPresentationStyle:", 6);

      v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "medicalIDNavigationController"));
      v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "navigationBar"));
      objc_msgSend(v15, "setPrefersLargeTitles:", 1);
    }

    v19 = *(_QWORD *)(a1 + 40);
    if (v19)
      (*(void (**)(void))(v19 + 16))();
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1001A94DC();

    objc_msgSend(WeakRetained, "deactivateSOS");
  }

}

void sub_10005F4C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005F4E4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  void *v5;
  _QWORD v6[5];
  uint8_t buf[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Presenting Medical ID...", buf, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "medicalIDNavigationController"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10005F5B0;
  v6[3] = &unk_100284898;
  v6[4] = WeakRetained;
  objc_msgSend(WeakRetained, "presentViewController:animated:completion:", v5, 1, v6);

}

void sub_10005F5B0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  if (objc_msgSend(*(id *)(a1 + 32), "sosMode") == (id)5 || objc_msgSend(*(id *)(a1 + 32), "sosMode") == (id)6)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "infoLabel"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "text"));

    if (v3)
    {
      v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "infoLabel"));
      objc_msgSend(v4, "setText:", 0);

    }
  }
}

void sub_10005F7A0(uint64_t a1)
{
  _QWORD v2[4];
  id v3;
  _QWORD v4[5];

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10005F860;
  v4[3] = &unk_100284898;
  v4[4] = *(_QWORD *)(a1 + 32);
  +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v4, 0.0, 0.5);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10005F894;
  v2[3] = &unk_100284898;
  v3 = *(id *)(a1 + 40);
  +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v2, 0.5, 1.0);

}

void sub_10005F860(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentView"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

id sub_10005F894(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_10005F8A0(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentView"));
  objc_msgSend(v2, "removeFromSuperview");

  return objc_msgSend(*(id *)(a1 + 32), "setCurrentView:", *(_QWORD *)(a1 + 40));
}

void sub_10005FE38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10005FE54(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "confirmationTimeoutTimer"));
  v3 = objc_msgSend(v2, "isValid");

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "confirmationTimeoutTimer"));
    objc_msgSend(v4, "invalidate");

    objc_msgSend(*(id *)(a1 + 32), "setConfirmationTimeoutTimer:", 0);
  }
  v5 = objc_msgSend(*(id *)(a1 + 32), "sosMode");
  v6 = *(void **)(a1 + 32);
  if (v5 == (id)8)
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "checkInView"));
  else
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "countdownView"));
  v8 = v7;
  objc_msgSend(v7, "resume");

  return objc_msgSend(*(id *)(a1 + 32), "sendFlowStateUpdateForCurrentSOSMode");
}

void sub_10005FEF8(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  void *v23;
  double v24;
  void *v25;
  double v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  PHSOSNotifyCountdownViewModel *v32;
  double v33;
  id v34;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "confirmationTimeoutTimer"));
  v3 = objc_msgSend(v2, "isValid");

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "confirmationTimeoutTimer"));
    objc_msgSend(v4, "invalidate");

    objc_msgSend(*(id *)(a1 + 32), "setConfirmationTimeoutTimer:", 0);
  }
  v5 = objc_msgSend(*(id *)(a1 + 32), "sosMode");
  v6 = *(void **)(a1 + 32);
  if (v5 == (id)8)
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "checkInView"));
  else
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "countdownView"));
  v8 = v7;
  objc_msgSend(v7, "stop");

  objc_msgSend(*(id *)(a1 + 32), "countdownPausedTime");
  v10 = v9;
  objc_msgSend(*(id *)(a1 + 32), "countdownStartedTime");
  v12 = v10 - v11;
  objc_msgSend(*(id *)(a1 + 32), "setCountdownStartedTime:", 0.0);
  objc_msgSend(*(id *)(a1 + 32), "setCountdownPausedTime:", 0.0);
  objc_msgSend(*(id *)(a1 + 32), "setTimeTillCancelCall:", v12);
  objc_msgSend(*(id *)(a1 + 32), "setWasCallCancelled:", 1);
  v13 = objc_msgSend(*(id *)(a1 + 32), "sosMode");
  v14 = *(void **)(a1 + 32);
  if (v13 == (id)1)
  {
    objc_msgSend(v14, "setSosMode:", 3);
    v15 = objc_msgSend(*(id *)(a1 + 32), "sosTrigger");
    v16 = *(void **)(a1 + 32);
    if (v15 == (id)7)
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "getCheckInViewModel"));
      v18 = *(void **)(a1 + 32);
      objc_msgSend(v17, "timeout");
      v20 = v19;
      objc_msgSend(v18, "timeTillCancelCall");
      objc_msgSend(v18, "setTimeTillCancelCall:", v20 + v21);
      objc_msgSend(*(id *)(a1 + 32), "submitSOSResolutionMetric:", 0);

    }
    else
    {
      objc_msgSend(v16, "raiseAccidentalSOSNotification");
    }
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "analyticsReporter"));
    objc_msgSend(v22, "reportCanceledSOSCountdownToCall:", v12);

    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "getSOSDialCountdownViewModel"));
    v24 = (double)(unint64_t)objc_msgSend(v23, "countdown") - v12;

    if (objc_msgSend(*(id *)(a1 + 32), "sosTrigger") == (id)7)
    {
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "getCheckInViewModel"));
      objc_msgSend(v25, "timeout");
      v24 = v24 + v26;

    }
    v34 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coreAnalyticsReporter"));
    v27 = objc_msgSend(*(id *)(a1 + 32), "sosTrigger");
    v28 = (uint64_t)v24;
    v29 = v34;
    v30 = 2;
    goto LABEL_16;
  }
  if (objc_msgSend(v14, "sosMode") != (id)3)
  {
    objc_msgSend(*(id *)(a1 + 32), "setSosMode:", 6);
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "analyticsReporter"));
    objc_msgSend(v31, "reportCanceledSOSCountdownToNotify:", v12);

    v32 = objc_alloc_init(PHSOSNotifyCountdownViewModel);
    v33 = (double)-[PHSOSNotifyCountdownViewModel countdown](v32, "countdown") - v12;

    v34 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coreAnalyticsReporter"));
    v27 = objc_msgSend(*(id *)(a1 + 32), "sosTrigger");
    v28 = (uint64_t)v33;
    v29 = v34;
    v30 = 5;
LABEL_16:
    objc_msgSend(v29, "reportSOSUserCancelled:lastFlowState:countdownValue:", v27, v30, v28);

  }
}

void sub_10006019C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD v5[4];
  id v6;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100060244;
  v5[3] = &unk_100285F88;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, v5);
  objc_destroyWeak(&v6);

}

void sub_100060230(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100060244(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend(WeakRetained, "sosMode") == (id)8)
    v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "checkInView"));
  else
    v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "countdownView"));
  v2 = v1;
  objc_msgSend(v1, "restart");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "coreAnalyticsReporter"));
  objc_msgSend(v3, "reportSOSCancelationTimeout:", objc_msgSend(WeakRetained, "sosTrigger"));

  objc_msgSend(WeakRetained, "sendFlowStateUpdateForCurrentSOSMode");
}

void sub_1000605E4(uint64_t a1)
{
  void *v1;
  void *v2;
  unsigned __int8 v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((+[TUCallCapabilities isEmergencyCallbackModeEnabled](TUCallCapabilities, "isEmergencyCallbackModeEnabled") & 1) == 0)
  {
    if (objc_msgSend(WeakRetained, "sosMode") == (id)4)
    {
      v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "countdownView"));
      objc_msgSend(v1, "stop");

      v2 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
      v3 = objc_msgSend(v2, "hasCurrentCalls");

      if ((v3 & 1) == 0)
        objc_msgSend(WeakRetained, "startSOSNotificationCountdown");
    }
    else if (objc_msgSend(WeakRetained, "sosMode") == (id)7)
    {
      objc_msgSend(WeakRetained, "setSosMode:", 7);
    }
  }

}

void sub_1000609D8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  int v7;
  id v8;

  v3 = a2;
  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      v7 = 138412290;
      v8 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Failed to add SOS notification request,error,%@", (uint8_t *)&v7, 0xCu);
    }

  }
  else
  {
    if (v6)
    {
      LOWORD(v7) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Successfully added SOS notification request", (uint8_t *)&v7, 2u);
    }

    +[SOSUtilities setShortSOSNotificationDisplayTimestamp](SOSUtilities, "setShortSOSNotificationDisplayTimestamp");
    objc_msgSend(*(id *)(a1 + 32), "submitSOSResolutionMetric:", 1);
  }

}

id sub_100060F64(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "deactivateSOS");
}

uint64_t sub_1000611C8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_1000611DC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_100061400(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "userAcknowledgedFindMyInfo");
}

id sub_100061408(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "didTapTemporarilyDisableFindMy");
}

void sub_1000615B8(uint64_t a1, int a2)
{
  _QWORD block[5];

  if (a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100061618;
    block[3] = &unk_100284898;
    block[4] = *(_QWORD *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100061618(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "slidingView"));
  objc_msgSend(v1, "didSuppressFindMy");

}

BOOL sub_100061698(id a1, TUCall *a2)
{
  return -[TUCall isSOSOrFakeSOS](a2, "isSOSOrFakeSOS");
}

void sub_100064614(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

id sub_100064634(void *a1, const char *a2)
{
  return objc_msgSend(a1, "sosTrigger");
}

void sub_10006463C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

id sub_1000648E4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "updateButtonColor");
  return _objc_msgSend(*(id *)(a1 + 32), "updateIcon");
}

id sub_100065FA0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

void sub_100065FAC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  id v6;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
    v5 = objc_opt_respondsToSelector(v4, "didFinishSlideForSlidingButton:");

    if ((v5 & 1) != 0)
    {
      v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
      objc_msgSend(v6, "didFinishSlideForSlidingButton:", *(_QWORD *)(a1 + 32));

    }
  }
}

void sub_100066048(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  id v6;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeFromSuperview");
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
    v5 = objc_opt_respondsToSelector(v4, "didFinishSlideForSlidingButton:");

    if ((v5 & 1) != 0)
    {
      v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
      objc_msgSend(v6, "didFinishSlideForSlidingButton:", *(_QWORD *)(a1 + 32));

    }
  }
}

void sub_100067854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100067894(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "startVoiceLoopMessagePlaybackWithMessageType:", 103);
    WeakRetained = v2;
  }

}

void sub_1000678C8(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "setSlidingViewState:", 3);
    objc_msgSend(v2, "didFinishSOSSliding:", 2);
    WeakRetained = v2;
  }

}

id sub_100068108(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 232), "setAlpha:", 1.0);
}

void sub_1000681FC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100068220(uint64_t a1, int a2)
{
  _QWORD block[4];
  id v3;

  if (a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10006829C;
    block[3] = &unk_100285F88;
    objc_copyWeak(&v3, (id *)(a1 + 32));
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v3);
  }
}

void sub_10006829C(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "setDeviceSupportsFindMy:", 1);
    objc_msgSend(v2, "createFindMyUI");
    WeakRetained = v2;
  }

}

void sub_100068378(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10006839C(uint64_t a1, char a2)
{
  id WeakRetained;
  void *v4;
  _QWORD v5[5];
  char v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100068418;
    v5[3] = &unk_100284C98;
    v5[4] = WeakRetained;
    v6 = a2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
  }

}

id sub_100068418(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setShouldPowerDownViewShowFindMyAlert:", *(_BYTE *)(a1 + 40) == 0);
}

void sub_1000687C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000687E8(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "clearMetricItems");
    objc_msgSend(v3, "setSlidingViewState:", 1);
    objc_msgSend(v3, "startMotionStateTracking");
    objc_msgSend(v3, "repeatingUpdateAnimatedSliderForCountdownNumber:forModel:", objc_msgSend(*(id *)(a1 + 32), "countdown"), *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void sub_100068C74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100068C98(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  uint8_t buf[16];

  v3 = a2;
  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PHSlidingView,CMMotionActivity,inside handler", buf, 2u);
  }

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100068D80;
  v7[3] = &unk_100285028;
  objc_copyWeak(&v9, (id *)(a1 + 32));
  v8 = v3;
  v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);

  objc_destroyWeak(&v9);
}

void sub_100068D80(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  unsigned int v7;
  uint64_t v8;
  void *v9;
  PHSlidingViewMotionActivity *v10;
  id v11;
  PHSlidingViewMotionActivity *v12;
  void *v13;
  id v14;
  _DWORD v15[2];
  __int16 v16;
  uint64_t v17;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = sub_1000C5588();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (!v3)
    {
      if (v6)
      {
        LOWORD(v15[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PHSlidingView,CMMotionActivity,null", (uint8_t *)v15, 2u);
      }
      goto LABEL_9;
    }
    if (v6)
    {
      v7 = objc_msgSend(*(id *)(a1 + 32), "isMounted");
      objc_msgSend(*(id *)(a1 + 32), "mountedProbability");
      v15[0] = 67109376;
      v15[1] = v7;
      v16 = 2048;
      v17 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PHSlidingView,CMMotionActivity,isMounted:%d,mountedProbability:%lf", (uint8_t *)v15, 0x12u);
    }

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "motionActivityList"));
    v10 = [PHSlidingViewMotionActivity alloc];
    v11 = objc_msgSend(*(id *)(a1 + 32), "isMounted");
    objc_msgSend(*(id *)(a1 + 32), "mountedProbability");
    v12 = -[PHSlidingViewMotionActivity initWithIsMounted:probability:](v10, "initWithIsMounted:probability:", v11);
    objc_msgSend(v9, "addObject:", v12);

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "motionActivityList"));
    v14 = objc_msgSend(v13, "count");

    if ((unint64_t)v14 >= 5)
    {
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "motionActivityList"));
      -[NSObject removeObjectAtIndex:](v5, "removeObjectAtIndex:", 0);
LABEL_9:

    }
  }

}

void sub_100069224(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;

  if (objc_msgSend(*(id *)(a1 + 32), "slidingViewState") == (id)1)
  {
    v2 = TLAlertTopicSOSCountdownTick;
    if (*(_BYTE *)(a1 + 48))
    {
      v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "alertController"));
      objc_msgSend(v5, "playAlertWithAudio:alertTopic:", 0, v2);

    }
    else
    {
      v3 = objc_msgSend(*(id *)(a1 + 40), "playsSound");
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "alertController"));
      objc_msgSend(v4, "playAlertWithAudio:alertTopic:", v3, v2);

      if ((_DWORD)v3)
        objc_msgSend(*(id *)(a1 + 32), "toggleFlash");
    }
  }
}

void sub_1000692F0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[5];
  id v8;
  uint64_t v9;

  if (objc_msgSend(*(id *)(a1 + 32), "slidingViewState") == (id)1)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    v2 = *(_QWORD *)(a1 + 56);
    v3 = *(void **)(a1 + 32);
    v4 = objc_msgSend(*(id *)(a1 + 40), "countdown");
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000693B0;
    v7[3] = &unk_100286248;
    v5 = *(_QWORD *)(a1 + 56);
    v6 = *(void **)(a1 + 40);
    v7[4] = *(_QWORD *)(a1 + 32);
    v9 = v5;
    v8 = v6;
    objc_msgSend(v3, "updateAnimatedSliderForCountdownNumber:forTotalCount:afterDelay:completion:", v2, v4, v7, 0.280999988);

  }
}

id sub_1000693B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "repeatingUpdateAnimatedSliderForCountdownNumber:forModel:", *(_QWORD *)(a1 + 48) - 1, *(_QWORD *)(a1 + 40));
}

void sub_1000693C4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  uint64_t v5;
  double v6;
  void *v7;
  double v8;
  void *v9;
  void *v10;
  void *v11;
  uint8_t v12[16];

  if (objc_msgSend(*(id *)(a1 + 32), "slidingViewState") != (id)1)
    return;
  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Slider Countdown has finished! Calling completion.", v12, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "invalidateCountdownAndStopSounds");
  objc_msgSend(*(id *)(a1 + 32), "stopFlash");
  if (objc_msgSend(*(id *)(a1 + 32), "isCallDueToMountedState"))
  {
    objc_msgSend(*(id *)(a1 + 32), "setSlidingViewState:", 5);
    v4 = *(void **)(a1 + 32);
    v5 = 3;
LABEL_10:
    objc_msgSend(v4, "didFinishSOSSliding:", v5);
    goto LABEL_11;
  }
  +[SOSUtilities clawReleaseToCallSupport](SOSUtilities, "clawReleaseToCallSupport");
  if (v6 == 0.0)
  {
    objc_msgSend(*(id *)(a1 + 32), "setSlidingViewState:", 4);
    v4 = *(void **)(a1 + 32);
    v5 = 0;
    goto LABEL_10;
  }
  +[SOSUtilities clawReleaseToCallSupport](SOSUtilities, "clawReleaseToCallSupport");
  v7 = *(void **)(a1 + 32);
  if (v8 == 1.0)
  {
    objc_msgSend(v7, "setSlidingViewState:", 4);
    v4 = *(void **)(a1 + 32);
    v5 = 5;
    goto LABEL_10;
  }
  objc_msgSend(v7, "setSlidingViewState:", 2);
LABEL_11:
  if (+[SOSUtilities isMountStateTrackingEnabled](SOSUtilities, "isMountStateTrackingEnabled"))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cmMotionActivityManager"));

    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cmMotionActivityManager"));
      objc_msgSend(v10, "stopPeriodicActivityUpdates");

      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "motionActivityList"));
      objc_msgSend(v11, "removeAllObjects");

    }
  }
}

void sub_100069668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100069688(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "updateAnimatedSliderForCountdownNumber:forTotalCount:completion:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32), (double)*(unint64_t *)(a1 + 56));

}

void sub_1000697E4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "animatedSlidingButton"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "acceptButton"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%ld"), *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "setKnobText:", v4);

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "animatedSlidingButton"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "acceptButton"));
  objc_msgSend(v5, "setKnobPosition:", 1.0 - (double)(unint64_t)(*(_QWORD *)(a1 + 40) - 1) / *(double *)(a1 + 48));

}

void sub_100069944(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "animatedSlidingButton"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "acceptButton"));
  objc_msgSend(v3, "setKnobText:", &stru_10028DC20);

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "animatedSlidingButton"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "acceptButton"));
  objc_msgSend(v4, "setKnobPosition:", 0.0);

}

void sub_10006A2C0(id a1)
{
  unint64_t v1;
  double v2;

  v1 = +[PHUIConfiguration inCallControlSpacing](PHUIConfiguration, "inCallControlSpacing");
  v2 = 34.0;
  if (v1 != 5)
    v2 = 27.0;
  if (!v1)
    v2 = 22.0;
  qword_1002DC8E0 = *(_QWORD *)&v2;
}

void sub_10006A924(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "animatedSlidingButton"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "powerOffSlidingButton"));
  objc_msgSend(v3, "setAlpha:", 0.0);

}

id sub_10006AD08(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 216), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 224), "setAlpha:", 0.0);
}

void sub_10006AD50(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "beaconManager"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10006ADC8;
  v3[3] = &unk_100284898;
  v3[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "setUserHasAcknowledgedFindMy:completion:", 1, v3);

}

void sub_10006ADC8(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10006AE24;
  block[3] = &unk_100284898;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10006AE24(uint64_t a1)
{
  _QWORD v2[5];
  _QWORD v3[4];
  uint64_t v4;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10006AEAC;
  v3[3] = &unk_100284898;
  v4 = *(_QWORD *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10006AF0C;
  v2[3] = &unk_1002848C0;
  v2[4] = v4;
  return +[UIView _animateUsingDefaultTimingWithOptions:animations:completion:](UIView, "_animateUsingDefaultTimingWithOptions:animations:completion:", 0, v3, v2);
}

id sub_10006AEAC(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 216), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 224), "setAlpha:", 1.0);
}

id sub_10006AF0C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_powerOff");
}

void sub_10006AF14(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "setShouldPowerDownViewShowFindMyAlert:", 0);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "beaconManager"));
  objc_msgSend(v2, "setUserHasAcknowledgedFindMy:completion:", 1, &stru_100286300);

}

id sub_10006AF6C(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 216), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 224), "setAlpha:", 1.0);
}

id sub_10006AFB4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_powerOff");
}

void sub_10006B058(id a1)
{
  id v1;
  NSObject *v2;
  id v3;
  void *v4;
  uint8_t v5[16];

  v1 = sub_1000C5588();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Shutting off!", v5, 2u);
  }

  v3 = objc_msgSend(objc_alloc((Class)FBSShutdownOptions), "initWithReason:", CFSTR("InCallService PowerOff Slider"));
  objc_msgSend(v3, "setSource:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[FBSSystemService sharedService](FBSSystemService, "sharedService"));
  objc_msgSend(v4, "shutdownWithOptions:", v3);

}

void sub_10006B104(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10006B16C;
  block[3] = &unk_100284E18;
  v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

uint64_t sub_10006B16C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10006B590(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  void *v4;
  void *v5;
  void *v6;
  dispatch_time_t v7;
  NSObject *v8;
  id v9;
  NSObject *v10;
  _QWORD block[5];
  uint8_t buf[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
  v3 = objc_msgSend(v2, "hasTorch");

  if ((v3 & 1) != 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    objc_msgSend(v4, "lockForConfiguration:", 0);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    objc_msgSend(v5, "setTorchMode:", 1);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    objc_msgSend(v6, "unlockForConfiguration");

    v7 = dispatch_time(0, 500000000);
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDispatchQueue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10006B6E0;
    block[3] = &unk_100284898;
    block[4] = *(_QWORD *)(a1 + 32);
    dispatch_after(v7, v8, block);

  }
  else
  {
    v9 = sub_1000C5588();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "PHSlidingView,torch not available", buf, 2u);
    }

  }
}

id sub_10006B6E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "stopFlash");
}

void sub_10006B76C(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  NSObject *v9;
  id v10;
  uint8_t buf[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
  v3 = objc_msgSend(v2, "hasTorch");

  if ((v3 & 1) != 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    objc_msgSend(v4, "lockForConfiguration:", 0);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    v6 = objc_msgSend(v5, "torchMode");

    if (v6 == (id)1)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
      objc_msgSend(v7, "setTorchMode:", 0);

    }
    v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    objc_msgSend(v10, "unlockForConfiguration");

  }
  else
  {
    v8 = sub_1000C5588();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "PHSlidingView,torch not available", buf, 2u);
    }

  }
}

void sub_10006B978(id a1)
{
  const void *v1;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  CFTypeID v11;
  const UInt8 *BytePtr;
  __int128 v13;
  float v14;
  float v15;
  float v16;
  double v17;
  float v18;
  double v19;
  float v20;
  double v21;
  id v22;
  NSObject *v23;
  _BOOL4 v24;
  float Width;
  uint8_t v26[16];
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  v1 = (const void *)MGCopyAnswer(CFSTR("UserIntentPhysicalButtonNormalizedCGRect"), 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v2, "_referenceBounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  if (v1)
  {
    v11 = CFGetTypeID(v1);
    if (v11 == CFDataGetTypeID())
    {
      BytePtr = CFDataGetBytePtr((CFDataRef)v1);
      v13 = *((_OWORD *)BytePtr + 1);
      *(_OWORD *)ymmword_1002DC8F0 = *(_OWORD *)BytePtr;
      *(_OWORD *)&ymmword_1002DC8F0[16] = v13;
    }
    v27.origin.x = v4;
    v27.origin.y = v6;
    v27.size.width = v8;
    v27.size.height = v10;
    v14 = CGRectGetWidth(v27) * *(double *)ymmword_1002DC8F0;
    v15 = floorf(v14);
    v28.origin.x = v4;
    v28.origin.y = v6;
    v28.size.width = v8;
    v28.size.height = v10;
    v16 = CGRectGetHeight(v28) * *(double *)&ymmword_1002DC8F0[8];
    v17 = floorf(v16);
    v29.origin.x = v4;
    v29.origin.y = v6;
    v29.size.width = v8;
    v29.size.height = v10;
    v18 = CGRectGetWidth(v29) * *(double *)&ymmword_1002DC8F0[16];
    v19 = floorf(v18);
    v30.origin.x = v4;
    v30.origin.y = v6;
    v30.size.width = v8;
    v30.size.height = v10;
    v20 = CGRectGetHeight(v30) * *(double *)&ymmword_1002DC8F0[24];
    v21 = floorf(v20);
  }
  else
  {
    v22 = sub_1000C5588();
    v23 = objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "PHSlidingView,lockButtonDimension,lock button details not found", v26, 2u);
    }

    if (qword_1002DC920 != -1)
      dispatch_once(&qword_1002DC920, &stru_100286360);
    v24 = (byte_1002DC918 | byte_1002DC919 | byte_1002DC91A) == 0;
    v31.origin.x = v4;
    v31.origin.y = v6;
    v31.size.width = v8;
    v31.size.height = v10;
    Width = CGRectGetWidth(v31);
    v15 = floorf(Width);
    v17 = dbl_10023FC40[v24];
    v19 = 0.0;
    v21 = 70.0;
  }
  *(double *)ymmword_1002DC8F0 = v15;
  *(double *)&ymmword_1002DC8F0[8] = v17;
  *(double *)&ymmword_1002DC8F0[16] = v19;
  *(double *)&ymmword_1002DC8F0[24] = v21;
}

void sub_10006BBA8(id a1)
{
  __int128 v1;
  int v2;
  __int128 v3;
  int v4;
  __int128 v5;
  int v6;
  __int128 v7;
  int v8;
  __int128 v9;
  int v10;

  v10 = 414393924;
  v9 = xmmword_10023FBD0;
  byte_1002DC918 = MGIsDeviceOfType(&v9);
  v8 = 897736383;
  v7 = xmmword_10023FBE4;
  byte_1002DC919 = MGIsDeviceOfType(&v7);
  v6 = -996295886;
  v5 = xmmword_10023FBF8;
  MGIsDeviceOfType(&v5);
  v4 = -453987047;
  v3 = xmmword_10023FC0C;
  MGIsDeviceOfType(&v3);
  v2 = -121925081;
  v1 = xmmword_10023FC20;
  byte_1002DC91A = MGIsDeviceOfType(&v1);
}

void sub_10006C0BC(CGRect *a1)
{
  const __CFData *v2;
  const __CFData *v3;
  CFTypeID v4;
  __int128 *BytePtr;
  __int128 v6;
  float v7;
  double v8;
  float v9;
  double v10;
  float v11;
  uint64_t v12;
  float v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const __CFData *v23;
  const __CFData *v24;
  CFTypeID v25;
  __int128 *v26;
  __int128 v27;
  float v28;
  double v29;
  float v30;
  double v31;
  float v32;
  uint64_t v33;
  float v34;
  id v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = (const __CFData *)MGCopyAnswer(CFSTR("VolumeUpButtonNormalizedCGRect"), 0);
  if (v2)
  {
    v3 = v2;
    v4 = CFGetTypeID(v2);
    if (v4 == CFDataGetTypeID())
    {
      BytePtr = (__int128 *)CFDataGetBytePtr(v3);
      v6 = BytePtr[1];
      xmmword_1002DC928 = *BytePtr;
      *(_OWORD *)&qword_1002DC938 = v6;
    }
    v7 = CGRectGetWidth(a1[1]) * *(double *)&xmmword_1002DC928;
    v8 = floorf(v7);
    v9 = CGRectGetHeight(a1[1]) * *((double *)&xmmword_1002DC928 + 1);
    v10 = floorf(v9);
    v11 = CGRectGetWidth(a1[1]) * *(double *)&qword_1002DC938;
    *(double *)&v12 = floorf(v11);
    v13 = CGRectGetHeight(a1[1]) * *(double *)&qword_1002DC940;
    *(double *)&xmmword_1002DC928 = v8;
    *((double *)&xmmword_1002DC928 + 1) = v10;
    qword_1002DC938 = v12;
    *(double *)&qword_1002DC940 = floorf(v13);
  }
  else
  {
    v14 = sub_1000C5588();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_1001A95D0(v15, v16, v17, v18, v19, v20, v21, v22);

  }
  v23 = (const __CFData *)MGCopyAnswer(CFSTR("VolumeDownButtonNormalizedCGRect"), 0);
  if (v23)
  {
    v24 = v23;
    v25 = CFGetTypeID(v23);
    if (v25 == CFDataGetTypeID())
    {
      v26 = (__int128 *)CFDataGetBytePtr(v24);
      v27 = v26[1];
      xmmword_1002DC948 = *v26;
      *(_OWORD *)&qword_1002DC958 = v27;
    }
    v28 = CGRectGetWidth(a1[1]) * *(double *)&xmmword_1002DC948;
    v29 = floorf(v28);
    v30 = CGRectGetHeight(a1[1]) * *((double *)&xmmword_1002DC948 + 1);
    v31 = floorf(v30);
    v32 = CGRectGetWidth(a1[1]) * *(double *)&qword_1002DC958;
    *(double *)&v33 = floorf(v32);
    v34 = CGRectGetHeight(a1[1]) * *(double *)&qword_1002DC960;
    *(double *)&xmmword_1002DC948 = v29;
    *((double *)&xmmword_1002DC948 + 1) = v31;
    qword_1002DC958 = v33;
    *(double *)&qword_1002DC960 = floorf(v34);
  }
  else
  {
    v35 = sub_1000C5588();
    v36 = objc_claimAutoreleasedReturnValue(v35);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
      sub_1001A959C(v36, v37, v38, v39, v40, v41, v42, v43);

  }
}

void sub_10006E020(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bundleIdentifier"));
  v2 = TUPreferredFaceTimeBundleIdentifier();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  byte_1002DC970 = objc_msgSend(v1, "isEqualToString:", v3);

}

void sub_10006E33C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  PHHandsetDialerNumberPadButton *v6;
  signed int v7;
  uint64_t v8;
  void *v9;
  id v10;

  v5 = a2;
  v6 = [PHHandsetDialerNumberPadButton alloc];
  v7 = objc_msgSend(v5, "intValue");

  v8 = v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
  v10 = -[PHHandsetDialerNumberPadButton initForCharacter:style:](v6, "initForCharacter:style:", v8, objc_msgSend(v9, "userInterfaceStyle"));

  objc_msgSend(*(id *)(a1 + 40), "insertObject:atIndex:", v10, a3);
}

void sub_10006EF10(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  byte_1002DC980 = objc_msgSend(v1, "BOOLForKey:", CFSTR("shouldTraceSignposts"));

}

uint64_t sub_10006FB0C(uint64_t a1, int a2)
{
  NSObject *v4;
  _DWORD v6[2];

  v4 = sub_1000C56D8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Handled user-initiated device lock event, didConsumeEvent: %d", (uint8_t *)v6, 8u);
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100071D10(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

id sub_10007292C(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "_handleSIMInsertionOrRemoval");
}

id sub_100072934(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  NSObject *v6;
  uint8_t v8[16];
  uint8_t buf[16];

  v3 = sub_1000C5588();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "TUCallCenterInCallServiceDidAppearNotification: Received in ", buf, 2u);
  }

  v5 = sub_1000C5588();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "DialerAnimation: Calling _resetButtonAnimation in ", v8, 2u);
  }

  return objc_msgSend(a2, "_resetButtonAnimation");
}

void sub_100072D98(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[TUCallHistoryController sharedControllerWithCoalescingStrategy:options:](TUCallHistoryController, "sharedControllerWithCoalescingStrategy:options:", 1, 4));
  v2 = (void *)qword_1002DC990;
  qword_1002DC990 = v1;

}

void sub_100073D58(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[2];

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "superview"));
  v4 = *(void **)(a1 + 32);
  v8[0] = *(_QWORD *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "dialerView"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "deleteButton"));
  v8[1] = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v8, 2));
  objc_msgSend(v2, "_fadeSubviewsOf:excludingViews:toValue:", v3, v7, 0.0);

}

void sub_100074900(uint64_t a1, int a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "soundPlayer"));
  objc_msgSend(v4, "attemptToPlayKey:", a2);

  v6 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%c"), a2));
  objc_msgSend(v6, "phonePad:appendString:", v5, v7);

}

id *sub_100074988(id *result, uint64_t a2)
{
  if (a2 == 1)
    return (id *)_objc_msgSend(result[4], "_callButtonPressed:", 0);
  if (!a2)
    return (id *)objc_msgSend(result[4], "phonePadDeleteLastDigit:", result[5]);
  return result;
}

id sub_100074D7C(id result, char a2)
{
  uint64_t v2;
  id v3;
  NSObject *v4;

  if ((a2 & 1) == 0)
  {
    v2 = (uint64_t)result;
    v3 = sub_1000C5588();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1001A9890(v2, v4);

    return objc_msgSend(*(id *)(v2 + 40), "setWantsCallButtonAnimation:", 0);
  }
  return result;
}

void sub_1000755B4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  objc_msgSend(v2, "_setBackgroundStyle:", *(_QWORD *)(a1 + 32));

}

void sub_1000757F0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "phonePadView"));
  objc_msgSend(v2, "setPlaysSounds:", *(unsigned __int8 *)(a1 + 40));

}

void sub_100075DAC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  NSObject *v7;
  NSString *v8;
  void *v9;
  PHPhoneRemoteHostViewController *v10;
  int v11;
  void *v12;

  v5 = a2;
  if (!v5 || a3)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    v6 = sub_1000C5588();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = NSStringFromClass(*(Class *)(a1 + 40));
      v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      v11 = 138412290;
      v12 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Received remote view controller from %@", (uint8_t *)&v11, 0xCu);

    }
    v10 = objc_alloc_init(PHPhoneRemoteHostViewController);
    -[PHPhoneRemoteHostViewController setUpRemoteViewController:](v10, "setUpRemoteViewController:", v5);
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
}

void sub_100076640(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1002DC9A0;
  qword_1002DC9A0 = (uint64_t)v1;

}

void sub_100076870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;
  id *v16;
  uint64_t v17;

  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v17 - 40));
  _Unwind_Resume(a1);
}

void sub_1000768A4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  void *i;
  void *v13;
  void *v14;
  id v15;
  unsigned __int8 v16;
  void *v17;
  id WeakRetained;
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];

  v5 = a2;
  v19 = a3;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v6 = v5;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v21;
    v10 = (id *)(a1 + 32);
    while (2)
    {
      v11 = a1;
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v21 != v9)
          objc_enumerationMutation(v6);
        v13 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)i);
        if ((objc_msgSend(v13, "isSOSOrFakeSOS") & 1) != 0)
        {
LABEL_15:

          WeakRetained = objc_loadWeakRetained((id *)(v11 + 40));
          v17 = v19;
          objc_msgSend(WeakRetained, "showSOSDisconnectConfirmation:", v19);
          goto LABEL_16;
        }
        v14 = (void *)objc_claimAutoreleasedReturnValue(+[CNKFeatures sharedInstance](CNKFeatures, "sharedInstance"));
        if (objc_msgSend(v14, "isEnhancedEmergencyEnabled")
          && (objc_msgSend(v13, "isEmergency") & 1) != 0)
        {
          v15 = objc_loadWeakRetained(v10);
          v16 = objc_msgSend(v15, "isShowSOSConfirmationSupported");

          if ((v16 & 1) != 0)
            goto LABEL_15;
        }
        else
        {

        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      a1 = v11;
      if (v8)
        continue;
      break;
    }
  }

  v17 = v19;
  (*((void (**)(id, uint64_t))v19 + 2))(v19, 1);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "clearAllDelegates");
LABEL_16:

}

void sub_100076F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  id *v28;
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100076F6C(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "alertControllers"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 32));

  objc_msgSend(WeakRetained, "dismissAlertControllers");
}

void sub_100076FD0(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  objc_msgSend(*(id *)(a1 + 32), "clearAllDelegates");
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "alertControllers"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));

  objc_msgSend(WeakRetained, "dismissAlertControllers");
}

void sub_100077354(id a1)
{
  PHAudioDeviceController *v1;
  void *v2;

  v1 = objc_alloc_init(PHAudioDeviceController);
  v2 = (void *)qword_1002DC9B0;
  qword_1002DC9B0 = (uint64_t)v1;

}

void sub_100077604(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_pickableRoutesUsingBackgroundQueue:", 1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "routesForUnformattedPickableRoutes:", v3));

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000776C4;
  v7[3] = &unk_100286020;
  v5 = *(id *)(a1 + 40);
  v8 = v4;
  v9 = v5;
  v6 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);

}

uint64_t sub_1000776C4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100078948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100078960(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100078970(uint64_t a1)
{

}

void sub_100078978(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  objc_msgSend(*(id *)(a1 + 32), "_releaseLock");

}

void sub_100078B28(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("PHAudioDeviceControllerPickedRouteChangedNotification"), 0);

}

void sub_100078D90(id a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  int v4;
  const __CFString *v5;

  v1 = sub_1000C5588();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 138412290;
    v5 = CFSTR("PHAudioDeviceControllerAudioRoutesChangedNotification");
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Posting %@", (uint8_t *)&v4, 0xCu);
  }

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v3, "postNotificationName:object:", CFSTR("PHAudioDeviceControllerAudioRoutesChangedNotification"), 0);

}

id sub_1000792D0()
{
  if (qword_1002DC9D0 != -1)
    dispatch_once(&qword_1002DC9D0, &stru_1002865B8);
  return (id)qword_1002DC9C8;
}

void sub_100079310(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.calls.mobilephone", "Default");
  v2 = (void *)qword_1002DC9C8;
  qword_1002DC9C8 = (uint64_t)v1;

}

id sub_100079340()
{
  if (qword_1002DC9E0 != -1)
    dispatch_once(&qword_1002DC9E0, &stru_1002865D8);
  return (id)qword_1002DC9D8;
}

void sub_100079380(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.calls.mobilephone", "Oversized");
  v2 = (void *)qword_1002DC9D8;
  qword_1002DC9D8 = (uint64_t)v1;

}

id sub_1000793B0()
{
  if (qword_1002DC9F0 != -1)
    dispatch_once(&qword_1002DC9F0, &stru_1002865F8);
  return (id)qword_1002DC9E8;
}

void sub_1000793F0(id a1)
{
  dispatch_queue_attr_t v1;
  dispatch_queue_t v2;
  void *v3;
  NSObject *v4;

  v1 = dispatch_queue_attr_make_with_qos_class(0, (dispatch_qos_class_t)0xFFFFFFFE, 0);
  v4 = objc_claimAutoreleasedReturnValue(v1);
  v2 = dispatch_queue_create("com.apple.calls.mobilephone.logging", v4);
  v3 = (void *)qword_1002DC9E8;
  qword_1002DC9E8 = (uint64_t)v2;

}

IMP sub_1000794B0(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  objc_method *InstanceMethod;
  objc_method *v4;
  void (*Implementation)(void);
  void (*v6)(void);
  const char *TypeEncoding;
  const char *v8;

  v2 = (objc_class *)objc_opt_class(*(_QWORD *)(a1 + 32), a2);
  InstanceMethod = class_getInstanceMethod(v2, "setNeedsLayout");
  v4 = class_getInstanceMethod(v2, "_debugSetNeedsLayout");
  Implementation = method_getImplementation(InstanceMethod);
  v6 = method_getImplementation(v4);
  TypeEncoding = method_getTypeEncoding(InstanceMethod);
  class_replaceMethod(v2, "_debugSetNeedsLayout", Implementation, TypeEncoding);
  v8 = method_getTypeEncoding(v4);
  return class_replaceMethod(v2, "setNeedsLayout", v6, v8);
}

IMP sub_1000795D4(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  objc_method *InstanceMethod;
  objc_method *v4;
  void (*Implementation)(void);
  void (*v6)(void);
  const char *TypeEncoding;
  const char *v8;

  v2 = (objc_class *)objc_opt_class(*(_QWORD *)(a1 + 32), a2);
  InstanceMethod = class_getInstanceMethod(v2, "setNeedsLayout");
  v4 = class_getInstanceMethod(v2, "_debugSetNeedsLayout");
  Implementation = method_getImplementation(InstanceMethod);
  v6 = method_getImplementation(v4);
  TypeEncoding = method_getTypeEncoding(InstanceMethod);
  class_replaceMethod(v2, "_debugSetNeedsLayout", Implementation, TypeEncoding);
  v8 = method_getTypeEncoding(v4);
  return class_replaceMethod(v2, "setNeedsLayout", v6, v8);
}

void sub_10007A130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10007A158(id a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v1 = objc_claimAutoreleasedReturnValue(+[NSHashTable weakObjectsHashTable](NSHashTable, "weakObjectsHashTable"));
  v2 = (void *)qword_1002DCA08;
  qword_1002DCA08 = v1;

  v3 = objc_claimAutoreleasedReturnValue(+[NSMapTable weakToStrongObjectsMapTable](NSMapTable, "weakToStrongObjectsMapTable"));
  v4 = (void *)qword_1002DCA10;
  qword_1002DCA10 = v3;

}

uint64_t sub_10007A1A4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10007A1B4(uint64_t a1)
{

}

void sub_10007A1BC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSObject *v11;

  v5 = a3;
  v6 = v5;
  if (!a2 || v5)
  {
    v10 = sub_1000C5588();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1001A99F8();

  }
  else
  {
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_10007A2C4(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1002DCA20;
  qword_1002DCA20 = (uint64_t)v1;

}

void sub_10007A480(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)CoreTelephonyClient), "initWithQueue:", &_dispatch_main_q);
  v2 = (void *)qword_1002DCA30;
  qword_1002DCA30 = (uint64_t)v1;

}

void sub_10007AAE0(id a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = objc_alloc_init((Class)TUCallProviderManager);
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "telephonyProvider"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "identifier"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "providerWithIdentifier:", v2));
  v4 = (void *)qword_1002DCA48;
  qword_1002DCA48 = v3;

}

void sub_10007AB94(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)FBSOrientationObserver);
  v2 = (void *)qword_1002DCA50;
  qword_1002DCA50 = (uint64_t)v1;

}

void sub_10007B0B4(uint64_t a1)
{
  unsigned int v2;
  int v3;
  id v4;

  v2 = objc_msgSend(*(id *)(a1 + 32), "isSpringBoardLocked");
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 != v2)
  {
    objc_msgSend(*(id *)(a1 + 32), "setSpringBoardLocked:", v3 != 0);
    v4 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v4, "postNotificationName:object:", CFSTR("PHLockScreenStatusChangedNotification"), *(_QWORD *)(a1 + 32));

  }
}

void *sub_10007B134(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!qword_1002DCA68)
  {
    v6 = off_1002866D0;
    v7 = 0;
    qword_1002DCA68 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)qword_1002DCA68;
    if (qword_1002DCA68)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)qword_1002DCA68;
LABEL_5:
  result = dlsym(v2, "SBSGetScreenLockStatus");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  off_1002DCA60 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10007BB58(id a1)
{
  id v1;
  id v2;

  v1 = +[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance");
  v2 = +[PHDevice currentDevice](PHDevice, "currentDevice");
}

void sub_10007BE90(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
  {
    IOHIDEventSystemClientUnscheduleFromDispatchQueue(v2, *(_QWORD *)(a1 + 32));
    CFRelease(*(CFTypeRef *)(a1 + 40));
  }
}

id sub_10007BF38(uint64_t a1)
{
  id result;
  id v3;
  void *v4;
  _QWORD v5[2];
  _QWORD v6[2];

  result = objc_msgSend(*(id *)(a1 + 32), "HIDEventSystemClient");
  if (!result)
  {
    result = (id)IOHIDEventSystemClientCreate(kCFAllocatorDefault);
    if (result)
    {
      v3 = result;
      v5[0] = CFSTR("DeviceUsagePage");
      v5[1] = CFSTR("DeviceUsage");
      v6[0] = &off_1002968B0;
      v6[1] = &off_1002968C8;
      IOHIDEventSystemClientSetMatching(result, +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v6, v5, 2));
      IOHIDEventSystemClientRegisterEventBlock(v3, &stru_100286728, *(_QWORD *)(a1 + 32), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dispatchQueue"));
      IOHIDEventSystemClientScheduleWithDispatchQueue(v3, v4);

      return objc_msgSend(*(id *)(a1 + 32), "setHIDEventSystemClient:", v3);
    }
  }
  return result;
}

void sub_10007C044(id a1, void *a2, void *a3, void *a4, __IOHIDEvent *a5)
{
  uint64_t v7;
  BOOL v8;
  void *v9;
  void *v10;

  if (a2)
  {
    v7 = objc_opt_class(PHHIDEventMonitor, a2);
    if ((objc_opt_isKindOfClass(a2, v7) & 1) != 0)
    {
      v10 = a2;
      v8 = IOHIDEventGetType(a5) == 3;
      v9 = v10;
      if (v8)
      {
        objc_msgSend(v10, "handleKeyboardEvent:", a5);
        v9 = v10;
      }
    }
    else
    {
      v9 = 0;
    }
  }
  else
  {
    v9 = 0;
  }

}

id sub_10007C134(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setHIDEventSystemClient:", 0);
}

id sub_10007CB28(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  int v17;
  id v18;
  __int16 v19;
  id v20;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "handle"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "value"));

  if (objc_msgSend(v8, "length"))
  {
    v9 = *(void **)(a1 + 32);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "UUID"));
    LODWORD(v9) = objc_msgSend(v9, "isEmergencyNumberForDigits:senderIdentityUUID:", v8, v10);

    if ((_DWORD)v9)
      objc_msgSend(v5, "setDialType:", 1);
  }
  if (objc_msgSend(v5, "dialType") == (id)1
    && objc_msgSend(*(id *)(a1 + 40), "canMakeEmergencyCallForSenderIdentity:", v6))
  {
    v11 = v6;
    v12 = sub_1000C5588();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v17 = 138412546;
      v18 = v5;
      v19 = 2112;
      v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Updating emergency dial request %@ to use sender identity %@", (uint8_t *)&v17, 0x16u);
    }

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "UUID"));
    objc_msgSend(v5, "setLocalSenderIdentityUUID:", v14);

    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "accountUUID"));
    objc_msgSend(v5, "setLocalSenderIdentityAccountUUID:", v15);

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

void sub_10007CE08(id a1)
{
  unint64_t v1;
  double v2;

  v1 = +[PHUIConfiguration inCallFaceTimeOverlayUISize](PHUIConfiguration, "inCallFaceTimeOverlayUISize");
  v2 = 14.0;
  if (v1 == 3)
    v2 = 20.0;
  qword_1002DCA70 = *(_QWORD *)&v2;
}

void sub_10007CE7C(id a1)
{
  unint64_t v1;
  double v2;

  v1 = +[PHUIConfiguration inCallFaceTimeOverlayUISize](PHUIConfiguration, "inCallFaceTimeOverlayUISize");
  v2 = 18.0;
  if (v1 == 3)
    v2 = 24.0;
  qword_1002DCA80 = *(_QWORD *)&v2;
}

void sub_10007D8D8(uint64_t a1)
{
  id v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationController"));
  v1 = objc_msgSend(v2, "popToRootViewControllerAnimated:", 1);

}

void sub_10007FC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007FC6C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10007FC7C(uint64_t a1)
{

}

void sub_10007FC84(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "frontmostCall"));

  if (v3)
  {
    v4 = sub_1000C5588();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v7 = 138412290;
      v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Setting image: %@ on button", (uint8_t *)&v7, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 32), "setControlImage:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  }
}

void sub_10007FD74(uint64_t a1, void *a2)
{
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  v4 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10007FE1C;
  v5[3] = &unk_1002867E8;
  v6 = *(id *)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

}

uint64_t sub_10007FE1C(uint64_t a1)
{
  uint64_t result;

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  dispatch_block_cancel(*(dispatch_block_t *)(a1 + 32));
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1000806EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100080704(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  id v10;

  v3 = a2;
  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 138412290;
    v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Setting image: %@ on button", (uint8_t *)&v9, 0xCu);
  }

  objc_msgSend(*(id *)(a1 + 32), "setControlImage:", v3);
  v6 = *(void **)(a1 + 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "delegate"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "titleForControlType:", *(_QWORD *)(a1 + 48)));
  objc_msgSend(v6, "setTitle:forState:", v8, 0);

  objc_msgSend(*(id *)(a1 + 32), "setControlType:", *(_QWORD *)(a1 + 48));
}

uint64_t sub_100080810(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
}

void sub_100080828(uint64_t a1, void *a2)
{
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  v4 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000808D0;
  v5[3] = &unk_1002867E8;
  v6 = *(id *)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

}

uint64_t sub_1000808D0(uint64_t a1)
{
  uint64_t result;

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  dispatch_block_cancel(*(dispatch_block_t *)(a1 + 32));
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_100082050(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", *(double *)(a1 + 40));
}

void sub_10008225C(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLabel"));
  objc_msgSend(v2, "setText:", v1);

}

void sub_100082298(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "_updateBadgeViewForLocalizedSenderIdentityTitle:", *(_QWORD *)(a1 + 40));
  v2 = *(_QWORD *)(a1 + 48);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subtitleLabel"));
  objc_msgSend(v3, "setText:", v2);

  v4 = *(_QWORD *)(a1 + 56);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subtitleLabel"));
  objc_msgSend(v5, "setColor:", v4);

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subtitleLabel"));
  objc_msgSend(v6, "sizeToFit");

}

void sub_1000825E4(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLabel"));
  objc_msgSend(v2, "setText:", v1);

}

void sub_100082620(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "_updateBadgeViewForLocalizedSenderIdentityTitle:", *(_QWORD *)(a1 + 40));
  v2 = *(_QWORD *)(a1 + 48);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subtitleLabel"));
  objc_msgSend(v3, "setText:", v2);

  v4 = *(_QWORD *)(a1 + 56);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subtitleLabel"));
  objc_msgSend(v5, "setColor:", v4);

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subtitleLabel"));
  objc_msgSend(v6, "sizeToFit");

}

uint64_t sub_100082F00(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v5 = a2;
  v6 = a3;
  v8 = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32), v7), "priorityForRoute:", v5);
  v10 = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32), v9), "priorityForRoute:", v6);
  if (v8 == v10)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "name"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "name"));
    v13 = (uint64_t)objc_msgSend(v11, "localizedCompare:", v12);

  }
  else if (v8 < v10)
  {
    v13 = -1;
  }
  else
  {
    v13 = 1;
  }

  return v13;
}

void sub_1000832E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 32);
  if (a2)
  {
    (*(void (**)(_QWORD))(v2 + 16))(*(_QWORD *)(a1 + 32));
  }
  else
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(+[TURoute speakerAudioRouteGlyph](TURoute, "speakerAudioRouteGlyph"));
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);

  }
}

void sub_100083438(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_100083454(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  PHDeclineWithReminderController *v4;
  uint64_t v5;
  id v6;
  PHDeclineWithReminderController *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  objc_msgSend(*(id *)(a1 + 32), "suppressRingtone");
  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v4 = [PHDeclineWithReminderController alloc];
    v5 = *(_QWORD *)(a1 + 32);
    v6 = objc_loadWeakRetained(v2);
    v7 = -[PHDeclineWithReminderController initWithCall:presenter:](v4, "initWithCall:presenter:", v5, v6);

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("REMIND_ME_LATER"), &stru_10028DC20, CFSTR("InCallService")));
    v10 = (void *)objc_claimAutoreleasedReturnValue(-[PHDeclineWithReminderController menuActions](v7, "menuActions"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithTitle:children:](UIMenu, "menuWithTitle:children:", v9, v10));

  }
  else
  {
    v12 = sub_1000C5588();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_1001A9D80(v13, v14, v15, v16, v17, v18, v19, v20);

    v11 = 0;
  }
  return v11;
}

id sub_100083BE8(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];

  v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100083C44;
  v3[3] = &unk_100284898;
  v3[4] = v1;
  return objc_msgSend(v1, "performLocationReminderAction:ifAuthorizedForStatus:", v3, *(unsigned int *)(a1 + 40));
}

id sub_100083C44(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "createReminderForWhenILeave");
  return objc_msgSend(*(id *)(a1 + 32), "declineCall");
}

void sub_100083C6C(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;
  id v7;
  uint64_t v8;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100083CE8;
  v5[3] = &unk_100285900;
  v2 = *(void **)(a1 + 40);
  v6 = *(id *)(a1 + 32);
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 48);
  v7 = v3;
  v8 = v4;
  objc_msgSend(v6, "performLocationReminderAction:ifAuthorizedForStatus:", v5, *(unsigned int *)(a1 + 56));

}

id sub_100083CE8(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectAtIndex:", *(_QWORD *)(a1 + 48)));
  objc_msgSend(v2, "createReminderForLocation:", v3);

  return objc_msgSend(*(id *)(a1 + 32), "declineCall");
}

id sub_100083D34(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "createReminderWithDurationInMinutes:", 60);
  return objc_msgSend(*(id *)(a1 + 32), "declineCall");
}

uint64_t sub_100083E34(uint64_t result, uint64_t a2, int a3)
{
  if ((a3 - 3) <= 1)
    return (*(uint64_t (**)(void))(*(_QWORD *)(result + 32) + 16))();
  return result;
}

void sub_1000849C4(id a1)
{
  id v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_1000C5588();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_1001A9E18(v2, v3, v4, v5, v6, v7, v8, v9);

}

void sub_100084A04(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v9[4];
  id v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a3;
  v5 = objc_alloc_init((Class)CLGeocoder);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100084AA8;
  v9[3] = &unk_1002869C0;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v10 = v4;
  v11 = v6;
  v12 = v7;
  v8 = v4;
  objc_msgSend(v5, "reverseGeocodeLocation:completionHandler:", v8, v9);

}

void sub_100084AA8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unsigned int v19;
  void *v20;
  void *v21;
  unsigned int v22;
  void *v23;
  void *v24;
  void *v25;
  unsigned int v26;
  void *v27;
  void *v28;
  id v29;
  NSObject *v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  NSObject *v37;
  uint64_t v38;
  unsigned __int8 v39;
  id v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  NSObject *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  uint8_t buf[4];
  uint64_t v59;

  v5 = a2;
  v6 = a3;
  v56 = v5;
  if (v6 || !objc_msgSend(v5, "count", v5))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle", v56));
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("SOMEWHERE"), &stru_10028DC20, CFSTR("InCallService")));
LABEL_3:
    v9 = (void *)v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[EKStructuredLocation locationWithTitle:](EKStructuredLocation, "locationWithTitle:", v8));

    goto LABEL_4;
  }
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "postalAddress"));

  if (v7)
  {
    v8 = objc_claimAutoreleasedReturnValue(+[CNPostalAddressFormatter stringFromPostalAddress:style:](CNPostalAddressFormatter, "stringFromPostalAddress:style:", v7, 0));
    goto LABEL_3;
  }
  v10 = 0;
LABEL_4:

  objc_msgSend(v10, "setGeoLocation:", *(_QWORD *)(a1 + 32));
  v11 = objc_alloc_init((Class)EKEventStore);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[EKReminder reminderWithEventStore:](EKReminder, "reminderWithEventStore:", v11));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "reminderText"));
  objc_msgSend(v12, "setTitle:", v13);

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "defaultCalendarForNewReminders"));
  objc_msgSend(v12, "setCalendar:", v14);

  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "calendar"));
  if (!v15)
    goto LABEL_24;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "calendar"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "source"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "constraints"));
  v19 = objc_msgSend(v18, "supportsReminderLocations");

  if (!v19)
  {
    v29 = sub_1000C5588();
    v30 = objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "[WARN] Reminder failed because calendar doesn't support location-based reminders", buf, 2u);
    }

    v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "localizedStringForKey:value:table:", CFSTR("REMINDER_FAILED_NO_LOCATION_BASED_REMINDERS"), &stru_10028DC20, CFSTR("InCallService")));

    if (v32)
    {
      v33 = v32;
      v34 = v33;
LABEL_25:
      v49 = *(void **)(a1 + 40);
      v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v50, "localizedStringForKey:value:table:", CFSTR("ERROR"), &stru_10028DC20, CFSTR("InCallService")));
      objc_msgSend(v49, "presentAlertWithTitle:message:", v51, v33);

      goto LABEL_26;
    }
LABEL_24:
    v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v33 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "localizedStringForKey:value:table:", CFSTR("REMINDER_FAILED_TRY_LATER"), &stru_10028DC20, CFSTR("InCallService")));

    v34 = 0;
    goto LABEL_25;
  }
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "call"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "provider"));
  v22 = objc_msgSend(v21, "isSystemProvider");

  if (v22)
  {
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "calendar"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "source"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "constraints"));
    v26 = objc_msgSend(v25, "supportsReminderActions");

    if (!v26)
      goto LABEL_18;
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "reminderAction"));
    objc_msgSend(v12, "setAction:", v27);
  }
  else
  {
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "reminderActivity"));
    objc_msgSend(v12, "setAppLink:", v27);
  }

LABEL_18:
  v34 = (void *)objc_claimAutoreleasedReturnValue(+[EKAlarm alarmWithRelativeOffset:](EKAlarm, "alarmWithRelativeOffset:", 0.0));
  objc_msgSend(v34, "setProximity:", 2);
  objc_msgSend(v34, "setStructuredLocation:", v10);
  objc_msgSend(v12, "setStructuredLocation:", v10);
  v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObject:](NSArray, "arrayWithObject:", v34));
  objc_msgSend(v12, "setAlarms:", v35);

  v36 = sub_1000C5588();
  v37 = objc_claimAutoreleasedReturnValue(v36);
  if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
  {
    v38 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v59 = v38;
    _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "About to save a reminder for CLLocation %@", buf, 0xCu);
  }

  v57 = 0;
  v39 = objc_msgSend(v11, "saveReminder:commit:error:", v12, 1, &v57);
  v33 = v57;
  if ((v39 & 1) == 0)
  {
    v40 = sub_1000C5588();
    v41 = objc_claimAutoreleasedReturnValue(v40);
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
      sub_1001A9DB4((uint64_t)v33, v41, v42, v43, v44, v45, v46, v47);

    goto LABEL_24;
  }
LABEL_26:

  v52 = sub_1000C5588();
  v53 = objc_claimAutoreleasedReturnValue(v52);
  if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
  {
    v54 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 134217984;
    v59 = v54;
    _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "PHDeclineWithReminderController.createReminderForWhenILeave endBackgroundTask %lu", buf, 0xCu);
  }

  v55 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  objc_msgSend(v55, "endBackgroundTask:", *(_QWORD *)(a1 + 48));

}

void sub_1000856A0(id a1)
{
  PHDevice *v1;
  void *v2;

  v1 = objc_alloc_init(PHDevice);
  v2 = (void *)qword_1002DCA90;
  qword_1002DCA90 = (uint64_t)v1;

}

void sub_100085708(id a1)
{
  const __CFBoolean *v1;
  const __CFBoolean *v2;
  id v3;
  NSObject *v4;
  id v5;
  NSObject *v6;
  int v7;

  v7 = 0;
  v1 = (const __CFBoolean *)MGCopyAnswerWithError(CFSTR("jkr5aFPOh/d6zTzNKYthBw"), 0, &v7);
  if (v1)
  {
    v2 = v1;
    if (v7)
    {
      v3 = sub_1000C5588();
      v4 = objc_claimAutoreleasedReturnValue(v3);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        sub_1001A9E8C(&v7, v4);

    }
    else
    {
      byte_1002DCAA0 = CFBooleanGetValue(v1) != 0;
    }
    CFRelease(v2);
  }
  else
  {
    v5 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1001A9E4C(v6);

  }
}

id sub_1000858A0(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id result;

  v2 = objc_alloc((Class)RadiosPreferences);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dispatchQueue"));
  v4 = objc_msgSend(v2, "initWithQueue:", v3);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(void **)(v5 + 24);
  *(_QWORD *)(v5 + 24) = v4;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "setDelegate:");
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) = objc_msgSend(*(id *)(a1 + 32), "fetchCellularRadioEnabled");
  result = objc_msgSend(*(id *)(a1 + 32), "fetchRingerSwitchEnabled");
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 9) = (_BYTE)result;
  return result;
}

void sub_100085A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100085A50(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_BYTE *)(*(_QWORD *)(result + 32) + 8);
  return result;
}

void sub_100085AE0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  _QWORD block[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(unsigned __int8 *)(a1 + 40);
  if (*(unsigned __int8 *)(v1 + 8) != v2)
  {
    *(_BYTE *)(v1 + 8) = v2;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100085B54;
    block[3] = &unk_100284898;
    block[4] = *(_QWORD *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100085B54(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", CFSTR("PHDeviceCellularRadioEnabledDidChangeNotification"), *(_QWORD *)(a1 + 32));

}

void sub_100085C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100085C5C(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_BYTE *)(*(_QWORD *)(result + 32) + 9);
  return result;
}

void sub_100085CEC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  _QWORD block[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(unsigned __int8 *)(a1 + 40);
  if (*(unsigned __int8 *)(v1 + 9) != v2)
  {
    *(_BYTE *)(v1 + 9) = v2;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100085D60;
    block[3] = &unk_100284898;
    block[4] = *(_QWORD *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100085D60(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", CFSTR("PHDeviceRingerSwitchDidChangeNotification"), *(_QWORD *)(a1 + 32));

}

void sub_100085E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100085E9C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100085EAC(uint64_t a1)
{

}

void sub_100085EB4(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 24));
}

void sub_100085FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10008600C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setRingerSwitchEnabled:", objc_msgSend(WeakRetained, "fetchRingerSwitchEnabled"));

}

id sub_1000869F0(uint64_t a1)
{
  objc_msgSend(UIApp, "startedSubTest:forTest:", CFSTR("end-call"), CFSTR("EndActiveCall"));
  objc_msgSend(UIApp, "startedSubTest:forTest:", CFSTR("pre-transition-delay"), CFSTR("EndActiveCall"));
  return objc_msgSend(*(id *)(a1 + 32), "bottomBarActionPerformed:withCompletionState:fromBar:", 14, 1, *(_QWORD *)(a1 + 40));
}

id sub_100086C14(uint64_t a1)
{
  objc_msgSend(UIApp, "startedSubTest:forTest:", CFSTR("end-to-end"), CFSTR("AnswerIncomingCall"));
  objc_msgSend(UIApp, "startedSubTest:forTest:", CFSTR("pre-animation-delay"), CFSTR("AnswerIncomingCall"));
  return objc_msgSend(*(id *)(a1 + 32), "bottomBarActionPerformed:withCompletionState:fromBar:", 1, 1, *(_QWORD *)(a1 + 40));
}

BOOL sub_100086C7C()
{
  unint64_t v0;
  id v1;
  NSObject *v2;
  const __CFString *v3;
  int v5;
  const __CFString *v6;
  __int16 v7;
  uint64_t v8;

  v0 = sub_100086D5C();
  v1 = sub_1000C5588();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    if (v0 >= 3)
      v3 = CFSTR("NO");
    else
      v3 = CFSTR("YES");
    v5 = 138412546;
    v6 = v3;
    v7 = 2048;
    v8 = sub_100086D5C();
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Showing wifi calling alert: %@, shown count is %ld", (uint8_t *)&v5, 0x16u);
  }

  return v0 < 3;
}

uint64_t sub_100086D5C()
{
  id v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_10000D538(CFSTR("WifiCallingCallFailureAlertShowCount"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(v0);
  if (v2)
  {
    objc_opt_class(NSNumber, v1);
    if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0)
      v4 = (uint64_t)objc_msgSend(v2, "unsignedIntegerValue");
    else
      v4 = 3;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_100086DCC()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  int v4;
  void *v5;

  v0 = sub_100086D5C();
  if (v0 != -1)
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v0 + 1));
    sub_10000D5F0(CFSTR("WifiCallingCallFailureAlertShowCount"), v1);
    v2 = sub_1000C5588();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4 = 138412290;
      v5 = v1;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Incrementing wifi calling alert show count to %@", (uint8_t *)&v4, 0xCu);
    }

  }
}

BOOL sub_100086EA4(void *a1, int a2)
{
  id v3;
  void *v4;
  char *v5;
  uint64_t v6;
  _BOOL8 v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  unsigned int v12;
  char *v13;
  unsigned int v14;

  v3 = a1;
  v4 = v3;
  if (a2 != 35)
    goto LABEL_21;
  v5 = (char *)objc_msgSend(v3, "rangeOfString:options:", CFSTR("**0"), 8);
  if (v5 == (char *)0x7FFFFFFFFFFFFFFFLL)
  {
    if ((objc_msgSend(v4, "isEqualToString:", CFSTR("*#06#")) & 1) != 0)
    {
      v7 = 1;
      goto LABEL_22;
    }
LABEL_21:
    v7 = 0;
    goto LABEL_22;
  }
  v8 = &v5[v6];
  v9 = (char *)objc_msgSend(v4, "length");
  v10 = v8 + 1;
  if ((uint64_t)v9 <= (uint64_t)(v8 + 1))
    goto LABEL_21;
  v11 = v9;
  if ((objc_msgSend(v4, "characterAtIndex:", v8) & 0xFFFE) != 0x34)
    goto LABEL_21;
  v12 = objc_msgSend(v4, "characterAtIndex:", v8 + 1);
  if (v12 == 50)
  {
    v10 = v8 + 2;
    if ((uint64_t)v11 <= (uint64_t)(v8 + 2))
      goto LABEL_21;
    v12 = objc_msgSend(v4, "characterAtIndex:", v8 + 2);
  }
  if (v12 != 42)
    goto LABEL_21;
  v13 = v11 - 2;
  if ((uint64_t)v10 >= (uint64_t)(v11 - 2))
    goto LABEL_21;
  do
  {
    v14 = objc_msgSend(v4, "characterAtIndex:", v10);
    v7 = v14 == 42 || v14 - 48 < 0xA;
    if (v13 == v10)
      break;
    ++v10;
  }
  while (v7);
LABEL_22:

  return v7;
}

uint64_t sub_100086FC4(void *a1)
{
  id v1;
  void *v2;
  unsigned int v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "provider"));
  v3 = objc_msgSend(v2, "isTelephonyProvider");

  if (v3)
  {
    v4 = objc_msgSend(v1, "dialType");
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "localSenderIdentityUUID"));
    v6 = sub_100087070((uint64_t)v4, v5);

  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "provider"));
    v8 = objc_msgSend(v7, "isSuperboxProvider");

    if ((v8 & 1) != 0)
      v6 = 1;
    else
      v6 = sub_100087228();
  }

  return v6;
}

uint64_t sub_100087070(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  unsigned int v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  uint64_t v11;
  unsigned __int8 v12;
  id v13;
  NSObject *v14;
  const __CFString *v15;
  const __CFString *v16;
  int v18;
  const __CFString *v19;
  __int16 v20;
  const __CFString *v21;

  v3 = a2;
  v4 = objc_msgSend((id)CUTWeakLinkClass(CFSTR("FTNetworkSupport"), CFSTR("FTServices")), "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = objc_alloc_init((Class)RadiosPreferences);
  v7 = objc_msgSend(v6, "airplaneMode");

  if (!v7)
  {
    v11 = 1;
    goto LABEL_21;
  }
  if (v3)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCapabilities senderIdentityCapabilitiesWithUUID:](TUCallCapabilities, "senderIdentityCapabilitiesWithUUID:", v3));
    v9 = v8;
    if (a1 == 1)
      v10 = objc_msgSend(v8, "canAttemptEmergencyCallsWithoutCellularConnection");
    else
      v10 = objc_msgSend(v8, "canAttemptTelephonyCallsWithoutCellularConnection");
    v12 = v10;

    if ((v12 & 1) != 0)
    {
LABEL_11:
      v11 = 1;
      if ((objc_msgSend(v5, "networkReachable") & 1) != 0)
        goto LABEL_21;
      goto LABEL_12;
    }
  }
  else if (a1 == 1)
  {
    if ((+[TUCallCapabilities canAttemptEmergencyCallsWithoutCellularConnection](TUCallCapabilities, "canAttemptEmergencyCallsWithoutCellularConnection") & 1) != 0)goto LABEL_11;
  }
  else if (+[TUCallCapabilities canAttemptTelephonyCallsWithoutCellularConnection](TUCallCapabilities, "canAttemptTelephonyCallsWithoutCellularConnection"))
  {
    goto LABEL_11;
  }
  LODWORD(v11) = 0;
LABEL_12:
  v13 = sub_1000C5588();
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    if ((_DWORD)v11)
      v15 = CFSTR("NO");
    else
      v15 = CFSTR("YES");
    if (objc_msgSend(v5, "networkReachable"))
      v16 = CFSTR("NO");
    else
      v16 = CFSTR("YES");
    v18 = 138412546;
    v19 = v15;
    v20 = 2112;
    v21 = v16;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "[WARN] Aborting telephony call, the device is in airplane mode and, cannot make telephony calls while in airplane mode (%@) or is not connected to an active Wi-Fi network (%@).", (uint8_t *)&v18, 0x16u);
  }

  v11 = 0;
LABEL_21:

  return v11;
}

uint64_t sub_100087228()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unsigned int v9;
  id v10;
  NSObject *v11;
  id v12;
  uint8_t v14[16];
  uint8_t buf[16];

  v0 = objc_msgSend((id)CUTWeakLinkClass(CFSTR("FTNetworkSupport"), CFSTR("FTServices")), "sharedInstance");
  v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  v2 = objc_msgSend((id)CUTWeakLinkClass(CFSTR("FTDeviceSupport"), CFSTR("FTServices")), "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "frontmostCall"));
  if ((objc_msgSend(v1, "validNetworkReachable") & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    if (objc_msgSend(v4, "hasCurrentAudioCalls")
      && (objc_msgSend(v5, "supportsSimultaneousVoiceAndData") & 1) == 0
      && (v7 = TUPreferredFaceTimeBundleIdentifier(),
          v8 = (void *)objc_claimAutoreleasedReturnValue(v7),
          v9 = objc_msgSend(v3, "wifiAllowedForBundleId:", v8),
          v8,
          v9))
    {
      v10 = sub_1000C5588();
      v11 = objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Attempting FaceTime call because a telephone call is in progress and the carrier does not support simultaneous voice and data.", buf, 2u);
      }
      v6 = 1;
    }
    else
    {
      v12 = sub_1000C5588();
      v11 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[WARN] Aborting FaceTime call because the network is unavailable.", v14, 2u);
      }
      v6 = 0;
    }

  }
  return v6;
}

id sub_1000873AC()
{
  id v0;
  id v1;

  v0 = objc_alloc_init((Class)RadiosPreferences);
  v1 = objc_msgSend(v0, "airplaneMode");

  return v1;
}

BOOL sub_1000873E4()
{
  uint64_t state64;

  if (!byte_1002DCAB4)
    byte_1002DCAB4 = notify_register_check("com.apple.InCallService.emergencydialerpresence", &dword_1002DCAB0) == 0;
  state64 = 0;
  if ((*(_QWORD *)&dword_1002DCAB0 & 0x100000000) == 0)
    return 0;
  notify_get_state(dword_1002DCAB0, &state64);
  return state64 != 0;
}

uint64_t sub_10008745C(uint64_t state64)
{
  unsigned int v1;
  uint64_t result;

  v1 = state64;
  if (!byte_1002DCAB4)
    byte_1002DCAB4 = notify_register_check("com.apple.InCallService.emergencydialerpresence", &dword_1002DCAB0) == 0;
  result = *(_QWORD *)&dword_1002DCAB0;
  if ((*(_QWORD *)&dword_1002DCAB0 & 0x100000000) != 0)
  {
    notify_set_state(dword_1002DCAB0, v1);
    return notify_post("com.apple.InCallService.emergencydialerpresence");
  }
  return result;
}

BOOL sub_1000874CC(void *a1)
{
  id v1;
  _BOOL8 v2;

  v1 = a1;
  v2 = 1;
  if (objc_msgSend(v1, "compare:options:", CFSTR("mav10"), 1))
  {
    v2 = 1;
    if (objc_msgSend(v1, "compare:options:", CFSTR("mav13"), 1))
    {
      v2 = 1;
      if (objc_msgSend(v1, "compare:options:", CFSTR("mav16"), 1))
        v2 = objc_msgSend(v1, "compare:options:", CFSTR("mav17"), 1) == 0;
    }
  }

  return v2;
}

BOOL sub_100087564(void *a1)
{
  id v1;
  uint64_t v2;
  _BOOL8 v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  const __CFString *v7;
  id v8;
  NSObject *v9;
  void *v10;
  id v11;
  int v13;
  id v14;
  __int16 v15;
  const __CFString *v16;

  v1 = a1;
  if (objc_msgSend(v1, "isEqualToString:", CFSTR("*3001#12345#*")))
  {
    v2 = CUTWeakLinkClass(CFSTR("FBSSystemService"), CFSTR("FrontBoardServices"));
    v3 = v2 != 0;
    if (v2)
    {
      v4 = (void *)v2;
      v5 = MGGetStringAnswer(CFSTR("BasebandChipset"));
      v6 = objc_claimAutoreleasedReturnValue(v5);
      v7 = CFSTR("com.apple.FTMInternal");
      if ((-[NSObject hasPrefix:](v6, "hasPrefix:", CFSTR("ice")) & 1) == 0 && sub_1000874CC(v6))
        v7 = CFSTR("com.apple.fieldtest");
      v8 = sub_1000C5588();
      v9 = objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v13 = 138412546;
        v14 = v1;
        v15 = 2112;
        v16 = v7;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@ matches the field test code, launching the legacy field test app %@", (uint8_t *)&v13, 0x16u);
      }

      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "sharedService"));
      objc_msgSend(v10, "openApplication:options:withResult:", v7, &__NSDictionary0__struct, 0);

    }
    else
    {
      v11 = sub_1000C5588();
      v6 = objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        sub_1001A9F04(v6);
    }

  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void sub_100087F50(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1002DCAB8;
  qword_1002DCAB8 = (uint64_t)v1;

}

void sub_100088068(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  _QWORD v16[4];

  +[TUCallCapabilities initializeCachedValues](TUCallCapabilities, "initializeCachedValues");
  v2 = objc_alloc_init((Class)VMVoicemailManager);
  objc_msgSend(*(id *)(a1 + 32), "setAccountManager:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[PHVisualVoicemailManagerFactory getVisualVoiceMailWithVisualVoicemailManager:onVoicemailsChanged:](PHVisualVoicemailManagerFactory, "getVisualVoiceMailWithVisualVoicemailManager:onVoicemailsChanged:", v2, &stru_100286AA8));
  objc_msgSend(*(id *)(a1 + 32), "setVoicemailManager:", v3);

  v4 = objc_alloc_init((Class)TUCallProviderManager);
  objc_msgSend(*(id *)(a1 + 32), "setCallProviderManager:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[CNContactStore contactStore](CNContactStore, "contactStore"));
  objc_msgSend(*(id *)(a1 + 32), "setContactStore:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[CNContactStore suggestedContactStore](CNContactStore, "suggestedContactStore"));
  objc_msgSend(*(id *)(a1 + 32), "setSuggestedContactStore:", v6);

  v7 = objc_alloc_init((Class)TUCallDirectoryMetadataCacheDataProvider);
  v16[0] = v7;
  v8 = objc_alloc_init((Class)TUMapsMetadataCacheDataProvider);
  v16[1] = v8;
  v9 = objc_alloc_init((Class)TUSuggestionsMetadataCacheDataProvider);
  v16[2] = v9;
  v10 = objc_alloc_init((Class)TUGeoLocationMetadataCacheDataProvider);
  v16[3] = v10;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v16, 4));

  v12 = objc_msgSend(objc_alloc((Class)TUMetadataCache), "initWithDataProviders:", v11);
  objc_msgSend(*(id *)(a1 + 32), "setMetadataCache:", v12);

  if (+[PHDevice isGeminiCapable](PHDevice, "isGeminiCapable"))
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "telephonyProvider"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "identifier"));
    v15 = objc_msgSend(v4, "providerWithIdentifier:", v14);

  }
  objc_msgSend(*(id *)(a1 + 32), "setInitializationBlockQueued:", 0);

}

void sub_10008828C(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSOperationQueue mainQueue](NSOperationQueue, "mainQueue"));
  objc_msgSend(v1, "addOperationWithBlock:", &stru_100286AC8);

}

void sub_1000882C8(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("PHVoicemailManagerVoicemailsChanged"), 0);

}

void sub_1000884BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000884D4(uint64_t a1)
{
  id v2;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  return v2;
}

uint64_t sub_10008851C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10008852C(uint64_t a1)
{

}

void sub_100088534(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_100088814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10008882C(uint64_t a1)
{
  id v2;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 24);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  return v2;
}

void sub_100088874(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_100088A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100088A74(uint64_t a1)
{
  id v2;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 40);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  return v2;
}

void sub_100088ABC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_100088C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100088CB0(uint64_t a1)
{
  id v2;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 32);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  return v2;
}

void sub_100088CF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_100088ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100088EEC(uint64_t a1)
{
  id v2;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 64);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  return v2;
}

void sub_100088F34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_1000890A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000890BC(uint64_t a1)
{
  id v2;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 56);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 12));
  return v2;
}

void sub_100089104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_1000897E4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v12 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "contactIdentifier"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", v5));

  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "contact"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "handle"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[PHSearchUtilities matchedPhoneNumberFor:searchText:](PHSearchUtilities, "matchedPhoneNumberFor:searchText:", v7, v8));
    objc_msgSend(v6, "setPreferredPhoneNumber:", v9);

    objc_msgSend(*(id *)(a1 + 40), "addObject:", v6);
    v10 = *(void **)(a1 + 32);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "contactIdentifier"));
    objc_msgSend(v10, "removeObjectForKey:", v11);

  }
}

void sub_10008A36C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  NSObject *v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  uint8_t buf[8];
  _QWORD v38[5];
  _QWORD v39[5];

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 8))
  {
    v8 = sub_1000C5588();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "This geocode was canceled", buf, 2u);
    }

  }
  else
  {
    if (v6)
    {
      v10 = sub_1000C5588();
      v11 = objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1001A9F84((uint64_t)v7, v11, v12, v13, v14, v15, v16, v17);
    }
    else
    {
      if (objc_msgSend(v5, "count"))
      {
        v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndex:", 0));
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "region"));
        objc_msgSend(v18, "center");
        v20 = v19;
        v22 = v21;

        v34 = objc_msgSend(objc_alloc((Class)CLLocation), "initWithLatitude:longitude:", v20, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "region"));
        objc_msgSend(v23, "radius");
        v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));

        v38[0] = CFSTR("Address");
        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "postalAddress"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(+[CNPostalAddressFormatter stringFromPostalAddress:style:](CNPostalAddressFormatter, "stringFromPostalAddress:style:", v35, 0));
        v39[0] = v25;
        v38[1] = CFSTR("Name");
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "labeledValue"));
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "label"));
        v28 = (void *)objc_claimAutoreleasedReturnValue(+[CNLabeledValue localizedStringForLabel:](CNLabeledValue, "localizedStringForLabel:", v27));
        v39[1] = v28;
        v39[2] = v34;
        v38[2] = CFSTR("CLLocation");
        v38[3] = CFSTR("EntityID");
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "entityID"));
        v38[4] = CFSTR("Radius");
        v39[3] = v29;
        v39[4] = v24;
        v30 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v39, v38, 5));
        v31 = *(_QWORD *)(a1 + 32);
        v32 = *(void **)(v31 + 56);
        *(_QWORD *)(v31 + 56) = v30;

        *(_DWORD *)(*(_QWORD *)(a1 + 32) + 16) = 2;
        ++*(_DWORD *)(*(_QWORD *)(a1 + 32) + 12);
        (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

        goto LABEL_10;
      }
      v33 = sub_1000C5588();
      v11 = objc_claimAutoreleasedReturnValue(v33);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_1001A9F44(v11);
    }

    *(_DWORD *)(*(_QWORD *)(a1 + 32) + 16) = 1;
    ++*(_DWORD *)(*(_QWORD *)(a1 + 32) + 12);
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
LABEL_10:

}

void sub_10008AF08(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  unsigned int v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD block[4];
  id v16;
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[_PHMeCardGeocoderPreferences sharedPreferences](_PHMeCardGeocoderPreferences, "sharedPreferences"));
    v4 = objc_msgSend(v3, "hasValidNetworkPreferences");

    v5 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v7)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "We have valid network preferences.  Rebuilding address array now.", buf, 2u);
      }

      v8 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 16);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10008B0D0;
      block[3] = &unk_100284898;
      v16 = WeakRetained;
      dispatch_async(v8, block);
      v9 = v16;
    }
    else
    {
      if (v7)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "We do not have valid network preferences.  Waiting until we have some or 2 minutes, whichever comes first.", buf, 2u);
      }

      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
      objc_msgSend(v10, "addObserver:selector:name:object:", WeakRetained, "_networkPreferencesLoaded", CFSTR("com.apple.MobilePhone.PHMeCardGeocoder.PreferencesChanged"), 0);

      v11 = objc_msgSend(objc_alloc((Class)PCPersistentTimer), "initWithTimeInterval:serviceIdentifier:target:selector:userInfo:", CFSTR("com.apple.MobilePHone.PHMeCardGeocoder"), WeakRetained, "_networkPreferencesLoaded", 0, 120.0);
      v12 = *(_QWORD *)(a1 + 32);
      v13 = *(void **)(v12 + 32);
      *(_QWORD *)(v12 + 32) = v11;

      v14 = *(void **)(*(_QWORD *)(a1 + 32) + 32);
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop mainRunLoop](NSRunLoop, "mainRunLoop"));
      objc_msgSend(v14, "scheduleInRunLoop:", v9);
    }

  }
}

id sub_10008B0D0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_rebuildAddressArray");
}

id sub_10008B130(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _DWORD v9[2];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[_PHMeCardGeocoderPreferences sharedPreferences](_PHMeCardGeocoderPreferences, "sharedPreferences"));
    v9[0] = 67109120;
    v9[1] = objc_msgSend(v4, "hasValidNetworkPreferences");
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Got network preferences loaded callback, has valid network preferences = %d", (uint8_t *)v9, 8u);

  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "invalidate");
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(void **)(v5 + 32);
  *(_QWORD *)(v5 + 32) = 0;

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v7, "removeObserver:name:object:", *(_QWORD *)(a1 + 32), CFSTR("com.apple.MobilePhone.PHMeCardGeocoder.PreferencesChanged"), 0);

  return objc_msgSend(*(id *)(a1 + 32), "_rebuildAddressArray");
}

void sub_10008B30C(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v8 = 0u;
  v9 = 0u;
  v6 = 0u;
  v7 = 0u;
  v1 = *(id *)(*(_QWORD *)(a1 + 32) + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "cancelGeocode", (_QWORD)v6);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

id sub_10008B630(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_doWork");
}

id sub_10008B6DC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_scheduleNextGeocode");
}

void sub_10008BA2C(uint64_t a1, char a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  const char *v9;
  uint64_t v10;
  NSObject *v11;
  _QWORD block[5];
  uint8_t buf[4];
  id v14;

  v5 = a3;
  v6 = sub_1000C5588();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if ((a2 & 1) != 0)
  {
    if (v8)
    {
      *(_DWORD *)buf = 138412290;
      v14 = v5;
      v9 = "Geocode complete, success!  Address: %@";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v9, buf, 0xCu);
    }
  }
  else if (v8)
  {
    *(_DWORD *)buf = 138412290;
    v14 = v5;
    v9 = "Geocode complete, unsuccessful.  Scheduling next geocode.  Address: %@";
    goto LABEL_6;
  }

  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(NSObject **)(v10 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008BB58;
  block[3] = &unk_100284898;
  block[4] = v10;
  dispatch_async(v11, block);
  objc_msgSend(*(id *)(a1 + 32), "scheduleNextGeocode");

}

id sub_10008BB58(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_saveGeoCache");
}

id sub_10008BF14(uint64_t a1)
{
  unsigned int v2;
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  uint8_t v7[16];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "_unschedulePerformGeocodesWakeTaskIfEarlierThan:", 0);
  v2 = objc_msgSend(*(id *)(a1 + 32), "_isNetworkAvailable");
  v3 = sub_1000C5588();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v5)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "xpc_activity callback: Network available, doing some work...", buf, 2u);
    }

    return objc_msgSend(*(id *)(a1 + 32), "_doWork");
  }
  else
  {
    if (v5)
    {
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "xpc_activity callback: No network available now, scheduling next wake...", v7, 2u);
    }

    return objc_msgSend(*(id *)(a1 + 32), "_scheduleNextGeocode");
  }
}

id sub_10008C624(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Time to rebuild everything from scratch!", v5, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "_unscheduleLongTermRebuild");
  return objc_msgSend(*(id *)(a1 + 32), "_rebuildAddressArray");
}

void sub_10008CFE4(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10008D0A0;
  v3[3] = &unk_100286CA0;
  v3[4] = &v4;
  objc_msgSend(v2, "enumerateObjectsUsingBlock:", v3);
  if (*((_BYTE *)v5 + 24))
  {
    objc_msgSend(*(id *)(a1 + 32), "_saveGeoCache");
    objc_msgSend(*(id *)(a1 + 32), "_scheduleNextGeocode");
  }
  _Block_object_dispose(&v4, 8);
}

void sub_10008D088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008D0A0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  double v5;
  double v6;
  void *v7;
  double v8;
  double v9;
  id v10;

  v10 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "geocodeAfter"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v3, "timeIntervalSinceDate:", v4);
  v6 = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[_PHMeCardGeocoderPreferences sharedPreferences](_PHMeCardGeocoderPreferences, "sharedPreferences"));
  objc_msgSend(v7, "activeUsagePeriodLength");
  v9 = v8;

  if (v6 > v9)
  {
    objc_msgSend(v10, "recalculateGeocodeAfterDate");
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
  }

}

id sub_10008D298(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_rebuildAddressArray");
}

void sub_10008D374(id a1)
{
  _PHMeCardGeocoderPreferences *v1;
  void *v2;

  v1 = objc_alloc_init(_PHMeCardGeocoderPreferences);
  v2 = (void *)qword_1002DCAD0;
  qword_1002DCAD0 = (uint64_t)v1;

}

void sub_10008E9A8(id a1)
{
  unint64_t v1;
  double v2;

  v1 = +[PHUIConfiguration screenSize](PHUIConfiguration, "screenSize");
  v2 = dbl_10023FE90[v1 == 1];
  if (v1 == 6)
    v2 = 43.2999992;
  qword_1002DCAD8 = *(_QWORD *)&v2;
}

void sub_10008EA30(id a1)
{
  unint64_t v1;
  BOOL v2;
  double v3;

  v1 = +[PHUIConfiguration screenSize](PHUIConfiguration, "screenSize");
  v2 = v1 == 6 || v1 == 9;
  v3 = 18.0;
  if (v2)
    v3 = 15.0;
  qword_1002DCAE8 = *(_QWORD *)&v3;
}

id sub_100090268(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setTrackWidthProportion:", *(double *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

id sub_10009029C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setTrackWidthProportion:", 1.0);
  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

id sub_1000902D0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAnimating:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setCachedTrackMaskWidth:", 0.0);
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
}

id sub_100090308(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showTrackLabel");
}

id sub_100090418(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setTrackWidthProportion:", 0.0);
  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

id sub_10009044C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAnimating:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setCachedTrackMaskWidth:", 0.0);
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
}

id sub_100091540(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v8;
  void *v9;
  CGRect v11;

  v8 = CGRectGetHeight(*(CGRect *)&a1) * 0.5;
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  if (CGRectGetWidth(v11) >= 115.0)
  {
    UIRectInset(a1, a2, a3, a4, -2.0, 0.0, -2.0, 0.0);
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIBezierPath _bezierPathWithPillRect:cornerRadius:](UIBezierPath, "_bezierPathWithPillRect:cornerRadius:"));
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIBezierPath bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:](UIBezierPath, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", -1, a1, a2, a3, a4, v8, v8));
  }
  return v9;
}

id sub_100091B60(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "setAlpha:", 0.0);
}

id sub_100091B78(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "setAlpha:", 1.0);
}

void sub_100091D14(uint64_t a1)
{
  double v2;
  id v3;

  if (*(_BYTE *)(a1 + 40))
    v2 = 1.0;
  else
    v2 = 0.0;
  objc_msgSend(*(id *)(a1 + 32), "setKnobPosition:", v2);
  objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  if ((objc_opt_respondsToSelector(v3, "actionSlider:didUpdateSlideWithValue:") & 1) != 0)
    objc_msgSend(v3, "actionSlider:didUpdateSlideWithValue:", *(_QWORD *)(a1 + 32), v2);

}

id sub_100091D9C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAnimating:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setCachedTrackMaskWidth:", 0.0);
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
}

id sub_100091DD4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showTrackLabel");
}

void sub_100093654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100093684(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100093694(uint64_t a1)
{

}

void sub_10009369C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  id v7;
  uint64_t v8;
  _QWORD block[5];
  id v10;
  uint64_t v11;

  v3 = a2;
  v4 = (void *)CUTWeakLinkClass(CFSTR("FMDFMIPManager"), CFSTR("FindMyDevice"));
  if (objc_msgSend(v3, "hasAnyData"))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "sharedInstance"));
    v6 = objc_msgSend(v5, "lostModeIsActive");

    if ((v6 & 1) == 0)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100093770;
      block[3] = &unk_100286D48;
      block[4] = *(_QWORD *)(a1 + 32);
      v7 = v3;
      v8 = *(_QWORD *)(a1 + 40);
      v10 = v7;
      v11 = v8;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    }
  }

}

void sub_100093770(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;

  if (_os_feature_enabled_impl("Health", "medicalid_v2"))
  {
    v2 = objc_alloc((Class)CUTWeakLinkClass(CFSTR("MIUIMedicalIDViewController"), CFSTR("MedicalIDUI")));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "healthStore"));
    v4 = *(_QWORD *)(a1 + 40);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[MIUIDisplayConfiguration lockScreenConfiguration](MIUIDisplayConfiguration, "lockScreenConfiguration"));
    v6 = objc_msgSend(v2, "initWithHealthStore:medicalIDData:displayConfiguration:", v3, v4, v5);
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(void **)(v7 + 80);
    *(_QWORD *)(v7 + 80) = v6;

  }
  else
  {
    v9 = objc_alloc_init((Class)CUTWeakLinkClass(CFSTR("HKMedicalIDViewController"), CFSTR("HealthUI")));
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "setDelegate:", *(_QWORD *)(a1 + 32));
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "setShowsDismissButton:", 1);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "setMedicalID:", *(_QWORD *)(a1 + 40));
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "setShowsShowWhenLockedState:", 0);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "setShowsEmergencyAccessState:", 0);
    v12 = *(_QWORD *)(a1 + 32);
    v13 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    v3 = *(void **)(v12 + 80);
    *(_QWORD *)(v12 + 80) = v13;
  }

  v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "medicalIDButton"));
  objc_msgSend(v14, "setHidden:", 0);

}

uint64_t sub_1000948CC()
{
  void *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = off_1002DCAF8;
  v7 = off_1002DCAF8;
  if (!off_1002DCAF8)
  {
    v1 = (void *)sub_100097D50();
    v0 = dlsym(v1, "MSNMonitorEndException");
    v5[3] = (uint64_t)v0;
    off_1002DCAF8 = v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)sub_1001A8660();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return ((uint64_t (*)(const char *))v0)("emergency");
}

void sub_1000953C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_1000953E4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dialerView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "callButton"));
  objc_msgSend(v3, "setAlpha:", 1.0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backButton"));
  objc_msgSend(v4, "setAlpha:", 1.0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "medicalIDButton"));
  objc_msgSend(v5, "setAlpha:", 1.0);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "endButton"));
  objc_msgSend(v6, "setAlpha:", 0.0);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stewieAlertButton"));
  objc_msgSend(v7, "setAlpha:", 0.0);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stewieEndCallButton"));
  objc_msgSend(v8, "setAlpha:", 0.0);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dialerView"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "deleteButton"));
  objc_msgSend(v10, "setAlpha:", 1.0);

  return objc_msgSend(*(id *)(a1 + 32), "refreshUseRTTButton");
}

id sub_1000954F0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "endButton"));
  objc_msgSend(v2, "setEnabled:", 1);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backButton"));
  objc_msgSend(v3, "setAlpha:", 0.0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "medicalIDButton"));
  objc_msgSend(v4, "setAlpha:", 0.0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dialerView"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "callButton"));
  objc_msgSend(v6, "setAlpha:", 0.0);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "endButton"));
  objc_msgSend(v7, "setAlpha:", 1.0);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stewieAlertButton"));
  objc_msgSend(v8, "setAlpha:", 0.0);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stewieEndCallButton"));
  objc_msgSend(v9, "setAlpha:", 0.0);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dialerView"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "deleteButton"));
  objc_msgSend(v11, "setAlpha:", 1.0);

  return objc_msgSend(*(id *)(a1 + 32), "refreshUseRTTButton");
}

id sub_100095618(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dialerView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "callButton"));
  objc_msgSend(v3, "setAlpha:", 1.0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backButton"));
  objc_msgSend(v4, "setAlpha:", 1.0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "medicalIDButton"));
  objc_msgSend(v5, "setAlpha:", 1.0);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "endButton"));
  objc_msgSend(v6, "setAlpha:", 0.0);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stewieAlertButton"));
  objc_msgSend(v7, "setAlpha:", 0.0);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stewieEndCallButton"));
  objc_msgSend(v8, "setAlpha:", 0.0);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dialerView"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "deleteButton"));
  objc_msgSend(v10, "setAlpha:", 1.0);

  return objc_msgSend(*(id *)(a1 + 32), "refreshUseRTTButton");
}

id sub_100095724(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dialerView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "callButton"));
  objc_msgSend(v3, "setAlpha:", 0.0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stewieAlertButton"));
  objc_msgSend(v4, "setAlpha:", 1.0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stewieEndCallButton"));
  objc_msgSend(v5, "setEnabled:", 1);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stewieEndCallButton"));
  objc_msgSend(v6, "setAlpha:", 1.0);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "medicalIDButton"));
  objc_msgSend(v7, "setAlpha:", 1.0);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "endButton"));
  objc_msgSend(v8, "setAlpha:", 0.0);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dialerView"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "deleteButton"));
  objc_msgSend(v10, "setAlpha:", 0.0);

  return objc_msgSend(*(id *)(a1 + 32), "refreshUseRTTButton");
}

id *sub_100096AEC(id *result, int a2)
{
  id *v2;
  id v3;
  NSObject *v4;
  __int16 v5[8];

  if (a2)
  {
    v2 = result;
    v3 = sub_1000C5588();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5[0] = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Initiating emergency call using a Wi-Fi network.", (uint8_t *)v5, 2u);
    }

    return (id *)objc_msgSend(v2[4], "dialEmergencyCallForDialRequest:", v2[5]);
  }
  return result;
}

void sub_100097194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_1000971B4(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;

  if ((unint64_t)(a2 - 1) < 2)
  {
    v3 = *(void **)(a1 + 32);
    v4 = 2;
  }
  else if (a2 == 3)
  {
    v3 = *(void **)(a1 + 32);
    v4 = 3;
  }
  else
  {
    if (a2)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
      return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
    }
    v3 = *(void **)(a1 + 32);
    v4 = 1;
  }
  objc_msgSend(v3, "setTtyType:", v4);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100097220(uint64_t a1, int a2)
{
  id v3;
  id v4;
  NSObject *v5;
  id v6;
  uint8_t buf[16];

  if (a2)
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
    v3 = objc_msgSend(v6, "dialWithRequest:", *(_QWORD *)(a1 + 32));

  }
  else
  {
    v4 = sub_1000C5588();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "dialEmergencyCall: Digits to dial are MMI/USSD, but user did not successfully unlock", buf, 2u);
    }

  }
}

uint64_t sub_100097D50()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1002DCB00)
  {
    v4 = off_100286DB8;
    v5 = 0;
    qword_1002DCB00 = _sl_dlopen(&v4, &v3);
  }
  v0 = qword_1002DCB00;
  v1 = v3;
  if (!qword_1002DCB00)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_100098D18(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("MPCarPlayPhoneCallContainer", 0);
  v2 = (void *)qword_1002DCB18;
  qword_1002DCB18 = (uint64_t)v1;

}

void sub_100098EB4(uint64_t a1)
{
  _QWORD v1[5];
  char v2;

  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_100098F18;
  v1[3] = &unk_100284C98;
  v1[4] = *(_QWORD *)(a1 + 32);
  v2 = *(_BYTE *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v1);
}

void sub_100098F18(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  _BYTE *v6;
  void *v7;
  _QWORD v8[5];
  char v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v3 = objc_msgSend(v2, "numberOfViewCellsForPhoneCallContainer:", *(_QWORD *)(a1 + 32));

  if (objc_msgSend(*(id *)(a1 + 32), "shouldReloadCellsWithNumberOfCells:", v3))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCells"));
    v5 = objc_msgSend(v4, "count");

    if (v3 != v5)
      objc_msgSend(*(id *)(a1 + 32), "updateNumberOfCellsWithNewValue:animated:", v3, *(unsigned __int8 *)(a1 + 40));
    v6 = *(_BYTE **)(a1 + 32);
    if (!v6[8])
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "visibleCells"));
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_100099010;
      v8[3] = &unk_100286DF8;
      v8[4] = *(_QWORD *)(a1 + 32);
      v9 = *(_BYTE *)(a1 + 40);
      objc_msgSend(v7, "enumerateObjectsUsingBlock:", v8);

    }
  }
}

id sub_100099010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateCell:atIndex:animated:", a2, a3, *(unsigned __int8 *)(a1 + 40));
}

void sub_1000990BC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  unsigned __int8 v18;
  id v19;
  NSObject *v20;
  void *v21;
  int v22;
  void *v23;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "phoneCallContainer:titleForViewCellAtIndex:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48)));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "phoneCallContainer:subtitleForViewCellAtIndex:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48)));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "phoneCallContainer:subtitleColorForViewCellAtIndex:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48)));

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "phoneCallContainer:localizedSenderIdentityForViewCellAtIndex:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48)));

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCells"));
  if (objc_msgSend(v10, "count") == (id)1)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "phoneCallContainer:avatarViewControllerForViewCellAtIndex:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48)));

  }
  else
  {
    v12 = 0;
  }

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v14 = objc_msgSend(v13, "phoneCallContainer:cellIsDimmedAtIndex:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48));

  if (v3 || v5 || v9)
  {
    objc_msgSend(*(id *)(a1 + 40), "setDimmed:animated:", v14, 1);
    objc_msgSend(*(id *)(a1 + 40), "setTitle:subtitle:subtitleColor:localizedSenderIdentityTitle:animated:", v3, v5, v7, v9, *(unsigned __int8 *)(a1 + 56));
  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "avatarViewController"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "contacts"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "contacts"));
  v18 = objc_msgSend(v16, "isEqualToArray:", v17);

  if ((v18 & 1) == 0)
  {
    v19 = sub_1000C5588();
    v20 = objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "contacts"));
      v22 = 138412290;
      v23 = v21;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Updating CarPlay InCallService AvatarViewController with contacts: %@", (uint8_t *)&v22, 0xCu);

    }
    objc_msgSend(*(id *)(a1 + 40), "setAvatarViewController:", v12);
  }

}

id sub_1000994F0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

void sub_100099748(uint64_t a1)
{
  void *v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) = 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 9) = 0;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCells"));
  v3 = (char *)objc_msgSend(v2, "count") - 1;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCells"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "subarrayWithRange:", 1, v3));

  objc_msgSend(v6, "makeObjectsPerformSelector:", "removeFromSuperview");
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCells"));
  objc_msgSend(v5, "removeObjectsInArray:", v6);

}

void sub_100099968(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD block[4];
  id v6;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100099A00;
  block[3] = &unk_100284898;
  v6 = a2;
  v3 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCells"));
  objc_msgSend(v4, "removeObject:", v3);

}

id sub_100099A00(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

void sub_10009A5C0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  PHCarPlayNumberPadButton *v6;
  signed int v7;
  id v8;

  v5 = a2;
  v6 = [PHCarPlayNumberPadButton alloc];
  v7 = objc_msgSend(v5, "intValue");

  v8 = -[PHCarPlayNumberPadButton initForCharacter:style:](v6, "initForCharacter:style:", v7, *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "insertObject:atIndex:", v8, a3);

}

BOOL sub_10009AC00(id a1, TUCall *a2)
{
  TUCall *v2;
  unsigned __int8 v3;

  v2 = a2;
  if ((-[TUCall isHostedOnCurrentDevice](v2, "isHostedOnCurrentDevice") & 1) != 0)
    v3 = 1;
  else
    v3 = -[TUCall isEndpointOnCurrentDevice](v2, "isEndpointOnCurrentDevice");

  return v3;
}

BOOL sub_10009AC44(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 v4;

  v3 = a2;
  if ((*(unsigned int (**)(void))(*(_QWORD *)(a1 + 32) + 16))())
    v4 = objc_msgSend(v3, "status") == 1;
  else
    v4 = 0;

  return v4;
}

BOOL sub_10009AC9C(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 v4;

  v3 = a2;
  if ((*(unsigned int (**)(void))(*(_QWORD *)(a1 + 32) + 16))())
    v4 = objc_msgSend(v3, "status") == 2;
  else
    v4 = 0;

  return v4;
}

BOOL sub_10009ACF4(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 v4;

  v3 = a2;
  if ((*(unsigned int (**)(void))(*(_QWORD *)(a1 + 32) + 16))())
    v4 = objc_msgSend(v3, "status") == 3;
  else
    v4 = 0;

  return v4;
}

BOOL sub_10009AD4C(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 v4;

  v3 = a2;
  if ((*(unsigned int (**)(void))(*(_QWORD *)(a1 + 32) + 16))())
    v4 = objc_msgSend(v3, "status") == 4;
  else
    v4 = 0;

  return v4;
}

void sub_10009ADE4(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSCache);
  v2 = (void *)qword_1002DCB20;
  qword_1002DCB20 = (uint64_t)v1;

}

void sub_10009C3B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_10009C410(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  void (**v8)(_QWORD, _QWORD);
  void *v9;
  unsigned int v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  _QWORD v18[6];
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained && (objc_msgSend(WeakRetained, "pauseTimer") & 1) == 0)
  {
    if (--*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "countdownViewModel"));
      if (objc_msgSend(v4, "playsSound"))
      {

      }
      else
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "countdownViewModel"));
        v10 = objc_msgSend(v9, "playsHaptics");

        if (!v10)
        {
LABEL_15:
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "countdownLabel"));
          v18[0] = _NSConcreteStackBlock;
          v18[1] = 3221225472;
          v18[2] = sub_10009C660;
          v18[3] = &unk_100286F60;
          v17 = *(_QWORD *)(a1 + 32);
          v18[4] = v3;
          v18[5] = v17;
          +[UIView transitionWithView:duration:options:animations:completion:](UIView, "transitionWithView:duration:options:animations:completion:", v16, 5242880, v18, 0, 0.200000003);

          goto LABEL_16;
        }
      }
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "countdownViewModel"));
      if (objc_msgSend(v11, "playsSound"))
      {
        v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
        v13 = *(_QWORD *)(a1 + 48);

        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "alertController"));
        objc_msgSend(v14, "playAlertWithAudio:alertTopic:", v12 <= v13, TLAlertTopicSOSCountdownTick);

        if (v12 <= v13)
          objc_msgSend(v3, "toggleFlash");
      }
      else
      {

        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "alertController"));
        objc_msgSend(v15, "playAlertWithAudio:alertTopic:", 0, TLAlertTopicSOSCountdownTick);

      }
      goto LABEL_15;
    }
    v5 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Countdown has finished! Calling completion.", buf, 2u);
    }

    objc_msgSend(v3, "stop");
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "completion"));

    if (v7)
    {
      v8 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "completion"));
      v8[2](v8, 0);

    }
  }
LABEL_16:

}

void sub_10009C660(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "countdownViewModel"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "countdownString:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8)
                                                                                                + 24)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "countdownLabel"));
  objc_msgSend(v3, "setText:", v2);

}

void sub_10009D260(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  void *v4;
  void *v5;
  void *v6;
  dispatch_time_t v7;
  NSObject *v8;
  id v9;
  NSObject *v10;
  _QWORD block[5];
  uint8_t buf[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
  v3 = objc_msgSend(v2, "hasTorch");

  if ((v3 & 1) != 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    objc_msgSend(v4, "lockForConfiguration:", 0);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    objc_msgSend(v5, "setTorchMode:", 1);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    objc_msgSend(v6, "unlockForConfiguration");

    v7 = dispatch_time(0, 500000000);
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDispatchQueue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10009D3B0;
    block[3] = &unk_100284898;
    block[4] = *(_QWORD *)(a1 + 32);
    dispatch_after(v7, v8, block);

  }
  else
  {
    v9 = sub_1000C5588();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "PHSlidingView,torch not available", buf, 2u);
    }

  }
}

id sub_10009D3B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "stopFlash");
}

void sub_10009D43C(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  NSObject *v9;
  id v10;
  uint8_t buf[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
  v3 = objc_msgSend(v2, "hasTorch");

  if ((v3 & 1) != 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    objc_msgSend(v4, "lockForConfiguration:", 0);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    v6 = objc_msgSend(v5, "torchMode");

    if (v6 == (id)1)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
      objc_msgSend(v7, "setTorchMode:", 0);

    }
    v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "avCaptureDevice"));
    objc_msgSend(v10, "unlockForConfiguration");

  }
  else
  {
    v8 = sub_1000C5588();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "PHSlidingView,torch not available", buf, 2u);
    }

  }
}

id sub_10009E498(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "soundPlayer"));
  objc_msgSend(v4, "attemptToPlayKey:", a2);

  return _objc_msgSend(*(id *)(a1 + 32), "handleNumberPadCharacter:", a2);
}

void sub_10009E944(id *a1)
{
  id *v2;
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  id v7;
  _QWORD block[4];
  NSObject *v9;
  id v10;
  id v11;
  uint8_t buf[8];
  id to;

  v2 = a1 + 5;
  objc_copyWeak(&to, a1 + 5);
  v3 = objc_loadWeakRetained(&to);

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "sharedUtilityProvider"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "UUIDString"));
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "conversationForCallUID:", v5));

    if (v6)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10009EAC4;
      block[3] = &unk_100286FE0;
      objc_copyWeak(&v11, v2);
      v6 = v6;
      v9 = v6;
      v10 = a1[4];
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      objc_destroyWeak(&v11);
    }
  }
  else
  {
    v7 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Stopped fetchRTTConversationForCallUUID because MPRTTTranscriptionMessage was deallocated before starting", buf, 2u);
    }
  }

  objc_destroyWeak(&to);
}

void sub_10009EAAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_10009EAC4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  id v9;
  uint8_t v10[8];
  const __CFString *v11;
  void *v12;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "setConversation:", *(_QWORD *)(a1 + 32));
    v4 = sub_1000C5588();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Successfully finished fetchRTTConversationForCallUUID", v10, 2u);
    }

    v6 = objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    v11 = CFSTR("MPVoicemailRTTTranscriptDidLoadCallIDKey");
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "UUIDString"));
    v12 = v7;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v12, &v11, 1));
    -[NSObject postNotificationName:object:userInfo:](v6, "postNotificationName:object:userInfo:", CFSTR("MPVoicemailRTTTranscriptDidLoadNotification"), 0, v8);

  }
  else
  {
    v9 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Stopped fetchRTTConversationForCallUUID because MPRTTTranscriptionMessage was deallocated when trying to write conversation", v10, 2u);
    }
  }

}

void sub_10009EF04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_1002DCB38 != -1)
    dispatch_once(&qword_1002DCB38, &stru_100287028);
  v3 = *(_QWORD *)(a1 + 32);
  v2 = a1 + 32;
  v4 = off_1002DCB30(*(unsigned int *)(v2 + 8), *(unsigned int *)(v2 + 12), v3);
  v5 = sub_1000C5588();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_ERROR);
  if ((v4 & 1) != 0)
  {
    if (v7)
      sub_1001AA108(v2, v6, v8, v9, v10, v11, v12, v13);
  }
  else if (v7)
  {
    sub_1001AA174(v2, v6, v8, v9, v10, v11, v12, v13);
  }

}

void sub_10009EFAC(id a1)
{
  off_1002DCB30 = (_UNKNOWN *)CUTWeakLinkSymbol("SimulateCrash", CFSTR("CrashReporterSupport"));
}

void sub_1000A0370(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  unsigned int v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  char v18;
  void *v19;
  void *v20;
  int v21;
  uint64_t v22;

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v21 = 138412290;
    v22 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Removing ended call from our call objects: %@", (uint8_t *)&v21, 0xCu);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "participantsView"));
  v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "superview"));
  if (!v6)
    goto LABEL_9;
  v7 = (void *)v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "callGroups"));
  v9 = objc_msgSend(v8, "containsObject:", *(_QWORD *)(a1 + 32));

  if (v9)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "callGroups"));
    objc_msgSend(v10, "removeObject:", *(_QWORD *)(a1 + 32));

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "delegate"));
    v12 = objc_opt_respondsToSelector(v11, "callParticipantsViewController:willShowMultipleLabel:");

    if ((v12 & 1) != 0)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "delegate"));
      v14 = *(void **)(a1 + 40);
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "callGroups"));
      objc_msgSend(v13, "callParticipantsViewController:willShowMultipleLabel:", v14, (unint64_t)objc_msgSend(v15, "count") > 1);

    }
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "participantsView"));
    objc_msgSend(v16, "updateParticipantsAnimated:", 1);

    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "delegate"));
    v18 = objc_opt_respondsToSelector(v17, "callParticipantsViewController:didShowMultipleLabel:");

    if ((v18 & 1) != 0)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "delegate"));
      v19 = *(void **)(a1 + 40);
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "callGroups"));
      objc_msgSend(v5, "callParticipantsViewController:didShowMultipleLabel:", v19, (unint64_t)objc_msgSend(v20, "count") > 1);

LABEL_9:
    }
  }
}

BOOL sub_1000A0580(id a1, TUCallGroup *a2)
{
  void *v2;
  void *v3;
  unsigned int v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[TUCallGroup calls](a2, "calls"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "firstObject"));

  if (v3)
    v4 = objc_msgSend(v3, "wasDeclined") ^ 1;
  else
    LOBYTE(v4) = 0;

  return v4;
}

id sub_1000A33EC(unint64_t a1)
{
  void *v1;
  void *v3;
  _QWORD v4[14];

  if (a1 <= 6)
  {
    if (((1 << a1) & 0x1E) != 0)
      return (id)objc_claimAutoreleasedReturnValue(+[NSSet set](NSSet, "set"));
    v4[0] = STBackgroundActivityIdentifierCallRinging;
    v4[1] = STBackgroundActivityIdentifierInCall;
    v4[2] = STBackgroundActivityIdentifierVideoConferenceRinging;
    v4[3] = STBackgroundActivityIdentifierInVideoConference;
    v4[4] = STBackgroundActivityIdentifierSharePlay;
    v4[5] = STBackgroundActivityIdentifierSharePlayScreenSharing;
    v4[6] = STBackgroundActivityIdentifierIdlePushToTalkCall;
    v4[7] = STBackgroundActivityIdentifierActivePushToTalkCall;
    v4[8] = STBackgroundActivityIdentifierRecording;
    v4[9] = STBackgroundActivityIdentifierCallHandoff;
    v4[10] = STBackgroundActivityIdentifierVideoConferenceHandoff;
    v4[11] = STBackgroundActivityIdentifierSharePlayInactive;
    v4[12] = STBackgroundActivityIdentifierCallScreening;
    v4[13] = CFSTR("com.apple.systemstatus.background-activity.CallRecording");
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v4, 14));
    v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v3));

  }
  return v1;
}

void sub_1000A5658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A5678(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1000A5750;
  v11[3] = &unk_100285028;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  v10 = v8;
  v12 = v10;
  TUDispatchMainIfNecessary(v11);

  objc_destroyWeak(&v13);
}

void sub_1000A573C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000A5750(uint64_t a1)
{
  uint64_t v1;
  id WeakRetained;
  void *v3;
  double x;
  double y;
  double width;
  double height;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *i;
  void *v22;
  void *v23;
  void *v24;
  unsigned int v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  unsigned int v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  void *j;
  void *v38;
  id v39;
  NSObject *v40;
  id v41;
  NSObject *v42;
  NSString *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  void *obj;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint8_t buf[4];
  void *v63;
  _BYTE v64[128];
  _BYTE v65[128];
  CGRect v66;
  CGRect v67;
  CGRect v68;

  v1 = a1;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (!WeakRetained)
    goto LABEL_43;
  x = CGRectZero.origin.x;
  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "multiwayViewController"));

  v52 = v3;
  if (!v8)
  {
    v15 = 0;
    goto LABEL_26;
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "delegate"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "screenSharingRootViewController"));

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "pipController"));
  v13 = objc_msgSend(v12, "pipState");

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "callDisplayStyleManager"));
  v15 = objc_msgSend(v14, "callDisplayStyle") == (id)2;

  v60 = 0u;
  v61 = 0u;
  v58 = 0u;
  v59 = 0u;
  obj = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "elements"));
  v16 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v65, 16);
  if (!v16)
    goto LABEL_25;
  v17 = v16;
  v47 = v11;
  v48 = v1;
  v49 = v15;
  v51 = (unint64_t)v13 - 3;
  v18 = *(_QWORD *)v59;
  v19 = TUBundleIdentifierSpringBoardAppSwitcher;
  v20 = TUBundleIdentifierSpringBoardHomeScreen;
  v50 = TUBundleIdentifierInCallServiceApplication;
  while (2)
  {
    for (i = 0; i != v17; i = (char *)i + 1)
    {
      if (*(_QWORD *)v59 != v18)
        objc_enumerationMutation(obj);
      v22 = *(void **)(*((_QWORD *)&v58 + 1) + 8 * (_QWORD)i);
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "identifier", v47, v48));
      if (objc_msgSend(v23, "isEqualToString:", v19))
      {

      }
      else
      {
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "identifier"));
        v25 = objc_msgSend(v24, "isEqualToString:", v20);

        v3 = v52;
        if (!v25)
          goto LABEL_12;
      }
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "multiwayViewController"));
      objc_msgSend(v26, "prepareForAppSwitcher");

LABEL_12:
      if (objc_msgSend(v22, "conformsToProtocol:", &OBJC_PROTOCOL___SBSDisplayLayoutElement))
      {
        v27 = v22;
        v28 = v27;
        if (v51 > 0xFFFFFFFFFFFFFFFDLL)
        {
          v30 = 0;
        }
        else
        {
          v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "bundleIdentifier"));
          v30 = objc_msgSend(v29, "isEqualToString:", v50);

        }
        if (objc_msgSend(v28, "layoutRole") == (id)5 && (objc_msgSend(v28, "sb_isStashedPIP") | v30) != 1)
        {
          objc_msgSend(v28, "frame");
          v67 = CGRectIntegral(v66);
          x = v67.origin.x;
          y = v67.origin.y;
          width = v67.size.width;
          height = v67.size.height;

          goto LABEL_24;
        }

      }
    }
    v17 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v65, 16);
    if (v17)
      continue;
    break;
  }
LABEL_24:
  v15 = v49;
  v11 = v47;
  v1 = v48;
LABEL_25:

  objc_msgSend(v3, "handleFrontBoardInterfaceOrientationChange:", objc_msgSend(*(id *)(v1 + 32), "interfaceOrientation"));
LABEL_26:
  v31 = objc_msgSend(*(id *)(v1 + 32), "displayBacklightLevel");
  if (*(_QWORD *)(v1 + 32) && (uint64_t)v31 <= 0)
  {
    v56 = 0u;
    v57 = 0u;
    v54 = 0u;
    v55 = 0u;
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "callCenter"));
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "currentAudioAndVideoCalls"));

    v34 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v54, v64, 16);
    if (v34)
    {
      v35 = v34;
      v36 = *(_QWORD *)v55;
      do
      {
        for (j = 0; j != v35; j = (char *)j + 1)
        {
          if (*(_QWORD *)v55 != v36)
            objc_enumerationMutation(v33);
          v38 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * (_QWORD)j);
          if (objc_msgSend(v38, "isSharingScreen"))
          {
            v39 = sub_1000C5588();
            v40 = objc_claimAutoreleasedReturnValue(v39);
            if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              v63 = v38;
              _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "Device display is off stopping sharing screen for call %@", buf, 0xCu);
            }

            objc_msgSend(v38, "setSharingScreen:", 0);
          }
        }
        v35 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v54, v64, 16);
      }
      while (v35);
    }

    v3 = v52;
  }
  v41 = sub_1000C5588();
  v42 = objc_claimAutoreleasedReturnValue(v41);
  if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
  {
    v68.origin.x = x;
    v68.origin.y = y;
    v68.size.width = width;
    v68.size.height = height;
    v43 = NSStringFromCGRect(v68);
    v44 = (void *)objc_claimAutoreleasedReturnValue(v43);
    *(_DWORD *)buf = 138412290;
    v63 = v44;
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "mediaPipFrameInWindowScene changed to %@", buf, 0xCu);

  }
  v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "multiwayViewController"));
  objc_msgSend(v45, "setMediaPipFrameInWindowScene:", x, y, width, height);

  v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "multiwayViewController"));
  objc_msgSend(v46, "setIsScreenSharingFullScreen:", v15);

LABEL_43:
}

void sub_1000A5CF8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "multiwayViewController"));
  objc_msgSend(v3, "setFrontBoardInterfaceOrientation:", v2);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "multiwayViewController"));
  LODWORD(v3) = objc_msgSend(v4, "wantsPIPRotationForLocalPreview");

  if ((_DWORD)v3)
    objc_msgSend(*(id *)(a1 + 32), "rotatePIPForInterfaceOrientation:", *(_QWORD *)(a1 + 48));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[PHPIPController defaultPIPController](PHPIPController, "defaultPIPController"));
  objc_msgSend(v5, "updatePIPSize");

  v6 = (id)objc_claimAutoreleasedReturnValue(+[PHPIPController defaultPIPController](PHPIPController, "defaultPIPController"));
  objc_msgSend(v6, "updatePIPFrame");

}

void sub_1000A5EE0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "multiwayViewController"));
  objc_msgSend(v1, "pipDidRotate");

}

void sub_1000A69DC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "dismissInCallPresentationWithDismissalBlock:", &stru_100287150);
  v4 = (id)objc_claimAutoreleasedReturnValue(+[ICSApplicationDelegate configurationForCall:preferredPresentationMode:](ICSApplicationDelegate, "configurationForCall:preferredPresentationMode:", *(_QWORD *)(a1 + 40), 0));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "delegate"));
  objc_msgSend(v3, "performPresentationWithConfiguration:forSceneType:", v4, 0);

}

void sub_1000A6A64(id a1)
{
  void *v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "delegate"));
  objc_msgSend(v1, "dismissInCallSceneSession");

}

BOOL sub_1000AA858(id a1, TUCall *a2)
{
  TUCall *v2;
  void *v3;
  unsigned int v4;

  v2 = a2;
  if (-[TUCall isActive](v2, "isActive"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(-[TUCall provider](v2, "provider"));
    v4 = objc_msgSend(v3, "supportsDynamicSystemUI") ^ 1;

  }
  else
  {
    LOBYTE(v4) = 0;
  }

  return v4;
}

BOOL sub_1000AA8B4(id a1, TUCall *a2)
{
  TUCall *v2;
  unsigned int v3;

  v2 = a2;
  if (-[TUCall status](v2, "status") == 4
    && -[TUCall shouldSuppressInCallUI](v2, "shouldSuppressInCallUI"))
  {
    v3 = -[TUCall isVideo](v2, "isVideo") ^ 1;
  }
  else
  {
    LOBYTE(v3) = 0;
  }

  return v3;
}

BOOL sub_1000AA908(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _BOOL4 v8;
  _BOOL8 v9;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeConversationForCall:", v3));
  v5 = v4;
  if (!v4)
    goto LABEL_6;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "mergedRemoteMembers"));
  if (objc_msgSend(v6, "count") == (id)1)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "mergedActiveRemoteParticipants"));
    v8 = (unint64_t)objc_msgSend(v7, "count") > 1;

  }
  else
  {
    v8 = 1;
  }

  if (objc_msgSend(v3, "status") != 4)
    v9 = objc_msgSend(v3, "status") != 5 && v8;
  else
LABEL_6:
    v9 = 0;

  return v9;
}

BOOL sub_1000AA9D0(id a1, TUCall *a2)
{
  TUCall *v2;
  BOOL v3;

  v2 = a2;
  if (-[TUCall isVideo](v2, "isVideo"))
    v3 = -[TUCall status](v2, "status") == 3;
  else
    v3 = 0;

  return v3;
}

BOOL sub_1000AAA18(id a1, TUCall *a2)
{
  TUCall *v2;
  BOOL v3;

  v2 = a2;
  if (-[TUCall isVideo](v2, "isVideo"))
    v3 = -[TUCall status](v2, "status") == 4;
  else
    v3 = 0;

  return v3;
}

BOOL sub_1000AAA60(id a1, TUCall *a2)
{
  TUCall *v2;
  BOOL v3;

  v2 = a2;
  v3 = (-[TUCall isVideo](v2, "isVideo") & 1) == 0 && -[TUCall status](v2, "status") == 1;

  return v3;
}

BOOL sub_1000AAAA8(id a1, TUCall *a2)
{
  TUCall *v2;
  BOOL v3;

  v2 = a2;
  if (-[TUCall isVideo](v2, "isVideo"))
    v3 = -[TUCall status](v2, "status") == 1;
  else
    v3 = 0;

  return v3;
}

BOOL sub_1000AAAF0(id a1, TUCall *a2)
{
  TUCall *v2;
  BOOL v3;

  v2 = a2;
  v3 = (-[TUCall isVideo](v2, "isVideo") & 1) == 0 && -[TUCall status](v2, "status") == 3;

  return v3;
}

BOOL sub_1000AAB38(id a1, TUCall *a2)
{
  return -[TUCall isEmergency](a2, "isEmergency");
}

id sub_1000AB098(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showHideMiniWindowViewIfNeededAnimated:", *(unsigned __int8 *)(a1 + 40));
}

id sub_1000AB200(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateShouldBecomeVisibleWhenWakingDisplay");
}

id sub_1000AB284(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "InCallRootViewController dismissed mini window", v5, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "updateShouldBecomeVisibleWhenWakingDisplay");
  return objc_msgSend(*(id *)(a1 + 32), "setCoverViewController:", 0);
}

void sub_1000AB9EC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 152));
  _Unwind_Resume(a1);
}

void sub_1000ABA60(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id WeakRetained;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contactIdentifiers"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "firstObject"));

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("mobilephone-contacts://show?id=%@"), v7));
  v4 = objc_msgSend(objc_alloc((Class)NSURL), "initWithString:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"));
  objc_msgSend(v5, "openSensitiveURL:withOptions:", v4, 0);

  +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHFailureAlertShowingAssertionReason"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setFailureAlertController:", 0);

}

void sub_1000ABB48(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"));
  objc_msgSend(v2, "openApplicationWithBundleID:", CFSTR("com.apple.facetime"));

  +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHFailureAlertShowingAssertionReason"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setFailureAlertController:", 0);

}

void sub_1000ABBC0(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id WeakRetained;
  void *v8;

  v2 = objc_alloc_init((Class)NSURLComponents);
  objc_msgSend(v2, "setScheme:", CFSTR("itms-apps"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLQueryItem queryItemWithName:value:](NSURLQueryItem, "queryItemWithName:value:", CFSTR("bundleIdentifier"), CFSTR("com.apple.facetime")));
  v8 = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
  objc_msgSend(v2, "setQueryItems:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "URL"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"));
  objc_msgSend(v6, "openURL:withOptions:", v5, 0);

  +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHFailureAlertShowingAssertionReason"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setFailureAlertController:", 0);

}

void sub_1000ABD00(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  uint8_t v5[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Removing failure alert controller", v5, 2u);
  }

  +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHFailureAlertShowingAssertionReason"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setFailureAlertController:", 0);

}

void sub_1000ABD98(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "failureAlertController"));
  objc_msgSend(v1, "presentViewController:animated:completion:", v2, 1, 0);

}

void sub_1000ABE70(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  void *v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "window"));

  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412546;
    v8 = v6;
    v9 = 2112;
    v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Completed transition to %@. Presented in window %@.", (uint8_t *)&v7, 0x16u);
  }

}

void sub_1000AC264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1000AC288(uint64_t result, int a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id WeakRetained;

  if (a2)
  {
    v2 = result;
    objc_msgSend(*(id *)(result + 32), "removeFromParentViewController");
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 32), "view"));
    objc_msgSend(v3, "removeFromSuperview");

    v4 = *(void **)(v2 + 40);
    WeakRetained = objc_loadWeakRetained((id *)(v2 + 56));
    objc_msgSend(v4, "didMoveToParentViewController:", WeakRetained);

    result = *(_QWORD *)(v2 + 48);
    if (result)
      return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000ACAE0(id a1)
{
  void *v1;
  __CFNotificationCenter *DarwinNotifyCenter;
  id v3;
  NSObject *v4;
  uint8_t v5[16];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[PHInCallUtilities sharedInstance](PHInCallUtilities, "sharedInstance"));
  objc_msgSend(v1, "stopSuppressingInCallStatusBarForReason:", CFSTR("PHSuppressInCallStatusBarForDialReason"));

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, TUCallCenterInCallServiceDidAppearNotification, 0, 0, 1u);
  v3 = sub_1000C5588();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "TUCallCenterInCallServiceDidAppearNotification: Posted in ", v5, 2u);
  }

}

void sub_1000ACB8C(id a1)
{
  +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHInitialPresentationAssertionReason"));
}

void sub_1000AD028(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "inCallWindowScene"));
  objc_msgSend(v1, "requestTransitionToPresentationMode:shouldDismissCMASAlerts:", 2, 0);

}

void sub_1000AD1E8(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "delegate"));
  objc_msgSend(v2, "dismissInCallSceneSession");

  v4 = (id)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "delegate"));
  objc_msgSend(v3, "dismissScreenSharingSceneSession");

}

void sub_1000AD264(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_remoteViewControllerProxy"));
  objc_msgSend(v1, "dismiss");

}

void sub_1000AD65C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 80));
  _Unwind_Resume(a1);
}

void sub_1000AD690(uint64_t a1)
{
  void *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "prepareForDismissal");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "delegate"));
  objc_msgSend(v2, "hideCarPlayUI");

}

void sub_1000AD6F0(uint64_t a1)
{
  void *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "prepareForDismissal");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "delegate"));
  objc_msgSend(v2, "hideCarPlayUI");

}

void sub_1000ADABC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_1000ADCAC(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "setTemporarilyAllowAllStatusBarPills:", 1);
  v1 = (id)objc_claimAutoreleasedReturnValue(+[PHInCallUtilities sharedInstance](PHInCallUtilities, "sharedInstance"));
  objc_msgSend(v1, "setRequestedVCPresentationWithStatusBar:withReasonLog:", 0, CFSTR("Completed presentation of contacts with full screen people picker"));

}

id sub_1000ADFB8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setTemporarilyAllowAllStatusBarPills:", 1);
  return objc_msgSend(*(id *)(a1 + 32), "setScreenTimeHostViewController:", *(_QWORD *)(a1 + 40));
}

void sub_1000ADFE4(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

id sub_1000AE258(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "screenTimeHostViewController"));
  objc_msgSend(v2, "dismissAlert");

  objc_msgSend(*(id *)(a1 + 32), "setScreenTimeHostViewController:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "setFilteredRequest:", 0);
}

uint64_t sub_1000AE2A0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setTemporarilyAllowAllStatusBarPills:", 0);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_1000AE2D0(uint64_t a1)
{
  void *v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "screenTimeHostViewController"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "view"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

uint64_t sub_1000AE31C(uint64_t result, int a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;

  if (a2)
  {
    v2 = result;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(result + 32), "screenTimeHostViewController"));
    objc_msgSend(v3, "removeFromParentViewController");

    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 32), "screenTimeHostViewController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
    objc_msgSend(v5, "removeFromSuperview");

    return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 40) + 16))();
  }
  return result;
}

uint64_t sub_1000AE8B8(uint64_t a1)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  NSObject *v6;
  int v7;
  uint64_t result;
  int v9;
  int v10;

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    v9 = 67109120;
    v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dismissed contactsVC animated %d (before updateDesiredSpringboardBehavior)", (uint8_t *)&v9, 8u);
  }

  objc_msgSend(*(id *)(a1 + 32), "setContactsViewController:", 0);
  objc_msgSend(*(id *)(a1 + 32), "updateDesiredSpringboardBehavior");
  v5 = sub_1000C5588();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(unsigned __int8 *)(a1 + 48);
    v9 = 67109120;
    v10 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "dismissed contactsVC Animated %d (after updateDesiredSpringboardBehavior)", (uint8_t *)&v9, 8u);
  }

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_1000AE9D8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setTemporarilyAllowAllStatusBarPills:", 0);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_1000AEB48(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  NSObject *v5;
  uint64_t result;
  uint8_t v7[16];
  uint8_t buf[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dismissed contact details (before updateDesiredSpringboardBehavior)", buf, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "updateDesiredSpringboardBehavior");
  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "dismissed contact details (after updateDesiredSpringboardBehavior)", v7, 2u);
  }

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_1000AF3FC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t result;
  uint8_t v5[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "prepareForDeviceLock completed with dismissal", v5, 2u);
  }

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1000AF924(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dismissed sensitive view controller: phoneRemoteVC", v4, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000AF994(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dismissed sensitive view controller: contactsVC", v4, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000AFA04(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dismissed sensitive view controller: contact details", v4, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_1000AFA74(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t result;
  uint8_t v5[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dismiss sensitive view controllers: completed", v5, 2u);
  }

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1000B021C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "videoCallNavigationController"));
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Completed transition to %@", (uint8_t *)&v6, 0xCu);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[PHPIPController defaultPIPController](PHPIPController, "defaultPIPController"));
  objc_msgSend(v5, "updatePIPSize");

}

void sub_1000B08C4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  unsigned __int8 v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  _QWORD v25[5];
  uint8_t buf[4];
  id v27;

  v5 = a2;
  v6 = a3;
  v7 = sub_1000C5588();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  if (!v5 || v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1001AA2DC((uint64_t)v6, v9);

    v24 = (void *)objc_claimAutoreleasedReturnValue(+[PHInCallUtilities sharedInstance](PHInCallUtilities, "sharedInstance"));
    objc_msgSend(v24, "setRequestedVCPresentationWithStatusBar:withReasonLog:", 0, CFSTR("Error occured when requesting view controller"));

  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v27 = v5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Presenting remote host view controller: %@", buf, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 32), "setRemoteHostViewController:", v5);
    v10 = *(void **)(a1 + 32);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "remoteHostViewController"));
    objc_msgSend(v11, "setDelegate:", v10);

    v12 = *(void **)(a1 + 32);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "remoteHostViewController"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "remoteViewController"));
    objc_msgSend(v14, "setDelegate:", v12);

    v15 = *(void **)(a1 + 32);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "remoteHostViewController"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "remoteViewController"));
    objc_msgSend(v17, "setBackgroundStyleDelegate:", v15);

    v18 = +[PHUIConfiguration shouldUseFullScreenPeoplePicker](PHUIConfiguration, "shouldUseFullScreenPeoplePicker");
    v19 = *(void **)(a1 + 32);
    if ((v18 & 1) != 0)
    {
      v20 = v19;
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedViewController"));

      if (v21)
      {
        v22 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedViewController"));

        v20 = (id)v22;
      }
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "remoteHostViewController"));
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 3221225472;
      v25[2] = sub_1000B0B54;
      v25[3] = &unk_100284898;
      v25[4] = *(_QWORD *)(a1 + 32);
      objc_msgSend(v20, "presentViewController:animated:completion:", v23, 1, v25);

    }
    else
    {
      v20 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "remoteHostViewController"));
      objc_msgSend(v19, "presentAsPopover:fromView:completion:", v20, *(_QWORD *)(a1 + 40), 0);
    }

    objc_msgSend(*(id *)(a1 + 32), "updateDesiredSpringboardBehavior");
  }

}

void sub_1000B0B54(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "setTemporarilyAllowAllStatusBarPills:", 1);
  v1 = (id)objc_claimAutoreleasedReturnValue(+[PHInCallUtilities sharedInstance](PHInCallUtilities, "sharedInstance"));
  objc_msgSend(v1, "setRequestedVCPresentationWithStatusBar:withReasonLog:", 0, CFSTR("Completed presenting view controller with full screen people picker"));

}

uint64_t sub_1000B0D68(uint64_t a1)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  NSObject *v6;
  int v7;
  uint64_t result;
  int v9;
  int v10;

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    v9 = 67109120;
    v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dismissed phoneRemoteVC animated %d (before updateDesiredSpringboardBehavior)", (uint8_t *)&v9, 8u);
  }

  objc_msgSend(*(id *)(a1 + 32), "setRemoteHostViewController:", 0);
  objc_msgSend(*(id *)(a1 + 32), "updateDesiredSpringboardBehavior");
  v5 = sub_1000C5588();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(unsigned __int8 *)(a1 + 48);
    v9 = 67109120;
    v10 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "dismissed phoneRemoteVC animated %d (after updateDesiredSpringboardBehavior)", (uint8_t *)&v9, 8u);
  }

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_1000B0E88(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setTemporarilyAllowAllStatusBarPills:", 0);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

BOOL sub_1000B2078(id a1, TUCall *a2)
{
  return -[TUCall status](a2, "status") == 4;
}

void sub_1000B29D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000B29FC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  NSObject *v5;
  id v6;
  _QWORD v7[4];
  NSObject *v8;
  uint8_t buf[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "will allowDeviceToLock", buf, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000B2B18;
    v7[3] = &unk_100284E18;
    v8 = *(id *)(a1 + 32);
    objc_msgSend(WeakRetained, "prepareForDeviceLockWithCompletion:", v7);
    v5 = v8;
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    v6 = sub_1000C5588();
    v5 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "did allowDeviceToLock (root VC deallocated)", buf, 2u);
    }
  }

}

void sub_1000B2B18(uint64_t a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v1 = sub_1000C5588();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "did allowDeviceToLock (after prepareForDeviceLock)", v3, 2u);
  }

}

uint64_t sub_1000B2B8C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Transition complete for view controller with sensitive information. Allowing device to lock now.", v5, 2u);
  }

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

BOOL sub_1000B4414(id a1, TUCall *a2)
{
  TUCall *v2;
  void *v3;
  BOOL v4;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[TUCall provider](v2, "provider"));
  if (objc_msgSend(v3, "isFaceTimeProvider"))
    v4 = -[TUCall status](v2, "status") == 1 || -[TUCall status](v2, "status") == 4;
  else
    v4 = 0;

  return v4;
}

void sub_1000B49EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  id *v9;
  uint64_t v10;

  objc_destroyWeak(v9);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 112));
  _Unwind_Resume(a1);
}

void sub_1000B4A28(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id to;

  v3 = a2;
  objc_copyWeak(&to, (id *)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handle"));
  if (v4)
  {
    v5 = objc_loadWeakRetained(&to);
    objc_msgSend(v5, "blockWithHandle:", v4);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

  objc_destroyWeak(&to);
}

void sub_1000B4AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000B4AC8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  id to;

  v3 = a2;
  objc_copyWeak(&to, (id *)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handle"));
  if (v4)
  {
    v5 = objc_loadWeakRetained(&to);
    objc_msgSend(v5, "blockWithHandle:", v4);

    v6 = objc_loadWeakRetained(&to);
    objc_msgSend(v6, "reportWithCall:", *(_QWORD *)(a1 + 32));

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

  objc_destroyWeak(&to);
}

void sub_1000B4B6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B4B80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000B4E70(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "multiwayViewController"));
  objc_msgSend(v1, "pipDidRotate");

}

BOOL sub_1000B66AC(id a1, TUCall *a2)
{
  void *v2;
  BOOL v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[TUCall remoteParticipantHandles](a2, "remoteParticipantHandles"));
  v3 = (unint64_t)objc_msgSend(v2, "count") > 1;

  return v3;
}

void sub_1000B7168(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "inCallWindowScene"));
  objc_msgSend(v1, "requestTransitionToPresentationMode:shouldDismissCMASAlerts:analyticsSource:", 2, 0, SBSUIInCallTransitionAnalyticsSourceBannerTap);

}

id sub_1000B8B00(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  int v8;
  const __CFString *v9;

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 138412290;
    v9 = CFSTR("PHMulitwayCallAssertionReason");
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Releasing %@ since the call has ended with no bottom controls showing", (uint8_t *)&v8, 0xCu);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "delegate"));
  objc_msgSend(v5, "setMostRecentlyDisconnectedVideoCall:", 0);

  return objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32), v6), "releaseDismissalAssertionForReason:", CFSTR("PHMulitwayCallAssertionReason"));
}

id sub_1000BA12C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BottomBar: Ending active or held call and answering incoming video call %@", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "endActiveOrHeldAndAnswerCall:", *(_QWORD *)(a1 + 32));
}

id *sub_1000BA1D8(id *result, int a2)
{
  id *v2;
  id v3;
  NSObject *v4;
  void *v5;
  __int16 v6[8];

  if (a2)
  {
    v2 = result;
    v3 = sub_1000C5588();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v6[0] = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SpamReport: releasing assertions from block and report caller", (uint8_t *)v6, 2u);
    }

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[4], "multiwayViewController"));
    objc_msgSend(v5, "setIsInCallEndedBlockAndReportFlow:", 0);

    +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHCallEndedBlockAndReportInProgressAssertionReason"));
    return (id *)+[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHMulitwayCallAssertionReason"));
  }
  return result;
}

id *sub_1000BA284(id *result, int a2)
{
  id *v2;
  id v3;
  NSObject *v4;
  void *v5;
  __int16 v6[8];

  if (a2)
  {
    v2 = result;
    v3 = sub_1000C5588();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v6[0] = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SpamReport: releasing assertions from disconnectedCall block and report caller", (uint8_t *)v6, 2u);
    }

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[4], "multiwayViewController"));
    objc_msgSend(v5, "setIsInCallEndedBlockAndReportFlow:", 0);

    +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHCallEndedBlockAndReportInProgressAssertionReason"));
    return (id *)+[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHMulitwayCallAssertionReason"));
  }
  return result;
}

id sub_1000BA680(uint64_t a1)
{
  id result;
  unint64_t v3;
  id v4;
  NSObject *v5;
  id v6;
  NSObject *v7;
  id v8;
  NSObject *v9;
  uint8_t v10[16];
  uint8_t v11[16];
  uint8_t buf[16];

  result = objc_msgSend(*(id *)(a1 + 32), "currentAudioAndVideoCallCount");
  v3 = (unint64_t)result;
  if (*(_QWORD *)(a1 + 40))
  {
    v4 = sub_1000C5588();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Disconnecting incoming video call due to lock button", buf, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "disconnectCall:withReason:", *(_QWORD *)(a1 + 40), 2);
    result = +[PHInCallRootViewController setShouldForceDismiss](PHInCallRootViewController, "setShouldForceDismiss");
  }
  else if (*(_QWORD *)(a1 + 48))
  {
    v6 = sub_1000C5588();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Disconnecting active video call due to lock button", v11, 2u);
    }

    result = objc_msgSend(*(id *)(a1 + 32), "disconnectCall:", *(_QWORD *)(a1 + 48));
  }
  if (v3 <= 1)
  {
    v8 = sub_1000C5588();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "... and requesting lock on next dismiss", v10, 2u);
    }

    return +[PHInCallRootViewController setShouldLockDeviceOnNextDismiss](PHInCallRootViewController, "setShouldLockDeviceOnNextDismiss");
  }
  return result;
}

void sub_1000BA7DC(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", CFSTR("PHMulitwayCallAssertionReason")));
  +[PHInCallRootViewController releaseDismissalAssertionReasons:](PHInCallRootViewController, "releaseDismissalAssertionReasons:", v1);

}

id sub_1000BA9A0(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "UserFeedbackScore : Releasing Assertion", v5, 2u);
  }

  +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHUserScoreShowingAssertionReason"));
  return objc_msgSend(*(id *)(a1 + 32), "setUserFeedbackViewController:", 0);
}

void sub_1000BC100(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  double v7;
  id v8;

  v5 = *(void **)(a1 + 32);
  v6 = objc_msgSend(a2, "intValue");
  v7 = *(double *)(a1 + 48) * (double)(unint64_t)(a3 + 1);
  *(float *)&v7 = v7;
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "buttonForButtonType:createIfNecessary:createWithHorizontalPositionFraction:", v6, 1, v7));
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v8);

}

id sub_1000BC178(id *a1)
{
  float v2;
  id v3;
  id v4;
  double v5;
  id v6;
  uint64_t v7;
  float v8;
  void *i;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *j;
  void *v16;
  id v17;
  double v18;
  id v19;
  float v20;
  uint64_t v21;
  void *k;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *m;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[128];
  _BYTE v47[128];
  _BYTE v48[128];
  _BYTE v49[128];

  v2 = 1.0 / (float)((unint64_t)objc_msgSend(a1[4], "count") + 1);
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v45 = 0u;
  v3 = a1[4];
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v42, v49, 16);
  if (v4)
  {
    v6 = v4;
    v7 = *(_QWORD *)v43;
    v8 = v2;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v43 != v7)
          objc_enumerationMutation(v3);
        v10 = *(void **)(*((_QWORD *)&v42 + 1) + 8 * (_QWORD)i);
        *(float *)&v5 = v8;
        objc_msgSend(a1[5], "applyHorizontalPositioningConstraintWithFraction:forButton:", v10, v5);
        objc_msgSend(v10, "setAlpha:", 1.0);
        v8 = v2 + v8;
      }
      v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v42, v49, 16);
    }
    while (v6);
  }

  v40 = 0u;
  v41 = 0u;
  v38 = 0u;
  v39 = 0u;
  v11 = a1[6];
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v38, v48, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v39;
    do
    {
      for (j = 0; j != v13; j = (char *)j + 1)
      {
        if (*(_QWORD *)v39 != v14)
          objc_enumerationMutation(v11);
        objc_msgSend(*(id *)(*((_QWORD *)&v38 + 1) + 8 * (_QWORD)j), "setAlpha:", 0.0);
      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v38, v48, 16);
    }
    while (v13);
  }

  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "buttonDividerViews"));
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v34, v47, 16);
  if (v17)
  {
    v19 = v17;
    v20 = v2 + (float)(v2 * 0.5);
    v21 = *(_QWORD *)v35;
    do
    {
      for (k = 0; k != v19; k = (char *)k + 1)
      {
        if (*(_QWORD *)v35 != v21)
          objc_enumerationMutation(v16);
        v23 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)k);
        *(float *)&v18 = v20;
        objc_msgSend(a1[5], "applyHorizontalPositioningConstraintWithFraction:forDividerView:", v23, v18);
        objc_msgSend(v23, "setAlpha:", 1.0);
        v20 = v2 + v20;
      }
      v19 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v34, v47, 16);
    }
    while (v19);
  }

  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v24 = a1[7];
  v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v30, v46, 16);
  if (v25)
  {
    v26 = v25;
    v27 = *(_QWORD *)v31;
    do
    {
      for (m = 0; m != v26; m = (char *)m + 1)
      {
        if (*(_QWORD *)v31 != v27)
          objc_enumerationMutation(v24);
        objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)m), "setAlpha:", 0.0, (_QWORD)v30);
      }
      v26 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v30, v46, 16);
    }
    while (v26);
  }

  objc_msgSend(a1[5], "setNeedsLayout");
  return objc_msgSend(a1[5], "layoutIfNeeded");
}

_DWORD *sub_1000BC494(_DWORD *result, int a2)
{
  _DWORD *v2;
  int v3;

  if (a2)
  {
    v2 = result;
    v3 = result[14];
    result = (_DWORD *)*((_QWORD *)result + 4);
    if (v3 == result[2])
    {
      objc_msgSend(result, "removeButtons:", *((_QWORD *)v2 + 5));
      return objc_msgSend(*((id *)v2 + 6), "makeObjectsPerformSelector:", "removeFromSuperview");
    }
  }
  return result;
}

id sub_1000BD308(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_createRootViewController");
}

void sub_1000BD7C8(uint64_t a1)
{
  id v2;
  NSObject *v3;
  unsigned int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  int v12;
  _QWORD v13[2];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "isViewLoaded");
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "window"));
    v12 = 67109378;
    LODWORD(v13[0]) = v4;
    WORD2(v13[0]) = 2112;
    *(_QWORD *)((char *)v13 + 6) = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Inside block: self.isViewLoaded: %d, self.view.window: %@", (uint8_t *)&v12, 0x12u);

  }
  if (objc_msgSend(*(id *)(a1 + 32), "isViewLoaded"))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "window"));

    if (v8)
    {
      v9 = sub_1000C5588();
      v10 = objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v12 = 138412290;
        v13[0] = CFSTR("PHSuppressInCallStatusBarForFullscreenUIReason");
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "remove status bar suppression %@", (uint8_t *)&v12, 0xCu);
      }

      v11 = (void *)objc_claimAutoreleasedReturnValue(+[PHInCallUtilities sharedInstance](PHInCallUtilities, "sharedInstance"));
      objc_msgSend(v11, "stopSuppressingInCallStatusBarForReason:", CFSTR("PHSuppressInCallStatusBarForFullscreenUIReason"));

    }
  }
}

void sub_1000BE2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BE318(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_stealViewControllerFromPIP");
    WeakRetained = v2;
  }

}

void sub_1000BE3E8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000BE40C(uint64_t a1, uint64_t a2, void *a3)
{
  id WeakRetained;
  void *v6;
  id v7;

  v7 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v6 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained, "_handlePiPEndedAndShouldBePresentedFullScreen:transitionIsComplete:viewControllerToSteal:", 1, a2, v7);

}

void sub_1000BE75C(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callDisplayStyleManager"));
  v2 = objc_msgSend(v1, "sceneType");

  v6 = (id)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "delegate"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sceneManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "sceneOfType:", v2));
  objc_msgSend(v5, "requestTransitionToPresentationMode:shouldDismissCMASAlerts:", 2, 0);

}

void sub_1000BF084(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD block[4];
  id v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000BF140;
  block[3] = &unk_100285360;
  v10 = v5;
  v11 = *(id *)(a1 + 32);
  v12 = v6;
  v7 = v6;
  v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1000BF140(uint64_t a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];
  id v16;
  uint8_t buf[4];
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = sub_1000C5588();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v6 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v18 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Fetched user activity: %@ - requesting handoff", buf, 0xCu);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userInfo"));
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_1000BF2A8;
    v15[3] = &unk_1002848C0;
    v16 = *(id *)(a1 + 40);
    objc_msgSend(v7, "pullCallFromClientUsingHandoffActivityUserInfo:completion:", v8, v15);

  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1001AA4EC(a1, v5, v9, v10, v11, v12, v13, v14);

    +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHDismissalReasonWaitingForHandoff"));
  }
}

id sub_1000BF2A8(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v15;
  uint64_t v16;

  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (a2)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v15 = 138412290;
      v16 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Completed handoff request successfully for %@", (uint8_t *)&v15, 0xCu);
    }
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    sub_1001AA554(a1, v6, v8, v9, v10, v11, v12, v13);
  }

  return +[PHInCallRootViewController releaseDismissalAssertionForReason:](PHInCallRootViewController, "releaseDismissalAssertionForReason:", CFSTR("PHDismissalReasonWaitingForHandoff"));
}

void sub_1000C0394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C03B8(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v4 = WeakRetained;
    objc_msgSend(WeakRetained, "removePIPPlaceholderView");
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pipController"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "viewControllerToRestoreWhenCancellingPIP"));

    objc_msgSend(v4, "_handlePiPEndedAndShouldBePresentedFullScreen:transitionIsComplete:viewControllerToSteal:", 0, 1, v3);
    WeakRetained = v4;
  }

}

void sub_1000C10FC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_1000C1118(uint64_t a1, void *a2, void *a3)
{
  id *v5;
  id WeakRetained;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  unsigned __int8 v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v29;
  id v30;
  void *v31;
  id v32;
  _QWORD v33[4];
  id v34;
  _QWORD v35[4];
  id v36[2];

  v30 = a2;
  v29 = a3;
  v5 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "incomingCall"));
  objc_msgSend(v7, "suppressRingtone");

  v32 = objc_alloc_init((Class)NSMutableArray);
  v8 = objc_loadWeakRetained(v5);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "replyWithMessageStore"));
  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "defaultReplies"));

  v10 = objc_loadWeakRetained(v5);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "replyWithMessageStore"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "customReplies"));

  v13 = 0;
  do
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectAtIndex:", v13));
    if (objc_msgSend(v14, "length"))
    {
      v15 = v14;
      v16 = 0;
    }
    else
    {
      v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "objectAtIndex:", v13));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&off_1002972D8, "objectAtIndex:", v13));
      if (objc_msgSend(v17, "length"))
        v16 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage systemImageNamed:](UIImage, "systemImageNamed:", v17));
      else
        v16 = 0;

    }
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472;
    v35[2] = sub_1000C14AC;
    v35[3] = &unk_1002875D0;
    objc_copyWeak(v36, v5);
    v36[1] = v13;
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[UIAction actionWithTitle:image:identifier:handler:](UIAction, "actionWithTitle:image:identifier:handler:", v15, v16, 0, v35));
    objc_msgSend(v32, "addObject:", v18);

    objc_destroyWeak(v36);
    ++v13;
  }
  while (v13 != (char *)3);
  v19 = objc_loadWeakRetained(v5);
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "incomingCall"));
  v21 = objc_msgSend(v20, "hasSendCustomMessageCapability");

  if ((v21 & 1) != 0)
  {
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "localizedStringForKey:value:table:", CFSTR("CUSTOM"), &stru_10028DC20, CFSTR("InCallService")));
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_1000C1554;
    v33[3] = &unk_100285590;
    objc_copyWeak(&v34, v5);
    v24 = (void *)objc_claimAutoreleasedReturnValue(+[UIAction actionWithTitle:image:identifier:handler:](UIAction, "actionWithTitle:image:identifier:handler:", v23, 0, 0, v33));
    objc_msgSend(v32, "addObject:", v24);

    objc_destroyWeak(&v34);
  }
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "localizedStringForKey:value:table:", CFSTR("REPLY_WITH_MESSAGE_ACTION_SHEET_TITLE"), &stru_10028DC20, CFSTR("InCallService")));
  v27 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithTitle:children:](UIMenu, "menuWithTitle:children:", v26, v32));

  return v27;
}

void sub_1000C1494(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000C14AC(uint64_t a1)
{
  id *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "replyWithMessageStore"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "cannedRepliesForSending"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndex:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "sendDeclineWithMessageResponse:", v6);

  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "declineCall");

}

void sub_1000C1554(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "showCustomReplyWithMessageComposer");

}

void sub_1000C1EC8(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  void *v18;
  id v19;
  id v20;
  _QWORD v21[4];
  id v22;
  id v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "recipientHandle"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "personHandle"));

    v5 = objc_msgSend(objc_alloc((Class)INPerson), "initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:", v4, 0, 0, 0, 0, 0);
    v6 = objc_alloc((Class)INSendMessageIntent);
    v30 = v5;
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v30, 1));
    v8 = objc_msgSend(v6, "initWithRecipients:content:groupName:serviceName:sender:", v7, 0, 0, 0, 0);

    v9 = objc_msgSend(objc_alloc((Class)INInteraction), "initWithIntent:response:", v8, 0);
    objc_msgSend(v9, "setDirection:", 1);
    v10 = objc_msgSend(objc_alloc((Class)NSUserActivity), "initWithActivityType:", CFSTR("INSendMessageIntent"));
    objc_msgSend(v10, "_setInteraction:donate:", v9, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "incomingCall"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "provider"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "bundleIdentifier"));

    v14 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationProxy applicationProxyForIdentifier:](LSApplicationProxy, "applicationProxyForIdentifier:", v13));
    v28 = FBSOpenApplicationOptionKeyUnlockDevice;
    v29 = &__kCFBooleanTrue;
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v29, &v28, 1));
    v16 = sub_1000C5588();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v25 = v10;
      v26 = 2112;
      v27 = v13;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Opening user activity %@ for bundle identifier %@", buf, 0x16u);
    }

    v18 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"));
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_1000C21AC;
    v21[3] = &unk_100287640;
    v22 = v10;
    v23 = v14;
    v19 = v14;
    v20 = v10;
    objc_msgSend(v18, "openUserActivity:withApplicationProxy:options:completionHandler:", v20, v19, v15, v21);

  }
}

void sub_1000C21AC(uint64_t a1, int a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;

  v5 = a3;
  v6 = sub_1000C5588();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  if (a2)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v9 = *(_QWORD *)(a1 + 32);
      v10 = *(_QWORD *)(a1 + 40);
      v11 = 138412546;
      v12 = v9;
      v13 = 2112;
      v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Successfully opened user activity %@ for application %@", (uint8_t *)&v11, 0x16u);
    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    sub_1001AA6D0(a1, (uint64_t)v5, v8);
  }

}

void sub_1000C24EC(id a1)
{
  off_1002DCB58 = (_UNKNOWN *)CUTWeakLinkSymbol("CKClientComposeSendMessageWithSubscriptionIdentifier", CFSTR("ChatKit"));
}

void sub_1000C272C(id a1)
{
  off_1002DCB68 = (_UNKNOWN *)CUTWeakLinkSymbol("CKClientSetChatContextWithSubscriptionIdentifier", CFSTR("ChatKit"));
}

void sub_1000C2A48(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  id v27;
  uint8_t v28[16];
  __int128 v29;
  uint8_t buf[40];

  v5 = a2;
  v6 = a3;
  v7 = sub_1000C5588();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  if (!v5 || v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1001AA760((uint64_t)v6, v9, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)&buf[4] = v5;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Launched extension with requestIdentifier: %@ error: %@", buf, 0x16u);
    }

    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_extensionContextForUUID:", v5));
    v10 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject _auxiliaryConnection](v9, "_auxiliaryConnection"));
    v11 = v10;
    memset(buf, 0, 32);
    if (v10)
      objc_msgSend(v10, "auditToken");
    v12 = *(void **)(a1 + 40);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_extensionBundle"));
    *(_OWORD *)v28 = *(_OWORD *)buf;
    v29 = *(_OWORD *)&buf[16];
    objc_msgSend(v12, "trimDataAgainstTCCForAuditToken:bundle:", v28, v13);

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "remoteObjectProxyWithErrorHandler:", &stru_1002876A0));
    v15 = *(_QWORD *)(a1 + 40);
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_1000C2CD0;
    v26[3] = &unk_1002876C8;
    v16 = v14;
    v27 = v16;
    objc_msgSend(v16, "handleIntent:withCompletion:", v15, v26);
    v17 = sub_1000C5588();
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v19 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)v28 = 138412290;
      *(_QWORD *)&v28[4] = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Sent request to extension to handle send message intent: %@", v28, 0xCu);
    }

  }
}

void sub_1000C2C80(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a2;
  v3 = sub_1000C5588();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_1001AA7C4((uint64_t)v2, v4, v5, v6, v7, v8, v9, v10);

}

void sub_1000C2CD0(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  int v15;
  id v16;
  __int16 v17;
  id v18;
  __int16 v19;
  id v20;
  __int16 v21;
  id v22;

  v9 = a2;
  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = sub_1000C5588();
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v15 = 138413058;
    v16 = v9;
    v17 = 2112;
    v18 = v10;
    v19 = 2112;
    v20 = v11;
    v21 = 2112;
    v22 = v12;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Intent was handled with response: %@ launchContextActivityData: %@ cacheItems: %@ error: %@", (uint8_t *)&v15, 0x2Au);
  }

  objc_msgSend(*(id *)(a1 + 32), "completeTransaction");
}

id sub_1000C33F4(uint64_t a1)
{
  double v2;

  objc_msgSend(*(id *)(a1 + 32), "setHidden:", *(_BYTE *)(a1 + 48) == 0);
  v2 = 1.0;
  if (!*(_BYTE *)(a1 + 48))
    v2 = 0.0;
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", v2);
  objc_msgSend(*(id *)(a1 + 40), "setNeedsStatusBarAppearanceUpdate");
  return objc_msgSend(*(id *)(a1 + 40), "setNeedsUpdateOfHomeIndicatorAutoHidden");
}

id sub_1000C344C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setupOverlayDismissTimerIfNeeded");
}

uint64_t sub_1000C3454(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000C4210(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000C4234(uint64_t a1, void *a2)
{
  id v3;
  _QWORD block[4];
  id v5;
  id v6;
  id v7;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000C42EC;
  block[3] = &unk_100287720;
  v5 = a2;
  v3 = v5;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  v6 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v7);
}

void sub_1000C42EC(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  id WeakRetained;
  void *v5;
  id v6;
  void *v7;

  v2 = sub_1000C5748();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    sub_1001AA828(a1, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageWithRenderingMode:", 1));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "infoView"));
  objc_msgSend(v5, "setAvatarImage:", v3);

  v6 = objc_loadWeakRetained((id *)(a1 + 48));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "pipController"));
  objc_msgSend(v7, "setScreenSharingTitle:andAvatarIfNeeded:", *(_QWORD *)(a1 + 40), v3);

}

void sub_1000C4488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C44A4(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "setShowingOverlay:animated:", 0, 1);
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "overlayDismissTimer"));
    objc_msgSend(v2, "invalidate");

    objc_msgSend(v3, "setOverlayDismissTimer:", 0);
    WeakRetained = v3;
  }

}

id sub_1000C5588()
{
  if (qword_1002DCB80 != -1)
    dispatch_once(&qword_1002DCB80, &stru_100287768);
  return (id)qword_1002DCB78;
}

void sub_1000C55C8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.calls.incallservice", "Default");
  v2 = (void *)qword_1002DCB78;
  qword_1002DCB78 = (uint64_t)v1;

}

uint64_t sub_1000C55F8()
{
  if (qword_1002DCB90 != -1)
    dispatch_once(&qword_1002DCB90, &stru_100287788);
  return qword_1002DCB88;
}

void sub_1000C5638(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.calls.incallservice", "ConversationControls");
  v2 = (void *)qword_1002DCB88;
  qword_1002DCB88 = (uint64_t)v1;

}

uint64_t sub_1000C5668()
{
  if (qword_1002DCBA0 != -1)
    dispatch_once(&qword_1002DCBA0, &stru_1002877A8);
  return qword_1002DCB98;
}

void sub_1000C56A8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.calls.incallservice", "PiP");
  v2 = (void *)qword_1002DCB98;
  qword_1002DCB98 = (uint64_t)v1;

}

uint64_t sub_1000C56D8()
{
  if (qword_1002DCBB0 != -1)
    dispatch_once(&qword_1002DCBB0, &stru_1002877C8);
  return qword_1002DCBA8;
}

void sub_1000C5718(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.calls.incallservice", "Scenes");
  v2 = (void *)qword_1002DCBA8;
  qword_1002DCBA8 = (uint64_t)v1;

}

uint64_t sub_1000C5748()
{
  if (qword_1002DCBC0 != -1)
    dispatch_once(&qword_1002DCBC0, &stru_1002877E8);
  return qword_1002DCBB8;
}

void sub_1000C5788(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.calls.incallservice", "ScreenSharing");
  v2 = (void *)qword_1002DCBB8;
  qword_1002DCBB8 = (uint64_t)v1;

}

uint64_t sub_1000C57B8()
{
  if (qword_1002DCBD0 != -1)
    dispatch_once(&qword_1002DCBD0, &stru_100287808);
  return qword_1002DCBC8;
}

void sub_1000C57F8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.calls.incallservice", "ScreenTime");
  v2 = (void *)qword_1002DCBC8;
  qword_1002DCBC8 = (uint64_t)v1;

}

uint64_t sub_1000C5828()
{
  if (qword_1002DCBE0 != -1)
    dispatch_once(&qword_1002DCBE0, &stru_100287828);
  return qword_1002DCBD8;
}

void sub_1000C5868(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.calls.incallservice", "SOS");
  v2 = (void *)qword_1002DCBD8;
  qword_1002DCBD8 = (uint64_t)v1;

}

uint64_t sub_1000C5898()
{
  if (qword_1002DCBF0 != -1)
    dispatch_once(&qword_1002DCBF0, &stru_100287848);
  return qword_1002DCBE8;
}

void sub_1000C58D8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.calls.incallservice", "AmbientScene");
  v2 = (void *)qword_1002DCBE8;
  qword_1002DCBE8 = (uint64_t)v1;

}

void sub_1000C64FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C6524(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "showMessagesButtonPressed");

}

void sub_1000C71A8(id a1)
{
  PHInCallOrientationMonitor *v1;
  void *v2;

  v1 = objc_alloc_init(PHInCallOrientationMonitor);
  v2 = (void *)qword_1002DCBF8;
  qword_1002DCBF8 = (uint64_t)v1;

}

void sub_1000C7268(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  id v4;
  NSObject *v5;
  const __CFString *v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  const __CFString *v13;
  const __CFString *v14;
  const __CFString *v15;
  id v16;
  int v17;
  const __CFString *v18;
  __int16 v19;
  const __CFString *v20;

  v2 = a2;
  v3 = objc_msgSend(v2, "isSpringBoardInterfaceOrientationLocked");
  v4 = sub_1000C5588();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = CFSTR("NO");
    if ((_DWORD)v3)
      v6 = CFSTR("YES");
    v17 = 138412290;
    v18 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SpringBoardOrientationLockChangedNotification: Orientation is locked: %@", (uint8_t *)&v17, 0xCu);
  }

  if ((_DWORD)v3)
  {
    v7 = objc_msgSend(v2, "springBoardLockedInterfaceOrientation");
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIDevice currentDevice](UIDevice, "currentDevice"));
    v9 = (unint64_t)objc_msgSend(v8, "userInterfaceIdiom");

    v10 = sub_1000C5588();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    if ((v9 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    {
      if (v12)
      {
        if (v7 == (id)1)
        {
          v13 = CFSTR("UIInterfaceOrientationPortrait");
        }
        else if (v7 == (id)3)
        {
          v13 = CFSTR("UIInterfaceOrientationLandscapeRight");
        }
        else if (v7 == (id)4)
        {
          v13 = CFSTR("UIInterfaceOrientationLandscapeLeft");
        }
        else
        {
          v13 = CFSTR("UIInterfaceOrientationPortraitUpsideDown");
          if (v7 != (id)2)
            v13 = 0;
        }
        v17 = 138412290;
        v18 = v13;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "SpringBoardOrientationLockChangedNotification: SpringBoard is locked to %@", (uint8_t *)&v17, 0xCu);
      }

    }
    else
    {
      if (v12)
      {
        if (v7 == (id)1)
        {
          v14 = CFSTR("UIInterfaceOrientationPortrait");
        }
        else if (v7 == (id)3)
        {
          v14 = CFSTR("UIInterfaceOrientationLandscapeRight");
        }
        else if (v7 == (id)4)
        {
          v14 = CFSTR("UIInterfaceOrientationLandscapeLeft");
        }
        else if (v7 == (id)2)
        {
          v14 = CFSTR("UIInterfaceOrientationPortraitUpsideDown");
        }
        else
        {
          v14 = 0;
        }
        if (objc_msgSend(v2, "currentOrientation") == (id)1)
        {
          v15 = CFSTR("UIInterfaceOrientationPortrait");
        }
        else if (objc_msgSend(v2, "currentOrientation") == (id)4)
        {
          v15 = CFSTR("UIInterfaceOrientationLandscapeLeft");
        }
        else if (objc_msgSend(v2, "currentOrientation") == (id)3)
        {
          v15 = CFSTR("UIInterfaceOrientationLandscapeRight");
        }
        else
        {
          v16 = objc_msgSend(v2, "currentOrientation");
          v15 = CFSTR("UIInterfaceOrientationPortraitUpsideDown");
          if (v16 != (id)2)
            v15 = 0;
        }
        v17 = 138412546;
        v18 = v14;
        v19 = 2112;
        v20 = v15;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "SpringBoardOrientationLockChangedNotification: SpringBoard is locked to %@, but using %@", (uint8_t *)&v17, 0x16u);
      }

      v7 = objc_msgSend(v2, "currentOrientation");
    }
    objc_msgSend(v2, "setLockedOrientation:", v7);
  }
  objc_msgSend(v2, "setIsOrientationLocked:", v3);

}

void sub_1000C7F78(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1002DCC18;
  qword_1002DCC18 = (uint64_t)v1;

}

void sub_1000C8040(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1002DCC28;
  qword_1002DCC28 = (uint64_t)v1;

}

void sub_1000C8F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C8F8C(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v12 = WeakRetained;
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "callCenter"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "incomingCall"));

    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "featureFlags"));
    v5 = TUCallScreeningEnabled(v4, 0);

    if (v5 && !v3)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "callCenter"));
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "screeningCall"));

    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "bottomBar"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "controlForActionType:", 12));

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "bottomBar"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "controlForActionType:", 9));

    if (!v10)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "bottomBar"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "controlForActionType:", 11));

    }
    if (v3 && v10)
      objc_msgSend(v12, "configureDeclineWithReminderButton:declineWithMessageButton:forIncomingCall:", v8, v10, v3);

    WeakRetained = v12;
  }

}

void sub_1000C97CC(uint64_t a1)
{
  void *v1;
  void *v2;
  double v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callParticipantsViewController"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "layer"));
  LODWORD(v3) = 0;
  objc_msgSend(v2, "setOpacity:", v3);

}

id sub_1000C9828(uint64_t a1)
{
  void *v2;
  _QWORD v4[5];

  objc_msgSend(*(id *)(a1 + 32), "resetParticipantsViewConstraints");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "layoutIfNeeded");

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000C98B8;
  v4[3] = &unk_100284898;
  v4[4] = *(_QWORD *)(a1 + 32);
  return +[UIView animateWithDuration:animations:](UIView, "animateWithDuration:animations:", v4, 0.400000006);
}

void sub_1000C98B8(uint64_t a1)
{
  void *v1;
  void *v2;
  double v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callParticipantsViewController"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "layer"));
  LODWORD(v3) = 1.0;
  objc_msgSend(v2, "setOpacity:", v3);

}

void sub_1000C9914(uint64_t a1)
{
  int v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v2 = *(unsigned __int8 *)(a1 + 40);
  v3 = *(void **)(a1 + 32);
  if (v2)
  {
    objc_msgSend(v3, "resetParticipantsViewConstraints");
    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    objc_msgSend(v7, "layoutIfNeeded");
  }
  else
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "callParticipantsViewController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
    objc_msgSend(v5, "setNeedsLayout");

    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callParticipantsViewController"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "view"));
    objc_msgSend(v6, "layoutIfNeeded");

  }
}

void sub_1000CD888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CD8A4(uint64_t a1, int a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id location;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[CNContactStoreConfiguration tu_contactStoreConfigurationForCall:](CNContactStoreConfiguration, "tu_contactStoreConfigurationForCall:", *(_QWORD *)(a1 + 32)));
    v4 = objc_msgSend(objc_alloc((Class)CNContactStore), "initWithConfiguration:", v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contactIdentifier"));

    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contactIdentifier"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[PHAudioCallViewController contactKeysToFetch](PHAudioCallViewController, "contactKeysToFetch"));
      v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "contactForIdentifier:keysToFetch:", v6, v7));

      v9 = (void *)objc_claimAutoreleasedReturnValue(+[CNContactViewController viewControllerForContact:](CNContactViewController, "viewControllerForContact:", v8));
      if (v8)
      {
LABEL_7:
        objc_msgSend(v9, "setContactStore:", v4);
        objc_msgSend(v9, "setShouldShowSharedProfileBanner:", 1);
        objc_msgSend(v9, "setDelegate:", *(_QWORD *)(a1 + 40));
        v13 = objc_msgSend(objc_alloc((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, *(_QWORD *)(a1 + 40), "dismissNavigationController");
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "navigationItem"));
        objc_msgSend(v14, "setLeftBarButtonItem:", v13);

        v15 = objc_msgSend(objc_alloc((Class)UINavigationController), "initWithRootViewController:", v9);
        objc_initWeak(&location, *(id *)(a1 + 40));
        v16 = *(void **)(a1 + 40);
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472;
        v17[2] = sub_1000CDB1C;
        v17[3] = &unk_100285F88;
        objc_copyWeak(&v18, &location);
        objc_msgSend(v16, "presentViewController:animated:completion:", v15, 1, v17);
        objc_destroyWeak(&v18);
        objc_destroyWeak(&location);

        return;
      }
    }
    else
    {
      v9 = 0;
    }
    v10 = objc_alloc((Class)CNMutableContact);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handle"));
    v8 = objc_msgSend(v10, "initWithHandle:", v11);

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[CNContactViewController viewControllerForUnknownContact:](CNContactViewController, "viewControllerForUnknownContact:", v8));
    objc_msgSend(v12, "setActions:", (unint64_t)objc_msgSend(v12, "actions") | 0x80);
    v9 = v12;
    goto LABEL_7;
  }
}

void sub_1000CDB00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CDB1C(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000CDB94;
  block[3] = &unk_100285F88;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_1000CDB94(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "inCallRootViewController"));
  objc_msgSend(v1, "updateDesiredSpringboardBehavior");

}

void sub_1000CDBD8(uint64_t a1, int a2)
{
  id WeakRetained;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (a2)
  {
    v5 = WeakRetained;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "callDetailsCoordinator"));
    objc_msgSend(v4, "startWithReason:", CFSTR("PHAudioCallViewController requested call details"));

    WeakRetained = v5;
  }

}

void sub_1000CE4B8(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1000CE5EC;
  v13[3] = &unk_100285158;
  v2 = *(_QWORD *)(a1 + 32);
  v14 = *(id *)(a1 + 40);
  v15 = *(id *)(a1 + 48);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000CE61C;
  v6[3] = &unk_1002878D8;
  v7 = *(id *)(a1 + 32);
  v8 = *(id *)(a1 + 40);
  v3 = *(id *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 64);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = *(id *)(a1 + 72);
  +[UIView transitionWithView:duration:options:animations:completion:](UIView, "transitionWithView:duration:options:animations:completion:", v2, 1048832, v13, v6, 0.4);

}

id sub_1000CE5EC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 0.0);
}

void sub_1000CE61C(uint64_t a1)
{
  dispatch_time_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;

  v2 = dispatch_time(0, 2000000000);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000CE6F8;
  v6[3] = &unk_100287900;
  v7 = *(id *)(a1 + 32);
  v8 = *(id *)(a1 + 40);
  v3 = *(id *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 64);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = *(id *)(a1 + 72);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, v6);

}

void sub_1000CE6F8(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1000CE82C;
  v13[3] = &unk_100285158;
  v2 = *(_QWORD *)(a1 + 32);
  v14 = *(id *)(a1 + 40);
  v15 = *(id *)(a1 + 48);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000CE85C;
  v6[3] = &unk_1002878D8;
  v7 = *(id *)(a1 + 48);
  v8 = *(id *)(a1 + 40);
  v3 = *(id *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 64);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = *(id *)(a1 + 72);
  +[UIView transitionWithView:duration:options:animations:completion:](UIView, "transitionWithView:duration:options:animations:completion:", v2, 2097408, v13, v6, 0.4);

}

id sub_1000CE82C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 1.0);
}

void sub_1000CE85C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 48), "removeFromSuperview");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "callDetailsViewButton"));
  objc_msgSend(v2, "setAlpha:", 1.0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  objc_msgSend(v3, "setBool:forKey:", 1, CFSTR("PHInCallUIInfoButtonCoinFlipKey"));

  if ((+[CNSharedProfileStateOracle contactIsInAutoUpdateState:](CNSharedProfileStateOracle, "contactIsInAutoUpdateState:", *(_QWORD *)(a1 + 64)) & 1) == 0)
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "imNicknameProvider"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "pendingNickname"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "handle"));
    objc_msgSend(v6, "markTransitionAsObservedForHandleID:isAutoUpdate:", v5, 0);

  }
}

void sub_1000CEAB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CEAD4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000CEB78;
  v5[3] = &unk_100285028;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1000CEB78(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setSnapshottedPosterImageToUseForColorInversion:", *(_QWORD *)(a1 + 32));
  objc_msgSend(WeakRetained, "invertNecessaryUIElementsBasedOnPosterImage:", *(_QWORD *)(a1 + 32));

}

void sub_1000CEED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  _DWORD v10[2];

  if (!a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "setHasInvertedUIElementColorsBasedOnPoster:", 1);
    v5 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v10[0] = 67109120;
      v10[1] = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "SNAP: bottomButtons prefers white text = %d", (uint8_t *)v10, 8u);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buttonsViewController"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "view"));

    objc_msgSend(v8, "setPrefersWhiteButtonTextColor:", a2);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bottomBar"));
    objc_msgSend(v9, "setPrefersWhiteButtonTextColor:", a2);

  }
}

id *sub_1000CF11C(id *result, uint64_t a2, uint64_t a3)
{
  id *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _DWORD v10[2];

  if (!a3)
  {
    v4 = result;
    objc_msgSend(result[4], "setHasInvertedUIElementColorsBasedOnPoster:", 1);
    v5 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v10[0] = 67109120;
      v10[1] = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "SNAP: callDetailsButton prefers white text = %d", (uint8_t *)v10, 8u);
    }

    if ((_DWORD)a2)
      v7 = objc_claimAutoreleasedReturnValue(+[UIColor whiteColor](UIColor, "whiteColor"));
    else
      v7 = objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
    v8 = (void *)v7;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4[4], "callDetailsViewButton"));
    objc_msgSend(v9, "setTintColor:", v8);

    return (id *)objc_msgSend(v4[4], "invertColorCallRecordingButtonColor:", a2);
  }
  return result;
}

id *sub_1000CF3EC(id *result, int a2, uint64_t a3)
{
  id *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  _DWORD v8[2];

  if (!a3)
  {
    v4 = result;
    objc_msgSend(result[4], "setHasInvertedUIElementColorsBasedOnPoster:", 1);
    v5 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v8[0] = 67109120;
      v8[1] = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "SNAP: posterBadgeView prefers white text = %d", (uint8_t *)v8, 8u);
    }

    if (a2)
      v7 = 1;
    else
      v7 = 2;
    return (id *)objc_msgSend(v4[5], "setTheme:", v7);
  }
  return result;
}

void sub_1000CFEAC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "view"));
  objc_msgSend(v5, "addSubview:", v4);

  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bottomAnchor"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "topAnchor"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "constraintEqualToAnchor:constant:", v6, -30.0));
  objc_msgSend(v7, "setActive:", 1);

}

BOOL sub_1000D102C(id a1, TUCall *a2)
{
  return -[TUCall isEndpointOnCurrentDevice](a2, "isEndpointOnCurrentDevice") ^ 1;
}

id sub_1000D10A0(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_isScreeningCallGroup:", a2);
}

void sub_1000D16DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D16F8(uint64_t a1)
{
  id *v2;
  id v3;
  void *v4;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bottomBar"));
  objc_msgSend(v3, "_testing_finishedAnimatingToActiveCallState:", v4);

  if (*(_BYTE *)(a1 + 40))
  {
    WeakRetained = objc_loadWeakRetained(v2);
    objc_msgSend(WeakRetained, "revealAudioRoutingDeviceListAnimatedIfNeeded");

  }
}

void sub_1000D1884(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  dispatch_time_t v8;
  _QWORD v9[5];
  __int16 v10;
  CGAffineTransform v11;
  CGAffineTransform v12;
  CGAffineTransform v13;
  CGAffineTransform v14;
  CGAffineTransform v15;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "posterNameViewModel"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "posterNameTextView"));
  v4 = objc_msgSend(v3, "layout");

  if (v4 != (id)1)
  {
    memset(&v15, 0, sizeof(v15));
    CGAffineTransformMakeScale(&v15, 1.03, 1.03);
    v14 = v15;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderingViewController"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
    v13 = v14;
    objc_msgSend(v6, "setTransform:", &v13);

    v12 = v15;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "alwaysOnDisplayDimmingView"));
    v11 = v12;
    objc_msgSend(v7, "setTransform:", &v11);

  }
  if (objc_msgSend(*(id *)(a1 + 32), "shouldShowNewPosterUpdates"))
  {
    v8 = dispatch_time(0, 950000000);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1000D1A0C;
    v9[3] = &unk_100284AF8;
    v9[4] = *(_QWORD *)(a1 + 32);
    v10 = *(_WORD *)(a1 + 40);
    dispatch_after(v8, (dispatch_queue_t)&_dispatch_main_q, v9);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_updatePosterStatusLabelForState:", *(unsigned __int16 *)(a1 + 40));
  }
}

id sub_1000D1A0C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updatePosterStatusLabelForState:", *(unsigned __int16 *)(a1 + 40));
}

id sub_1000D2090(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "posterNameViewModel"));
  objc_msgSend(v2, "transitionCallToActiveStateAnimated:", *(unsigned __int8 *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 32), "_updateStatusLabelVisibility");
}

id *sub_1000D2F58(id *result, int a2)
{
  id *v2;

  if (a2)
  {
    v2 = result;
    result = (id *)objc_msgSend(result[4], "isTTY");
    if ((result & 1) == 0)
      return (id *)objc_msgSend(v2[5], "revealAudioRoutingDeviceListAnimatedIfNeeded");
  }
  return result;
}

void sub_1000D3120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D313C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id *v4;
  id WeakRetained;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint8_t v10[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "PHAudioCallViewController,setCurrentState,PHInCallStateCallBuffer,disable 6-up buttons", v10, 2u);
  }

  v4 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentMiddleView"));
  objc_msgSend(v6, "setButtonsEnabled:", 0);

  v7 = objc_loadWeakRetained(v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "currentMiddleView"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "buttonForControlType:", 15));
  objc_msgSend(v9, "setEnabled:", 1);

}

void sub_1000D3FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  id *v33;
  uint64_t v34;

  _Block_object_dispose(&a22, 8);
  _Block_object_dispose((const void *)(v34 - 176), 8);
  objc_destroyWeak(v33);
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_1000D4018(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

void sub_1000D4024(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

void sub_1000D402C(uint64_t a1, int a2)
{
  id WeakRetained;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  const __CFString *v9;
  int v10;
  const __CFString *v11;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40));
  if (WeakRetained)
  {
    v5 = a2 ^ 1u;
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    if (*(unsigned __int8 *)(v6 + 24) != (_DWORD)v5)
    {
      *(_BYTE *)(v6 + 24) = v5;
      v7 = sub_1000C5588();
      v8 = objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
          v9 = CFSTR("YES");
        else
          v9 = CFSTR("NO");
        v10 = 138412290;
        v11 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Audio: setCurrentState: stateChangeLockObservation: wasUnlocked: %@", (uint8_t *)&v10, 0xCu);
      }

      objc_msgSend(WeakRetained, "setScreeningState:animated:overrideWithIsUnlocked:", *(unsigned __int16 *)(a1 + 48), 1, v5);
    }
  }

}

void sub_1000D4148(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  NSObject *v9;
  const __CFString *v10;
  uint64_t v11;
  int v12;
  const __CFString *v13;
  __int16 v14;
  uint64_t v15;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "traitCollection"));
    v5 = objc_msgSend(v4, "_backlightLuminance");
    v6 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);

    if (v5 != v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "traitCollection"));
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v7, "_backlightLuminance");

      v8 = sub_1000C5588();
      v9 = objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10 = CFSTR("NO");
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
          v10 = CFSTR("YES");
        v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        v12 = 138412546;
        v13 = v10;
        v14 = 2048;
        v15 = v11;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Audio: setCurrentState: stateDisplayChangedObservation: wasUnlocked: %@ with luminance: %ld", (uint8_t *)&v12, 0x16u);
      }

      objc_msgSend(v3, "setScreeningState:animated:overrideWithIsUnlocked:", *(unsigned __int16 *)(a1 + 56), 1, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
    }
  }

}

id sub_1000D4790(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updatePosterStatusLabelForState:", *(unsigned __int16 *)(a1 + 40));
}

id sub_1000D7AD4(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "setBackgroundColor:", *(_QWORD *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 32), "removeBackgroundContactImageView");
}

uint64_t sub_1000D7B10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1000D805C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 544), "setAlpha:", 1.0);
}

id sub_1000D8074(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 544), "setImage:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 544), "setAlpha:", 1.0);
}

void sub_1000D8FC0(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  unsigned int v6;
  _QWORD v7[4];
  id v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained
    && (v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "screeningPosterNameViewModel"))) != 0
    && (v4 = (void *)v3,
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "screeningPosterNameViewModel")),
        v6 = objc_msgSend(v5, "isVisible"),
        v5,
        v4,
        !v6))
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000D9098;
    v7[3] = &unk_100284898;
    v8 = v2;
    +[UIView animateWithDuration:animations:](UIView, "animateWithDuration:animations:", v7, 0.3);

  }
  else
  {
    objc_msgSend(v2, "_updateStatusLabelVisibility");
  }

}

id sub_1000D9098(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_updatePosterNameAlpha");
  return objc_msgSend(*(id *)(a1 + 32), "_updateStatusLabelVisibility");
}

void sub_1000D98F0(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 40);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v3, 1));
  objc_msgSend(*(id *)(a1 + 32), "setBackgroundEffects:", v2);

}

void sub_1000D9974(uint64_t a1)
{
  _QWORD v2[4];
  id v3;
  _QWORD v4[4];
  id v5;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000D9A58;
  v4[3] = &unk_100284898;
  v5 = *(id *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000D9A68;
  v2[3] = &unk_1002848C0;
  v3 = *(id *)(a1 + 32);
  +[UIView _animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:](UIView, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v4, v2, 0.4, 0.0, 2.0, 300.0, 50.0, 0.0);

}

id sub_1000D9A58(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBackgroundEffects:", &__NSArray0__struct);
}

id sub_1000D9A68(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

void sub_1000D9B98(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[5];
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000D9C70;
  v8[3] = &unk_100285158;
  v2 = *(id *)(a1 + 32);
  v4 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v9 = v2;
  v10 = v3;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000D9CB0;
  v5[3] = &unk_100287A38;
  v5[4] = v3;
  v6 = v4;
  v7 = *(id *)(a1 + 48);
  +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", v8, v5, 0.5);

}

id sub_1000D9C70(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  return objc_msgSend(*(id *)(a1 + 40), "setParticipantsViewShouldShowParticipantLabel:", 1);
}

uint64_t sub_1000D9CB0(uint64_t a1)
{
  void *v2;
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "removeChildViewController:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v2, "removeFromSuperview");

  objc_msgSend(*(id *)(a1 + 40), "didMoveToParentViewController:", 0);
  objc_msgSend(*(id *)(a1 + 32), "_updateStatusLabelVisibility");
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1000DA0F0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  double v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  _QWORD v19[4];
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD v24[4];
  id v25;
  uint64_t v26;
  id v27;

  if (*(_BYTE *)(a1 + 72))
  {
    v2 = *(void **)(a1 + 32);
    v3 = *(_QWORD *)(a1 + 40);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "posterNameViewModel"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "priorityPosterNameTextView"));
    objc_msgSend(v2, "addPosterBlurToPosterVC:nameLabelWrapper:", v3, v5);

  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "view"));
  v7 = v6;
  if (v6)
    v8 = v6;
  else
    v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "snapshotUIImageView"));
  v9 = v8;

  if (!*(_QWORD *)(a1 + 48))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundImageView"));
    objc_msgSend(v10, "insertSubview:above:", v9, v11);

  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v12, "setAlpha:", 0.0);

  v13 = *(double *)(a1 + 64);
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_1000DA2D0;
  v24[3] = &unk_100285360;
  v14 = *(id *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 32);
  v25 = v14;
  v26 = v15;
  v27 = v9;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1000DA324;
  v19[3] = &unk_100287A60;
  v16 = *(id *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 32);
  v20 = v16;
  v21 = v17;
  v22 = v27;
  v23 = *(id *)(a1 + 56);
  v18 = v27;
  +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", v24, v19, v13);

}

id sub_1000DA2D0(id *a1)
{
  double v2;
  double v3;
  void *v4;

  objc_msgSend(a1[5], "viewAlphaForPosterRenderingViewController");
  v3 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "view"));
  objc_msgSend(v4, "setAlpha:", v3);

  return objc_msgSend(a1[6], "setAlpha:", 0.0);
}

uint64_t sub_1000DA324(uint64_t a1)
{
  void *v2;
  uint64_t result;

  if (*(_QWORD *)(a1 + 32))
    objc_msgSend(*(id *)(a1 + 40), "removeChildViewController:");
  objc_msgSend(*(id *)(a1 + 48), "removeFromSuperview");
  v2 = *(void **)(a1 + 32);
  if (v2)
    objc_msgSend(v2, "didMoveToParentViewController:", 0);
  result = *(_QWORD *)(a1 + 56);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1000DAF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  id *v10;
  uint64_t v11;

  objc_destroyWeak(v10);
  objc_destroyWeak((id *)(v11 - 160));
  _Unwind_Resume(a1);
}

void sub_1000DAFC8(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint8_t v10[8];
  _QWORD v11[5];

  objc_msgSend(*(id *)(a1 + 32), "_updateStatusLabelVisibility");
  if (*(_BYTE *)(a1 + 48))
  {
    if (*(_QWORD *)(a1 + 40) == 3)
    {
      v2 = *(void **)(a1 + 32);
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_1000DB110;
      v11[3] = &unk_100287AB0;
      v11[4] = v2;
      objc_msgSend(v2, "finishNewPosterUpdatesWithCompletion:", v11);
    }
  }
  else
  {
    v3 = sub_1000C5588();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SNAP: Fading out poster, set up background image as needed", v10, 2u);
    }

    v5 = *(void **)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "frontmostCall"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "contactImageDataForCall:", v6));

    v8 = *(void **)(a1 + 32);
    if (v7)
    {
      v9 = objc_msgSend(objc_alloc((Class)UIImage), "initWithData:", v7);
      objc_msgSend(v8, "updateBackgroundContactImageViewWithImage:animated:", v9, 1);

      objc_msgSend(*(id *)(a1 + 32), "updateLegacyBackgroundImageVisibilityWithShouldShowWallpaper:", 0);
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "addDefaultBackgroundGradientView");
    }

  }
}

void sub_1000DB110(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  uint8_t v12[16];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "contact"));
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "fullscreenImageData"));
  if (v5)
  {
    v6 = (void *)v5;

LABEL_4:
    v8 = *(void **)(a1 + 32);
    v9 = objc_msgSend(objc_alloc((Class)UIImage), "initWithData:", v6);
    objc_msgSend(v8, "updateBackgroundContactImageViewWithImage:animated:", v9, 1);

    objc_msgSend(*(id *)(a1 + 32), "updateLegacyBackgroundImageVisibilityWithShouldShowWallpaper:", 0);
    goto LABEL_5;
  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "contact"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "imageData"));

  if (v6)
    goto LABEL_4;
  v10 = sub_1000C5588();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "SNAP: Fading out poster, but there is no contact image data either, setting up default blur background in this case", v12, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "addDefaultBackgroundGradientView");
LABEL_5:

}

void sub_1000DB22C(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "suspendPosterAndCancelDelay:", 0);
    objc_msgSend(v2, "setSuspendPosterAfterDelayBlock:", 0);
    WeakRetained = v2;
  }

}

id sub_1000DB26C(uint64_t a1, int a2)
{
  id WeakRetained;
  _BOOL8 v5;
  void *v6;
  void *v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = objc_msgSend(WeakRetained, "currentState") == 2
    || objc_msgSend(WeakRetained, "currentState") == 4;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contactToDisplayInCallWallpaperForCall:", *(_QWORD *)(a1 + 32)));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[TPIncomingCallMetricsProvider appropriateCallerNameViewForContact:callStatus:callIsActive:](TPIncomingCallMetricsProvider, "appropriateCallerNameViewForContact:callStatus:callIsActive:", v6, *(_QWORD *)(a1 + 40), v5));

  if (a2)
    objc_msgSend(WeakRetained, "applyWallpaperTitleStyleAttributesToTextViewWrapper:", v7);

  return v7;
}

id *sub_1000DB320(id *result)
{
  if (*((_BYTE *)result + 48))
  {
    if (result[5] == (id)3)
      return (id *)objc_msgSend(result[4], "finishNewPosterUpdatesWithCompletion:", 0);
  }
  return result;
}

void sub_1000DBA90(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[15];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[CNContactViewController descriptorForRequiredKeys](CNContactViewController, "descriptorForRequiredKeys", CNContactImageDataAvailableKey, CNContactFullscreenImageDataKey, CNContactWallpaperKey, CNContactWallpaperMetadataKey, CNContactEmailAddressesKey, CNContactPhoneNumbersKey, CNContactSharedPhotoDisplayPreferenceKey, CNContactGivenNameKey, CNContactFamilyNameKey, CNContactNicknameKey, CNContactOrganizationNameKey, CNContactCreationDateKey));
  v6[12] = v1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CNMeCardSharingSettingsViewController descriptorForRequiredKeys](CNMeCardSharingSettingsViewController, "descriptorForRequiredKeys"));
  v6[13] = v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPersonNameComponents descriptorForUsedKeys](NSPersonNameComponents, "descriptorForUsedKeys"));
  v6[14] = v3;
  v4 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 15));
  v5 = (void *)qword_1002DCC38;
  qword_1002DCC38 = v4;

}

void sub_1000DC134(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 208), "view"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 328), "view"));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

void sub_1000DC1A8(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 208), "view"));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

void sub_1000DC210(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "removeFromSuperview");

  objc_msgSend(*(id *)(a1 + 32), "removeFromParentViewController");
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(void **)(v3 + 328);
  *(_QWORD *)(v3 + 328) = 0;

}

void sub_1000DCAF8(uint64_t a1, int a2)
{
  void *v3;
  id v4;

  if (a2)
  {
    if (+[PHUIConfiguration shouldUseFullScreenPeoplePicker](PHUIConfiguration, "shouldUseFullScreenPeoplePicker"))
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[PHInCallUtilities sharedInstance](PHInCallUtilities, "sharedInstance"));
      objc_msgSend(v3, "setRequestedVCPresentationWithStatusBar:withReasonLog:", 1, CFSTR("Requested presentation of contacts UI"));

    }
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "inCallRootViewController"));
    objc_msgSend(v4, "presentContactsViewControllerForView:", *(_QWORD *)(a1 + 40));

  }
}

void sub_1000DCC64(uint64_t a1, int a2)
{
  void *v3;
  id v4;

  if (a2)
  {
    if (+[PHUIConfiguration shouldUseFullScreenPeoplePicker](PHUIConfiguration, "shouldUseFullScreenPeoplePicker"))
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[PHInCallUtilities sharedInstance](PHInCallUtilities, "sharedInstance"));
      objc_msgSend(v3, "setRequestedVCPresentationWithStatusBar:withReasonLog:", 1, CFSTR("Requested presentation of Add Call UI"));

    }
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "inCallRootViewController"));
    objc_msgSend(v4, "presentPhoneRemoteViewControllerForView:", *(_QWORD *)(a1 + 40));

  }
}

void sub_1000DCE20(uint64_t a1, int a2)
{
  void *v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  int v18;
  id v19;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callCenter"));
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "callWithStatus:", 1));
    if (v4)
    {
      v5 = v4;

    }
    else
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callCenter"));
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "callWithStatus:", 2));

      if (!v5)
      {
        v15 = sub_1000C5588();
        v5 = objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
        {
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callCenter"));
          v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "currentCalls"));
          v18 = 138412290;
          v19 = v17;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[WARN] Was told to request video presentation but no active or held call was found in calls: %@", (uint8_t *)&v18, 0xCu);

        }
        goto LABEL_8;
      }
    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject provider](v5, "provider"));
    v8 = objc_msgSend(objc_alloc((Class)TUDialRequest), "initWithProvider:", v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject handle](v5, "handle"));
    objc_msgSend(v8, "setHandle:", v9);

    v10 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject contactIdentifier](v5, "contactIdentifier"));
    objc_msgSend(v8, "setContactIdentifier:", v10);

    v11 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject localSenderIdentityUUID](v5, "localSenderIdentityUUID"));
    objc_msgSend(v8, "setLocalSenderIdentityUUID:", v11);

    objc_msgSend(v8, "setVideo:", 1);
    v12 = sub_1000C5588();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v18 = 138412290;
      v19 = v8;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Requesting video via dial request: %@", (uint8_t *)&v18, 0xCu);
    }

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callCenter"));
    objc_msgSend(v14, "launchAppForDialRequest:completion:", v8, 0);

LABEL_8:
  }
}

uint64_t sub_1000E0788(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

id sub_1000E07A0(uint64_t a1, int a2)
{
  void *v3;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bottomBar"));
    objc_msgSend(v3, "setCurrentState:animated:animationCompletionBlock:", 11, 0, 0);

  }
  return objc_msgSend(*(id *)(a1 + 32), "updateBottomBarAlphaWithCurrentState:", objc_msgSend(*(id *)(a1 + 32), "currentState"));
}

id sub_1000E07F8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_1000E0804(id *a1)
{
  void *v2;
  unsigned __int8 v3;
  id v4;
  __int128 v5;
  id v6;
  CGAffineTransform v8;
  CGAffineTransform v9;
  _OWORD v10[3];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "features"));
  v3 = objc_msgSend(v2, "isButtonLayoutEnabled");

  if ((v3 & 1) == 0)
  {
    v4 = a1[5];
    v5 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v10[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v10[1] = v5;
    v10[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    objc_msgSend(v4, "setTransform:", v10);
    CGAffineTransformMakeScale(&v9, 0.100000001, 0.100000001);
    v6 = a1[6];
    v8 = v9;
    objc_msgSend(v6, "setTransform:", &v8);
  }
  objc_msgSend(a1[6], "setAlpha:", 0.0);
  return objc_msgSend(a1[5], "setAlpha:", 1.0);
}

uint64_t sub_1000E08BC(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  void *v4;
  __int128 v5;
  uint64_t result;
  _OWORD v7[3];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "features"));
  v3 = objc_msgSend(v2, "isButtonLayoutEnabled");

  if ((v3 & 1) == 0)
  {
    v4 = *(void **)(a1 + 40);
    v5 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v7[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v7[1] = v5;
    v7[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    objc_msgSend(v4, "setTransform:", v7);
  }
  objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 1.0);
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

id *sub_1000E0954(id *result, int a2)
{
  id *v2;
  void *v3;

  if (a2)
  {
    v2 = result;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(result[4], "bottomBar"));
    objc_msgSend(v3, "setCurrentState:animated:animationCompletionBlock:", 11, 0, 0);

    return (id *)objc_msgSend(v2[4], "updateBottomBarAlphaWithCurrentState:", objc_msgSend(v2[4], "currentState"));
  }
  return result;
}

id sub_1000E09B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_1000E09BC(uint64_t a1)
{
  void *v2;
  __int128 v3;
  void *v4;
  CGAffineTransform v6;
  CGAffineTransform v7;
  _OWORD v8[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v8[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v8[1] = v3;
  v8[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v8);
  CGAffineTransformMakeScale(&v7, 0.100000001, 0.100000001);
  v4 = *(void **)(a1 + 40);
  v6 = v7;
  objc_msgSend(v4, "setTransform:", &v6);
  objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

void sub_1000E0A4C(uint64_t a1)
{
  void *v2;
  __int128 v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  _OWORD v16[3];
  uint8_t buf[4];
  void *v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  void *v22;

  v2 = *(void **)(a1 + 32);
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v16[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v16[1] = v3;
  v16[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v16);
  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  v4 = *(_QWORD *)(a1 + 48);
  if (v4)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, 1);
    v5 = sub_1000C5588();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "buttonsViewController"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "view"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "buttonsViewController"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "view"));
      objc_msgSend(v10, "alpha");
      v12 = v11;
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "buttonsViewController"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "view"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "superview"));
      *(_DWORD *)buf = 138412802;
      v18 = v8;
      v19 = 2048;
      v20 = v12;
      v21 = 2112;
      v22 = v15;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "After setting middleViewState to buttons from screening, six-up view is: %@, six-up view alpha is: %f, six-up view parent view is: %@", buf, 0x20u);

    }
  }
}

id sub_1000E0BF4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 1.0);
}

uint64_t sub_1000E0C24(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

void sub_1000E0C70(id *a1)
{
  void *v2;
  unsigned __int8 v3;
  id v4;
  id v5;
  __int128 v6;
  _OWORD v7[3];
  CGAffineTransform v8;
  CGAffineTransform v9;

  objc_msgSend(a1[4], "setAlpha:", 0.0);
  objc_msgSend(a1[5], "setAlpha:", 1.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "features"));
  v3 = objc_msgSend(v2, "isButtonLayoutEnabled");

  if ((v3 & 1) == 0)
  {
    CGAffineTransformMakeScale(&v9, 1.20000005, 1.20000005);
    v4 = a1[4];
    v8 = v9;
    objc_msgSend(v4, "setTransform:", &v8);
    v5 = a1[5];
    v6 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v7[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v7[1] = v6;
    v7[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    objc_msgSend(v5, "setTransform:", v7);
  }
}

uint64_t sub_1000E0D28(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  void *v4;
  __int128 v5;
  uint64_t result;
  _OWORD v7[3];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "features"));
  v3 = objc_msgSend(v2, "isButtonLayoutEnabled");

  if ((v3 & 1) == 0)
  {
    v4 = *(void **)(a1 + 40);
    v5 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v7[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v7[1] = v5;
    v7[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    objc_msgSend(v4, "setTransform:", v7);
  }
  objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 1.0);
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

id sub_1000E0DC0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_1000E0DCC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 1.0);
}

uint64_t sub_1000E0DFC(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

id sub_1000E0E48(uint64_t a1)
{
  void *v2;
  __int128 v3;
  void *v4;
  CGAffineTransform v6;
  CGAffineTransform v7;
  _OWORD v8[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v8[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v8[1] = v3;
  v8[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v8);
  CGAffineTransformMakeScale(&v7, 0.100000001, 0.100000001);
  v4 = *(void **)(a1 + 40);
  v6 = v7;
  objc_msgSend(v4, "setTransform:", &v6);
  objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

uint64_t sub_1000E0ED8(uint64_t a1)
{
  void *v2;
  __int128 v3;
  uint64_t result;
  _OWORD v5[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v5);
  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

uint64_t sub_1000E0F48(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t result;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buttonsViewController"));
  objc_msgSend(v4, "setUpdatesPaused:", 0);

  if ((_DWORD)a2)
    objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

id sub_1000E0FB8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

uint64_t sub_1000E0FC4(uint64_t a1, int a2)
{
  uint64_t result;

  if (a2)
    objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

id sub_1000E1008(uint64_t a1)
{
  void *v2;
  void *v3;
  __int128 v4;
  _OWORD v6[3];
  CGAffineTransform v7;
  CGAffineTransform v8;

  CGAffineTransformMakeScale(&v8, 1.20000005, 1.20000005);
  v2 = *(void **)(a1 + 32);
  v7 = v8;
  objc_msgSend(v2, "setTransform:", &v7);
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  v3 = *(void **)(a1 + 40);
  v4 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v6[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v6[1] = v4;
  v6[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v3, "setTransform:", v6);
  return objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 1.0);
}

void sub_1000E1098(uint64_t a1)
{
  void *v2;
  __int128 v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  _OWORD v16[3];
  uint8_t buf[4];
  void *v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  void *v22;

  v2 = *(void **)(a1 + 32);
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v16[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v16[1] = v3;
  v16[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v16);
  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  v4 = *(_QWORD *)(a1 + 48);
  if (v4)
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, 1);
  v5 = sub_1000C5588();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "buttonsViewController"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "view"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "buttonsViewController"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "view"));
    objc_msgSend(v10, "alpha");
    v12 = v11;
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "buttonsViewController"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "view"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "superview"));
    *(_DWORD *)buf = 138412802;
    v18 = v8;
    v19 = 2048;
    v20 = v12;
    v21 = 2112;
    v22 = v15;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "After setting middleViewState to screening, six-up view is: %@, six-up view alpha is: %f, six-up view parent view is: %@", buf, 0x20u);

  }
}

uint64_t sub_1000E1240(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1000E124C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000E3350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E337C(uint64_t a1, int a2)
{
  id WeakRetained;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(WeakRetained, "setCurrentState:", 0);

  }
}

BOOL sub_1000E3984(id a1, TUCall *a2)
{
  TUCall *v2;
  void *v3;
  BOOL v4;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[TUCall provider](v2, "provider"));
  if (objc_msgSend(v3, "isTelephonyProvider"))
    v4 = -[TUCall status](v2, "status") == 1 || -[TUCall status](v2, "status") == 2;
  else
    v4 = 0;

  return v4;
}

void sub_1000E3CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E3D18(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id to;

  v3 = a2;
  objc_copyWeak(&to, (id *)(a1 + 40));
  v4 = objc_loadWeakRetained(&to);
  objc_msgSend(v4, "blockWithHandle:", *(_QWORD *)(a1 + 32));

  v5 = objc_loadWeakRetained(&to);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "frontmostCall"));

  if (v6)
  {
    v7 = objc_loadWeakRetained(&to);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "callCenter"));
    objc_msgSend(v8, "disconnectCall:withReason:", v6, 2);

  }
  objc_destroyWeak(&to);

}

void sub_1000E3DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000E424C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setCurrentState:", 0);
}

void sub_1000E52E8(uint64_t a1)
{
  double v2;
  void *v3;
  id v4;

  if (*(_BYTE *)(a1 + 40))
    v2 = 0.0;
  else
    v2 = 1.0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentMiddleView"));
  objc_msgSend(v3, "setAlpha:", v2);

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bottomBar"));
  objc_msgSend(v4, "setAlpha:", v2);

}

void sub_1000E6030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E6044(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "revealAudioRoutingDeviceListAnimated:", 1);
    WeakRetained = v2;
  }

}

void sub_1000E6230(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bottomBar"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_1000E6314(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000E6330(uint64_t a1)
{
  void *v1;
  id v2;

  v2 = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "bottomBar"));
  objc_msgSend(v2, "_testing_finishedAnimatingToActiveCallState:", v1);

}

void sub_1000E752C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1000E755C(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  id v8;
  void *v9;
  uint8_t v10[16];

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)
                                                                            + 24)
                                                                + -1.0;
    if (*(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) <= 0.0)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "alertCountDownTimer"));
      objc_msgSend(v5, "invalidate");

      v6 = sub_1000C5588();
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "alertCountDownTimer invalidated, triggering alert", v10, 2u);
      }

      objc_msgSend(v4, "setAlertTriggeredByAutoCountdown:", 1);
      v8 = objc_loadWeakRetained(v2);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "bottomBar"));
      objc_msgSend(v4, "bottomBarActionPerformed:withCompletionState:fromBar:", 35, 1, v9);

      objc_msgSend(v4, "setAlertTriggeredByAutoCountdown:", 0);
    }
  }

}

void sub_1000E7FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E8008(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "audioCallControlsViewControllerDidTapVideoStreamingButton");

}

void sub_1000E83C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000E83E4(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "confirmationTimeoutTimer"));
  v3 = objc_msgSend(v2, "isValid");

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "confirmationTimeoutTimer"));
    objc_msgSend(v4, "invalidate");

    objc_msgSend(*(id *)(a1 + 32), "setConfirmationTimeoutTimer:", 0);
  }
  return _objc_msgSend(*(id *)(a1 + 32), "resumeCallBufferTimer");
}

void sub_1000E8450(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  void *v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "confirmationTimeoutTimer"));
  v3 = objc_msgSend(v2, "isValid");

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "confirmationTimeoutTimer"));
    objc_msgSend(v4, "invalidate");

    objc_msgSend(*(id *)(a1 + 32), "setConfirmationTimeoutTimer:", 0);
  }
  objc_msgSend(*(id *)(a1 + 32), "stopCallBufferTimer");
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bufferSingleCallLabelView"));

  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bufferSingleCallLabelView"));
    objc_msgSend(v6, "setAlpha:", 0.0);

    objc_msgSend(*(id *)(a1 + 32), "setBufferSingleCallLabelView:", 0);
  }
  objc_msgSend(*(id *)(a1 + 32), "stopMessagePlayback");
  +[PHSOSViewController releaseAllCallBufferDismissalAssertions](PHSOSViewController, "releaseAllCallBufferDismissalAssertions");
  v10 = CFSTR("PHCallBufferCompletionReasonKey");
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 1));
  v11 = v7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v11, &v10, 1));

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v9, "postNotificationName:object:userInfo:", CFSTR("PHCallBufferCompletionNotification"), 0, v8);

}

void sub_1000E85CC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD v5[4];
  id v6;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000E8674;
  v5[3] = &unk_100285F88;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, v5);
  objc_destroyWeak(&v6);

}

void sub_1000E8660(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000E8674(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "restartCallBufferTimer");

}

void sub_1000E897C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  id *v16;
  uint64_t v17;

  objc_destroyWeak(v16);
  _Block_object_dispose(&a16, 8);
  objc_destroyWeak((id *)(v17 - 40));
  _Unwind_Resume(a1);
}

void sub_1000E89A4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  void *v11;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    if ((objc_msgSend(WeakRetained, "shouldPauseSOSCallBufferTimer") & 1) == 0
      && !--*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "callBufferTimer"));
      objc_msgSend(v4, "invalidate");

      objc_msgSend(v3, "setCallBufferTimer:", 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bufferSingleCallLabelView"));

      if (v5)
      {
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bufferSingleCallLabelView"));
        objc_msgSend(v6, "setAlpha:", 0.0);

        objc_msgSend(v3, "setBufferSingleCallLabelView:", 0);
      }
      objc_msgSend(v3, "stopMessagePlayback");
      v10 = CFSTR("PHCallBufferCompletionReasonKey");
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 0));
      v11 = v7;
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v11, &v10, 1));

      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
      objc_msgSend(v9, "postNotificationName:object:userInfo:", CFSTR("PHCallBufferCompletionNotification"), 0, v8);

    }
  }

}

void sub_1000E9544(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1000E9568(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "setHidden:", 1);
    WeakRetained = v2;
  }

}

BOOL sub_1000EA838()
{
  void *v0;
  double v1;
  double v2;
  void *v3;
  double v4;
  double v5;
  double v6;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v0, "bounds");
  v2 = v1;

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v3, "bounds");
  v5 = v4;

  if (v2 >= v5)
    v6 = v2;
  else
    v6 = v5;
  return v6 > 1024.0;
}

void sub_1000EAFDC(uint64_t a1)
{
  unint64_t v2;
  double v3;
  double v4;
  unint64_t v5;
  double v6;
  unint64_t v7;
  double v8;
  double v9;
  double v10;
  id v11;

  v2 = +[PHUIConfiguration inCallBottomBarSpacing](PHUIConfiguration, "inCallBottomBarSpacing");
  v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callDisplayStyleManager"));
  if (objc_msgSend(v11, "callDisplayStyle") == (id)3)
    +[PHUIConfiguration ambientInCallControlSize](PHUIConfiguration, "ambientInCallControlSize");
  else
    +[PHBottomBarButtonConfiguration defaultHeight](PHBottomBarButtonConfiguration, "defaultHeight");
  v4 = v3;
  v5 = +[PHUIConfiguration inCallBottomBarSpacing](PHUIConfiguration, "inCallBottomBarSpacing");
  v6 = 30.0;
  if (v5 != 6)
  {
    v7 = +[PHUIConfiguration inCallBottomBarSpacing](PHUIConfiguration, "inCallBottomBarSpacing", 30.0);
    v6 = 24.0;
    if (v7 == 3)
      v6 = 30.0;
  }
  if (v2 == 1)
    v8 = 320.0;
  else
    v8 = dbl_100240190[v2 == 2];
  v9 = v6 + v4 * 2.0;
  objc_msgSend(*(id *)(a1 + 32), "bottomMargin");
  qword_1002DCC50 = *(_QWORD *)&v8;
  *(double *)&qword_1002DCC58 = v9 + v10;

}

void sub_1000EB4A4(id a1)
{
  unint64_t v1;
  uint64_t v2;

  v1 = +[PHUIConfiguration inCallBottomBarSpacing](PHUIConfiguration, "inCallBottomBarSpacing");
  if (v1 - 1 > 5)
    v2 = 0x4041000000000000;
  else
    v2 = qword_100240210[v1 - 1];
  qword_1002DCC68 = v2;
}

void sub_1000EB52C(id a1)
{
  unint64_t v1;
  uint64_t v2;

  v1 = +[PHUIConfiguration inCallBottomBarSpacing](PHUIConfiguration, "inCallBottomBarSpacing");
  v2 = 0;
  if (v1 - 1 <= 5)
    v2 = qword_100240240[v1 - 1];
  qword_1002DCC78 = v2;
}

void sub_1000EE57C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000EE5A8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setCurrentState:animated:animationCompletionBlock:", *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 32));

}

id sub_1000F1698(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 32), "setUserInteractionEnabled:", 0);
}

void sub_1000F183C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalTopRightButton"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalTopLeftButton"));
  objc_msgSend(v3, "setAlpha:", 0.0);

}

void sub_1000F22D8(uint64_t a1)
{
  double v2;
  void *v3;
  id v4;
  id v5;

  v2 = (double)objc_msgSend(*(id *)(a1 + 32), "shouldShowUseRTTButton");
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalBottomRightButton"));
  objc_msgSend(v3, "setAlpha:", v2);

  v4 = objc_msgSend(*(id *)(a1 + 32), "shouldShowUseRTTButton");
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalBottomRightButton"));
  objc_msgSend(v5, "setEnabled:", v4);

}

uint64_t sub_1000F2AA4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "prepareButtonsForAnimationEnd");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

uint64_t sub_1000F2EC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1000F36F0(id *a1)
{
  id v2;
  double v3;
  double v4;
  void *v5;
  void *v6;

  v2 = objc_msgSend(a1[4], "action");
  if (v2 == (id)29)
  {
    v3 = 1.0;
    if (objc_msgSend(a1[5], "shouldShowUseRTTButton"))
      v4 = 1.0;
    else
      v4 = 0.0;
  }
  else
  {
    v4 = 1.0;
    v3 = 0.0;
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "supplementalBottomLeftButton"));
  objc_msgSend(v5, "setAlpha:", v3);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "supplementalBottomLeftButton"));
  objc_msgSend(v6, "setEnabled:", v2 == (id)29);

  objc_msgSend(a1[6], "setAlpha:", 0.0);
  objc_msgSend(a1[4], "setAlpha:", v4);
  return objc_msgSend(a1[4], "setEnabled:", v4 != 0.0);
}

uint64_t sub_1000F37B8(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(result + 40))
  {
    v1 = result;
    objc_msgSend(*(id *)(result + 32), "removeFromSuperview");
    return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 40) + 16))();
  }
  return result;
}

id sub_1000F3F20(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

uint64_t sub_1000F3F2C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (objc_msgSend(*(id *)(a1 + 32), "currentState") == *(id *)(a1 + 56))
    objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

void sub_1000F40DC(uint64_t a1, int a2)
{
  id v2;

  if (a2)
  {
    v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sideButtonLeft"));
    objc_msgSend(v2, "removeFromSuperview");

  }
}

uint64_t sub_1000F4114(uint64_t a1, int a2)
{
  void *v3;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLeftButton"));
    objc_msgSend(v3, "removeFromSuperview");

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

id sub_1000F43A0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 1.0);
}

uint64_t sub_1000F43D0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (objc_msgSend(*(id *)(a1 + 32), "currentState") == *(id *)(a1 + 56))
    objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

id sub_1000F45F4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setUsesLowerButtons:", 0);
}

void sub_1000F4600(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[5];
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  _QWORD v22[4];
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sideButtonLeft"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLeftButton"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sideButtonRight"));
  objc_msgSend(*(id *)(a1 + 32), "setMainLeftButton:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setSideButtonRight:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "setSideButtonLeft:", *(_QWORD *)(a1 + 56));
  objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 120));
  objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 144));
  objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 136));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buttonLayoutConstraints"));

  if (v5)
  {
    v6 = *(void **)(a1 + 32);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "buttonLayoutConstraints"));
    objc_msgSend(v6, "removeConstraints:", v7);

  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "constraintsForState:", 17));
  objc_msgSend(*(id *)(a1 + 32), "setButtonLayoutConstraints:", v8);

  v9 = *(void **)(a1 + 32);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "buttonLayoutConstraints"));
  objc_msgSend(v9, "addConstraints:", v10);

  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_1000F48A0;
  v22[3] = &unk_100287900;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = *(id *)(a1 + 56);
  v27 = *(id *)(a1 + 48);
  v28 = *(id *)(a1 + 40);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1000F4900;
  v16[3] = &unk_100287D10;
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(void **)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  v16[4] = v11;
  v17 = v23;
  v18 = v25;
  v19 = v24;
  v20 = v12;
  v13 = v24;
  v14 = v25;
  v15 = v23;
  +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", v22, v16, 0.25);

}

id sub_1000F48A0(id *a1)
{
  objc_msgSend(a1[4], "setAlpha:", 0.0);
  objc_msgSend(a1[5], "setAlpha:", 0.0);
  objc_msgSend(a1[6], "setAlpha:", 0.0);
  objc_msgSend(a1[7], "setAlpha:", 1.0);
  objc_msgSend(a1[8], "setAlpha:", 1.0);
  return objc_msgSend(a1[9], "setAlpha:", 1.0);
}

uint64_t sub_1000F4900(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (objc_msgSend(*(id *)(a1 + 32), "currentState") == *(id *)(a1 + 72))
  {
    objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
    objc_msgSend(*(id *)(a1 + 48), "removeFromSuperview");
    objc_msgSend(*(id *)(a1 + 56), "removeFromSuperview");
  }
  result = *(_QWORD *)(a1 + 64);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

void sub_1000F50FC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLeftButton"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalTopLeftButton"));
  objc_msgSend(v3, "setAlpha:", 0.0);

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalTopRightButton"));
  objc_msgSend(v4, "setAlpha:", 0.0);

}

uint64_t sub_1000F5174(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t result;

  if (objc_msgSend(*(id *)(a1 + 32), "currentState") == *(id *)(a1 + 64))
  {
    objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
    objc_msgSend(*(id *)(a1 + 48), "removeFromSuperview");
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLeftButton"));
    objc_msgSend(v4, "removeFromSuperview");

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainRightButton"));
    objc_msgSend(*(id *)(a1 + 32), "setMainLeftButton:", v5);

    objc_msgSend(*(id *)(a1 + 32), "setMainRightButton:", 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalBottomRightButton"));
    objc_msgSend(v6, "removeFromSuperview");

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "useRTTButton"));
    objc_msgSend(*(id *)(a1 + 32), "setSupplementalBottomRightButton:", v7);

    v8 = (double)objc_msgSend(*(id *)(a1 + 32), "shouldShowUseRTTButton");
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalBottomRightButton"));
    objc_msgSend(v9, "setAlpha:", v8);

    v10 = *(void **)(a1 + 32);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "supplementalBottomRightButton"));
    objc_msgSend(v10, "addSubview:", v11);

    v12 = *(void **)(a1 + 32);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "buttonLayoutConstraints"));
    objc_msgSend(v12, "removeConstraints:", v13);

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "constraintsForState:", *(_QWORD *)(a1 + 64)));
    objc_msgSend(*(id *)(a1 + 32), "setButtonLayoutConstraints:", v14);

    v15 = *(void **)(a1 + 32);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "buttonLayoutConstraints"));
    objc_msgSend(v15, "addConstraints:", v16);

    objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
    objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
  }
  result = *(_QWORD *)(a1 + 56);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

id sub_1000F61A0(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalTopLeftButton"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalTopRightButton"));
  objc_msgSend(v3, "setAlpha:", 0.0);

  return objc_msgSend(*(id *)(a1 + 40), "setTitle:forState:", 0, 0);
}

void sub_1000F6200(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalTopLeftButton"));
  objc_msgSend(v2, "removeFromSuperview");

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "supplementalTopRightButton"));
  objc_msgSend(v3, "removeFromSuperview");

}

id sub_1000F6254(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v11[5];

  if (objc_msgSend(*(id *)(a1 + 32), "currentState") != *(id *)(a1 + 64))
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1000F63F4;
  v11[3] = &unk_100284898;
  v11[4] = *(_QWORD *)(a1 + 32);
  +[UIView animateWithDuration:delay:options:animations:completion:](UIView, "animateWithDuration:delay:options:animations:completion:", 0x20000, v11, *(_QWORD *)(a1 + 56), 0.25, 0.50999999);
  objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 48), "removeFromSuperview");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "makeButtonWithType:title:image:color:font:fontColor:", 14, 0, 0, 0, 0, 0));
  objc_msgSend(*(id *)(a1 + 32), "setMainLeftButton:", v2);

  v3 = *(void **)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mainLeftButton"));
  objc_msgSend(v3, "addSubview:", v4);

  v5 = *(void **)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "buttonLayoutConstraints"));
  objc_msgSend(v5, "removeConstraints:", v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "constraintsForState:", *(_QWORD *)(a1 + 64)));
  objc_msgSend(*(id *)(a1 + 32), "setButtonLayoutConstraints:", v7);

  v8 = *(void **)(a1 + 32);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "buttonLayoutConstraints"));
  objc_msgSend(v8, "addConstraints:", v9);

  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

id sub_1000F63F4(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 136), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 144), "setAlpha:", 1.0);
}

NSArray *__cdecl sub_1000F6720(id a1, UIButton *a2)
{
  UIButton *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  UIButton *v7;

  v2 = a2;
  objc_opt_class(PHBottomBarButton, v3);
  if ((objc_opt_isKindOfClass(v2, v4) & 1) != 0)
  {
    v7 = v2;
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v7, 1));
  }
  else
  {
    v5 = &__NSArray0__struct;
  }

  return (NSArray *)v5;
}

void sub_1000F75AC(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc(*(Class *)(a1 + 32)), "initWithInterval:", 1.0);
  v2 = (void *)qword_1002DCC88;
  qword_1002DCC88 = (uint64_t)v1;

}

id sub_1000F7800(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v3, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), CFSTR("PHIntervalTimerNotification"), *(_QWORD *)(a1 + 32));

  return objc_msgSend(*(id *)(a1 + 32), "_createTimerIfNecessary");
}

id sub_1000F7900(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v3, "removeObserver:name:object:", *(_QWORD *)(a1 + 40), CFSTR("PHIntervalTimerNotification"), *(_QWORD *)(a1 + 32));

  return _objc_msgSend(*(id *)(a1 + 32), "_invalidateTimerIfNecessary");
}

void sub_1000F79D0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "timer"));
  objc_msgSend(v1, "fire");

}

void sub_1000F7A6C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  uint8_t v5[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Pausing interval timer", v5, 2u);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "timer"));
  objc_msgSend(v4, "invalidate");

}

void sub_1000F7B58(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  unsigned int v5;
  void *v6;
  uint8_t v7[16];

  v2 = sub_1000C5588();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Resuming interval timer", v7, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "_createTimerIfNecessary");
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "timer"));
  v5 = objc_msgSend(v4, "isValid");

  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "timer"));
    objc_msgSend(v6, "fire");

  }
}

void sub_1000F83EC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentView"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

id *sub_1000F8420(id *result, int a2)
{
  id *v2;
  void *v3;

  if (a2)
  {
    v2 = result;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(result[4], "contentView"));
    objc_msgSend(v3, "removeFromSuperview");

    return (id *)objc_msgSend(v2[4], "displayContentView:animated:", v2[5], *((unsigned __int8 *)v2 + 48));
  }
  return result;
}

id sub_1000F878C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "isContentViewRotatingOrResizing");
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setAlpha:", 1.0);
  return result;
}

id sub_1000F8A50()
{
  if (qword_1002DCCA0 != -1)
    dispatch_once(&qword_1002DCCA0, &stru_100287F08);
  return (id)qword_1002DCC98;
}

void sub_1000F8A90(id a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  qword_1002DCC98 = CUTWeakLinkClass(CFSTR("RTTUIConversationViewController"), CFSTR("RTTUI"));
  if (!qword_1002DCC98)
  {
    v1 = sub_1000C5588();
    v2 = objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[WARN] Could not find class RTTUIConversationViewController; RTTUI may have failed to link.",
        v3,
        2u);
    }

  }
}

id sub_1000F8B14()
{
  if (qword_1002DCCB0 != -1)
    dispatch_once(&qword_1002DCCB0, &stru_100287F28);
  return (id)qword_1002DCCA8;
}

void sub_1000F8B54(id a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  qword_1002DCCA8 = CUTWeakLinkClass(CFSTR("RTTUIUtilities"), CFSTR("RTTUI"));
  if (!qword_1002DCCA8)
  {
    v1 = sub_1000C5588();
    v2 = objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[WARN] Could not find class RTTUIUtilities; RTTUI.framework may have failed to link.",
        v3,
        2u);
    }

  }
}

void sub_1000F9DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000F9E28(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000F9ECC;
  v5[3] = &unk_100285028;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1000F9ECC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id WeakRetained;

  v1 = *(_QWORD *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "button"));
  objc_msgSend(v2, "setControlImage:", v1);

}

void sub_1000FAE98(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;

  if (a2)
  {
    v2 = *(_QWORD *)(a1 + 32);
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "imageWithRenderingMode:", 2));
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);

  }
}

void sub_1000FDEC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  uint64_t v12;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v12 - 192));
  _Unwind_Resume(a1);
}

void sub_1000FDEF0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "stopVoiceLoopButtonPressed");

}

id sub_1000FE9A4(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "status");
  if ((_DWORD)result == 4)
    return objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:forTest:", CFSTR("AwaitIncomingCall"), qword_1002E2CB0);
  return result;
}

void sub_1000FF968(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "carSessionStatus"));
  objc_msgSend(v1, "waitForSessionInitialization");

}

BOOL sub_1000FF998(id a1)
{
  void *v1;
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (void *)qword_1002DCCB8;
  if (qword_1002DCCB8)
    return objc_msgSend(v1, "canSendText");
  v1 = (void *)CUTWeakLinkClass(CFSTR("MFMessageComposeViewController"), CFSTR("MessageUI"));
  qword_1002DCCB8 = (uint64_t)v1;
  if (v1)
    return objc_msgSend(v1, "canSendText");
  v3 = sub_1000C5588();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_1001AAC2C(v4, v5, v6);

  return 0;
}

id sub_10010176C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
  +[UIView setAnimationsEnabled:](UIView, "setAnimationsEnabled:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setCurrentMode:", 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "galleryView"));
  objc_msgSend(v2, "reloadPhoneCallData");

  objc_msgSend(*(id *)(a1 + 32), "updateButtonsViewState");
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v3, "setNeedsLayout");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v4, "layoutIfNeeded");

  return +[UIView setAnimationsEnabled:](UIView, "setAnimationsEnabled:", 1);
}

id *sub_100101814(id *result, int a2)
{
  if (a2)
    return (id *)objc_msgSend(result[4], "setCurrentMode:", 1);
  return result;
}

id sub_100101828(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  +[UIView setAnimationsEnabled:](UIView, "setAnimationsEnabled:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setCurrentMode:", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "galleryView"));
  objc_msgSend(v2, "reloadPhoneCallData");

  objc_msgSend(*(id *)(a1 + 32), "updateButtonsViewState");
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v3, "setNeedsLayout");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v4, "layoutIfNeeded");

  return +[UIView setAnimationsEnabled:](UIView, "setAnimationsEnabled:", 1);
}

void sub_10010248C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buttonsView"));
  objc_msgSend(v1, "updateButtonsForCallModelState");

}

void sub_100102728(id a1)
{
  off_1002DCCC0 = (_UNKNOWN *)IMWeakLinkSymbol("CKClientComposeSendMessageWithSubscriptionIdentifier", CFSTR("ChatKit"));
}

void sub_100103014(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("CARPLAY_REPLY_TEXT_MESSAGE"), &stru_10028DC20, CFSTR("PHCarPlay")));
  objc_msgSend(v1, "handleAlertControllerSendMessageResponse:", v2);

}

void sub_100103084(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(void **)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "replyWithMessageStore"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "cannedRepliesForSending"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndexedSubscript:", 0));
  objc_msgSend(v1, "handleAlertControllerSendMessageResponse:", v3);

}

void sub_1001030F4(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(void **)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "replyWithMessageStore"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "cannedRepliesForSending"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndexedSubscript:", 1));
  objc_msgSend(v1, "handleAlertControllerSendMessageResponse:", v3);

}

id sub_100103164(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleAlertControllerSendMessageResponse:", 0);
}

void sub_100103ABC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buttonsView"));
  objc_msgSend(v1, "updateButtonsForCallModelState");

}

BOOL sub_1001040D8(id a1, TUCall *a2)
{
  return -[TUCall isEmergency](a2, "isEmergency");
}

void sub_100104838(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 2u);
}

id sub_100104F7C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager), "isTranscriptionEnabled");
}

void sub_100104FC4()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager);
  sub_100109438();
}

char *sub_100104FEC(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  id v9;
  char *v10;
  void *v11;
  char *v12;
  id v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType(v3);
  *(_QWORD *)&v3[OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager] = a1;
  v8 = &v3[OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_onVoicemailsChanged];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v15.receiver = v3;
  v15.super_class = ObjectType;
  v9 = a1;
  swift_retain(a3);
  v10 = (char *)objc_msgSendSuper2(&v15, "init");
  v11 = *(void **)&v10[OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager];
  v12 = v10;
  v13 = v11;
  objc_msgSend(v13, "setDelegate:", v12, v15.receiver, v15.super_class);

  swift_release(a3);
  return v12;
}

uint64_t sub_100105118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 40) = v0;
  v2 = sub_1001095A0();
  swift_initStaticObject(v2, &unk_1002D73B8);
  sub_100109668(&qword_1002D77E8, v3, (uint64_t)&unk_100242C98);
  sub_100109498(v4);
  sub_100109690();
  sub_100109684();
  return sub_1001093F4();
}

uint64_t sub_100105184()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  id v9;
  objc_class *v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v1 = v0 + 40;
  v2 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager), "allVoicemails");
  v3 = sub_1001096C4();
  v4 = sub_10010954C(v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v31 = v4;
    else
      v31 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v31);
    sub_100109544();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5)
  {
    v34 = _swiftEmptyArrayStorage;
    result = specialized ContiguousArray.reserveCapacity(_:)(v5);
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
      else
        v8 = *(id *)(v4 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      v10 = (objc_class *)sub_100109848();
      v11 = (char *)objc_allocWithZone(v10);
      *(_QWORD *)&v11[OBJC_IVAR___MPVisualMessage_vmMessage] = v9;
      *(_QWORD *)(v0 + 16) = v11;
      *(_QWORD *)(v0 + 24) = v10;
      v12 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v13 = v34[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      specialized ContiguousArray._endMutation()(v14);
    }
    while (v5 != v7);
    v15 = (uint64_t)v34;
    sub_100109544();
    v1 = v0 + 40;
  }
  else
  {
    sub_100109544();
    v15 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if (qword_1002D7260 != -1)
    swift_once(&qword_1002D7260, sub_10010BD38);
  v16 = sub_100109570();
  sub_100108664(v16, (uint64_t)&unk_1002E2CF8);
  v17 = sub_100109788(v15);
  v19 = Logger.logObject.getter(v17, v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint64_t *)(v1 - 8);
    v22 = (uint8_t *)sub_1001094C8(12);
    v23 = sub_1001094C8(32);
    v34 = (_QWORD *)v23;
    *(_DWORD *)v22 = 136315138;
    v24 = sub_100109848();
    v25 = sub_1001097E0();
    v26 = Array.description.getter(v25, v24);
    v28 = v27;
    sub_100109558();
    *v21 = sub_100121E04(v26, v28, (uint64_t *)&v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v21, v0 + 40, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease(v28);
    sub_10010970C(v15);
    sub_100109638((void *)&_mh_execute_header, v19, v20, "Fetched %s from VMD", v22);
    sub_1001094FC((uint64_t)&type metadata for Any);
    sub_100109440(v23);
    sub_100109440((uint64_t)v22);
  }
  else
  {
    sub_10010970C(v15);
  }

  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v32 = v15;
    else
      v32 = v15 & 0xFFFFFFFFFFFFFF8;
    sub_1001097E0();
    v33 = sub_1001085C0((uint64_t *)&unk_1002D77D0);
    v30 = _bridgeCocoaArray<A>(_:)(v32, v33);
    sub_100109558();
  }
  else
  {
    v29 = sub_1001097E0();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v29);
    v30 = v15;
  }
  sub_100109558();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v30);
}

_QWORD *sub_1001054BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v2)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = (char *)*(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = *(id *)&v5[OBJC_IVAR___MPVisualMessage_vmMessage];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v8 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

_QWORD *sub_1001055F8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  void *v6;
  objc_class *v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v15;
  _QWORD *v16;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v2)
      break;
    v16 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = (objc_class *)type metadata accessor for VisualMessage();
      v8 = (char *)objc_allocWithZone(v7);
      *(_QWORD *)&v8[OBJC_IVAR___MPVisualMessage_vmMessage] = v6;
      v15.receiver = v8;
      v15.super_class = v7;
      v9 = v6;
      v10 = objc_msgSendSuper2(&v15, "init");

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v12 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized ContiguousArray._endMutation()(v13);
      if (v2 == v4)
        return v16;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

uint64_t sub_1001057CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_10015D9F0();
  v3 = type metadata accessor for VoicemailActor();
  sub_1001081CC(&qword_1002D77E8, (uint64_t (*)(uint64_t))type metadata accessor for VoicemailActor, (uint64_t)&unk_100242C98);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, v4);
  return swift_task_switch(sub_100105848, v5, v6);
}

uint64_t sub_100105848()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 24);
  *(_QWORD *)(v0 + 32) = _Block_copy(*(const void **)(v0 + 16));
  v2 = dword_1002D78DC;
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc(v2);
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_1001058A4;
  return sub_100105118();
}

uint64_t sub_1001058A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Class isa;

  sub_1001095A8();
  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(void **)(v1 + 24);
  sub_100109528();

  sub_1001085C0((uint64_t *)&unk_1002D77D0);
  isa = sub_10010983C().super.isa;
  sub_1001094F4();
  (*(void (**)(uint64_t, Class))(v2 + 16))(v2, isa);

  sub_1001098A0();
  return sub_1001095E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100105910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  sub_1001095A0();
  swift_initStaticObject();
  sub_100109668(&qword_1002D77E8, v3, (uint64_t)&unk_100242C98);
  sub_100109498(v4);
  sub_100109690();
  sub_100109684();
  return sub_1001093F4();
}

#error "100105A44: call analysis failed (funcsize=72)"

uint64_t sub_100105AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_10015D9F0();
  v4 = type metadata accessor for VoicemailActor();
  sub_1001081CC(&qword_1002D77E8, (uint64_t (*)(uint64_t))type metadata accessor for VoicemailActor, (uint64_t)&unk_100242C98);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, v5);
  return swift_task_switch(sub_100105B44, v6, v7);
}

uint64_t sub_100105B44()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 40) = sub_1001095D8();
  v2 = sub_1001085C0((uint64_t *)&unk_1002D77D0);
  v3 = sub_10010954C(v2);
  sub_10010976C(v3);
  v4 = v1;
  v5 = (_QWORD *)sub_10010971C();
  *(_QWORD *)(v0 + 56) = v5;
  v6 = sub_100109584(v5, (uint64_t)sub_1001093E4);
  return sub_100105910(v6);
}

uint64_t sub_100105BAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = sub_1001095A0();
  swift_initStaticObject(v3, &unk_1002D73B8);
  sub_100109668(&qword_1002D77E8, v4, (uint64_t)&unk_100242C98);
  sub_100109498(v5);
  sub_100109690();
  sub_100109684();
  return sub_1001093F4();
}

#error "100105CE0: call analysis failed (funcsize=72)"

uint64_t sub_100105D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_10015D9F0();
  v4 = type metadata accessor for VoicemailActor();
  sub_1001081CC(&qword_1002D77E8, (uint64_t (*)(uint64_t))type metadata accessor for VoicemailActor, (uint64_t)&unk_100242C98);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, v5);
  return swift_task_switch(sub_100105DE0, v6, v7);
}

uint64_t sub_100105DE0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 40) = sub_1001095D8();
  v2 = sub_1001085C0((uint64_t *)&unk_1002D77D0);
  v3 = sub_10010954C(v2);
  sub_10010976C(v3);
  v4 = v1;
  v5 = (_QWORD *)sub_10010971C();
  *(_QWORD *)(v0 + 56) = v5;
  v6 = sub_100109584(v5, (uint64_t)sub_100105E48);
  return sub_100105BAC(v6);
}

uint64_t sub_100105E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  sub_1001095A8();
  v3 = *(void **)(v1 + 32);
  v2 = *(_QWORD *)(v1 + 40);
  sub_100109528();
  sub_1001094F4();

  (*(void (**)(uint64_t))(v2 + 16))(v2);
  sub_1001098A0();
  return sub_1001095E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100105E94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = sub_1001095A0();
  swift_initStaticObject(v3, &unk_1002D73B8);
  sub_100109668(&qword_1002D77E8, v4, (uint64_t)&unk_100242C98);
  sub_100109498(v5);
  sub_100109690();
  sub_100109684();
  return sub_1001093F4();
}

#error "100105FC8: call analysis failed (funcsize=72)"

uint64_t sub_100106048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_10015D9F0();
  v4 = type metadata accessor for VoicemailActor();
  sub_1001081CC(&qword_1002D77E8, (uint64_t (*)(uint64_t))type metadata accessor for VoicemailActor, (uint64_t)&unk_100242C98);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, v5);
  return swift_task_switch(sub_1001060C8, v6, v7);
}

uint64_t sub_1001060C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 40) = sub_1001095D8();
  v2 = sub_1001085C0((uint64_t *)&unk_1002D77D0);
  v3 = sub_10010954C(v2);
  sub_10010976C(v3);
  v4 = v1;
  v5 = (_QWORD *)sub_10010971C();
  *(_QWORD *)(v0 + 56) = v5;
  v6 = sub_100109584(v5, (uint64_t)sub_1001093E4);
  return sub_100105E94(v6);
}

uint64_t sub_100106130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = sub_1001095A0();
  swift_initStaticObject(v3, &unk_1002D73B8);
  sub_100109668(&qword_1002D77E8, v4, (uint64_t)&unk_100242C98);
  sub_100109498(v5);
  sub_100109690();
  sub_100109684();
  return sub_1001093F4();
}

#error "100106264: call analysis failed (funcsize=72)"

uint64_t sub_1001062E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_10015D9F0();
  v4 = type metadata accessor for VoicemailActor();
  sub_1001081CC(&qword_1002D77E8, (uint64_t (*)(uint64_t))type metadata accessor for VoicemailActor, (uint64_t)&unk_100242C98);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, v5);
  return swift_task_switch(sub_100106364, v6, v7);
}

uint64_t sub_100106364()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 40) = sub_1001095D8();
  v2 = sub_1001085C0((uint64_t *)&unk_1002D77D0);
  v3 = sub_10010954C(v2);
  sub_10010976C(v3);
  v4 = v1;
  v5 = (_QWORD *)sub_10010971C();
  *(_QWORD *)(v0 + 56) = v5;
  v6 = sub_100109584(v5, (uint64_t)sub_1001093E4);
  return sub_100106130(v6);
}

uint64_t sub_1001063CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for MessageID.Value(0);
  v2[7] = v3;
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001095A0();
  swift_initStaticObject(v4, &unk_1002D73B8);
  sub_100109668(&qword_1002D77E8, v5, (uint64_t)&unk_100242C98);
  sub_100109498(v6);
  sub_100109690();
  sub_100109684();
  return sub_1001093F4();
}

uint64_t sub_10010645C()
{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  uint64_t v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void *v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_class *v19;
  char *v20;
  _QWORD *v22;

  v1 = (void **)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  sub_10010896C(*(_QWORD *)(v0 + 40) + OBJC_IVAR___MPMessageID_value, v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v3);
  v5 = *(_QWORD **)(v0 + 64);
  if (EnumCaseMultiPayload == 1)
  {
    sub_1001089B0((uint64_t)v5);
    if (qword_1002D7260 != -1)
      swift_once(&qword_1002D7260, sub_10010BD38);
    v6 = *v1;
    v7 = sub_100109570();
    v8 = sub_100108664(v7, (uint64_t)&unk_1002E2CF8);
    v9 = v6;
    Logger.logObject.getter(v9, v10);
    v11 = sub_1001096F0();
    v12 = os_log_type_enabled(v8, v11);
    v13 = *v1;
    if (v12)
    {
      v14 = (uint8_t *)sub_1001094C8(12);
      v22 = (_QWORD *)sub_1001094C8(8);
      *(_DWORD *)v14 = 138412290;
      *(_QWORD *)(v0 + 32) = v13;
      v15 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v14 + 4, v14 + 12);
      *v22 = v13;

      sub_100109638((void *)&_mh_execute_header, v8, v11, "Incorrect id passed into VisualVoicemailManager %@, privacy: .public) but expected a VisualMessage ID!", v14);
      v16 = sub_1001085C0(&qword_1002D7880);
      sub_100109598((uint64_t)v22, v17, v16);
      sub_100109440((uint64_t)v22);
      sub_100109440((uint64_t)v14);
    }
    else
    {

    }
    v18 = 0;
  }
  else
  {
    v18 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 48)+ OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager), "voicemailWithIdentifier:", *v5);
    if (v18)
    {
      v19 = (objc_class *)sub_100109848();
      v20 = (char *)objc_allocWithZone(v19);
      *(_QWORD *)&v20[OBJC_IVAR___MPVisualMessage_vmMessage] = v18;
      *(_QWORD *)(v0 + 16) = v20;
      *(_QWORD *)(v0 + 24) = v19;
      v18 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
    }
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(id))(v0 + 8))(v18);
}

uint64_t sub_10010669C(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6)
{
  void *v10;
  _QWORD *v11;
  id v12;
  id v13;

  v10 = _Block_copy(aBlock);
  v11 = (_QWORD *)sub_100109754(a5, 40);
  v11[2] = a3;
  v11[3] = v10;
  v11[4] = a1;
  v12 = a3;
  v13 = a1;
  return sub_10018236C(a6, (uint64_t)v11);
}

uint64_t sub_100106708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_10015D9F0();
  v4 = type metadata accessor for VoicemailActor();
  sub_1001081CC(&qword_1002D77E8, (uint64_t (*)(uint64_t))type metadata accessor for VoicemailActor, (uint64_t)&unk_100242C98);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, v5);
  return swift_task_switch(sub_100106788, v6, v7);
}

uint64_t sub_100106788()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  _QWORD *v6;

  v1 = *(void **)(v0 + 32);
  v2 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 40) = _Block_copy(*(const void **)(v0 + 24));
  v3 = dword_1002D787C;
  v4 = v2;
  v5 = v1;
  v6 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 48) = v6;
  *v6 = v0;
  v6[1] = sub_1001067FC;
  return sub_1001063CC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001067FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  sub_1001095A8();
  v4 = v3[5];
  v5 = (void *)v3[4];
  v6 = (void *)v3[2];
  sub_100109528();

  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, a1);
  sub_1001098A0();
  swift_unknownObjectRelease(a1);
  return sub_1001095F4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_10010685C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v4 = sub_1001095A0();
  swift_initStaticObject(v4, &unk_1002D73B8);
  sub_100109668(&qword_1002D77E8, v5, (uint64_t)&unk_100242C98);
  sub_100109498(v6);
  sub_100109690();
  sub_100109684();
  return sub_1001093F4();
}

uint64_t sub_1001068CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[10];
  v2 = v0[9];
  v3 = *(void **)(v0[11] + OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager);
  v4 = sub_100109754((uint64_t)&unk_1002884F8, 32);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v0[6] = sub_100108908;
  v0[7] = v4;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100106A68;
  v0[5] = &unk_100288510;
  v5 = _Block_copy(v0 + 2);
  v6 = v0[7];
  swift_retain(v1);
  swift_release(v6);
  v7 = objc_msgSend(v3, "voicemailsPassingTest:", v5);
  _Block_release(v5);
  v8 = sub_1001096C4();
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  v10 = sub_1001055F8(v9);
  sub_100109544();
  return ((uint64_t (*)(_QWORD *))v0[1])(v10);
}

uint64_t sub_1001069E4(void *a1, uint64_t (*a2)(id, uint64_t))
{
  objc_class *v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  objc_super v10;

  v4 = (objc_class *)type metadata accessor for VisualMessage();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR___MPVisualMessage_vmMessage] = a1;
  v10.receiver = v5;
  v10.super_class = v4;
  v6 = a1;
  v7 = objc_msgSendSuper2(&v10, "init");
  LOBYTE(a2) = a2(v7, v8);

  return a2 & 1;
}

uint64_t sub_100106A68(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  LOBYTE(v4) = v4();
  swift_release(v3);

  return v4 & 1;
}

uint64_t sub_100106B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_10015D9F0();
  v4 = type metadata accessor for VoicemailActor();
  sub_1001081CC(&qword_1002D77E8, (uint64_t (*)(uint64_t))type metadata accessor for VoicemailActor, (uint64_t)&unk_100242C98);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, v5);
  return swift_task_switch(sub_100106BA8, v6, v7);
}

uint64_t sub_100106BA8()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v2 = *(const void **)(v1 + 24);
  v3 = *(void **)(v1 + 32);
  v4 = _Block_copy(*(const void **)(v1 + 16));
  *(_QWORD *)(v1 + 40) = _Block_copy(v2);
  v5 = sub_100109754((uint64_t)&unk_1002884D0, 24);
  *(_QWORD *)(sub_10010976C(v5) + 16) = v4;
  v6 = v3;
  v7 = (_QWORD *)sub_10010971C();
  *(_QWORD *)(v1 + 56) = v7;
  *v7 = v1;
  v7[1] = sub_100106C40;
  return sub_10010685C((uint64_t)sub_1001088C4, v0);
}

uint64_t sub_100106C40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  Class isa;

  sub_1001095A8();
  v2 = v1[6];
  v4 = (void *)v1[4];
  v3 = (void (**)(_QWORD, _QWORD))v1[5];
  sub_100109528();
  swift_release(v2);

  sub_1001085C0((uint64_t *)&unk_1002D77D0);
  isa = sub_10010983C().super.isa;
  sub_1001094F4();
  ((void (**)(_QWORD, Class))v3)[2](v3, isa);

  _Block_release(v3);
  return sub_1001095F4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100106CB8()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.VisualVoicemailManager", 36, "init()", 6, 0);
  __break(1u);
}

id sub_100106CF0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100106D60(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  sub_1001097B0();
  if (qword_1002D7260 != -1)
    swift_once(&qword_1002D7260, sub_10010BD38);
  v7 = sub_100109570();
  sub_100108664(v7, (uint64_t)&unk_1002E2CF8);
  (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(v2, a1, v4);
  v8 = v1;
  v9 = sub_100109868();
  v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = sub_1001094C8(22);
    v12 = sub_1001094C8(64);
    v31 = v12;
    *(_DWORD *)v11 = 136315394;
    ObjectType = swift_getObjectType(a1);
    v14 = sub_100109890(ObjectType);
    v16 = v15;
    v17 = sub_100121E04(v14, v15, &v31);
    v18 = sub_10010987C(v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v18, v19, v11 + 4, v20);

    v21 = swift_bridgeObjectRelease(v16);
    *(_WORD *)(v11 + 12) = 2080;
    v30 = Notification.name.getter(v21);
    type metadata accessor for Name(0);
    v23 = String.init<A>(describing:)(&v30, v22);
    v25 = sub_100121E04(v23, v24, &v31);
    v26 = sub_10010987C(v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v26, v27, v11 + 14, v28);
    sub_1001094F4();
    sub_10010975C();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s is handling %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
    sub_100109440(v12);
    sub_100109440(v11);
  }
  else
  {

    sub_10010975C();
  }

  return sub_100109850(OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_onVoicemailsChanged);
}

uint64_t sub_100107000(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;

  if (qword_1002D7260 != -1)
    swift_once(&qword_1002D7260, sub_10010BD38);
  v10 = sub_100109570();
  sub_100108664(v10, (uint64_t)&unk_1002E2CF8);
  sub_100109788(a2);
  v11 = v4;
  sub_100109788(a3);
  sub_100109788(a4);
  v12 = v11;
  v13 = sub_100109868();
  v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v42 = v13;
    v44 = v14;
    v15 = sub_1001094C8(48);
    v43 = sub_1001094C8(32);
    v46 = v43;
    *(_DWORD *)v15 = 136316162;
    ObjectType = swift_getObjectType(v5);
    v17 = sub_100109890(ObjectType);
    v18 = a1;
    v20 = v19;
    v45 = sub_100121E04(v17, v19, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v15 + 4, v15 + 12);

    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v15 + 12) = 1024;
    LODWORD(v45) = v18 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 4, v15 + 14, v15 + 18);
    *(_WORD *)(v15 + 18) = 2048;
    if (a3)
    {
      if ((unint64_t)a3 >> 62)
      {
        if (a3 >= 0)
          v39 = a3 & 0xFFFFFFFFFFFFFF8;
        else
          v39 = a3;
        swift_bridgeObjectRetain(a3);
        v21 = _CocoaArrayWrapper.endIndex.getter(v39);
        sub_10010974C();
      }
      else
      {
        v21 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v22 = v42;
      sub_10010974C();
    }
    else
    {
      v21 = 0;
      v22 = v42;
    }
    v45 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v15 + 20, v15 + 28);
    v23 = sub_10010974C();
    *(_WORD *)(v15 + 28) = 2048;
    if (a4)
    {
      if ((unint64_t)a4 >> 62)
      {
        if (a4 >= 0)
          v40 = a4 & 0xFFFFFFFFFFFFFF8;
        else
          v40 = a4;
        swift_bridgeObjectRetain(a4);
        v29 = _CocoaArrayWrapper.endIndex.getter(v40);
        sub_100109898();
      }
      else
      {
        v29 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v23 = sub_100109898();
    }
    else
    {
      v29 = 0;
    }
    v45 = v29;
    sub_100109824(v23, v24, v15 + 30, v15 + 38, v25, v26, v27, v28);
    v30 = sub_100109898();
    *(_WORD *)(v15 + 38) = 2048;
    if (a2)
    {
      if ((unint64_t)a2 >> 62)
      {
        if (a2 >= 0)
          v41 = a2 & 0xFFFFFFFFFFFFFF8;
        else
          v41 = a2;
        swift_bridgeObjectRetain(a2);
        v36 = _CocoaArrayWrapper.endIndex.getter(v41);
        sub_1001096DC();
      }
      else
      {
        v36 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v30 = sub_1001096DC();
    }
    else
    {
      v36 = 0;
    }
    v45 = v36;
    sub_100109824(v30, v31, v15 + 40, v15 + 48, v32, v33, v34, v35);
    sub_1001096DC();
    _os_log_impl((void *)&_mh_execute_header, v22, v44, "%s voicemailsDidChangeInitial: %{BOOL}d added: %ld, deleted: %ld, updated: %ld", (uint8_t *)v15, 0x30u);
    sub_100109598(v43, v37, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v43);
    sub_100109440(v15);

  }
  else
  {

    sub_10010970C(a3);
    sub_10010970C(a4);
    sub_10010970C(a2);
  }
  return sub_100109850(OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_onVoicemailsChanged);
}

void sub_100107578(const char *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;

  if (qword_1002D7260 != -1)
    swift_once(&qword_1002D7260, sub_10010BD38);
  v3 = sub_100109570();
  sub_100108664(v3, (uint64_t)&unk_1002E2CF8);
  v39 = v1;
  v5 = Logger.logObject.getter(v39, v4);
  v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)sub_1001094C8(12);
    v8 = sub_1001094C8(32);
    v43 = v8;
    *(_DWORD *)v7 = 136315138;
    ObjectType = swift_getObjectType(v39);
    v10 = sub_100109890(ObjectType);
    v42 = sub_100121E04(v10, v11, &v43);
    v12 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v7 + 4, v7 + 12);
    sub_100109874(v12, v13, v14, v15, v16, v17, v18, v19, v37, v39);
    sub_100109874(v20, v21, v22, v23, v24, v25, v26, v27, v38, v40);
    sub_10010974C();
    sub_100109638((void *)&_mh_execute_header, v5, v6, a1, v7);
    sub_100109598(v8, v28, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v8);
    sub_100109440((uint64_t)v7);

  }
  else
  {

    sub_100109874(v29, v30, v31, v32, v33, v34, v35, v36, v37, v39);
  }
}

uint64_t sub_100107740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for VoicemailActor();
  swift_initStaticObject(v7, &unk_1002D73B8);
  v8 = (_QWORD *)swift_task_alloc(dword_1002D784C);
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_1001093C4;
  return sub_100105910(a5);
}

uint64_t sub_1001077BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for VoicemailActor();
  swift_initStaticObject(v7, &unk_1002D73B8);
  v8 = (_QWORD *)swift_task_alloc(dword_1002D7834);
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_1001093C4;
  return sub_100105BAC(a5);
}

uint64_t sub_100107838(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;

  v6 = sub_1001085C0((uint64_t *)&unk_1002D77D0);
  v7 = sub_10010954C(v6);
  v8 = a1;
  sub_100107920(v7, a4);

  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_1001078A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for VoicemailActor();
  swift_initStaticObject(v7, &unk_1002D73B8);
  v8 = (_QWORD *)swift_task_alloc(dword_1002D781C);
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_1001093C4;
  return sub_100105E94(a5);
}

uint64_t sub_100107920(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_1001085C0(&qword_1002D84A0);
  __chkstk_darwin(v6, v7);
  sub_1001097B0();
  v8 = type metadata accessor for TaskPriority(0);
  sub_100108600(v3, 1, 1, v8);
  v9 = sub_1001095A0();
  v10 = v2;
  swift_bridgeObjectRetain(a1);
  inited = swift_initStaticObject(v9, &unk_1002D73B8);
  sub_1001081CC(&qword_1002D77E8, (uint64_t (*)(uint64_t))type metadata accessor for VoicemailActor, (uint64_t)&unk_100242C98);
  v13 = v12;
  v14 = (_QWORD *)sub_100109754(a2, 48);
  v14[2] = inited;
  v14[3] = v13;
  v14[4] = v10;
  v14[5] = a1;
  sub_10011102C();
  return swift_release(v15);
}

uint64_t sub_100107A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for VoicemailActor();
  swift_initStaticObject(v7, &unk_1002D73B8);
  v8 = (_QWORD *)swift_task_alloc(dword_1002D77FC);
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_1001093C4;
  return sub_100106130(a5);
}

void *variable initialization expression of AudioControlService.cancellables()
{
  return &_swiftEmptySetSingleton;
}

Swift::Bool __swiftcall AudioCallBackgroundGradientViewController._canShowWhileLocked()()
{
  return 1;
}

void sub_100107AB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v3 = sub_100109778();
  if (v2 != v3 || v1 != v4)
    sub_100109604(v3, v4);
  sub_1001096DC();
  sub_1001094F4();
  sub_100109830();
}

BOOL sub_100107B00(int a1, int a2)
{
  return a1 == a2;
}

BOOL sub_100107B0C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL sub_100107B18(char a1, char a2)
{
  return a1 == a2;
}

void sub_100107B30(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;

  v1 = sub_100109810(a1);
  sub_1001097D4(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1001095D0();
  sub_100109578();
}

void sub_100107B58(uint64_t a1)
{
  sub_100109810(a1);
  sub_1001097F8();
  sub_1001095D0();
  sub_100109578();
}

Swift::Int sub_100107B80(Swift::UInt32 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

void sub_100107BC4(int a1, Swift::UInt32 a2)
{
  Hasher._combine(_:)(a2);
  sub_100109438();
}

void sub_100107BE4(int a1, Swift::UInt a2)
{
  sub_1001094E8(a1, a2);
  sub_100109438();
}

void sub_100107BFC(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  sub_100109438();
}

void sub_100107C24(uint64_t a1, uint64_t a2)
{
  sub_10010981C(a1, a2);
  sub_1001097F8();
  sub_1001095D0();
  sub_100109578();
}

void sub_100107C4C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  char v11;

  v2 = sub_10010981C(a1, a2);
  sub_1001097D4(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  sub_1001095D0();
  sub_100109578();
}

void sub_100107C74(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v2;

  v2 = a2;
  sub_10010981C(a1, a2);
  Hasher._combine(_:)(v2);
  sub_1001095D0();
  sub_100109578();
}

InCallService::UniqueAddress __swiftcall UniqueAddress.init()()
{
  return 0;
}

uint64_t variable initialization expression of PosterSnapshotService.snapshots()
{
  return Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, &type metadata for String, &type metadata for PosterSnapshotService.Snapshot, &protocol witness table for String);
}

uint64_t type metadata accessor for VisualVoicemailManager()
{
  return objc_opt_self(_TtC13InCallService22VisualVoicemailManager);
}

void type metadata accessor for TUCallStatus(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7640, (uint64_t)&unk_100288290);
}

void type metadata accessor for SBSUIInCallTransitionAnalyticsSource(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7648, (uint64_t)&unk_1002882B0);
}

__n128 initializeWithTake for StarView(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7650, (uint64_t)&unk_100288330);
}

void type metadata accessor for VMTranscriptConfidenceRating(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7658, (uint64_t)&unk_100288358);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7660, (uint64_t)&unk_100288378);
}

void type metadata accessor for CLEEDRequestType(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7668, (uint64_t)&unk_1002883A8);
}

void type metadata accessor for CLEEDRequestState(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7670, (uint64_t)&unk_1002883C8);
}

void type metadata accessor for ICSPosterSource(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7678, (uint64_t)&unk_1002883E8);
}

void sub_100107DA0()
{
  uint64_t *v0;

  sub_100107EF0(*v0, (void (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100107DC0(uint64_t a1, id *a2)
{
  return sub_10010926C(a1, a2);
}

uint64_t sub_100107DD4(uint64_t a1, id *a2)
{
  return sub_100109118(a1, a2) & 1;
}

void sub_100107DEC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_100109310(a1);
  *a2 = v3;
}

Swift::Int sub_100107E10()
{
  Swift::UInt32 *v0;

  return sub_100107B80(*v0);
}

void sub_100107E18(int a1)
{
  Swift::UInt32 *v1;

  sub_100107BC4(a1, *v1);
}

void sub_100107E20(uint64_t a1)
{
  unsigned int *v1;

  sub_100107C74(a1, *v1);
}

uint64_t sub_100107E28@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_100107E58(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_100107E58(uint64_t result)
{
  return result;
}

void sub_100107E74()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1001097C8();
  *v0 = FactoryOutcome.rawValue.getter(v1, v2);
  sub_100109438();
}

void sub_100107E94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_100109538();
  *v0 = FactoryOutcome.rawValue.getter(v1, v2);
  sub_100109438();
}

void sub_100107EB4(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_100107EE4();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_100107EF0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  a2(v3);
  sub_1001094F4();
  sub_100109438();
}

uint64_t sub_100107F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_10010962C(a1, a2);
  sub_10010969C(v3, v4);
  return sub_100109714(v2);
}

void sub_100107F40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = sub_10010962C(a1, a2);
  v3 = sub_1001096F8(v2);
  sub_1001097A0((uint64_t)v3);
  sub_1001095D0();
  sub_100109558();
  sub_100109790();
}

uint64_t sub_100107F78(uint64_t *a1)
{
  char v1;

  sub_100107AB0(*a1);
  return v1 & 1;
}

BOOL sub_100107F98(uint64_t *a1, uint64_t *a2)
{
  return sub_100107B0C(*a1, *a2);
}

uint64_t sub_100107FA4(uint64_t *a1, uint64_t *a2)
{
  return sub_100135E08(*a1, *a2);
}

void sub_100107FB0()
{
  uint64_t *v0;

  sub_100107EF0(*v0, (void (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100107FD0(uint64_t a1)
{
  uint64_t *v1;

  return sub_100107F20(a1, *v1);
}

void sub_100107FE8(uint64_t a1)
{
  uint64_t *v1;

  sub_100107F40(a1, *v1);
}

NSNumber sub_100108000()
{
  return j___s12CoreGraphics7CGFloatV10FoundationE19_bridgeToObjectiveCSo8NSNumberCyF();
}

void sub_100108010(double *a1@<X8>)
{
  *a1 = j___s12CoreGraphics7CGFloatV10FoundationE36_unconditionallyBridgeFromObjectiveCyACSo8NSNumberCSgFZ();
}

BOOL sub_100108034(int *a1, int *a2)
{
  return sub_100107B00(*a1, *a2);
}

uint64_t sub_100108044@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10010806C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1001081CC(&qword_1002D7A18, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100240C84);
  v3 = v2;
  sub_1001081CC(&qword_1002D7A20, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100240C24);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_1001080F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1001081CC(&qword_1002D7700, (uint64_t (*)(uint64_t))type metadata accessor for SBSUIInCallTransitionAnalyticsSource, (uint64_t)&unk_1002405CC);
  v3 = v2;
  sub_1001081CC(&qword_1002D7708, (uint64_t (*)(uint64_t))type metadata accessor for SBSUIInCallTransitionAnalyticsSource, (uint64_t)&unk_100240574);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

void sub_100108174()
{
  sub_1001081CC(&qword_1002D7680, (uint64_t (*)(uint64_t))type metadata accessor for SBSUIInCallTransitionAnalyticsSource, (uint64_t)&unk_10024053C);
}

void sub_1001081A0()
{
  sub_1001081CC(&qword_1002D7688, (uint64_t (*)(uint64_t))type metadata accessor for SBSUIInCallTransitionAnalyticsSource, (uint64_t)&unk_100240514);
}

void sub_1001081CC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }
  sub_100109438();
}

void sub_100108208()
{
  sub_1001081CC(&qword_1002D7690, (uint64_t (*)(uint64_t))type metadata accessor for SBSUIInCallTransitionAnalyticsSource, (uint64_t)&unk_1002405A4);
}

uint64_t sub_100108234(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1001081CC(&qword_1002D79E0, (uint64_t (*)(uint64_t))type metadata accessor for STBackgroundActivityIdentifier, (uint64_t)&unk_1002410A4);
  v3 = v2;
  sub_1001081CC(&qword_1002D79E8, (uint64_t (*)(uint64_t))type metadata accessor for STBackgroundActivityIdentifier, (uint64_t)&unk_100240FCC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_1001082B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1001081CC(&qword_1002D7A28, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_100240B2C);
  v3 = v2;
  sub_1001081CC((unint64_t *)&unk_1002D7A30, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_100240ACC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_100108340(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1001081CC(&qword_1002DC260, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100241124);
  v3 = v2;
  sub_1001081CC(&qword_1002D7A40, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1002409AC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_1001083C4@<X0>(_QWORD *a1@<X8>)
{
  NSString v2;
  uint64_t result;

  v2 = String._bridgeToObjectiveC()();
  result = sub_1001094F4();
  *a1 = v2;
  return result;
}

void sub_100108404()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_100109538();
  *v0 = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(v1);
  v0[1] = v2;
  sub_100109438();
}

uint64_t sub_100108424(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1001081CC((unint64_t *)&qword_1002D79F0, (uint64_t (*)(uint64_t))type metadata accessor for CNWallpaperColorDescriptionKey, (uint64_t)&unk_1002410E4);
  v3 = v2;
  sub_1001081CC(&qword_1002D79F8, (uint64_t (*)(uint64_t))type metadata accessor for CNWallpaperColorDescriptionKey, (uint64_t)&unk_100240ECC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

_QWORD *sub_1001084A8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

double sub_1001084B8@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_1001084C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_1001081CC(&qword_1002D7A00, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_100240DDC);
  v3 = v2;
  sub_1001081CC(&qword_1002D7A08, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_100240D7C);
  v5 = v4;
  v6 = sub_1001092D4();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v5, v6);
}

void sub_100108564()
{
  sub_1001081CC(&qword_1002D7698, (uint64_t (*)(uint64_t))type metadata accessor for TUCallStatus, (uint64_t)&unk_1002406B8);
}

uint64_t sub_100108590()
{
  double *v0;

  return j___sSd9hashValueSivg(*v0);
}

void sub_100108598()
{
  double *v0;

  sub_1001091D8(*v0);
}

uint64_t sub_1001085A0(uint64_t a1)
{
  double *v1;

  return sub_100109204(a1, *v1);
}

BOOL sub_1001085A8(double *a1, double *a2)
{
  return sub_1001085B4(*a1, *a2);
}

BOOL sub_1001085B4(double a1, double a2)
{
  return a1 == a2;
}

uint64_t sub_1001085C0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_100108600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_100108610()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1001096B4();
  v0 = swift_task_alloc(dword_1002D77E4);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_1001094A8(v1);
  return sub_100107A1C(v2, v3, v4, v5, v6);
}

uint64_t sub_100108664(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_10010867C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D7800;
  if (!qword_1002D7800)
  {
    v1 = objc_opt_self(VMVoicemail);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_1002D7800);
  }
  return result;
}

uint64_t sub_1001086BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1001096B4();
  v0 = swift_task_alloc(dword_1002D780C);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_1001094A8(v1);
  return sub_1001078A4(v2, v3, v4, v5, v6);
}

uint64_t sub_100108714()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1001096B4();
  v0 = swift_task_alloc(dword_1002D7824);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_1001094A8(v1);
  return sub_1001077BC(v2, v3, v4, v5, v6);
}

uint64_t sub_100108768()
{
  uint64_t v0;

  sub_1001095A8();
  sub_100109528();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001087A0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1001097E8();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001087D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1001096B4();
  v0 = swift_task_alloc(dword_1002D783C);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_1001094A8(v1);
  return sub_100107740(v2, v3, v4, v5, v6);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7908, (uint64_t)&unk_100288788);
}

uint64_t sub_100108838()
{
  uint64_t v0;

  sub_1001097F0();
  _Block_release(*(const void **)(v0 + 24));
  sub_1001097E8();
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100108864()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1001096E4();
  v1 = (_QWORD *)sub_10010967C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_10010945C(v1, (uint64_t)sub_1001093C4);
  return sub_10010944C(v2, v3, v4, v5);
}

uint64_t sub_1001088A4()
{
  uint64_t v0;

  sub_1001097F0();
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001088C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1001088E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100108908(void *a1)
{
  uint64_t v1;

  return sub_1001069E4(a1, *(uint64_t (**)(id, uint64_t))(v1 + 16));
}

uint64_t sub_100108910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100108920(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10010892C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1001096E4();
  v1 = (_QWORD *)sub_10010967C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_10010945C(v1, (uint64_t)sub_1001093C4);
  return sub_10010944C(v2, v3, v4, v5);
}

uint64_t sub_10010896C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessageID.Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001089B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MessageID.Value(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001089F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1001096E4();
  v1 = (_QWORD *)sub_10010967C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_10010945C(v1, (uint64_t)sub_1001093C4);
  return sub_10010944C(v2, v3, v4, v5);
}

uint64_t sub_100108A34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1001096E4();
  v1 = (_QWORD *)sub_10010967C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_10010945C(v1, (uint64_t)sub_1001093C4);
  return sub_10010944C(v2, v3, v4, v5);
}

uint64_t sub_100108A78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1001096E4();
  v1 = (_QWORD *)sub_10010967C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_10010945C(v1, (uint64_t)sub_1001093C4);
  return sub_10010944C(v2, v3, v4, v5);
}

uint64_t sub_100108ABC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  sub_1001097E8();
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100108AEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1001096E4();
  v1 = (_QWORD *)sub_10010967C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_10010945C(v1, (uint64_t)sub_1001093C4);
  return sub_10010944C(v2, v3, v4, v5);
}

uint64_t sub_100108B2C()
{
  uint64_t v0;

  sub_1001097F0();

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100108B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1002D78CC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1001093C4;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1002D78C8 + dword_1002D78C8))(v2, v3);
}

uint64_t sub_100108BB8()
{
  uint64_t v0;

  return sub_10018549C(*(_QWORD *)(v0 + 16));
}

void type metadata accessor for CNSharedProfileAvatarAnimationType(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D78E0, (uint64_t)&unk_100288660);
}

void type metadata accessor for STBackgroundActivityIdentifier(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D78E8, (uint64_t)&unk_100288680);
}

void type metadata accessor for CNWallpaperColorDescriptionKey(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D78F0, (uint64_t)&unk_1002886A8);
}

void type metadata accessor for Level(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D78F8, (uint64_t)&unk_1002886D0);
}

__n128 initializeWithTake for FeedbackView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_100108C24(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100108C44(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7900, (uint64_t)&unk_100288750);
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7910, (uint64_t)&unk_1002887B0);
}

void type metadata accessor for PHAudioCallControlType(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7918, (uint64_t)&unk_1002887D8);
}

void type metadata accessor for TUCallDisconnectedReason(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7920, (uint64_t)&unk_1002887F8);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7928, (uint64_t)&unk_100288818);
}

__n128 initializeWithTake for LiveVoicemailCarrierSettings.Error(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_100108CEC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100108D0C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7930, (uint64_t)&unk_100288898);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7938, (uint64_t)&unk_100288918);
}

void type metadata accessor for SBSInCallPresentationMode(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7940, (uint64_t)&unk_100288940);
}

uint64_t initializeBufferWithCopyOfBuffer for VideoCallView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t sub_100108DA0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100108DC0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7948, (uint64_t)&unk_1002889B8);
}

void sub_100108E00()
{
  sub_1001081CC(&qword_1002D7950, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100240970);
}

void sub_100108E2C()
{
  sub_1001081CC(&qword_1002D7958, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100240944);
}

void sub_100108E58()
{
  sub_1001081CC(&qword_1002D7960, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_100240A90);
}

void sub_100108E84()
{
  sub_1001081CC(&qword_1002D7968, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_100240A64);
}

void sub_100108EB0()
{
  sub_1001081CC(&qword_1002D7970, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_100240B00);
}

void sub_100108EDC()
{
  sub_1001081CC(&qword_1002D7978, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100240BE8);
}

void sub_100108F08()
{
  sub_1001081CC(&qword_1002D7980, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100240BBC);
}

void sub_100108F34()
{
  sub_1001081CC(&qword_1002D7988, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100240C58);
}

void sub_100108F60()
{
  sub_1001081CC(&qword_1002D7990, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_100240D40);
}

void sub_100108F8C()
{
  sub_1001081CC(&qword_1002D7998, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_100240D14);
}

void sub_100108FB8()
{
  sub_1001081CC(&qword_1002D79A0, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_100240DB0);
}

void sub_100108FE4()
{
  sub_1001081CC(&qword_1002D79A8, (uint64_t (*)(uint64_t))type metadata accessor for CNWallpaperColorDescriptionKey, (uint64_t)&unk_100240E94);
}

void sub_100109010()
{
  sub_1001081CC(&qword_1002D79B0, (uint64_t (*)(uint64_t))type metadata accessor for CNWallpaperColorDescriptionKey, (uint64_t)&unk_100240E6C);
}

void sub_10010903C()
{
  sub_1001081CC(&qword_1002D79B8, (uint64_t (*)(uint64_t))type metadata accessor for STBackgroundActivityIdentifier, (uint64_t)&unk_100240F94);
}

void sub_100109068()
{
  sub_1001081CC(&qword_1002D79C0, (uint64_t (*)(uint64_t))type metadata accessor for STBackgroundActivityIdentifier, (uint64_t)&unk_100240F6C);
}

void sub_100109094()
{
  sub_1001081CC(&qword_1002D79C8, (uint64_t (*)(uint64_t))type metadata accessor for STBackgroundActivityIdentifier, (uint64_t)&unk_100240FFC);
}

void sub_1001090C0()
{
  sub_1001081CC(&qword_1002D79D0, (uint64_t (*)(uint64_t))type metadata accessor for CNWallpaperColorDescriptionKey, (uint64_t)&unk_100240EFC);
}

void sub_1001090EC()
{
  sub_1001081CC(&qword_1002D79D8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1002409E0);
}

uint64_t sub_100109118(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  NSString v5;
  uint64_t v7;
  uint64_t v8;

  sub_10010972C(a1, a2);
  v7 = 0;
  v8 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(v3, &v7);
  if (v8)
  {
    v5 = String._bridgeToObjectiveC()();
    sub_100109558();
  }
  else
  {
    v5 = 0;
  }
  *v2 = v5;
  return v4 & 1;
}

uint64_t sub_100109184(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_1001091D8(double a1)
{
  Swift::UInt64 v1;

  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *(_QWORD *)&a1;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_100109204(uint64_t a1, double a2)
{
  double v2;

  if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = a2;
  else
    v2 = 0.0;
  return static Hasher._hash(seed:_:)(a1, *(_QWORD *)&v2);
}

uint64_t sub_10010921C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static CGFloat._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_10010926C(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  NSString v5;
  uint64_t v6;
  uint64_t v7;

  sub_10010972C(a1, a2);
  v6 = 0;
  v7 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(v3, &v6);
  if (v7)
  {
    v5 = String._bridgeToObjectiveC()();
    result = sub_1001094F4();
  }
  else
  {
    v5 = 0;
  }
  *v2 = v5;
  return result;
}

unint64_t sub_1001092D4()
{
  unint64_t result;

  result = qword_1002D7A10;
  if (!qword_1002D7A10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1002D7A10);
  }
  return result;
}

void sub_100109310(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  String._bridgeToObjectiveC()();
  sub_1001096DC();
  sub_100109438();
}

void type metadata accessor for CFNotificationName(uint64_t a1)
{
  sub_100109364(a1, &qword_1002D7A48, (uint64_t)&unk_1002889E8);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_100109364(a1, (unint64_t *)&unk_1002D7A50, (uint64_t)&unk_100288A10);
}

void sub_100109364(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1001093F4()
{
  return ((uint64_t (*)(void))swift_task_switch)();
}

uint64_t sub_100109404(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  float *v10;

  *v10 = a1;
  return sub_100121E04(0x654D3C7961727241, 0xEE003E6567617373, &a10);
}

uint64_t sub_100109440(uint64_t a1)
{
  return swift_slowDealloc(a1, -1, -1);
}

uint64_t sub_10010944C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_10010945C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_10010947C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100109498(uint64_t a1)
{
  uint64_t v1;

  return dispatch thunk of Actor.unownedExecutor.getter(v1, a1);
}

uint64_t sub_1001094A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1001094C8(uint64_t a1)
{
  return swift_slowAlloc(a1, -1);
}

uint64_t sub_1001094D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v2, v1 + 24, v4, v3);
}

void sub_1001094E8(int a1, Swift::UInt a2)
{
  Hasher._combine(_:)(a2);
}

uint64_t sub_1001094F4()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1001094FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_arrayDestroy(v1, 1, a1 + 8);
}

uint64_t _s13InCallService15ScoreControllerC8delegateAA0dE8Delegate_pSgvpfi_0()
{
  return 0;
}

void sub_100109514(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

uint64_t sub_100109528()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_100109538()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_100109544()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10010954C(uint64_t a1)
{
  uint64_t v1;

  return static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, a1);
}

uint64_t sub_100109558()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

BOOL sub_100109560(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100109570()
{
  return type metadata accessor for Logger(0);
}

uint64_t sub_100109584@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_100109598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_arrayDestroy(a1, 1, a3);
}

uint64_t sub_1001095A0()
{
  return type metadata accessor for VoicemailActor();
}

void sub_1001095A8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1001095B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100108664(a1, a2);
  return swift_bridgeObjectRetain(v2);
}

Swift::Int sub_1001095D0()
{
  return Hasher._finalize()();
}

void *sub_1001095D8()
{
  uint64_t v0;

  return _Block_copy(*(const void **)(v0 + 24));
}

uint64_t sub_1001095E4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1001095F4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100109604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, a1, a2, 0);
}

NSArray sub_100109620()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10010962C(uint64_t a1, uint64_t a2)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
}

void sub_100109638(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

_QWORD *sub_100109640(uint64_t a1)
{
  return sub_1001054BC(a1);
}

void sub_100109668(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_1001081CC(a1, v3, a3);
}

id sub_100109670(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_10010967C()
{
  uint64_t v0;

  return swift_task_alloc(*(unsigned int *)(v0 + 4));
}

uint64_t sub_10010969C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return String.hash(into:)(v2, a1, a2);
}

unint64_t sub_1001096C4()
{
  return sub_10010867C();
}

uint64_t sub_1001096DC()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1001096F0()
{
  return static os_log_type_t.error.getter();
}

_QWORD *sub_1001096F8(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return Hasher.init(_seed:)((uint64_t *)va, v1);
}

uint64_t sub_10010970C(uint64_t a1)
{
  return swift_bridgeObjectRelease_n(a1, 2);
}

uint64_t sub_100109714(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_10010971C()
{
  uint64_t v0;

  return swift_task_alloc(v0);
}

uint64_t sub_100109724()
{
  return Logger.logObject.getter();
}

void sub_10010972C(uint64_t a1, id *a2)
{

}

void sub_10010973C()
{
  void *v0;

}

_QWORD *sub_100109744()
{
  uint64_t v0;

  return sub_10010E40C(*(_QWORD *)(v0 + 32));
}

uint64_t sub_10010974C()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100109754(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(a1, a2, 7);
}

uint64_t sub_10010975C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_10010976C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t sub_100109778()
{
  uint64_t v0;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_100109788(uint64_t a1)
{
  return swift_bridgeObjectRetain_n(a1, 2);
}

uint64_t sub_1001097A0(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return String.hash(into:)(va, v1, v2);
}

uint64_t sub_1001097C8()
{
  unsigned int *v0;

  return *v0;
}

void sub_1001097D4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  Swift::UInt v10;

  Hasher._combine(_:)(v10);
}

uint64_t sub_1001097E0()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

void sub_1001097E8()
{
  uint64_t v0;

}

void sub_1001097F0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
}

void sub_1001097F8()
{
  unsigned __int8 v0;

  Hasher._combine(_:)(v0);
}

uint64_t sub_100109804(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

_QWORD *sub_100109810(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return Hasher.init(_seed:)((uint64_t *)va, 0);
}

_QWORD *sub_10010981C(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return Hasher.init(_seed:)((uint64_t *)va, a1);
}

uint64_t sub_100109824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v8, a3, a4);
}

NSArray sub_10010983C()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_100109848()
{
  return type metadata accessor for VisualMessage();
}

uint64_t sub_100109850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + a1))();
}

uint64_t sub_100109868()
{
  return Logger.logObject.getter();
}

void sub_100109874(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

}

uint64_t sub_10010987C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_100109890(uint64_t a1)
{
  return _typeName(_:qualified:)(a1, 0);
}

uint64_t sub_100109898()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

void sub_1001098A0()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t sub_1001098B8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

void sub_1001098E4()
{
  uint64_t v0;

  Logger.init(subsystem:category:)(0xD00000000000001BLL, 0x80000001001F01D0, 0xD00000000000001CLL, 0x8000000100241190);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService28LiveVoicemailCarrierSettings_autoPickupKeys) = &off_100288020;
  type metadata accessor for CarrierBundleSettings(0);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService28LiveVoicemailCarrierSettings_carrierBundleSettings) = static CarrierBundleSettings.shared.getter();
  sub_100109438();
}

void sub_100109974(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  Swift::String v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  Swift::String v53;
  void *object;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v3 = v1;
  v5 = sub_1001085C0(&qword_1002D7D78);
  v7 = __chkstk_darwin(v5, v6);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v7, v10);
  v13 = (char *)&v60 - v12;
  v14 = sub_10010A1B8(v11, "localSenderIdentityAccountUUID");
  if (v14)
  {
    v15 = v14;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v14);

    v16 = type metadata accessor for UUID(0);
    v17 = (uint64_t)v9;
    v18 = 0;
  }
  else
  {
    v16 = type metadata accessor for UUID(0);
    v17 = (uint64_t)v9;
    v18 = 1;
  }
  sub_100108600(v17, v18, 1, v16);
  sub_100109FAC((uint64_t)v9, (uint64_t)v13);
  type metadata accessor for UUID(0);
  v19 = sub_100109FF4((uint64_t)v13, 1, v16);
  if ((_DWORD)v19 == 1)
  {
    sub_10010A03C((uint64_t)v13, &qword_1002D7D78);
    v20 = 0;
    v21 = 0;
  }
  else
  {
    v20 = UUID.uuidString.getter(v19);
    v21 = v22;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
  }
  v23 = (void *)CarrierBundleSettings.subscription(for:)(v20, v21);
  swift_bridgeObjectRelease(v21);
  if (v2)
    return;
  if (!v23)
  {
    v64 = 0;
    v65 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    v37 = swift_bridgeObjectRelease(v65);
    v64 = 0xD00000000000002DLL;
    v65 = 0x80000001001F0170;
    v38 = sub_10010A1B8(v37, "callUUID");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v40 = v39;

    sub_10010A1C0();
    swift_bridgeObjectRelease(v40);
    v41 = v64;
    v42 = v65;
    v43 = sub_10010A000();
    v44 = sub_10010A1AC((uint64_t)&type metadata for LiveVoicemailCarrierSettings.Error, v43);
    *v45 = v41;
    v45[1] = v42;
    swift_willThrow(v44);
    return;
  }
  v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService28LiveVoicemailCarrierSettings_autoPickupKeys);
  CarrierBundleSettings.fetchCarrierBundleValue(for:context:)(&v64, v24, v23);
  if (!v66)
  {
    sub_10010A03C((uint64_t)&v64, &qword_1002D84F0);
    goto LABEL_15;
  }
  if ((swift_dynamicCast(&v67, &v64, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
  {
LABEL_15:
    v64 = 0;
    v65 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v46._object = (void *)0x80000001001F01A0;
    v46._countAndFlagsBits = 0xD000000000000026;
    String.append(_:)(v46);
    v48 = sub_10010A1B8(v47, "callUUID");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v50 = v49;

    sub_10010A1C0();
    swift_bridgeObjectRelease(v50);
    v51._countAndFlagsBits = 0x79656B20646E6120;
    v51._object = (void *)0xEB00000000203A73;
    String.append(_:)(v51);
    v52 = swift_bridgeObjectRetain(v24);
    v53._countAndFlagsBits = Array.description.getter(v52, &type metadata for String);
    object = v53._object;
    String.append(_:)(v53);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(object);
    v55 = v64;
    v56 = v65;
    v57 = sub_10010A000();
    v58 = sub_10010A1AC((uint64_t)&type metadata for LiveVoicemailCarrierSettings.Error, v57);
    *v59 = v55;
    v59[1] = v56;
    swift_willThrow(v58);

    return;
  }
  v25 = v67;
  v26 = a1;
  v28 = Logger.logObject.getter(v26, v27);
  v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc(22, -1);
    v62 = swift_slowAlloc(32, -1);
    v64 = v62;
    *(_DWORD *)v30 = 136315394;
    v61 = v30 + 4;
    v31 = objc_msgSend(v26, "callUUID");
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v63 = v25;
    v34 = v33;

    v67 = sub_100121E04(v32, v34, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v61, v30 + 12);

    v35 = v34;
    v25 = v63;
    swift_bridgeObjectRelease(v35);
    *(_WORD *)(v30 + 12) = 2048;
    v67 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v30 + 14, v30 + 22);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Carrier Bundle for call with uuid %s reports AutoPickupDuration - %ld", (uint8_t *)v30, 0x16u);
    v36 = v62;
    swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
    sub_100109440(v36);
    sub_100109440(v30);
  }
  else
  {

  }
  sub_100163340(v25);
}

void sub_100109E70()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for Logger(0);
  sub_10010A198(v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService28LiveVoicemailCarrierSettings_autoPickupKeys));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService28LiveVoicemailCarrierSettings_carrierBundleSettings));
  sub_100109438();
}

uint64_t sub_100109EC0()
{
  uint64_t v0;

  sub_100109E70();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100109EE4()
{
  return type metadata accessor for LiveVoicemailCarrierSettings(0);
}

uint64_t type metadata accessor for LiveVoicemailCarrierSettings(uint64_t a1)
{
  uint64_t result;

  result = qword_1002D7CD8;
  if (!qword_1002D7CD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LiveVoicemailCarrierSettings);
  return result;
}

uint64_t sub_100109F24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100109FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0(&qword_1002D7D78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100109FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

unint64_t sub_10010A000()
{
  unint64_t result;

  result = qword_1002D7D80;
  if (!qword_1002D7D80)
  {
    result = swift_getWitnessTable(&unk_1002411FC, &type metadata for LiveVoicemailCarrierSettings.Error);
    atomic_store(result, (unint64_t *)&qword_1002D7D80);
  }
  return result;
}

void sub_10010A03C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_1001085C0(a2);
  sub_10010A198(v2);
  sub_100109438();
}

_QWORD *initializeBufferWithCopyOfBuffer for LiveVoicemailCarrierSettings.Error(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for LiveVoicemailCarrierSettings.Error(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for LiveVoicemailCarrierSettings.Error(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for LiveVoicemailCarrierSettings.Error(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveVoicemailCarrierSettings.Error(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveVoicemailCarrierSettings.Error(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveVoicemailCarrierSettings.Error()
{
  return &type metadata for LiveVoicemailCarrierSettings.Error;
}

uint64_t sub_10010A198(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_10010A1AC(uint64_t a1, uint64_t a2)
{
  return swift_allocError(a1, a2, 0, 0);
}

id sub_10010A1B8(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_10010A1C0()
{
  uint64_t v0;
  void *v1;
  Swift::String v2;

  v2._countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

id sub_10010A1CC()
{
  void *v0;
  char *v1;
  objc_super v3;

  type metadata accessor for MessageStoreController(0);
  v1 = v0;
  *(_QWORD *)&v1[OBJC_IVAR___ICSMessageStoreClient_messageStoreController] = MessageStoreController.__allocating_init()();

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MessageStoreClient();
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t sub_10010A258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v6 = sub_10010AE94();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6, v9);
  v10 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1001085C0(&qword_1002D84A0);
  v13 = __chkstk_darwin(v11, v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter(v13);
  v16 = type metadata accessor for TaskPriority(0);
  sub_10010AE9C((uint64_t)v15, 0, v17, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  v18 = *(unsigned __int8 *)(v7 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = (v8 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject(&unk_100288BA8, v21 + 16, v18 | 7);
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v22 + v19, v10, v6);
  *(_QWORD *)(v22 + v20) = v3;
  v23 = (_QWORD *)(v22 + v21);
  *v23 = v28;
  v23[1] = a3;
  v24 = v3;
  swift_retain(a3);
  sub_10011102C();
  return swift_release(v25);
}

uint64_t sub_10010A3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  unint64_t v8;
  uint64_t Options;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Request;
  uint64_t v15;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_1001085C0((uint64_t *)&unk_1002DB390) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[7] = swift_task_alloc(v8);
  v7[8] = swift_task_alloc(v8);
  Options = type metadata accessor for MessageFetchOptions(0);
  v7[9] = Options;
  v7[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(Options - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MessageStoreFetchRequest.QuerySearchType(0);
  v7[11] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[12] = v11;
  v7[13] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MessageStoreQuery(0);
  v7[14] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[15] = v13;
  v7[16] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  Request = type metadata accessor for MessageStoreFetchRequest(0);
  v7[17] = Request;
  v15 = *(_QWORD *)(Request - 8);
  v7[18] = v15;
  v7[19] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10010A4D4, 0, 0);
}

uint64_t sub_10010A4D4()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (uint64_t *)v0[16];
  v17 = v0[15];
  v18 = v0[14];
  v19 = v0[12];
  v20 = v0[13];
  v2 = v0[10];
  v21 = v0[11];
  v3 = v0[9];
  v4 = v0[3];
  v5 = swift_allocObject(&unk_100288BD0, 24, 7);
  v6 = sub_1001085C0(&qword_1002D7DC8);
  v7 = sub_10010AE94();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v6, v10 + *(_QWORD *)(v8 + 72), v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100241240;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11 + v10, v4, v7);
  *(_QWORD *)(v5 + 16) = v11;
  *v1 = v5;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v17 + 104))(v1, enum case for MessageStoreQuery.recordUUID(_:), v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v20, enum case for MessageStoreFetchRequest.QuerySearchType.unsorted(_:), v21);
  v0[2] = _swiftEmptyArrayStorage;
  v12 = sub_10010AD00();
  v13 = sub_1001085C0(&qword_1002D7DD8);
  v14 = sub_10010AD40();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 2, v13, v14, v3, v12);
  MessageStoreFetchRequest.init(query:sortType:options:pageSize:page:originatingBundleID:)(v1, v20, v2, 0x7FFFFFFFFFFFFFFFLL, 0, 0, 0);
  v15 = (_QWORD *)swift_task_alloc(async function pointer to MessageStoreController.getMessages(fetchRequest:)[1]);
  v0[20] = v15;
  *v15 = v0;
  v15[1] = sub_10010A6AC;
  return MessageStoreController.getMessages(fetchRequest:)(v0[19]);
}

uint64_t sub_10010A6AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10010A880;
  else
    v5 = sub_10010A718;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10010A718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 168);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v17 = *(_QWORD *)(v0 + 168);
    else
      v17 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 168));
    v2 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    v3 = v1 & 0xC000000000000001;
    sub_100119E3C(0, (v1 & 0xC000000000000001) == 0, *(_QWORD *)(v0 + 168));
    v4 = *(_QWORD *)(v0 + 168);
    if (v3)
    {
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 168));
      v4 = *(_QWORD *)(v0 + 168);
    }
    else
    {
      v5 = *(id *)(v4 + 32);
    }
    v6 = swift_bridgeObjectRelease(v4);
    dispatch thunk of Message.messageFile.getter(v6);

    v7 = 0;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 168));
    v7 = 1;
  }
  v9 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 152);
  v10 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 64);
  v13 = *(void (**)(uint64_t))(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  v14 = type metadata accessor for URL(0);
  sub_10010AE9C(v11, v7, v15, v14);
  v13(v11);
  sub_10010ADC8(v11);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  sub_10010AE7C();
  swift_task_dealloc(v12);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010A880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(void (**)(uint64_t))(v0 + 40);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  v6 = type metadata accessor for URL(0);
  sub_10010AE9C(v4, 1, v7, v6);
  v5(v4);
  swift_errorRelease(v2);
  sub_10010ADC8(v4);
  sub_10010AE7C();
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10010AA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSURL *v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v4 = sub_1001085C0((uint64_t *)&unk_1002DB390);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010AE34(a1, (uint64_t)v7);
  v8 = type metadata accessor for URL(0);
  v10 = 0;
  if (sub_100109FF4((uint64_t)v7, 1, v8) != 1)
  {
    URL._bridgeToObjectiveC()(v9);
    v10 = v11;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  (*(void (**)(uint64_t, void *))(a2 + 16))(a2, v10);

}

id sub_10010AAD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MessageStoreClient();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MessageStoreClient()
{
  return objc_opt_self(ICSMessageStoreClient);
}

uint64_t sub_10010AB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = sub_10010AE94();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_10010ABD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_10010AE94() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + v6);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc(dword_1002D7DBC);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10010AC94;
  return sub_10010A3C8(a1, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_10010AC94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10010ACDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_10010AD00()
{
  unint64_t result;
  uint64_t Options;

  result = qword_1002D7DD0;
  if (!qword_1002D7DD0)
  {
    Options = type metadata accessor for MessageFetchOptions(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MessageFetchOptions, Options);
    atomic_store(result, (unint64_t *)&qword_1002D7DD0);
  }
  return result;
}

unint64_t sub_10010AD40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D7DE0;
  if (!qword_1002D7DE0)
  {
    v1 = sub_10010AD84(&qword_1002D7DD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002D7DE0);
  }
  return result;
}

uint64_t sub_10010AD84(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_10010ADC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001085C0((uint64_t *)&unk_1002DB390);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10010AE08()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10010AE2C(uint64_t a1)
{
  uint64_t v1;

  sub_10010AA0C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10010AE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0((uint64_t *)&unk_1002DB390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010AE7C()
{
  uint64_t v0;

  return swift_task_dealloc(*(_QWORD *)(v0 + 152));
}

uint64_t sub_10010AE94()
{
  return type metadata accessor for UUID(0);
}

uint64_t sub_10010AE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108600(a1, a2, 1, a4);
}

uint64_t AudioControlService.controlEnabledPublisher.getter()
{
  return sub_10010BC20(OBJC_IVAR____TtC13InCallService19AudioControlService_controlEnabledPublisher);
}

uint64_t AudioControlService.audioRoutesPublisher.getter()
{
  return sub_10010BC20(OBJC_IVAR____TtC13InCallService19AudioControlService_audioRoutesPublisher);
}

uint64_t AudioControlService.currentAudioRoutePublisher.getter()
{
  return sub_10010BC20(OBJC_IVAR____TtC13InCallService19AudioControlService_currentAudioRoutePublisher);
}

id AudioControlService.callCenter.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC13InCallService19AudioControlService_callCenter);
}

void AudioControlService.__allocating_init(callCenter:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  AudioControlService.init(callCenter:)();
  sub_100109438();
}

void AudioControlService.init(callCenter:)()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  objc_class *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  char *v35;
  _QWORD v36[3];
  objc_super v37;

  sub_10010BC70();
  v2 = v1;
  v3 = sub_1001085C0(&qword_1002D7E10);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  sub_10010BC88();
  v8 = v7 - v6;
  v9 = sub_10010BC98();
  __chkstk_darwin(v9, v10);
  sub_10010BC88();
  v13 = v12 - v11;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService19AudioControlService_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService19AudioControlService_callCenter] = v2;
  LOBYTE(v36[0]) = 1;
  v14 = sub_1001085C0(&qword_1002D7E20);
  sub_10010BC64(v14);
  v15 = v0;
  v16 = v2;
  *(_QWORD *)&v15[OBJC_IVAR____TtC13InCallService19AudioControlService_controlEnabledPublisher] = CurrentValueSubject.init(_:)(v36);
  v17 = objc_msgSend(v16, "routeController");
  sub_10010B22C();
  v19 = v18;

  v36[0] = v19;
  v20 = sub_1001085C0(&qword_1002D7E28);
  sub_10010BC64(v20);
  *(_QWORD *)&v15[OBJC_IVAR____TtC13InCallService19AudioControlService_audioRoutesPublisher] = CurrentValueSubject.init(_:)(v36);
  v21 = objc_msgSend(v16, "routeController");
  sub_10010B3E8();

  v22 = sub_1001085C0(&qword_1002D7E30);
  sub_10010BC64(v22);
  *(_QWORD *)&v15[OBJC_IVAR____TtC13InCallService19AudioControlService_currentAudioRoutePublisher] = CurrentValueSubject.init(_:)(v13);

  v23 = (objc_class *)type metadata accessor for AudioControlService();
  v37.receiver = v15;
  v37.super_class = v23;
  v24 = (char *)objc_msgSendSuper2(&v37, "init");
  v36[0] = *(_QWORD *)&v24[OBJC_IVAR____TtC13InCallService19AudioControlService_currentAudioRoutePublisher];
  sub_10010B56C(&qword_1002D7E38, &qword_1002D7E30);
  v26 = v25;
  sub_10010B874(&qword_1002D7E40, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AudioRoute);
  v28 = v27;
  v29 = v24;
  Publisher<>.removeDuplicates()(v22, v26, v28);
  v30 = swift_allocObject(&unk_100288C20, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, v29);
  sub_10010B56C(&qword_1002D7E48, &qword_1002D7E10);
  v32 = Publisher<>.sink(receiveValue:)(sub_10010B564, v30, v3, v31);
  swift_release(v30);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
  v33 = &v29[OBJC_IVAR____TtC13InCallService19AudioControlService_cancellables];
  swift_beginAccess(&v29[OBJC_IVAR____TtC13InCallService19AudioControlService_cancellables], v36, 33, 0);
  AnyCancellable.store(in:)(v33);
  swift_endAccess(v36);
  swift_release(v32);
  v34 = objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC13InCallService19AudioControlService_callCenter], "routeController");
  v35 = v29;
  objc_msgSend(v34, "addDelegate:", v35);

  sub_10010BC44();
}

void sub_10010B22C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_10010BC70();
  v16 = sub_10010BC98();
  v0 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16, v1);
  sub_10010BC88();
  v4 = v3 - v2;
  v6 = sub_10010BC5C(v5, "sortedRoutes");
  v7 = sub_10010BBE8(0, &qword_1002D7E88, TURoute_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_16:
    sub_100109898();
    sub_10010BC44();
    return;
  }
  if (v8 < 0)
    v15 = v8;
  else
    v15 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v9 = _CocoaArrayWrapper.endIndex.getter(v15);
  sub_100109898();
  if (!v9)
    goto LABEL_16;
LABEL_3:
  sub_10018712C(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
      else
        v11 = *(id *)(v8 + 8 * i + 32);
      v12 = v11;
      sub_10010B970();

      v14 = _swiftEmptyArrayStorage[2];
      v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1)
        sub_10018712C(v13 > 1, v14 + 1, 1);
      _swiftEmptyArrayStorage[2] = v14 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v0 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(_QWORD *)(v0 + 72) * v14, v4, v16);
    }
    goto LABEL_16;
  }
  __break(1u);
}

void sub_10010B3E8()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v1 = objc_msgSend(v0, "pickedRoute");
  if (v1)
  {
    v6 = v1;
    sub_10010B970();

  }
  else
  {
    sub_10010BC28((uint64_t)"Fatal error", v2, v3, v4, v5, (uint64_t)"InCallService/AudioControlService.swift");
    __break(1u);
  }
}

uint64_t type metadata accessor for AudioControlService()
{
  return objc_opt_self(_TtC13InCallService19AudioControlService);
}

uint64_t sub_10010B480()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10010B4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC13InCallService19AudioControlService_callCenter);

    v6 = objc_msgSend(v5, "routeController");
    AudioRoute.uniqueIdentifier.getter();
    v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    objc_msgSend(v6, "pickRouteWithUniqueIdentifier:", v9);

  }
}

void sub_10010B564(uint64_t a1)
{
  uint64_t v1;

  sub_10010B4A4(a1, v1);
}

void sub_10010B56C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_10010AD84(a2);
    atomic_store(sub_10010BCA0(v3), a1);
  }
  sub_100109438();
}

void AudioControlService.routesChanged(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_10010BC70();
  v29 = v1;
  v30 = v2;
  v3 = v0;
  v5 = v4;
  v6 = sub_10010BC98();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = __chkstk_darwin(v6, v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  v14 = (char *)v27 - v13;
  sub_10010BBE8(0, (unint64_t *)&qword_1002D7E50, NSObject_ptr);
  v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                              + OBJC_IVAR____TtC13InCallService19AudioControlService_callCenter), "routeController"));
  v16 = static NSObject.== infix(_:_:)(v5, v15);

  if ((v16 & 1) != 0)
  {
    sub_10010B22C();
    v18 = v17;
    v19 = *(_QWORD *)(v17 + 16);
    if (!v19)
    {
      swift_bridgeObjectRelease(v17);
      return;
    }
    v27[0] = v11;
    v27[1] = v3;
    v27[2] = v5;
    v20 = v17 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v21 = *(_QWORD *)(v7 + 72);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v23 = v22(v14, v20, v6);
      v24 = ((uint64_t (*)(uint64_t))AudioRoute.isReceiver.getter)(v23);
      v25 = *(void (**)(char *, uint64_t))(v7 + 8);
      v25(v14, v6);
      if ((v24 & 1) != 0)
        break;
      v20 += v21;
      if (!--v19)
      {
        swift_bridgeObjectRelease(v18);
        goto LABEL_9;
      }
    }
    v28 = v18;
    ((void (*)(uint64_t *))CurrentValueSubject.send(_:))(&v28);
    swift_bridgeObjectRelease(v18);
    v26 = (char *)v27[0];
    sub_10010B3E8();
    ((void (*)(char *))CurrentValueSubject.send(_:))(v26);
    v25(v26, v6);
  }
LABEL_9:
  sub_10010BC44();
}

id DetailsCoordinatorCreationResult.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void AudioControlService.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.AudioControlService", 33, "init()", 6, 0);
  __break(1u);
}

id AudioControlService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioControlService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10010B848(uint64_t a1, uint64_t a2)
{
  sub_10010B874(&qword_1002D7E58, a2, (uint64_t (*)(uint64_t))type metadata accessor for AudioControlService);
}

void sub_10010B874(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = a3(a2);
    atomic_store(sub_10010BCA0(v4), a1);
  }
  sub_100109438();
}

uint64_t sub_10010B910()
{
  return AudioControlService.audioRoutesPublisher.getter();
}

uint64_t sub_10010B930()
{
  return AudioControlService.currentAudioRoutePublisher.getter();
}

uint64_t sub_10010B950()
{
  return AudioControlService.controlEnabledPublisher.getter();
}

void sub_10010B970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  sub_10010BC70();
  v23[1] = v0;
  v1 = type metadata accessor for SystemImage(0);
  v3 = __chkstk_darwin(v1, v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v3, v6);
  v9 = (char *)v23 - v8;
  v10 = sub_10010BC5C(v7, "isReceiver");
  v11 = sub_10010BC5C((uint64_t)v10, "isAuxiliary");
  v12 = sub_10010BC5C((uint64_t)v11, "uniqueIdentifier");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v17 = sub_10010BC5C(v16, "name");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v22 = sub_10010BA90(v21);
  sub_10010BB98(v22);
  AudioRoute.init(isReceiver:isAuxiliary:uniqueIdentifier:label:routeSystemImage:buttonSystemImage:)(v10, v11, v13, v15, v18, v20, v9, v5);
  sub_10010BC44();
}

uint64_t sub_10010BA90(uint64_t a1)
{
  unint64_t v1;
  uint64_t result;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (unint64_t)sub_10010BC5C(a1, "deviceType");
  if (v1 > 0x1D)
    goto LABEL_16;
  if (((1 << v1) & 0x20024) != 0)
    return static SystemImage.beatsHeadphones.getter();
  if (((1 << v1) & 0x20040000) != 0)
    return static SystemImage.airPodsPro.getter();
  if (v1 == 10)
    return static SystemImage.laptop.getter();
LABEL_16:
  if (v1)
    return static SystemImage.speaker.getter();
  v3 = sub_10010BC5C(0, "isSpeaker");
  if ((_DWORD)v3)
    return static SystemImage.speaker.getter();
  if (sub_10010BC5C((uint64_t)v3, "isReceiver"))
    return static SystemImage.iPhone.getter();
  result = sub_10010BC28((uint64_t)"Fatal error", v4, v5, v6, v7, (uint64_t)"InCallService/AudioControlService.swift");
  __break(1u);
  return result;
}

uint64_t sub_10010BB98(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = (uint64_t)sub_10010BC5C(a1, "isReceiver");
  if ((v1 & 1) != 0)
    return static SystemImage.speaker.getter();
  v2 = sub_10010BC5C(v1, "isSpeaker");
  if ((_DWORD)v2)
    return static SystemImage.speaker.getter();
  else
    return sub_10010BA90((uint64_t)v2);
}

uint64_t sub_10010BBE8(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10010BC20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_retain(*(_QWORD *)(v1 + a1));
}

uint64_t sub_10010BC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return _assertionFailure(_:_:file:line:flags:)(a1, 11, 2, 0, 0xE000000000000000, a6, 39, 2);
}

id sub_10010BC5C(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_10010BC64(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t sub_10010BC98()
{
  return type metadata accessor for AudioRoute(0);
}

uint64_t sub_10010BCA0(uint64_t a1)
{
  uint64_t v1;

  return swift_getWitnessTable(v1, a1);
}

void sub_10010BCAC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = sub_100109570();
  sub_10010C090(v0);
  sub_10010C06C();
  v1 = sub_10010C078();
  sub_10010C0B0(v1, v2);
  sub_100109438();
}

void sub_10010BCE8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = sub_100109570();
  sub_10010C090(v0);
  sub_10010C06C();
  v1 = sub_10010C098();
  Logger.init(subsystem:category:)(v1, v2, 0x656D616E6B63694ELL, 0xE800000000000000);
  sub_100109438();
}

void sub_10010BD38()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = sub_100109570();
  sub_10010C090(v0);
  sub_10010C06C();
  v1 = sub_10010C098();
  sub_10010C0B0(v1, v2);
  sub_100109438();
}

void sub_10010BD74()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = sub_100109570();
  sub_10010C090(v0);
  sub_10010C06C();
  v1 = sub_10010C098();
  Logger.init(subsystem:category:)(v1, v2, 0x6F7065526D617053, 0xED0000676E697472);
  sub_100109438();
}

void sub_10010BDD0()
{
  uint64_t v0;

  v0 = sub_100109570();
  sub_10010C090(v0);
  sub_10010C06C();
  Logger.init(subsystem:category:)(0xD00000000000001BLL, 0x80000001001F01D0, 0xD000000000000010, 0x80000001001F0350);
  sub_100109438();
}

void sub_10010BE40()
{
  sub_10010BE98();
  qword_1002E2D40 = OS_os_log.init(subsystem:category:)(0xD00000000000001DLL, 0x80000001001F0330, 0x746C7561666544, 0xE700000000000000);
  sub_100109438();
}

unint64_t sub_10010BE98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D7E90;
  if (!qword_1002D7E90)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D7E90);
  }
  return result;
}

uint64_t *sub_10010BED4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

void sub_10010BF14()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = sub_100109570();
  sub_10010C090(v0);
  sub_10010C06C();
  v1 = sub_10010C078();
  Logger.init(subsystem:category:)(v1, v2, 0x74536172656D6143, 0xEB00000000657461);
  sub_100109438();
}

void sub_10010BF6C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = sub_100109570();
  sub_10010C090(v0);
  sub_10010C06C();
  v1 = sub_10010C078();
  Logger.init(subsystem:category:)(v1, v2, 0x746174536C6C6950, 0xE900000000000065);
  sub_100109438();
}

void sub_10010BFC0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = sub_100109570();
  sub_10010C090(v0);
  sub_10010C06C();
  v1 = sub_10010C078();
  Logger.init(subsystem:category:)(v1, v2, 0x53746E6569626D41, 0xEC000000656E6563);
  sub_100109438();
}

void sub_10010C018()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = sub_100109570();
  sub_10010C090(v0);
  sub_10010C06C();
  v1 = sub_10010C078();
  Logger.init(subsystem:category:)(v1, v2, 0x5579746972616C43, 0xE900000000000049);
  sub_100109438();
}

uint64_t sub_10010C06C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100108664(v0, v1);
}

unint64_t sub_10010C078()
{
  return 0xD00000000000001DLL;
}

uint64_t *sub_10010C090(uint64_t a1)
{
  uint64_t *v1;

  return sub_10010BED4(a1, v1);
}

unint64_t sub_10010C098()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_10010C0B0(uint64_t a1, uint64_t a2)
{
  return Logger.init(subsystem:category:)(a1, a2, 0x746C7561666544, 0xE700000000000000);
}

id AudioCallServicesManager.call.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id AudioCallServicesManager.callCenter.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t VoicemailControlService.__allocating_init(call:callCenter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_allocObject(v2, 32, 7);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t VoicemailControlService.init(call:callCenter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

Swift::Void __swiftcall AcceptControlService.requestAcceptCall()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 24), "answerCall:", *(_QWORD *)(v0 + 16));
}

uint64_t VoicemailControlService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t VoicemailControlService.__deallocating_deinit()
{
  uint64_t v0;

  VoicemailControlService.deinit();
  return swift_deallocClassInstance(v0, 32, 7);
}

void sub_10010C174()
{
  AcceptControlService.requestAcceptCall()();
}

uint64_t type metadata accessor for AcceptControlService()
{
  return objc_opt_self(_TtC13InCallService20AcceptControlService);
}

id sub_10010C1B4()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(ICSPreferences), "sharedPreferences");
  v1 = objc_msgSend(v0, "shouldMakeFakeSOSCall");

  return v1;
}

uint64_t sub_10010C220()
{
  void *v0;

  if ((objc_msgSend(v0, "isSOS") & 1) != 0)
    return 1;
  else
    return sub_10010C250();
}

uint64_t sub_10010C250()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  _QWORD v10[4];

  v1 = objc_msgSend(v0, "handle");
  if (!v1)
    goto LABEL_5;
  v2 = v1;
  v3 = objc_msgSend(v1, "value");

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  if (!objc_msgSend((id)objc_opt_self(TUCall), "shouldMakeFakeSOSCall"))
  {
    swift_bridgeObjectRelease(v6);
LABEL_5:
    v8 = 0;
    return v8 & 1;
  }
  v10[2] = v4;
  v10[3] = v6;
  v10[0] = 0x3339313639383034;
  v10[1] = 0xEA00000000003234;
  v7 = sub_10010C378();
  v8 = StringProtocol.contains<A>(_:)(v10, &type metadata for String, &type metadata for String, v7, v7);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

unint64_t sub_10010C378()
{
  unint64_t result;

  result = qword_1002D83A0;
  if (!qword_1002D83A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1002D83A0);
  }
  return result;
}

id sub_10010C3B4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  double v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  void *v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  Class isa;
  void *v81;
  uint64_t v82;
  void *v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD aBlock[5];
  uint64_t v98;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v96 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v12 = result;
  sub_100129138();
  v14 = v13;
  objc_msgSend(v12, "addSubview:", v13);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = result;
  sub_100129718();
  v17 = v16;
  objc_msgSend(v15, "addSubview:", v16);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18 = result;
  v91 = v8;
  v93 = v6;
  v94 = v3;
  sub_100129CF0();
  v20 = v19;
  objc_msgSend(v18, "addSubview:", v19);

  sub_100129138();
  v22 = v21;
  objc_msgSend(v21, "setAlpha:", 0.0);

  sub_100129718();
  v24 = v23;
  objc_msgSend(v23, "setAlpha:", 0.0);

  sub_100129CF0();
  v26 = v25;
  objc_msgSend(v25, "setAlpha:", 0.0);

  sub_10010CBC0();
  sub_100129138();
  v28 = v27;
  objc_msgSend(v27, "addTarget:action:forControlEvents:", v1, "rttAudioRouteButtonTapped", 64);

  sub_100129718();
  v30 = v29;
  objc_msgSend(v29, "addTarget:action:forControlEvents:", v1, "rttCallControlsButtonTapped", 64);

  sub_100129CF0();
  v32 = v31;
  objc_msgSend(v31, "addTarget:action:forControlEvents:", v1, "rttVideoButtonTapped", 64);

  if (qword_1002D72C0 != -1)
    swift_once(&qword_1002D72C0, sub_10012818C);
  v92 = v7;
  v95 = v2;
  v33 = *(double *)&qword_1002E2DC8;
  v34 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v35 = swift_allocObject(v34, 80, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100241360;
  sub_100129138();
  v37 = v36;
  v38 = objc_msgSend(v36, "bottomAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
    goto LABEL_16;
  v39 = result;
  v40 = objc_msgSend(result, "safeAreaLayoutGuide");

  v41 = objc_msgSend(v40, "bottomAnchor");
  v42 = objc_msgSend(v38, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v35 + 32) = v42;
  sub_100129138();
  v44 = v43;
  v45 = objc_msgSend(v43, "leadingAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v46 = result;
  v47 = v33 + v33;
  v48 = objc_msgSend(result, "leadingAnchor");

  v49 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v48, v47);
  *(_QWORD *)(v35 + 40) = v49;
  sub_100129718();
  v51 = v50;
  v52 = objc_msgSend(v50, "bottomAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v53 = result;
  v54 = objc_msgSend(result, "safeAreaLayoutGuide");

  v55 = objc_msgSend(v54, "bottomAnchor");
  v56 = objc_msgSend(v52, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v35 + 48) = v56;
  sub_100129718();
  v58 = v57;
  v59 = objc_msgSend(v57, "trailingAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v60 = result;
  v61 = objc_msgSend(result, "trailingAnchor");

  v62 = objc_msgSend(v59, "constraintEqualToAnchor:constant:", v61, -v47);
  *(_QWORD *)(v35 + 56) = v62;
  sub_100129CF0();
  v64 = v63;
  v65 = objc_msgSend(v63, "bottomAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v66 = result;
  v67 = objc_msgSend(result, "safeAreaLayoutGuide");

  v68 = objc_msgSend(v67, "bottomAnchor");
  v69 = objc_msgSend(v65, "constraintEqualToAnchor:", v68);

  *(_QWORD *)(v35 + 64) = v69;
  sub_100129CF0();
  v71 = v70;
  v72 = objc_msgSend(v70, "centerXAnchor");

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v73 = result;
    v74 = (void *)objc_opt_self(NSLayoutConstraint);
    v75 = objc_msgSend(v73, "centerXAnchor");

    v76 = objc_msgSend(v72, "constraintEqualToAnchor:", v75);
    *(_QWORD *)(v35 + 72) = v76;
    aBlock[0] = v35;
    specialized Array._endMutation()(v77, v78);
    v79 = aBlock[0];
    sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v79);
    objc_msgSend(v74, "activateConstraints:", isa);

    sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
    v81 = (void *)static OS_dispatch_queue.main.getter();
    v82 = swift_allocObject(&unk_100288C88, 24, 7);
    swift_unknownObjectWeakInit(v82 + 16);
    aBlock[4] = sub_10010E250;
    v98 = v82;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100112054;
    aBlock[3] = &unk_100288D90;
    v83 = _Block_copy(aBlock);
    swift_release(v98);
    v84 = v96;
    static DispatchQoS.unspecified.getter(v85);
    aBlock[0] = _swiftEmptyArrayStorage;
    v86 = sub_10010E258();
    v87 = sub_1001085C0((uint64_t *)&unk_1002D7F80);
    v88 = sub_10010E298();
    v89 = v93;
    v90 = v95;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v87, v88, v95, v86);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v84, v89, v83);
    _Block_release(v83);

    (*(void (**)(char *, uint64_t))(v94 + 8))(v89, v90);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v84, v92);
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_10010CBC0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unsigned __int8 v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  int v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  void *v41;
  void *v42;
  void *v43;
  char **v44;
  void *v45;
  void *v46;
  void *v47;
  char **v48;
  void *v49;
  id v50;
  unsigned int v51;
  void *v52;
  void *v53;
  void *Strong;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  id v61;

  v2 = v0;
  v3 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  v5 = __chkstk_darwin(v3, v4);
  v7 = __chkstk_darwin(v5, v6);
  v9 = (char *)&v60 - v8;
  v11 = __chkstk_darwin(v7, v10);
  v13 = (char *)&v60 - v12;
  __chkstk_darwin(v11, v14);
  v16 = (char *)&v60 - v15;
  v17 = (void *)objc_opt_self(TUCallCenter);
  v18 = objc_msgSend(objc_msgSend(v17, "sharedInstance"), "routeController");
  sub_10010E3D8();
  v20 = sub_10010A1B8(v19, "pickedRoute");
  sub_10010E3A0();
  if (v1)
  {
    v22 = sub_10010E3C8(v21, "isReceiver");
    v60 = v17;
    if ((v22 & 1) != 0
      || (v23 = objc_msgSend(v1, "audioRouteGlyphForDisplayStyle:", 0)) == 0)
    {
      v26 = 0;
    }
    else
    {
      v24 = v23;
      v25 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlackColor");
      v26 = objc_msgSend(v24, "imageWithTintColor:", v25);

    }
    sub_10010E318();
    v28 = v27;
    sub_10010E3E0();
    type metadata accessor for UIButton.Configuration(0);
    v29 = sub_10010E370((uint64_t)v16);
    v61 = v26;
    if (v29)
    {
      sub_10010E3F4((uint64_t)v16);
      sub_10010E330();

      sub_10010E0D4((uint64_t)v16);
    }
    else
    {
      v30 = v26;
      if (!v26)
      {
        sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
        sub_10017BD1C(0xD000000000000013, 0x80000001001F0430);
        v30 = v31;
      }
      v32 = v26;
      UIButton.Configuration.image.setter(v30);
      sub_10010E330();

    }
    sub_10010E318();
    v34 = v33;
    v35 = objc_msgSend(v1, "name");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;

    sub_10010E114(v36, v38, v34);
    v40 = sub_10010E3C8(v39, "isReceiver");
    sub_10010E318();
    v42 = v41;
    sub_10010E3E0();
    if (sub_10010E370((uint64_t)v13))
    {
      sub_10010E3F4((uint64_t)v13);
      sub_10010E330();

      sub_10010E0D4((uint64_t)v13);
    }
    else
    {
      v43 = (void *)objc_opt_self(UIColor);
      v44 = &selRef_blackColor;
      if (v40)
        v44 = &selRef_systemWhiteColor;
      UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v43, *v44, v60));
      sub_10010E330();

    }
    sub_10010E318();
    v46 = v45;
    sub_10010E3E0();
    if (sub_10010E370((uint64_t)v9))
    {
      sub_10010E3F4((uint64_t)v9);
      sub_10010E330();

      sub_10010E0D4((uint64_t)v9);
    }
    else
    {
      v47 = (void *)objc_opt_self(UIColor);
      v48 = &selRef_clearColor;
      if (!v40)
        v48 = &selRef_systemWhiteColor;
      UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v47, *v48, v60));
      sub_10010E330();

    }
    v49 = v61;
    v50 = objc_msgSend(objc_msgSend(v60, "sharedInstance", v60), "routeController");
    sub_10010E3D8();
    v51 = objc_msgSend(&selRef_postNotificationName_object_userInfo_, "areAuxiliaryRoutesAvailable");

    sub_10010E318();
    v53 = v52;
    if (v51)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___EmergencyWebRTCViewController_delegate);
      if (Strong)
      {
        v55 = Strong;
        v56 = objc_msgSend(Strong, "getAudioRouteMenu");
        swift_unknownObjectRelease(v55);
      }
      else
      {
        v56 = 0;
      }
      sub_10010E3C0(v53, "setMenu:");

      sub_10010E318();
      v58 = v59;
      objc_msgSend(v59, "setShowsMenuAsPrimaryAction:", 1);
    }
    else
    {
      objc_msgSend(v52, "setMenu:", 0);

      sub_10010E318();
      v58 = v57;
      objc_msgSend(v57, "setShowsMenuAsPrimaryAction:", 0);
    }

  }
}

void sub_10010D084(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return;
  v3 = (void *)Strong;
  sub_100129718();
  v5 = v4;
  v6 = objc_msgSend(v4, "subviews");

  v7 = sub_10010BBE8(0, (unint64_t *)&qword_1002D7F90, UIView_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v26 = v8;
    else
      v26 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9)
  {
    sub_100119E3C(0, (v8 & 0xC000000000000001) == 0, v8);
    if ((v8 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
    else
      v10 = *(id *)(v8 + 32);
    v11 = v10;
    swift_bridgeObjectRelease(v8);
    sub_100129718();
    v13 = v12;
    objc_msgSend(v12, "frame");
    v15 = v14;

    objc_msgSend(v11, "_setCornerRadius:", v15 * 0.5);
  }
  else
  {
    swift_bridgeObjectRelease(v8);
  }
  sub_100129138();
  v17 = v16;
  v18 = objc_msgSend(v16, "subviews");

  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v7);
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v27 = v19;
    else
      v27 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v28 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v19);
    if (v28)
      goto LABEL_11;
LABEL_22:

    swift_bridgeObjectRelease(v19);
    return;
  }
  if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_22;
LABEL_11:
  sub_100119E3C(0, (v19 & 0xC000000000000001) == 0, v19);
  if ((v19 & 0xC000000000000001) != 0)
    v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
  else
    v20 = *(id *)(v19 + 32);
  v21 = v20;
  swift_bridgeObjectRelease(v19);
  sub_100129138();
  v23 = v22;
  objc_msgSend(v22, "frame");
  v25 = v24;

  objc_msgSend(v21, "_setCornerRadius:", v25 * 0.5);
}

void sub_10010D2F4()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  unsigned int v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  v0 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v1 = sub_10010E35C(v0);
  sub_10010E3D0();
  v3 = sub_10010A1B8(v2, "pickedRoute");
  sub_10010E3A0();
  if (!v0 || (v5 = sub_10010E3C8(v4, "isReceiver"), v0, v5))
  {
    v6 = sub_10010E310(v4, "sharedInstance");
    v7 = sub_10010E35C(v6);
    sub_10010E3D0();
    v9 = sub_10010A1B8(v8, "routeForSpeakerEnable");
    sub_10010E3A0();
    if (v6)
      goto LABEL_5;
  }
  v6 = sub_10010E310(v4, "sharedInstance");
  v10 = sub_10010E35C(v6);
  sub_10010E3D0();
  v12 = sub_10010A1B8(v11, "routeForSpeakerDisable");
  sub_10010E3A0();
  if (v6)
  {
LABEL_5:
    v13 = sub_10010E310(v4, "sharedInstance");
    v14 = sub_10010E35C(v13);

    sub_10010E3E8(v15, "pickRoute:");
  }
  sub_10010CBC0();
}

void *sub_10010D4D4()
{
  uint64_t v0;
  void *result;

  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  if (result)
  {
    objc_msgSend(result, "handleRTTVideoStreamingButtonTapped");
    return (void *)sub_10010E348();
  }
  return result;
}

void *sub_10010D554(uint64_t a1)
{
  uint64_t v1;
  void *result;

  result = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  if (result)
  {
    objc_msgSend(result, "transitionToRTTState:", a1);
    return (void *)sub_10010E348();
  }
  return result;
}

void sub_10010D5E0(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  char *v26;
  id v27;
  double v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  double v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Class isa;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  uint64_t v65[3];
  uint64_t v66;
  void (*v67)();
  uint64_t v68;

  v2 = v1;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100108664(v4, (uint64_t)&unk_1002E2CC8);
  v7 = (void *)Logger.logObject.getter(v5, v6);
  v8 = static os_log_type_t.default.getter();
  if (sub_10010E390(v8))
  {
    *(_WORD *)sub_10010E3FC() = 0;
    sub_10010E37C((void *)&_mh_execute_header, v9, v10, "EnhancedEmergency: EmergencyWebRTCViewController trying to add RTT message view");
    sub_10010E3A8();
  }

  sub_100129138();
  v12 = v11;
  v13 = objc_msgSend(v11, "superview");

  if (!v13)
    sub_10010C3B4();
  objc_msgSend(v2, "addChildViewController:", a1);
  v14 = sub_10010E2F4();
  if (!v14)
  {
    __break(1u);
    goto LABEL_24;
  }
  v15 = v14;
  objc_msgSend(v14, "setAlpha:", 0.0);

  v16 = sub_10010E364();
  if (!v16)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v17 = v16;
  v18 = sub_10010E2F4();
  if (!v18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v19 = v18;
  sub_10010E3C0(v17, "addSubview:");

  sub_10010E3E8(v20, "didMoveToParentViewController:");
  v21 = sub_10010E2F4();
  if (!v21)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v22 = v21;
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v23 = sub_10010E2F4();
  if (!v23)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v24 = v23;
  v66 = type metadata accessor for EmergencyWebRTCViewController();
  v65[0] = (uint64_t)v2;
  v25 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v26 = v2;
  v27 = sub_100135508(v65, (uint64_t)"recentMessageViewTapped");
  objc_msgSend(v24, "addGestureRecognizer:", v27, v65[0]);

  if (qword_1002D72C0 != -1)
    swift_once(&qword_1002D72C0, sub_10012818C);
  v28 = *(double *)&qword_1002E2DC8;
  if (*(_QWORD *)&v26[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonRTTBottomAnchor])
  {
LABEL_17:
    v33 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
    v34 = sub_100109754(v33, 56);
    *(_OWORD *)(v34 + 16) = xmmword_100241370;
    v35 = sub_10010E2F4();
    if (v35)
    {
      v36 = v28 + v28;
      v37 = objc_msgSend(v35, "bottomAnchor");
      sub_10010E338();
      sub_100129718();
      v39 = v38;
      v40 = objc_msgSend(v38, "topAnchor");

      v41 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v40, -(v28 + v28));
      sub_10010E3B8();

      *(_QWORD *)(v34 + 32) = v39;
      v42 = sub_10010E2F4();
      if (v42)
      {
        v43 = objc_msgSend(v42, "leadingAnchor");
        sub_10010E3B8();
        v44 = sub_10010E364();
        if (v44)
        {
          v45 = v44;
          v46 = objc_msgSend(v44, "leadingAnchor");

          v47 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v46, v36);
          sub_10010E338();

          *(_QWORD *)(v34 + 40) = v45;
          v48 = sub_10010E2F4();
          if (v48)
          {
            v49 = objc_msgSend(v48, "trailingAnchor");
            sub_10010E3B8();
            v50 = sub_10010E364();
            if (v50)
            {
              v51 = v50;
              v52 = (void *)objc_opt_self(NSLayoutConstraint);
              v53 = objc_msgSend(v51, "trailingAnchor");

              v54 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v53, -v36);
              *(_QWORD *)(v34 + 48) = v54;
              v65[0] = v34;
              specialized Array._endMutation()(v55, v56);
              v57 = v65[0];
              sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
              isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v57);
              sub_10010E3C0(v52, "activateConstraints:");

              v59 = (void *)objc_opt_self(UIView);
              v60 = sub_100109754((uint64_t)&unk_100288C88, 24);
              swift_unknownObjectWeakInit(v60 + 16);
              v61 = sub_100109754((uint64_t)&unk_100288D50, 32);
              *(_QWORD *)(v61 + 16) = a1;
              *(_QWORD *)(v61 + 24) = v60;
              v67 = sub_10010E22C;
              v68 = v61;
              v62 = sub_10010E350((uint64_t)sub_100112054, (uint64_t)_NSConcreteStackBlock, 1107296256, v65[2], v66);
              v63 = v68;
              v64 = a1;
              swift_release(v63);
              objc_msgSend(v59, "animateWithDuration:animations:", v62, 0.2);
              _Block_release(v62);
              return;
            }
            goto LABEL_32;
          }
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v29 = objc_msgSend(*(id *)&v26[OBJC_IVAR___EmergencyWebRTCViewController_zoomButton], "bottomAnchor");
  v30 = sub_10010E2F4();
  if (v30)
  {
    v31 = v30;
    v25 = objc_msgSend(v30, "topAnchor");

    v32 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v25, -*(double *)&qword_1002E2DC8);
    sub_10010E3D8();

    sub_1001285E8((uint64_t)v31);
    goto LABEL_17;
  }
LABEL_33:
  __break(1u);
}

void sub_10010DBCC(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100108664(v4, (uint64_t)&unk_1002E2CC8);
  v7 = (void *)Logger.logObject.getter(v5, v6);
  v8 = static os_log_type_t.default.getter();
  if (sub_10010E390(v8))
  {
    *(_WORD *)sub_10010E3FC() = 0;
    sub_10010E37C((void *)&_mh_execute_header, v9, v10, "EnhancedEmergency: EmergencyWebRTCViewController trying to remove RTT message view");
    sub_10010E3A8();
  }

  v11 = (void *)objc_opt_self(UIView);
  v12 = sub_100109754((uint64_t)&unk_100288C88, 24);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = sub_100109754((uint64_t)&unk_100288CB0, 32);
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  v24 = v13;
  v14 = sub_10010E350((uint64_t)sub_100112054, (uint64_t)_NSConcreteStackBlock, 1107296256, v20, v22);
  v15 = a1;
  swift_release(v24);
  v16 = sub_100109754((uint64_t)&unk_100288D00, 32);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v2;
  v25 = v16;
  v17 = sub_10010E350((uint64_t)sub_100110294, (uint64_t)_NSConcreteStackBlock, 1107296256, v21, v23);
  v18 = v15;
  v19 = v2;
  swift_release(v25);
  objc_msgSend(v11, "animateWithDuration:animations:completion:", v14, v17, 0.2);
  _Block_release(v17);
  _Block_release(v14);
}

void sub_10010DDA0(void *a1, void *a2, char a3, char a4, double a5)
{
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];

  v9 = objc_msgSend(a1, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setAlpha:", a5);

    sub_10010E300(v11, (uint64_t)v26);
    v12 = sub_10010E340();
    if (v12)
    {
      a2 = (void *)v12;
      sub_100129138();
      sub_10010E338();
      sub_10010E320();

    }
    sub_10010E300(v12, (uint64_t)v25);
    v13 = sub_10010E340();
    if (v13)
    {
      a2 = (void *)v13;
      sub_100129718();
      sub_10010E338();
      sub_10010E320();

    }
    sub_10010E300(v13, (uint64_t)v24);
    v14 = sub_10010E340();
    if (v14)
    {
      a2 = (void *)v14;
      sub_100129CF0();
      sub_10010E338();
      sub_10010E320();

    }
    sub_10010E300(v14, (uint64_t)v23);
    v15 = sub_10010E340();
    if (v15)
    {
      v16 = *(void **)(v15 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBottomAnchor);
      v17 = v16;
      sub_10010E3B8();
      if (v16)
      {
        objc_msgSend(a2, "setActive:", a3 & 1);

      }
    }
    sub_10010E300(v15, (uint64_t)v22);
    v18 = sub_10010E340();
    if (v18)
    {
      v19 = (void *)v18;
      v20 = *(void **)(v18 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonRTTBottomAnchor);
      v21 = v20;

      if (v20)
      {
        objc_msgSend(v21, "setActive:", a4 & 1);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10010DF24(int a1, id a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  id v8;

  objc_msgSend(a2, "willMoveToParentViewController:", 0);
  v5 = objc_msgSend(a2, "view");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "removeFromSuperview");

    objc_msgSend(a3, "removeChildViewController:", a2);
    v7 = objc_msgSend(a2, "view");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "removeAllGestureRecognizers");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10010E020()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;

  return CGSize.scaled(_:)(0.25, v2, v4);
}

uint64_t sub_10010E08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010E0D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10010E114(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, "setAccessibilityValue:", v5);

}

uint64_t sub_10010E164()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10010E18C()
{
  uint64_t v0;

  sub_10010DDA0(*(void **)(v0 + 16), *(void **)(v0 + 24), 1, 0, 0.0);
}

uint64_t sub_10010E1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10010E1C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10010E1C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10010E1F4(int a1)
{
  uint64_t v1;

  sub_10010DF24(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10010E200()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10010E22C()
{
  uint64_t v0;

  sub_10010DDA0(*(void **)(v0 + 16), *(void **)(v0 + 24), 0, 1, 1.0);
}

void sub_10010E250()
{
  uint64_t v0;

  sub_10010D084(v0);
}

unint64_t sub_10010E258()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D83B0;
  if (!qword_1002D83B0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1002D83B0);
  }
  return result;
}

unint64_t sub_10010E298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D83C0;
  if (!qword_1002D83C0)
  {
    v1 = sub_10010AD84((uint64_t *)&unk_1002D7F80);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002D83C0);
  }
  return result;
}

id sub_10010E2F4()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1912));
}

uint64_t sub_10010E300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return swift_beginAccess(v2, a2, 0, 0);
}

id sub_10010E310(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_10010E318()
{
  sub_100129138();
}

id sub_10010E320()
{
  void *v0;
  uint64_t v1;
  double v2;

  return objc_msgSend(v0, *(SEL *)(v1 + 3824), v2);
}

uint64_t sub_10010E330()
{
  return UIButton.configuration.setter();
}

void sub_10010E338()
{
  void *v0;

}

uint64_t sub_10010E340()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

uint64_t sub_10010E348()
{
  return ((uint64_t (*)(void))swift_unknownObjectRelease)();
}

void *sub_10010E350@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  a4 = a1;
  a5 = v5;
  return _Block_copy(&a2);
}

id sub_10010E35C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2656));
}

id sub_10010E364()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1912));
}

uint64_t sub_10010E370(uint64_t a1)
{
  uint64_t v1;

  return sub_100109FF4(a1, 1, v1);
}

void sub_10010E37C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

BOOL sub_10010E390(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_10010E3A0()
{
  void *v0;

}

uint64_t sub_10010E3A8()
{
  uint64_t v0;

  return swift_slowDealloc(v0, -1, -1);
}

void sub_10010E3B8()
{
  void *v0;

}

id sub_10010E3C0(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id sub_10010E3C8(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_10010E3D0()
{
  void *v0;

}

void sub_10010E3D8()
{
  void *v0;

}

uint64_t sub_10010E3E0()
{
  return UIButton.configuration.getter();
}

id sub_10010E3E8(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_10010E3F4(uint64_t a1)
{
  uint64_t v1;

  return sub_10010E08C(a1, v1);
}

uint64_t sub_10010E3FC()
{
  return swift_slowAlloc(2, -1);
}

_QWORD *sub_10010E40C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;

  v13 = _swiftEmptyArrayStorage;
  v4 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v4)
      break;
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return v13;
LABEL_7:
    for (i = 4; ; ++i)
    {
      v4 = i - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
      }
      else
      {
        v1 = *(_QWORD *)(a1 + 8 * i);
        swift_unknownObjectRetain(v1);
      }
      v6 = i - 3;
      if (__OFADD__(v4, 1))
        break;
      v7 = type metadata accessor for VisualMessage();
      v8 = swift_dynamicCastClass(v1, v7);
      if (!v8)
      {
        swift_unknownObjectRelease(v1);
        swift_release(v13);
        return 0;
      }
      v9 = v8;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v10 = v13[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
      v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
      specialized ContiguousArray._endMutation()(v11);
      if (v6 == v2)
        return v13;
    }
    __break(1u);
LABEL_17:
    sub_100110F50();
    _CocoaArrayWrapper.endIndex.getter(v1);
    sub_100110FDC();
  }
  sub_100110F50();
  _CocoaArrayWrapper.endIndex.getter(&v13);
  sub_100110FDC();
  if (v2)
    goto LABEL_7;
  return v13;
}

_QWORD *sub_10010E560(uint64_t a1)
{
  uint64_t v2;
  void **v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v2);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v3 = (void **)(a1 + 32);
  while (1)
  {
    v5 = *v3++;
    v4 = v5;
    v6 = objc_opt_self(UIView);
    v7 = swift_dynamicCastObjCClass(v5, v6);
    if (!v7)
      break;
    v8 = v7;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v4);
    v9 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
    v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
    specialized ContiguousArray._endMutation()(v10);
    if (!--v2)
      return _swiftEmptyArrayStorage;
  }
  swift_release(_swiftEmptyArrayStorage);
  return 0;
}

uint64_t sub_10010E630()
{
  uint64_t v0;
  uint64_t result;

  v0 = _s24InCallServiceTipUserInfoCMa();
  result = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  off_1002D7FA0 = (_UNKNOWN *)result;
  return result;
}

uint64_t sub_10010E660(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[12] = a1;
  v2[13] = v1;
  v3 = type metadata accessor for TPTipsHelper.Entry.Kind(0);
  v2[14] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[15] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[16] = swift_task_alloc(v5);
  v2[17] = swift_task_alloc(v5);
  v6 = type metadata accessor for TPTipsHelper.Entry(0);
  v2[18] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[19] = v7;
  v2[20] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SpeakerphoneTip(0);
  v2[21] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[22] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v2[23] = v10;
  v2[24] = swift_task_alloc((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1001085C0(&qword_1002D84A0);
  v2[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v2[26] = v12;
  v2[27] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v2[28] = v13;
  v2[29] = v14;
  return swift_task_switch(sub_10010E780, v13, v14);
}

uint64_t sub_10010E780()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = v0[25];
  v3 = v0[23];
  v2 = v0[24];
  v4 = v0[21];
  v5 = v0[22];
  v7 = v0[12];
  v6 = v0[13];
  v8 = type metadata accessor for TaskPriority(0);
  sub_10011100C(v1, v9, v10, v8);
  v11 = sub_100109754((uint64_t)&unk_100288DC8, 24);
  swift_unknownObjectWeakInit(v11 + 16, v6);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[30] = v12;
  v12(v2, v7, v4);
  v13 = swift_retain(v11);
  v14 = static MainActor.shared.getter(v13);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (v3 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_100288E68, v17 + 8, v15 | 7);
  *(_QWORD *)(v18 + 16) = v14;
  *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v18 + v16, v2, v4);
  *(_QWORD *)(v18 + v17) = v11;
  swift_release(v11);
  sub_10011102C();
  v0[31] = v19;
  sub_100110F40();
  v20 = (_QWORD *)swift_task_alloc(async function pointer to static TPTipsHelper.shared.getter[1]);
  v0[32] = v20;
  *v20 = v0;
  v20[1] = sub_10010E8D0;
  return static TPTipsHelper.shared.getter();
}

uint64_t sub_10010E8D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = a1;
  sub_100111004(v2);
  return sub_100110E68();
}

uint64_t sub_10010E91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  void (*v11)(_QWORD *, uint64_t, uint64_t);
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 248);
  v11 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 240);
  v12 = *(void **)(v0 + 264);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 216));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, enum case for TPTipsHelper.Entry.Kind.speakerphone(_:), v6);
  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)(v0 + 48) = sub_100110D00();
  v8 = sub_100110D40((_QWORD *)(v0 + 16));
  v11(v8, v7, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v10, v4, v6);
  sub_100110D7C(v0 + 16, v0 + 56);
  swift_retain(v1);
  TPTipsHelper.Entry.init(_:tip:observationTask:)(v10, v0 + 56, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_100110DC0((_QWORD *)(v0 + 16));
  dispatch thunk of TPTipsHelper.addEntry(_:)(v2);

  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  sub_100110FBC();
  sub_100111018();
  sub_100110F14();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010EA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5[19] = a4;
  v5[20] = a5;
  v6 = sub_1001085C0(&qword_1002D80D0);
  v5[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Tips.Status(0);
  v5[22] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[23] = v8;
  v5[24] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1001085C0(&qword_1002D80D8);
  v5[25] = v9;
  v5[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1001085C0(&qword_1002D80E0);
  v5[27] = v10;
  v5[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1001085C0(&qword_1002D80E8);
  v5[29] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[30] = v12;
  v5[31] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1001085C0(&qword_1002D80F0);
  v5[32] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[33] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[34] = swift_task_alloc(v15);
  v5[35] = swift_task_alloc(v15);
  v16 = type metadata accessor for MainActor(0);
  v5[36] = v16;
  v5[37] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  v5[38] = v17;
  v5[39] = v18;
  return swift_task_switch(sub_10010EBFC, v17, v18);
}

uint64_t sub_10010EBFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  sub_100110F94();
  v1 = v0[30];
  v2 = v0[31];
  v3 = v0[28];
  v4 = v0[29];
  v5 = v0[25];
  v19 = v0[20] + 16;
  v6 = sub_100110FC4();
  v0[40] = v6;
  v7 = sub_100110D00();
  v0[41] = v7;
  Tip.shouldDisplayUpdates.getter(v6, v7);
  AsyncMapSequence.base.getter(v4);
  v8 = sub_100110DE0(&qword_1002D80F8, &qword_1002D80D8, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v8);
  v9 = AsyncMapSequence.transform.getter(v4);
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v4);
  AsyncMapSequence.Iterator.init(_:transform:)(v3, v9, v11, v5, &type metadata for Bool, v8);
  v12 = sub_100110F6C(v19, (uint64_t)(v0 + 16));
  v13 = static MainActor.shared.getter(v12);
  v0[42] = v13;
  if (v13)
  {
    ObjectType = swift_getObjectType(v13);
    v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v17 = v16;
  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v0[43] = v15;
  v0[44] = v17;
  return sub_100110F1C();
}

uint64_t sub_10010ED4C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[42];
  v0[45] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 12, v0[32]);
  sub_100110DE0(&qword_1002D8100, &qword_1002D80E0, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[46] = v2;
  *v2 = v0;
  v2[1] = sub_10010EDF4;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[21], v1, &protocol witness table for MainActor);
}

uint64_t sub_10010EDF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = v2;
  sub_100110ED4(*(_QWORD *)(v2 + 368), &v4);
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 360))(v2 + 96, 0);
  return sub_100110E74();
}

uint64_t sub_10010EE58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  int *v12;

  v2 = v0[21];
  v1 = v0[22];
  if (sub_100109FF4(v2, 1, v1) == 1)
  {
    sub_100110E20(v2);
    sub_100110FF0();
    return swift_task_switch(sub_10010F3D4, v0[38], v0[39]);
  }
  else
  {
    v5 = v0[34];
    v4 = v0[35];
    v6 = v0[32];
    v7 = v0[33];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0[23] + 32))(v0[24], v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
    v8 = (int *)AsyncMapSequence.Iterator.transform.getter(v6);
    v0[47] = v9;
    v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v0[48] = v10;
    v10(v5, v6);
    v12 = (int *)((char *)v8 + *v8);
    v11 = (_QWORD *)swift_task_alloc(v8[1]);
    v0[49] = v11;
    *v11 = v0;
    v11[1] = sub_10010EF94;
    return ((uint64_t (*)(_QWORD *, _QWORD))v12)(v0 + 50, v0[24]);
  }
}

uint64_t sub_10010EF84()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 360))(v0 + 96, 1);
}

uint64_t sub_10010EF94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v4 = v1;
  v2 = *(_QWORD *)(v1 + 184);
  sub_100110ED4(*(_QWORD *)(v1 + 392), &v4);
  sub_100110F0C();
  *(_BYTE *)(v1 + 401) = *(_BYTE *)(v1 + 400);
  sub_100110FF8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return sub_100110F34();
}

uint64_t sub_10010F000()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 336));
  return sub_100110E68();
}

id sub_10010F030()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  double x;
  double y;
  double width;
  double height;
  uint64_t v17;
  uint64_t inited;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  NSArray v23;
  id result;
  id v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  CGRect v40;
  CGRect v41;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 160) + 16);
  if (!Strong)
  {
    sub_100110E94();
LABEL_11:
    sub_100110F0C();
    sub_100110EE0();
    sub_100110F48();
    sub_100110F14();
    sub_100111018();
    sub_100110FBC();
    swift_task_dealloc(v1);
    swift_task_dealloc(v2);
    return (id)sub_100110E7C(*(uint64_t (**)(void))(v0 + 8));
  }
  v4 = Strong;
  if ((*(_BYTE *)(v0 + 401) & 1) == 0)
  {
    sub_10010F448();
    v10 = v4;
    goto LABEL_17;
  }
  v5 = objc_msgSend(Strong, "speakerphoneTipReferenceButton");
  if (!v5)
  {
    sub_100110E94();

    goto LABEL_11;
  }
  v6 = v5;
  v7 = *(_QWORD *)(v0 + 152);
  type metadata accessor for TipUIPopoverViewController(0);
  v8 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 40) = v8;
  v2 = v8;
  v9 = sub_100110D40((_QWORD *)(v0 + 16));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v9, v7, v2);
  v10 = v6;
  v1 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)(v0 + 16, v10, FactoryOutcome.rawValue.getter, 0);
  v11 = TipUIPopoverViewController.popoverPresentationController.getter();
  if (!v11)
  {
    sub_100110E94();

    goto LABEL_11;
  }
  v12 = (void *)v11;
  objc_msgSend(v10, "bounds");
  v41 = CGRectInset(v40, -3.0, -3.0);
  x = v41.origin.x;
  y = v41.origin.y;
  width = v41.size.width;
  height = v41.size.height;
  objc_msgSend(v12, "setSourceView:", v10);
  objc_msgSend(v12, "setSourceRect:", x, y, width, height);
  objc_msgSend(v12, "setPermittedArrowDirections:", 2);
  v17 = sub_1001085C0(&qword_1002D8108);
  inited = swift_initStackObject(v17, v0 + 56);
  *(_OWORD *)(inited + 16) = xmmword_100241240;
  v19 = sub_100110FB0();
  *(_QWORD *)(inited + 32) = v19;
  v39 = inited;
  specialized Array._endMutation()(v19, v20);
  v21 = inited;
  v22 = sub_10010E560(inited);
  swift_bridgeObjectRelease(v21);
  if (v22)
  {
    sub_10010BBE8(0, (unint64_t *)&qword_1002D7F90, UIView_ptr);
    v23.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    v23.super.isa = 0;
  }
  objc_msgSend(v12, "setPassthroughViews:", v23.super.isa, v39);

  v25 = v1;
  result = sub_100110FB0();
  if (!result)
  {
    __break(1u);
    return result;
  }
  v26 = result;
  objc_msgSend(result, "frame");
  v28 = v27;
  v30 = v29;

  objc_msgSend(v25, "setPreferredContentSize:", v28, v30);
  if (qword_1002D72A0 != -1)
    swift_once(&qword_1002D72A0, sub_10010E630);
  v31 = (void *)*((_QWORD *)off_1002D7FA0 + 2);
  *((_QWORD *)off_1002D7FA0 + 2) = v25;
  v32 = v25;

  objc_msgSend(v4, "presentViewController:animated:completion:", v32, 1, 0);
LABEL_17:

  v34 = static MainActor.shared.getter(v33);
  *(_QWORD *)(v0 + 336) = v34;
  if (v34)
  {
    ObjectType = swift_getObjectType(v34);
    v36 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v38 = v37;
  }
  else
  {
    v36 = 0;
    v38 = 0;
  }
  *(_QWORD *)(v0 + 344) = v36;
  *(_QWORD *)(v0 + 352) = v38;
  return (id)sub_100110F1C();
}

uint64_t sub_10010F3D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));
  sub_100110F0C();
  sub_100110EE0();
  sub_100110F48();
  sub_100110F14();
  sub_100111018();
  sub_100110FBC();
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10010F448()
{
  void *v0;
  id v1;
  _QWORD *v2;
  id v3;

  if (qword_1002D72A0 != -1)
    swift_once(&qword_1002D72A0, sub_10010E630);
  v0 = (void *)*((_QWORD *)off_1002D7FA0 + 2);
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
    v2 = off_1002D7FA0;
    swift_retain(off_1002D7FA0);

    v3 = (id)v2[2];
    v2[2] = 0;
    swift_release(v2);

  }
}

uint64_t sub_10010F4F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t sub_10010F518()
{
  uint64_t v0;

  v0 = sub_10010F4F4();
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t _s24InCallServiceTipUserInfoCMa()
{
  return objc_opt_self(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo);
}

uint64_t sub_10010F554()
{
  void *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  ObjectType = swift_getObjectType(v0);
  v2 = sub_1001085C0(&qword_1002D84A0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002D72A0 != -1)
    swift_once(&qword_1002D72A0, sub_10010E630);
  v6 = off_1002D7FA0;
  v7 = *((_QWORD *)off_1002D7FA0 + 3);
  if (v7)
  {
    swift_retain(*((_QWORD *)off_1002D7FA0 + 3));
    sub_1001085C0(&qword_1002D8520);
    Task.cancel()();
    swift_release(v7);
    v6 = off_1002D7FA0;
  }
  v8 = type metadata accessor for TaskPriority(0);
  sub_10011100C((uint64_t)v5, v9, v10, v8);
  type metadata accessor for MainActor(0);
  swift_retain(v6);
  v11 = v0;
  v12 = static MainActor.shared.getter();
  v13 = (_QWORD *)sub_100109754((uint64_t)&unk_100288DF0, 48);
  v13[2] = v12;
  v13[3] = &protocol witness table for MainActor;
  v13[4] = v11;
  v13[5] = ObjectType;
  v6[3] = sub_10011B0B8((uint64_t)v5, (uint64_t)&unk_1002D8098, (uint64_t)v13);
  swift_release(v6);
  return sub_100110FF0();
}

uint64_t sub_10010F6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter();
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[6] = v7;
  v5[7] = v8;
  return swift_task_switch(sub_10010F730, v7, v8);
}

uint64_t sub_10010F730()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  v2 = v1[4];
  sub_100110F40();
  v1[8] = static TPTipsHelper.taskQueue.getter();
  v3 = sub_100109754((uint64_t)&unk_100288DC8, 24);
  sub_100110F84(v3);
  v4 = sub_100109754((uint64_t)&unk_100288E18, 32);
  v1[9] = v4;
  *(_QWORD *)(v4 + 16) = v0;
  *(_QWORD *)(v4 + 24) = v2;
  v7 = (char *)&async function pointer to dispatch thunk of TaskQueue.sync<A>(_:)
     + async function pointer to dispatch thunk of TaskQueue.sync<A>(_:);
  v5 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of TaskQueue.sync<A>(_:)
                                  + 1));
  v1[10] = v5;
  *v5 = v1;
  v5[1] = sub_10010F7FC;
  return ((uint64_t (*)(_QWORD, void *, uint64_t, char *))v7)(v1[2], &unk_1002D80A8, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_10010F7FC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  sub_100110ED4(*(_QWORD *)(v2 + 80), &v2);
  sub_100110F0C();
  sub_100110FF0();
  return sub_100110F28();
}

uint64_t sub_10010F84C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10010F878(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[14] = a2;
  v3 = type metadata accessor for CancellationError(0);
  v2[15] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[16] = v4;
  v2[17] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SpeakerphoneTip(0);
  v2[18] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[19] = v6;
  v2[20] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContinuousClock(0);
  v2[21] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[22] = v8;
  v2[23] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v2[24] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v2[25] = v10;
  v2[26] = v11;
  return swift_task_switch(sub_10010F990, v10, v11);
}

uint64_t sub_10010F990()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  ContinuousClock.init()();
  v1 = (_QWORD *)swift_task_alloc(unk_1002DA2AC);
  *(_QWORD *)(v0 + 216) = v1;
  *v1 = v0;
  v1[1] = sub_10010FA38;
  sub_100110F78();
  return v2();
}

uint64_t sub_10010FA38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD))(v2[22] + 8))(v2[23], v2[21]);
  return sub_100110F28();
}

uint64_t sub_10010FAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 112) + 16;
  sub_100110F6C(v1, v0 + 64);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 232) = Strong;
  if (Strong)
  {
    sub_100110F40();
    v3 = (_QWORD *)swift_task_alloc(async function pointer to static TPTipsHelper.shared.getter[1]);
    *(_QWORD *)(v0 + 240) = v3;
    *v3 = v0;
    v3[1] = sub_10010FBD8;
    return static TPTipsHelper.shared.getter();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 192));
    sub_100110EFC();
    sub_100110F48();
    sub_100110F14();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10010FBD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = a1;
  sub_100111004(v2);
  return sub_100110E68();
}

uint64_t sub_10010FC50()
{
  uint64_t *v0;
  void *v1;
  uint64_t **v2;

  v1 = (void *)v0[31];
  dispatch thunk of TPTipsHelper.setup()();

  SpeakerphoneTip.init()();
  v2 = (uint64_t **)swift_task_alloc(dword_1002D80B4);
  v0[32] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = (uint64_t *)sub_10010FCEC;
  return sub_10010E660(v0[20]);
}

uint64_t sub_10010FCEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)*v0;
  v2 = v4[19];
  v1 = v4[20];
  sub_100110ED4(v4[32], &v4);
  sub_100110FD4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return sub_100110F34();
}

uint64_t sub_10010FD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  void *v28;
  uint32_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  void *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;

  sub_100110F94();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  v25 = (void *)v22[29];
  swift_release(v22[24]);
  sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v26 = static OS_dispatch_queue.main.getter();
  v27 = sub_100109754((uint64_t)&unk_100288DC8, 24);
  swift_unknownObjectWeakInit(v27 + 16, v25);
  v22[2] = _NSConcreteStackBlock;
  v22[6] = sub_100110BA4;
  v22[7] = v27;
  v22[3] = 1107296256;
  v22[4] = sub_100110294;
  v22[5] = &unk_100288E30;
  v28 = _Block_copy(v22 + 2);
  swift_release(v22[7]);
  *((_DWORD *)v22 + 66) = objc_msgSend(v25, "proximitySensorNotificationToken");
  v29 = notify_register_dispatch("com.apple.backboard.proximity.changed", (int *)v22 + 66, v26, v28);
  _Block_release(v28);

  objc_msgSend(v25, "setProximitySensorNotificationToken:", *((unsigned int *)v22 + 66));
  if (v29)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v30 = sub_100109570();
    v31 = sub_100108664(v30, (uint64_t)&unk_1002E2CC8);
    v33 = Logger.logObject.getter(v31, v32);
    v34 = static os_log_type_t.error.getter();
    v35 = os_log_type_enabled(v33, v34);
    v36 = (void *)v22[29];
    if (v35)
    {
      v37 = (uint8_t *)sub_1001094C8(12);
      v38 = sub_1001094C8(32);
      a10 = v38;
      *(_DWORD *)v37 = 136315138;
      *((_DWORD *)v22 + 67) = v29;
      v39 = String.init<A>(reflecting:)((char *)v22 + 268);
      v41 = v40;
      v22[13] = sub_100121E04(v39, v40, &a10);
      sub_100111020((uint64_t)(v22 + 13), (uint64_t)(v22 + 14));
      swift_bridgeObjectRelease(v41);
      sub_100109638((void *)&_mh_execute_header, v33, v34, "Failed to observe proximity sensor state with status %s", v37);
      sub_100109598(v38, v42, (uint64_t)&type metadata for Any + 8);
      sub_100109440(v38);
      sub_100109440((uint64_t)v37);

    }
    else
    {

    }
  }
  else
  {

  }
  sub_100110EFC();
  sub_100110F48();
  sub_100110F14();
  return sub_100110E7C((uint64_t (*)(void))v22[1]);
}

uint64_t sub_100110018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint8_t *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v21;

  sub_100110F94();
  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 192));
  *(_QWORD *)(v0 + 96) = v1;
  sub_100110FE8();
  v4 = sub_1001085C0(&qword_1002D8520);
  if ((swift_dynamicCast(v2, v0 + 96, v4, v3, 0) & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_errorRelease(*(_QWORD *)(v0 + 224));
    sub_100110FD4(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v7 = *(_QWORD *)(v0 + 96);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 96));
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v8 = sub_100109570();
    sub_100108664(v8, (uint64_t)&unk_1002E2CC8);
    sub_100110FE8();
    v9 = sub_100110FE8();
    v11 = Logger.logObject.getter(v9, v10);
    v12 = static os_log_type_t.error.getter();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(_QWORD *)(v0 + 224);
    if (!v13)
    {
      sub_100110F64();
      sub_100110F64();
      sub_100110F64();

      goto LABEL_9;
    }
    v21 = v11;
    v15 = (uint8_t *)sub_1001094C8(12);
    v16 = (_QWORD *)sub_1001094C8(8);
    *(_DWORD *)v15 = 138412290;
    swift_errorRetain(v14);
    v17 = _swift_stdlib_bridgeErrorToNSError(v14);
    *(_QWORD *)(v0 + 88) = v17;
    sub_100111020(v0 + 88, v0 + 96);
    *v16 = v17;
    sub_100110F64();
    sub_100110F64();
    sub_100109638((void *)&_mh_execute_header, v21, v12, "Failed to start observing tips due to %@", v15);
    v18 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v16, v19, v18);
    sub_100109440((uint64_t)v16);
    sub_100109440((uint64_t)v15);

    v7 = v14;
  }
  swift_errorRelease(v7);
LABEL_9:
  sub_100110EFC();
  sub_100110F48();
  sub_100110F14();
  return sub_100110E7C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_10011023C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "proximityStateChanged");

  }
}

uint64_t sub_100110294(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

uint64_t sub_100110304()
{
  void *v0;
  uint32_t state;
  uint32_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v16;
  uint64_t state64;
  uint64_t v18;

  state64 = 0;
  state = notify_get_state((int)objc_msgSend(v0, "proximitySensorNotificationToken"), &state64);
  if (state)
  {
    v2 = state;
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v3 = sub_100109570();
    v4 = sub_100108664(v3, (uint64_t)&unk_1002E2CC8);
    v6 = Logger.logObject.getter(v4, v5);
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)sub_1001094C8(12);
      v9 = sub_1001094C8(32);
      v18 = v9;
      *(_DWORD *)v8 = 136315138;
      LODWORD(v16) = v2;
      v10 = String.init<A>(reflecting:)(&v16);
      v12 = v11;
      v16 = sub_100121E04(v10, v11, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &state64, v8 + 4, v8 + 12);
      swift_bridgeObjectRelease(v12);
      sub_100109638((void *)&_mh_execute_header, v6, v7, "Failed to fetch proximity sensor state, result = %s", v8);
      sub_100109598(v9, v13, (uint64_t)&type metadata for Any + 8);
      sub_100109440(v9);
      sub_100109440((uint64_t)v8);
    }

    v14 = 0;
  }
  else
  {
    v14 = state64 != 1;
  }
  return static SpeakerphoneTip.isAwayFromFace.setter(v14);
}

uint64_t sub_1001104F4()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1002D72A0 != -1)
    swift_once(&qword_1002D72A0, sub_10010E630);
  if (*((_QWORD *)off_1002D7FA0 + 3))
  {
    swift_retain(*((_QWORD *)off_1002D7FA0 + 3));
    sub_1001085C0(&qword_1002D8520);
    Task.cancel()();
    sub_100110F0C();
  }
  sub_100110F40();
  static TPTipsHelper.taskQueue.getter();
  v1 = sub_100109754((uint64_t)&unk_100288DC8, 24);
  sub_100110F84(v1);
  swift_retain(v0);
  dispatch thunk of TaskQueue.async(_:)(&unk_1002D8088, v0);
  sub_100110F0C();
  return swift_release_n(v0, 2);
}

uint64_t sub_1001105D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = a1;
  v2 = type metadata accessor for TPTipsHelper.Entry.Kind(0);
  v1[6] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[7] = v3;
  v1[8] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100110634, 0, 0);
}

uint64_t sub_100110634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  sub_100110F6C(v1, v0 + 16);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 80) = type metadata accessor for MainActor(0);
    v3 = static MainActor.shared.getter();
    *(_QWORD *)(v0 + 88) = v3;
    sub_100110EC8(v3, (uint64_t)&protocol witness table for MainActor);
    sub_100109690();
    sub_100109684();
    return sub_100110E74();
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001106D0()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release(*(_QWORD *)(v0 + 88));
  sub_10010F448();
  sub_100110F40();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to static TPTipsHelper.shared.getter[1]);
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_100110730;
  return static TPTipsHelper.shared.getter();
}

uint64_t sub_100110730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = a1;
  sub_100111004(v2);
  sub_100110F78();
  return sub_100110E68();
}

uint64_t sub_10011077C()
{
  _QWORD *v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[7] + 104))(v0[8], enum case for TPTipsHelper.Entry.Kind.speakerphone(_:), v0[6]);
  v1 = sub_100110FCC();
  v0[14] = v1;
  sub_100110EC8(v1, (uint64_t)&protocol witness table for MainActor);
  sub_100109690();
  sub_100109684();
  return sub_100110E74();
}

uint64_t sub_1001107E0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)v0[13];
  v3 = v0[7];
  v2 = v0[8];
  swift_release(v0[14]);
  dispatch thunk of TPTipsHelper.removeEntries(_:)(v2);

  sub_100110FF8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_100110F78();
  return sub_100110E74();
}

uint64_t sub_100110838()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_100110FCC();
  *(_QWORD *)(v0 + 120) = v1;
  sub_100110EC8(v1, (uint64_t)&protocol witness table for MainActor);
  sub_100109690();
  sub_100109684();
  return sub_100110E74();
}

uint64_t sub_100110880()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 120));
  *(_DWORD *)(v0 + 136) = objc_msgSend(v1, "proximitySensorNotificationToken");
  sub_100110F78();
  return sub_100110E68();
}

uint64_t sub_1001108C8()
{
  uint64_t v0;
  uint64_t v1;

  notify_cancel(*(_DWORD *)(v0 + 136));
  v1 = sub_100110FCC();
  *(_QWORD *)(v0 + 128) = v1;
  sub_100110EC8(v1, (uint64_t)&protocol witness table for MainActor);
  sub_100109690();
  sub_100109684();
  return sub_100110E74();
}

uint64_t sub_100110918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  swift_release(*(_QWORD *)(v0 + 128));
  if (qword_1002D72A0 != -1)
    swift_once(&qword_1002D72A0, sub_10010E630);
  v1 = _s24InCallServiceTipUserInfoCMa();
  v2 = sub_100109754(v1, 32);
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  v3 = off_1002D7FA0;
  off_1002D7FA0 = (_UNKNOWN *)v2;
  swift_release(v3);
  sub_100110F78();
  return sub_100110E68();
}

uint64_t sub_100110998()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100110A00()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100110A24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1002D8084);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100110A6C;
  return sub_1001105D4(v0);
}

uint64_t sub_100110A6C()
{
  uint64_t v0;

  sub_100110EA8();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100110A90()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100110ABC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)swift_task_alloc(dword_1002D8094);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1001094A8(v1);
  return sub_10010F6C0(v2, v3, v4, v5, v6);
}

uint64_t sub_100110B1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100110B40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1002D80A4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100110E64;
  return sub_10010F878(a1, v4);
}

void sub_100110BA4(uint64_t a1)
{
  uint64_t v1;

  sub_10011023C(a1, v1);
}

uint64_t sub_100110BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100110BBC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100110BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(sub_100110FC4() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100110FD4(v0 + v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_100110C4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100110FC4();
  v1 = (_QWORD *)swift_task_alloc(dword_1002D80BC);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1001094A8(v1);
  return sub_10010EA88(v2, v3, v4, v5, v6);
}

uint64_t sub_100110CD4()
{
  uint64_t v0;

  sub_100110EA8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100110D00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D80C8;
  if (!qword_1002D80C8)
  {
    v1 = type metadata accessor for SpeakerphoneTip(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SpeakerphoneTip, v1);
    atomic_store(result, (unint64_t *)&qword_1002D80C8);
  }
  return result;
}

_QWORD *sub_100110D40(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_100110D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100110DC0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100110DE0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10010AD84(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100110E20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001085C0(&qword_1002D80D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100110E68()
{
  return ((uint64_t (*)(void))swift_task_switch)();
}

uint64_t sub_100110E74()
{
  return swift_task_switch();
}

uint64_t sub_100110E7C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100110E88(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100110E94()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));
}

uint64_t sub_100110EA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc(v3);
}

uint64_t sub_100110EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return dispatch thunk of Actor.unownedExecutor.getter(v2, a2);
}

uint64_t sub_100110ED4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2;
  return swift_task_dealloc(a1);
}

uint64_t sub_100110EE0()
{
  uint64_t v0;

  return swift_task_dealloc(*(_QWORD *)(v0 + 280));
}

uint64_t sub_100110EFC()
{
  uint64_t v0;

  return swift_task_dealloc(*(_QWORD *)(v0 + 184));
}

uint64_t sub_100110F0C()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100110F14()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_100110F1C()
{
  return swift_task_switch();
}

uint64_t sub_100110F28()
{
  return swift_task_switch();
}

uint64_t sub_100110F34()
{
  return swift_task_switch();
}

uint64_t sub_100110F40()
{
  return type metadata accessor for TPTipsHelper(0);
}

uint64_t sub_100110F48()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_100110F50()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_100110F64()
{
  uint64_t v0;

  return swift_errorRelease(v0);
}

uint64_t sub_100110F6C(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 0, 0);
}

uint64_t sub_100110F84(uint64_t a1)
{
  uint64_t v1;

  return swift_unknownObjectWeakInit(a1 + 16, v1);
}

id sub_100110FB0()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1912));
}

uint64_t sub_100110FBC()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_100110FC4()
{
  return type metadata accessor for SpeakerphoneTip(0);
}

uint64_t sub_100110FCC()
{
  return static MainActor.shared.getter();
}

uint64_t sub_100110FD4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_100110FDC()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100110FE8()
{
  uint64_t v0;

  return swift_errorRetain(v0);
}

uint64_t sub_100110FF0()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100110FF8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_100111004@<X0>(uint64_t a1@<X8>)
{
  return swift_task_dealloc(a1);
}

uint64_t sub_10011100C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108600(a1, 1, 1, a4);
}

uint64_t sub_100111018()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_100111020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

void sub_10011102C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v10[4];

  v4 = sub_100111FD0();
  v5 = sub_10011200C(v4);
  if (v6)
  {
    sub_100111CDC(v1);
    v7 = 7168;
  }
  else
  {
    TaskPriority.rawValue.getter(v5);
    sub_100111FB8();
    v7 = v3 | 0x1C00;
  }
  if (*(_QWORD *)(v0 + 16))
  {
    sub_10011203C();
    sub_100112030();
    sub_100111FFC();
    sub_100111FEC();
  }
  else
  {
    v1 = 0;
    v3 = 0;
  }
  v8 = sub_100109754((uint64_t)&unk_100288EE0, 32);
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = v0;
  if (v3 | v1)
  {
    v10[0] = 0;
    v10[1] = 0;
    v9 = v10;
    v10[2] = v1;
    v10[3] = v3;
  }
  else
  {
    v9 = 0;
  }
  swift_task_create(v7, v9, (char *)&type metadata for () + 8, &unk_1002D8268, v8);
  sub_100111FA0();
}

void sub_1001110F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v11[4];

  v4 = sub_100111FD0();
  v5 = sub_10011200C(v4);
  if (v6)
  {
    sub_100111CDC(v1);
    v7 = 7168;
  }
  else
  {
    TaskPriority.rawValue.getter(v5);
    sub_100111FB8();
    v7 = v3 | 0x1C00;
  }
  if (*(_QWORD *)(v0 + 16))
  {
    sub_10011203C();
    sub_100112030();
    sub_100111FFC();
    sub_100111FEC();
  }
  else
  {
    v1 = 0;
    v3 = 0;
  }
  v8 = sub_100109754((uint64_t)&unk_100288EB8, 32);
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = v0;
  v9 = sub_1001085C0((uint64_t *)&unk_1002D9540);
  if (v3 | v1)
  {
    v11[0] = 0;
    v11[1] = 0;
    v10 = v11;
    v11[2] = v1;
    v11[3] = v3;
  }
  else
  {
    v10 = 0;
  }
  swift_task_create(v7, v10, v9, &unk_1002D8258, v8);
  sub_100111FA0();
}

uint64_t MessageControlService.selectionsPublisher.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  sub_100111F6C(v0 + 16, (uint64_t)v2, 0);
  return swift_retain(*(_QWORD *)(v0 + 16));
}

void MessageControlService.selectionsPublisher.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  sub_100111F6C(v1 + 16, (uint64_t)v4, 1);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  swift_release(v3);
  sub_100112048();
}

uint64_t (*MessageControlService.selectionsPublisher.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  sub_100111F6C(v1 + 16, a1, 33);
  return j__swift_endAccess;
}

id AddCallControlService.callCenter.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t MessageControlService.presentingViewController.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  sub_100111F6C(v0 + 40, (uint64_t)v2, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 40);
}

void MessageControlService.presentingViewController.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + 40;
  sub_100111F6C(v3, (uint64_t)v4, 1);
  swift_unknownObjectWeakAssign(v3, a1);

  sub_100112048();
}

void (*MessageControlService.presentingViewController.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  sub_100111F6C(v1 + 40, (uint64_t)v3, 33);
  v3[3] = swift_unknownObjectWeakLoadStrong(v1 + 40);
  return sub_100111348;
}

void sub_100111348(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign((char *)(*a1)[4] + 40, v4);
  if ((a2 & 1) != 0)
  {

    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);

  }
  free(v3);
}

uint64_t sub_1001113B0()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  void *Strong;
  void *v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  _BYTE v12[24];

  v1 = v0;
  v2 = (void *)v0[7];
  v3 = v2;
  if (v2 != (void *)1)
    goto LABEL_7;
  sub_100111F6C((uint64_t)(v1 + 5), (uint64_t)v12, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 5);

  if (!Strong)
  {
    v3 = 0;
    goto LABEL_6;
  }
  v5 = (void *)v1[3];
  result = swift_unknownObjectWeakLoadStrong(v1 + 5);
  if (result)
  {
    v7 = (void *)result;
    sub_100111F2C();
    v8 = v1[6];
    v9 = v5;
    swift_unknownObjectRetain(v8);
    v3 = sub_100111494(v9, v7, v8);
LABEL_6:
    v10 = (void *)v1[7];
    v1[7] = v3;
    v11 = v3;
    sub_100111CAC(v10);
LABEL_7:
    sub_100111F1C(v2);
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

id sub_100111494(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "initWithIncomingCall:customMessagePresentingViewController:declineCallService:", a1, a2, a3);

  swift_unknownObjectRelease(a3);
  return v7;
}

uint64_t MessageControlService.__allocating_init(call:callCenter:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = sub_100109754(v2, 64);
  MessageControlService.init(call:callCenter:)(a1, a2);
  return v5;
}

_QWORD *MessageControlService.init(call:callCenter:)(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = sub_1001085C0(&qword_1002D8110);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(v3 + 5, 0);
  v3[7] = 1;
  v3[3] = a1;
  v3[4] = a2;
  v10 = objc_allocWithZone((Class)type metadata accessor for DeclineCallServiceFactory());
  v11 = a1;
  v12 = a2;
  v13 = objc_msgSend(v10, "init");
  v14 = type metadata accessor for DeclineCallService();
  sub_100109754(v14, 112);
  v15 = v12;
  v16 = sub_1001829C4((uint64_t)v15);

  v3[6] = v16;
  v17 = sub_1001085C0(&qword_1002D8118);
  v18 = type metadata accessor for ControlSelection(0);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))+ 4 * *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_1002413C0;
  type metadata accessor for SystemImage(0);
  sub_100111F74((uint64_t)v9, 1);
  v20 = sub_100111FE4(0x7972726F53, 0xE500000000000000, 0xD00000000000001ELL, 0x80000001001F0550);
  static SystemImage.walk.getter(v20);
  sub_100111F74((uint64_t)v9, 0);
  v21 = sub_100111FE4(5721423, 0xE300000000000000, 0x6D206E6F206D2749, 0xEE002E7961772079);
  static SystemImage.clock.getter(v21);
  sub_100111F74((uint64_t)v9, 0);
  sub_100111FE4(1819042115, 0xE400000000000000, 0xD000000000000015, 0x80000001001F0570);
  sub_100111F74((uint64_t)v9, 1);
  sub_100111FE4(0x6D6F74737543, 0xE600000000000000, 0x2E2E6D6F74737543, 0xE90000000000002ELL);
  v26 = v19;
  v22 = sub_1001085C0(&qword_1002D8120);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = CurrentValueSubject.init(_:)(&v26);

  v3[2] = v23;
  return v3;
}

void MessageControlService.requestSendMessage(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;

  v1 = v0;
  v2 = sub_1001085C0(&qword_1002D84A0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)sub_1001113B0();
  if (v6)
  {
    v23 = v6;
    v7 = ControlSelection.uniqueIdentifier.getter();
    if (v7 == 0x6D6F74737543 && v8 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease(0xE600000000000000);
    }
    else
    {
      v10 = v8;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0x6D6F74737543, 0xE600000000000000, 0);
      v12 = swift_bridgeObjectRelease(v10);
      if ((v11 & 1) == 0)
      {
        ControlSelection.label.getter(v12);
        v14 = v13;
        v15 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v14);
        objc_msgSend(v23, "sendDeclineWithMessageResponse:", v15);

        v16 = type metadata accessor for TaskPriority(0);
        sub_100108600((uint64_t)v5, 1, 1, v16);
        type metadata accessor for MainActor(0);
        v17 = swift_retain(v1);
        v18 = static MainActor.shared.getter(v17);
        v19 = (_QWORD *)sub_100109754((uint64_t)&unk_100288E90, 40);
        v19[2] = v18;
        v19[3] = &protocol witness table for MainActor;
        v19[4] = v1;
        sub_10011102C();
        v21 = v20;

        swift_release(v21);
        return;
      }
    }
    objc_msgSend(v23, "showCustomReplyWithMessageComposer");

  }
}

uint64_t sub_1001119A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[15] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[16] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[17] = v6;
  v4[18] = v7;
  return swift_task_switch(sub_100111A10, v6, v7);
}

uint64_t sub_100111A10()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0 + 2;
  v2 = v0[15];
  v3 = *(void **)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = String._bridgeToObjectiveC()();
  v0[19] = v5;
  v0[2] = v0;
  v0[3] = sub_100111ADC;
  v6 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v7 = v0 + 10;
  v7[1] = 0x40000000;
  v7[2] = sub_10014FC98;
  v7[3] = &unk_100288EF8;
  v7[4] = v6;
  objc_msgSend(v3, "declineAnsweringWithCall:anayticsSourceForDismissal:reason:completionHandler:", v4, v5, 4, v7);
  return swift_continuation_await(v1);
}

uint64_t sub_100111ADC()
{
  uint64_t v0;

  return swift_task_switch(sub_100111B20, *(_QWORD *)(*(_QWORD *)v0 + 136), *(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_100111B20()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 128));

  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t MessageControlService.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectWeakDestroy(v0 + 40);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  sub_100111CAC(*(id *)(v0 + 56));
  return v0;
}

uint64_t MessageControlService.__deallocating_deinit()
{
  uint64_t v0;

  MessageControlService.deinit();
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t sub_100111BB4()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 16, v3, 0, 0);
  return swift_retain(*(_QWORD *)(v1 + 16));
}

void sub_100111BF4()
{
  MessageControlService.requestSendMessage(for:)();
}

uint64_t sub_100111C14()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100111C40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1002D812C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100110A6C;
  return sub_1001119A4(a1, v4, v5, v6);
}

void sub_100111CAC(id a1)
{
  if (a1 != (id)1)

}

uint64_t type metadata accessor for MessageControlService()
{
  return objc_opt_self(_TtC13InCallService21MessageControlService);
}

uint64_t sub_100111CDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001085C0(&qword_1002D84A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100111D1C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100111D80;
  return v6(a1);
}

uint64_t sub_100111D80()
{
  uint64_t v0;

  sub_100110EA8();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100111DA8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 32) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 40) = v3;
  *v3 = v2;
  v3[1] = sub_100111E10;
  return v5(v2 + 16);
}

uint64_t sub_100111E10()
{
  uint64_t *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_OWORD **)(*v0 + 32);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));
  *v2 = *(_OWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_100111E60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100111E84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)swift_task_alloc(dword_1002D8254);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_100111F80(v1);
  return sub_10010944C(v2, v3, v4, v5);
}

uint64_t sub_100111ED0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)swift_task_alloc(dword_1002D8264);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_100111F80(v1);
  return sub_10010944C(v2, v3, v4, v5);
}

id sub_100111F1C(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

unint64_t sub_100111F2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8270;
  if (!qword_1002D8270)
  {
    v1 = objc_opt_self(PHDeclineWithMessageController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D8270);
  }
  return result;
}

uint64_t sub_100111F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_beginAccess(a1, a2, a3, 0);
}

uint64_t sub_100111F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100108600(a1, a2, 1, v2);
}

uint64_t sub_100111F80(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_100111FB8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_100111FD0()
{
  return type metadata accessor for TaskPriority(0);
}

uint64_t sub_100111FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return ControlSelection.init(uniqueIdentifier:label:systemImage:)(a1, a2, a3, a4, v4);
}

uint64_t sub_100111FEC()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

uint64_t sub_100111FFC()
{
  uint64_t v0;
  uint64_t v1;

  return dispatch thunk of Actor.unownedExecutor.getter(v1, v0);
}

uint64_t sub_10011200C(uint64_t a1)
{
  uint64_t v1;

  return sub_100109FF4(v1, 1, a1);
}

uint64_t sub_100112030()
{
  uint64_t v0;

  return swift_unknownObjectRetain(v0);
}

uint64_t sub_10011203C()
{
  uint64_t v0;

  return swift_getObjectType(v0);
}

uint64_t sub_100112054(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_1001120A0()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR___ICSPosterConfigurationWrapper_configuration);
  sub_100109438();
}

uint64_t sub_1001120E8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___ICSPosterConfigurationWrapper_source);
}

void sub_100112118()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR___ICSPosterConfigurationWrapper_titleStyleAttributes);
  sub_100109438();
}

void sub_100112188(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___ICSPosterConfigurationWrapper_titleStyleAttributes);
  *(_QWORD *)(v1 + OBJC_IVAR___ICSPosterConfigurationWrapper_titleStyleAttributes) = a1;

}

void sub_10011219C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  objc_super v6;

  v3 = OBJC_IVAR___ICSPosterConfigurationWrapper_titleStyleAttributes;
  *(_QWORD *)&v2[OBJC_IVAR___ICSPosterConfigurationWrapper_titleStyleAttributes] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___ICSPosterConfigurationWrapper_configuration] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___ICSPosterConfigurationWrapper_source] = a2;
  v4 = *(void **)&v2[v3];
  *(_QWORD *)&v2[v3] = 0;
  v5 = a1;

  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for PosterConfigurationWrapper();
  objc_msgSendSuper2(&v6, "init");
  sub_10011AF04();
  sub_10011AEDC();
}

void sub_100112250()
{
  sub_10011B030((uint64_t)"InCallService.PosterConfigurationWrapper", 40, (uint64_t)"init()");
  __break(1u);
}

id sub_100112280()
{
  return sub_100112450(type metadata accessor for PosterConfigurationWrapper);
}

unint64_t FactoryOutcome.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t sub_1001122D4()
{
  _QWORD *v0;

  return sub_100107B28(*v0);
}

void sub_1001122DC(int a1)
{
  Swift::UInt *v1;

  sub_100107BE4(a1, *v1);
}

uint64_t sub_1001122E4(uint64_t a1)
{
  _QWORD *v1;

  return sub_100107C20(a1, *v1);
}

unint64_t sub_1001122EC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = FactoryOutcome.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_10011231C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_100112348()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService32DetailsCoordinatorCreationResult_outcome);
}

uint64_t sub_100112378()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC13InCallService32DetailsCoordinatorCreationResult_coordinator));
}

id sub_100112388(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC13InCallService32DetailsCoordinatorCreationResult_outcome] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC13InCallService32DetailsCoordinatorCreationResult_coordinator] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for DetailsCoordinatorCreationResult();
  return objc_msgSendSuper2(&v4, "init");
}

void DetailsCoordinatorCreationResult.init()()
{
  sub_10011B030((uint64_t)"InCallService.DetailsCoordinatorCreationResult", 46, (uint64_t)"init()");
  __break(1u);
}

id DetailsCoordinatorCreationResult.__deallocating_deinit()
{
  return sub_100112450(type metadata accessor for DetailsCoordinatorCreationResult);
}

id sub_100112450(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for DetailsCoordinatorCreationResult()
{
  return objc_opt_self(_TtC13InCallService32DetailsCoordinatorCreationResult);
}

BOOL sub_1001124B0(Swift::UInt32 a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(a1);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_DWORD *)(v8 + 4 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t PHAudioCallViewController.makeLockObserver(with:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  type metadata accessor for PhoneLockStateObserver(0);
  v4 = (void *)static PhoneLockStateObserver.shared.getter();
  v5 = sub_100109754((uint64_t)&unk_100288F38, 32);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_retain(a2);
  PhoneLockStateObserver.listen(with:)(sub_100112644, v5);

  return swift_release(v5);
}

uint64_t sub_100112620()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100112644()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

id PHAudioCallViewController.makeCallDetailsCoordinator(bannerPresentationManager:existingCoordinator:deferredPresentationManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v4 = v3;
  sub_10011ADF8(a1);
  v7 = sub_10011B0A4();
  v8 = (id)dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();

  if (v8)
  {
    if (!a2)
    {
      v9 = objc_allocWithZone((Class)type metadata accessor for CallDetailsCoordinator(0));
      v8 = v8;
      swift_unknownObjectRetain(a3);
      v10 = CallDetailsCoordinator.init(hostViewController:controlsManager:deferredPresentationManager:)(v4, v8, a3);
      v11 = objc_allocWithZone((Class)type metadata accessor for DetailsCoordinatorCreationResult());
      v12 = sub_100112388(2, v10);

LABEL_7:
      return v12;
    }
LABEL_6:
    v14 = objc_allocWithZone((Class)type metadata accessor for DetailsCoordinatorCreationResult());
    v12 = sub_100112388(0, 0);
    goto LABEL_7;
  }
  if (!a2)
    goto LABEL_6;
  v13 = objc_allocWithZone((Class)type metadata accessor for DetailsCoordinatorCreationResult());
  return sub_100112388(1, 0);
}

uint64_t PHAudioCallViewController.makeHeldCallControls(callCenter:style:)(void *a1, uint64_t a2)
{
  void *v2;
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unsigned int *v11;

  v7 = type metadata accessor for HeldInCallControlsView.Style(0);
  sub_10011AF24();
  __chkstk_darwin(v8, v9);
  sub_10011AEEC();
  objc_msgSend(objc_msgSend(v2, "features"), "shouldEmbedSwapBanner");
  sub_10011B028();
  result = 0;
  if (v3)
  {
    v11 = (unsigned int *)&enum case for HeldInCallControlsView.Style.ambient(_:);
    if (a2 != 3)
      v11 = (unsigned int *)&enum case for HeldInCallControlsView.Style.regular(_:);
    (*(void (**)(void *, _QWORD, uint64_t))(v4 + 104))(v2, *v11, v7);
    type metadata accessor for HeldInCallControlsView(0);
    return HeldInCallControlsView.__allocating_init(callCenter:style:)(a1, v2);
  }
  return result;
}

void sub_1001129D4(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  unsigned int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[8];

  v2 = v1;
  v3 = sub_10010BC5C(a1, "features");
  v4 = objc_msgSend(v3, "isNameAndPhotoC3Enabled");

  if (v4)
  {
    sub_10011AFAC();
    v5 = (void *)static NameAndPhotoUtilities.shared.getter();
    sub_100119F80(&qword_1002D8418, (unint64_t *)&qword_1002D8410, off_100283390, (uint64_t)&protocol conformance descriptor for PHAudioCallViewController);
    v7 = v6;
    v8 = swift_unknownObjectRetain(v2);
    NameAndPhotoUtilities.delegate.setter(v8, v7);

    swift_unknownObjectWeakInit(v9, v2);
    sub_100112FB8(v2, (uint64_t)v9);
    swift_unknownObjectWeakDestroy(v9);
  }
  sub_10011AEDC();
}

void sub_100112A90()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  id v38;
  NSUUID v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  id v46;
  id v47;
  Class isa;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  void *v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t (*v73)(uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[5];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  sub_10010BC70();
  v86 = v1;
  v87 = v2;
  v3 = v0;
  v77 = v4;
  v5 = (_QWORD *)sub_10011AFC8();
  v6 = *(v5 - 1);
  __chkstk_darwin(v5, v7);
  sub_10011ADE4();
  v83 = v8;
  v9 = type metadata accessor for DispatchQoS(0);
  v81 = *(_QWORD *)(v9 - 8);
  v82 = v9;
  sub_10011AE0C();
  __chkstk_darwin(v10, v11);
  v13 = sub_10011AE2C(v12, (uint64_t)v69);
  v14 = type metadata accessor for ConversationControlsType(v13);
  v75 = *(_QWORD *)(v14 - 8);
  v76 = v14;
  v15 = *(_QWORD *)(v75 + 64);
  __chkstk_darwin(v14, v16);
  v74 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10011AEA0();
  v79 = type metadata accessor for DispatchTime(v17);
  v73 = *(uint64_t (**)(uint64_t, uint64_t))(v79 - 8);
  sub_10011AE0C();
  v20 = __chkstk_darwin(v18, v19);
  v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  v78 = (char *)&v69 - v24;
  v25 = sub_10011AEA0();
  type metadata accessor for UUID(v25);
  sub_10011B050();
  __chkstk_darwin(v26, v27);
  sub_10011AEEC();
  v29 = sub_10011AF6C(v28, "callCenter");
  v30 = objc_msgSend(v29, "callsWithStatus:", 1);

  v32 = sub_10011ADD4(v31, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v32);

  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v68 = v33;
    else
      v68 = v33 & 0xFFFFFFFFFFFFFF8;
    sub_1001097E0();
    v34 = (void *)_CocoaArrayWrapper.endIndex.getter(v68);
    sub_100109558();
    if (v34)
    {
LABEL_3:
      v71 = v6;
      v72 = v5;
      if ((v33 & 0xC000000000000001) != 0)
      {
        v35 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
      }
      else
      {
        if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_20;
        }
        v35 = *(id *)(v33 + 32);
      }
      v5 = v35;
      v36 = sub_100109558();
      v37 = sub_10011AF6C(v36, "callUUIDsThatPresentedSNaPHUD");
      v38 = sub_10010A1B8((uint64_t)v37, "uniqueProxyIdentifierUUID");
      sub_10011AFA0();

      v39.super.isa = UUID._bridgeToObjectiveC()().super.isa;
      sub_10011B098();
      v40 = objc_msgSend(v37, "containsObject:", v39.super.isa);

      if ((v40 & 1) == 0)
      {
        v46 = sub_10011AF6C(v41, "callUUIDsThatPresentedSNaPHUD");
        v70 = v5;
        v47 = sub_10010A1B8((uint64_t)v46, "uniqueProxyIdentifierUUID");
        sub_10011AFA0();

        isa = UUID._bridgeToObjectiveC()().super.isa;
        sub_10011B098();
        objc_msgSend(v46, "addObject:", isa);

        sub_10011ADD4(v49, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
        v69 = (void *)static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        sub_10011AFAC();
        v50 = ((double (*)(void))static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner.getter)();
        v51 = (uint64_t)v78;
        + infix(_:_:)(v22, v50);
        v73 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)v73 + 1);
        v52 = v79;
        sub_10011B008((uint64_t)v22, v73);
        v53 = v75;
        (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v77, v76);
        v54 = *(unsigned __int8 *)(v53 + 80);
        v55 = (v54 + 16) & ~v54;
        v56 = (v15 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
        v57 = swift_allocObject(&unk_100289098, v56 + 8, v54 | 7);
        sub_10011AF88(v57 + v55, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32));
        *(_QWORD *)(v57 + v56) = v3;
        v84[4] = sub_10011AD50;
        v85 = v57;
        v84[0] = _NSConcreteStackBlock;
        v84[1] = 1107296256;
        v58 = sub_10011AFF0((uint64_t)sub_100112054);
        v59 = v85;
        v60 = v3;
        v61 = sub_100110F0C();
        v62 = v80;
        ((void (*)(uint64_t))static DispatchQoS.unspecified.getter)(v61);
        v84[0] = _swiftEmptyArrayStorage;
        v63 = sub_10010E258();
        sub_1001085C0((uint64_t *)&unk_1002D7F80);
        v64 = sub_10011B048();
        v65 = v83;
        v66 = v72;
        dispatch thunk of SetAlgebra.init<A>(_:)(v84, v59, v64, v72, v63);
        v67 = v69;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v51, v62, v65, v58);
        _Block_release(v58);

        (*(void (**)(uint64_t, _QWORD *))(v71 + 8))(v65, v66);
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v62, v82);
        v73(v51, v52);
LABEL_12:
        sub_10010BC44();
        return;
      }
      if (qword_1002D7258 == -1)
      {
LABEL_8:
        v42 = sub_100109570();
        v43 = sub_10011ADC0(v42, (uint64_t)&unk_1002E2CE0);
        v44 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)sub_10010E3FC();
          *(_WORD *)v45 = 0;
          sub_10011AE18((void *)&_mh_execute_header, v43, v44, "We have already present SNaPHUD once. So dismiss this time.", v45);
          sub_100109440((uint64_t)v45);
        }

        goto LABEL_12;
      }
LABEL_20:
      swift_once(&qword_1002D7258, sub_10010BCE8);
      goto LABEL_8;
    }
  }
  else
  {
    v34 = *(void **)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v34)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(v33);
}

void sub_100112FB8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t Strong;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[24];

  v4 = sub_1001085C0((uint64_t *)&unk_1002D8280);
  __chkstk_darwin(v4, v5);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for ConversationControlsType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = objc_msgSend(a1, "callCenter");
  v14 = objc_msgSend(v13, "callsWithStatus:", 1);

  v15 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if (!((unint64_t)v16 >> 62))
  {
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v16);
    return;
  }
  if (v16 < 0)
    v25 = v16;
  else
    v25 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v26 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v16);
  if (!v26)
    goto LABEL_18;
LABEL_3:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
  }
  else
  {
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v17 = *(id *)(v16 + 32);
  }
  v18 = v17;
  swift_bridgeObjectRelease(v16);
  type metadata accessor for NameAndPhotoUtilities(0);
  v19 = (void *)static NameAndPhotoUtilities.shared.getter();
  sub_100119F80(&qword_1002D8420, (unint64_t *)&qword_1002DA680, TUCall_ptr, (uint64_t)&protocol conformance descriptor for TUCall);
  v21 = v20;
  v22 = v18;
  NameAndPhotoUtilities.suggestedBannerType(for:)(v18, v21);

  if (sub_100109FF4((uint64_t)v7, 1, v8) == 1)
  {

    sub_10011ABE4((uint64_t)v7, (uint64_t *)&unk_1002D8280);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
    if (objc_msgSend(v22, "status") == 1)
    {
      swift_beginAccess(a2, v28, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(a2);
      if (Strong)
      {
        v24 = (void *)Strong;
        sub_100112A90();

        v22 = v24;
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);

    }
  }
}

void sub_1001132EC(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  UIView_optional v10;

  v2 = v1;
  sub_10011ADF8(a1);
  v3 = sub_10011B0A4();
  v4 = (void *)dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();

  if (v4)
  {
    sub_100119F80(&qword_1002D8408, (unint64_t *)&qword_1002D8410, off_100283390, (uint64_t)&protocol conformance descriptor for PHAudioCallViewController);
    v6 = v5;
    v7 = v4;
    v8 = v2;
    dispatch thunk of ConversationControlsManager.systemAudioConversationControlsDelegate.setter(v2, v6);

    v9 = v7;
    v10.value.super.super.isa = (Class)sub_10011B03C();
    ConversationControlsManager.presentShareCard(source:)(v10);

  }
}

void sub_10011340C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  int v34;
  id v35;
  id v36;
  const char *v37;
  Swift::Void (__swiftcall **v38)();
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v43 = a2;
  v3 = type metadata accessor for ConversationControlsType(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = __chkstk_darwin(v3, v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  v11 = (char *)&v39 - v10;
  if (qword_1002D7258 != -1)
    swift_once(&qword_1002D7258, sub_10010BCE8);
  v12 = type metadata accessor for Logger(0);
  sub_100108664(v12, (uint64_t)&unk_1002E2CE0);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v14 = v13(v11, a1, v3);
  v16 = Logger.logObject.getter(v14, v15);
  v17 = static os_log_type_t.default.getter();
  v18 = os_log_type_enabled(v16, v17);
  v44 = v4;
  if (v18)
  {
    v19 = swift_slowAlloc(12, -1);
    v40 = v13;
    v20 = v4;
    v21 = (uint8_t *)v19;
    v22 = swift_slowAlloc(32, -1);
    v41 = a1;
    v23 = v22;
    v46 = v22;
    v42 = v8;
    *(_DWORD *)v21 = 136315138;
    v24 = ConversationControlsType.debugDescription.getter();
    v26 = v25;
    v45 = sub_100121E04(v24, v25, &v46);
    v8 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v21 + 4, v21 + 12);
    swift_bridgeObjectRelease(v26);
    v27 = *(void (**)(char *, uint64_t))(v20 + 8);
    v13 = v40;
    v27(v11, v3);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "we are going to present SNaP hud, because suggestedBannerType = %s.", v21, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v28 = v23;
    a1 = v41;
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t))(v4 + 8);
    v27(v11, v3);
  }

  v29 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v30 = objc_msgSend(v29, "delegate");

  if (v30)
  {
    v31 = objc_opt_self(ICSApplicationDelegate);
    v32 = swift_dynamicCastObjCClass(v30, v31);
    if (!v32)
    {
LABEL_14:
      swift_unknownObjectRelease(v30);
      return;
    }
    v33 = (void *)v32;
    v13(v8, a1, v3);
    v34 = (*(uint64_t (**)(char *, uint64_t))(v44 + 88))(v8, v3);
    if (v34 == enum case for ConversationControlsType.shareNameAndPhoto(_:))
    {
      v35 = objc_msgSend(v33, "bannerPresentationManager");
      v36 = v35;
      v37 = "PHAudioCallViewController requesting showShareNameAndPhotoHUD";
      v38 = &BannerPresentationManager.showShareNameAndPhotoHUD();
    }
    else
    {
      if (v34 != enum case for ConversationControlsType.shareName(_:))
      {
        if (v34 != enum case for ConversationControlsType.incomingNameUpdate(_:))
        {
          swift_unknownObjectRelease(v30);
          v27(v8, v3);
          return;
        }
        v36 = objc_msgSend(v33, "bannerPresentationManager");
        sub_1001138A8((uint64_t)v36);
        goto LABEL_13;
      }
      v35 = objc_msgSend(v33, "bannerPresentationManager");
      v36 = v35;
      v37 = "PHAudioCallViewController requesting showShareNameHUD";
      v38 = &BannerPresentationManager.showShareNameHUD();
    }
    sub_1001137A8((uint64_t)v35, v37, (void (*)(void))v38);
LABEL_13:

    goto LABEL_14;
  }
}

void sub_1001137A8(uint64_t a1, const char *a2, void (*a3)(void))
{
  int v3;
  uint8_t *v4;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  id v12;

  v7 = sub_10010BC5C(a1, "features");
  -[NSObject isNameAndPhotoC3Enabled](v7, "isNameAndPhotoC3Enabled");
  sub_10010E338();
  if (v3)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v8 = sub_100109570();
    sub_10011ADC0(v8, (uint64_t)&unk_1002E2CC8);
    v9 = sub_10011ADDC();
    if (sub_10011AF5C(v9))
    {
      v10 = (_WORD *)sub_10010E3FC();
      sub_10011B070(v10);
      sub_10011AE18((void *)&_mh_execute_header, v7, (os_log_type_t)v3, a2, v4);
      sub_100109440((uint64_t)v4);
    }

    sub_10011ADF8(v11);
    v12 = sub_10011B0A4();
    a3();

  }
}

void sub_1001138A8(uint64_t a1)
{
  void *v1;
  id v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id *v15;
  id v16;
  _BYTE v17[24];

  v3 = objc_msgSend(v1, "features");
  v4 = objc_msgSend(v3, "isNameAndPhotoC3Enabled");

  if (v4)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100108664(v5, (uint64_t)&unk_1002E2CC8);
    v8 = Logger.logObject.getter(v6, v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "PHAudioCallViewController requesting showIncomingNameUpdateHUD", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v12 = objc_msgSend(v11, "delegate");

    if (v12)
    {
      v13 = objc_opt_self(ICSApplicationDelegate);
      v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
      if (v14)
        objc_msgSend(v14, "setIsShowingIncomingNameUpdate:", 1);
      swift_unknownObjectRelease(v12);
    }
    v15 = (id *)(a1 + direct field offset for CNKBannerPresentationManager.value);
    swift_beginAccess(v15, v17, 0, 0);
    v16 = *v15;
    BannerPresentationManager.showIncomingNameUpdateHUD()();

  }
}

void sub_100113A64()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_10011AFAC();
  static NameAndPhotoUtilities.shared.getter();
  v1 = sub_10011B03C();
  NameAndPhotoUtilities.currentIMNickname(matching:)(v1);

  sub_100109438();
}

_QWORD *sub_100113AEC(void *a1)
{
  void *v1;
  unsigned int v3;
  _QWORD *result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v3 = objc_msgSend(v1, "hasLastSeenPosterForCall:", a1);
  result = 0;
  if (v3)
  {
    if (a1)
    {
      result = (_QWORD *)sub_10014C608(a1);
      if (result)
      {
        v5 = result;
        if (result[2])
        {
          v7 = result[4];
          v6 = result[5];
          swift_bridgeObjectRetain(v6);
          swift_bridgeObjectRelease(v5);
          v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
          v9 = String._bridgeToObjectiveC()();
          v10 = objc_msgSend(v8, "dictionaryForKey:", v9);

          if (v10)
          {
            v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

            sub_10011B1E0(v7, v6, v11, &v14);
            swift_bridgeObjectRelease(v6);
            swift_bridgeObjectRelease(v11);
            if (v15)
            {
              v12 = sub_1001085C0(&qword_1002D83D8);
              if ((swift_dynamicCast(&v13, &v14, (char *)&type metadata for Any + 8, v12, 6) & 1) != 0)
                return (_QWORD *)v13;
            }
            else
            {
              sub_10011ABE4((uint64_t)&v14, &qword_1002D84F0);
            }
            return 0;
          }
          result = (_QWORD *)v6;
        }
        swift_bridgeObjectRelease(result);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100113C94(void *a1)
{
  id v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;

  if (!a1)
    goto LABEL_12;
  v1 = a1;
  v2 = (_QWORD *)sub_10014C608(v1);
  if (!v2)
    goto LABEL_11;
  if (!v2[2])
  {

    sub_100109898();
LABEL_12:
    v10 = 0;
    return v10 & 1;
  }
  v3 = v2[4];
  v4 = v2[5];
  sub_1001097E0();
  sub_100109898();
  v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "dictionaryForKey:", v6);

  if (!v7)
  {
    v11 = v4;
LABEL_10:
    swift_bridgeObjectRelease(v11);
LABEL_11:

    goto LABEL_12;
  }
  v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v8 + 16))
  {
    sub_100109558();
    v11 = v8;
    goto LABEL_10;
  }
  sub_10011D2A8(v3, v4);
  v10 = v9;
  sub_100109558();
  sub_100109898();

  return v10 & 1;
}

uint64_t sub_100113E2C(void *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  __int128 v9;
  uint64_t v10;

  result = (uint64_t)sub_100113AEC(a1);
  if (result)
  {
    sub_10011B1E0(0x7469736E65537369, 0xEE0079654B657669, result, &v9);
    v2 = sub_1001096DC();
    if (v10)
    {
      result = sub_10011AE20((uint64_t)&v8, v3, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Bool, v6, v7);
      if ((_DWORD)result)
        return v8;
    }
    else
    {
      sub_10011AECC(v2, &qword_1002D84F0, v4, v5);
      return 0;
    }
  }
  return result;
}

_QWORD *sub_100113F18(void *a1)
{
  NSObject *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];
  __int128 v37;
  uint64_t v38;

  v2 = sub_100113AEC(a1);
  if (!v2)
    return v2;
  sub_10011B064(19, 0x80000001001F09A0, &v37);
  v3 = sub_1001096DC();
  if (!v38)
  {
    sub_10011AECC(v3, &qword_1002D84F0, v5, v6);
    return 0;
  }
  if ((sub_10011AE20((uint64_t)v36, v4, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for String, v7, v8) & 1) == 0)
    return 0;
  v10 = v36[0];
  v9 = v36[1];
  v11 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "contentsAtPath:", v12);
  sub_10011AF04();

  if (v1)
  {
    v2 = (_QWORD *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v15 = v14;

  }
  else
  {
    v2 = 0;
    v15 = 0xF000000000000000;
  }
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v17 = sub_100109570();
  sub_100108664(v17, (uint64_t)&unk_1002E2CC8);
  v18 = sub_10011B03C();
  sub_10011AC1C(v18, v15);
  sub_10011AC1C((uint64_t)v2, v15);
  v19 = swift_bridgeObjectRetain(v9);
  Logger.logObject.getter(v19, v20);
  v21 = sub_10011ADDC();
  if (sub_10011AFD8(v21))
  {
    v22 = sub_1001094C8(22);
    v23 = sub_1001094C8(64);
    v36[0] = v23;
    *(_DWORD *)v22 = 136315394;
    *(_QWORD *)&v37 = v10;
    *((_QWORD *)&v37 + 1) = v9;
    swift_bridgeObjectRetain(v9);
    v24 = String.init<A>(reflecting:)(&v37);
    *(_QWORD *)&v37 = sub_100121E04(v24, v25, v36);
    sub_10011AEBC(v37, v26, v27, v22 + 12, v28, v29);
    sub_10010970C(v9);
    sub_10011AF80();
    *(_WORD *)(v22 + 12) = 2080;
    if (v15 >> 60 == 15)
    {
      v30 = sub_10011AF74();
    }
    else
    {
      *(_QWORD *)&v37 = v2;
      *((_QWORD *)&v37 + 1) = v15;
      sub_10011AC30((uint64_t)v2, v15);
      v30 = String.init<A>(reflecting:)(&v37);
    }
    *(_QWORD *)&v37 = sub_10011B088(v30, v31, v36);
    sub_10011AEBC(v37, v32, v33, v22 + 22, v34, v35);
    sub_100109898();
    sub_10011AF3C();
    _os_log_impl((void *)&_mh_execute_header, v1, v21, "SNAP: Reading from cached last file path %s returned data: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
    sub_100109440(v23);
    sub_100109440(v22);
  }
  else
  {
    sub_10010970C(v9);
    sub_10011AF3C();
  }

  return v2;
}

_QWORD *sub_100114274(void *a1)
{
  _QWORD *result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  result = sub_100113AEC(a1);
  if (result)
  {
    sub_10011B064(22, 0x80000001001F09E0, &v12);
    v2 = sub_1001096DC();
    if (v13)
    {
      v5 = sub_1001085C0(&qword_1002D83D8);
      v9 = sub_10011AE20((uint64_t)&v11, v6, (uint64_t)&type metadata for Any + 8, v5, v7, v8);
      if ((v9 & 1) != 0)
      {
        sub_10011ADD4(v9, &qword_1002D8400, IMWallpaperMetadata_ptr);
        v10 = sub_10011B03C();
        return sub_100114324(v10);
      }
    }
    else
    {
      sub_10011AECC(v2, &qword_1002D84F0, v3, v4);
    }
    return 0;
  }
  return result;
}

id sub_100114324(uint64_t a1)
{
  uint64_t v1;
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1));
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v5 = objc_msgSend(v3, "initWithDictionaryRepresentation:", isa);

  return v5;
}

BOOL sub_1001143F8(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFELL) == 2;
}

uint64_t sub_100114424(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  unsigned int v5;
  uint64_t result;
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  id v18;
  uint64_t v19;
  int v20;
  char **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114[2];
  __int128 v115;
  __int128 v116;

  v2 = v1;
  v4 = sub_10010E310((uint64_t)a1, "features");
  v5 = objc_msgSend(v4, "isNameAndPhotoC3Enabled");

  result = 0;
  if (v5 && a1)
  {
    v7 = a1;
    v8 = sub_10010E3C0(v2, "contactToDisplayInCallWallpaperForCall:");
    v9 = sub_10010E3C0(v2, "sharedProfileStateOracleForCall:");
    if (!objc_msgSend((id)objc_opt_self(CNSharedProfileStateOracle), "contactIsInAutoUpdateState:", v8))
    {

      return 0;
    }
    v10 = v7;
    v11 = sub_100113AEC(a1);

    if (v11)
    {
      sub_10011AEAC(0x80000001001F09C0, &v115);
      sub_1001094F4();
      if (*((_QWORD *)&v116 + 1))
      {
        v12 = swift_dynamicCast(v114, &v115, (char *)&type metadata for Any + 8, &type metadata for String, 6);
        if ((_DWORD)v12)
          v13 = v114[0];
        else
          v13 = 0;
        if ((_DWORD)v12)
          v14 = v114[1];
        else
          v14 = 0;
LABEL_16:
        v15 = sub_10011AED4(v12, "avatarViewAnimationTypeForEffectiveState");
        if (qword_1002D7250 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v16 = sub_100109570();
        v17 = sub_100108664(v16, (uint64_t)&unk_1002E2CC8);
        swift_bridgeObjectRetain_n(v14, 2);
        v18 = v9;
        Logger.logObject.getter(v18, v19);
        v20 = sub_10011ADDC();
        v21 = &selRef_buttonsForAmbientTransition;
        if (sub_10011AFD8((os_log_type_t)v20))
        {
          HIDWORD(v110) = v20;
          v113 = v13;
          v104 = (uint64_t)v10;
          v22 = sub_1001094C8(42);
          v107 = sub_1001094C8(128);
          v114[0] = v107;
          *(_DWORD *)v22 = 136315906;
          v112 = v15;
          *(_QWORD *)&v115 = v15;
          type metadata accessor for CNSharedProfileAvatarAnimationType(0);
          v30 = sub_10011AF1C(v23, v23, v24, v25, v26, v27, v28, v29);
          *(_QWORD *)&v115 = sub_100121E04(v30, v31, v114);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, (char *)&v115 + 8, v22 + 4, v22 + 12);
          v32 = sub_10010974C();
          *(_WORD *)(v22 + 12) = 2080;
          v33 = sub_10011AED4(v32, "currentNickname");
          if (v33
            && (v34 = v33,
                v35 = objc_msgSend(v33, "wallpaper"),
                v34,
                v35)
            && (v36 = sub_10011A990(v35), v37))
          {
            *(_QWORD *)&v115 = v36;
            *((_QWORD *)&v115 + 1) = v37;
            v44 = sub_10011AF1C(v36, (uint64_t)&type metadata for String, v38, v39, v40, v41, v42, v43);
          }
          else
          {
            swift_bridgeObjectRelease(0);
            v44 = sub_10011AF74();
          }
          *(_QWORD *)&v115 = sub_10011AFFC(v44, v45, v46, v47, v48, v49, v50);
          sub_10011AF0C(v115, v61, v62, v22 + 22, v63, v64, v65, v66, v102, v104, v107, v110);

          v67 = sub_10010974C();
          *(_WORD *)(v22 + 22) = 2080;
          v68 = sub_10011AED4(v67, "pendingNickname");
          v69 = objc_msgSend(v68, "wallpaper");

          v71 = BYTE4(v111);
          if (v69)
          {
            *(_QWORD *)&v115 = v69;
            v72 = sub_10011ADD4(v70, (unint64_t *)&unk_1002D83F0, IMWallpaper_ptr);
            v79 = sub_10011AF1C(v72, v72, v73, v74, v75, v76, v77, v78);
          }
          else
          {
            v79 = sub_10011AF74();
          }
          *(_QWORD *)&v115 = sub_10011AFFC(v79, v80, v81, v82, v83, v84, v85);
          sub_10011AF0C(v115, v86, v87, v22 + 32, v88, v89, v90, v91, v103, v105, v108, v111);

          sub_10010974C();
          *(_WORD *)(v22 + 32) = 2080;
          if (v14)
          {
            *(_QWORD *)&v115 = v113;
            *((_QWORD *)&v115 + 1) = v14;
            v92 = sub_10011AE60();
            v99 = sub_10011AF1C(v92, (uint64_t)&type metadata for String, v93, v94, v95, v96, v97, v98);
            v10 = v106;
          }
          else
          {
            v10 = v106;
            v99 = sub_10011AF74();
          }
          *(_QWORD *)&v115 = sub_10011B088(v99, v100, v114);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, (char *)&v115 + 8, v22 + 34, v22 + 42);
          sub_10010970C(v14);
          sub_100109898();
          _os_log_impl((void *)&_mh_execute_header, v17, v71, "SNAP: suggestedNewPosterSourceAfterCallConnects effectiveAnimationType: %s \n oracle.currentNickname.wallpaper.filePath: %s \n oracle.pendingNickname.wallpaper: %s \n lastSeenContacts: %s", (uint8_t *)v22, 0x2Au);
          swift_arrayDestroy(v109, 4, (char *)&type metadata for Any + 8);
          sub_100109440(v109);
          sub_100109440(v22);

          v13 = v113;
          v21 = &selRef_buttonsForAmbientTransition;
          if (!v112)
            goto LABEL_47;
        }
        else
        {

          sub_10010970C(v14);
          if (!v15)
          {
LABEL_47:

            sub_100109544();
            return 3;
          }
        }
        v52 = sub_10011AED4(v51, v21[431]);
        if (v52
          && (v53 = v52, v54 = objc_msgSend(v52, "wallpaper"),
                         v53,
                         v54)
          && (v55 = sub_10011A990(v54), v56))
        {
          if (v14)
          {
            if (v55 != v13 || v56 != v14)
            {
              v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v56, v13, v14, 0);
              sub_1001094F4();
              sub_100109544();
              if ((v58 & 1) != 0)
              {

                return 0;
              }
              goto LABEL_37;
            }

            sub_1001094F4();
            v101 = v14;
LABEL_52:
            swift_bridgeObjectRelease(v101);
            return 0;
          }
          v59 = v56;
        }
        else
        {
          if (!v14)
          {

            v101 = 0;
            goto LABEL_52;
          }
          sub_100109544();
          v59 = 0;
        }
        swift_bridgeObjectRelease(v59);
LABEL_37:
        v60 = objc_msgSend((id)objc_opt_self(PHAudioCallViewController), "posterSourceIsSyncedWithContacts:", objc_msgSend(v2, "currentDisplayedPosterSourceForCall:", v10));

        if ((v60 & 1) == 0)
          return 2;
        return 0;
      }
    }
    else
    {
      v115 = 0u;
      v116 = 0u;
    }
    sub_10011ABE4((uint64_t)&v115, &qword_1002D84F0);
    v13 = 0;
    v14 = 0;
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100114A68(void *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  char v5;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  void *v36;
  _QWORD v37[2];
  __int128 v38;
  __int128 v39;

  objc_msgSend(sub_10010BC5C((uint64_t)a1, "callDisplayStyleManager"), "callDisplayStyle");
  sub_10011AFD0();
  if (v1 == 3)
    goto LABEL_2;
  objc_msgSend(sub_10010BC5C(v4, "features"), "isNameAndPhotoC3Enabled");
  sub_10011AFD0();
  v5 = 0;
  if ((_DWORD)v1 && a1)
  {
    v7 = a1;
    v8 = sub_10011AE94((uint64_t)v7, "contactToDisplayInCallWallpaperForCall:");
    v9 = sub_10011AE94((uint64_t)v8, "currentDisplayedPosterSourceForCall:");
    if (v9 == (id)1)
    {

      v5 = 1;
      return v5 & 1;
    }
    v10 = objc_msgSend((id)objc_opt_self(PHAudioCallViewController), "posterSourceIsSyncedWithContacts:", v9);
    if ((_DWORD)v10)
    {

LABEL_2:
      v5 = 0;
      return v5 & 1;
    }
    v11 = sub_10011AE94((uint64_t)v10, "sharedProfileStateOracleForCall:");
    v12 = (unint64_t)objc_msgSend(v11, "effectiveStateForContact");
    if (v12 == 3)
    {
      v13 = sub_10010E3C8(3, "pendingNickname");
      v14 = sub_10011AFE4(v13);

      if (!v14)
      {
        v16 = sub_10010E3C8(v15, "currentNickname");
        v17 = sub_10011AFE4(v16);

        if (!v17)
        {

          goto LABEL_2;
        }
      }
    }
    v18 = v7;
    v19 = sub_100113AEC(a1);

    if (v19)
    {
      sub_10011AEAC(0x80000001001F09C0, &v38);
      v20 = sub_1001094F4();
      if (*((_QWORD *)&v39 + 1))
      {
        v26 = sub_10011AE20((uint64_t)v37, v23, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for String, v24, v25);
        if ((_DWORD)v26)
          v27 = v37[0];
        else
          v27 = 0;
        if ((_DWORD)v26)
          v28 = v37[1];
        else
          v28 = 0;
LABEL_23:
        if ((v12 | 2) != 3)
        {

          sub_1001094F4();
          goto LABEL_2;
        }
        v29 = sub_10010E3C8(v26, "currentNickname");
        if (v29
          && (v30 = v29, v31 = objc_msgSend(v29, "wallpaper"),
                         v30,
                         v31))
        {
          v32 = sub_10011A990(v31);
          if (v33)
          {
            if (v28)
            {
              if (v32 == v27 && v33 == v28)
                v35 = 1;
              else
                v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v27, v28, 0);
              sub_10011AE68();
              sub_1001094F4();

              goto LABEL_44;
            }
            sub_10011AE68();

            goto LABEL_36;
          }
          v36 = v11;
          v11 = v8;
        }
        else
        {
          v36 = v18;
          v18 = v8;
        }

        swift_bridgeObjectRelease(0);
        if (!v28)
        {
          v35 = 1;
          goto LABEL_44;
        }
        sub_1001094F4();
LABEL_36:
        v35 = 0;
LABEL_44:
        v5 = v35 ^ 1;
        return v5 & 1;
      }
    }
    else
    {
      v38 = 0u;
      v39 = 0u;
    }
    sub_10011AECC(v20, &qword_1002D84F0, v21, v22);
    v27 = 0;
    v28 = 0;
    goto LABEL_23;
  }
  return v5 & 1;
}

void sub_100114E10()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD v33[5];
  uint64_t v34;

  sub_10010BC70();
  v2 = v0;
  v4 = v3;
  v5 = sub_10011AFC8();
  v31 = *(_QWORD *)(v5 - 8);
  sub_10011AE0C();
  __chkstk_darwin(v6, v7);
  sub_10010BC88();
  v10 = v9 - v8;
  v11 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  sub_10011AE0C();
  __chkstk_darwin(v12, v13);
  v14 = sub_10011AE70();
  v15 = type metadata accessor for DispatchQoS.QoSClass(v14);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  sub_10010BC88();
  v20 = v19 - v18;
  v22 = sub_10011ADD4(v21, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v20, enum case for DispatchQoS.QoSClass.default(_:), v15);
  v23 = (void *)static OS_dispatch_queue.global(qos:)(v20);
  sub_10011B008(v20, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  v24 = sub_100109754((uint64_t)&unk_100289020, 32);
  *(_QWORD *)(v24 + 16) = v2;
  *(_QWORD *)(v24 + 24) = v4;
  v33[4] = sub_10011AB84;
  v34 = v24;
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 1107296256;
  v33[2] = sub_10019CD08;
  v33[3] = &unk_100289038;
  v25 = _Block_copy(v33);
  v26 = v4;
  static DispatchQoS.unspecified.getter(v2);
  v32 = _swiftEmptyArrayStorage;
  v27 = sub_10010E258();
  sub_1001085C0((uint64_t *)&unk_1002D7F80);
  v28 = sub_10011B048();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v22, v28, v5, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v1, v10, v25);
  _Block_release(v25);

  sub_100110FD4(v10, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v1, v30);
  swift_release(v34);
  sub_10010BC44();
}

void sub_100114FFC(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned int v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint8_t *v30;
  uint8_t *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  char v47;
  NSArray *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  NSString v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  NSString v72;
  unsigned int v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  NSObject *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  Swift::String v82;
  uint64_t v83;
  NSObject *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  id v120;
  NSObject *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  uint8_t *v129;
  void *v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  id v134;
  NSString v135;
  id v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  id v140;
  id v141;
  NSString v142;
  uint64_t v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  uint8_t *v149;
  __int128 v150;
  id v151;
  uint64_t v152;
  NSObject *v153;
  os_log_type_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  void *v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  void *v164;
  id v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  id v177;
  void *v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  NSObject *v184;
  os_log_type_t v185;
  uint8_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t inited;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  id v194;
  void *v195;
  id v196;
  NSString v197;
  id v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  Class isa;
  NSString v206;
  uint64_t v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  NSObject *v212;
  os_log_type_t v213;
  uint64_t v214;
  void *v215;
  uint64_t v216;
  unint64_t v217;
  unint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint8_t *v222;
  uint8_t *v223;
  uint64_t v224;
  int v225;
  uint64_t v226;
  id v227;
  void *v228;
  id v229;
  uint64_t v230;
  id v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  NSObject *v239;
  id v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  __int128 v249;
  uint64_t v250;
  char v251[80];
  void *v252;
  uint64_t v253;
  __int128 v254;
  uint64_t v255;
  uint64_t v256;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v222 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v239 = ((char *)&v222 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = objc_msgSend(a1, "features");
  v14 = objc_msgSend(v13, "isNameAndPhotoC3Enabled");

  if (!v14 || !a2)
    return;
  v240 = a2;
  v15 = (_QWORD *)sub_10014C608(v240);
  if (!v15)
    goto LABEL_16;
  v16 = v15;
  if (!v15[2])
  {

    swift_bridgeObjectRelease(v16);
    return;
  }
  v18 = v15[4];
  v17 = v15[5];
  v234 = v18;
  v237 = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v16);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v19 = type metadata accessor for Logger(0);
  v238 = sub_100108664(v19, (uint64_t)&unk_1002E2CC8);
  v21 = Logger.logObject.getter(v238, v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    v236 = v10;
    v24 = v9;
    v25 = v8;
    v26 = v5;
    v27 = v4;
    v28 = a2;
    v29 = a1;
    v30 = v23;
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "SNAP: writeToLastSeenPosterCacheIfNecessary", v23, 2u);
    v31 = v30;
    a1 = v29;
    a2 = v28;
    v4 = v27;
    v5 = v26;
    v8 = v25;
    v9 = v24;
    v10 = v236;
    swift_slowDealloc(v31, -1, -1);
  }

  v32 = (void *)objc_opt_self(PHAudioCallViewController);
  if (!objc_msgSend(v32, "posterSourceIsSyncedWithContacts:", objc_msgSend(a1, "currentDisplayedPosterSourceForCall:", v240)))
  {
    v39 = swift_bridgeObjectRelease(v237);
    v239 = Logger.logObject.getter(v39, v40);
    v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v239, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v239, v41, "SNAP: Not updating last seen poster cache because displayed poster is not synced with contacts.", v42, 2u);
      swift_slowDealloc(v42, -1, -1);

      return;
    }

    goto LABEL_16;
  }
  v235 = a1;
  v33 = objc_msgSend(a1, "sharedProfileStateOracleForCall:", v240);
  v34 = objc_msgSend(v33, "currentNickname");
  v35 = objc_msgSend(v34, "wallpaper");

  v231 = v35;
  if (v35)
  {
    v36 = v35;
    v230 = sub_10011A990(v36);
    v232 = v37;
    v233 = sub_10011A9FC(v36);
    v236 = v38;
  }
  else
  {
    v232 = 0;
    v233 = 0;
    v230 = 0;
    v236 = 0xF000000000000000;
  }
  v43 = v240;
  v44 = sub_100113AEC(a2);
  v240 = v43;

  if (!v44)
    goto LABEL_30;
  sub_10011B1E0(0xD000000000000013, 0x80000001001F09C0, (uint64_t)v44, &v249);
  swift_bridgeObjectRelease(v44);
  if (!v250)
  {
    sub_10011ABE4((uint64_t)&v249, &qword_1002D84F0);
    goto LABEL_30;
  }
  if ((swift_dynamicCast(&v255, &v249, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_30:
    v48 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
    v49 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, &type metadata for String);

    if (!v49[2])
    {

      swift_bridgeObjectRelease(v49);
      sub_10011AB8C(v233, v236);
      swift_bridgeObjectRelease(v237);

      v69 = v232;
LABEL_96:
      swift_bridgeObjectRelease(v69);
      return;
    }
    v226 = v4;
    v227 = v33;
    v51 = v49[4];
    v50 = v49[5];
    swift_bridgeObjectRetain(v50);
    swift_bridgeObjectRelease(v49);
    v243 = v51;
    v244 = v50;
    v52._countAndFlagsBits = 0xD000000000000018;
    v52._object = (void *)0x80000001001F0960;
    String.append(_:)(v52);
    v229 = (id)objc_opt_self(NSFileManager);
    v53 = objc_msgSend(v229, "defaultManager");
    v54 = v243;
    v55 = v244;
    swift_bridgeObjectRetain(v244);
    v228 = (void *)v54;
    v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v55);
    LOBYTE(v54) = objc_msgSend(v53, "fileExistsAtPath:isDirectory:", v56, 0);

    if ((v54 & 1) != 0)
    {
LABEL_38:
      v254 = 0uLL;
      if (v236 >> 60 != 15)
      {
        sub_10011AC1C(v233, v236);
        v76 = swift_bridgeObjectRetain(v55);
        v77 = v239;
        v78 = UUID.init()(v76);
        v79 = UUID.uuidString.getter(v78);
        v81 = v80;
        (*(void (**)(NSObject *, uint64_t))(v10 + 8))(v77, v9);
        *(_QWORD *)&v249 = 47;
        *((_QWORD *)&v249 + 1) = 0xE100000000000000;
        v82._countAndFlagsBits = v79;
        v82._object = v81;
        String.append(_:)(v82);
        swift_bridgeObjectRelease(v81);
        v83 = *((_QWORD *)&v249 + 1);
        v84 = sub_100116E18(v249, *((uint64_t *)&v249 + 1), (uint64_t)v228, v55);
        v86 = v85;
        swift_bridgeObjectRelease(v55);
        v87 = swift_bridgeObjectRelease(v83);
        v89 = Logger.logObject.getter(v87, v88);
        v90 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v89, v90))
        {
          v239 = v84;
          v91 = (uint8_t *)swift_slowAlloc(12, -1);
          v228 = (void *)swift_slowAlloc(32, -1);
          v252 = v228;
          *(_DWORD *)v91 = 136315138;
          swift_beginAccess(&v254, &v245, 0, 0);
          if (*((_QWORD *)&v254 + 1))
          {
            v249 = v254;
            swift_bridgeObjectRetain(*((_QWORD *)&v254 + 1));
            v92 = String.init<A>(reflecting:)(&v249);
            v94 = v93;
          }
          else
          {
            v92 = 7104878;
            v94 = 0xE300000000000000;
          }
          v109 = v86;
          *(_QWORD *)&v249 = sub_100121E04(v92, v94, (uint64_t *)&v252);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v249, (char *)&v249 + 8, v91 + 4, v91 + 12);
          swift_bridgeObjectRelease(v94);
          _os_log_impl((void *)&_mh_execute_header, v89, v90, "SNAP: Requesting to write last seen poster to cache path %s", v91, 0xCu);
          v116 = (uint64_t)v228;
          swift_arrayDestroy(v228, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v116, -1, -1);
          swift_slowDealloc(v91, -1, -1);

          v84 = v239;
        }
        else
        {

          v109 = v86;
        }
        URL.init(fileURLWithPath:)(v84, v109);
        v117 = v233;
        v118 = v236;
        Data.write(to:options:)(v8, 0, v233, v236);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v226);
        sub_10011AB8C(v117, v118);
        swift_beginAccess(&v254, &v246, 1, 0);
        v119 = *((_QWORD *)&v254 + 1);
        *(_QWORD *)&v254 = v84;
        *((_QWORD *)&v254 + 1) = v109;
        swift_bridgeObjectRelease(v119);
      }
      v120 = v229;
      v121 = v240;
      v122 = sub_100113AEC(a2);
      v239 = v121;

      v123 = v232;
      if (v122)
      {
        sub_10011B1E0(0xD000000000000013, 0x80000001001F09A0, (uint64_t)v122, &v249);
        swift_bridgeObjectRelease(v122);
        if (v250)
        {
          if ((swift_dynamicCast(&v252, &v249, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
          {
            v124 = v253;
            v240 = v252;
            v125 = swift_bridgeObjectRetain_n(v253, 2);
            v127 = Logger.logObject.getter(v125, v126);
            v128 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v127, v128))
            {
              v129 = (uint8_t *)swift_slowAlloc(12, -1);
              v130 = (void *)swift_slowAlloc(32, -1);
              v252 = v130;
              *(_DWORD *)v129 = 136315138;
              *(_QWORD *)&v249 = v240;
              *((_QWORD *)&v249 + 1) = v124;
              swift_bridgeObjectRetain(v124);
              v131 = String.init<A>(reflecting:)(&v249);
              v133 = v132;
              *(_QWORD *)&v249 = sub_100121E04(v131, v132, (uint64_t *)&v252);
              v123 = v232;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v249, (char *)&v249 + 8, v129 + 4, v129 + 12);
              swift_bridgeObjectRelease_n(v124, 2);
              swift_bridgeObjectRelease(v133);
              _os_log_impl((void *)&_mh_execute_header, v127, v128, "SNAP: Requesting to remove previous last seen poster file %s", v129, 0xCu);
              swift_arrayDestroy(v130, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v130, -1, -1);
              swift_slowDealloc(v129, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n(v124, 2);
            }
            v134 = objc_msgSend(v120, "defaultManager");
            v135 = String._bridgeToObjectiveC()();
            v136 = objc_msgSend(v134, "contentsAtPath:", v135);

            if (v136)
            {
              v137 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v136);
              v139 = v138;

              sub_10011ABA0(v137, v139);
              v140 = objc_msgSend(v120, "defaultManager");
              v141 = v240;
              v142 = String._bridgeToObjectiveC()();
              *(_QWORD *)&v249 = 0;
              LOBYTE(v139) = objc_msgSend(v140, "removeItemAtPath:error:", v142, &v249);

              v143 = v249;
              if ((v139 & 1) == 0)
              {
                v207 = v244;
                v208 = (id)v249;
                swift_bridgeObjectRelease(v237);
                swift_bridgeObjectRelease(v207);
                swift_bridgeObjectRelease(v123);
                v209 = _convertNSErrorToError(_:)(v143);

                swift_willThrow();
                swift_errorRetain(v209);
                swift_bridgeObjectRetain(v124);
                v210 = swift_errorRetain(v209);
                v212 = Logger.logObject.getter(v210, v211);
                v213 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v212, v213))
                {
                  v214 = swift_slowAlloc(22, -1);
                  v215 = (void *)swift_slowAlloc(64, -1);
                  v252 = v215;
                  *(_DWORD *)v214 = 136315394;
                  *(_QWORD *)&v249 = v141;
                  *((_QWORD *)&v249 + 1) = v124;
                  swift_bridgeObjectRetain(v124);
                  v216 = String.init<A>(reflecting:)(&v249);
                  v218 = v217;
                  *(_QWORD *)&v249 = sub_100121E04(v216, v217, (uint64_t *)&v252);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v249, (char *)&v249 + 8, v214 + 4, v214 + 12);
                  swift_bridgeObjectRelease_n(v124, 2);
                  swift_bridgeObjectRelease(v218);
                  *(_WORD *)(v214 + 12) = 2080;
                  *(_QWORD *)&v249 = v209;
                  swift_errorRetain(v209);
                  sub_1001085C0(&qword_1002D8520);
                  v219 = String.init<A>(reflecting:)(&v249);
                  v221 = v220;
                  *(_QWORD *)&v249 = sub_100121E04(v219, v220, (uint64_t *)&v252);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v249, (char *)&v249 + 8, v214 + 14, v214 + 22);
                  swift_bridgeObjectRelease(v221);
                  swift_errorRelease(v209);
                  swift_errorRelease(v209);
                  _os_log_impl((void *)&_mh_execute_header, v212, v213, "SNAP: Failed to remove old last seen file path %s with error %s", (uint8_t *)v214, 0x16u);
                  swift_arrayDestroy(v215, 2, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v215, -1, -1);
                  swift_slowDealloc(v214, -1, -1);

                  swift_errorRelease(v209);
                  sub_10011AB8C(v233, v236);

                }
                else
                {

                  sub_10011AB8C(v233, v236);
                  swift_errorRelease(v209);
                  swift_bridgeObjectRelease_n(v124, 2);
                  swift_errorRelease(v209);
                  swift_errorRelease(v209);

                }
LABEL_95:
                v69 = *((_QWORD *)&v254 + 1);
                goto LABEL_96;
              }
              v144 = (id)v249;
              swift_bridgeObjectRelease(v124);
            }
            else
            {
              v145 = swift_bridgeObjectRelease(v124);
              v147 = Logger.logObject.getter(v145, v146);
              v148 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v147, v148))
              {
                v149 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v149 = 0;
                _os_log_impl((void *)&_mh_execute_header, v147, v148, "SNAP: last seen poster file already doesn't exist, don't need to request FileManager to remove it, but we still need to replace the last seen poster data with current poster data)", v149, 2u);
                swift_slowDealloc(v149, -1, -1);
              }

            }
          }
        }
        else
        {
          sub_10011ABE4((uint64_t)&v249, &qword_1002D84F0);
        }
      }
      v150 = v254;
      swift_bridgeObjectRetain_n(v123, 2);
      v151 = v231;
      swift_bridgeObjectRetain_n(*((_QWORD *)&v150 + 1), 2);
      v240 = v151;
      v153 = Logger.logObject.getter(v240, v152);
      v154 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v153, v154))
      {
        v155 = swift_slowAlloc(32, -1);
        v156 = (void *)swift_slowAlloc(96, -1);
        v252 = v156;
        *(_DWORD *)v155 = 136315650;
        if (*((_QWORD *)&v150 + 1))
        {
          v249 = v150;
          swift_bridgeObjectRetain(*((_QWORD *)&v150 + 1));
          v157 = String.init<A>(reflecting:)(&v249);
          v159 = v158;
        }
        else
        {
          v159 = 0xE300000000000000;
          v157 = 7104878;
        }
        *(_QWORD *)&v249 = sub_100121E04(v157, v159, (uint64_t *)&v252);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v249, (char *)&v249 + 8, v155 + 4, v155 + 12);
        swift_bridgeObjectRelease_n(*((_QWORD *)&v150 + 1), 2);
        swift_bridgeObjectRelease(v159);
        *(_WORD *)(v155 + 12) = 2080;
        v123 = v232;
        if (v232)
        {
          *(_QWORD *)&v249 = v230;
          *((_QWORD *)&v249 + 1) = v232;
          swift_bridgeObjectRetain(v232);
          v161 = String.init<A>(reflecting:)(&v249);
          v163 = v162;
        }
        else
        {
          v163 = 0xE300000000000000;
          v161 = 7104878;
        }
        *(_QWORD *)&v249 = sub_100121E04(v161, v163, (uint64_t *)&v252);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v249, (char *)&v249 + 8, v155 + 14, v155 + 22);
        swift_bridgeObjectRelease_n(v123, 2);
        swift_bridgeObjectRelease(v163);
        *(_WORD *)(v155 + 22) = 2080;
        if (v231)
        {
          v164 = v240;
          *(_QWORD *)&v249 = v240;
          sub_10010BBE8(0, (unint64_t *)&unk_1002D83F0, IMWallpaper_ptr);
          v165 = v164;
          v166 = String.init<A>(reflecting:)(&v249);
          v168 = v167;
        }
        else
        {
          v168 = 0xE300000000000000;
          v166 = 7104878;
        }
        *(_QWORD *)&v249 = sub_100121E04(v166, v168, (uint64_t *)&v252);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v249, (char *)&v249 + 8, v155 + 24, v155 + 32);
        swift_bridgeObjectRelease(v168);
        v169 = v244;
        v170 = v240;

        swift_bridgeObjectRelease(v169);
        _os_log_impl((void *)&_mh_execute_header, v153, v154, "SNAP: - filePath: %s, currentIMWallpaperFilePath: %s, currentIMWallpaper: %s ", (uint8_t *)v155, 0x20u);
        swift_arrayDestroy(v156, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v156, -1, -1);
        swift_slowDealloc(v155, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n(*((_QWORD *)&v150 + 1), 2);
        swift_bridgeObjectRelease_n(v123, 2);
        v160 = v240;

        swift_bridgeObjectRelease(v244);
      }
      swift_beginAccess(&v254, &v252, 0, 0);
      v171 = *((_QWORD *)&v254 + 1);
      if (*((_QWORD *)&v254 + 1))
      {
        if (!v123)
        {
LABEL_87:
          v180 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
LABEL_88:
          v181 = v237;
          swift_bridgeObjectRetain_n(v237, 2);
          v182 = swift_bridgeObjectRetain_n(v180, 2);
          v184 = Logger.logObject.getter(v182, v183);
          v185 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v184, v185))
          {
            v186 = (uint8_t *)swift_slowAlloc(12, -1);
            v187 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v249 = v187;
            *(_DWORD *)v186 = 136315138;
            v238 = (uint64_t)(v186 + 4);
            v188 = sub_1001085C0(&qword_1002D83E0);
            inited = swift_initStackObject(v188, &v248);
            *(_OWORD *)(inited + 16) = xmmword_100241240;
            *(_QWORD *)(inited + 32) = v234;
            *(_QWORD *)(inited + 40) = v181;
            *(_QWORD *)(inited + 48) = v180;
            swift_bridgeObjectRetain(v181);
            swift_bridgeObjectRetain(v180);
            v190 = sub_1001085C0(&qword_1002D83D8);
            v241 = Dictionary.init(dictionaryLiteral:)(inited, &type metadata for String, v190, &protocol witness table for String);
            sub_1001085C0(&qword_1002D83E8);
            v191 = String.init<A>(reflecting:)(&v241);
            v193 = v192;
            v241 = sub_100121E04(v191, v192, (uint64_t *)&v249);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v241, &v242, v238, v186 + 12);
            swift_bridgeObjectRelease_n(v180, 2);
            swift_bridgeObjectRelease_n(v181, 2);
            swift_bridgeObjectRelease(v193);
            _os_log_impl((void *)&_mh_execute_header, v184, v185, "SNAP: Adding item to user defaults %s", v186, 0xCu);
            swift_arrayDestroy(v187, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v187, -1, -1);
            swift_slowDealloc(v186, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v180, 2);
            swift_bridgeObjectRelease_n(v181, 2);
          }
          v194 = v227;
          v195 = (void *)objc_opt_self(NSUserDefaults);
          v196 = objc_msgSend(v195, "standardUserDefaults");
          v197 = String._bridgeToObjectiveC()();
          v198 = objc_msgSend(v196, "dictionaryForKey:", v197);

          if (v198)
          {
            v199 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v198, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

            v241 = v199;
            v250 = sub_1001085C0(&qword_1002D83D8);
            *(_QWORD *)&v249 = v180;
            sub_100116E94((uint64_t)&v249, v234, v237);
            v200 = v241;
          }
          else
          {
            v201 = sub_1001085C0(&qword_1002D83D0);
            v202 = swift_initStackObject(v201, v251);
            *(_OWORD *)(v202 + 16) = xmmword_100241240;
            v203 = v237;
            *(_QWORD *)(v202 + 32) = v234;
            *(_QWORD *)(v202 + 40) = v203;
            *(_QWORD *)(v202 + 72) = sub_1001085C0(&qword_1002D83D8);
            *(_QWORD *)(v202 + 48) = v180;
            v200 = Dictionary.init(dictionaryLiteral:)(v202, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
          }
          v204 = objc_msgSend(v195, "standardUserDefaults");
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v200);
          v206 = String._bridgeToObjectiveC()();
          objc_msgSend(v204, "setValue:forKey:", isa, v206);

          sub_10011AB8C(v233, v236);
          goto LABEL_95;
        }
        if (v231)
        {
          v172 = v254;
          v173 = sub_1001085C0(&qword_1002D83D0);
          v174 = swift_initStackObject(v173, &v247);
          *(_OWORD *)(v174 + 16) = xmmword_1002413C0;
          *(_QWORD *)(v174 + 32) = 0xD000000000000013;
          *(_QWORD *)(v174 + 40) = 0x80000001001F09A0;
          *(_QWORD *)(v174 + 48) = v172;
          *(_QWORD *)(v174 + 56) = v171;
          *(_QWORD *)(v174 + 72) = &type metadata for String;
          *(_QWORD *)(v174 + 80) = 0xD000000000000013;
          v175 = v230;
          *(_QWORD *)(v174 + 88) = 0x80000001001F09C0;
          *(_QWORD *)(v174 + 96) = v175;
          *(_QWORD *)(v174 + 104) = v123;
          *(_QWORD *)(v174 + 120) = &type metadata for String;
          strcpy((char *)(v174 + 128), "isSensitiveKey");
          *(_BYTE *)(v174 + 143) = -18;
          v176 = v240;
          swift_bridgeObjectRetain(v171);
          *(_BYTE *)(v174 + 144) = objc_msgSend(v176, "contentIsSensitive");
          *(_QWORD *)(v174 + 168) = &type metadata for Bool;
          *(_QWORD *)(v174 + 176) = 0xD000000000000016;
          *(_QWORD *)(v174 + 184) = 0x80000001001F09E0;
          v177 = objc_msgSend(v176, "metadata");
          v178 = v177;
          if (v177)
          {
            v179 = objc_msgSend(v177, "dictionaryRepresentation");

            v178 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v179, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
          }
          *(_QWORD *)(v174 + 216) = sub_1001085C0(&qword_1002D83D8);
          if (!v178)
            v178 = (void *)Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
          *(_QWORD *)(v174 + 192) = v178;
          v180 = Dictionary.init(dictionaryLiteral:)(v174, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

          goto LABEL_88;
        }
      }
      swift_bridgeObjectRelease(v123);
      goto LABEL_87;
    }
    v57 = swift_bridgeObjectRetain_n(v55, 2);
    v59 = Logger.logObject.getter(v57, v58);
    v60 = static os_log_type_t.default.getter();
    v61 = v60;
    if (os_log_type_enabled(v59, v60))
    {
      v62 = swift_slowAlloc(12, -1);
      v225 = v61;
      v63 = (uint8_t *)v62;
      v224 = swift_slowAlloc(32, -1);
      v255 = v224;
      v223 = v63;
      *(_DWORD *)v63 = 136315138;
      v222 = v63 + 4;
      *(_QWORD *)&v249 = v228;
      *((_QWORD *)&v249 + 1) = v55;
      swift_bridgeObjectRetain(v55);
      v64 = String.init<A>(reflecting:)(&v249);
      v66 = v65;
      *(_QWORD *)&v249 = sub_100121E04(v64, v65, &v255);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v249, (char *)&v249 + 8, v222, v63 + 12);
      swift_bridgeObjectRelease_n(v55, 2);
      swift_bridgeObjectRelease(v66);
      v67 = v223;
      _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v225, "SNAP: Could not find existing cache path directory, so creating %s", v223, 0xCu);
      v68 = v224;
      swift_arrayDestroy(v224, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v68, -1, -1);
      swift_slowDealloc(v67, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v55, 2);
    }
    v70 = objc_msgSend(v229, "defaultManager");
    swift_beginAccess(&v243, &v255, 0, 0);
    v71 = v243;
    v55 = v244;
    swift_bridgeObjectRetain(v244);
    v228 = (void *)v71;
    v72 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v55);
    *(_QWORD *)&v249 = 0;
    v73 = objc_msgSend(v70, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v72, 0, 0, &v249);

    v74 = v249;
    if (v73)
    {
      v75 = (id)v249;
      goto LABEL_38;
    }
    v95 = (id)v249;
    swift_bridgeObjectRelease(v237);
    swift_bridgeObjectRelease(v232);
    v96 = _convertNSErrorToError(_:)(v74);

    swift_willThrow();
    swift_errorRetain(v96);
    swift_bridgeObjectRetain(v55);
    v97 = swift_errorRetain(v96);
    v99 = Logger.logObject.getter(v97, v98);
    v100 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v99, v100))
    {

      sub_10011AB8C(v233, v236);
      swift_errorRelease(v96);
      swift_bridgeObjectRelease_n(v55, 2);
      swift_errorRelease(v96);
      swift_errorRelease(v96);

      return;
    }
    v101 = swift_slowAlloc(22, -1);
    v102 = (void *)swift_slowAlloc(64, -1);
    v252 = v102;
    *(_DWORD *)v101 = 136315394;
    *(_QWORD *)&v249 = v228;
    *((_QWORD *)&v249 + 1) = v55;
    swift_bridgeObjectRetain(v55);
    v103 = String.init<A>(reflecting:)(&v249);
    v105 = v104;
    *(_QWORD *)&v249 = sub_100121E04(v103, v104, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v249, (char *)&v249 + 8, v101 + 4, v101 + 12);
    swift_bridgeObjectRelease_n(v55, 2);
    swift_bridgeObjectRelease(v105);
    *(_WORD *)(v101 + 12) = 2080;
    *(_QWORD *)&v249 = v96;
    swift_errorRetain(v96);
    sub_1001085C0(&qword_1002D8520);
    v106 = String.init<A>(reflecting:)(&v249);
    v108 = v107;
    *(_QWORD *)&v249 = sub_100121E04(v106, v107, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v249, (char *)&v249 + 8, v101 + 14, v101 + 22);
    swift_bridgeObjectRelease(v108);
    swift_errorRelease(v96);
    swift_errorRelease(v96);
    _os_log_impl((void *)&_mh_execute_header, v99, v100, "SNAP: Failed to create caches directory %s with error %s", (uint8_t *)v101, 0x16u);
    swift_arrayDestroy(v102, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v102, -1, -1);
    swift_slowDealloc(v101, -1, -1);

    sub_10011AB8C(v233, v236);
    swift_errorRelease(v96);

LABEL_16:
    return;
  }
  v45 = v256;
  if (!v232)
  {
    swift_bridgeObjectRelease(v256);
    goto LABEL_30;
  }
  if (v230 == v255 && v232 == v256)
  {
    swift_bridgeObjectRelease(v232);
    swift_bridgeObjectRelease(v237);
    goto LABEL_47;
  }
  v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v230, v232, v255, v256, 0);
  swift_bridgeObjectRelease(v45);
  if ((v47 & 1) == 0)
    goto LABEL_30;
  swift_bridgeObjectRelease(v232);
  v45 = v237;
LABEL_47:
  v110 = v231;
  v111 = swift_bridgeObjectRelease(v45);
  v113 = Logger.logObject.getter(v111, v112);
  v114 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v113, v114))
  {
    v115 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v115 = 0;
    _os_log_impl((void *)&_mh_execute_header, v113, v114, "SNAP: Not updating last seen poster cache because displayed poster is not different from the one in the cache.", v115, 2u);
    swift_slowDealloc(v115, -1, -1);

    sub_10011AB8C(v233, v236);
    goto LABEL_16;
  }

  sub_10011AB8C(v233, v236);
}

uint64_t sub_100116E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  v8[0] = a1;
  v8[1] = a2;
  v6 = a3;
  v7 = a4;
  swift_bridgeObjectRetain(a4);
  v6 = String.init<A>(_:)(&v6, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v7 = v4;
  String.append<A>(contentsOf:)(v8, &type metadata for String, &protocol witness table for String);
  return v6;
}

void sub_100116E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD v5[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_10011AC74((_OWORD *)a1, v5);
    sub_100177258(v5, a2, a3);
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    sub_10011ABE4(a1, &qword_1002D84F0);
    sub_100176EEC(a2, a3, v5);
    swift_bridgeObjectRelease(a3);
    sub_10011ABE4((uint64_t)v5, &qword_1002D84F0);
  }
}

void sub_100116F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  unsigned int v42;
  id v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  char *v77;
  id v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint8_t *v85;
  uint8_t *v86;
  void **v87;
  char *v88;
  id v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  void **v104;
  unint64_t v105;
  void (*v106)();
  uint64_t v107;

  sub_10010BC70();
  v1 = sub_10011AFC8();
  v101 = *(_QWORD *)(v1 - 8);
  v102 = v1;
  sub_10011AE0C();
  __chkstk_darwin(v2, v3);
  v5 = sub_10011AE2C(v4, (uint64_t)v85);
  v6 = type metadata accessor for DispatchQoS(v5);
  v98 = *(_QWORD *)(v6 - 8);
  v99 = v6;
  sub_10011AE0C();
  __chkstk_darwin(v7, v8);
  sub_10011ADE4();
  v97 = v9;
  v10 = sub_10011AEA0();
  v11 = type metadata accessor for DispatchQoS.QoSClass(v10);
  v95 = *(_QWORD *)(v11 - 8);
  v96 = v11;
  sub_10011AE0C();
  __chkstk_darwin(v12, v13);
  sub_10011ADE4();
  v94 = v14;
  sub_1001085C0((uint64_t *)&unk_1002DB390);
  sub_10011AE0C();
  __chkstk_darwin(v15, v16);
  sub_10011ADE4();
  v91 = v17;
  v18 = sub_10011AEA0();
  v19 = type metadata accessor for URL.DirectoryHint(v18);
  sub_10011AF24();
  __chkstk_darwin(v20, v21);
  sub_10010BC88();
  v24 = v23 - v22;
  v25 = sub_10011AFB4();
  v93 = *(_QWORD *)(v25 - 8);
  v26 = *(_QWORD *)(v93 + 64);
  v28 = __chkstk_darwin(v25, v27);
  v92 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28, v29);
  v32 = (char *)&v85 - v31;
  v34 = __chkstk_darwin(v30, v33);
  v36 = (char *)&v85 - v35;
  v38 = __chkstk_darwin(v34, v37);
  v40 = (char *)&v85 - v39;
  v41 = sub_10010BC5C(v38, "features");
  v42 = objc_msgSend(v41, "isNameAndPhotoC3Enabled");

  if (v42)
  {
    v89 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v43 = objc_msgSend(v89, "temporaryDirectory");
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v104 = (void **)0xD000000000000014;
    v105 = 0x80000001001F0940;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v24, enum case for URL.DirectoryHint.inferFromPath(_:), v19);
    v44 = sub_10010C378();
    v90 = v40;
    URL.appending<A>(component:directoryHint:)(&v104, v24, &type metadata for String, v44);
    sub_10011B008(v24, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    swift_bridgeObjectRelease(v105);
    v45 = v36;
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v46 = sub_100109570();
    v47 = sub_100108664(v46, (uint64_t)&unk_1002E2CC8);
    v48 = v93;
    v49 = *(uint64_t (**)(char *, char *, uint64_t))(v93 + 16);
    v50 = v49(v32, v36, v25);
    Logger.logObject.getter(v50, v51);
    v52 = sub_10011ADDC();
    if (os_log_type_enabled(v47, v52))
    {
      v88 = v36;
      v53 = (uint8_t *)sub_1001094C8(12);
      v87 = (void **)sub_1001094C8(32);
      v104 = v87;
      v86 = v53;
      *(_DWORD *)v53 = 136315138;
      v85 = v53 + 4;
      v54 = (uint64_t)v91;
      v49(v91, v32, v25);
      sub_100108600(v54, 0, 1, v25);
      sub_10019C93C(v54);
      v55 = (void (*)(char *, char *, uint64_t))v49;
      v57 = v56;
      v59 = v58;
      v60 = v54;
      v61 = v55;
      sub_10011ABE4(v60, (uint64_t *)&unk_1002DB390);
      v103 = (_QWORD *)sub_10011B088(v57, v62, (uint64_t *)&v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v85, v53 + 12);
      v63 = v59;
      v45 = v88;
      swift_bridgeObjectRelease(v63);
      sub_10011AE4C();
      v64 = v86;
      _os_log_impl((void *)&_mh_execute_header, v47, v52, "SNAP: deleteAllUnarchivedPosterDirectories path: %s", v86, 0xCu);
      v65 = (uint64_t)v87;
      swift_arrayDestroy(v87, 1, (char *)&type metadata for Any + 8);
      sub_100109440(v65);
      sub_100109440((uint64_t)v64);

      v67 = v48;
    }
    else
    {
      sub_10011AE4C();

      v67 = v48;
      v61 = (void (*)(char *, char *, uint64_t))v49;
    }
    sub_10011ADD4(v66, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
    v69 = v94;
    v68 = v95;
    v70 = v96;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v95 + 104))(v94, enum case for DispatchQoS.QoSClass.background(_:), v96);
    v71 = (void *)static OS_dispatch_queue.global(qos:)(v69);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v70);
    v61(v92, v45, v25);
    v72 = *(unsigned __int8 *)(v67 + 80);
    v73 = (v72 + 24) & ~v72;
    v74 = swift_allocObject(&unk_100288FD0, v73 + v26, v72 | 7);
    v75 = v89;
    *(_QWORD *)(v74 + 16) = v89;
    sub_10011AF88(v74 + v73, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 32));
    v106 = sub_10011AB2C;
    v107 = v74;
    v104 = _NSConcreteStackBlock;
    v105 = 1107296256;
    v76 = sub_10011AFF0((uint64_t)sub_10019CD08);
    v77 = v45;
    v78 = v75;
    v79 = v97;
    static DispatchQoS.unspecified.getter(v78);
    v103 = _swiftEmptyArrayStorage;
    v80 = sub_10010E258();
    sub_1001085C0((uint64_t *)&unk_1002D7F80);
    v81 = sub_10011B048();
    v82 = v100;
    v83 = v102;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v103, v73, v81, v102, v80);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v79, v82, v76);
    _Block_release(v76);

    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v82, v83);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v79, v99);
    v84 = (void (*)(char *, uint64_t))v91;
    ((void (*)(char *, uint64_t))v91)(v77, v25);
    v84(v90, v25);
    swift_release(v107);
  }
  sub_10010BC44();
}

void sub_10011755C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  void *v5;
  void *v6;
  unsigned int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  NSObject *oslog;
  os_log_t osloga;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v2 = URL.path.getter();
  if ((sub_10011AA68(v2, v3, a1) & 1) != 0)
  {
    URL._bridgeToObjectiveC()(v4);
    v6 = v5;
    v30 = 0;
    v7 = objc_msgSend(a1, "removeItemAtURL:error:", v5, &v30);

    if (v7)
    {
      v8 = v30;
    }
    else
    {
      osloga = (os_log_t)v30;
      v14 = v30;
      v15 = _convertNSErrorToError(_:)(osloga);

      swift_willThrow();
      if (qword_1002D7250 != -1)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v16 = type metadata accessor for Logger(0);
      sub_100108664(v16, (uint64_t)&unk_1002E2CC8);
      swift_errorRetain(v15);
      v17 = swift_errorRetain(v15);
      v19 = Logger.logObject.getter(v17, v18);
      v20 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(12, -1);
        v22 = (void *)swift_slowAlloc(32, -1);
        v30 = v22;
        *(_DWORD *)v21 = 136315138;
        v28 = v15;
        swift_errorRetain(v15);
        sub_1001085C0(&qword_1002D8520);
        v23 = String.init<A>(reflecting:)(&v28);
        v25 = v24;
        v28 = sub_100121E04(v23, v24, (uint64_t *)&v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v21 + 4, v21 + 12);
        swift_bridgeObjectRelease(v25);
        swift_errorRelease(v15);
        swift_errorRelease(v15);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "SNAP: Failed to remove PosterConfigurations directory with error: %s", v21, 0xCu);
        swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v21, -1, -1);

        swift_errorRelease(v15);
      }
      else
      {
        swift_errorRelease(v15);
        swift_errorRelease(v15);
        swift_errorRelease(v15);

      }
    }
  }
  else
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100108664(v9, (uint64_t)&unk_1002E2CC8);
    oslog = Logger.logObject.getter(v10, v11);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v12, "SNAP: Cant find PosterConfigurations directory", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

  }
}

id sub_100117950(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  const char *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  char **v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  os_log_type_t v26;
  _WORD *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  Swift::Int v32;
  BOOL v33;
  char *v34;
  uint64_t v35;
  BOOL v36;
  char *v37;
  id v38;
  Swift::Int v39;
  unsigned int v40;
  Swift::UInt32 v41;
  Swift::Int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  os_log_type_t v49;
  _WORD *v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  _WORD *v54;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  _QWORD v61[9];

  v2 = v1;
  v3 = sub_10010BC5C(a1, "callCenter");
  v4 = objc_msgSend(v3, "frontmostCall");

  if (!v4)
    return 0;
  v6 = sub_10010A1B8(v5, "prioritizedCall");
  if (!v6)
    v6 = v4;
  v7 = (uint64_t)objc_msgSend(v2, "associatedCallGroupForCall:", v6);

  v9 = sub_10011AF6C(v8, "calls");
  v10 = sub_10011ADD4((uint64_t)v9, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  v11 = sub_10011B01C();

  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v56 = v11;
    else
      v56 = v11 & 0xFFFFFFFFFFFFFF8;
    sub_10011AE60();
    v12 = _CocoaArrayWrapper.endIndex.getter(v56);
    sub_100109544();
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v13 = sub_100109544();
  if (v12 >= 2)
  {
    if (qword_1002D7250 != -1)
LABEL_79:
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v14 = sub_100109570();
    sub_10011ADC0(v14, (uint64_t)&unk_1002E2CC8);
    v15 = sub_10011ADDC();
    if (sub_10010E390(v15))
    {
      v16 = (_WORD *)sub_10010E3FC();
      sub_10011AF94(v16);
      v17 = "callToUseForWallpaper is nil, associatedCallGroup.calls.count > 1";
LABEL_10:
      sub_10011AE18((void *)&_mh_execute_header, v10, (os_log_type_t)v2, v17, (uint8_t *)v11);
      sub_100109440(v11);

      return 0;
    }
    goto LABEL_68;
  }
  v18 = sub_10010A1B8(v13, "usesCompactMulticallUI");
  if ((_DWORD)v18)
  {
    v18 = sub_10010A1B8((uint64_t)v18, "prioritizedCall");
    if (v18)
    {
      v19 = v18;

      return v19;
    }
  }
  v11 = (uint64_t)sub_10010A1B8((uint64_t)v18, "callDisplayStyleManager");
  v20 = objc_msgSend((id)v11, "callDisplayStyle");

  v22 = &selRef_delegate;
  if (v20 == (id)3)
  {
    v11 = (uint64_t)sub_10010A1B8(v21, "features");
    objc_msgSend((id)v11, "isDominoEnabled");
    sub_10011B028();
    v24 = sub_10010A1B8(v23, "participantsViewIsShowingMultipleLabel");
    if ((_DWORD)v24)
    {
      if (qword_1002D7250 != -1)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v25 = sub_100109570();
      sub_10011ADC0(v25, (uint64_t)&unk_1002E2CC8);
      v26 = sub_10011ADDC();
      if (sub_10010E390(v26))
      {
        v27 = (_WORD *)sub_10010E3FC();
        sub_10011AF94(v27);
        v17 = "callToUseForWallpaper is nil, participantsViewIsShowingMultipleLabel";
        goto LABEL_10;
      }
LABEL_68:

      return 0;
    }
    v28 = sub_10010A1B8((uint64_t)v24, "callCenter");
    v29 = objc_msgSend(v28, "currentCalls");

    v11 = sub_10011B01C();
    v57 = v7;
    v58 = v4;
    if ((unint64_t)v11 >> 62)
    {
      sub_10011AE60();
      v30 = sub_10011B090();
      sub_100109544();
      if (v30)
      {
LABEL_22:
        v7 = 0;
        v4 = (id)(v11 & 0xC000000000000001);
        v10 = &off_100288060;
        while (1)
        {
          if (v4)
          {
            sub_10011AE60();
            v31 = (id)sub_10011B0AC();
            sub_100109544();
          }
          else
          {
            v31 = *(id *)(v11 + 8 * v7 + 32);
          }
          v32 = sub_10015CAF0((uint64_t)&off_100288060);
          v33 = sub_1001124B0((Swift::UInt32)objc_msgSend(v31, "status"), v32);

          swift_bridgeObjectRelease(v32);
          if (!v33)
            break;
          v34 = (char *)(v7 + 1);
          if (__OFADD__(v7, 1))
          {
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
            goto LABEL_83;
          }
          ++v7;
          if (v34 == (char *)v30)
          {
            v7 = v30;
            break;
          }
        }
        if (v30 >= v7)
        {
          if (v7 == v30)
            goto LABEL_33;
          v59 = (id)v30;
          v60 = 1;
        }
        else
        {
          v59 = (id)v7;
          v60 = -1;
          v7 = v30;
        }
        v35 = 0;
        do
        {
          v36 = __OFADD__(v35, v60);
          v35 += v60;
          if (v36)
            goto LABEL_76;
          if (v7 == v30)
            goto LABEL_77;
          v37 = (char *)(v7 + 1);
          if (__OFADD__(v7, 1))
            goto LABEL_78;
          v7 = v30;
          if (v37 != (char *)v30)
          {
            v7 = (uint64_t)v37;
            while (1)
            {
              if (v4)
              {
                sub_10011AE60();
                v38 = (id)sub_10011B0AC();
                sub_100109544();
              }
              else
              {
                if (v7 < 0)
                  goto LABEL_81;
                if ((unint64_t)v7 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_82;
                v38 = *(id *)(v11 + 32 + 8 * v7);
              }
              v39 = sub_10015CAF0((uint64_t)&off_100288090);
              v40 = objc_msgSend(v38, "status");
              if (!*(_QWORD *)(v39 + 16))
                goto LABEL_55;
              v41 = v40;
              Hasher.init(_seed:)(v61, *(_QWORD *)(v39 + 40));
              Hasher._combine(_:)(v41);
              v10 = v61;
              v42 = Hasher._finalize()();
              v43 = -1 << *(_BYTE *)(v39 + 32);
              v44 = v42 & ~v43;
              if (((*(_QWORD *)(v39 + 56 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) == 0)
                goto LABEL_55;
              v45 = *(_QWORD *)(v39 + 48);
              if (*(_DWORD *)(v45 + 4 * v44) != v41)
              {
                v46 = ~v43;
                while (1)
                {
                  v44 = (v44 + 1) & v46;
                  if (((*(_QWORD *)(v39 + 56 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) == 0)
                    break;
                  if (*(_DWORD *)(v45 + 4 * v44) == v41)
                    goto LABEL_52;
                }
LABEL_55:

                sub_10011AF80();
                goto LABEL_56;
              }
LABEL_52:

              sub_10011AF80();
              v36 = __OFADD__(v7++, 1);
              if (v36)
                break;
              if (v7 == v30)
              {
                v7 = v30;
                goto LABEL_56;
              }
            }
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            __break(1u);
            goto LABEL_79;
          }
LABEL_56:
          ;
        }
        while ((id)v7 != v59);
        v21 = sub_100109544();
        v47 = v35 <= 1;
        v7 = v57;
        v4 = v58;
        v22 = &selRef_delegate;
        if (v47)
          goto LABEL_62;
        if (qword_1002D7250 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v48 = sub_100109570();
        sub_10011ADC0(v48, (uint64_t)&unk_1002E2CC8);
        v49 = sub_10011ADDC();
        if (sub_10010E390(v49))
        {
          v50 = (_WORD *)sub_10010E3FC();
          sub_10011AF94(v50);
          v17 = "callToUseForWallpaper is nil, answeredCalls > 1";
          goto LABEL_10;
        }
        goto LABEL_68;
      }
    }
    else
    {
      v30 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v30)
        goto LABEL_22;
    }
LABEL_33:
    v21 = sub_100109544();
    v7 = v57;
    v4 = v58;
  }
LABEL_62:
  v10 = sub_10010A1B8(v21, v22[261]);
  -[NSObject shouldShowFullScreenCallWaiting](v10, "shouldShowFullScreenCallWaiting");
  sub_10010E338();
  if ((v11 & 1) == 0)
  {
    v10 = sub_10010A1B8(v51, "callCenter");
    TUCallCenter.cnk_wantsCallWaiting.getter();
    sub_10010E338();
  }
  if (qword_1002D7250 != -1)
LABEL_83:
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v52 = sub_100109570();
  sub_10011ADC0(v52, (uint64_t)&unk_1002E2CC8);
  v53 = sub_10011ADDC();
  if (sub_10010E390(v53))
  {
    v54 = (_WORD *)sub_10010E3FC();
    sub_10011AF94(v54);
    sub_10011AE18((void *)&_mh_execute_header, v10, (os_log_type_t)v2, "callToUseForWallpaper is frontmostCall", (uint8_t *)v11);
    sub_100109440(v11);
  }

  return v4;
}

void sub_1001181B8()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;

  v1 = objc_msgSend(objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance"), "currentCalls");
  sub_10011AF04();
  v3 = sub_10011ADD4(v2, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v0, v3);

  if (v4 >> 62)
  {
    sub_10011AF34();
    v6 = sub_10011B090();
    sub_1001096DC();
    sub_10011AF34();
    v5 = sub_10011B090();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_10011AF34();
    v6 = v5;
  }
  if (!v5)
  {
    sub_10010970C(v4);
LABEL_13:
    sub_100109830();
    return;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
    v7 = (id)sub_10011AFBC();
    goto LABEL_7;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v4 + 32);
LABEL_7:
    v8 = v7;
    v9 = sub_10010970C(v4);
    if (v6 == 1)
    {
      v10 = sub_10010A1B8(v9, "status");
      if ((_DWORD)v10 != 6)
        sub_10010A1B8((uint64_t)v10, "status");
    }

    goto LABEL_13;
  }
  __break(1u);
}

id PHAudioCallViewController.nameAndPhotoUtilitiesDidUpdatePersonalNickname(oldValue:newValue:)(id result, uint64_t a2)
{
  void *v2;

  if (!result)
  {
    if (a2)
      return objc_msgSend(v2, "updateShareNameAndPhotoHUDPresentationIfNeeded");
  }
  return result;
}

void PHAudioCallViewController.nameAndPhotoUtilitiesNameAndPhotoAvailable(forDestinations:withBannerType:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  sub_10010BC70();
  v5 = v4;
  v7 = v6;
  sub_1001085C0((uint64_t *)&unk_1002D8280);
  sub_10011AE0C();
  __chkstk_darwin(v8, v9);
  v10 = sub_10011AE70();
  type metadata accessor for ConversationControlsType(v10);
  sub_10011B050();
  __chkstk_darwin(v11, v12);
  sub_1001097B0();
  sub_100119DF4(v5, v2);
  if (sub_100109FF4(v2, 1, v0) == 1)
  {
    sub_10011ABE4(v2, (uint64_t *)&unk_1002D8280);
LABEL_17:
    sub_10010BC44();
    return;
  }
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  v14 = sub_10010BC5C(v13, "callCenter");
  v15 = objc_msgSend(v14, "callsWithStatus:", 1);

  v17 = sub_10011ADD4(v16, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v17);

  if (!((unint64_t)v18 >> 62))
  {
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_15:
    sub_10011AE68();
    v29 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    goto LABEL_16;
  }
  if (v18 < 0)
    v30 = v18;
  else
    v30 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v18);
  v31 = _CocoaArrayWrapper.endIndex.getter(v30);
  sub_10011AE68();
  if (!v31)
    goto LABEL_15;
LABEL_5:
  if ((v18 & 0xC000000000000001) != 0)
  {
    v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v19 = *(id *)(v18 + 32);
LABEL_8:
    v20 = v19;
    v32 = v3;
    sub_10011AE68();
    v33 = v7;
    sub_1001097E0();
    sub_100119E64((uint64_t *)&v33);
    v21 = v33;
    v22 = objc_msgSend(v20, "remoteParticipantHandles");
    v23 = sub_10010BBE8(0, &qword_1002D8290, TUHandle_ptr);
    sub_100119F80((unint64_t *)&qword_1002D8298, &qword_1002D8290, TUHandle_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v22, v23, v24);

    sub_1001185F0(v25);
    v27 = v26;
    sub_10010974C();
    v33 = v27;
    swift_bridgeObjectRetain(v27);
    sub_100119E64((uint64_t *)&v33);
    swift_bridgeObjectRelease(v27);
    v28 = v33;
    LOBYTE(v27) = sub_100118D2C(v21, v33);
    swift_release(v28);
    swift_release(v21);
    if ((v27 & 1) == 0)
    {
      sub_100110FD4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));

      goto LABEL_17;
    }
    sub_100112A90();

    v29 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
LABEL_16:
    sub_100110FD4(v1, v29);
    goto LABEL_17;
  }
  __break(1u);
  swift_release(v18);
  __break(1u);
}

void sub_1001185F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];
  void *v38;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_10010BBE8(0, &qword_1002D8290, TUHandle_ptr);
    sub_100119F80((unint64_t *)&qword_1002D8298, &qword_1002D8290, TUHandle_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    isUniquelyReferenced_nonNull_native = (uint64_t)Set.Iterator.init(_cocoa:)(v37, v3, v4, v5);
    v1 = v37[0];
    v35 = v37[1];
    v7 = v37[2];
    v8 = v37[3];
    v9 = v37[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v35 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v32 = v7;
  v34 = (unint64_t)(v7 + 64) >> 6;
  v33 = _swiftEmptyArrayStorage;
  while (1)
  {
    v13 = v8;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    v16 = __CocoaSet.Iterator.next()(isUniquelyReferenced_nonNull_native);
    if (!v16)
      goto LABEL_43;
    v17 = v16;
    v36 = v16;
    v18 = sub_10010BBE8(0, &qword_1002D8290, TUHandle_ptr);
    swift_unknownObjectRetain(v17);
    swift_dynamicCast(&v38, &v36, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
    v19 = v38;
    swift_unknownObjectRelease(v17);
    if (!v19)
      goto LABEL_43;
LABEL_34:
    v23 = objc_msgSend(v19, "value", v32);
    if (!v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v25 = v24;
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
    }
    v26 = (id)TUCopyIDSCanonicalAddressForDestinationID(v23);

    if (v26)
    {
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v29 = v28;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10019BB24();
        v33 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v30 = v33[2];
      if (v30 >= v33[3] >> 1)
      {
        sub_10019BB24();
        v33 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v33[2] = v30 + 1;
      v31 = &v33[2 * v30];
      v31[4] = v27;
      v31[5] = v29;
    }
    else
    {

    }
  }
  if (v9)
  {
    v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v15 = v14 | (v8 << 6);
LABEL_33:
    v19 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v19)
      goto LABEL_43;
    goto LABEL_34;
  }
  v20 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v20 >= v34)
      goto LABEL_43;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    ++v8;
    if (!v21)
    {
      v8 = v13 + 2;
      if (v13 + 2 >= v34)
        goto LABEL_43;
      v21 = *(_QWORD *)(v35 + 8 * v8);
      if (!v21)
      {
        v8 = v13 + 3;
        if (v13 + 3 >= v34)
          goto LABEL_43;
        v21 = *(_QWORD *)(v35 + 8 * v8);
        if (!v21)
        {
          v8 = v13 + 4;
          if (v13 + 4 >= v34)
            goto LABEL_43;
          v21 = *(_QWORD *)(v35 + 8 * v8);
          if (!v21)
          {
            v8 = v13 + 5;
            if (v13 + 5 >= v34)
              goto LABEL_43;
            v21 = *(_QWORD *)(v35 + 8 * v8);
            if (!v21)
            {
              v22 = v13 + 6;
              while (v22 < v34)
              {
                v21 = *(_QWORD *)(v35 + 8 * v22++);
                if (v21)
                {
                  v8 = v22 - 1;
                  goto LABEL_32;
                }
              }
LABEL_43:
              sub_10011ACD4(v1);
              return;
            }
          }
        }
      }
    }
LABEL_32:
    v9 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v8 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

void sub_1001189B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  void *v34;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_10010BBE8(0, &qword_1002D8290, TUHandle_ptr);
    sub_100119F80((unint64_t *)&qword_1002D8298, &qword_1002D8290, TUHandle_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    isUniquelyReferenced_nonNull_native = (uint64_t)Set.Iterator.init(_cocoa:)(v33, v3, v4, v5);
    v1 = v33[0];
    v31 = v33[1];
    v7 = v33[2];
    v8 = v33[3];
    v9 = v33[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v31 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v29 = _swiftEmptyArrayStorage;
  v30 = (unint64_t)(v7 + 64) >> 6;
LABEL_11:
  v13 = v8;
  v14 = v9;
  while (1)
  {
    if (v1 < 0)
    {
      v16 = __CocoaSet.Iterator.next()(isUniquelyReferenced_nonNull_native);
      if (!v16)
        goto LABEL_43;
      v17 = v16;
      v32 = v16;
      v18 = sub_10010BBE8(0, &qword_1002D8290, TUHandle_ptr);
      swift_unknownObjectRetain(v17);
      swift_dynamicCast(&v34, &v32, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
      v19 = v34;
      swift_unknownObjectRelease(v17);
      v8 = v13;
      v9 = v14;
      if (!v19)
        goto LABEL_43;
      goto LABEL_30;
    }
    if (!v14)
      break;
    v9 = (v14 - 1) & v14;
    v15 = __clz(__rbit64(v14)) | (v13 << 6);
    v8 = v13;
LABEL_29:
    v19 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v19)
      goto LABEL_43;
LABEL_30:
    sub_100156A54(v19);
    v23 = v22;
    v25 = v24;

    v13 = v8;
    v14 = v9;
    if (v25)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10019BB24();
        v29 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v27 = v29[2];
      if (v27 >= v29[3] >> 1)
      {
        sub_10019BB24();
        v29 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v29[2] = v27 + 1;
      v28 = &v29[2 * v27];
      v28[4] = v23;
      v28[5] = v25;
      goto LABEL_11;
    }
  }
  v8 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v8 >= v30)
      goto LABEL_43;
    v20 = *(_QWORD *)(v31 + 8 * v8);
    if (!v20)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v30)
        goto LABEL_43;
      v20 = *(_QWORD *)(v31 + 8 * v21);
      if (v20)
        goto LABEL_27;
      v21 = v13 + 3;
      if (v13 + 3 >= v30)
        goto LABEL_43;
      v20 = *(_QWORD *)(v31 + 8 * v21);
      if (v20)
        goto LABEL_27;
      v21 = v13 + 4;
      if (v13 + 4 >= v30)
        goto LABEL_43;
      v20 = *(_QWORD *)(v31 + 8 * v21);
      if (v20)
      {
LABEL_27:
        v8 = v21;
      }
      else
      {
        v8 = v13 + 5;
        if (v13 + 5 >= v30)
          goto LABEL_43;
        v20 = *(_QWORD *)(v31 + 8 * v8);
        if (!v20)
        {
          v26 = v13 + 6;
          while (v26 < v30)
          {
            v20 = *(_QWORD *)(v31 + 8 * v26++);
            if (v20)
            {
              v8 = v26 - 1;
              goto LABEL_28;
            }
          }
LABEL_43:
          sub_10011ACD4(v1);
          return;
        }
      }
    }
LABEL_28:
    v9 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v8 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

uint64_t sub_100118D2C(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  result = a1[4];
  v6 = a1[5];
  v7 = a2[4];
  v8 = a2[5];
  if (result != v7 || v6 != v8)
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(result, v6, v7, v8, 0);
    result = 0;
    if ((v10 & 1) == 0)
      return result;
  }
  if (v2 == 1)
    return 1;
  v11 = a1 + 7;
  v12 = a2 + 7;
  v13 = 1;
  while (v13 < v2)
  {
    result = *(v11 - 1);
    v14 = *v11;
    v15 = *(v12 - 1);
    v16 = *v12;
    if (result != v15 || v14 != v16)
    {
      result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v14, v15, v16, 0);
      if ((result & 1) == 0)
        return 0;
    }
    ++v13;
    v11 += 2;
    v12 += 2;
    if (v2 == v13)
      return 1;
  }
  __break(1u);
  return result;
}

void sub_100118E00(void *a1)
{
  id v2;
  id v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v2 = objc_msgSend(a1, "type");
  if (v2 != (id)1)
  {
    if (v2 != (id)2)
    {
      if (v2 != (id)3)
      {
        if (qword_1002D7250 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v13 = sub_100109570();
        sub_100108664(v13, (uint64_t)&unk_1002E2CC8);
        v30 = a1;
        v15 = Logger.logObject.getter(v30, v14);
        v16 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = (uint8_t *)sub_1001094C8(12);
          v18 = sub_1001094C8(32);
          v32 = v18;
          *(_DWORD *)v17 = 136315138;
          v31 = (uint64_t)v30;
          sub_10011ADD4((uint64_t)v30, &qword_1002D8290, TUHandle_ptr);
          v19 = v30;
          v20 = String.init<A>(reflecting:)(&v31);
          v22 = v21;
          v31 = sub_100121E04(v20, v21, &v32);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v17 + 4, v17 + 12);

          swift_bridgeObjectRelease(v22);
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unknown handle type: %s", v17, 0xCu);
          swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
          sub_100109440(v18);
          sub_100109440((uint64_t)v17);

          return;
        }

        goto LABEL_17;
      }
      v3 = objc_msgSend((id)objc_opt_self(TUPrivacyManager), "sharedPrivacyManager");
      v30 = v3;
      if (v3)
      {
        v4 = sub_10010E310((uint64_t)v3, "value");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

        sub_10011B010();
        sub_1001A3B04(v5, v6, v7, v30);
LABEL_17:

        return;
      }
      __break(1u);
LABEL_20:
      __break(1u);
      return;
    }
    v8 = sub_10010E310(2, "value");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

    v9 = (id)TUHomeCountryCode();
    if (v9)
    {
      v10 = v9;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

    }
    else
    {
      v12 = 0;
    }
    v23 = objc_allocWithZone((Class)TUPhoneNumber);
    sub_10011B010();
    v27 = sub_1001A36CC(v24, v25, v26, v12);
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend((id)objc_opt_self(TUPrivacyManager), "sharedPrivacyManager");
      if (v29)
      {
        v30 = v29;
        objc_msgSend(v29, "setBlockIncomingCommunication:forPhoneNumber:", 1, v28);

        goto LABEL_17;
      }
      goto LABEL_20;
    }
  }
}

id sub_100119170(void *a1)
{
  void *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unsigned int v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD v21[3];
  uint64_t v22;
  void *v23;

  v5 = v1;
  v7 = type metadata accessor for ReportSpamManager.IDSServiceType(0);
  sub_10011AF24();
  __chkstk_darwin(v8, v9);
  sub_1001097B0();
  objc_msgSend(sub_10010E3C8(v10, "provider"), "isFaceTimeProvider");
  sub_10011B028();
  if (v3)
  {
    type metadata accessor for ReportSpamManager(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, enum case for ReportSpamManager.IDSServiceType.facetimeCall(_:), v7);
    v12 = ReportSpamManager.__allocating_init(idsServiceType:)(v2);
    v21[0] = a1;
    v13 = sub_10011ADD4(v12, (unint64_t *)&qword_1002DA680, TUCall_ptr);
    ReportSpamManager.reportFaceTimeCallSpam<A>(call:)(v21, v13, &protocol witness table for TUCall);
    sub_100110F0C();
  }
  else
  {
    v14 = sub_10010E3C8(v11, "provider");
    v15 = objc_msgSend(v14, "isTelephonyProvider");

    if (v15)
    {
      v22 = type metadata accessor for VoiceSpamReportTelephonyManager(0);
      v23 = &protocol witness table for VoiceSpamReportTelephonyManager;
      v21[0] = static VoiceSpamReportTelephonyManager.shared.getter();
      v16 = objc_msgSend(objc_allocWithZone((Class)TUFeatureFlags), "init");
      v17 = type metadata accessor for CarrierVoiceSpamReportHelper(0);
      swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
      CarrierVoiceSpamReportHelper.init(voiceSpamReportTelephonyManager:featureFlags:)(v21, v16);
      v22 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
      sub_100119F80((unint64_t *)&unk_1002D8390, (unint64_t *)&qword_1002DA680, TUCall_ptr, (uint64_t)&protocol conformance descriptor for TUCall);
      v23 = v18;
      v21[0] = a1;
      v19 = a1;
      dispatch thunk of CarrierVoiceSpamReportHelper.reportSpam(voiceCall:)(v21);
      sub_100110F0C();
      sub_100110DC0(v21);
    }
  }
  return objc_msgSend(v5, "releaseDismissalAssertion");
}

void sub_1001193C0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint8_t *v8;
  uint8_t *v9;
  NSObject *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  id v17;

  v2 = v1;
  v3 = sub_10011ADD4(a1, (unint64_t *)&unk_1002D8380, CNContact_ptr);
  v4 = sub_1001085C0(&qword_1002DBFB0);
  v5 = sub_100109754(v4, 48);
  *(_OWORD *)(v5 + 16) = xmmword_100241240;
  v6 = sub_10010BC5C(v5, "value");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  *(_QWORD *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 40) = v9;
  v10 = v3;
  v11 = sub_100119584(0, 0, v5);
  v12 = objc_msgSend((id)objc_opt_self(CNContactViewController), "viewControllerForNewContact:", v11);
  v13 = sub_10011B07C((uint64_t)objc_msgSend(v12, "setDelegate:", v2), "setAllowsEditing:");
  sub_10011B07C((uint64_t)v13, "setAllowsActions:");
  if (qword_1002D7268 != -1)
    swift_once(&qword_1002D7268, sub_10010BD74);
  v14 = sub_100109570();
  sub_10011ADC0(v14, (uint64_t)&unk_1002E2D10);
  v15 = sub_10011ADDC();
  if (sub_10011AF5C(v15))
  {
    v16 = (_WORD *)sub_10010E3FC();
    sub_10011B070(v16);
    sub_10011AE18((void *)&_mh_execute_header, v10, (os_log_type_t)v7, "presenting create contact view controller", v9);
    sub_100109440((uint64_t)v9);
  }

  v17 = sub_10010E3C0(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:");
  objc_msgSend(v2, "presentViewController:animated:completion:", v17, 1, 0);

}

id sub_100119584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  NSString v6;
  NSArray v7;
  id v8;

  if (!a2)
  {
    v6 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7.super.isa = 0;
    goto LABEL_6;
  }
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a3);
LABEL_6:
  v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "contactWithDisplayName:handleStrings:", v6, v7.super.isa);

  return v8;
}

Swift::Void __swiftcall PHAudioCallViewController.contactViewController(_:didCompleteWith:)(CNContactViewController _, CNContact_optional didCompleteWith)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = sub_10010BC5C((uint64_t)_.super.super.super.isa, "presentedViewController");
  if (v2)
  {
    v3 = v2;
    v4 = sub_100109754((uint64_t)&unk_100288F60, 24);
    swift_unknownObjectWeakInit(v4 + 16);
    v6[4] = sub_100119EF0;
    v7 = v4;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    v6[2] = sub_100112054;
    v6[3] = &unk_100288F78;
    v5 = _Block_copy(v6);
    swift_release(v7);
    objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 1, v5);
    _Block_release(v5);

  }
}

void sub_10011974C(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  _BYTE v7[24];

  v2 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v3 = objc_msgSend(v2, "currentCallCount");

  if (!v3)
  {
    v4 = a1 + 16;
    swift_beginAccess(v4, v7, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
    if (Strong)
    {
      v6 = Strong;
      objc_msgSend(Strong, "releaseDismissalAssertion");

    }
  }
}

uint64_t TUCall.callDate.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  double v4;
  uint64_t v5;

  v3 = objc_msgSend(v1, "callDuration");
  Date.init(timeIntervalSinceNow:)(v3, -v4);
  v5 = type metadata accessor for Date(0);
  return sub_10011AE8C(a1, 0, 1, v5);
}

uint64_t TUCall.simUUID.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(v1, "localSenderIdentityAccountUUID");
  if (v3)
  {
    v4 = v3;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v3);

    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v6 = type metadata accessor for UUID(0);
  return sub_10011AE8C(a1, v5, 1, v6);
}

void TUCall.formattedRemoteParticipantHandles.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend(v0, "remoteParticipantHandles");
  sub_10011B010();
  v5 = sub_10010BBE8(v2, v3, v4);
  sub_10011B010();
  sub_100119F80(v6, v7, v8, v9);
  static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v5, v10);
  sub_10011AF04();
  sub_1001189B4((uint64_t)&qword_1002D8290);
  sub_1001094F4();
  sub_10011AEDC();
}

uint64_t sub_100119998@<X0>(uint64_t a1@<X8>)
{
  return TUCall.callDate.getter(a1);
}

uint64_t sub_1001199B8@<X0>(uint64_t a1@<X8>)
{
  return TUCall.simUUID.getter(a1);
}

void sub_1001199D8()
{
  TUCall.formattedRemoteParticipantHandles.getter();
}

void sub_100119A28(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  objc_msgSend(sub_10010BC5C(a1, "features"), "isEnhancedEmergencyEnabled");
  sub_10011AFD0();
  if (!(_DWORD)v2)
    goto LABEL_17;
  v4 = objc_msgSend(sub_10010BC5C(v3, "callCenter"), "currentCalls");
  sub_10011AFD0();
  v6 = sub_10011ADD4(v5, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v6);

  if (!((unint64_t)v7 >> 62))
  {
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_13:
    sub_1001096DC();
    v12 = objc_msgSend(objc_msgSend(objc_allocWithZone((Class)ICSApplicationDelegate), "init"), "mostRecentlyDisconnectedAudioCall");
    sub_10011AFD0();
    v13 = 0;
    goto LABEL_16;
  }
  if (v7 < 0)
    v10 = v7;
  else
    v10 = v7 & 0xFFFFFFFFFFFFFF8;
  sub_10011AF34();
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  sub_1001096DC();
  if (!v11)
    goto LABEL_13;
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)sub_10011AFBC();
    goto LABEL_7;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v7 + 32);
LABEL_7:
    v9 = v8;
    sub_1001096DC();
    v13 = v9;
    objc_msgSend(v13, "isEmergency");
    sub_10011AFD0();
    if ((_DWORD)v9)
    {

LABEL_17:
      sub_100109830();
      return;
    }
LABEL_16:
    objc_msgSend(v1, "currentState");

    goto LABEL_17;
  }
  __break(1u);
}

void sub_100119BC0()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v1 = sub_100109570();
  sub_10011ADC0(v1, (uint64_t)&unk_1002E2CC8);
  v2 = sub_10011ADDC();
  if (os_log_type_enabled(v0, v2))
  {
    v3 = (uint8_t *)sub_10010E3FC();
    *(_WORD *)v3 = 0;
    sub_10011AE18((void *)&_mh_execute_header, v0, v2, "Update audio call background for emergency call", v3);
    sub_100109440((uint64_t)v3);
  }

  v5 = sub_10010E310(v4, "view");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    objc_msgSend(v6, "setBackgroundColor:", v7);

    v9 = sub_10010E310(v8, "buttonsViewController");
    v12 = objc_msgSend(v9, "view");

    if (v12)
    {
      v10 = objc_opt_self(PHAudioCallControlsView);
      v11 = (void *)swift_dynamicCastObjCClass(v12, v10);
      if (v11)
        objc_msgSend(v11, "updateBackgroundMaterial:", 3);

    }
    else
    {
      sub_10011AEDC();
    }
  }
  else
  {
    __break(1u);
  }
}

id PHAudioCallViewController.isFullScreen.getter()
{
  void *v0;
  id result;
  id v2;
  id v3;

  result = objc_msgSend(v0, "inCallRootViewController");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "isFullScreen");
    swift_unknownObjectRelease(v2);
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PHAudioCallViewController.presentShareCardViewController(_:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "presentViewController:animated:completion:", a1, 1, 0);
}

uint64_t sub_100119DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0((uint64_t *)&unk_1002D8280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100119E40(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100119E64(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
  {
    sub_10011AD90(v2);
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  result = sub_100119FBC(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_100119ECC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100119EF0()
{
  uint64_t v0;

  sub_10011974C(v0);
}

uint64_t sub_100119EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100119F08(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100119F14()
{
  unint64_t result;

  result = qword_1002D82A0;
  if (!qword_1002D82A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FactoryOutcome, &type metadata for FactoryOutcome);
    atomic_store(result, (unint64_t *)&qword_1002D82A0);
  }
  return result;
}

uint64_t type metadata accessor for PosterConfigurationWrapper()
{
  return objc_opt_self(ICSPosterConfigurationWrapper);
}

ValueMetadata *type metadata accessor for FactoryOutcome()
{
  return &type metadata for FactoryOutcome;
}

void sub_100119F80(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = sub_10010BBE8(255, a2, a3);
    atomic_store(swift_getWitnessTable(a4, v6), a1);
  }
  sub_100109438();
}

uint64_t sub_100119FBC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  Swift::Int v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int v15;
  Swift::Int v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  Swift::Int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  Swift::Int *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  Swift::Int v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        return sub_10011A620(0, v3, 1, a1);
      return result;
    }
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  v5 = result;
  result = (uint64_t)sub_10017EA70(v3 / 2);
  v100 = result;
  v101 = v3;
  v102 = v6;
  v98 = a1;
  if (v3 > 0)
  {
    v99 = v5;
    v7 = 0;
    v8 = *a1;
    v97 = *a1 + 8;
    v103 = (char *)_swiftEmptyArrayStorage;
    while (1)
    {
      v9 = v7++;
      if (v7 >= v3)
        goto LABEL_32;
      v10 = (uint64_t *)(v8 + 16 * v7);
      result = *v10;
      v11 = v10[1];
      v12 = (_QWORD *)(v8 + 16 * v9);
      v13 = v12[1];
      if (result == *v12 && v11 == v13)
        break;
      result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v11, *v12, v13, 1);
      v15 = result;
      v16 = v9 + 2;
      if (v9 + 2 < v3)
        goto LABEL_13;
LABEL_23:
      v7 = v16;
      if ((v15 & 1) == 0)
        goto LABEL_32;
LABEL_24:
      if (v16 < v9)
        goto LABEL_149;
      if (v9 < v16)
      {
        v23 = 16 * v16;
        v24 = 16 * v9;
        v25 = v16;
        v26 = v9;
        do
        {
          if (v26 != --v25)
          {
            if (!v8)
              goto LABEL_153;
            v27 = v8 + v23;
            v28 = *(_QWORD *)(v8 + v24);
            v29 = *(_QWORD *)(v8 + v24 + 8);
            *(_OWORD *)(v8 + v24) = *(_OWORD *)(v8 + v23 - 16);
            *(_QWORD *)(v27 - 16) = v28;
            *(_QWORD *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_31:
      v7 = v16;
LABEL_32:
      if (v7 >= v3)
        goto LABEL_41;
      if (__OFSUB__(v7, v9))
        goto LABEL_144;
      if (v7 - v9 >= v99)
        goto LABEL_41;
      if (__OFADD__(v9, v99))
        goto LABEL_147;
      if (v9 + v99 >= v3)
        v30 = v3;
      else
        v30 = v9 + v99;
      if (v30 < v9)
      {
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
        return result;
      }
      if (v7 == v30)
      {
LABEL_41:
        v31 = v103;
      }
      else
      {
        v82 = (uint64_t *)(v8 + 16 * v7);
        v31 = v103;
        do
        {
          v83 = (uint64_t *)(v8 + 16 * v7);
          result = *v83;
          v84 = v83[1];
          v85 = v9;
          v86 = v82;
          do
          {
            v87 = *(v86 - 2);
            v88 = *(v86 - 1);
            if (result == v87 && v84 == v88)
              break;
            result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v84, v87, v88, 1);
            if ((result & 1) == 0)
              break;
            if (!v8)
              goto LABEL_151;
            result = *v86;
            v84 = v86[1];
            *(_OWORD *)v86 = *((_OWORD *)v86 - 1);
            *(v86 - 1) = v84;
            *(v86 - 2) = result;
            v86 -= 2;
            ++v85;
          }
          while (v7 != v85);
          ++v7;
          v82 += 2;
        }
        while (v7 != v30);
        v7 = v30;
      }
      if (v7 < v9)
        goto LABEL_143;
      result = swift_isUniquelyReferenced_nonNull_native(v31);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_10011A888(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
        v31 = (char *)result;
      }
      v33 = *((_QWORD *)v31 + 2);
      v32 = *((_QWORD *)v31 + 3);
      v34 = v33 + 1;
      if (v33 >= v32 >> 1)
      {
        result = (uint64_t)sub_10011A888((char *)(v32 > 1), v33 + 1, 1, v31);
        v31 = (char *)result;
      }
      *((_QWORD *)v31 + 2) = v34;
      v35 = v31 + 32;
      v36 = (Swift::Int *)&v31[16 * v33 + 32];
      *v36 = v9;
      v36[1] = v7;
      v103 = v31;
      if (v33)
      {
        while (1)
        {
          v37 = v34 - 1;
          if (v34 >= 4)
          {
            v42 = &v35[2 * v34];
            v43 = *(v42 - 8);
            v44 = *(v42 - 7);
            v48 = __OFSUB__(v44, v43);
            v45 = v44 - v43;
            if (v48)
              goto LABEL_128;
            v47 = *(v42 - 6);
            v46 = *(v42 - 5);
            v48 = __OFSUB__(v46, v47);
            v40 = v46 - v47;
            v41 = v48;
            if (v48)
              goto LABEL_129;
            v49 = v34 - 2;
            v50 = &v35[2 * v34 - 4];
            v52 = *v50;
            v51 = v50[1];
            v48 = __OFSUB__(v51, v52);
            v53 = v51 - v52;
            if (v48)
              goto LABEL_130;
            v48 = __OFADD__(v40, v53);
            v54 = v40 + v53;
            if (v48)
              goto LABEL_132;
            if (v54 >= v45)
            {
              v72 = &v35[2 * v37];
              v74 = *v72;
              v73 = v72[1];
              v48 = __OFSUB__(v73, v74);
              v75 = v73 - v74;
              if (v48)
                goto LABEL_138;
              v65 = v40 < v75;
              goto LABEL_79;
            }
          }
          else
          {
            if (v34 != 3)
            {
              v66 = *((_QWORD *)v31 + 4);
              v67 = *((_QWORD *)v31 + 5);
              v48 = __OFSUB__(v67, v66);
              v59 = v67 - v66;
              v60 = v48;
              goto LABEL_73;
            }
            v39 = *((_QWORD *)v31 + 4);
            v38 = *((_QWORD *)v31 + 5);
            v48 = __OFSUB__(v38, v39);
            v40 = v38 - v39;
            v41 = v48;
          }
          if ((v41 & 1) != 0)
            goto LABEL_131;
          v49 = v34 - 2;
          v55 = &v35[2 * v34 - 4];
          v57 = *v55;
          v56 = v55[1];
          v58 = __OFSUB__(v56, v57);
          v59 = v56 - v57;
          v60 = v58;
          if (v58)
            goto LABEL_133;
          v61 = &v35[2 * v37];
          v63 = *v61;
          v62 = v61[1];
          v48 = __OFSUB__(v62, v63);
          v64 = v62 - v63;
          if (v48)
            goto LABEL_135;
          if (__OFADD__(v59, v64))
            goto LABEL_137;
          if (v59 + v64 >= v40)
          {
            v65 = v40 < v64;
LABEL_79:
            if (v65)
              v37 = v49;
            goto LABEL_81;
          }
LABEL_73:
          if ((v60 & 1) != 0)
            goto LABEL_134;
          v68 = &v35[2 * v37];
          v70 = *v68;
          v69 = v68[1];
          v48 = __OFSUB__(v69, v70);
          v71 = v69 - v70;
          if (v48)
            goto LABEL_136;
          if (v71 < v59)
            goto LABEL_90;
LABEL_81:
          v76 = v37 - 1;
          if (v37 - 1 >= v34)
          {
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
            goto LABEL_139;
          }
          if (!v8)
            goto LABEL_152;
          v77 = &v35[2 * v76];
          v78 = *v77;
          v79 = &v35[2 * v37];
          v80 = v79[1];
          result = sub_10011A6E4((char *)(v8 + 16 * *v77), (char *)(v8 + 16 * *v79), v8 + 16 * v80, v102);
          if (v1)
          {
            v90 = v103;
LABEL_107:
            result = swift_bridgeObjectRelease(v90);
            if (v101 >= -1)
            {
              *(_QWORD *)(v100 + 16) = 0;
              return swift_bridgeObjectRelease(v100);
            }
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
            goto LABEL_148;
          }
          if (v80 < v78)
            goto LABEL_125;
          if (v37 > *((_QWORD *)v103 + 2))
            goto LABEL_126;
          *v77 = v78;
          v35[2 * v76 + 1] = v80;
          v81 = *((_QWORD *)v103 + 2);
          if (v37 >= v81)
            goto LABEL_127;
          v31 = v103;
          v34 = v81 - 1;
          result = (uint64_t)memmove(&v35[2 * v37], v79 + 2, 16 * (v81 - 1 - v37));
          *((_QWORD *)v103 + 2) = v81 - 1;
          if (v81 <= 2)
            goto LABEL_90;
        }
      }
      v34 = 1;
LABEL_90:
      v3 = v101;
      if (v7 >= v101)
        goto LABEL_111;
    }
    v16 = v9 + 2;
    if (v9 + 2 >= v3)
      goto LABEL_31;
    v15 = 0;
LABEL_13:
    v17 = (uint64_t *)(v97 + 16 * v16);
    do
    {
      result = *(v17 - 1);
      v18 = *v17;
      v19 = (_QWORD *)(v8 + 16 * v7);
      v20 = v19[1];
      if (result == *v19 && v18 == v20)
      {
        if ((v15 & 1) != 0)
          goto LABEL_24;
      }
      else
      {
        result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v18, *v19, v20, 1);
        if (((v15 ^ result) & 1) != 0)
          goto LABEL_23;
      }
      v17 += 2;
      v22 = v16 + 1;
      v7 = v16;
      v16 = v22;
    }
    while (v22 < v3);
    v16 = v22;
    goto LABEL_23;
  }
  v103 = (char *)_swiftEmptyArrayStorage;
  v34 = _swiftEmptyArrayStorage[2];
LABEL_111:
  if (v34 >= 2)
  {
    v91 = *v98;
    while (1)
    {
      v92 = v34 - 2;
      if (v34 < 2)
        break;
      if (!v91)
        goto LABEL_154;
      v90 = v103;
      v93 = *(_QWORD *)&v103[16 * v92 + 32];
      v94 = *(_QWORD *)&v103[16 * v34 + 24];
      result = sub_10011A6E4((char *)(v91 + 16 * v93), (char *)(v91 + 16 * *(_QWORD *)&v103[16 * v34 + 16]), v91 + 16 * v94, v102);
      if (v1)
        goto LABEL_107;
      if (v94 < v93)
        goto LABEL_140;
      result = swift_isUniquelyReferenced_nonNull_native(v103);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_10011A97C((uint64_t)v103);
        v90 = (char *)result;
      }
      if (v92 >= *((_QWORD *)v90 + 2))
        goto LABEL_141;
      v95 = &v90[16 * v92 + 32];
      *(_QWORD *)v95 = v93;
      *((_QWORD *)v95 + 1) = v94;
      v96 = *((_QWORD *)v90 + 2);
      if (v34 > v96)
        goto LABEL_142;
      result = (uint64_t)memmove(&v90[16 * v34 + 16], &v90[16 * v34 + 32], 16 * (v96 - v34));
      v103 = v90;
      *((_QWORD *)v90 + 2) = v96 - 1;
      v34 = v96 - 1;
      v3 = v101;
      if (v96 <= 2)
        goto LABEL_122;
    }
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
LABEL_122:
  result = swift_bridgeObjectRelease(v103);
  if (v3 < -1)
    goto LABEL_150;
  *(_QWORD *)(v100 + 16) = 0;
  return swift_bridgeObjectRelease(v100);
}

uint64_t sub_10011A620(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        v13 = *(v12 - 2);
        v14 = *(v12 - 1);
        if (result == v13 && v10 == v14)
          break;
        result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1);
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_10011A6E4(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char *v17;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_10019C2F0(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = &v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v20 = (char *)(a3 - 16);
    while (1)
    {
      v21 = v20 + 16;
      v22 = *((_QWORD *)v12 - 2);
      v23 = *((_QWORD *)v12 - 1);
      v24 = v12 - 16;
      v25 = *((_QWORD *)v6 - 2);
      v26 = *((_QWORD *)v6 - 1);
      v27 = v22 == v25 && v23 == v26;
      if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v25, v26, 1) & 1) == 0)
      {
        v29 = v21 != v12 || v20 >= v12;
        v12 -= 16;
        if (!v29)
          goto LABEL_43;
      }
      else
      {
        v28 = v21 != v6 || v20 >= v6;
        v24 = v6 - 16;
        v6 -= 16;
        if (!v28)
          goto LABEL_43;
      }
      *(_OWORD *)v20 = *(_OWORD *)v24;
LABEL_43:
      v20 -= 16;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_47;
    }
  }
  sub_10019C2F0(a1, (a2 - a1) / 16, a4);
  v12 = &v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *((_QWORD *)v6 + 1);
      v15 = *((_QWORD *)v4 + 1);
      v16 = *(_QWORD *)v6 == *(_QWORD *)v4 && v14 == v15;
      if (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v6, v14, *(_QWORD *)v4, v15, 1) & 1) != 0)
        break;
      v17 = v4;
      v16 = v7 == v4;
      v4 += 16;
      if (!v16)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v17 = v6;
    v16 = v7 == v6;
    v6 += 16;
    if (v16)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v17;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_10019C2F0(v4, (v12 - v4) / 16, v6);
  return 1;
}

char *sub_10011A888(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1001085C0(&qword_1002D8428);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || &v14[16 * v8] <= v13)
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10011A97C(uint64_t a1)
{
  return sub_10011A888(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10011A990(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "filePath");

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t sub_10011A9FC(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "wallpaperData");

  if (!v2)
    return 0;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

id sub_10011AA68(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v5;
  id v6;

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend(a3, "directoryExistsAtPath:", v5);

  return v6;
}

uint64_t sub_10011AAC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(sub_10011AFB4() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;

  sub_100110FD4(v0 + v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_deallocObject(v0, v4, v5);
}

void sub_10011AB2C()
{
  uint64_t v0;

  sub_10011AFB4();
  sub_10011755C(*(void **)(v0 + 16));
}

uint64_t sub_10011AB58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10011AB84()
{
  uint64_t v0;

  sub_100114FFC(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10011AB8C(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10011ABA0(result, a2);
  return result;
}

uint64_t sub_10011ABA0(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

void sub_10011ABE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1001085C0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_100109438();
}

uint64_t sub_10011AC1C(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10011AC30(result, a2);
  return result;
}

uint64_t sub_10011AC30(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

_OWORD *sub_10011AC74(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10011AC84()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011ACA8(char a1)
{
  uint64_t v1;

  return sub_10017A244(a1, *(_QWORD *)(v1 + 16));
}

_QWORD *sub_10011ACB0(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10011ACD4(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10011ACDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ConversationControlsType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10011AD50()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for ConversationControlsType(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10011340C(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_10011AD90(uint64_t a1)
{
  sub_1001872DC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_10011ADC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100108664(a1, a2);
  return Logger.logObject.getter(v2, v3);
}

uint64_t sub_10011ADD4(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  return sub_10010BBE8(0, a2, a3);
}

uint64_t sub_10011ADDC()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10011ADF8(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return swift_beginAccess(v1, va, 0, 0);
}

void sub_10011AE18(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

uint64_t sub_10011AE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return swift_dynamicCast(a1, va, a3, a4, 6);
}

uint64_t sub_10011AE2C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_10011AE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  *(_QWORD *)(v3 - 240) = v4;
  return v4(v1, v2);
}

uint64_t sub_10011AE60()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10011AE68()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10011AE70()
{
  return 0;
}

uint64_t sub_10011AE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108600(a1, a2, a3, a4);
}

id sub_10011AE94(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_10011AEA0()
{
  return 0;
}

double sub_10011AEAC@<D0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_10011B1E0(0xD000000000000013, a1, v2, a2);
}

uint64_t sub_10011AEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v6, v7, a4);
}

void sub_10011AECC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_10011ABE4((uint64_t)va, a2);
}

id sub_10011AED4(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_10011AF04()
{
  void *v0;

}

uint64_t sub_10011AF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  uint64_t v13;
  va_list va;

  va_start(va, a12);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v12, v13, a4);
}

uint64_t sub_10011AF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return String.init<A>(reflecting:)(va);
}

uint64_t sub_10011AF34()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10011AF3C()
{
  uint64_t v0;
  unint64_t v1;

  sub_10011AB8C(v0, v1);
  return sub_10011AB8C(v0, v1);
}

BOOL sub_10011AF5C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id sub_10011AF6C(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_10011AF74()
{
  return 7104878;
}

uint64_t sub_10011AF80()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10011AF88@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

_WORD *sub_10011AF94(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_10011AFA0()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10011AFAC()
{
  return type metadata accessor for NameAndPhotoUtilities(0);
}

uint64_t sub_10011AFB4()
{
  return type metadata accessor for URL(0);
}

uint64_t sub_10011AFBC()
{
  uint64_t v0;

  return specialized _ArrayBuffer._getElementSlowPath(_:)(0, v0);
}

uint64_t sub_10011AFC8()
{
  return type metadata accessor for DispatchWorkItemFlags(0);
}

void sub_10011AFD0()
{
  void *v0;

}

BOOL sub_10011AFD8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id sub_10011AFE4(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2272));
}

void *sub_10011AFF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = a1;
  *(_QWORD *)(v2 - 112) = v1;
  return _Block_copy((const void *)(v2 - 136));
}

uint64_t sub_10011AFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  unint64_t v7;
  va_list va;

  va_start(va, a7);
  return sub_100121E04(a1, v7, (uint64_t *)va);
}

uint64_t sub_10011B008@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_10011B01C()
{
  uint64_t v0;
  uint64_t v1;

  return static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v0);
}

void sub_10011B028()
{
  void *v0;

}

uint64_t sub_10011B030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, a2, a3, 6, 0);
}

uint64_t sub_10011B03C()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_10011B048()
{
  return sub_10010E298();
}

double sub_10011B064@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_10011B1E0(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, v3, a3);
}

_WORD *sub_10011B070(_WORD *result)
{
  *result = 0;
  return result;
}

id sub_10011B07C(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 1);
}

uint64_t sub_10011B088(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_100121E04(a1, v3, a3);
}

uint64_t sub_10011B090()
{
  uint64_t v0;

  return _CocoaArrayWrapper.endIndex.getter(v0);
}

uint64_t sub_10011B098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

id sub_10011B0A4()
{
  id *v0;

  return *v0;
}

uint64_t sub_10011B0AC()
{
  uint64_t v0;
  uint64_t v1;

  return specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v0);
}

uint64_t sub_10011B0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = sub_100109FF4(a1, 1, v6);
  if ((_DWORD)v7 == 1)
  {
    sub_10011ABE4(a1, &qword_1002D84A0);
    v8 = 7168;
  }
  else
  {
    v9 = TaskPriority.rawValue.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    v8 = v9 | 0x1C00;
  }
  v10 = *(_QWORD *)(a3 + 16);
  if (v10)
  {
    v11 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType(*(_QWORD *)(a3 + 16));
    swift_unknownObjectRetain(v10);
    v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
    v15 = v14;
    swift_unknownObjectRelease(v10);
  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  if (v15 | v13)
  {
    v18[0] = 0;
    v18[1] = 0;
    v16 = v18;
    v18[2] = v13;
    v18[3] = v15;
  }
  else
  {
    v16 = 0;
  }
  return swift_task_create(v8, v16, (char *)&type metadata for () + 8, a2, a3);
}

double sub_10011B1E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v6;
  char v7;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_10011D2A8(a1, a2), (v7 & 1) != 0))
  {
    sub_10011DB94(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

double sub_10011B22C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_10011D30C(a1), (v6 & 1) != 0))
  {
    sub_10011DB94(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_10011B278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_10011D2A8(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(a3 + 56) + 16 * v4;
  v7 = *(_QWORD *)v6;
  v8 = *(id *)(v6 + 8);
  return v7;
}

uint64_t sub_10011B2C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unsigned __int8 *v5;
  uint64_t v6;

  if (!*(_QWORD *)(a2 + 16))
    return 512;
  v3 = sub_10011D378(a1);
  if ((v4 & 1) == 0)
    return 512;
  v5 = (unsigned __int8 *)(*(_QWORD *)(a2 + 56) + 32 * v3);
  if (v5[1])
    v6 = 256;
  else
    v6 = 0;
  return v6 | *v5;
}

void sub_10011B340(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  id v5;

  if (*(_QWORD *)(a2 + 16))
  {
    v3 = sub_10011D3E4(a1);
    if ((v4 & 1) != 0)
      v5 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v3);
  }
  sub_100109438();
}

__n128 sub_10011B380@<Q0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __n128 result;
  __n128 v9;

  v3 = *v1;
  v9 = *(__n128 *)(v1 + 1);
  v4 = v1[3];
  v5 = v1[4];
  v6 = swift_retain(*v1);
  v7 = static Edge.Set.all.getter(v6);
  *(_QWORD *)a1 = v3;
  result = v9;
  *(__n128 *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v7;
  return result;
}

char *sub_10011B3F0()
{
  _QWORD *v0;
  id v1;

  v1 = objc_allocWithZone((Class)type metadata accessor for VideoCallViewCoordinator());
  swift_retain(*v0);
  return sub_10011BA0C((uint64_t)v0);
}

id sub_10011B42C()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id result;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  char *v13;

  type metadata accessor for MultiwayViewController(0);
  v0 = sub_10019A684();
  sub_1001085C0(&qword_1002D8500);
  UIViewControllerRepresentableContext.coordinator.getter(&v13);
  v1 = v13;
  v2 = *(id *)&v13[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_bannerPresentationManager];

  v3 = (void *)MultiwayViewController.__allocating_init(activeCall:bannerPresentationManager:)(v0, v2);
  UIViewControllerRepresentableContext.coordinator.getter(&v13);
  MultiwayViewController.delegate.setter(v13);
  UIViewControllerRepresentableContext.coordinator.getter(&v13);
  MultiwayViewController.iOSDelegate.setter(v13);
  v4 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  LODWORD(v0) = objc_msgSend(v4, "userInterfaceIdiom") == (id)1;

  MultiwayViewController.supportedDeviceOrientations.setter(2 * v0);
  MultiwayViewController.isDisplayedInBanner.setter(0);
  MultiwayViewController.pipState.setter(0);
  result = objc_msgSend(v3, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = result;
  objc_msgSend(result, "setUserInteractionEnabled:", 0);

  MultiwayViewController.needsTips.setter(0);
  result = objc_msgSend(v3, "view");
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v7 = result;
  objc_msgSend(result, "layoutIfNeeded");

  MultiwayViewController.isOnScreen.setter(1);
  UIViewControllerRepresentableContext.coordinator.getter(&v13);
  v8 = v13;
  v9 = v3;
  sub_10011B9F8((uint64_t)v3);

  UIViewControllerRepresentableContext.coordinator.getter(&v13);
  v10 = v13;
  result = objc_msgSend((id)objc_opt_self(PHInCallOrientationMonitor), "sharedInstance");
  if (result)
  {
    v11 = result;
    v12 = objc_msgSend(result, "lastValidOrientation");

    sub_10011C738((uint64_t)v12);
    return v9;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10011B660(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD v13[5];
  uint64_t v14;

  v2 = v1;
  v4 = sub_1001085C0(&qword_1002D8500);
  v5 = UIViewControllerRepresentableContext.transaction.getter(v4);
  v6 = Transaction.animation.getter();
  swift_release(v5);
  swift_release(v6);
  if (v6)
  {
    v7 = (void *)objc_opt_self(UIView);
    v8 = swift_allocObject(&unk_100289260, 64, 7);
    v9 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)v2;
    *(_QWORD *)(v8 + 16) = a1;
    *(_OWORD *)(v8 + 40) = v9;
    *(_QWORD *)(v8 + 56) = *(_QWORD *)(v2 + 32);
    v13[4] = sub_10011D670;
    v14 = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_100112054;
    v13[3] = &unk_100289278;
    v10 = _Block_copy(v13);
    v11 = v14;
    v12 = a1;
    sub_10011D0E8((_QWORD *)v2);
    swift_release(v11);
    objc_msgSend(v7, "animateWithDuration:delay:options:animations:completion:", 0, v10, 0, 0.35, 0.0);
    _Block_release(v10);
  }
  else
  {
    objc_msgSend(a1, "setAdditionalSafeAreaInsets:", *(double *)(v2 + 8), *(double *)(v2 + 16), *(double *)(v2 + 24), *(double *)(v2 + 32));
  }
}

void sub_10011B7C0(void *a1, double *a2)
{
  id v3;
  id v4;

  objc_msgSend(a1, "setAdditionalSafeAreaInsets:", a2[1], a2[2], a2[3], a2[4]);
  v3 = objc_msgSend(a1, "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "layoutIfNeeded");

  }
  else
  {
    __break(1u);
  }
}

id sub_10011B82C()
{
  return sub_10011B42C();
}

void sub_10011B864(void *a1)
{
  sub_10011B660(a1);
}

char *sub_10011B8A4@<X0>(char **a1@<X8>)
{
  char *result;

  result = sub_10011B3F0();
  *a1 = result;
  return result;
}

uint64_t sub_10011B8E4(uint64_t a1, char a2)
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)(a1, a2 & 1);
}

uint64_t sub_10011B91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10011D694();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10011B96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10011D694();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10011B9BC()
{
  return static View._viewListCount(inputs:)();
}

void sub_10011B9D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10011D694();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_10011B9F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_viewController);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_viewController) = a1;

}

char *sub_10011BA0C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  __int128 v8;
  id v9;
  _BYTE *v10;
  objc_class *v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  char *result;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  objc_super v25;

  v3 = sub_1001085C0(&qword_1002D84A0);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_viewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_orientationTask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_audioRouteGlyphForDevice] = 0;
  v1[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isAmbient] = 0;
  v7 = &v1[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_configuration];
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a1;
  *((_OWORD *)v7 + 1) = v8;
  *((_QWORD *)v7 + 4) = *(_QWORD *)(a1 + 32);
  v9 = objc_allocWithZone((Class)type metadata accessor for BannerPresentationManager(0));
  v10 = v1;
  sub_10011D0E8((_QWORD *)a1);
  *(_QWORD *)&v10[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_bannerPresentationManager] = BannerPresentationManager.init(delegate:)(0);
  v10[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_hasPresentedFullScreenCallUI] = 1;
  v10[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isPresentingFullScreenCallUI] = 1;

  v11 = (objc_class *)type metadata accessor for VideoCallViewCoordinator();
  v25.receiver = v10;
  v25.super_class = v11;
  v12 = (char *)objc_msgSendSuper2(&v25, "init");
  v13 = *(void **)&v12[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_bannerPresentationManager];
  v14 = v12;
  v15 = v13;
  dispatch thunk of BannerPresentationManager.presentationDelegate.setter(v12);

  result = (char *)objc_msgSend((id)objc_opt_self(PHInCallOrientationMonitor), "sharedInstance");
  if (result)
  {
    v17 = result;
    objc_msgSend(result, "setOrientationEventsEnabled:", 1);

    v18 = type metadata accessor for TaskPriority(0);
    sub_100108600((uint64_t)v6, 1, 1, v18);
    v19 = swift_allocObject(&unk_100289210, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16);
    type metadata accessor for MainActor(0);
    v20 = swift_retain(v19);
    v21 = static MainActor.shared.getter(v20);
    v22 = (_QWORD *)swift_allocObject(&unk_100289238, 40, 7);
    v22[2] = v21;
    v22[3] = &protocol witness table for MainActor;
    v22[4] = v19;
    swift_release(v19);
    v23 = sub_10011B0B8((uint64_t)v6, (uint64_t)&unk_1002D84B0, (uint64_t)v22);
    sub_10011D210((_QWORD *)a1);

    v24 = *(_QWORD *)&v14[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_orientationTask];
    *(_QWORD *)&v14[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_orientationTask] = v23;
    swift_release(v24);
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10011BC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4[12] = a4;
  v5 = sub_1001085C0(&qword_1002DC2F0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Notification(0);
  v4[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[15] = v7;
  v4[16] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v4[17] = v8;
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1001085C0(&qword_1002D84C0);
  v4[19] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[20] = v10;
  v4[21] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1001085C0(&qword_1002D84C8);
  v4[22] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[23] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[24] = swift_task_alloc(v13);
  v4[25] = swift_task_alloc(v13);
  v14 = type metadata accessor for MainActor(0);
  v4[26] = v14;
  v4[27] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v4[28] = v15;
  v4[29] = v16;
  return swift_task_switch(sub_10011BDBC, v15, v16);
}

uint64_t sub_10011BDBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0[21];
  v22 = v0[20];
  v2 = v0[18];
  v3 = v0[19];
  v4 = v0[12];
  v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v6 = NSNotificationCenter.notifications(named:object:)(CFSTR("PHInCallOrientationEventNotification"), 0);

  v0[9] = v6;
  v21 = v4 + 16;
  v7 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v8 = sub_1001085C0(&qword_1002D84D8);
  sub_1001081CC(&qword_1002D84E0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  v10 = v9;
  AsyncMapSequence.init(_:transform:)(v0 + 9, &unk_1002D84D0, 0, v7, v8, v9);
  AsyncMapSequence.base.getter(v3);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v7, v10);
  v11 = AsyncMapSequence.transform.getter(v3);
  v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)(v2, v11, v13, v7, v8, v10);
  v14 = swift_beginAccess(v21, v0 + 6, 0, 0);
  v15 = static MainActor.shared.getter(v14);
  v0[30] = v15;
  if (v15)
  {
    ObjectType = swift_getObjectType(v15);
    v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v19 = v18;
  }
  else
  {
    v17 = 0;
    v19 = 0;
  }
  v0[31] = v17;
  v0[32] = v19;
  return swift_task_switch(sub_10011BF94, v17, v19);
}

uint64_t sub_10011BF94()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[30];
  v0[33] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 2, v0[22]);
  sub_1001081CC(&qword_1002D84E8, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[34] = v2;
  *v2 = v0;
  v2[1] = sub_10011C03C;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[13], v1, &protocol witness table for MainActor);
}

uint64_t sub_10011C03C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = v2;
  sub_10011DB9C(*(_QWORD *)(v2 + 272), &v4);
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 264))(v2 + 16, 0);
  return sub_100110E74();
}

uint64_t sub_10011C0A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  _QWORD *v12;
  int *v13;

  v2 = v0[13];
  v1 = v0[14];
  if (sub_100109FF4(v2, 1, v1) == 1)
  {
    v3 = v0[30];
    sub_10011ABE4(v2, &qword_1002DC2F0);
    swift_release(v3);
    return swift_task_switch(sub_10011C484, v0[28], v0[29]);
  }
  else
  {
    v6 = v0[24];
    v5 = v0[25];
    v7 = v0[22];
    v8 = v0[23];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0[15] + 32))(v0[16], v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
    v9 = (int *)AsyncMapSequence.Iterator.transform.getter(v7);
    v0[35] = v10;
    v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v0[36] = v11;
    v11(v6, v7);
    v13 = (int *)((char *)v9 + *v9);
    v12 = (_QWORD *)swift_task_alloc(v9[1]);
    v0[37] = v12;
    *v12 = v0;
    v12[1] = sub_10011C1EC;
    return ((uint64_t (*)(_QWORD *, _QWORD))v13)(v0 + 11, v0[16]);
  }
}

uint64_t sub_10011C1DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 264))(v0 + 16, 1);
}

uint64_t sub_10011C1EC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v8;

  v1 = (_QWORD *)*v0;
  v8 = v1;
  v2 = v1[35];
  v4 = v1[15];
  v3 = v1[16];
  v5 = v1[14];
  sub_10011DB9C(v1[37], &v8);
  v6 = swift_release(v2);
  v1[38] = v1[11];
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_10011C270, v1[31], v1[32]);
}

uint64_t sub_10011C270()
{
  _QWORD *v0;

  swift_release(v0[30]);
  return swift_task_switch(sub_10011C2A8, v0[28], v0[29]);
}

uint64_t sub_10011C2A8()
{
  uint64_t v0;
  uint8_t *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  BOOL v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v2 = *(void **)(v0 + 304);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 96) + 16;
    v4 = v2;
    v5 = objc_msgSend(v4, "integerValue");
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v7 = (void *)Strong;
      sub_10011C738((uint64_t)v5);

    }
    v9 = static MainActor.shared.getter(v8);
    *(_QWORD *)(v0 + 240) = v9;
    if (v9)
    {
      ObjectType = swift_getObjectType(v9);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v13 = v12;
    }
    else
    {
      v11 = 0;
      v13 = 0;
    }
    *(_QWORD *)(v0 + 248) = v11;
    *(_QWORD *)(v0 + 256) = v13;
    return sub_100110E74();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 216));
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100108664(v14, (uint64_t)&unk_1002E2D90);
    v17 = Logger.logObject.getter(v15, v16);
    v18 = static os_log_type_t.error.getter();
    v19 = v18;
    v20 = os_log_type_enabled(v17, v18);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    v22 = *(_QWORD *)(v0 + 200);
    v23 = *(_QWORD *)(v0 + 176);
    if (v20)
    {
      v1 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v1 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v19, "Received in-call orientation event with no orientation.", v1, 2u);
      swift_slowDealloc(v1, -1, -1);
    }

    v21(v22, v23);
    sub_10011DB7C();
    swift_task_dealloc(v17);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v19);
    swift_task_dealloc(v1);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10011C484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v2 + 216);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 184) + 8))(*(_QWORD *)(v2 + 200), *(_QWORD *)(v2 + 176));
  swift_release(v5);
  sub_10011DB7C();
  swift_task_dealloc(v5);
  swift_task_dealloc(v0);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10011C508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch(sub_10011C520, 0, 0);
}

uint64_t sub_10011C520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v1 = Notification.userInfo.getter();
  if (!v1)
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    goto LABEL_6;
  }
  v2 = v1;
  *(_QWORD *)(v0 + 88) = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("kPHLastValidInCallOrientationType"));
  *(_QWORD *)(v0 + 96) = v3;
  AnyHashable.init<A>(_:)(v0 + 88, &type metadata for String, &protocol witness table for String);
  sub_10011B22C(v0 + 16, v2, (_OWORD *)(v0 + 56));
  swift_bridgeObjectRelease(v2);
  sub_10011D238(v0 + 16);
  if (!*(_QWORD *)(v0 + 80))
  {
LABEL_6:
    v6 = *(_QWORD **)(v0 + 104);
    sub_10011ABE4(v0 + 56, &qword_1002D84F0);
    *v6 = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 104);
  v5 = sub_10011D26C();
  if ((swift_dynamicCast(v4, v0 + 56, (char *)&type metadata for Any + 8, v5, 6) & 1) == 0)
    **(_QWORD **)(v0 + 104) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10011C624()
{
  char *v0;
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_orientationTask];
  if (v1)
  {
    swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_orientationTask]);
    sub_1001085C0(&qword_1002D8520);
    Task.cancel()();
    swift_release(v1);
  }
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for VideoCallViewCoordinator();
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_10011C738(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *oslog;
  uint64_t v16;
  uint64_t v17;

  if ((unint64_t)(a1 - 1) > 3)
  {
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100108664(v5, (uint64_t)&unk_1002E2D90);
    oslog = Logger.logObject.getter(v6, v7);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v9 = 134217984;
      v16 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v9 + 4, v9 + 12);
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Ignoring non-interface device orientation: %ld", v9, 0xCu);
      swift_slowDealloc(v9, -1, -1);

      return;
    }
  }
  else
  {
    v3 = *(void **)(v1
                  + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_viewController);
    if (v3)
    {
      if ((unint64_t)(a1 - 2) > 2)
        v4 = 1;
      else
        v4 = qword_1002417E0[a1 - 2];
      oslog = v3;
      MultiwayViewController.deviceOrientation.setter(v4);
    }
    else
    {
      if (qword_1002D7298 != -1)
        swift_once(&qword_1002D7298, sub_10010C018);
      v10 = type metadata accessor for Logger(0);
      v11 = sub_100108664(v10, (uint64_t)&unk_1002E2D90);
      oslog = Logger.logObject.getter(v11, v12);
      v13 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(oslog, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, oslog, v13, "Unexpectedly missing view controller for coordinator.", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }
    }
  }

}

void *sub_10011CA7C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_audioRouteGlyphForDevice);
  v2 = v1;
  return v1;
}

void sub_10011CAF0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_audioRouteGlyphForDevice);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_audioRouteGlyphForDevice) = a1;

}

uint64_t sub_10011CBF8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_hasPresentedFullScreenCallUI);
}

uint64_t sub_10011CC2C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1
           + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_hasPresentedFullScreenCallUI) = result;
  return result;
}

uint64_t sub_10011CC60()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isPresentingFullScreenCallUI);
}

uint64_t sub_10011CC94(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1
           + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isPresentingFullScreenCallUI) = result;
  return result;
}

uint64_t sub_10011CCC8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isAmbient);
}

uint64_t sub_10011CCFC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isAmbient) = result;
  return result;
}

uint64_t sub_10011CF1C()
{
  return 0;
}

void sub_10011CFB8()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.VideoCallViewCoordinator", 38, "init()", 6, 0);
  __break(1u);
}

uint64_t type metadata accessor for VideoCallViewCoordinator()
{
  return objc_opt_self(_TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator);
}

uint64_t destroy for VideoCallView(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t initializeWithCopy for VideoCallView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  swift_retain(v3);
  return a1;
}

__n128 initializeWithTake for VideoCallView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VideoCallView()
{
  return &type metadata for VideoCallView;
}

void *sub_10011D09C()
{
  return &protocol witness table for Never;
}

unint64_t sub_10011D0AC()
{
  unint64_t result;

  result = qword_1002D8498;
  if (!qword_1002D8498)
  {
    result = swift_getWitnessTable(&unk_1002416A8, &type metadata for VideoCallView);
    atomic_store(result, (unint64_t *)&qword_1002D8498);
  }
  return result;
}

_QWORD *sub_10011D0E8(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

uint64_t sub_10011D110()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011D134()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10011D160(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1002D84AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10011D1CC;
  return sub_10011BC74(a1, v4, v5, v6);
}

uint64_t sub_10011D1CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  sub_10011DB9C(*(_QWORD *)(v3 + 16), &v3);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *sub_10011D210(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

uint64_t sub_10011D238(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

unint64_t sub_10011D26C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D84F8;
  if (!qword_1002D84F8)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D84F8);
  }
  return result;
}

unint64_t sub_10011D2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10011D464(a1, a2, v5);
}

unint64_t sub_10011D30C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10011D544(a1, v4);
}

uint64_t sub_10011D33C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_10011D378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  sub_1001081CC((unint64_t *)&qword_1002D8510, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10011D6D0(a1, v7);
}

unint64_t sub_10011D3E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_10011D810(a1, v7);
}

unint64_t sub_10011D464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10011D544(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_10011D608(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10011D238((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10011D608(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011D644()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_10011D670()
{
  uint64_t v0;

  sub_10011B7C0(*(void **)(v0 + 16), (double *)(v0 + 24));
}

uint64_t sub_10011D67C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10011D68C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10011D694()
{
  unint64_t result;

  result = qword_1002D8508;
  if (!qword_1002D8508)
  {
    result = swift_getWitnessTable(&unk_1002416F8, &type metadata for VideoCallView);
    atomic_store(result, (unint64_t *)&qword_1002D8508);
  }
  return result;
}

unint64_t sub_10011D6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v19 = a1;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5);
      sub_1001081CC(&qword_1002D8518, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v19, v5, v15);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_10011D810(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_10011D984()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t *_s13InCallService13VideoCallViewVwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

void _s13InCallService13VideoCallViewVwta_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  sub_100109438();
}

uint64_t getEnumTagSinglePayload for AmbientAvatar(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AmbientAvatar(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIVideoFeedView()
{
  return &type metadata for ClarityUIVideoFeedView;
}

uint64_t sub_10011DAE4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1002649C4, 1);
}

unint64_t sub_10011DAF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8528;
  if (!qword_1002D8528)
  {
    v1 = sub_10010AD84((uint64_t *)&unk_1002D8530);
    sub_10011D0AC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D8528);
  }
  return result;
}

uint64_t sub_10011DB7C()
{
  uint64_t v0;

  return swift_task_dealloc(*(_QWORD *)(v0 + 200));
}

uint64_t sub_10011DB94(uint64_t a1, uint64_t a2)
{
  return sub_10011D33C(a1, a2);
}

uint64_t sub_10011DB9C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = v2;
  return swift_task_dealloc(a1);
}

Swift::Void __swiftcall PHAudioCallViewController.updateCallRecordingIfNeeded()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;

  v1 = v0;
  if (qword_1002D7270 != -1)
    swift_once(&qword_1002D7270, sub_10010BDD0);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100108664(v2, (uint64_t)&unk_1002E2D28);
  v5 = Logger.logObject.getter(v3, v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "updateCallRecordingIfNeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = sub_10010E310((uint64_t)objc_msgSend(v1, "addCallRecordingIfNeeded"), "callRecordingButtonViewController");
  if (v8)
  {
    v9 = v8;
    v10 = type metadata accessor for CallRecordingButtonViewController(0);
    v11 = swift_dynamicCastClass(v9, v10);
    if (v11)
    {
      v12 = sub_10010E310(v11, "frontmostCall");
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(v12, "callUUID");
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

        v18._countAndFlagsBits = v15;
        v18._object = v17;
        CallRecordingButtonViewController.update(callUUID:)(v18);
        swift_bridgeObjectRelease(v17);
        CallRecordingButtonViewController.update(recordingAvailability:)(objc_msgSend(v13, "recordingAvailability"));

        v9 = v13;
      }
    }

  }
  v19 = sub_10010E310((uint64_t)v8, "callRecordingButtonViewController");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, "view");

    if (!v21)
    {
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
    objc_msgSend(v21, "setHidden:", sub_10011F54C() ^ 1);

  }
  v22 = sub_10010E310((uint64_t)v19, "callRecordingPillViewController");
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, "view");

    if (v24)
    {
      objc_msgSend(v24, "setHidden:", sub_10011F54C() ^ 1);

      return;
    }
    goto LABEL_18;
  }
}

uint64_t sub_10011DE80()
{
  void *v0;
  id v1;
  unsigned int v2;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = objc_msgSend(v0, "features");
  v2 = objc_msgSend(v1, "callRecordingEnabled");

  if (v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v4 = objc_msgSend(v3, "userInterfaceIdiom");

    if (v4 != (id)1)
    {
      v6 = objc_msgSend(v0, "frontmostCall");
      if (!v6)
      {
        if (qword_1002D7270 != -1)
          swift_once(&qword_1002D7270, sub_10010BDD0);
        v24 = type metadata accessor for Logger(0);
        v25 = sub_100108664(v24, (uint64_t)&unk_1002E2D28);
        v7 = Logger.logObject.getter(v25, v26);
        v27 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v7, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v7, v27, "No prioritized call", v28, 2u);
          swift_slowDealloc(v28, -1, -1);
        }
        goto LABEL_28;
      }
      v7 = v6;
      v8 = -[NSObject remoteParticipantHandles](v6, "remoteParticipantHandles");
      v9 = sub_10010BBE8(0, &qword_1002D8290, TUHandle_ptr);
      v10 = sub_10011F4FC();
      v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

      v12 = sub_100137274(v11);
      swift_bridgeObjectRelease(v11);
      if (v12 == 1)
      {
        v13 = objc_msgSend(v0, "callDisplayStyleManager");
        v14 = objc_msgSend(v13, "callDisplayStyle");

        if (v14 == (id)2
          || (v15 = objc_msgSend(v0, "callDisplayStyleManager"),
              v16 = objc_msgSend(v15, "callDisplayStyle"),
              v15,
              v16 == (id)3))
        {
          if (objc_msgSend(v0, "middleViewState") != 2)
          {
            v5 = 1;
LABEL_29:

            return v5;
          }
          if (qword_1002D7270 != -1)
            swift_once(&qword_1002D7270, sub_10010BDD0);
          v17 = type metadata accessor for Logger(0);
          v18 = sub_100108664(v17, (uint64_t)&unk_1002E2D28);
          v20 = Logger.logObject.getter(v18, v19);
          v21 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v20, v21))
            goto LABEL_27;
          v22 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v22 = 0;
          v23 = "Middle view is keypad";
        }
        else
        {
          if (qword_1002D7270 != -1)
            swift_once(&qword_1002D7270, sub_10010BDD0);
          v32 = type metadata accessor for Logger(0);
          v33 = sub_100108664(v32, (uint64_t)&unk_1002E2D28);
          v20 = Logger.logObject.getter(v33, v34);
          v21 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v20, v21))
            goto LABEL_27;
          v22 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v22 = 0;
          v23 = "Display style is not fulscreen or ambient";
        }
      }
      else
      {
        if (qword_1002D7270 != -1)
          swift_once(&qword_1002D7270, sub_10010BDD0);
        v29 = type metadata accessor for Logger(0);
        v30 = sub_100108664(v29, (uint64_t)&unk_1002E2D28);
        v20 = Logger.logObject.getter(v30, v31);
        v21 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v20, v21))
          goto LABEL_27;
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        v23 = "Remote participant handles not 1";
      }
      _os_log_impl((void *)&_mh_execute_header, v20, v21, v23, v22, 2u);
      swift_slowDealloc(v22, -1, -1);
LABEL_27:

LABEL_28:
      v5 = 0;
      goto LABEL_29;
    }
  }
  return 0;
}

Swift::Void __swiftcall PHAudioCallViewController.invertColorCallRecordingButtonColor(_:)(Swift::Bool a1)
{
  id v2;
  uint64_t v3;
  id v4;

  v2 = sub_10010BC5C(a1, "callRecordingButtonViewController");
  if (v2)
  {
    v4 = v2;
    v3 = type metadata accessor for CallRecordingButtonViewController(0);
    if (swift_dynamicCastClass(v4, v3))
      CallRecordingButtonViewController.invertColor(_:)(a1);

  }
}

void sub_10011E364()
{
  void *v0;
  id v1;
  unsigned int v2;

  v1 = objc_msgSend(v0, "features");
  v2 = objc_msgSend(v1, "callRecordingEnabled");

  if (v2)
  {
    objc_msgSend(v0, "addButton");
    objc_msgSend(v0, "addRecordingIndicator");
  }
}

void sub_10011E418()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  unsigned int v8;
  id v9;
  uint64_t v10;
  unsigned int *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  unsigned int v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  Class isa;
  uint64_t v50;
  uint64_t v51;

  v1 = v0;
  v2 = type metadata accessor for CallRecordingPillViewController.DisplayStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (uint64_t *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = objc_msgSend(v0, "features");
  v8 = objc_msgSend(v7, "callRecordingEnabled");

  if (v8)
  {
    v9 = objc_msgSend(v1, "callRecordingPillViewController");

    if (!v9)
    {
      if (sub_10011E9A8())
      {
        objc_msgSend((id)objc_opt_self(PHUIConfiguration), "ambientAudioRoutesButtonSize");
        *v6 = v10;
        v11 = (unsigned int *)&enum case for CallRecordingPillViewController.DisplayStyle.ambient(_:);
      }
      else
      {
        v11 = (unsigned int *)&enum case for CallRecordingPillViewController.DisplayStyle.portrait(_:);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v6, *v11, v2);
      v12 = objc_allocWithZone((Class)type metadata accessor for CallRecordingPillViewController(0));
      v13 = (void *)CallRecordingPillViewController.init(displayStyle:)(v6);
      objc_msgSend(v1, "setCallRecordingPillViewController:", v13);

    }
    v14 = objc_msgSend(v1, "callRecordingPillViewController");
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, "view");
      if (!v16)
      {
LABEL_20:

        return;
      }
      v17 = v16;
      if (sub_10011E9A8())
      {
        v18 = objc_msgSend(v1, "features");
        v19 = objc_msgSend(v18, "callRecordingDominoEnabled");

        if (!v19)
          goto LABEL_19;
        v20 = objc_msgSend(v1, "ambientAudioRoutesControlView");
        if (!v20)
          goto LABEL_19;
        v21 = v20;
        sub_10011E9F8(v1, (uint64_t)v17, v15);
        v22 = (void *)objc_opt_self(NSLayoutConstraint);
        v23 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
        v24 = swift_allocObject(v23, 48, 7);
        *(_OWORD *)(v24 + 16) = xmmword_100241810;
        v25 = objc_msgSend(v17, "centerYAnchor");
        v26 = objc_msgSend(v21, "centerYAnchor");
        v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

        *(_QWORD *)(v24 + 32) = v27;
        v28 = objc_msgSend(v17, "trailingAnchor");
        v29 = objc_msgSend(v21, "leadingAnchor");
        v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, -12.0);

        *(_QWORD *)(v24 + 40) = v30;
      }
      else
      {
        if (objc_msgSend(v1, "middleViewState") != 1)
          goto LABEL_19;
        v33 = objc_msgSend(v1, "buttonsViewController");
        v34 = objc_msgSend(v33, "view");

        if (v34)
        {
          sub_10011EA7C(v34);

        }
        sub_10011E9F8(v1, (uint64_t)v17, v15);
        v35 = objc_msgSend(v1, "recordingIndicatorLayoutGuide");
        if (!v35)
          goto LABEL_19;
        v21 = v35;
        v22 = (void *)objc_opt_self(NSLayoutConstraint);
        v36 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
        v24 = swift_allocObject(v36, 64, 7);
        *(_OWORD *)(v24 + 16) = xmmword_100241800;
        v37 = objc_msgSend(v17, "bottomAnchor");
        v38 = objc_msgSend(v21, "topAnchor");
        v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

        *(_QWORD *)(v24 + 32) = v39;
        v40 = objc_msgSend(v17, "centerXAnchor");
        v41 = objc_msgSend(v21, "centerXAnchor");
        v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

        *(_QWORD *)(v24 + 40) = v42;
        v43 = objc_msgSend(v17, "heightAnchor");
        v44 = objc_msgSend(v43, "constraintEqualToConstant:", 55.0);

        *(_QWORD *)(v24 + 48) = v44;
        v45 = objc_msgSend(v17, "widthAnchor");
        v46 = objc_msgSend(v21, "widthAnchor");
        v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

        *(_QWORD *)(v24 + 56) = v47;
      }
      v51 = v24;
      specialized Array._endMutation()(v31, v32);
      v48 = v51;
      sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v48);
      objc_msgSend(v22, "activateConstraints:", isa);

LABEL_19:
      goto LABEL_20;
    }
  }
}

BOOL sub_10011E9A8()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "callDisplayStyleManager");
  v2 = objc_msgSend(v1, "callDisplayStyle");

  return v2 == (id)3;
}

id sub_10011E9F8(void *a1, uint64_t a2, void *a3)
{
  id result;
  void *v7;

  result = objc_msgSend(a1, "view");
  if (result)
  {
    v7 = result;
    objc_msgSend(result, "addSubview:", a2);

    objc_msgSend(a1, "addChildViewController:", a3);
    return objc_msgSend(a3, "didMoveToParentViewController:", a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10011EA7C(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Class isa;
  id v30;

  v2 = v1;
  v4 = objc_msgSend(v2, "recordingIndicatorLayoutGuide");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v2, "view");
    if (!v6)
      goto LABEL_9;
    v7 = v6;
    objc_msgSend(v6, "removeLayoutGuide:", v5);

  }
  v30 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v8 = objc_msgSend(v2, "view");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "addLayoutGuide:", v30);

    v10 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
    v11 = swift_allocObject(v10, 64, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100241800;
    v12 = objc_msgSend(v30, "bottomAnchor");
    v13 = objc_msgSend(a1, "topAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

    *(_QWORD *)(v11 + 32) = v14;
    v15 = objc_msgSend(v30, "widthAnchor");
    v16 = objc_msgSend(a1, "widthAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:multiplier:", v16, 0.8);

    *(_QWORD *)(v11 + 40) = v17;
    v18 = objc_msgSend(v30, "heightAnchor");
    sub_10011F3E0();
    v19 = objc_msgSend(v18, "constraintEqualToConstant:");

    *(_QWORD *)(v11 + 48) = v19;
    v20 = objc_msgSend(v30, "centerXAnchor");
    v21 = objc_msgSend(v2, "view");
    if (v21)
    {
      v22 = v21;
      v23 = (void *)objc_opt_self(NSLayoutConstraint);
      v24 = objc_msgSend(v22, "centerXAnchor");

      v25 = objc_msgSend(v20, "constraintEqualToAnchor:", v24);
      *(_QWORD *)(v11 + 56) = v25;
      specialized Array._endMutation()(v26, v27);
      v28 = v11;
      sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v28);
      objc_msgSend(v23, "activateConstraints:", isa);

      objc_msgSend(v2, "setRecordingIndicatorLayoutGuide:", v30);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
}

void sub_10011EDE0()
{
  void *v0;
  void *v1;
  id v2;
  unsigned int v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  double v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  Class isa;
  NSObject *oslog;

  v1 = v0;
  v2 = objc_msgSend(v0, "features");
  v3 = objc_msgSend(v2, "callRecordingEnabled");

  if (v3)
  {
    v4 = objc_msgSend(v1, "callRecordingButtonViewController");

    if (!v4)
    {
      v5 = objc_msgSend(v1, "frontmostCall");
      if (v5)
      {
        v6 = v5;
        v7 = objc_msgSend(v5, "callUUID");
        v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        v10 = v9;

        v11 = objc_msgSend(v6, "recordingAvailability");
        v12 = objc_allocWithZone((Class)type metadata accessor for CallRecordingButtonViewController(0));
        v13 = (void *)CallRecordingButtonViewController.init(_:_:)(v8, v10, v11);
        objc_msgSend(v1, "setCallRecordingButtonViewController:", v13);

      }
      if (sub_10011E9A8())
      {
        if (qword_1002D7270 != -1)
          swift_once(&qword_1002D7270, sub_10010BDD0);
        v14 = type metadata accessor for Logger(0);
        v15 = sub_100108664(v14, (uint64_t)&unk_1002E2D28);
        oslog = Logger.logObject.getter(v15, v16);
        v17 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(oslog, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v18 = 0;
          _os_log_impl((void *)&_mh_execute_header, oslog, v17, "Not adding Call Recording button in Ambient.", v18, 2u);
          swift_slowDealloc(v18, -1, -1);
        }
        goto LABEL_18;
      }
      v19 = objc_msgSend(v1, "callRecordingButtonViewController");
      if (!v19)
        return;
      oslog = v19;
      v20 = -[NSObject view](v19, "view");
      if (!v20)
      {
LABEL_18:

        return;
      }
      v21 = v20;
      v22 = objc_msgSend(v1, "view");
      if (v22)
      {
        v23 = v22;
        objc_msgSend(v22, "addSubview:", v21);

        objc_msgSend(v1, "addChildViewController:", oslog);
        -[NSObject didMoveToParentViewController:](oslog, "didMoveToParentViewController:", v1);
        objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v24 = objc_msgSend(v21, "leadingAnchor");
        v25 = objc_msgSend(v1, "view");
        if (v25)
        {
          v26 = v25;
          v27 = objc_msgSend(v25, "leadingAnchor");

          v28 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v27, sub_10011F28C());
          objc_msgSend(v1, "setCallRecordingLeadingConstraint:", v28);

          v29 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
          v30 = swift_allocObject(v29, 48, 7);
          *(_OWORD *)(v30 + 16) = xmmword_100241810;
          v31 = objc_msgSend(v21, "topAnchor");
          v32 = objc_msgSend(v1, "view");
          if (v32)
          {
            v33 = v32;
            v34 = objc_msgSend(v32, "topAnchor");

            objc_msgSend(v1, "callDetailsButtonPaddingTop");
            v36 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v34, v35 + 3.0);

            *(_QWORD *)(v30 + 32) = v36;
            v37 = objc_msgSend(v1, "callRecordingLeadingConstraint");
            if (v37)
            {
              v38 = v37;
              v39 = (void *)objc_opt_self(NSLayoutConstraint);
              *(_QWORD *)(v30 + 40) = v38;
              specialized Array._endMutation()(v39, v40);
              v41 = v30;
              sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
              isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v41);
              objc_msgSend(v39, "activateConstraints:", isa);

              return;
            }
            goto LABEL_22;
          }
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_21;
    }
  }
}

double sub_10011F28C()
{
  void *v0;
  unsigned int v1;
  double result;

  v1 = objc_msgSend(v0, "isShowingPosterBadge");
  objc_msgSend(v0, "callDetailsButtonPaddingTrailing");
  if (v1)
    return result * 3.0;
  return result;
}

Swift::Void __swiftcall PHAudioCallViewController.updateCallRecordingPositionIfNeeded()()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = sub_10010BC5C(v0, "features");
  v2 = objc_msgSend(v1, "callRecordingEnabled");

  if (v2)
  {
    v4 = sub_10010BC5C(v3, "callRecordingLeadingConstraint");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setConstant:", sub_10011F28C());

    }
  }
}

id sub_10011F3E0()
{
  void *v0;
  char v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  CGRect v12;
  CGRect v13;

  type metadata accessor for Features(0);
  v0 = (void *)static Features.shared.getter();
  v1 = dispatch thunk of Features.isButtonLayoutEnabled.getter();

  if ((v1 & 1) == 0)
    return objc_msgSend((id)objc_opt_self(PHUIConfiguration), "inCallControlSpacing");
  v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v12.origin.x = v4;
  v12.origin.y = v6;
  v12.size.width = v8;
  v12.size.height = v10;
  CGRectGetWidth(v12);
  v13.origin.x = v4;
  v13.origin.y = v6;
  v13.size.width = v8;
  v13.size.height = v10;
  CGRectGetHeight(v13);
  return objc_msgSend((id)objc_opt_self(PHUIConfiguration), "inCallControlButtonVerticalSpacingRatio");
}

unint64_t sub_10011F4FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8298;
  if (!qword_1002D8298)
  {
    v1 = sub_10010BBE8(255, &qword_1002D8290, TUHandle_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1002D8298);
  }
  return result;
}

id sub_10011F54C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2464));
}

unint64_t sub_10011F558(unint64_t result)
{
  if (result > 4)
    return 0;
  return result;
}

unint64_t sub_10011F568@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_10011F558(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_10011F598(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v5 = sub_10010AE94();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  __chkstk_darwin(v5, v6);
  sub_100120ADC();
  __chkstk_darwin(v7, v8);
  v40 = (char *)&v39 - v9;
  type metadata accessor for MessageID.Value(0);
  sub_100120AA0();
  __chkstk_darwin(v10, v11);
  sub_100120B0C();
  v14 = v12 - v13;
  v17 = __chkstk_darwin(v15, v16);
  v19 = (char *)&v39 - v18;
  v21 = __chkstk_darwin(v17, v20);
  v23 = (char *)&v39 - v22;
  __chkstk_darwin(v21, v24);
  v26 = (char *)&v39 - v25;
  sub_1001085C0(&qword_1002D8698);
  sub_100120AA0();
  v29 = __chkstk_darwin(v27, v28);
  v31 = (char *)&v39 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (uint64_t)&v31[*(int *)(v29 + 48)];
  v43 = a1;
  sub_10010896C(a1, (uint64_t)v31);
  v44 = a2;
  sub_100120B38(a2);
  if (sub_100120AD4((uint64_t)v31) == 1)
  {
    sub_10010896C((uint64_t)v31, (uint64_t)v23);
    if (sub_100120AD4(v32) == 1)
    {
      v34 = v40;
      v33 = v41;
      v35 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
      v36 = v42;
      v35(v40, v23, v42);
      v35(v2, (char *)v32, v36);
      if ((static UUID.== infix(_:_:)(v34, v2) & 1) != 0)
      {
        v37 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v37((uint64_t)v2, v36);
        v37((uint64_t)v34, v36);
      }
      else
      {
        static UUID.< infix(_:_:)(v34, v2);
        v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v38((uint64_t)v2, v36);
        v38((uint64_t)v34, v36);
      }
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v42);
  }
  else
  {
    sub_10010896C((uint64_t)v31, (uint64_t)v26);
    if (sub_100120AD4(v32) != 1)
    {
LABEL_14:
      sub_1001089B0((uint64_t)v31);
      goto LABEL_15;
    }
  }
  sub_10010896C(v43, (uint64_t)v19);
  if (sub_100120AD4((uint64_t)v19) == 1)
    sub_1001089B0((uint64_t)v19);
  sub_10010896C(v44, v14);
  if (sub_100120AD4(v14) == 1)
    sub_1001089B0(v14);
  sub_1001209C8((uint64_t)v31, &qword_1002D8698);
LABEL_15:
  sub_10010BC44();
}

void sub_10011F86C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::UInt *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::UInt v13;

  v4 = v1;
  v6 = sub_10010AE94();
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v9 = sub_100120AB0();
  sub_100120AA0();
  __chkstk_darwin(v10, v11);
  sub_1001097B0();
  sub_100120B30(v4);
  if (swift_getEnumCaseMultiPayload(v3, v9) == 1)
  {
    sub_100120B40(v2, (uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
    Hasher._combine(_:)(1uLL);
    v12 = sub_10012095C((unint64_t *)&qword_1002D8510, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(a1, v6, v12);
    sub_100110FD4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  }
  else
  {
    v13 = *v3;
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v13);
  }
}

void sub_10011F96C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_10010AE94();
  sub_100120B1C();
  __chkstk_darwin(v7, v8);
  sub_100120AB0();
  sub_100120AA0();
  __chkstk_darwin(v9, v10);
  sub_100120B0C();
  v13 = v11 - v12;
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v22 - v16;
  sub_1001085C0(&qword_1002D8698);
  sub_100120AA0();
  __chkstk_darwin(v18, v19);
  sub_10011AEEC();
  v21 = v2 + *(int *)(v20 + 48);
  sub_100120B38(a1);
  sub_10010896C(a2, v21);
  if (sub_100120ACC(v2) != 1)
  {
    sub_10010896C(v2, (uint64_t)v17);
    if (sub_100120ACC(v21) != 1)
      goto LABEL_5;
LABEL_7:
    sub_1001209C8(v2, &qword_1002D8698);
    goto LABEL_8;
  }
  sub_100120B30(v2);
  if (sub_100120ACC(v21) != 1)
  {
    sub_100110FD4(v13, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    goto LABEL_7;
  }
  sub_100120B40(v3, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  static UUID.== infix(_:_:)(v13, v3);
  sub_100120AF8();
  sub_100120B48();
LABEL_5:
  sub_1001089B0(v2);
LABEL_8:
  sub_10010BC44();
}

void sub_10011FAD8(uint64_t a1)
{
  _BYTE v1[72];

  sub_100109810(a1);
  sub_10011F86C((uint64_t)v1);
  Hasher._finalize()();
  sub_100109578();
}

BOOL sub_10011FB0C(uint64_t a1, uint64_t a2)
{
  char v2;

  sub_10011F598(a2, a1);
  return (v2 & 1) == 0;
}

BOOL sub_10011FB38(uint64_t a1, uint64_t a2)
{
  char v2;

  sub_10011F598(a1, a2);
  return (v2 & 1) == 0;
}

void sub_10011FB58(uint64_t a1, uint64_t a2)
{
  sub_10011F598(a2, a1);
}

Swift::Int sub_10011FB70(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10011F86C((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_10011FBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = sub_10010AE94();
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MessageID.Value(0);
  sub_100120AA0();
  __chkstk_darwin(v6, v7);
  v9 = (_QWORD *)((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010896C(v0 + OBJC_IVAR___MPMessageID_value, (uint64_t)v9);
  if (sub_100120AD4((uint64_t)v9) == 1)
  {
    v10 = sub_100120B40((uint64_t)v5, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    v11 = UUID.uuidString.getter(v10);
    sub_100110FD4((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  else
  {
    v13[1] = *v9;
    return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  }
  return v11;
}

uint64_t sub_10011FD84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for MessageID.Value(0);
  sub_100120AA0();
  __chkstk_darwin(v5, v6);
  sub_1001097B0();
  sub_100120B30(v1 + OBJC_IVAR___MPMessageID_value);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v4);
  v8 = sub_10010AE94();
  v9 = v8;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, v2, v8);
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  return sub_100108600(a1, v10, 1, v9);
}

id sub_10011FE3C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return v7;
}

id sub_10011FE98(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  objc_super v5;

  v2 = &v1[OBJC_IVAR___MPMessageID_value];
  *(_QWORD *)&v1[OBJC_IVAR___MPMessageID_value] = a1;
  v3 = type metadata accessor for MessageID.Value(0);
  swift_storeEnumTagMultiPayload(v2, v3, 0);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MessageID(0);
  return objc_msgSendSuper2(&v5, "init");
}

id sub_10011FF20(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = &v1[OBJC_IVAR___MPMessageID_value];
  v4 = sub_10010AE94();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v6 = type metadata accessor for MessageID.Value(0);
  swift_storeEnumTagMultiPayload(v3, v6, 1);
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for MessageID(0);
  v7 = objc_msgSendSuper2(&v9, "init");
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v7;
}

void sub_100120040()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.MessageID", 23, "init()", 6, 0);
  __break(1u);
}

id sub_100120078()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MessageID(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001200BC()
{
  return type metadata accessor for MessageID(0);
}

uint64_t type metadata accessor for MessageID(uint64_t a1)
{
  return sub_100120158(a1, (uint64_t *)&unk_1002D85C8, (uint64_t)&nominal type descriptor for MessageID);
}

uint64_t sub_1001200D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for MessageID.Value(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for MessageID.Value(uint64_t a1)
{
  return sub_100120158(a1, qword_1002D8648, (uint64_t)&nominal type descriptor for MessageID.Value);
}

uint64_t sub_100120158(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

void sub_100120188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;

  sub_10010AE94();
  sub_100120B1C();
  __chkstk_darwin(v8, v9);
  sub_100120B0C();
  v12 = (char *)(v10 - v11);
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v30 - v15;
  type metadata accessor for MessageID.Value(0);
  sub_100120AA0();
  __chkstk_darwin(v17, v18);
  sub_100120ADC();
  __chkstk_darwin(v19, v20);
  v22 = (char *)&v30 - v21;
  sub_1001085C0(&qword_1002D8698);
  sub_100120AA0();
  __chkstk_darwin(v23, v24);
  sub_10011AEEC();
  v25 = a1 + OBJC_IVAR___MPMessageID_value;
  v26 = a2 + OBJC_IVAR___MPMessageID_value;
  v28 = v3 + *(int *)(v27 + 48);
  sub_100120B38(v25);
  sub_10010896C(v26, v28);
  if (sub_100120ACC(v3) == 1)
  {
    sub_10010896C(v3, (uint64_t)v22);
    if (sub_100120ACC(v28) == 1)
    {
      v29 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v29(v16, v22, v2);
      v29(v12, (char *)v28, v2);
      static UUID.< infix(_:_:)(v16, v12);
      sub_100120AF8();
      sub_100120B48();
    }
    else
    {
      sub_100110FD4((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      sub_1001089B0(v28);
    }
  }
  else
  {
    sub_10010896C(v3, v4);
    if (sub_100120ACC(v28) == 1)
      sub_1001089B0(v28);
  }
  sub_1001089B0(v3);
  sub_10010BC44();
}

void sub_100120374(uint64_t a1)
{
  _BYTE v1[72];

  sub_100109810(a1);
  sub_10011F86C((uint64_t)v1);
  Hasher._finalize()();
  sub_100109578();
}

uint64_t sub_1001203AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  void *v4;
  char v5;
  char v6;
  void *v8;
  _BYTE v9[24];
  uint64_t v10;

  ObjectType = swift_getObjectType(v1);
  sub_100120A04(a1, (uint64_t)v9);
  if (!v10)
  {
    sub_1001209C8((uint64_t)v9, &qword_1002D84F0);
    goto LABEL_5;
  }
  if ((swift_dynamicCast(&v8, v9, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) == 0)
  {
LABEL_5:
    v6 = 0;
    return v6 & 1;
  }
  v4 = v8;
  sub_10011F96C((uint64_t)v8 + OBJC_IVAR___MPMessageID_value, v1 + OBJC_IVAR___MPMessageID_value);
  v6 = v5;

  return v6 & 1;
}

ValueMetadata *type metadata accessor for MessageFolder()
{
  return &type metadata for MessageFolder;
}

uint64_t *sub_1001204E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_100120598(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1001205E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100120670(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1001089B0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_10012070C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100120798(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1001089B0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100120840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_100120850(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t sub_1001208C4()
{
  return sub_10012095C(&qword_1002D8680, type metadata accessor for MessageID.Value, (uint64_t)&unk_100241884);
}

unint64_t sub_1001208F4()
{
  unint64_t result;

  result = qword_1002D8688;
  if (!qword_1002D8688)
  {
    result = swift_getWitnessTable(&unk_1002419AC, &type metadata for MessageFolder);
    atomic_store(result, (unint64_t *)&qword_1002D8688);
  }
  return result;
}

uint64_t sub_100120930()
{
  return sub_10012095C(&qword_1002D8690, type metadata accessor for MessageID, (uint64_t)&protocol conformance descriptor for NSObject);
}

uint64_t sub_10012095C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012099C(uint64_t *a1, uint64_t *a2)
{
  char v2;

  sub_100120188(*a1, *a2);
  return v2 & 1;
}

uint64_t sub_1001209C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1001085C0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100120A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0(&qword_1002D84F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for MessageType()
{
  return &type metadata for MessageType;
}

unint64_t sub_100120A60()
{
  unint64_t result;

  result = qword_1002D86A0;
  if (!qword_1002D86A0)
  {
    result = swift_getWitnessTable(&unk_100241AA0, &type metadata for MessageType);
    atomic_store(result, (unint64_t *)&qword_1002D86A0);
  }
  return result;
}

uint64_t sub_100120AB0()
{
  return type metadata accessor for MessageID.Value(0);
}

uint64_t sub_100120ACC(uint64_t a1)
{
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(a1, v1);
}

uint64_t sub_100120AD4(uint64_t a1)
{
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(a1, v1);
}

uint64_t sub_100120AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_100120B30(uint64_t a1)
{
  uint64_t v1;

  return sub_10010896C(a1, v1);
}

uint64_t sub_100120B38(uint64_t a1)
{
  uint64_t v1;

  return sub_10010896C(a1, v1);
}

uint64_t sub_100120B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_100120B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

id sub_100120BB0@<X0>(id (**a1)()@<X8>)
{
  uint64_t v2;
  void *v4;

  v2 = sub_100122840((uint64_t)&unk_100289508);
  *(_QWORD *)(v2 + 16) = v4;
  a1[3] = (id (*)())&type metadata for ClarityUIRootViewProvider;
  *a1 = sub_10012269C;
  a1[1] = (id (*)())v2;
  return v4;
}

double sub_100120C04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v6;
  double result;
  _QWORD v8[6];
  _OWORD v9[2];
  __int128 v10;

  type metadata accessor for MainActor(0);
  v8[2] = a1;
  v8[3] = a2;
  sub_10019A8F4((uint64_t)sub_10012262C, (uint64_t)v8, (uint64_t)"InCallService/ICSApplicationDelegate+Swift.swift", 48, 2u, v9);
  v6 = v9[1];
  *a3 = v9[0];
  a3[1] = v6;
  result = *(double *)&v10;
  a3[2] = v10;
  return result;
}

double sub_100120C88@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  __int128 v7;
  double result;
  _OWORD v9[2];
  __int128 v10;

  v6 = swift_allocObject(&unk_1002894B8, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain(a2);
  sub_10016BD50((uint64_t)sub_100112644, v6, v9);
  v7 = v9[1];
  *a3 = v9[0];
  a3[1] = v7;
  result = *(double *)&v10;
  a3[2] = v10;
  return result;
}

double sub_100120D0C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_100120C04(*v1, v1[1], a1);
}

id ICSApplicationDelegate.bannerPresentationManager.getter()
{
  void *v0;
  char *v1;
  id *v2;
  id v3;
  _BYTE v5[24];

  v1 = (char *)objc_msgSend(v0, "bannerPresentationManager");
  v2 = (id *)&v1[direct field offset for CNKBannerPresentationManager.value];
  sub_100122828((uint64_t)v1, (uint64_t)v5);
  v3 = *v2;

  return v3;
}

uint64_t ICSApplicationDelegate.isPresentingAmbient.getter()
{
  type metadata accessor for AmbientState(0);
  return static AmbientState.isPresented.getter() & 1;
}

uint64_t ICSApplicationDelegate.isPresentingAmbient.setter(uint64_t a1)
{
  type metadata accessor for AmbientState(0);
  return static AmbientState.isPresented.setter(a1);
}

uint64_t ICSApplicationDelegate.updateForegroundApp(url:using:)@<X0>(uint64_t a1@<X1>, NSURL *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28[3];
  uint64_t v29;
  uint64_t v30;

  URL._bridgeToObjectiveC()(a2);
  v4 = v3;
  v5 = objc_msgSend(v3, "foregroundAppApplicationType");
  v6 = sub_10012256C(v4);
  if (v7
    && (v8 = v6,
        v9 = v7,
        type metadata accessor for ForegroundApp(0),
        (v10 = ForegroundApp.__allocating_init(bundleIdentifier:type:)(v8, v9, v5)) != 0))
  {
    v11 = (void *)v10;
    v12 = (id *)(a1 + direct field offset for CNKBannerPresentationManager.value);
    sub_100122828(v10, (uint64_t)v28);
    v13 = *v12;
    v14 = (void *)dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();

    if (v14)
    {
      v15 = v11;
      dispatch thunk of ConversationControlsManager.foregroundApp.setter(v11);

    }
    else
    {

    }
    return 1;
  }
  else
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v16 = sub_100109570();
    sub_100108664(v16, (uint64_t)&unk_1002E2CC8);
    v17 = v4;
    v19 = Logger.logObject.getter(v17, v18);
    v20 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v28[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v29 = (uint64_t)v17;
      sub_1001225CC();
      v23 = v17;
      v24 = String.init<A>(reflecting:)(&v29);
      v26 = v25;
      v29 = sub_100121E04(v24, v25, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v21 + 4, v21 + 12);

      swift_bridgeObjectRelease(v26);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unable to create ForegroundApp instance from url:%s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      sub_100109440(v22);
      sub_100109440((uint64_t)v21);

    }
    else
    {

    }
    return 0;
  }
}

Swift::Void __swiftcall ICSApplicationDelegate.dismissAnsweredCallBannerIfNeeded()()
{
  id v0;
  unsigned int v1;
  id v2;
  unsigned __int8 v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSString v18;
  NSObject *oslog;

  v0 = sub_10012284C();
  v1 = objc_msgSend(v0, "isIncomingCallBannerEnabled");

  if (!v1
    || (v2 = sub_10012284C(),
        v3 = objc_msgSend(v2, "isSystemApertureEnabled"),
        v2,
        (v3 & 1) != 0))
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v4 = sub_100109570();
    sub_100108664(v4, (uint64_t)&unk_1002E2CC8);
    oslog = sub_100122838();
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)sub_10010E3FC();
      *(_WORD *)v6 = 0;
      sub_10011AE18((void *)&_mh_execute_header, oslog, v5, "dismissAnsweredCallBannerIfNeeded: not needed", v6);
      sub_100109440((uint64_t)v6);
    }
LABEL_20:
    v13 = oslog;
    goto LABEL_21;
  }
  oslog = ICSApplicationDelegate.bannerPresentationManager.getter();
  v7 = dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();
  if (!v7)
  {
LABEL_15:
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v14 = sub_100109570();
    sub_100108664(v14, (uint64_t)&unk_1002E2CC8);
    v15 = sub_100122838();
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)sub_10010E3FC();
      *(_WORD *)v17 = 0;
      sub_10011AE18((void *)&_mh_execute_header, v15, v16, "dismissAnsweredCallBannerIfNeeded: dimissing", v17);
      sub_100109440((uint64_t)v17);
    }

    v18 = String._bridgeToObjectiveC()();
    -[NSObject dismissPresentedBannerForReason:animated:](oslog, "dismissPresentedBannerForReason:animated:", v18, 1);

    goto LABEL_20;
  }
  v8 = v7;
  if ((dispatch thunk of ConversationControlsManager.hasMultipleCalls.getter() & 1) == 0)
  {

    goto LABEL_15;
  }
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v9 = sub_100109570();
  sub_100108664(v9, (uint64_t)&unk_1002E2CC8);
  v10 = sub_100122838();
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)sub_10010E3FC();
    *(_WORD *)v12 = 0;
    sub_10011AE18((void *)&_mh_execute_header, v10, v11, "dismissAnsweredCallBannerIfNeeded: hasMultipleCalls, no dismissal needed", v12);
    sub_100109440((uint64_t)v12);
  }

  v13 = v8;
LABEL_21:

}

uint64_t sub_100121448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = type metadata accessor for LiveVoicemailCarrierSettings(0);
  sub_10010BC64(v0);
  sub_1001098E4();
  v2 = v1;
  v3 = type metadata accessor for AnsweringMachineSyncComposer(0);
  sub_10010BC64(v3);
  v4 = AnsweringMachineSyncComposer.init()();
  v5 = sub_100122840((uint64_t)&unk_1002894E0);
  swift_unknownObjectWeakInit(v5 + 16);
  swift_retain(v5);
  swift_retain(v2);
  v6 = dispatch thunk of AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:)(sub_100122668, v5, sub_100122670, v2);
  swift_release(v4);
  swift_release_n(v5, 2);
  swift_release_n(v2, 2);
  return v6;
}

uint64_t sub_10012150C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  const char *v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend((id)result, "carKitSessionStatus");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "currentSession");

      if (v6)
      {

        if (qword_1002D7260 != -1)
          swift_once(&qword_1002D7260, sub_10010BD38);
        v7 = type metadata accessor for Logger(0);
        v8 = sub_100108664(v7, (uint64_t)&unk_1002E2CF8);
        v10 = Logger.logObject.getter(v8, v9);
        v11 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v12 = 0;
          v13 = "LiveVoicemail is disabled because we are connected to car play";
LABEL_13:
          _os_log_impl((void *)&_mh_execute_header, v10, v11, v13, v12, 2u);
          swift_slowDealloc(v12, -1, -1);
          swift_unknownObjectRelease(v3);

          return 0;
        }
        goto LABEL_14;
      }
    }
    ObjectType = swift_getObjectType(v3);
    if ((objc_msgSend((id)swift_getObjCClassFromMetadata(ObjectType), "hasCarKitRoute") & 1) != 0)
    {
      if (qword_1002D7260 != -1)
        swift_once(&qword_1002D7260, sub_10010BD38);
      v15 = type metadata accessor for Logger(0);
      v16 = sub_100108664(v15, (uint64_t)&unk_1002E2CF8);
      v10 = Logger.logObject.getter(v16, v17);
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        v13 = "LiveVoicemail is disabled because we are connected to carkit";
        goto LABEL_13;
      }
LABEL_14:

      swift_unknownObjectRelease(v3);
      return 0;
    }
    swift_unknownObjectRelease(v3);
    return 1;
  }
  return result;
}

uint64_t sub_100121718@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[2];

  v4 = objc_msgSend(a1, "provider");
  v5 = objc_msgSend(v4, "isFaceTimeProvider");

  if ((v5 & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v6 = type metadata accessor for Logger(0);
    sub_100108664(v6, (uint64_t)&unk_1002E2CC8);
    v7 = a1;
    v9 = Logger.logObject.getter(v7, v8);
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v42[0] = v12;
      *(_DWORD *)v11 = 136446210;
      v13 = objc_msgSend(v7, "callUUID");
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

      v41 = sub_100121E04(v14, v16, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v11 + 4, v11 + 12);

      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "callScreening wait time for call: %{public}s needs to wait for default time before call screening.", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

    }
    v35 = enum case for TimeToWaitForCall.faceTime(_:);
    v36 = type metadata accessor for TimeToWaitForCall(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(a2, v35, v36);
  }
  else
  {
    sub_100109974(a1);
    v19 = v17;
    v20 = v18;
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v21 = type metadata accessor for Logger(0);
    sub_100108664(v21, (uint64_t)&unk_1002E2CC8);
    v22 = a1;
    v24 = Logger.logObject.getter(v22, v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(22, -1);
      v40 = swift_slowAlloc(64, -1);
      v42[0] = v40;
      *(_DWORD *)v26 = 136446466;
      v27 = objc_msgSend(v22, "callUUID");
      v28 = a2;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v31 = v30;

      v41 = sub_100121E04(v29, v31, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v26 + 4, v26 + 12);

      swift_bridgeObjectRelease(v31);
      *(_WORD *)(v26 + 12) = 2082;
      v32 = Duration.description.getter(v19, v20);
      v34 = v33;
      v41 = sub_100121E04(v32, v33, v42);
      a2 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v26 + 14, v26 + 22);
      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "callScreening wait time for call: %{public}s is %{public}s from carrier", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

    }
    *a2 = v19;
    a2[1] = v20;
    v38 = enum case for TimeToWaitForCall.duration(_:);
    v39 = type metadata accessor for TimeToWaitForCall(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(a2, v38, v39);
  }
}

uint64_t sub_100121E04(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  void *ObjectType;

  v6 = sub_100121ED4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10011D33C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10011D33C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_100110DC0(v12);
  return v7;
}

_QWORD *sub_100121ED4(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  _QWORD *result;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_100122028((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_1001220EC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = _StringObject.sharedUTF8.getter(a5, a6);
    if (!v8)
    {
      result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return (_QWORD *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

void *sub_100122028(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) != 0)
  {
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory with negative count", 60, 2, "Swift/UnsafeRawPointer.swift", 28, 2, 1170, 0);
  }
  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst)
      return memcpy(__dst, __src, __n);
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, 2, 1173, 0);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1001220EC(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_100122180(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100122354(0, v2[2] + 1, 1, (uint64_t)v2);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_100122354((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  v2[2] = v4 + 1;
  *((_BYTE *)v2 + v4 + 32) = 0;
  return v2;
}

_QWORD *sub_100122180(uint64_t a1, unint64_t a2)
{
  Swift::Int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v4 = String.UTF8View._foreignCount()();
    if (v4)
      goto LABEL_6;
    return _swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return _swiftEmptyArrayStorage;
LABEL_6:
  v5 = sub_1001222F0(v4, 0);
  if (v4 < 0)
  {
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, 2, 71, 0);
    __break(1u);
    goto LABEL_14;
  }
  v6 = v5;
  v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
  if ((v8 & 1) != 0)
  {
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    goto LABEL_15;
  }
  if (v7 == v4)
    return v6;
  result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, 2, 1122, 0);
LABEL_15:
  __break(1u);
  return result;
}

_QWORD *sub_1001222F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_1001085C0(&qword_1002D86B0);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

char *sub_100122354(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1001085C0(&qword_1002D86B0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1001224EC(v14, v8, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100122428(v14, v8, v13);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

void *sub_100122428(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) != 0)
  {
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
  }
  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst)
      return memcpy(__dst, __src, __n);
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  }
  __break(1u);
  return result;
}

char *sub_1001224EC(char *__src, size_t __len, char *__dst)
{
  char v4;

  if ((__len & 0x8000000000000000) != 0)
  {
    v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v4, 1046, 0);
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_10012256C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, "foregroundAppBundleIdentifier");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

unint64_t sub_1001225CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D86A8;
  if (!qword_1002D86A8)
  {
    v1 = objc_opt_self(NSURL);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D86A8);
  }
  return result;
}

uint64_t sub_100122608()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10012262C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100120C88(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100122644()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100122668()
{
  uint64_t v0;

  return sub_10012150C(v0);
}

uint64_t sub_100122670@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_100121718(a1, a2);
}

uint64_t sub_100122678()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10012269C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissInCallSceneSession");
}

_QWORD *initializeBufferWithCopyOfBuffer for ClarityUIRootViewProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for ClarityUIRootViewProvider(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for ClarityUIRootViewProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t assignWithTake for ClarityUIRootViewProvider(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIRootViewProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIRootViewProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIRootViewProvider()
{
  return &type metadata for ClarityUIRootViewProvider;
}

uint64_t sub_1001227D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100264AD0, 1);
}

unint64_t sub_1001227E8()
{
  unint64_t result;

  result = qword_1002D86B8;
  if (!qword_1002D86B8)
  {
    result = swift_getWitnessTable(&unk_100243544, &type metadata for ClarityUIRootView);
    atomic_store(result, (unint64_t *)&qword_1002D86B8);
  }
  return result;
}

uint64_t sub_100122828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return swift_beginAccess(v2, a2, 0, 0);
}

uint64_t sub_100122838()
{
  return Logger.logObject.getter();
}

uint64_t sub_100122840(uint64_t a1)
{
  return swift_allocObject(a1, 24, 7);
}

id sub_10012284C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2088));
}

uint64_t sub_100122878()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService15PHCountingLayer_value);
}

void sub_1001228C8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService15PHCountingLayer_value) = a1;
  sub_1001228D8();
}

void sub_1001228D8()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  id v6;

  sub_10010BBE8(0, &qword_1002D86F8, NSString_ptr);
  v1 = (void *)NSString.init(stringLiteral:)("%d", v5);
  v2 = sub_1001085C0(&qword_1002D8700);
  v3 = swift_allocObject(v2, 72, 7);
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService15PHCountingLayer_value];
  *(_OWORD *)(v3 + 16) = xmmword_100241240;
  *(_QWORD *)(v3 + 56) = &type metadata for Int;
  *(_QWORD *)(v3 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v3 + 32) = v4;
  v6 = (id)NSString.init(format:_:)(v1, v3);

  objc_msgSend(v0, "setString:", v6);
  objc_msgSend(v0, "setNeedsDisplay");

}

uint64_t sub_1001229BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  id v4;
  void *ObjCClassFromMetadata;
  NSString v6;
  objc_super v8;

  sub_100122E34();
  v3 = v3 && v2 == 0xE500000000000000;
  if (v3 || (sub_100122E1C(v1, v2) & 1) != 0)
    return 1;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v0);
  v6 = String._bridgeToObjectiveC()();
  v8.receiver = ObjCClassFromMetadata;
  v8.super_class = (Class)&OBJC_METACLASS____TtC13InCallService15PHCountingLayer;
  v4 = objc_msgSendSuper2(&v8, "needsDisplayForKey:", v6);

  return (uint64_t)v4;
}

void sub_100122AB4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  BOOL v7;
  id v8;
  id v9;
  void *v10;
  Class isa;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  objc_super v20;

  v3 = v2;
  sub_100122E34();
  v7 = v7 && v6 == 0xE500000000000000;
  if (v7 || (sub_100122E1C(a1, a2) & 1) != 0)
  {
    sub_10010BBE8(0, (unint64_t *)&qword_1002D86F0, CABasicAnimation_ptr);
    swift_bridgeObjectRetain(a2);
    v8 = sub_10018514C(a1, a2);
    v9 = objc_msgSend(v3, "presentationLayer");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "value");

    }
    else
    {
      objc_msgSend(v3, "value");
    }
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v8, "setFromValue:", isa);

  }
  else
  {
    v12 = String._bridgeToObjectiveC()();
    v20.receiver = v3;
    v20.super_class = (Class)type metadata accessor for PHCountingLayer();
    v19 = sub_100122E48((uint64_t)v20.super_class, "actionForKey:", v13, v14, v15, v16, v17, v18, v20);

  }
  sub_10011AEDC();
}

id sub_100122C38()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService15PHCountingLayer_value] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PHCountingLayer();
  return objc_msgSendSuper2(&v2, "init");
}

void sub_100122C94(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v12;

  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService15PHCountingLayer_value] = 0;
  v3 = a1[3];
  v4 = sub_10011ACB0(a1, v3);
  v5 = _bridgeAnythingToObjectiveC<A>(_:)(v4, v3);
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for PHCountingLayer();
  sub_100122E48((uint64_t)v12.super_class, "initWithLayer:", v6, v7, v8, v9, v10, v11, v12);
  swift_unknownObjectRelease(v5);
  sub_100110DC0(a1);
  sub_10011AEDC();
}

id sub_100122D50(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService15PHCountingLayer_value] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PHCountingLayer();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_100122DCC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PHCountingLayer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PHCountingLayer()
{
  return objc_opt_self(_TtC13InCallService15PHCountingLayer);
}

uint64_t sub_100122E1C(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x65756C6176, 0xE500000000000000, 0);
}

id sub_100122E48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  uint64_t v9;

  return objc_msgSendSuper2(&a9, a2, v9);
}

void sub_100122E54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD v34[5];
  unint64_t v35;

  v1 = a1;
  v35 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_10012398C();
    v5 = sub_1001239C8();
    v6 = Set.Iterator.init(_cocoa:)(v34, v3, v4, v5);
    v1 = v34[0];
    v31 = v34[1];
    v7 = v34[2];
    v8 = v34[3];
    v9 = v34[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v31 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  while (v1 < 0)
  {
    v17 = __CocoaSet.Iterator.next()(v6);
    if (!v17)
      goto LABEL_42;
    v18 = v17;
    v32 = v17;
    v19 = sub_10012398C();
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v33, &v32, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = v33;
    swift_unknownObjectRelease(v18);
    v16 = v8;
    v14 = v9;
    if (!v20)
      goto LABEL_42;
LABEL_29:
    v23 = objc_opt_self(UIWindowScene);
    v24 = (void *)swift_dynamicCastObjCClass(v20, v23);
    if (!v24)
    {

      goto LABEL_35;
    }
    v25 = objc_msgSend(v24, "keyWindow");

    v8 = v16;
    v9 = v14;
    if (v25)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v27 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v26 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v27 >= v26 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1);
      v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
      v6 = (_QWORD *)specialized Array._endMutation()(v28, v29);
LABEL_35:
      v8 = v16;
      v9 = v14;
    }
  }
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
LABEL_28:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v20)
      goto LABEL_42;
    goto LABEL_29;
  }
  v16 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v16 >= v13)
      goto LABEL_42;
    v21 = *(_QWORD *)(v31 + 8 * v16);
    if (!v21)
    {
      v22 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_42;
      v21 = *(_QWORD *)(v31 + 8 * v22);
      if (v21)
        goto LABEL_26;
      v22 = v8 + 3;
      if (v8 + 3 >= v13)
        goto LABEL_42;
      v21 = *(_QWORD *)(v31 + 8 * v22);
      if (v21)
        goto LABEL_26;
      v22 = v8 + 4;
      if (v8 + 4 >= v13)
        goto LABEL_42;
      v21 = *(_QWORD *)(v31 + 8 * v22);
      if (v21)
      {
LABEL_26:
        v16 = v22;
      }
      else
      {
        v16 = v8 + 5;
        if (v8 + 5 >= v13)
          goto LABEL_42;
        v21 = *(_QWORD *)(v31 + 8 * v16);
        if (!v21)
        {
          v30 = v8 + 6;
          while (v30 < v13)
          {
            v21 = *(_QWORD *)(v31 + 8 * v30++);
            if (v21)
            {
              v16 = v30 - 1;
              goto LABEL_27;
            }
          }
LABEL_42:
          sub_10011ACD4(v1);
          return;
        }
      }
    }
LABEL_27:
    v14 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v16 << 6);
    goto LABEL_28;
  }
  __break(1u);
}

id sub_100123178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  v3 = (void *)sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
  v4 = static os_log_type_t.default.getter();
  if (sub_100109560(v4))
  {
    v5 = (_WORD *)sub_10010E3FC();
    *v5 = 0;
    sub_100123A2C((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: pip coordinator starting pip");
    sub_100109440((uint64_t)v5);
  }

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_pictureInPictureProxy), "startPictureInPicture");
}

id sub_100123224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  v3 = (void *)sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
  v4 = static os_log_type_t.default.getter();
  if (sub_100109560(v4))
  {
    v5 = (_WORD *)sub_10010E3FC();
    *v5 = 0;
    sub_100123A2C((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: pip coordinator stopping pip");
    sub_100109440((uint64_t)v5);
  }

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_pictureInPictureProxy), "stopPictureInPictureAndRestoreUserInterface:", 1);
}

void sub_1001232D4()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.EnhancedEmergencyPIPCoordinator", 45, "init()", 6, 0);
  __break(1u);
}

id sub_10012330C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedEmergencyPIPCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EnhancedEmergencyPIPCoordinator()
{
  return objc_opt_self(_TtC13InCallService31EnhancedEmergencyPIPCoordinator);
}

void sub_1001233B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  void *v5;

  if (!a3)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_delegate);
    if (Strong)
    {
      v5 = Strong;
      objc_msgSend(Strong, "transitionToRTTState:", 2);
      swift_unknownObjectRelease(v5);
    }
  }
}

id sub_10012345C()
{
  uint64_t v0;
  id v1;
  id v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_sourceView), "window");
  if (v1)
    return v1;
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "connectedScenes");

  v5 = sub_10012398C();
  v6 = sub_1001239C8();
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

  sub_100122E54(v7);
  v9 = (uint64_t)v8;
  swift_bridgeObjectRelease(v7);
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v20 = v9;
    else
      v20 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    sub_1001096DC();
    if (v21)
      goto LABEL_5;
  }
  else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    sub_100119E3C(0, (v9 & 0xC000000000000001) == 0, v9);
    if ((v9 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
    else
      v10 = *(id *)(v9 + 32);
    v11 = v10;
    sub_1001096DC();
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v12 = sub_100109570();
    v13 = sub_100108664(v12, (uint64_t)&unk_1002E2CC8);
    v1 = v11;
    Logger.logObject.getter(v1, v14);
    v15 = sub_100123A70();
    if (os_log_type_enabled(v13, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v16 = 138412290;
      v27 = v1;
      v18 = v1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v16 + 4, v16 + 12);
      *v17 = v1;

      _os_log_impl((void *)&_mh_execute_header, v13, v15, "EnhancedEmergency: Source view is yet attached to a window, returning the first window of the application: %@", v16, 0xCu);
      v19 = sub_1001085C0(&qword_1002D7880);
      swift_arrayDestroy(v17, 1, v19);
      sub_100109440((uint64_t)v17);
      sub_100109440((uint64_t)v16);

      return v18;
    }
    else
    {

    }
    return v1;
  }
  sub_1001096DC();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v22 = sub_100109570();
  sub_10011ADC0(v22, (uint64_t)&unk_1002E2CC8);
  v23 = sub_100123A70();
  if (sub_100123A54(v23))
  {
    v24 = (_WORD *)sub_10010E3FC();
    *v24 = 0;
    sub_100123A40((void *)&_mh_execute_header, v25, v26, "EnhancedEmergency: There are no windows associated with the application, returning an empty window.");
    sub_100109440((uint64_t)v24);
  }

  return objc_msgSend(objc_allocWithZone((Class)UIWindow), "init");
}

double sub_1001237D4()
{
  void *v0;
  uint64_t v1;
  void *v2;
  UIView *v3;
  UIView *v4;
  unint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  CGRect v13;
  CGRect v14;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_sourceView);
  sub_100123A64();
  if (CGRectIsEmpty(v13) || (v3 = (UIView *)objc_msgSend(v2, "superview")) == 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v6 = sub_100109570();
    sub_10011ADC0(v6, (uint64_t)&unk_1002E2CC8);
    v7 = sub_100123A70();
    if (sub_100123A54(v7))
    {
      v8 = (_WORD *)sub_10010E3FC();
      *v8 = 0;
      sub_100123A40((void *)&_mh_execute_header, v9, v10, "EnhancedEmergency: The source view does not yet have a frame or superview set, returning the main screen bounds for picture-in-picture");
      sub_100109440((uint64_t)v8);
    }

    v4 = (UIView *)objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    -[UIView bounds](v4, "bounds");
  }
  else
  {
    v4 = v3;
    sub_100123A64();
    v5 = (unint64_t)UIAccessibilityConvertFrameToScreenCoordinates(v14, v4);
  }
  v11 = *(double *)&v5;

  return v11;
}

unint64_t sub_10012398C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8750;
  if (!qword_1002D8750)
  {
    v1 = objc_opt_self(UIScene);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D8750);
  }
  return result;
}

unint64_t sub_1001239C8()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1002D8758;
  if (!qword_1002D8758)
  {
    v1 = sub_10012398C();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1002D8758);
  }
  return result;
}

uint64_t sub_100123A08(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

void sub_100123A2C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void sub_100123A40(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

BOOL sub_100123A54(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id sub_100123A64()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2584));
}

uint64_t sub_100123A70()
{
  return static os_log_type_t.default.getter();
}

void *sub_100123A98()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService22ClarityUISceneDelegate_window);
  v2 = v1;
  return v1;
}

void sub_100123B0C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService22ClarityUISceneDelegate_window);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService22ClarityUISceneDelegate_window) = a1;

}

void sub_100123B20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  id v65;
  void *v66;
  void (*v67)(char *, uint64_t);
  __n128 v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD v73[4];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  _QWORD v80[2];

  v72 = sub_1001085C0(&qword_1002D8880);
  v71 = *(_QWORD *)(v72 - 8);
  v4 = __chkstk_darwin(v72, v3);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v4, v7);
  v10 = (char *)&v69 - v9;
  __chkstk_darwin(v8, v11);
  v13 = (char *)&v69 - v12;
  v14 = objc_opt_self(UIWindowScene);
  if (swift_dynamicCastObjCClass(a1, v14))
  {
    v15 = (void *)objc_opt_self(UIApplication);
    v16 = objc_msgSend(v15, "sharedApplication");
    v17 = objc_msgSend(v16, "delegate");

    if (v17)
    {
      v18 = objc_opt_self(ICSApplicationDelegate);
      v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
      if (v19)
      {
        v70 = v17;
        v20 = objc_msgSend(v19, "sceneManager");
        objc_msgSend(v20, "registerGenericScene:ofType:", a1, 3);

        v21 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService22ClarityUISceneDelegate_window);
        if (v21)
        {
          v22 = v21;
          v23 = objc_msgSend(v15, "sharedApplication");
          v24 = objc_msgSend(v23, "delegate");

          if (v24)
          {
            v25 = objc_opt_self(ICSApplicationDelegate);
            v26 = (void *)swift_dynamicCastObjCClass(v24, v25);
            if (v26)
            {
              v27 = v26;
              if (!objc_msgSend(v26, "shouldActivateSOS"))
              {
                v54 = objc_msgSend(v27, "swiftui_rootViewForSimplifiedApplicationProvider");
                _bridgeAnyObjectToAny(_:)(&v74, v54);
                swift_unknownObjectRelease(v54);
                if ((swift_dynamicCast(v73, &v74, (char *)&type metadata for Any + 8, &type metadata for ClarityUIRootViewProvider, 6) & 1) != 0)
                {
                  v55 = v73[0];
                  v56 = type metadata accessor for MainActor(0);
                  __chkstk_darwin(v56, v57);
                  *((_OWORD *)&v69 - 1) = v55;
                  sub_10019A8F4((uint64_t)sub_10012262C, (uint64_t)(&v69 - 4), (uint64_t)"InCallService/ICSApplicationDelegate+Swift.swift", 48, 2u, &v74);
                  v79 = v76;
                  sub_10012462C((uint64_t)&v79 + 8, (uint64_t)v80, &qword_1002D8888);
                  v58 = (void *)v79;
                  v77 = v75;
                  sub_10012462C((uint64_t)&v77 + 8, (uint64_t)&v78, (uint64_t *)&unk_1002D8890);
                  v59 = v77;
                  v60 = *((_QWORD *)&v74 + 1);
                  v73[0] = v74;
                  v73[1] = v75;
                  v73[2] = v76;
                  v61 = sub_1001227E8();
                  View.clarityUIIdiom()(&type metadata for ClarityUIRootView, v61);
                  swift_release(v59);
                  swift_release(v60);
                  sub_10011D210(&v78);

                  sub_10011D210(v80);
                  v62 = v71;
                  v63 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
                  v64 = v72;
                  v63(v10, v13, v72);
                  v65 = objc_allocWithZone((Class)sub_1001085C0((uint64_t *)&unk_1002D88A0));
                  v63(v6, v10, v64);
                  v66 = (void *)UIHostingController.init(rootView:)(v6);
                  v67 = *(void (**)(char *, uint64_t))(v62 + 8);
                  v67(v10, v64);
                  objc_msgSend(v22, "setRootViewController:", v66);

                  v68 = swift_release(*((_QWORD *)&v55 + 1));
                  ((void (*)(char *, uint64_t, __n128))v67)(v13, v64, v68);
                }
                goto LABEL_23;
              }
              v28 = objc_msgSend(objc_allocWithZone((Class)PHInCallRootViewController), "initWithCallDisplayStyleManager:", 0);
              if (!v28)
              {
LABEL_23:
                objc_msgSend(v22, "makeKeyAndVisible");

                swift_unknownObjectRelease(v24);
                swift_unknownObjectRelease(v70);
                return;
              }
              v29 = v28;
              objc_msgSend(v29, "forceUpdateCallControllerForSOS");
              v30 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
              v31 = objc_msgSend(v30, "view");
              if (v31)
              {
                v32 = v31;
                v33 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
                sub_1001246A8((uint64_t)v33, "setBackgroundColor:");

                v34 = sub_1001246B4();
                if (v34)
                {
                  v35 = v34;
                  v36 = sub_10012469C();
                  if (v36)
                  {
                    v37 = v36;
                    sub_1001246A8((uint64_t)v36, "addSubview:");

                    v38 = sub_10012469C();
                    if (v38)
                    {
                      v39 = v38;
                      v40 = sub_1001246B4();
                      if (v40)
                      {
                        v41 = v40;
                        objc_msgSend(v40, "bounds");
                        v43 = v42;
                        v45 = v44;
                        v47 = v46;
                        v49 = v48;

                        objc_msgSend(v39, "setFrame:", v43, v45, v47, v49);
                        v50 = sub_10012469C();
                        if (v50)
                        {
                          v51 = v50;
                          objc_msgSend(v50, "setAutoresizingMask:", 18);

                          objc_msgSend(v30, "addChildViewController:", v29);
                          v52 = v30;
                          objc_msgSend(v29, "didMoveToParentViewController:", v52);
                          objc_msgSend(v22, "setRootViewController:", v52);

                          goto LABEL_23;
                        }
LABEL_30:
                        __break(1u);
                        return;
                      }
LABEL_29:
                      __break(1u);
                      goto LABEL_30;
                    }
LABEL_28:
                    __break(1u);
                    goto LABEL_29;
                  }
LABEL_27:
                  __break(1u);
                  goto LABEL_28;
                }
              }
              else
              {
                __break(1u);
              }
              __break(1u);
              goto LABEL_27;
            }
            swift_unknownObjectRelease(v24);
          }

        }
        v53 = v70;
      }
      else
      {
        v53 = v17;
      }
      swift_unknownObjectRelease(v53);
    }
  }
}

uint64_t sub_100124170(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_100124384(a1);
}

id sub_10012421C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  objc_super v6;

  v1 = OBJC_IVAR____TtC13InCallService22ClarityUISceneDelegate_window;
  v2 = type metadata accessor for SecureWindow();
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v4 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v3, "init");

  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for ClarityUISceneDelegate();
  return objc_msgSendSuper2(&v6, "init");
}

id sub_1001242BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClarityUISceneDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClarityUISceneDelegate()
{
  return objc_opt_self(_TtC13InCallService22ClarityUISceneDelegate);
}

uint64_t sub_100124320()
{
  return swift_initClassMetadata2();
}

BOOL sub_100124360()
{
  return AudioCallBackgroundGradientViewController._canShowWhileLocked()();
}

uint64_t sub_100124384(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *(_QWORD *)((swift_isaMask & *v1) + qword_1002D87F0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v9 - v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v9 - v5, a1, v3);
  v7 = UIHostingController.init(rootView:)(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v7;
}

void *sub_100124430(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_100124470(a1, a2);
}

void *sub_100124470(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  uint64_t v13;

  v5 = *(_QWORD *)((swift_isaMask & *v2) + qword_1002D87F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v13 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v13 - v7);
  v9 = (void *)UIHostingController.init(coder:rootView:)(a1, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11 = v9;
  v10(a2, v5);
  if (v9)

  return v9;
}

id sub_100124530(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for SecureHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + qword_1002D87F0), *(_QWORD *)((swift_isaMask & *v4) + qword_1002D87F0 + 8), a4);
  v9.receiver = v4;
  v9.super_class = v6;
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_1001245A4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return sub_100124530(v3, v4, v5, v6);
}

id sub_1001245C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for SecureHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + qword_1002D87F0), *(_QWORD *)((swift_isaMask & *v4) + qword_1002D87F0 + 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t type metadata accessor for SecureHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100124670(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SecureHostingController);
}

uint64_t sub_10012462C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1001085C0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100124670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

id sub_10012469C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1912));
}

id sub_1001246A8(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id sub_1001246B4()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1912));
}

id AmbientAvatarView.contact.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact);
  sub_100111F6C(v0 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact, (uint64_t)v3, 0);
  return *v1;
}

void AmbientAvatarView.contact.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact);
  sub_100111F6C(v1 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact, (uint64_t)v6, 1);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  sub_1001247D0(v4);

}

void sub_1001247D0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  char v21;
  id v22;
  uint64_t v23;
  id v24;
  NSString v25;
  unsigned int v26;
  NSString v27;
  unsigned int v28;
  id v29;
  _BOOL4 v30;
  id v31;
  id v32;
  uint64_t v33;
  _QWORD v34[3];
  void *v35;
  uint64_t v36;
  void *v37;
  char v38;
  uint64_t v39;
  _BYTE v40[24];

  v2 = v1;
  v4 = (id *)(v2 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact);
  swift_beginAccess(v2 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact, v40, 0, 0);
  v5 = objc_msgSend(*v4, "identifier");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = objc_msgSend(a1, "identifier");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  if (v6 == v10 && v8 == v12)
  {
    swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v10, v12, 0);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
    if ((v14 & 1) == 0)
    {
      v15 = *(id *)(v2 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView);
      dispatch thunk of _UIHostingView.rootView.getter(&v35);

      v17 = v35;
      v16 = v36;
      v18 = v37;
      v19 = v39;
      v20 = *v4;
      v21 = v38;
      v34[1] = v35;
      v34[2] = v36;
      v34[0] = v20;
      v22 = v20;
      v23 = sub_1001085C0(&qword_1002D8958);
      State.wrappedValue.setter(v34, v23);

      swift_release(v16);
      sub_1001250B8(v18, v21);
      swift_release(v19);
      return;
    }
  }
  v24 = *v4;
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v24, "isKeyAvailable:", v25);

  if (v26)
  {
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(a1, "isKeyAvailable:", v27);

    if (v28)
    {
      v29 = objc_msgSend(a1, "wallpaper");

      v30 = v29 == 0;
      v31 = objc_msgSend(*v4, "wallpaper");

      if (((v30 ^ (v31 != 0)) & 1) == 0)
      {
        objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView), "removeFromSuperview");
        sub_100124A7C((uint64_t)*v4, (uint64_t)&v35);
        v32 = objc_allocWithZone((Class)sub_1001085C0(&qword_1002D8918));
        v33 = _UIHostingView.init(rootView:)(&v35);
        sub_100124BD4(v33);
        sub_100124D1C();
      }
    }
  }
}

_QWORD *sub_100124A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = a1;
  sub_10010BBE8(0, (unint64_t *)&unk_1002D8380, CNContact_ptr);
  State.init(wrappedValue:)(&v11, &v9);
  v3 = v11;
  v4 = v12;
  v9 = 0;
  v10 = 0x80;
  result = State.init(wrappedValue:)(&v11, &v9);
  v6 = v11;
  v7 = v12;
  v8 = v13;
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  return result;
}

void (*AmbientAvatarView.contact.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact);
  sub_100111F6C(v1 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact, (uint64_t)v3, 0);
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  return sub_100124B84;
}

void sub_100124B84(void **a1, char a2)
{
  void *v2;
  id v3;
  id *v4;

  v2 = *a1;
  v4 = (id *)((char *)*a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    AmbientAvatarView.contact.setter(v3);

  }
  else
  {
    AmbientAvatarView.contact.setter(v3);
  }
  free(v2);
}

void sub_100124BD4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView) = a1;

}

void AmbientAvatarView.__allocating_init(contact:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  AmbientAvatarView.init(contact:)(a1);
  sub_100109438();
}

id AmbientAvatarView.init(contact:)(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  objc_super v9;
  _BYTE v10[40];

  v3 = v1;
  v4 = a1;
  sub_100124A7C((uint64_t)v4, (uint64_t)v10);
  v5 = objc_allocWithZone((Class)sub_1001085C0(&qword_1002D8918));
  *(_QWORD *)&v3[OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView] = _UIHostingView.init(rootView:)(v10);
  *(_QWORD *)&v3[OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact] = v4;
  v6 = v4;

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for AmbientAvatarView();
  v7 = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100124D1C();

  return v7;
}

uint64_t type metadata accessor for AmbientAvatarView()
{
  return objc_opt_self(_TtC13InCallService17AmbientAvatarView);
}

void sub_100124D1C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;

  v2 = v0;
  v3 = OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView;
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView]);
  objc_msgSend(*(id *)&v0[v3], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100241800;
  v6 = sub_10010E310(v5, "leadingAnchor");
  v7 = objc_msgSend((id)sub_10012813C(), "leadingAnchor");
  v8 = sub_1001280D0();
  sub_10012810C();

  *(_QWORD *)(v5 + 32) = v1;
  v10 = sub_10010E310(v9, "topAnchor");
  v11 = objc_msgSend((id)sub_10012813C(), "topAnchor");
  v12 = sub_1001280D0();
  sub_10012810C();

  *(_QWORD *)(v5 + 40) = v1;
  v14 = sub_10010E310(v13, "trailingAnchor");
  v15 = objc_msgSend((id)sub_10012813C(), "trailingAnchor");
  v16 = sub_1001280D0();
  sub_10012810C();

  *(_QWORD *)(v5 + 48) = v1;
  v18 = sub_10010E310(v17, "bottomAnchor");
  v19 = objc_msgSend((id)sub_10012813C(), "bottomAnchor");
  v20 = sub_1001280D0();
  sub_10012810C();

  *(_QWORD *)(v5 + 56) = v1;
  specialized Array._endMutation()(v21, v22);
  sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v2, "addConstraints:", isa);

}

void sub_100124F1C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/AmbientAvatarView.swift", 37, 2);
  __break(1u);
}

id AmbientAvatarView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

void AmbientAvatarView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.AmbientAvatarView", 31, "init(frame:)", 12, 0);
  __break(1u);
}

id AmbientAvatarView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AmbientAvatarView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100125070(id result, char a2)
{
  if ((a2 & 0x80) == 0)
    return result;
  return result;
}

double destroy for AmbientAvatar(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  sub_1001250B8(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 32)).n128_u64[0];
  return result;
}

void sub_1001250B8(id a1, char a2)
{
  if ((a2 & 0x80) == 0)

}

uint64_t initializeWithCopy for AmbientAvatar(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  id v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(void **)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = v4;
  swift_retain(v5);
  sub_100125070(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain(v9);
  return a1;
}

uint64_t assignWithCopy for AmbientAvatar(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_retain(v8);
  swift_release(v7);
  v9 = *(void **)(a2 + 16);
  v10 = *(_BYTE *)(a2 + 24);
  sub_100125070(v9, v10);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  v12 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v10;
  sub_1001250B8(v11, v12);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v14;
  swift_retain(v14);
  swift_release(v13);
  return a1;
}

uint64_t assignWithTake for AmbientAvatar(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1001250B8(v6, v7);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v8);
  return a1;
}

ValueMetadata *type metadata accessor for AmbientAvatar()
{
  return &type metadata for AmbientAvatar;
}

uint64_t sub_100125244(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100264D98, 1);
}

void sub_100125254(uint64_t a1, unint64_t a2, unsigned __int8 a3)
{
  id v6;
  id v7;

  if (!(a3 >> 6))
  {
    Hasher._combine(_:)(2uLL);
    v7 = (id)a2;
    NSObject.hash(into:)(a1);
    Hasher._combine(_:)(a3 & 1);
    goto LABEL_5;
  }
  if (a3 >> 6 == 1)
  {
    Hasher._combine(_:)(3uLL);
    v6 = (id)a2;
    NSObject.hash(into:)(a1);
LABEL_5:
    sub_1001250B8((id)a2, a3);
    return;
  }
  Hasher._combine(_:)((a2 | a3 ^ 0x80) != 0);
}

uint64_t sub_100125324(unint64_t a1, unsigned __int8 a2, void *a3, unsigned __int8 a4)
{
  char v8;
  char v10;
  char v11;
  int v12;

  if (!(a2 >> 6))
  {
    if (a4 < 0x40u)
    {
      sub_10010BBE8(0, (unint64_t *)&qword_1002D7E50, NSObject_ptr);
      sub_100125070((id)a1, a2);
      sub_100125070(a3, a4);
      v10 = static NSObject.== infix(_:_:)(a1, a3);
      sub_1001250B8(a3, a4);
      sub_1001250B8((id)a1, a2);
      v11 = ((a2 & 1) == 0) ^ a4;
      if ((v10 & 1) == 0)
        v11 = 0;
      return v11 & 1;
    }
    goto LABEL_20;
  }
  if (a2 >> 6 == 1)
  {
    if ((a4 & 0xC0) == 0x40)
    {
      sub_10010BBE8(0, (unint64_t *)&qword_1002D7E50, NSObject_ptr);
      sub_100125070((id)a1, a2);
      sub_100125070(a3, a4);
      v8 = static NSObject.== infix(_:_:)(a1, a3);
      sub_1001250B8(a3, a4);
      sub_1001250B8((id)a1, a2);
      return v8 & 1;
    }
    goto LABEL_20;
  }
  v12 = a4 & 0xC0;
  if (a1 | a2 ^ 0x80)
  {
    if (v12 != 128 || a3 != (void *)1)
      goto LABEL_20;
  }
  else if (v12 != 128 || a3)
  {
    goto LABEL_20;
  }
  if (a4 != 128)
  {
LABEL_20:
    v11 = 0;
    return v11 & 1;
  }
  v11 = 1;
  return v11 & 1;
}

Swift::Int sub_1001254A8(unint64_t a1, unsigned __int8 a2)
{
  id v4;
  id v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  if (a2 >> 6)
  {
    if (a2 >> 6 != 1)
    {
      Hasher._combine(_:)((a1 | a2 ^ 0x80) != 0);
      return Hasher._finalize()();
    }
    Hasher._combine(_:)(3uLL);
    v4 = (id)a1;
    NSObject.hash(into:)(v7);
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    v5 = (id)a1;
    NSObject.hash(into:)(v7);
    Hasher._combine(_:)(a2 & 1);
  }
  sub_1001250B8((id)a1, a2);
  return Hasher._finalize()();
}

Swift::Int sub_10012557C()
{
  uint64_t v0;

  return sub_1001254A8(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_100125588(uint64_t a1)
{
  uint64_t v1;

  sub_100125254(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

Swift::Int sub_100125594(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  _QWORD v7[9];

  v2 = *(_QWORD *)v1;
  v3 = *(unsigned __int8 *)(v1 + 8);
  Hasher.init(_seed:)(v7, a1);
  if (v3 >> 6)
  {
    if (v3 >> 6 != 1)
    {
      Hasher._combine(_:)((v2 | v3 ^ 0x80) != 0);
      return Hasher._finalize()();
    }
    Hasher._combine(_:)(3uLL);
    v4 = (id)v2;
    NSObject.hash(into:)(v7);
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    v5 = (id)v2;
    NSObject.hash(into:)(v7);
    Hasher._combine(_:)(v3 & 1);
  }
  sub_1001250B8((id)v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_100125660(uint64_t a1, uint64_t a2)
{
  return sub_100125324(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

void sub_100125678(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int16 v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  char *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  int v39;
  __int128 v40;
  void *v41;
  __int16 v42;
  unsigned __int8 v43;
  uint64_t v44;
  id v45[2];
  __int128 v46;
  _QWORD v47[2];

  v2 = v1;
  v4 = sub_1001085C0(&qword_1002D8950);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100125930(v1, (uint64_t)&v40);
  v37 = *((_QWORD *)&v40 + 1);
  v38 = (void *)v40;
  v34 = v41;
  v39 = v43;
  v12 = v42;
  v46 = *v1;
  v40 = *v1;
  v13 = sub_1001085C0(&qword_1002D8958);
  State.wrappedValue.getter(v13);
  v14 = v45[0];
  v15 = objc_msgSend(v45[0], "identifier");

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v32 = v11;
  static TaskPriority.userInitiated.getter(v19);
  v33 = (void *)v46;
  sub_100127D20((uint64_t)&v46 + 8, (uint64_t)v47, &qword_1002D8968);
  v40 = v2[1];
  v41 = (void *)*((_QWORD *)v2 + 4);
  sub_100126B58((uint64_t *)&v40, (uint64_t)v45);
  sub_100127D20((uint64_t)&v41, (uint64_t)&v44, &qword_1002D8970);
  v20 = swift_allocObject(&unk_100289730, 56, 7);
  v21 = v2[1];
  *(_OWORD *)(v20 + 16) = *v2;
  *(_OWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 48) = *((_QWORD *)v2 + 4);
  v22 = v35;
  v23 = v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v7[*(int *)(v4 + 36)], v11, v36);
  v24 = (uint64_t *)&v7[*(int *)(v4 + 40)];
  *v24 = v16;
  v24[1] = v18;
  v25 = v18;
  *(_QWORD *)v7 = &unk_1002D8978;
  *((_QWORD *)v7 + 1) = v20;
  v26 = sub_1001085C0(&qword_1002D8980);
  sub_100126BFC((uint64_t)v7, a1 + *(int *)(v26 + 36));
  v28 = v37;
  v27 = v38;
  *(_QWORD *)a1 = v38;
  *(_QWORD *)(a1 + 8) = v28;
  v29 = v33;
  v30 = v34;
  *(_QWORD *)(a1 + 16) = v34;
  *(_WORD *)(a1 + 24) = v12;
  LOBYTE(v4) = v39;
  *(_BYTE *)(a1 + 26) = v39;
  v31 = v29;
  sub_10011D0E8(v47);
  sub_100126C44((uint64_t)v45);
  sub_10011D0E8(&v44);
  swift_bridgeObjectRetain(v25);
  sub_100126C70(v27, v28, v30, v12, v4);
  sub_100126CF4((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v32, v23);
  swift_bridgeObjectRelease(v25);
  sub_100126D34(v27, v28, v30, v12, v4);
}

void sub_100125930(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  int v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  char v37;
  __int16 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  __int16 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  __int16 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int16 v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[24];
  __int16 v85;
  char v86;
  __int128 v87;
  uint64_t v88;
  __int16 v89;
  char v90;

  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = a1[1];
  v88 = *((_QWORD *)a1 + 4);
  v9 = sub_1001085C0(&qword_1002D8990);
  v10 = State.wrappedValue.getter(v9);
  v11 = *(void **)v84;
  v12 = v84[8];
  v13 = v84[8] >> 6;
  if (v13)
  {
    if (v13 == 1)
    {
      v14 = (void *)objc_opt_self(UIColor);
      v15 = v11;
      v16 = objc_msgSend(v14, "clearColor");
      *(_OWORD *)v84 = (unint64_t)v11;
      *(_QWORD *)&v84[16] = v16;
      v85 = 0;
      v86 = 1;
      v17 = v16;
      v18 = sub_1001085C0(&qword_1002D8998);
      sub_10012759C();
      v20 = v19;
      v21 = sub_1001276F4();
      v22 = v18;
      v23 = v20;
LABEL_21:
      _ConditionalContent<>.init(storage:)(&v87, v84, v22, &type metadata for CircledImageView, v23, v21);
      sub_1001250B8(v11, v12);
LABEL_26:

      goto LABEL_27;
    }
    if (*(_QWORD *)v84 | v84[8] ^ 0x80)
    {
      v87 = *a1;
      v66 = sub_1001085C0(&qword_1002D8958);
      State.wrappedValue.getter(v66);
      v67 = *(void **)v84;
      v84[8] = 1;
      v68 = sub_10012762C();
      v17 = v67;
      _ConditionalContent<>.init(storage:)(&v87, v84, &type metadata for Color, &type metadata for ContactAvatarView, &protocol witness table for Color, v68);
      *(_QWORD *)v84 = v87;
      *(_QWORD *)&v84[8] = BYTE8(v87);
      *(_QWORD *)&v84[16] = 0;
      v85 = 0;
      v69 = sub_1001085C0(&qword_1002D89B0);
      v70 = sub_1001085C0(&qword_1002D89C8);
      v71 = sub_1001275C0();
      v72 = sub_100127668();
      _ConditionalContent<>.init(storage:)(&v87, v84, v69, v70, v71, v72);
      if (HIBYTE(v89))
        v73 = 256;
      else
        v73 = 0;
      *(_OWORD *)v84 = v87;
      *(_QWORD *)&v84[16] = v88;
      v85 = v73 | v89;
      v86 = 0;
      v74 = sub_1001085C0(&qword_1002D8998);
      sub_10012759C();
      v76 = v75;
      v77 = sub_1001276F4();
      _ConditionalContent<>.init(storage:)(&v87, v84, v74, &type metadata for CircledImageView, v76, v77);
      goto LABEL_26;
    }
    v42 = static Color.clear.getter(v10);
    *(_QWORD *)v84 = v42;
    v84[8] = 0;
    v43 = sub_10012762C();
    swift_retain(v42);
    _ConditionalContent<>.init(storage:)(&v87, v84, &type metadata for Color, &type metadata for ContactAvatarView, &protocol witness table for Color, v43);
    *(_QWORD *)v84 = v87;
    *(_QWORD *)&v84[8] = BYTE8(v87);
    *(_QWORD *)&v84[16] = 0;
    v85 = 0;
    v44 = sub_1001085C0(&qword_1002D89B0);
    v45 = sub_1001085C0(&qword_1002D89C8);
    v46 = sub_1001275C0();
    v47 = sub_100127668();
    _ConditionalContent<>.init(storage:)(&v87, v84, v44, v45, v46, v47);
    if (HIBYTE(v89))
      v48 = 256;
    else
      v48 = 0;
    *(_OWORD *)v84 = v87;
    *(_QWORD *)&v84[16] = v88;
    v85 = v48 | v89;
    v86 = 0;
    v49 = sub_1001085C0(&qword_1002D8998);
    sub_10012759C();
    v51 = v50;
    v52 = sub_1001276F4();
    _ConditionalContent<>.init(storage:)(&v87, v84, v49, &type metadata for CircledImageView, v51, v52);
    v41 = v42;
  }
  else
  {
    if ((v84[8] & 1) != 0)
    {
      v53 = sub_1001260C4();
      v54 = objc_msgSend(v53, "backgroundColor");

      if (!v54)
      {
        v55 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
        v54 = objc_msgSend(v55, "colorWithAlphaComponent:", 0.1);

      }
      *(_QWORD *)v84 = v11;
      *(_QWORD *)&v84[8] = 1;
      *(_QWORD *)&v84[16] = v54;
      LOBYTE(v85) = 0;
      sub_100125070(v11, v12);
      v17 = v54;
      v56 = sub_1001085C0(&qword_1002D89E0);
      v57 = sub_1001276F4();
      sub_100127E54((uint64_t)&unk_1002D89D8);
      _ConditionalContent<>.init(storage:)(&v87, v84, &type metadata for CircledImageView, v56, v57, v58);
      *(_OWORD *)v84 = v87;
      *(_QWORD *)&v84[16] = v88;
      LOBYTE(v85) = v89;
      HIBYTE(v85) = 1;
      v59 = sub_1001085C0(&qword_1002D89B0);
      v60 = sub_1001085C0(&qword_1002D89C8);
      v61 = sub_1001275C0();
      v62 = sub_100127668();
      _ConditionalContent<>.init(storage:)(&v87, v84, v59, v60, v61, v62);
      if (HIBYTE(v89))
        v63 = 256;
      else
        v63 = 0;
      *(_OWORD *)v84 = v87;
      *(_QWORD *)&v84[16] = v88;
      v85 = v63 | v89;
      v86 = 0;
      v64 = sub_1001085C0(&qword_1002D8998);
      sub_10012759C();
      v23 = v65;
      v22 = v64;
      v21 = v57;
      goto LABEL_21;
    }
    v24 = Image.init(uiImage:)(*(id *)v84);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v4);
    v25 = Image.resizable(capInsets:resizingMode:)(v8, v24, 0.0, 0.0, 0.0, 0.0);
    v26 = swift_release(v24);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v26);
    v83 = v25;
    *(_QWORD *)v84 = v25;
    *(_OWORD *)&v84[8] = xmmword_100241C30;
    LOBYTE(v85) = 1;
    swift_retain(v25);
    v27 = sub_1001085C0(&qword_1002D89E0);
    v28 = sub_1001276F4();
    sub_100127E54((uint64_t)&unk_1002D89D8);
    _ConditionalContent<>.init(storage:)(&v87, v84, &type metadata for CircledImageView, v27, v28, v29);
    *(_OWORD *)v84 = v87;
    *(_QWORD *)&v84[16] = v88;
    LOBYTE(v85) = v89;
    HIBYTE(v85) = 1;
    v30 = sub_1001085C0(&qword_1002D89B0);
    v31 = sub_1001085C0(&qword_1002D89C8);
    v32 = sub_1001275C0();
    v33 = sub_100127668();
    _ConditionalContent<>.init(storage:)(&v87, v84, v30, v31, v32, v33);
    v34 = v87;
    v35 = v88;
    v36 = HIBYTE(v89);
    v37 = v89;
    if (HIBYTE(v89))
      v38 = 256;
    else
      v38 = 0;
    *(_OWORD *)v84 = v87;
    *(_QWORD *)&v84[16] = v88;
    v85 = v38 | v89;
    v86 = 0;
    sub_100126D80(v87, *((uint64_t *)&v87 + 1), v88, v89, SHIBYTE(v89), (uint64_t (*)(uint64_t, uint64_t))sub_100126CBC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_100126CC8);
    v39 = sub_1001085C0(&qword_1002D8998);
    sub_10012759C();
    _ConditionalContent<>.init(storage:)(&v87, v84, v39, &type metadata for CircledImageView, v40, v28);
    sub_1001250B8(v11, v12);
    sub_100126D80(v34, *((uint64_t *)&v34 + 1), v35, v37, v36, (uint64_t (*)(uint64_t, uint64_t))sub_100126D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_100126DA0);
    v41 = v83;
  }
  swift_release(v41);
LABEL_27:
  v78 = *((_QWORD *)&v87 + 1);
  v79 = v88;
  v80 = v89;
  v81 = v90;
  *(_QWORD *)a2 = v87;
  *(_QWORD *)(a2 + 8) = v78;
  *(_QWORD *)(a2 + 16) = v79;
  *(_WORD *)(a2 + 24) = v80;
  *(_BYTE *)(a2 + 26) = v81;
}

id sub_1001260C4()
{
  __int128 *v0;
  uint64_t v1;
  NSString v2;
  unsigned int v3;
  id v4;
  __int128 v6;
  __int128 v7;
  id v8;

  v6 = *v0;
  v1 = sub_1001085C0(&qword_1002D8958);
  State.wrappedValue.getter(v1);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v8, "isKeyAvailable:", v2, v6);

  if (!v3)
    return 0;
  v7 = *v0;
  State.wrappedValue.getter(v1);
  v4 = objc_msgSend(v8, "wallpaper", v7);

  return v4;
}

uint64_t sub_1001261AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[7] = a1;
  v2 = type metadata accessor for Date(0);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[10] = swift_task_alloc(v4);
  v1[11] = swift_task_alloc(v4);
  v5 = type metadata accessor for MainActor(0);
  v1[12] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v1[13] = v6;
  v1[14] = v7;
  return swift_task_switch(sub_100126250, v6, v7);
}

uint64_t sub_100126250(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;

  static Date.now.getter(a1);
  v2 = (_QWORD *)swift_task_alloc(dword_1002D898C);
  *(_QWORD *)(v1 + 120) = v2;
  *v2 = v1;
  v2[1] = sub_1001262A0;
  return sub_10012647C();
}

uint64_t sub_1001262A0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 120);
  *(_QWORD *)(v3 + 128) = a1;
  *(_BYTE *)(v3 + 49) = a2;
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1001262FC, *(_QWORD *)(v3 + 104), *(_QWORD *)(v3 + 112));
}

uint64_t sub_1001262FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  double v6;
  void (*v7)(uint64_t, uint64_t);
  __n128 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = swift_release(*(_QWORD *)(v0 + 96));
  static Date.now.getter(v5);
  v6 = Date.timeIntervalSince(_:)(v1);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v2, v4);
  if (v6 <= 0.05)
  {
    v16 = *(_QWORD *)(v0 + 56);
    v17 = *(_QWORD *)(v16 + 32);
    v18 = *(_OWORD *)(v16 + 16);
    *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 128);
    v19 = *(_BYTE *)(v0 + 49);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 16) = v18;
    *(_QWORD *)(v0 + 32) = v17;
    *(_BYTE *)(v0 + 48) = v19;
    v22 = sub_1001085C0(&qword_1002D8990);
    State.wrappedValue.setter(v0 + 40, v22);
    v7(v20, v21);
  }
  else
  {
    v9 = *(void **)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 56);
    v12 = *(_QWORD *)(v0 + 64);
    v13 = *(_BYTE *)(v0 + 49);
    v8.n128_u64[0] = 0x3FE6666666666666;
    v14 = sub_100126860(v8, 0.0);
    v15 = swift_task_alloc(48);
    *(_QWORD *)(v15 + 16) = v11;
    *(_QWORD *)(v15 + 24) = v9;
    *(_BYTE *)(v15 + 32) = v13;
    withAnimation<A>(_:_:)(v14, sub_100126DCC, v15, (char *)&type metadata for () + 8);
    swift_release(v14);
    swift_task_dealloc(v15);
    v7(v10, v12);
    sub_1001250B8(v9, v13);
  }
  v23 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10012647C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[5] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[7] = v3;
  v1[8] = v4;
  return swift_task_switch(sub_1001264E8, v3, v4);
}

uint64_t sub_1001264E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __n128 v5;

  if ((sub_100126920() & 1) != 0)
  {
    if (qword_1002D72F0 != -1)
      swift_once(&qword_1002D72F0, sub_10014ADDC);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)*(_QWORD *)(v0 + 40);
    v1 = sub_1001085C0(&qword_1002D8958);
    State.wrappedValue.getter(v1);
    v2 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 72) = v2;
    v3 = (_QWORD *)swift_task_alloc(dword_1002D93EC);
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_1001265D8;
    return PosterSnapshotService.takeSnapshot(contact:)(v2);
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 8))(1, 128, v5);
  }
}

uint64_t sub_1001265D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v4 = *(void **)(*v1 + 72);
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = a1;
  swift_task_dealloc(v3);

  return swift_task_switch(sub_100126634, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_100126634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  void *v19;
  id v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double Width;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  CGRect v40;
  CGRect v41;

  v2 = *(_QWORD *)(v0 + 88);
  v3 = swift_release(*(_QWORD *)(v0 + 48));
  if (!v2)
    goto LABEL_15;
  v4 = *(void **)(v0 + 88);
  v5 = sub_1001260C4();
  v6 = objc_msgSend(v5, "type");

  if (!v6)
  {
LABEL_8:
    v10 = sub_1001260C4();
    v11 = objc_msgSend(v10, "type");

    if (v11)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v12 = sub_100128114();
      if (v1 == v12 && v10 == (id)v13)
      {
        sub_100128124();

      }
      else
      {
        sub_1001280E0(v12, v13);
        sub_100128154();
        swift_bridgeObjectRelease(v10);

        if ((v1 & 1) == 0)
          goto LABEL_14;
      }
      v16 = *(_QWORD *)(v0 + 88);
      v15 = 64;
      return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v16, v15, v3);
    }
LABEL_14:

LABEL_15:
    v15 = 128;
    v16 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v16, v15, v3);
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v7 = sub_100128114();
  if (v1 == v7 && v5 == (id)v8)
  {
    sub_100128124();

  }
  else
  {
    sub_1001280E0(v7, v8);
    sub_100128154();
    swift_bridgeObjectRelease(v5);

    if ((v1 & 1) == 0)
      goto LABEL_8;
  }
  objc_msgSend(v4, "size");
  v18 = v17;
  v19 = (void *)objc_opt_self(UIScreen);
  v20 = objc_msgSend(v19, "mainScreen");
  objc_msgSend(v20, "bounds");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;

  v40.origin.x = v22;
  v40.origin.y = v24;
  v40.size.width = v26;
  v40.size.height = v28;
  Width = CGRectGetWidth(v40);
  v30 = objc_msgSend(v19, "mainScreen");
  objc_msgSend(v30, "bounds");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v41.origin.x = v32;
  v41.origin.y = v34;
  v41.size.width = v36;
  v41.size.height = v38;
  v3.n128_f64[0] = CGRectGetHeight(v41);
  if (v3.n128_f64[0] >= Width)
    v3.n128_f64[0] = Width;
  v15 = v18 == v3.n128_f64[0];
  v16 = *(_QWORD *)(v0 + 88);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v16, v15, v3);
}

uint64_t sub_100126860(__n128 a1, double a2)
{
  double v2;

  if (a2 <= -1.0)
  {
    v2 = INFINITY;
  }
  else if (a2 >= 0.0)
  {
    v2 = 1.0;
    if (a2 != 0.0)
    {
      v2 = 1.0 - a2;
      if (a2 > 1.0)
        v2 = 0.0;
    }
  }
  else
  {
    v2 = 1.0 / (a2 + 1.0);
  }
  return static Animation.spring(response:dampingFraction:blendDuration:)(a1, v2, 0.0);
}

uint64_t sub_1001268B8(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  void *v5;
  char v6;
  __int128 v7;
  uint64_t v8;

  v7 = *(_OWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  v5 = a2;
  v6 = a3;
  sub_100125070(a2, a3);
  v3 = sub_1001085C0(&qword_1002D8990);
  return State.wrappedValue.setter(&v5, v3);
}

uint64_t sub_100126920()
{
  id v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  id v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v20;

  v0 = sub_1001260C4();
  v1 = objc_msgSend(v0, "type");

  if (!v1)
    goto LABEL_8;
  v2 = (void *)CNWallpaperTypeMemoji;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v12 = 1;
    v18 = v5;
    goto LABEL_17;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  v11 = v2;

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) == 0)
  {
LABEL_8:
    v13 = sub_1001260C4();
    v1 = objc_msgSend(v13, "type");

    if (!v1)
    {
      v12 = 0;
      return v12 & 1;
    }
    v2 = (void *)CNWallpaperTypeMonogram;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v15;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v18 = v17;
    if (v14 == v16 && v5 == v17)
      v12 = 1;
    else
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v5, v16, v17, 0);
LABEL_17:
    v20 = v2;

    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v18);
    return v12 & 1;
  }
  v12 = 1;
  return v12 & 1;
}

BOOL sub_100126AA8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_100126AB8(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int sub_100126ADC(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

void sub_100126B20(uint64_t a1@<X8>)
{
  sub_100125678(a1);
}

uint64_t sub_100126B58(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

uint64_t sub_100126B70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_1001250B8(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100126BB0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1002D8964);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10010AC94;
  return sub_1001261AC(v0 + 16);
}

uint64_t sub_100126BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0(&qword_1002D8950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100126C44(uint64_t a1)
{
  sub_100125070(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

id sub_100126C70(void *a1, uint64_t a2, void *a3, __int16 a4, char a5)
{
  id v5;

  if ((a5 & 1) == 0)
    return (id)sub_100126D80((uint64_t)a1, a2, (uint64_t)a3, a4, HIBYTE(a4) & 1, (uint64_t (*)(uint64_t, uint64_t))sub_100126CBC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_100126CC8);
  v5 = a1;
  return a3;
}

id sub_100126CBC(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain(a1);
}

id sub_100126CC8(void *a1, uint64_t a2, void *a3, char a4)
{
  id v5;

  if ((a4 & 1) != 0)
    return (id)swift_retain(a1);
  v5 = a1;
  return a3;
}

uint64_t sub_100126CF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001085C0(&qword_1002D8950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100126D34(void *a1, uint64_t a2, void *a3, __int16 a4, char a5)
{
  if ((a5 & 1) != 0)
  {

  }
  else
  {
    sub_100126D80((uint64_t)a1, a2, (uint64_t)a3, a4, HIBYTE(a4) & 1, (uint64_t (*)(uint64_t, uint64_t))sub_100126D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_100126DA0);
  }
}

uint64_t sub_100126D80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  if ((a5 & 1) != 0)
    return a7(a1, a2, a3, a4 & 1);
  else
    return a6(a1, a2 & 1);
}

void sub_100126D94(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release(a1);
}

void sub_100126DA0(void *a1, uint64_t a2, void *a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    swift_release(a1);
  }
  else
  {

  }
}

uint64_t sub_100126DCC()
{
  uint64_t v0;

  return sub_1001268B8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

BOOL sub_100126DE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100126AA8(*a1, *a2);
}

Swift::Int sub_100126DF4()
{
  char *v0;

  return sub_100126ADC(*v0);
}

void sub_100126DFC(uint64_t a1)
{
  char *v1;

  sub_100126AB8(a1, *v1);
}

Swift::Int sub_100126E04(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_100126E44(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;

  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v8 = a1;
    v9 = Image.init(uiImage:)();
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    v10 = Image.resizable(capInsets:resizingMode:)(v7, v9, 0.0, 0.0, 0.0, 0.0);
    swift_release(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v12 = v10;
    v13 = 0;
    swift_retain(v10);
    _ConditionalContent<>.init(storage:)(&v14, &v12, &type metadata for Image, &type metadata for EmptyView, &protocol witness table for Image, &protocol witness table for EmptyView);
    swift_release(v10);

  }
  else
  {
    v12 = 0;
    v13 = 1;
    _ConditionalContent<>.init(storage:)(&v14, &v12, &type metadata for Image, &type metadata for EmptyView, &protocol witness table for Image, &protocol witness table for EmptyView);
  }
  v11 = v15;
  *(_QWORD *)a2 = v14;
  *(_BYTE *)(a2 + 8) = v11;
}

id sub_100126FBC@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X2>, double (**a4)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  char v6;
  uint64_t v7;
  id v8;

  v6 = a2 & 1;
  v7 = swift_allocObject(&unk_100289898, 40, 7);
  *(_QWORD *)(v7 + 16) = a1;
  *(_BYTE *)(v7 + 24) = v6;
  *(_QWORD *)(v7 + 32) = a3;
  *a4 = sub_100127D04;
  a4[1] = (double (*)@<D0>(uint64_t@<X8>))v7;
  v8 = a1;
  return a3;
}

double sub_10012702C@<D0>(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, uint64_t a4@<X8>)
{
  char v7;
  double v8;
  double v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  double result;
  uint64_t v26;
  uint64_t v28;
  _BYTE v29[192];
  _QWORD __src[26];
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  v7 = a2 & 1;
  v8 = ((double (*)(void))GeometryProxy.size.getter)();
  GeometryProxy.size.getter();
  if (v9 < v8)
    v8 = v9;
  v10 = a3;
  v28 = Color.init(uiColor:)();
  v11 = ((uint64_t (*)(void))static Alignment.center.getter)();
  v13 = _FrameLayout.init(width:height:alignment:)(&v33, *(_QWORD *)&v8, 0, *(_QWORD *)&v8, 0, v11, v12);
  v14 = v33;
  v15 = v34;
  v16 = v35;
  v17 = v36;
  v18 = v37;
  v26 = v38;
  if ((a2 & 1) != 0)
    v19 = static Alignment.top.getter(v13);
  else
    v19 = static Alignment.center.getter(v13);
  v21 = v19;
  v22 = v20;
  sub_1001271BC(a1, v7, (uint64_t)__src, COERCE__INT64(v8 * 0.5 * 1.41421356), v8);
  sub_100127D20((uint64_t)__src, (uint64_t)v29, &qword_1002D8A28);
  sub_100127D20((uint64_t)v29, (uint64_t)__src, &qword_1002D8A28);
  __src[24] = v21;
  __src[25] = v22;
  v32 = v15;
  v31 = v17;
  memcpy((void *)(a4 + 80), __src, 0xD0uLL);
  v23 = v32;
  v24 = v31;
  *(_QWORD *)a4 = v28;
  result = 2.0;
  *(_OWORD *)(a4 + 8) = xmmword_100241C40;
  *(_QWORD *)(a4 + 24) = 0x3FC3333333333333;
  *(_QWORD *)(a4 + 32) = v14;
  *(_BYTE *)(a4 + 40) = v23;
  *(_QWORD *)(a4 + 48) = v16;
  *(_BYTE *)(a4 + 56) = v24;
  *(_QWORD *)(a4 + 64) = v18;
  *(_QWORD *)(a4 + 72) = v26;
  *(_WORD *)(a4 + 288) = 256;
  return result;
}

void sub_1001271BC(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, uint64_t a4@<D0>, double a5@<D1>)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE __src[144];
  _QWORD __dst[18];
  char v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _BYTE v39[192];
  _QWORD v40[24];

  if ((a2 & 1) != 0)
  {
    sub_100126E44(a1, (uint64_t)v40);
    __dst[0] = v40[0];
    LOBYTE(__dst[1]) = v40[1];
    __dst[2] = 0;
    LOWORD(__dst[3]) = 257;
    LOBYTE(__dst[4]) = static Edge.Set.top.getter();
    __dst[5] = EdgeInsets.init(_all:)((a5 - *(double *)&a4) / 3.0);
    __dst[6] = v20;
    __dst[7] = v21;
    __dst[8] = v22;
    LOBYTE(__dst[9]) = 0;
    sub_100127D14((uint64_t)__dst);
  }
  else
  {
    sub_100126E44(a1, (uint64_t)v40);
    v8 = v40[0];
    v9 = v40[1];
    v10 = static Alignment.center.getter();
    LOBYTE(v40[0]) = v9;
    v39[0] = 1;
    LOBYTE(v30) = 0;
    LOBYTE(v29) = 1;
    sub_10014CD78(0, (uint64_t)__src, 0, v29, a4, v30, v10, v11, v8, v9, 0, 1);
    v12 = sub_100127E9C(v8, v9);
    LOBYTE(v8) = static Edge.Set.all.getter(v12);
    v13 = EdgeInsets.init(_all:)(a5 * 0.05);
    v15 = v14;
    v17 = v16;
    v19 = v18;
    memcpy(__dst, __src, sizeof(__dst));
    v33 = v8;
    v34 = v13;
    v35 = v15;
    v36 = v17;
    v37 = v19;
    v38 = 0;
    sub_100127EA8((uint64_t)__dst);
  }
  sub_100127D20((uint64_t)__dst, (uint64_t)v39, &qword_1002D8A30);
  v23 = sub_1001085C0(&qword_1002D8A38);
  v24 = sub_1001085C0(&qword_1002D8A40);
  sub_100127D84((uint64_t)&unk_1002D8A48);
  v26 = v25;
  sub_100127D84((uint64_t)&unk_1002D8A80);
  _ConditionalContent<>.init(storage:)(v40, v39, v23, v24, v26, v27);
  memcpy(v39, v40, 0xBAuLL);
  FactoryOutcome.rawValue.getter(v39, v28);
  sub_100127D20((uint64_t)v39, (uint64_t)v40, &qword_1002D8A28);
  sub_100127D20((uint64_t)v40, a3, &qword_1002D8A28);
}

id sub_100127428@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v1;

  return sub_100126FBC(*(void **)v1, *(_BYTE *)(v1 + 8), *(void **)(v1 + 16), a1);
}

id sub_100127438(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(objc_allocWithZone((Class)CNAvatarView), "initWithContact:", a2);
}

id sub_10012746C(void *a1)
{
  return objc_msgSend(a1, "setContact:");
}

id sub_100127478(uint64_t a1)
{
  uint64_t *v1;

  return sub_100127438(a1, *v1);
}

id sub_100127480(void *a1)
{
  return sub_10012746C(a1);
}

uint64_t sub_100127498(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

uint64_t sub_1001274D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100127C9C();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100127528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100127C9C();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100127578(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100127C9C();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_10012759C()
{
  sub_100127BFC((uint64_t)&unk_1002D89A0);
}

unint64_t sub_1001275C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D89A8;
  if (!qword_1002D89A8)
  {
    v1 = sub_10010AD84(&qword_1002D89B0);
    sub_10012762C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D89A8);
  }
  return result;
}

unint64_t sub_10012762C()
{
  unint64_t result;

  result = qword_1002D89B8;
  if (!qword_1002D89B8)
  {
    result = swift_getWitnessTable(&unk_100241E64, &type metadata for ContactAvatarView);
    atomic_store(result, (unint64_t *)&qword_1002D89B8);
  }
  return result;
}

unint64_t sub_100127668()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D89C0;
  if (!qword_1002D89C0)
  {
    v1 = sub_10010AD84(&qword_1002D89C8);
    sub_1001276F4();
    sub_100127E54((uint64_t)&unk_1002D89D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D89C0);
  }
  return result;
}

unint64_t sub_1001276F4()
{
  unint64_t result;

  result = qword_1002D89D0;
  if (!qword_1002D89D0)
  {
    result = swift_getWitnessTable(&unk_100241E14, &type metadata for CircledImageView);
    atomic_store(result, (unint64_t *)&qword_1002D89D0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CircledImageView(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for CircledImageView(id *a1)
{

}

uint64_t assignWithCopy for CircledImageView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  return a1;
}

__n128 initializeWithTake for CircledImageView(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CircledImageView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for CircledImageView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CircledImageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircledImageView()
{
  return &type metadata for CircledImageView;
}

ValueMetadata *type metadata accessor for ContactAvatarView()
{
  return &type metadata for ContactAvatarView;
}

uint64_t initializeBufferWithCopyOfBuffer for AmbientAvatar.Avatar(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100125070(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for AmbientAvatar.Avatar(uint64_t a1)
{
  sub_1001250B8(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for AmbientAvatar.Avatar(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100125070(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1001250B8(v5, v6);
  return a1;
}

uint64_t initializeWithTake for AmbientAvatar.Avatar(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for AmbientAvatar.Avatar(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1001250B8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AmbientAvatar.Avatar(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AmbientAvatar.Avatar(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_100127A88(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_100127AA8(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_100127AB8(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 2)
  {
    v2 = *(_BYTE *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    v2 = 0x80;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for AmbientAvatar.Avatar()
{
  return &type metadata for AmbientAvatar.Avatar;
}

unint64_t sub_100127AF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D89E8;
  if (!qword_1002D89E8)
  {
    v1 = sub_10010AD84(&qword_1002D8980);
    sub_100127B78();
    sub_100128050((uint64_t)&unk_1002D8A10);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D89E8);
  }
  return result;
}

unint64_t sub_100127B78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D89F0;
  if (!qword_1002D89F0)
  {
    v1 = sub_10010AD84(&qword_1002D89F8);
    sub_100127BFC((uint64_t)&unk_1002D8A00);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D89F0);
  }
  return result;
}

void sub_100127BFC(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  void (*v3)(void);
  uint64_t *v4;

  if (!sub_100128130(a1))
  {
    sub_1001280FC(0, v4);
    v3();
    v2();
    atomic_store(sub_100128148((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>), v1);
  }
  sub_10011AEDC();
}

unint64_t sub_100127C4C()
{
  unint64_t result;

  result = qword_1002D8A18;
  if (!qword_1002D8A18)
  {
    result = swift_getWitnessTable(&unk_100241D1C, &type metadata for AmbientAvatar.Avatar);
    atomic_store(result, (unint64_t *)&qword_1002D8A18);
  }
  return result;
}

uint64_t sub_100127C8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100264DDC, 1);
}

unint64_t sub_100127C9C()
{
  unint64_t result;

  result = qword_1002D8A20;
  if (!qword_1002D8A20)
  {
    result = swift_getWitnessTable(&unk_100241D84, &type metadata for ContactAvatarView);
    atomic_store(result, (unint64_t *)&qword_1002D8A20);
  }
  return result;
}

uint64_t sub_100127CD8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

double sub_100127D04@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10012702C(*(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_100127D14(uint64_t result)
{
  *(_BYTE *)(result + 185) = 1;
  return result;
}

void sub_100127D20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1001085C0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  sub_100109438();
}

void sub_100127D60()
{
  sub_100127D84((uint64_t)&unk_1002D8A50);
}

void sub_100127D84(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  uint64_t *v3;

  if (!sub_100128130(a1))
  {
    sub_1001280FC(0, v3);
    v2();
    atomic_store(sub_100128148((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>), v1);
  }
  sub_10011AEDC();
}

unint64_t sub_100127DC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8A60;
  if (!qword_1002D8A60)
  {
    v1 = sub_10010AD84(&qword_1002D8A68);
    sub_100127E54((uint64_t)&unk_1002D8A70);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D8A60);
  }
  return result;
}

void sub_100127E54(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  if (!sub_100128130(a1))
  {
    v4 = sub_1001280FC(0, v3);
    atomic_store(swift_getWitnessTable(v2, v4), v1);
  }
  sub_10011AEDC();
}

uint64_t sub_100127E9C(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_100127EA8(uint64_t result)
{
  *(_BYTE *)(result + 185) = 0;
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for CircledImageView.ContentMode(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CircledImageView.ContentMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CircledImageView.ContentMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100127F90 + 4 * byte_100241C65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100127FC4 + 4 * byte_100241C60[v4]))();
}

uint64_t sub_100127FC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100127FCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100127FD4);
  return result;
}

uint64_t sub_100127FE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100127FE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100127FEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100127FF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100128000(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100128008(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CircledImageView.ContentMode()
{
  return &type metadata for CircledImageView.ContentMode;
}

void sub_100128024()
{
  sub_100128050((uint64_t)&unk_1002D8A88);
}

void sub_100128050(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!sub_100128130(a1))
  {
    v4 = v3;
    v5 = sub_10010AD84(v2);
    atomic_store(swift_getWitnessTable(v4, v5), v1);
  }
  sub_100109438();
}

unint64_t sub_10012808C()
{
  unint64_t result;

  result = qword_1002D8A98;
  if (!qword_1002D8A98)
  {
    result = swift_getWitnessTable(&unk_100241F00, &type metadata for CircledImageView.ContentMode);
    atomic_store(result, (unint64_t *)&qword_1002D8A98);
  }
  return result;
}

id sub_1001280D0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2128), v1);
}

uint64_t sub_1001280E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, a1, a2, 0);
}

uint64_t sub_1001280FC(uint64_t a1, uint64_t *a2)
{
  return sub_10010AD84(a2);
}

void sub_10012810C()
{
  void *v0;

}

uint64_t sub_100128114()
{
  uint64_t v0;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_100128124()
{
  uint64_t v0;

  return swift_bridgeObjectRelease_n(v0, 2);
}

uint64_t sub_100128130(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_10012813C()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + v1);
}

uint64_t sub_100128148(uint64_t a1)
{
  uint64_t v1;

  return swift_getWitnessTable(a1, v1);
}

uint64_t sub_100128154()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

void sub_100128160()
{
  qword_1002E2DB0 = 0x402E000000000000;
}

void sub_100128170()
{
  qword_1002E2DB8 = 0;
}

void sub_10012817C()
{
  qword_1002E2DC0 = 0x4024000000000000;
}

void sub_10012818C()
{
  qword_1002E2DC8 = 0x4024000000000000;
}

void sub_10012819C(char a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD *v15;
  int v16;
  char *v17;
  uint64_t v18;

  v2 = OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls;
  if (v1[OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls] != (a1 & 1))
  {
    v3 = v1;
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v4 = type metadata accessor for Logger(0);
    sub_100108664(v4, (uint64_t)&unk_1002E2CC8);
    v5 = v1;
    v7 = Logger.logObject.getter(v5, v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc(18, -1);
      v15 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v9 = 138412546;
      v17 = v5;
      v10 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v9 + 4, v9 + 12);
      *v15 = v5;

      *(_WORD *)(v9 + 12) = 1024;
      v11 = v3[v2];

      v16 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v9 + 14, v9 + 18);

      _os_log_impl((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: shouldHideControls for %@: %{BOOL}d", (uint8_t *)v9, 0x12u);
      v12 = sub_1001085C0(&qword_1002D7880);
      swift_arrayDestroy(v15, 1, v12);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

    }
    v13 = *(void **)&v5[OBJC_IVAR___EmergencyWebRTCViewController_currentState];
    if (v13)
    {
      v14 = v13;
      sub_1001283AC((uint64_t)v14);

    }
  }
}

id sub_1001283AC(uint64_t a1)
{
  uint64_t v1;
  _BOOL4 v3;
  void *Strong;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;

  if ((*(_BYTE *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls) & 1) != 0)
  {
    v3 = 1;
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___EmergencyWebRTCViewController_delegate);
    if (Strong)
    {
      v5 = Strong;
      v6 = objc_msgSend(Strong, "getRTTState");
      swift_unknownObjectRelease(v5);
      v3 = v6 == (id)4;
    }
    else
    {
      v3 = 0;
    }
  }
  sub_100128614();
  v8 = v7;
  v9 = 0.0;
  if (v3)
    v10 = 0.0;
  else
    v10 = 1.0;
  objc_msgSend(v7, "setAlpha:", v10);

  sub_100128600();
  v12 = v11;
  objc_msgSend(v11, "setAlpha:", v10);

  sub_100128628();
  v14 = v13;
  v15 = 0.0;
  if (!v3 && *(_BYTE *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_showWebRTCQualityLabel))
    v15 = 1.0;
  objc_msgSend(v13, "setAlpha:", v15);

  if (!v3)
  {
    if (*(_QWORD *)(a1 + direct field offset for SOSUIWebRTCState.cameraFacing))
      v9 = 1.0;
    else
      v9 = 0.0;
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_flashButton), "setAlpha:", v9);
  v16 = 0.0;
  v17 = 0.0;
  if (!v3)
  {
    v17 = 1.0;
    if (!*(_QWORD *)(a1 + direct field offset for SOSUIWebRTCState.cameraFacing))
      v17 = 0.0;
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton), "setAlpha:", v17);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton), "setAlpha:", v10);
  if (!v3)
  {
    if (*(_QWORD *)(a1 + direct field offset for SOSUIWebRTCState.state) == 3)
      v16 = 1.0;
    else
      v16 = 0.0;
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel), "setAlpha:", v16);
  v18 = 0.0;
  if (!v3 && *(_QWORD *)(a1 + direct field offset for SOSUIWebRTCState.state) == 3)
    v18 = 1.0;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView), "setAlpha:", v18);
}

void sub_1001285AC(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls);
  *(_BYTE *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls) = a1;
  sub_10012819C(v2);
}

void sub_1001285C4(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_currentState);
}

void sub_1001285D0(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView);
}

void sub_1001285DC(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBottomAnchor);
}

void sub_1001285E8(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonRTTBottomAnchor);
}

void sub_1001285F4(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_webViewRTCViewControllerWaitingStataTopAnchor);
}

void sub_100128600()
{
  sub_10012863C(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___liveLabel, (uint64_t (*)(_QWORD))&type metadata accessor for EELiveLabel);
}

void sub_100128614()
{
  sub_10012863C(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___callNumberLabel, (uint64_t (*)(_QWORD))&type metadata accessor for EECallNumberLabel);
}

void sub_100128628()
{
  sub_10012863C(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___webRTCQualityLabel, (uint64_t (*)(_QWORD))&type metadata accessor for EELiveLabel);
}

void sub_10012863C(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(v2 + *a1);
  if (!v3)
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)a2(0)), "init");
    sub_1001367F0(v4);
    sub_1001367E8();
    v3 = 0;
  }
  v5 = v3;
  sub_100109830();
}

id sub_100128694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v27;
  Swift::String v28;

  v0 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  __chkstk_darwin(v0, v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v12);
  if (qword_1002D72A8 != -1)
    swift_once(&qword_1002D72A8, sub_100128160);
  UIButton.Configuration.contentInsets.setter(*(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter(v8);
  v15 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v15, "clearColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v15, "systemWhiteColor"));
  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  sub_10017BD1C(0xD000000000000013, 0x80000001001F1D20);
  UIButton.Configuration.image.setter(v16);
  v17 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", UIFontTextStyleBody);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v17);
  v18 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v14, v9);
  sub_100108600((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter(v3);
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v19 = (void *)objc_opt_self(NSBundle);
  v20 = v18;
  v21 = objc_msgSend(v19, "mainBundle");
  v28._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0x47494C4853414C46;
  v22._object = (void *)0xEA00000000005448;
  v23.value._countAndFlagsBits = 0x65536C6C61436E49;
  v23.value._object = (void *)0xED00006563697672;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v28);

  sub_1001710E0(v25._countAndFlagsBits, (uint64_t)v25._object, v20);
  objc_msgSend(v20, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return v20;
}

id sub_1001289E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  _QWORD aBlock[5];
  uint64_t v30;
  Swift::String v31;

  v0 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  __chkstk_darwin(v0, v1);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter(v8);
  if (qword_1002D72B0 != -1)
    swift_once(&qword_1002D72B0, sub_100128170);
  UIButton.Configuration.contentInsets.setter(*(double *)&qword_1002E2DB8, *(double *)&qword_1002E2DB8, *(double *)&qword_1002E2DB8, *(double *)&qword_1002E2DB8);
  v15 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  UIButton.Configuration.baseBackgroundColor.setter(v15);
  v16 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v14, v9);
  sub_100108600((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter(v3);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = (void *)objc_opt_self(NSBundle);
  v18 = v16;
  v19 = objc_msgSend(v17, "mainBundle");
  v31._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 1297043290;
  v20._object = (void *)0xE400000000000000;
  v21.value._countAndFlagsBits = 0x65536C6C61436E49;
  v21.value._object = (void *)0xED00006563697672;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v31);

  sub_1001710E0(v23._countAndFlagsBits, (uint64_t)v23._object, v18);
  objc_msgSend(v18, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  v24 = swift_allocObject(&unk_100289A70, 24, 7);
  *(_QWORD *)(v24 + 16) = v18;
  aBlock[4] = sub_100135760;
  v30 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100128D60;
  aBlock[3] = &unk_100289A88;
  v25 = _Block_copy(aBlock);
  v26 = v30;
  v27 = v18;
  objc_msgSend(v27, "setAccessibilityValueBlock:", v25, swift_release(v26).n128_f64[0]);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return v27;
}

id sub_100128D2C(void *a1)
{
  id result;

  result = objc_msgSend(a1, "titleLabel");
  if (result)
    return (id)sub_100135780(result);
  return result;
}

id sub_100128D60(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  v5 = v4;
  swift_release(v2);
  if (v5)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  return v6;
}

id sub_100128DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v27;
  Swift::String v28;

  v0 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  __chkstk_darwin(v0, v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter(v8);
  if (qword_1002D72A8 != -1)
    swift_once(&qword_1002D72A8, sub_100128160);
  UIButton.Configuration.contentInsets.setter(*(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0);
  v15 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v15, "clearColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v15, "systemWhiteColor"));
  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  sub_10017BD1C(0xD000000000000027, 0x80000001001F1CE0);
  UIButton.Configuration.image.setter(v16);
  v17 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", UIFontTextStyleBody);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v17);
  v18 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v14, v9);
  sub_100108600((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter(v3);
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v18, "setAlpha:", 0.0);
  v19 = (void *)objc_opt_self(NSBundle);
  v20 = v18;
  v21 = objc_msgSend(v19, "mainBundle");
  v28._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0x4D41435F50494C46;
  v22._object = (void *)0xEB00000000415245;
  v23.value._countAndFlagsBits = 0x65536C6C61436E49;
  v23.value._object = (void *)0xED00006563697672;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v28);

  sub_1001710E0(v25._countAndFlagsBits, (uint64_t)v25._object, v20);
  objc_msgSend(v20, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return v20;
}

void sub_100129138()
{
  sub_100129D04(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttAudioRouteButton, (uint64_t (*)(void))sub_10012914C);
}

id sub_10012914C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Class isa;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;

  v0 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  __chkstk_darwin(v0, v1);
  v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter(v8);
  if (qword_1002D72A8 != -1)
    swift_once(&qword_1002D72A8, sub_100128160);
  UIButton.Configuration.contentInsets.setter(*(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0);
  v15 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v15, "clearColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v15, "systemWhiteColor"));
  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  sub_10017BD1C(0xD000000000000013, 0x80000001001F0430);
  UIButton.Configuration.image.setter();
  v16 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", UIFontTextStyleBody);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v16);
  v17 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v14, v9);
  sub_100108600((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter(v3);
  v46 = v10;
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v18 = (void *)objc_opt_self(NSBundle);
  v19 = v17;
  v20 = objc_msgSend(v18, "mainBundle");
  v48._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0x4F525F4F49445541;
  v21._object = (void *)0xEB00000000455455;
  v22.value._countAndFlagsBits = 0x65536C6C61436E49;
  v22.value._object = (void *)0xED00006563697672;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v48._countAndFlagsBits = 0;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v48);

  sub_1001710E0(v24._countAndFlagsBits, (uint64_t)v24._object, v19);
  objc_msgSend(v19, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  v25 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ButtonBackgroundViewEffectView()), "init");
  objc_msgSend(v25, "setUserInteractionEnabled:", 0);
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v19, "insertSubview:atIndex:", v25, 0);
  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v27 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v28 = swift_allocObject(v27, 64, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100241800;
  v29 = objc_msgSend(v25, "leadingAnchor");
  v30 = objc_msgSend(v19, "leadingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v28 + 32) = v31;
  v32 = objc_msgSend(v25, "trailingAnchor");
  v33 = objc_msgSend(v19, "trailingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v28 + 40) = v34;
  v35 = objc_msgSend(v25, "topAnchor");
  v36 = objc_msgSend(v19, "topAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v28 + 48) = v37;
  v38 = objc_msgSend(v25, "bottomAnchor");
  v39 = objc_msgSend(v19, "bottomAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v28 + 56) = v40;
  v47 = v28;
  specialized Array._endMutation()(v41, v42);
  v43 = v47;
  sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v43);
  objc_msgSend(v26, "activateConstraints:", isa);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v9);
  return v19;
}

void sub_100129718()
{
  sub_100129D04(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttCallControlsButton, (uint64_t (*)(void))sub_10012972C);
}

id sub_10012972C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;

  v0 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  __chkstk_darwin(v0, v1);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter(v8);
  if (qword_1002D72A8 != -1)
    swift_once(&qword_1002D72A8, sub_100128160);
  UIButton.Configuration.contentInsets.setter(*(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0);
  v15 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v15, "clearColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v15, "systemWhiteColor"));
  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  sub_10017BD1C(0x73697370696C6C65, 0xE800000000000000);
  UIButton.Configuration.image.setter(v16);
  v17 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", UIFontTextStyleBody);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v17);
  v18 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v14, v9);
  sub_100108600((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter(v3);
  v47 = v10;
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v19 = (void *)objc_opt_self(NSBundle);
  v20 = v18;
  v21 = objc_msgSend(v19, "mainBundle");
  v49._object = (void *)0xE000000000000000;
  v22._object = (void *)0x80000001001F1E20;
  v22._countAndFlagsBits = 0xD000000000000012;
  v23.value._countAndFlagsBits = 0x65536C6C61436E49;
  v23.value._object = (void *)0xED00006563697672;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v49._countAndFlagsBits = 0;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v49);

  sub_1001710E0(v25._countAndFlagsBits, (uint64_t)v25._object, v20);
  objc_msgSend(v20, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  v26 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ButtonBackgroundViewEffectView()), "init");
  objc_msgSend(v26, "setUserInteractionEnabled:", 0);
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v20, "insertSubview:atIndex:", v26, 0);
  v27 = (void *)objc_opt_self(NSLayoutConstraint);
  v28 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v29 = swift_allocObject(v28, 64, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100241800;
  v30 = objc_msgSend(v26, "leadingAnchor");
  v31 = objc_msgSend(v20, "leadingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v29 + 32) = v32;
  v33 = objc_msgSend(v26, "trailingAnchor");
  v34 = objc_msgSend(v20, "trailingAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v29 + 40) = v35;
  v36 = objc_msgSend(v26, "topAnchor");
  v37 = objc_msgSend(v20, "topAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v29 + 48) = v38;
  v39 = objc_msgSend(v26, "bottomAnchor");
  v40 = objc_msgSend(v20, "bottomAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v29 + 56) = v41;
  v48 = v29;
  specialized Array._endMutation()(v42, v43);
  v44 = v48;
  sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v44);
  objc_msgSend(v27, "activateConstraints:", isa);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v9);
  return v20;
}

void sub_100129CF0()
{
  sub_100129D04(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttVideoButton, (uint64_t (*)(void))sub_100129D48);
}

void sub_100129D04(_QWORD *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(v2 + *a1);
  if (!v3)
  {
    v4 = (void *)a2();
    sub_1001367F0(v4);
    sub_1001367E8();
    v3 = 0;
  }
  v5 = v3;
  sub_100109830();
}

id sub_100129D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v27;
  Swift::String v28;

  v0 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  __chkstk_darwin(v0, v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter(v8);
  if (qword_1002D72A8 != -1)
    swift_once(&qword_1002D72A8, sub_100128160);
  UIButton.Configuration.contentInsets.setter(*(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0, *(double *)&qword_1002E2DB0);
  v15 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v15, "systemWhiteColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v15, "systemBlackColor"));
  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  sub_10017BD1C(0x69662E6F65646976, 0xEA00000000006C6CLL);
  UIButton.Configuration.image.setter(v16);
  v17 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", UIFontTextStyleBody);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v17);
  v18 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v14, v9);
  sub_100108600((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter(v3);
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v19 = (void *)objc_opt_self(NSBundle);
  v20 = v18;
  v21 = objc_msgSend(v19, "mainBundle");
  v28._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0x49565F4553554150;
  v22._object = (void *)0xEB000000004F4544;
  v23.value._countAndFlagsBits = 0x65536C6C61436E49;
  v23.value._object = (void *)0xED00006563697672;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v28);

  sub_1001710E0(v25._countAndFlagsBits, (uint64_t)v25._object, v20);
  objc_msgSend(v20, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return v20;
}

id sub_10012A0A0()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 20.0);
  objc_msgSend(v0, "setFont:", v1);

  objc_msgSend(v0, "setNumberOfLines:", 0);
  objc_msgSend(v0, "setTextAlignment:", 1);
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "dynamicLabelColor");
  objc_msgSend(v0, "setTextColor:", v3);

  v4 = v0;
  v5 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  return v4;
}

id sub_10012A1D8()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v0);

  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v1, "layer");
  objc_msgSend(v2, "setCornerRadius:", 10.0);

  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setMasksToBounds:", 1);

  return v1;
}

id sub_10012A2B8()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "darkGrayColor");
  objc_msgSend(v0, "setBackgroundColor:", v1);

  return v0;
}

id sub_10012A33C()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  v0 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 3);
  v1 = sub_10012A480(0xD00000000000001DLL, 0x80000001001F1CC0, v0);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v1);

  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "darkGrayColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = objc_msgSend(v3, "whiteColor");
  objc_msgSend(v4, "setTintColor:", v6);

  return v4;
}

id sub_10012A480(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  NSString v6;
  id v7;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "systemImageNamed:withConfiguration:", v6, a3);

  return v7;
}

NSObject *sub_10012A4EC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char **v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  void *v24;
  objc_class *v25;
  NSBundle v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  NSBundle v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  void *v60;
  NSObject *v61;
  objc_class *v62;
  id v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  NSObject *v67;
  NSObject *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  _QWORD *v72;
  NSObject *v73;
  NSObject *v74;
  uint64_t v75;
  id v76;
  objc_class *v77;
  char *v78;
  char *v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  objc_class *v86;
  void *v87;
  NSObject *v88;
  id v89;
  void *v90;
  NSString v91;
  NSString v92;
  id v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  char v100;
  objc_super v101;
  _QWORD v102[5];
  NSObject *v103;
  _BYTE v104[16];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  sub_10010BC70();
  v106 = v2;
  v107 = v3;
  v4 = v0;
  v99 = v5;
  v97 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v6 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97, v7);
  v8 = sub_10011AE70();
  v9 = type metadata accessor for OS_dispatch_queue.Attributes(v8);
  sub_100120AA0();
  __chkstk_darwin(v10, v11);
  type metadata accessor for DispatchQoS(0);
  sub_100120AA0();
  __chkstk_darwin(v12, v13);
  v15 = (const char **)((char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = swift_unknownObjectWeakInit(&v4[OBJC_IVAR___EmergencyWebRTCViewController_delegate]);
  v4[OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___EmergencyWebRTCViewController_webViewEventsHelper] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___EmergencyWebRTCViewController_currentState] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView] = 0;
  v98 = OBJC_IVAR___EmergencyWebRTCViewController_videoStreamingRequest;
  *(_QWORD *)&v4[OBJC_IVAR___EmergencyWebRTCViewController_videoStreamingRequest] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___EmergencyWebRTCViewController_avCaptureDevice] = 0;
  v96 = OBJC_IVAR___EmergencyWebRTCViewController_avCaptureQueue;
  sub_10011ADD4(v16, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v17 = v4;
  static DispatchQoS.unspecified.getter(v17);
  v103 = _swiftEmptyArrayStorage;
  v18 = sub_10012095C((unint64_t *)&qword_1002D8CE8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = sub_1001085C0((uint64_t *)&unk_1002DA920);
  v20 = sub_1001356B0();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v103, v19, v20, v9, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v1, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v97);
  sub_100136764();
  *(_QWORD *)&v4[v96] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v21 = OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine;
  v22 = objc_allocWithZone((Class)type metadata accessor for ZoomStateMachine());
  *(_QWORD *)&v17[v21] = sub_1001363E0();
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBottomAnchor] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonRTTBottomAnchor] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_webViewRTCViewControllerWaitingStataTopAnchor] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_lastZoomFactor] = 0x3FF0000000000000;
  v17[OBJC_IVAR___EmergencyWebRTCViewController_hasPendingStartVideoPreviewRequest] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate] = 0xBFF0000000000000;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate] = 0xBFF0000000000000;
  v17[OBJC_IVAR___EmergencyWebRTCViewController_showWebRTCQualityLabel] = 0;
  v23 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel;
  v24 = (void *)objc_opt_self(NSBundle);
  v25 = (objc_class *)sub_10013672C(v24);
  v26.super.isa = v25;
  v27 = sub_100136094(0xD000000000000016, 0x80000001001F1C30, 0x65536C6C61436E49, 0xED00006563697672, v26);
  v29 = v28;

  v30 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateTitleLabel(0));
  v31 = EEWaitingStateTitleLabel.init(titleString:)(v27, v29);
  *(_QWORD *)&v23[(_QWORD)v17] = v31;
  v32 = OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel;
  v33 = (objc_class *)sub_100136368(v31, v15[136]);
  v34.super.isa = v33;
  v35 = sub_100136094(0xD000000000000019, 0x80000001001F1C50, 0x65536C6C61436E49, 0xED00006563697672, v34);
  v37 = v36;

  v38 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateSubtitleLabel(0));
  *(_QWORD *)&v17[v32] = EEWaitingStateSubtitleLabel.init(titleString:)(v35, v37);
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___liveLabel] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___callNumberLabel] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___webRTCQualityLabel] = 0;
  v39 = OBJC_IVAR___EmergencyWebRTCViewController_flashButton;
  *(_QWORD *)&v17[v39] = sub_100128694();
  v40 = OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView;
  v41 = objc_allocWithZone((Class)type metadata accessor for ButtonBackgroundViewEffectView());
  v42 = sub_100136464(v41);
  sub_1001360DC(v42, "setUserInteractionEnabled:");
  sub_1001360DC(v42, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)&v17[v40] = v42;
  v43 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView;
  v44 = sub_100136560();
  v45 = sub_100136464(v44);
  sub_1001360DC(v45, "setUserInteractionEnabled:");
  sub_1001360DC(v45, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)&v17[v43] = v45;
  v46 = OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView;
  v47 = sub_100136560();
  v48 = sub_100136464(v47);
  sub_1001360DC(v48, "setUserInteractionEnabled:");
  sub_1001360DC(v48, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)&v17[v46] = v48;
  v49 = OBJC_IVAR___EmergencyWebRTCViewController_zoomButton;
  *(_QWORD *)&v17[v49] = sub_1001289E4();
  v50 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
  *(_QWORD *)&v17[v50] = sub_100128DCC();
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttAudioRouteButton] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttCallControlsButton] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttVideoButton] = 0;
  v51 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel;
  *(_QWORD *)&v17[v51] = sub_10012A0A0();
  v52 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView;
  *(_QWORD *)&v17[v52] = sub_10012A1D8();
  v53 = OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView;
  *(_QWORD *)&v17[v53] = sub_10012A2B8();
  v54 = OBJC_IVAR___EmergencyWebRTCViewController_exclamationImageView;
  *(_QWORD *)&v17[v54] = sub_10012A33C();
  v55 = OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollView;
  v56 = sub_100136444(objc_allocWithZone((Class)UIScrollView), "initWithFrame:");
  sub_1001360DC(v56, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)&v17[v55] = v56;
  v57 = OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollViewContentView;
  v58 = sub_100136464(objc_allocWithZone((Class)UIView));
  sub_1001360DC(v58, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)&v17[v57] = v58;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_viewControllerWaitingStateHeightConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTopConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTrailingConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateBottomConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateTrailingConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWidthConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonWidthConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_flashButtonWidthConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___EmergencyWebRTCViewController_webViewWaitingStateConstraints] = _swiftEmptyArrayStorage;
  v59 = v99;
  v60 = *(void **)&v4[v98];
  *(_QWORD *)&v4[v98] = v99;
  v61 = v59;

  v62 = (objc_class *)type metadata accessor for EmergencyWebRTCViewController();
  v101.receiver = v17;
  v101.super_class = v62;
  v98 = (uint64_t)v62;
  v63 = objc_msgSendSuper2(&v101, "initWithNibName:bundle:", 0, 0);
  v64 = qword_1002D7250;
  v65 = v63;
  if (v64 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v66 = sub_100109570();
  sub_100108664(v66, (uint64_t)&unk_1002E2CC8);
  v67 = v61;
  sub_1001365F8();
  v68 = sub_1001364A0();
  v69 = v17;
  sub_100109724();
  v70 = sub_10011ADDC();
  if (os_log_type_enabled(v61, v70))
  {
    v71 = sub_1001094C8(22);
    v72 = (_QWORD *)sub_1001094C8(16);
    *(_DWORD *)v71 = 138412546;
    v103 = v69;
    v73 = v69;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, v104, v71 + 4, v71 + 12);
    *v72 = v69;

    *(_WORD *)(v71 + 12) = 2112;
    if (v99)
    {
      v103 = v68;
      v74 = v68;
    }
    else
    {
      v103 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, v104, v71 + 14, v71 + 22);
    v72[1] = v99;

    sub_1001364DC((void *)&_mh_execute_header, v61, v70, "EnhancedEmergency: created EmergencyWebRTCViewController: %@, videoStreamingRequest: %@", (uint8_t *)v71);
    v75 = sub_1001085C0(&qword_1002D7880);
    swift_arrayDestroy(v72, 2, v75);
    sub_100109440((uint64_t)v72);
    sub_100109440(v71);
  }
  else
  {

    v61 = v69;
  }

  v76 = objc_allocWithZone((Class)type metadata accessor for PHSOSUIWebViewEventsHelper());
  v77 = (objc_class *)sub_100136464(v76);
  v78 = (char *)v77
      + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF126PHSOSUIWebViewEventsHelper_delegate;
  *((_QWORD *)v78 + 1) = &off_100289A28;
  swift_unknownObjectWeakAssign(v78, v69);
  *(Class *)((char *)&v69->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewEventsHelper) = v77;
  v79 = v77;
  sub_10010E3B8();
  v80 = objc_allocWithZone((Class)((uint64_t (*)(_QWORD))type metadata accessor for SOSUIWebRTCView)(0));
  v81 = sub_100136488();
  v82 = ((uint64_t (*)(objc_class *, double, double, double, double))SOSUIWebRTCView.init(frame:delegate:))(v77, 0.0, 0.0, 0.0, 0.0);
  v83 = OBJC_IVAR___EmergencyWebRTCViewController_webRTCView;
  v84 = *(Class *)((char *)&v69->isa + OBJC_IVAR___EmergencyWebRTCViewController_webRTCView);
  *(Class *)((char *)&v69->isa + OBJC_IVAR___EmergencyWebRTCViewController_webRTCView) = (Class)v82;

  v85 = objc_allocWithZone((Class)type metadata accessor for EmergencyActionButtonsWaitingView());
  v86 = (objc_class *)sub_10016FC44(0);
  v87 = *(Class *)((char *)&v69->isa + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView);
  *(Class *)((char *)&v69->isa + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView) = v86;

  v105 = v98;
  v103 = v69;
  objc_allocWithZone((Class)UIPinchGestureRecognizer);
  v88 = v69;
  v89 = sub_100135508(&v103, (uint64_t)"pinch:");
  v90 = *(Class *)((char *)&v69->isa + v83);
  if (v90)
    sub_100136274(v90, "addGestureRecognizer:");
  v91 = sub_100136770();
  v92 = sub_100136770();
  v93 = sub_10000D540(v91, v92);

  if (v93)
  {
    _bridgeAnyObjectToAny(_:)(v102, v93);

    swift_unknownObjectRelease(v93);
  }
  else
  {

    memset(v102, 0, 32);
  }
  sub_1001356F4((uint64_t)v102, (uint64_t)&v103);
  if (v105)
  {
    if ((swift_dynamicCast(&v100, &v103, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      *((_BYTE *)&v88->isa + OBJC_IVAR___EmergencyWebRTCViewController_showWebRTCQualityLabel) = v100;
  }
  else
  {
    sub_1001209C8((uint64_t)&v103, &qword_1002D84F0);
  }
  return v88;
}

void sub_10012AEE8()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;

  sub_10010BC70();
  v1 = v0;
  v54 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54, v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  sub_100120AA0();
  __chkstk_darwin(v7, v8);
  v9 = sub_10011AE70();
  type metadata accessor for DispatchQoS(v9);
  sub_100120AA0();
  __chkstk_darwin(v10, v11);
  v12 = swift_unknownObjectWeakInit((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  *((_BYTE *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_webViewEventsHelper) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_currentState) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_webRTCView) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_videoStreamingRequest) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_avCaptureDevice) = 0;
  v13 = OBJC_IVAR___EmergencyWebRTCViewController_avCaptureQueue;
  v14 = sub_10011ADD4(v12, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v14);
  v55 = _swiftEmptyArrayStorage;
  v15 = sub_10012095C((unint64_t *)&qword_1002D8CE8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = sub_1001085C0((uint64_t *)&unk_1002DA920);
  v17 = sub_1001356B0();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v55, v16, v17, v6, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v54);
  sub_100136764();
  *(_QWORD *)((char *)v1 + v13) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v18 = OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine;
  v19 = objc_allocWithZone((Class)type metadata accessor for ZoomStateMachine());
  *(_QWORD *)((char *)v1 + v18) = sub_1001363E0();
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBottomAnchor) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonRTTBottomAnchor) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_webViewRTCViewControllerWaitingStataTopAnchor) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_lastZoomFactor) = 0x3FF0000000000000;
  *((_BYTE *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_hasPendingStartVideoPreviewRequest) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate) = 0xBFF0000000000000;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate) = 0xBFF0000000000000;
  *((_BYTE *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_showWebRTCQualityLabel) = 0;
  v20 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel;
  v21 = (void *)objc_opt_self(NSBundle);
  v22 = sub_10013672C(v21);
  v23 = sub_100135FC4(0xD000000000000016, 0x80000001001F1C30);
  v25 = v24;

  v26 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateTitleLabel(0));
  v27 = EEWaitingStateTitleLabel.init(titleString:)(v23, v25);
  *(_QWORD *)&v20[(_QWORD)v1] = v27;
  v28 = OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel;
  v29 = sub_10010E3C8(v27, *(const char **)(v14 + 1088));
  v30 = sub_100135FC4(0xD000000000000019, 0x80000001001F1C50);
  v32 = v31;

  v33 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateSubtitleLabel(0));
  *(_QWORD *)((char *)v1 + v28) = EEWaitingStateSubtitleLabel.init(titleString:)(v30, v32);
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___liveLabel) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___callNumberLabel) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___webRTCQualityLabel) = 0;
  v34 = OBJC_IVAR___EmergencyWebRTCViewController_flashButton;
  *(_QWORD *)((char *)v1 + v34) = sub_100128694();
  v35 = OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView;
  v36 = objc_allocWithZone((Class)type metadata accessor for ButtonBackgroundViewEffectView());
  v37 = sub_100136588(v36);
  sub_1001360DC(v37, "setUserInteractionEnabled:");
  sub_1001360DC(v37, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)((char *)v1 + v35) = v37;
  v38 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView;
  v39 = sub_100136560();
  v40 = sub_100136588(v39);
  sub_1001360DC(v40, "setUserInteractionEnabled:");
  sub_1001360DC(v40, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)((char *)v1 + v38) = v40;
  v41 = OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView;
  v42 = sub_100136560();
  v43 = sub_100136588(v42);
  sub_1001360DC(v43, "setUserInteractionEnabled:");
  sub_1001360DC(v43, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)((char *)v1 + v41) = v43;
  v44 = OBJC_IVAR___EmergencyWebRTCViewController_zoomButton;
  *(_QWORD *)((char *)v1 + v44) = sub_1001289E4();
  v45 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
  *(_QWORD *)((char *)v1 + v45) = sub_100128DCC();
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttAudioRouteButton) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttCallControlsButton) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttVideoButton) = 0;
  v46 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel;
  *(_QWORD *)((char *)v1 + v46) = sub_10012A0A0();
  v47 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView;
  *(_QWORD *)((char *)v1 + v47) = sub_10012A1D8();
  v48 = OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView;
  *(_QWORD *)((char *)v1 + v48) = sub_10012A2B8();
  v49 = OBJC_IVAR___EmergencyWebRTCViewController_exclamationImageView;
  *(_QWORD *)((char *)v1 + v49) = sub_10012A33C();
  v50 = OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollView;
  v51 = sub_100136444(objc_allocWithZone((Class)UIScrollView), "initWithFrame:");
  sub_1001360DC(v51, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)((char *)v1 + v50) = v51;
  v52 = OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollViewContentView;
  v53 = sub_100136588(objc_allocWithZone((Class)UIView));
  sub_1001360DC(v53, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)((char *)v1 + v52) = v53;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_viewControllerWaitingStateHeightConstraint) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTopConstraint) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTrailingConstraint) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateBottomConstraint) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateTrailingConstraint) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWidthConstraint) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonWidthConstraint) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flashButtonWidthConstraint) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_webViewWaitingStateConstraints) = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/EmergencyWebRTCViewController.swift", 49, 2);
  __break(1u);
}

void sub_10012B4DC(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_viewControllerWaitingStateHeightConstraint);
}

void sub_10012B4E8(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTopConstraint);
}

void sub_10012B4F4(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTrailingConstraint);
}

void sub_10012B500(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateBottomConstraint);
}

void sub_10012B50C(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateTrailingConstraint);
}

void sub_10012B518(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWidthConstraint);
}

void sub_10012B524(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonWidthConstraint);
}

void sub_10012B530(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___EmergencyWebRTCViewController_flashButtonWidthConstraint);
}

uint64_t sub_10012B53C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_webViewWaitingStateConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_webViewWaitingStateConstraints) = a1;
  return swift_bridgeObjectRelease(v2);
}

void sub_10012B554()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for EmergencyWebRTCViewController();
  objc_msgSendSuper2(&v1, "viewDidLoad");
  sub_10012BD6C();
  sub_10012BBDC();
}

void sub_10012B5C0(NSObject *a1)
{
  void *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  objc_super v10;

  v4 = v1;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for EmergencyWebRTCViewController();
  -[NSObject viewDidAppear:](&v10, "viewDidAppear:", a1 & 1);
  v6 = OBJC_IVAR___EmergencyWebRTCViewController_hasPendingStartVideoPreviewRequest;
  if (*((_BYTE *)v4 + OBJC_IVAR___EmergencyWebRTCViewController_hasPendingStartVideoPreviewRequest) == 1)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v7 = sub_100109570();
    sub_10011ADC0(v7, (uint64_t)&unk_1002E2CC8);
    v8 = sub_10011ADDC();
    if (sub_100109560(v8))
    {
      v9 = (_WORD *)sub_1001094C8(2);
      sub_1001365A0(v9);
      sub_10011AE18((void *)&_mh_execute_header, a1, v2, "EnhancedEmergency: proceeding with pending startVideoPreview request", v3);
      sub_100109440((uint64_t)v3);
    }

    *((_BYTE *)v4 + v6) = 0;
    sub_100130058();
  }
  sub_10013621C();
}

id sub_10012B6E0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  char *v5;
  NSObject *Strong;
  NSObject *v7;
  id v8;
  uint64_t v9;
  os_log_type_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  double v40;
  void *v41;
  void *v42;
  void *v43;
  objc_super v45;

  v3 = v1;
  v45.receiver = v3;
  v45.super_class = (Class)type metadata accessor for EmergencyWebRTCViewController();
  objc_msgSendSuper2(&v45, "traitCollectionDidChange:", a1);
  v5 = &v3[OBJC_IVAR___EmergencyWebRTCViewController_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR___EmergencyWebRTCViewController_delegate]);
  if (Strong)
  {
    v7 = Strong;
    v8 = -[NSObject videoStreamingState](Strong, "videoStreamingState");
    Strong = sub_100136124();
    if (v8 == (id)1)
    {
      if (qword_1002D7250 != -1)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v9 = sub_100109570();
      sub_10011ADC0(v9, (uint64_t)&unk_1002E2CC8);
      v10 = sub_10011ADDC();
      if (sub_10010E390(v10))
      {
        v2 = sub_1001094C8(2);
        *(_WORD *)v2 = 0;
        sub_10011AE18((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "EnhancedEmergency: requestToReorderWebView from traitCollectionDidChange", (uint8_t *)v2);
        sub_100109440(v2);
      }

      Strong = swift_unknownObjectWeakLoadStrong(v5);
      if (Strong)
      {
        -[NSObject requestToReorderWebView](Strong, "requestToReorderWebView");
        Strong = sub_100136124();
      }
    }
  }
  v11 = sub_10010E310((uint64_t)Strong, "traitCollection");
  v12 = objc_msgSend(v11, "preferredContentSizeCategory");

  static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);
  v13 = sub_100136084();
  if (v2 == v13 && v11 == (id)v14)
    goto LABEL_55;
  sub_100135F20(v13, v14);
  sub_100136118();
  sub_100109898();
  if ((v2 & 1) != 0)
    goto LABEL_56;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraLarge);
  v16 = sub_100136084();
  if (v2 == v16 && v11 == (id)v17)
    goto LABEL_55;
  sub_100135F20(v16, v17);
  sub_100136118();
  sub_100109898();
  if ((v2 & 1) != 0)
    goto LABEL_56;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraLarge);
  v19 = sub_100136084();
  if (v2 == v19 && v11 == (id)v20)
    goto LABEL_55;
  sub_100135F20(v19, v20);
  sub_100136118();
  sub_100109898();
  if ((v2 & 1) != 0)
    goto LABEL_56;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityLarge);
  v22 = sub_100136084();
  if (v2 == v22 && v11 == (id)v23)
    goto LABEL_55;
  sub_100135F20(v22, v23);
  sub_100136118();
  sub_100109898();
  if ((v2 & 1) != 0)
  {
LABEL_56:

    v40 = 51.0;
    goto LABEL_57;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityMedium);
  v25 = sub_100136084();
  if (v2 == v25 && v11 == (id)v26)
  {
LABEL_55:
    sub_100128124();
    goto LABEL_56;
  }
  sub_100135F20(v25, v26);
  sub_100136118();
  sub_100109898();
  if ((v2 & 1) != 0)
    goto LABEL_56;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraExtraLarge);
  v28 = sub_100136084();
  if (v2 == v28 && v11 == (id)v29)
  {
    sub_100128124();
    goto LABEL_65;
  }
  sub_100135F20(v28, v29);
  sub_100136118();
  sub_100109898();
  if ((v2 & 1) != 0)
  {
LABEL_65:

    v40 = 45.9;
    goto LABEL_57;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
  v31 = sub_100136084();
  if (v2 == v31 && v11 == (id)v32)
  {
    sub_100128124();
    goto LABEL_67;
  }
  sub_100135F20(v31, v32);
  sub_100136118();
  sub_100109898();
  if ((v2 & 1) != 0)
  {
LABEL_67:

    v40 = 42.16;
    goto LABEL_57;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
  v34 = sub_100136084();
  if (v2 == v34 && v11 == (id)v35)
  {
    sub_100128124();
    goto LABEL_69;
  }
  sub_100135F20(v34, v35);
  sub_100136118();
  sub_100109898();
  if ((v2 & 1) != 0)
  {
LABEL_69:

    v40 = 38.08;
    goto LABEL_57;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
  v37 = sub_100136084();
  if (v2 == v37 && v11 == (id)v38)
  {
    sub_100128124();
    goto LABEL_71;
  }
  sub_100135F20(v37, v38);
  sub_100136118();
  sub_100109898();
  if ((v2 & 1) != 0)
  {
LABEL_71:

    goto LABEL_72;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);

  sub_100109558();
  sub_100109898();
LABEL_72:
  v40 = 34.0;
LABEL_57:
  v41 = *(void **)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flashButtonWidthConstraint];
  if (v41)
    sub_10013650C(v41, "setConstant:");
  v42 = *(void **)&v3[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonWidthConstraint];
  if (v42)
    sub_1001364F8(v42, "setConstant:");
  v43 = *(void **)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWidthConstraint];
  if (v43)
    sub_10013650C(v43, "setConstant:");
  sub_100136688(*(void **)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton]);
  sub_100136688(*(void **)&v3[OBJC_IVAR___EmergencyWebRTCViewController_zoomButton]);
  sub_100136688(*(void **)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flashButton]);
  sub_10013650C(*(id *)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView], "_setCornerRadius:");
  sub_10013650C(*(id *)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView], "_setCornerRadius:");
  return objc_msgSend(*(id *)&v3[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView], "_setCornerRadius:", v40 * 0.5);
}

void sub_10012BBDC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSString v7;
  void *v8;
  void *v9;
  objc_class *v10;
  NSBundle v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;

  v3 = objc_msgSend(objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance"), "frontmostAudioOrVideoCall");
  sub_1001367E8();
  sub_100128614();
  v5 = (void *)v4;
  if (v0)
  {
    v6 = sub_10010E310(v4, "displayName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    sub_100136738();
    v7 = String._bridgeToObjectiveC()();
    v4 = swift_bridgeObjectRelease(v2);
  }
  else
  {
    v7 = 0;
  }
  sub_100136758(v4, "setText:");

  sub_100128600();
  v9 = v8;
  v10 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_100136804();
  sub_100136134();
  v11.super.isa = v10;
  sub_100136094(v12, v13, v14, v15, v11);
  sub_100136738();
  sub_10017E2FC(v1, v2, v9);

  sub_100128628();
  v17 = v16;
  sub_10017E2FC(0x202C412F4E3A5246, 0xEE00412F4E3A5242, v16);

  sub_1001362BC(v17);
}

void sub_10012BD6C()
{
  char *v0;
  uint8_t *v1;
  char *v2;
  void *v3;
  char **v4;
  id v5;
  NSObject *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  NSObject *v88;
  uint64_t v89;
  os_log_type_t v90;
  _WORD *v91;
  uint64_t v92;
  id v93;
  void *v94;
  NSObject *v95;
  id v96;

  sub_100136544();
  v2 = v0;
  v3 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  v4 = &selRef_triggerInversionColorUpdate_;
  if (!v3 || !*(_QWORD *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView])
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v89 = sub_100109570();
    v88 = sub_10011ADC0(v89, (uint64_t)&unk_1002E2CC8);
    v90 = static os_log_type_t.default.getter();
    if (sub_100136598(v88))
    {
      v91 = (_WORD *)sub_1001094C8(2);
      sub_1001365A0(v91);
      sub_10011AE18((void *)&_mh_execute_header, v88, v90, "EnhancedEmergency: Trying to configure webView, but view is nil", v1);
      sub_100109440((uint64_t)v1);
    }
    goto LABEL_25;
  }
  v5 = v3;
  v6 = sub_1001365F8();
  v7 = sub_1001360DC(v0, "setTranslatesAutoresizingMaskIntoConstraints:");
  v8 = sub_10010BC5C((uint64_t)v7, "layer");
  if (qword_1002D72B8 != -1)
    swift_once(&qword_1002D72B8, sub_10012817C);
  v95 = v6;
  objc_msgSend(v8, "setCornerRadius:", *(double *)&qword_1002E2DC0);

  v10 = sub_10010BC5C(v9, "layer");
  sub_100136284(v10, "setMasksToBounds:");

  v12 = sub_10010E310(v11, "view");
  if (!v12)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v13 = v12;
  sub_100136274(v12, "addSubview:");

  v14 = sub_1001367C0();
  objc_msgSend(v14, "setCornerRadius:", *(double *)&qword_1002E2DC0);

  v15 = sub_1001367C0();
  sub_100136284(v15, "setMasksToBounds:");

  v17 = sub_10010E310(v16, "view");
  if (!v17)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v18 = v17;
  sub_10013627C(v17);

  sub_100136284(v0, "setIsAccessibilityElement:");
  objc_opt_self(NSBundle);
  v19 = sub_100136488();
  v20 = sub_100136368((uint64_t)v19, "mainBundle");
  sub_100136804();
  v21 = sub_100135FC4(0x4449565F4556494CLL, 0xEF444545465F4F45);
  v23 = v22;

  sub_1001710E0(v21, v23, v19);
  sub_1001360DC(v6, "setTranslatesAutoresizingMaskIntoConstraints:");
  v24 = swift_unknownObjectWeakAssign((char *)v6 + OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_delegate, v2);
  v25 = sub_10010E310(v24, "view");
  if (!v25)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v26 = v25;
  objc_msgSend(v25, "addSubview:", v6);

  v28 = sub_10010E310(v27, "view");
  if (!v28)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v29 = v28;
  v30 = OBJC_IVAR___EmergencyWebRTCViewController_flashButton;
  sub_10013627C(v28);

  sub_10013627C(*(void **)&v2[v30]);
  v31 = sub_1001367A0(*(void **)&v2[v30]);
  v32 = sub_10010E310((uint64_t)v31, "view");
  if (!v32)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v33 = v32;
  v34 = v19;
  v35 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
  sub_10013627C(v32);

  sub_10013627C(*(void **)&v2[v35]);
  v36 = sub_1001367A0(*(void **)&v2[v35]);
  v37 = sub_10010E310((uint64_t)v36, "view");
  if (!v37)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v38 = v37;
  v39 = OBJC_IVAR___EmergencyWebRTCViewController_zoomButton;
  sub_10013627C(v37);

  sub_10013627C(*(void **)&v2[v39]);
  v40 = sub_1001367A0(*(void **)&v2[v39]);
  v41 = sub_10010E310((uint64_t)v40, "view");
  if (!v41)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v42 = v41;
  v43 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView;
  sub_10013627C(v41);

  v45 = sub_10010E310(v44, "view");
  if (!v45)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v46 = v45;
  v47 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel;
  sub_10013627C(v45);

  v49 = sub_10010E310(v48, "view");
  if (!v49)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v50 = v49;
  sub_10013652C();
  sub_1001361E4();

  v52 = sub_10010E310(v51, "view");
  if (!v52)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v53 = v52;
  sub_100136514();
  sub_1001361E4();

  v55 = sub_10010E310(v54, "view");
  if (!v55)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v56 = v55;
  sub_100128628();
  v58 = v57;
  sub_1001361E4();

  v60 = sub_10010E310(v59, "view");
  if (!v60)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v61 = v60;
  objc_msgSend(v60, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollView]);

  v62 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollViewContentView];
  sub_1001361E4();
  sub_1001365BC((uint64_t)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel);
  sub_1001365BC(OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel);
  sub_10013652C();
  sub_100135F98(v63, "setAlpha:");

  sub_100136514();
  sub_100135F98(v64, "setAlpha:");

  sub_100128628();
  v66 = v65;
  sub_100135F98(v65, "setAlpha:");

  sub_100135F98(*(id *)&v2[v30], "setAlpha:");
  sub_100135F98(*(id *)&v2[v39], "setAlpha:");
  sub_100135F98(*(id *)&v2[v47], "setAlpha:");
  sub_100135F98(*(id *)&v2[v43], "setAlpha:");
  sub_100136370(*(void **)&v2[v30], v67, v68, (uint64_t)"flashButtonTapped");
  sub_100136370(*(void **)&v2[v35], v69, v70, (uint64_t)"flipCameraButtonTapped");
  v73 = sub_100136370(*(void **)&v2[v39], v71, v72, (uint64_t)"zoomButtonTapped");
  v74 = sub_10010E310((uint64_t)v73, "view");
  if (v74)
  {
    v75 = objc_msgSend(v74, "topAnchor");
    sub_10010E338();
    v77 = sub_10010E3C8(v76, "topAnchor");
    v78 = objc_msgSend(&selRef_postNotificationName_object_userInfo_, "constraintEqualToAnchor:", v77);
    sub_10011B028();

    v79 = sub_1001367DC();
    sub_10012B4DC(v79);
    v80 = sub_10010E3C8((uint64_t)objc_msgSend(*(id *)&v2[v35], "topAnchor"), "topAnchor");
    v81 = v80;
    if (qword_1002D72C0 != -1)
      v80 = (id)swift_once(&qword_1002D72C0, sub_10012818C);
    v82 = sub_10011AE94((uint64_t)v80, "constraintEqualToAnchor:constant:");
    sub_100136680();

    v83 = sub_1001367DC();
    sub_10012B4E8(v83);
    v84 = sub_100136498(*(void **)&v2[v35]);
    v85 = sub_10010E3C8((uint64_t)v84, "trailingAnchor");
    v86 = sub_10011AE94((uint64_t)v85, "constraintEqualToAnchor:constant:");
    sub_100136680();

    v87 = sub_1001367DC();
    sub_10012B4F4(v87);
    sub_10012C714();

    v4 = &selRef_triggerInversionColorUpdate_;
    v88 = v95;
LABEL_25:

    v93 = sub_10010E310(v92, v4[239]);
    if (v93)
    {
      v94 = v93;
      v96 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
      objc_msgSend(v94, "setBackgroundColor:", v96);

      sub_1001360F4(v96);
      return;
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_40:
  __break(1u);
}

void sub_10012C500()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  Class isa;

  v2 = objc_msgSend(sub_100136590(*(void **)(v0+ OBJC_IVAR___EmergencyWebRTCViewController_flashButton)), "constraintEqualToConstant:", 44.0);
  sub_10011AFD0();
  sub_10012B530(v1);
  v3 = objc_msgSend(sub_100136590(*(void **)(v0+ OBJC_IVAR___EmergencyWebRTCViewController_zoomButton)), "constraintEqualToConstant:", 34.0);
  sub_10011AFD0();
  sub_10012B524(v1);
  v4 = objc_msgSend(sub_100136590(*(void **)(v0+ OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton)), "constraintEqualToConstant:", 44.0);
  sub_10011AFD0();
  sub_10012B518(v1);
  v5 = *(void **)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_flashButtonWidthConstraint);
  if (v5)
  {
    v6 = *(void **)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonWidthConstraint);
    if (v6)
    {
      v7 = *(void **)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWidthConstraint);
      if (v7)
      {
        v8 = (void *)objc_opt_self(NSLayoutConstraint);
        v9 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
        v10 = sub_100109754(v9, 56);
        *(_OWORD *)(v10 + 16) = xmmword_100241370;
        *(_QWORD *)(v10 + 32) = v5;
        *(_QWORD *)(v10 + 40) = v6;
        *(_QWORD *)(v10 + 48) = v7;
        specialized Array._endMutation()(v10, v11);
        sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
        v12 = v5;
        v13 = v6;
        v14 = v7;
        v15 = v12;
        v16 = v13;
        v17 = v14;
        isa = Array._bridgeToObjectiveC()().super.isa;
        sub_1001094F4();
        objc_msgSend(v8, "activateConstraints:", isa);

        sub_100136474(isa);
      }
    }
  }
}

void sub_10012C714()
{
  uint8_t *v0;
  void *v1;
  uint8_t *v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  Class isa;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  Class v59;
  uint64_t v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  id v67;
  void *v68;
  double v69;
  id v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  id v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  id v102;
  const char **v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  uint64_t v125;
  id v126;
  id v127;
  id v128;
  uint64_t v129;
  id v130;
  id v131;
  uint64_t v132;
  id v133;
  id v134;
  id v135;
  id v136;
  uint64_t v137;
  id v138;
  id v139;
  id v140;
  id v141;
  uint64_t v142;
  id v143;
  id v144;
  id v145;
  void *v146;
  void *v147;
  id v148;
  uint64_t v149;
  id v150;
  id v151;
  id v152;
  void *v153;
  void *v154;
  id v155;
  uint64_t v156;
  id v157;
  id v158;
  uint64_t v159;
  id v160;
  void *v161;
  id v162;
  void *v163;
  id v164;
  uint64_t v165;
  id v166;
  void *v167;
  void *v168;
  id v169;
  uint64_t v170;
  id v171;
  id v172;
  uint64_t v173;
  id v174;
  void *v175;
  void *v176;
  id v177;
  void *v178;
  id v179;
  uint64_t v180;
  id v181;
  void *v182;
  void *v183;
  id v184;
  uint64_t v185;
  id v186;
  id v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  id v191;
  id v192;
  id v193;
  uint64_t v194;
  id v195;
  id v196;
  id v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  id v205;
  void *v206;
  id v207;
  id v208;
  id v209;
  id v210;
  id v211;
  id v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  uint64_t v218;
  id v219;
  id v220;
  id v221;
  uint64_t v222;
  id v223;
  void *v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  id v231;
  id v232;
  id v233;
  void *v234;
  id v235;
  id v236;
  uint64_t v237;
  id v238;
  id v239;
  id v240;
  id v241;
  uint64_t v242;
  id v243;
  id v244;
  id v245;
  id v246;
  void *v247;
  id v248;
  id v249;
  id v250;
  void *v251;
  id v252;
  id v253;
  id v254;
  id v255;
  id v256;
  id v257;
  id v258;
  void *v259;
  id v260;
  uint64_t v261;
  id v262;
  id v263;
  id v264;
  id v265;
  uint64_t v266;
  id v267;
  void *v268;
  id v269;
  id v270;
  id v271;
  void *v272;
  id v273;
  id v274;
  id v275;
  id v276;
  id v277;
  id v278;
  void *v279;
  id v280;
  id v281;
  Class v282;
  void *v283;
  void *v284;
  void *v285;
  id v286;
  id v287;
  id v288;
  uint64_t v289;
  id v290;
  id v291;
  uint64_t v292;
  id v293;
  id v294;
  uint64_t v295;
  os_log_type_t v296;
  _WORD *v297;
  uint64_t v298;
  void *v299;
  uint64_t v300;
  void *v301;
  char *v302;
  id v303;
  id v304;
  void *v305;
  NSObject *v306;

  if (!*(_QWORD *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView]
    || (v2 = v0, (v3 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView]) == 0))
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v295 = sub_100109570();
    v306 = sub_10011ADC0(v295, (uint64_t)&unk_1002E2CC8);
    v296 = static os_log_type_t.default.getter();
    if (sub_10013618C(v306))
    {
      v297 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v297);
      sub_10011AE18((void *)&_mh_execute_header, v306, v296, "EnhancedEmergency: Trying to set up constraint for webView, but view is nil", v0);
      sub_100109440((uint64_t)v0);
    }
    goto LABEL_37;
  }
  objc_opt_self(UIScreen);
  v4 = sub_1001365F8();
  v304 = v3;
  v5 = sub_10010BC5C((uint64_t)v304, "mainScreen");
  objc_msgSend(v5, "bounds");
  v7 = v6;
  v9 = v8;

  if (v9 > v7)
    v10 = v9;
  else
    v10 = v7;
  if (v7 >= v9)
    v11 = v9;
  else
    v11 = v7;
  v12 = (void *)objc_opt_self(PHUIConfiguration);
  objc_msgSend(v12, "inComingCallAndInCallControlsBottomPaddingRatio");
  v14 = v13;
  if (qword_1002D72C0 != -1)
    swift_once(&qword_1002D72C0, sub_10012818C);
  v15 = *(double *)&qword_1002E2DC8;
  objc_msgSend(v12, "inCallControlButtonSizeRatio");
  v17 = v16;
  objc_msgSend(v12, "inCallControlButtonVerticalSpacingRatio");
  v19 = v18;
  v302 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_zoomButton;
  v20 = sub_1001362D0(*(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_zoomButton]);
  v21 = sub_10010E310((uint64_t)v20, "view");
  if (!v21)
  {
    __break(1u);
    goto LABEL_39;
  }
  v22 = v21;
  v23 = sub_1001362D0(v21);
  sub_10011B028();
  v24 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v1, -(v10 * v14 + v11 * v17 + v11 * v17 + v10 * v19 + 26.0));
  sub_10010E338();

  v25 = v22;
  sub_1001285DC((uint64_t)v22);
  v26 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v27 = sub_100109754(v26, 64);
  *(_OWORD *)(v27 + 16) = xmmword_100241800;
  v28 = objc_msgSend(sub_10011AF6C(v27, "heightAnchor"), "constraintEqualToConstant:", v10 * 0.39);
  sub_10011B028();
  *(_QWORD *)(v27 + 32) = v1;
  v30 = objc_msgSend(sub_10011AF6C(v29, "widthAnchor"), "constraintEqualToConstant:", v11 * 0.39);
  sub_10011B028();
  *(_QWORD *)(v27 + 40) = v1;
  v32 = sub_10011AF6C(v31, "topAnchor");
  v33 = sub_10010E310((uint64_t)v32, "view");
  if (!v33)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v34 = v33;
  v299 = v25;
  v35 = objc_msgSend(v33, "topAnchor");

  v36 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v35, 22.0);
  sub_10011B028();

  *(_QWORD *)(v27 + 48) = v34;
  v38 = sub_10011AF6C(v37, "centerXAnchor");
  v39 = sub_10010E310((uint64_t)v38, "view");
  if (!v39)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "centerXAnchor");

  v42 = objc_msgSend(v38, "constraintEqualToAnchor:", v41);
  sub_10011B028();

  *(_QWORD *)(v27 + 56) = v40;
  sub_100136698();
  sub_10012B53C(v27);
  v303 = (id)sub_100136690();
  v43 = *(_QWORD *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_webViewWaitingStateConstraints];
  sub_1001364E4((uint64_t)v303, (unint64_t *)&qword_1002DB440);
  swift_bridgeObjectRetain(v43);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v43);
  sub_100136274(v303, "activateConstraints:");

  v300 = v26;
  v45 = sub_100109754(v26, 64);
  *(_OWORD *)(v45 + 16) = xmmword_100241800;
  v46 = OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView;
  v47 = objc_msgSend(*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView], "topAnchor");
  v48 = v4;
  v49 = sub_10011AF6C((uint64_t)v47, "topAnchor");
  v50 = objc_msgSend(v47, "constraintEqualToAnchor:", v49);
  sub_100136818();

  *(_QWORD *)(v45 + 32) = v4;
  v51 = sub_1001362D0(*(void **)&v2[v46]);
  v52 = sub_100136368((uint64_t)v51, "bottomAnchor");
  v53 = sub_100136250((uint64_t)v52);
  sub_10013626C();

  *(_QWORD *)(v45 + 40) = v49;
  v54 = sub_100136670(*(void **)&v2[v46]);
  v55 = sub_100136368((uint64_t)v54, "leadingAnchor");
  v56 = sub_100136250((uint64_t)v55);
  sub_10013626C();

  *(_QWORD *)(v45 + 48) = v49;
  v57 = sub_100136368((uint64_t)objc_msgSend(*(id *)&v2[v46], "trailingAnchor"), "trailingAnchor");
  v58 = sub_100136250((uint64_t)v57);
  sub_10013626C();

  *(_QWORD *)(v45 + 56) = v49;
  sub_100136698();
  v59 = Array._bridgeToObjectiveC()().super.isa;
  sub_1001094F4();
  objc_msgSend(v303, "activateConstraints:", v59);

  sub_10012C500();
  v60 = sub_100109754(v300, 432);
  *(_OWORD *)(v60 + 16) = xmmword_100241F80;
  v61 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollView];
  v62 = sub_10011AED4(v60, "topAnchor");
  v301 = v48;
  v63 = sub_100136368((uint64_t)v62, "bottomAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:constant:", v63, 24.0);
  sub_10013626C();

  *(_QWORD *)(v60 + 32) = v49;
  v66 = sub_10011AED4(v65, "leadingAnchor");
  v67 = sub_10010E310((uint64_t)v66, "view");
  if (!v67)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v68 = v67;
  v69 = v15 + v15;
  v70 = sub_100136670(v67);

  v71 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v70, v15 + v15);
  *(_QWORD *)(v60 + 40) = v71;
  v73 = sub_10011AED4(v72, "trailingAnchor");
  v74 = sub_10010E310((uint64_t)v73, "view");
  if (!v74)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v75 = v74;
  v76 = sub_1001364D4(v74);

  v77 = objc_msgSend(v73, "constraintEqualToAnchor:constant:", v76, -v69);
  *(_QWORD *)(v60 + 48) = v77;
  v79 = sub_10013619C(v78, "topAnchor");
  v80 = sub_10011AED4((uint64_t)v79, "contentLayoutGuide");
  v81 = objc_msgSend(v80, "topAnchor");
  sub_100136580();
  v82 = sub_1001360B0(v79, "constraintEqualToAnchor:");
  sub_10013626C();

  *(_QWORD *)(v60 + 56) = v80;
  v84 = sub_10013619C(v83, "leadingAnchor");
  v85 = sub_10011AED4((uint64_t)v84, "contentLayoutGuide");
  v86 = sub_1001367CC(v85);
  sub_10013626C();
  v87 = sub_1001361F4();
  sub_1001363A4();

  *(_QWORD *)(v60 + 64) = v85;
  v89 = sub_10013619C(v88, "trailingAnchor");
  v90 = sub_10011AED4((uint64_t)v89, "contentLayoutGuide");
  v91 = sub_1001364D4(v90);
  sub_10013626C();
  v92 = sub_1001361F4();
  sub_1001363A4();

  *(_QWORD *)(v60 + 72) = v90;
  v94 = sub_10013619C(v93, "bottomAnchor");
  v95 = sub_10011AED4((uint64_t)v94, "contentLayoutGuide");
  v96 = sub_1001362D0(v95);
  sub_10013626C();
  v97 = sub_1001361F4();
  sub_1001363A4();

  *(_QWORD *)(v60 + 80) = v95;
  v99 = sub_10013619C(v98, "widthAnchor");
  v305 = v61;
  v100 = sub_10011AED4((uint64_t)v99, "frameLayoutGuide");
  v101 = sub_100136590(v100);
  sub_10013626C();
  v102 = sub_1001361F4();
  sub_1001363A4();

  *(_QWORD *)(v60 + 88) = v100;
  v103 = (const char **)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel;
  v104 = objc_retainAutoreleasedReturnValue(sub_10013628C(*(void **)((char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel
                                                                   + (_QWORD)v2)));
  v105 = sub_10013619C((uint64_t)v104, "topAnchor");
  v106 = sub_1001360A4((uint64_t)v105, "constraintEqualToAnchor:");
  sub_100136424();

  *(_QWORD *)(v60 + 96) = &selRef_isUserInterfaceShowing;
  v107 = sub_100136670(*(void **)((char *)v103 + (_QWORD)v2));
  v108 = sub_10013619C((uint64_t)v107, "leadingAnchor");
  v109 = sub_1001360A4((uint64_t)v108, "constraintEqualToAnchor:");
  sub_100136424();

  *(_QWORD *)(v60 + 104) = &selRef_isUserInterfaceShowing;
  v110 = sub_10013619C((uint64_t)objc_msgSend(*(id *)((char *)v103 + (_QWORD)v2), "trailingAnchor"), "trailingAnchor");
  v111 = sub_1001360A4((uint64_t)v110, "constraintEqualToAnchor:");
  sub_100136424();

  *(_QWORD *)(v60 + 112) = &selRef_isUserInterfaceShowing;
  v112 = OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel;
  v113 = objc_msgSend(*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel], "topAnchor");
  v114 = sub_100136380();
  v115 = objc_msgSend(v113, "constraintEqualToAnchor:constant:", v114, 6.0);
  sub_100136424();

  *(_QWORD *)(v60 + 120) = &selRef_isUserInterfaceShowing;
  v116 = sub_100136670(*(void **)&v2[v112]);
  v117 = sub_10013619C((uint64_t)v116, "leadingAnchor");
  v118 = sub_1001360A4((uint64_t)v117, "constraintEqualToAnchor:");
  sub_100136424();

  *(_QWORD *)(v60 + 128) = &selRef_isUserInterfaceShowing;
  v119 = sub_1001364D4(*(void **)&v2[v112]);
  v120 = sub_10013619C((uint64_t)v119, "trailingAnchor");
  v121 = sub_1001360A4((uint64_t)v120, "constraintEqualToAnchor:");
  sub_100136424();

  *(_QWORD *)(v60 + 136) = &selRef_isUserInterfaceShowing;
  v122 = sub_10013639C(*(void **)&v2[v112]);
  v123 = sub_10013619C((uint64_t)v122, v103[460]);
  v124 = sub_1001360A4((uint64_t)v123, "constraintEqualToAnchor:");

  *(_QWORD *)(v60 + 144) = v124;
  v126 = sub_10010A1B8(v125, v103[460]);
  v127 = sub_10010E310((uint64_t)v126, "view");
  if (!v127)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v128 = objc_msgSend(v127, "safeAreaLayoutGuide");
  sub_100136580();
  v130 = sub_100136368(v129, v103[460]);
  sub_1001363A4();
  v131 = objc_msgSend(v126, "constraintEqualToAnchor:constant:", v123, -16.0);
  sub_1001363D8();

  *(_QWORD *)(v60 + 152) = v122;
  v133 = sub_10010A1B8(v132, "leadingAnchor");
  v134 = sub_10010E310((uint64_t)v133, "view");
  if (!v134)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v135 = objc_msgSend(v134, "leadingAnchor");
  sub_100136580();
  v136 = sub_1001360B0(v133, "constraintEqualToAnchor:");
  sub_100136818();

  *(_QWORD *)(v60 + 160) = v123;
  v138 = sub_10010A1B8(v137, "trailingAnchor");
  v139 = sub_10010E310((uint64_t)v138, "view");
  if (!v139)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v140 = objc_msgSend(v139, "trailingAnchor");
  sub_100136580();
  v141 = sub_1001360B0(v138, "constraintEqualToAnchor:");
  sub_100136818();

  *(_QWORD *)(v60 + 168) = v123;
  v143 = sub_10010A1B8(v142, "topAnchor");
  v144 = objc_msgSend(v305, "bottomAnchor");
  v145 = objc_msgSend(v143, "constraintEqualToAnchor:constant:", v144, 12.0);
  sub_1001363A4();

  *(_QWORD *)(v60 + 176) = v123;
  sub_100128600();
  v147 = v146;
  v148 = sub_10013628C(v146);
  sub_10010E3B8();
  v150 = sub_10010E310(v149, "view");
  if (!v150)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v151 = sub_10013628C(v150);
  sub_1001363D8();
  v152 = -[uint8_t constraintEqualToAnchor:constant:](v2, "constraintEqualToAnchor:constant:", v147, v10 * v14);
  sub_100135FF8();

  *(_QWORD *)(v60 + 184) = v123;
  sub_100128600();
  v154 = v153;
  v155 = sub_10013642C(v153);
  sub_10010E3B8();
  v157 = sub_10010E310(v156, "view");
  if (!v157)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v158 = sub_10013642C(v157);
  sub_1001363D8();
  v160 = sub_10011AE94(v159, "constraintEqualToAnchor:");
  sub_100135FF8();

  *(_QWORD *)(v60 + 192) = v123;
  sub_100136514();
  v162 = sub_10013628C(v161);
  sub_10010E338();
  sub_10013652C();
  v164 = sub_1001362D0(v163);
  sub_100135FF8();
  v166 = sub_1001360A4(v165, "constraintEqualToAnchor:");
  sub_10010E3B8();

  *(_QWORD *)(v60 + 200) = v2;
  sub_100128614();
  v168 = v167;
  v169 = sub_10013642C(v167);
  sub_10010E3B8();
  v171 = sub_10010E310(v170, "view");
  if (!v171)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v172 = sub_10013642C(v171);
  sub_1001363D8();
  v174 = sub_10011AE94(v173, "constraintEqualToAnchor:");
  sub_100135FF8();

  *(_QWORD *)(v60 + 208) = v123;
  sub_100128628();
  v176 = v175;
  v177 = sub_10013628C(v175);
  sub_10010E338();
  sub_100136514();
  v179 = sub_1001362D0(v178);
  sub_100135FF8();
  v181 = sub_1001360A4(v180, "constraintEqualToAnchor:");
  sub_10010E3B8();

  *(_QWORD *)(v60 + 216) = v176;
  sub_100128628();
  v183 = v182;
  v184 = sub_10013642C(v182);
  sub_10010E3B8();
  v186 = sub_10010E310(v185, "view");
  if (!v186)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v187 = sub_10013642C(v186);
  sub_1001363D8();
  v189 = sub_10011AE94(v188, "constraintEqualToAnchor:");
  sub_100135FF8();

  *(_QWORD *)(v60 + 224) = v123;
  v190 = OBJC_IVAR___EmergencyWebRTCViewController_flashButton;
  v191 = objc_msgSend(*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flashButton], "centerYAnchor");
  sub_10013652C();
  v193 = objc_msgSend(v192, "bottomAnchor");
  sub_100135FF8();
  v195 = sub_1001360A4(v194, "constraintEqualToAnchor:");
  sub_10010E3B8();

  *(_QWORD *)(v60 + 232) = v2;
  v196 = sub_1001362E8(*(void **)&v2[v190]);
  v197 = sub_10010E310((uint64_t)v196, "view");
  if (!v197)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v198 = sub_1001362E8(v197);
  sub_1001363D8();
  v199 = objc_msgSend(v196, "constraintEqualToAnchor:constant:", 0x1002C2000, v15 + v15);
  sub_100135FF8();

  *(_QWORD *)(v60 + 240) = v123;
  v200 = objc_msgSend(*(id *)&v2[v190], "heightAnchor");
  v201 = objc_msgSend((id)sub_1001365EC(), "widthAnchor");
  v202 = sub_100135ED8((uint64_t)v201);
  sub_100135FF8();

  *(_QWORD *)(v60 + 248) = v123;
  v203 = v190;
  v204 = OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView;
  v205 = sub_1001367CC(*(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView]);
  v206 = (void *)sub_1001367B4();
  v207 = sub_1001367CC(v206);
  v208 = sub_100135ED8((uint64_t)v207);
  sub_100135FF8();

  *(_QWORD *)(v60 + 256) = v123;
  v209 = objc_msgSend(*(id *)&v2[v204], "trailingAnchor");
  v210 = sub_100136600();
  v211 = sub_100135ED8((uint64_t)v210);
  sub_100135FF8();

  *(_QWORD *)(v60 + 264) = v123;
  v212 = sub_10013628C(*(void **)&v2[v204]);
  v213 = sub_10013628C(*(void **)&v2[v203]);
  v214 = sub_100135ED8((uint64_t)v213);
  sub_100135FF8();

  *(_QWORD *)(v60 + 272) = v123;
  v215 = objc_msgSend(*(id *)&v2[v204], "bottomAnchor");
  v298 = v203;
  v216 = sub_10013639C(*(void **)&v2[v203]);
  v217 = sub_100135ED8((uint64_t)v216);
  sub_100135FF8();

  *(_QWORD *)(v60 + 280) = v123;
  v218 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
  v219 = objc_msgSend(*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton], "heightAnchor");
  v220 = objc_msgSend((id)sub_1001367B4(), "widthAnchor");
  v221 = sub_100135ED8((uint64_t)v220);
  sub_100135FF8();

  *(_QWORD *)(v60 + 288) = v123;
  v222 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView;
  v223 = sub_1001362E8(*(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView]);
  v224 = (void *)sub_1001367B4();
  v225 = sub_1001362E8(v224);
  v226 = sub_100135ED8((uint64_t)v225);
  sub_100135FF8();

  *(_QWORD *)(v60 + 296) = v123;
  v227 = objc_msgSend(*(id *)&v2[v222], "trailingAnchor");
  v228 = sub_100136600();
  v229 = sub_100135ED8((uint64_t)v228);
  sub_100135FF8();

  *(_QWORD *)(v60 + 304) = v123;
  v230 = sub_10013628C(*(void **)&v2[v222]);
  v231 = sub_10013628C(*(void **)&v2[v218]);
  v232 = sub_100135ED8((uint64_t)v231);
  sub_100135FF8();

  *(_QWORD *)(v60 + 312) = v123;
  v233 = sub_100136380();
  v234 = (void *)sub_1001367B4();
  v235 = sub_10013639C(v234);
  v236 = sub_100135ED8((uint64_t)v235);
  sub_100135FF8();

  *(_QWORD *)(v60 + 320) = v123;
  v237 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel;
  v238 = sub_10011AED4((uint64_t)objc_msgSend(*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel], "centerXAnchor"), "centerXAnchor");
  v239 = sub_100135ED8((uint64_t)v238);
  sub_100135FF8();

  *(_QWORD *)(v60 + 328) = v123;
  v240 = sub_10011AED4((uint64_t)objc_msgSend(*(id *)&v2[v237], "centerYAnchor"), "centerYAnchor");
  v241 = sub_100135ED8((uint64_t)v240);
  sub_100135FF8();

  *(_QWORD *)(v60 + 336) = v123;
  v242 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView;
  v243 = objc_msgSend(*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView], "topAnchor");
  v244 = objc_msgSend((id)sub_1001365EC(), "topAnchor");
  v245 = sub_10011AE94((uint64_t)v244, "constraintEqualToAnchor:constant:");
  sub_100135FF8();

  *(_QWORD *)(v60 + 344) = v123;
  v246 = sub_1001362E8(*(void **)&v2[v242]);
  v247 = (void *)sub_1001365EC();
  v248 = sub_1001362E8(v247);
  v249 = sub_10011AE94((uint64_t)v248, "constraintEqualToAnchor:constant:");
  sub_100135FF8();

  *(_QWORD *)(v60 + 352) = v123;
  v250 = sub_100136498(*(void **)&v2[v242]);
  v251 = (void *)sub_1001365EC();
  v252 = sub_100136498(v251);
  v253 = sub_10011AE94((uint64_t)v252, "constraintEqualToAnchor:constant:");
  sub_100135FF8();

  *(_QWORD *)(v60 + 360) = v123;
  v254 = objc_msgSend(*(id *)&v2[v242], "bottomAnchor");
  v255 = objc_msgSend((id)sub_1001365EC(), "bottomAnchor");
  v256 = sub_10011AE94((uint64_t)v255, "constraintEqualToAnchor:constant:");
  sub_100135FF8();

  *(_QWORD *)(v60 + 368) = v123;
  *(_QWORD *)(v60 + 376) = v299;
  v306 = v299;
  v257 = sub_10010BC5C((uint64_t)v306, "centerXAnchor");
  v258 = sub_10010E310((uint64_t)v257, "view");
  if (!v258)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v259 = v258;
  v260 = objc_msgSend(v258, "centerXAnchor");

  v262 = sub_10011AE94(v261, "constraintEqualToAnchor:");
  sub_100135FF8();

  *(_QWORD *)(v60 + 384) = v259;
  v263 = objc_msgSend(*(id *)&v302[(_QWORD)v2], "heightAnchor");
  v264 = objc_msgSend((id)sub_100136610(), "widthAnchor");
  v265 = sub_100135ED8((uint64_t)v264);
  sub_100135FF8();

  *(_QWORD *)(v60 + 392) = v259;
  v266 = OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView;
  v267 = sub_1001362E8(*(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView]);
  v268 = (void *)sub_100136610();
  v269 = sub_1001362E8(v268);
  v270 = sub_100135ED8((uint64_t)v269);
  sub_100135FF8();

  *(_QWORD *)(v60 + 400) = v259;
  v271 = sub_100136498(*(void **)&v2[v266]);
  v272 = (void *)sub_100136610();
  v273 = sub_100136498(v272);
  v274 = sub_100135ED8((uint64_t)v273);
  sub_100135FF8();

  *(_QWORD *)(v60 + 408) = v259;
  v275 = objc_msgSend(*(id *)&v2[v266], "topAnchor");
  v276 = objc_msgSend((id)sub_100136610(), "topAnchor");
  v277 = sub_100135ED8((uint64_t)v276);
  sub_100135FF8();

  *(_QWORD *)(v60 + 416) = v259;
  v278 = sub_100136380();
  v279 = (void *)sub_100136610();
  v280 = sub_10013639C(v279);
  v281 = sub_100135ED8((uint64_t)v280);
  sub_100135FF8();

  *(_QWORD *)(v60 + 424) = v259;
  sub_100136698();
  v282 = Array._bridgeToObjectiveC()().super.isa;
  sub_1001094F4();
  objc_msgSend(v303, "activateConstraints:", v282);

  v283 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTopConstraint];
  if (v283)
    sub_100136244(v283);
  v284 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTrailingConstraint];
  if (v284)
    sub_100136244(v284);
  v285 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_viewControllerWaitingStateHeightConstraint];
  if (v285)
    sub_100136244(v285);
  v286 = sub_1001362D0(*(void **)&v2[v218]);
  v287 = sub_1001362D0(*(void **)&v2[v298]);
  v288 = sub_10011AE94((uint64_t)v287, "constraintEqualToAnchor:");
  sub_100136680();

  v289 = sub_1001367DC();
  sub_10012B500(v289);
  v290 = sub_1001364D4(*(void **)&v2[v218]);
  v291 = sub_10010E310((uint64_t)v290, "view");
  if (v291)
  {
    v292 = (uint64_t)v291;
    v293 = sub_1001364D4(v291);
    sub_10011B028();
    v294 = objc_msgSend(v290, "constraintEqualToAnchor:constant:", v302, -v69);
    sub_10010E338();

    sub_10012B50C(v292);
LABEL_37:

    return;
  }
LABEL_52:
  __break(1u);
}

void sub_10012DF0C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v1, v2);
  sub_100136038();
  v3 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v3)
  {
    v4 = v3;
    sub_100136214();
    v5 = sub_100136194();
    sub_100135F48(v5);
    v6 = sub_100136798();
    v7 = v0;
    v8 = static MainActor.shared.getter(v7);
    v9 = (_QWORD *)sub_100109754((uint64_t)&unk_100289D40, 48);
    v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v6;
    v9[5] = v7;
    sub_100136294();
    swift_release(v10);

  }
  sub_1001360E4();
}

uint64_t sub_10012DFC4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(void);

  v5[8] = a5;
  v7 = type metadata accessor for MainActor(0);
  v5[9] = v7;
  v5[10] = static MainActor.shared.getter(v7);
  v8 = *(int **)((swift_isaMask & *a4) + 0x208);
  v11 = (uint64_t (*)(void))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  v5[11] = v9;
  *v9 = v5;
  v9[1] = sub_10012E054;
  return v11();
}

uint64_t sub_10012E054(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;

  v8 = (_QWORD *)*v2;
  v4 = v8;
  sub_100136324(&v8);
  v4[12] = v1;
  swift_task_dealloc(v5);
  v6 = v4[9];
  if (!v1)
    v4[13] = a1;
  dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return sub_100110E74();
}

uint64_t sub_10012E0F0()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  void *v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = *(NSObject **)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 80));
  v3 = *(Class *)((char *)&v2->isa + direct field offset for SOSUIWebtRTCCapabilities.zoom);
  v4 = v3;

  if (v3)
  {
    v5 = *(double *)&v4[direct field offset for SOSUIWebtRTCDoubleRange.min];
    v6 = *(double *)&v4[direct field offset for SOSUIWebtRTCDoubleRange.max];
    v7 = v6;
    v8 = v5;
  }
  else
  {
    v7 = 0.0;
    v6 = -1.0;
    v5 = -1.0;
    v8 = 0.0;
  }
  v9 = *(_QWORD *)(v0 + 64);
  v10 = OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine;
  v11 = *(double *)(*(_QWORD *)(v9 + OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine)
                  + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v12 = sub_100109570();
  sub_10011ADC0(v12, (uint64_t)&unk_1002E2CC8);
  v13 = sub_10011ADDC();
  if (sub_10011AF5C(v13))
  {
    v14 = sub_1001094C8(32);
    *(_DWORD *)v14 = 134218496;
    *(double *)(v0 + 40) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v14 + 4, v14 + 12);
    *(_WORD *)(v14 + 12) = 2048;
    *(double *)(v0 + 48) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v14 + 14, v14 + 22);
    *(_WORD *)(v14 + 22) = 2048;
    *(double *)(v0 + 56) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v14 + 24, v14 + 32);
    _os_log_impl((void *)&_mh_execute_header, v2, v1, "EnhancedEmergency: min support zoom is %f, max support zoom is %f, current zoom level is %f", (uint8_t *)v14, 0x20u);
    sub_100109440(v14);
  }

  if (v3 && v8 > 0.0 && v7 > 0.0 && v8 < v7 && v8 <= v11 && v11 <= v7)
  {
    *(double *)(*(_QWORD *)(v9 + v10)
              + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_minZoom) = round(v8 * 10.0) / 10.0;
    *(double *)(*(_QWORD *)(v9 + v10)
              + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_maxZoom) = round(v7 * 10.0) / 10.0;
    *(double *)(*(_QWORD *)(v9 + v10)
              + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_midZoom) = round(v11 * 10.0) / 10.0;
    *(_BYTE *)(*(_QWORD *)(v9 + v10)
             + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_isZoomSupported) = 1;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0xE000000000000000;
    Double.write<A>(to:)(v0 + 16, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    sub_100136390();
    v16 = *(_QWORD *)(v0 + 24);
    sub_10012E4E8(*(_QWORD *)(v0 + 16), v16);

    swift_bridgeObjectRelease(v16);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10012E3C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_100135FA8();
  swift_release(*(_QWORD *)(v0 + 80));
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v1 = *(void **)(v0 + 96);
  v2 = sub_100109570();
  sub_10013605C(v2, (uint64_t)&unk_1002E2CC8);
  sub_100110FE8();
  sub_100109724();
  v3 = sub_1001096F0();
  if (sub_10011AF5C(v3))
  {
    v4 = sub_1001094C8(12);
    v5 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v6 = sub_10013612C();
    *(_QWORD *)(v0 + 32) = v6;
    sub_100136050(v0 + 32, v0 + 40);
    *v5 = v6;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: can't configure zoom, error: %@");
    v9 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v9);
    sub_100109440((uint64_t)v5);
    sub_100109440(v4);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_10012E4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  NSString *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;

  v3 = v2;
  v6 = sub_1001085C0((uint64_t *)&unk_1002DC250);
  inited = swift_initStackObject(v6, &v17);
  *(_OWORD *)(inited + 16) = xmmword_100241F90;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v8 = sub_10011ADD4(inited, &qword_1002D8DD0, UIFont_ptr);
  swift_bridgeObjectRetain(a2);
  v9 = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption2, UIFontWeightSemibold);
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  sub_100136690();
  v10 = sub_10011AED4((uint64_t)NSForegroundColorAttributeName, "yellowColor");
  *(_QWORD *)(inited + 104) = sub_1001364E4((uint64_t)v10, &qword_1002D8DD8);
  *(_QWORD *)(inited + 80) = v10;
  type metadata accessor for Key(0);
  v12 = v11;
  v13 = sub_10012095C(&qword_1002DC260, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100241124);
  v14 = Dictionary.init(dictionaryLiteral:)(inited, v12, (char *)&type metadata for Any + 8, v13);
  v15 = objc_allocWithZone((Class)NSAttributedString);
  v16 = sub_1001355F4(a1, a2, v14);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton), "setAttributedTitle:forState:", v16, 0);

}

void sub_10012E698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  void *v39;
  void *v40;

  v23 = v22;
  v24 = OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView;
  v25 = *(void **)(v22 + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView);
  if (v25)
  {
    v26 = v25;
    sub_100170E84();

    v27 = *(void **)(v23 + v24);
    if (v27)
      sub_100136568(v27);
  }
  sub_1001285D0(0);
  sub_100136568(*(void **)((char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel + v23));
  sub_100136568(*(void **)(v23 + OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel));
  v28 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
  v29 = sub_100136568(*(void **)(v23 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton));
  v30 = sub_10010E310((uint64_t)v29, "view");
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v30, "addSubview:", *(_QWORD *)(v23 + v28));

    v39 = *(void **)(v23 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateBottomConstraint);
    if (v39)
      sub_100136244(v39);
    v40 = *(void **)(v23 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateTrailingConstraint);
    if (v40)
      LODWORD(v40) = sub_100136244(v40);
    sub_10012E788((int)v40, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);
  }
  else
  {
    __break(1u);
  }
}

void sub_10012E788(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  Class isa;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  id v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  Class v85;
  uint64_t v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;

  sub_100136544();
  v23 = *(void **)(v22 + OBJC_IVAR___EmergencyWebRTCViewController_webRTCView);
  if (!v23)
    return;
  v24 = v22;
  v25 = *(void **)(v22 + OBJC_IVAR___EmergencyWebRTCViewController_viewControllerWaitingStateHeightConstraint);
  v89 = v23;
  v26 = v23;
  if (v25)
    sub_1001360DC(v25, "setActive:");
  v27 = (void *)sub_100136690();
  v28 = *(_QWORD *)(v24 + OBJC_IVAR___EmergencyWebRTCViewController_webViewWaitingStateConstraints);
  sub_1001364E4((uint64_t)v27, (unint64_t *)&qword_1002DB440);
  swift_bridgeObjectRetain(v28);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v28);
  sub_100136274(v27, "deactivateConstraints:");

  v30 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v31 = sub_100109754(v30, 64);
  *(_OWORD *)(v31 + 16) = xmmword_100241800;
  v38 = sub_100136570(v31, "topAnchor", v32, v33, v34, v35, v36, v37, v89);
  v39 = sub_10010E310((uint64_t)v38, "view");
  if (!v39)
  {
    __break(1u);
    goto LABEL_13;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "topAnchor");
  sub_100136678();
  v43 = sub_1001360A4(v42, "constraintEqualToAnchor:");
  sub_10011B028();

  *(_QWORD *)(v31 + 32) = v40;
  v51 = sub_100136570(v44, "bottomAnchor", v45, v46, v47, v48, v49, v50, v90);
  v52 = sub_10010E310((uint64_t)v51, "view");
  if (!v52)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v53 = v52;
  v54 = objc_msgSend(v52, "bottomAnchor");
  sub_100136678();
  v56 = sub_1001360A4(v55, "constraintEqualToAnchor:");
  sub_10011B028();

  *(_QWORD *)(v31 + 40) = v53;
  v64 = sub_100136570(v57, "leadingAnchor", v58, v59, v60, v61, v62, v63, v91);
  v65 = sub_10010E310((uint64_t)v64, "view");
  if (!v65)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v66 = v65;
  v67 = objc_msgSend(v65, "leadingAnchor");
  sub_100136678();
  v69 = sub_1001360A4(v68, "constraintEqualToAnchor:");
  sub_10011B028();

  *(_QWORD *)(v31 + 48) = v66;
  v77 = sub_100136570(v70, "trailingAnchor", v71, v72, v73, v74, v75, v76, v92);
  v78 = sub_10010E310((uint64_t)v77, "view");
  if (!v78)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v79 = v78;
  v80 = objc_msgSend(v78, "trailingAnchor");
  sub_100136678();
  v82 = sub_1001360A4(v81, "constraintEqualToAnchor:");
  sub_10011B028();

  *(_QWORD *)(v31 + 56) = v79;
  sub_10013670C(v83, v84);
  v85 = Array._bridgeToObjectiveC()().super.isa;
  v86 = sub_1001094F4();
  sub_100136758(v86, "activateConstraints:");

  v87 = (void *)sub_100136790(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  if (v87)
  {
    v88 = v87;
    objc_msgSend(v87, "runAnimationToFullScreenWebView");
    swift_unknownObjectRelease(v88);
  }
  sub_1001360F4(v93);
}

void sub_10012EA78()
{
  NSObject *v0;
  os_log_type_t v1;
  unsigned int v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  unsigned int v6;
  uint64_t v7;

  v2 = objc_msgSend(*(id *)((char *)&v0->isa + OBJC_IVAR___EmergencyWebRTCViewController_flashButton), "isSelected");
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v3 = sub_100109570();
  sub_10011ADC0(v3, (uint64_t)&unk_1002E2CC8);
  v4 = sub_10011ADDC();
  if (sub_10010E390(v4))
  {
    v5 = (uint8_t *)sub_1001094C8(8);
    *(_DWORD *)v5 = 67109120;
    v6 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v6, &v7, v5 + 4, v5 + 8);
    _os_log_impl((void *)&_mh_execute_header, v0, v1, "EnhancedEmergency: flash button tapped, current selected state: %{BOOL}d", v5, 8u);
    sub_100109440((uint64_t)v5);
  }

  sub_100131770();
  sub_10012EBA8();
  sub_10013621C();
}

void sub_10012EBA8()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  id v20;
  int v21;
  void *v22;
  char **v23;
  id v24;
  void *v25;
  char **v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[12];
  int v33;

  sub_10010BC70();
  v2 = v1;
  sub_1001085C0((uint64_t *)&unk_1002D7F50);
  sub_100120AA0();
  v5 = __chkstk_darwin(v3, v4);
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v5, v8);
  v11 = &v32[-v10];
  v13 = __chkstk_darwin(v9, v12);
  v15 = &v32[-v14];
  __chkstk_darwin(v13, v16);
  v18 = &v32[-v17];
  v19 = OBJC_IVAR___EmergencyWebRTCViewController_flashButton;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_flashButton), "setSelected:", (v2 & 1) == 0);
  v20 = *(id *)(v0 + v19);
  sub_10010E3E0();
  type metadata accessor for UIButton.Configuration(0);
  v21 = sub_100136458((uint64_t)v18);
  v33 = v2;
  if (v21)
  {
    sub_1001367D4((uint64_t)v18);
    UIButton.configuration.setter(v7);

    sub_1001209C8((uint64_t)v18, (uint64_t *)&unk_1002D7F50);
  }
  else
  {
    v22 = (void *)objc_opt_self(UIColor);
    v23 = &selRef_systemBlackColor;
    if ((v2 & 1) != 0)
      v23 = &selRef_systemWhiteColor;
    UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v22, *v23));
    UIButton.configuration.setter(v18);

  }
  v24 = *(id *)(v0 + v19);
  sub_10010E3E0();
  if (sub_100136458((uint64_t)v15))
  {
    sub_1001367D4((uint64_t)v15);
    UIButton.configuration.setter(v7);

    sub_1001209C8((uint64_t)v15, (uint64_t *)&unk_1002D7F50);
  }
  else
  {
    v25 = (void *)objc_opt_self(UIColor);
    v26 = &selRef_clearColor;
    if ((v33 & 1) == 0)
      v26 = &selRef_systemWhiteColor;
    UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v25, *v26));
    UIButton.configuration.setter(v15);

  }
  v27 = *(id *)(v0 + v19);
  sub_10010E3E0();
  v28 = sub_100136458((uint64_t)v11);
  if ((_DWORD)v28)
  {
    sub_1001367D4((uint64_t)v11);
    UIButton.configuration.setter(v7);

    sub_1001209C8((uint64_t)v11, (uint64_t *)&unk_1002D7F50);
  }
  else
  {
    sub_10011ADD4(v28, &qword_1002DA660, UIImage_ptr);
    if ((v33 & 1) != 0)
    {
      sub_100136764();
    }
    else
    {
      sub_100136764();
      v29 = 0xD000000000000012;
    }
    sub_10017BD1C(v29, v30);
    UIButton.Configuration.image.setter(v31);
    UIButton.configuration.setter(v11);

  }
  sub_10010BC44();
}

void sub_10012EE74()
{
  os_log_type_t v0;
  uint8_t *v1;
  NSObject *v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  void *v21;
  NSObject *v22;

  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v4, v5);
  sub_100136038();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v6 = sub_100109570();
  sub_10011ADC0(v6, (uint64_t)&unk_1002E2CC8);
  v7 = sub_100136264();
  if (sub_1001360C0(v2))
  {
    v8 = (_WORD *)sub_1001094C8(2);
    sub_10011B070(v8);
    sub_10011AE18((void *)&_mh_execute_header, v2, (os_log_type_t)v7, "EnhancedEmergency: webview request to start streaming video", v3);
    sub_100109440((uint64_t)v3);
  }

  v11 = *(void **)&v1[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v11 && *(_QWORD *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_videoStreamingRequest])
  {
    v12 = v11;
    v13 = sub_1001365F8();
    sub_100136214();
    v14 = sub_100136194();
    sub_100135F48(v14);
    sub_1001364A0();
    sub_100136578();
    v15 = sub_100136330();
    v16 = (_QWORD *)sub_100109754((uint64_t)&unk_100289D18, 48);
    v16[2] = v15;
    v16[3] = &protocol witness table for MainActor;
    v16[4] = v7;
    v16[5] = v13;
    sub_100136294();
    swift_release(v17);

    sub_1001360E4();
  }
  else
  {
    v18 = Logger.logObject.getter(v9, v10);
    v19 = sub_10013643C(v18);
    if (sub_10013617C(v19))
    {
      v20 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v20);
      sub_10011AE18((void *)&_mh_execute_header, v22, v0, "EnhancedEmergency: trying to stream video, but webView or request is nil", v1);
      sub_100109440((uint64_t)v1);
    }
    v21 = (void *)sub_100136500();
    sub_100136074(v21);
  }
}

uint64_t sub_10012F014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[6] = v7;
  v5[7] = v8;
  return swift_task_switch(sub_10012F080, v7, v8);
}

uint64_t sub_10012F080(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = (_QWORD *)v1[3];
  v3 = sub_10010BC5C(a1, "streamingURL");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v1[8] = v6;
  v8 = sub_10010BC5C(v7, "token");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v1[9] = v11;
  v12 = (_QWORD *)sub_1001360C8(*(_QWORD *)((swift_isaMask & *v2) + 0x1C0));
  v1[10] = v12;
  *v12 = v1;
  v12[1] = sub_10012F15C;
  return v14(v4, v6, v9, v11);
}

uint64_t sub_10012F15C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_100136204();
  sub_100136324(v2);
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc(v3);
  if (!v1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
    sub_1001094F4();
  }
  return sub_100110E74();
}

uint64_t sub_10012F1BC()
{
  uint64_t v0;

  sub_1001367FC();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10012F1E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100135FA8();
  sub_1001367FC();
  sub_1001094F4();
  sub_1001096DC();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = *(void **)(v0 + 88);
  v3 = sub_100109570();
  sub_10013605C(v3, (uint64_t)&unk_1002E2CC8);
  sub_100110FE8();
  sub_100109724();
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v7 = sub_10013612C();
    sub_100135EBC(v7);
    *v6 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: can't stream video, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440(v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_10012F2F8()
{
  sub_1001309BC();
}

uint64_t sub_10012F31C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  v6 = type metadata accessor for MainActor(0);
  v4[3] = v6;
  v4[4] = static MainActor.shared.getter(v6);
  v7 = *(int **)((swift_isaMask & *a4) + 0x1D0);
  v10 = (uint64_t (*)(void))((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v4[5] = v8;
  *v8 = v4;
  v8[1] = sub_10012F3A8;
  return v10();
}

uint64_t sub_10012F3A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1001363F8();
  v3 = *(_QWORD *)(v2 + 40);
  *v4 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  v5 = swift_task_dealloc(v3);
  sub_1001362E0(v5, (uint64_t)&protocol witness table for MainActor);
  sub_1001363AC();
  return sub_1001093F4();
}

uint64_t sub_10012F410()
{
  uint64_t v0;

  sub_10013662C();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10012F434()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100135FA8();
  sub_10013662C();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = *(void **)(v0 + 48);
  v3 = sub_100109570();
  sub_10013605C(v3, (uint64_t)&unk_1002E2CC8);
  sub_100110FE8();
  sub_100109724();
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v7 = sub_10013612C();
    sub_100135EBC(v7);
    *v6 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: can't end video stream, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440(v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_10012F540(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  os_log_type_t v26;
  _WORD *v27;
  NSObject *v28;

  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v7, v8);
  sub_1001097B0();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v9 = sub_100109570();
  v10 = sub_10011ADC0(v9, (uint64_t)&unk_1002E2CC8);
  v11 = static os_log_type_t.default.getter();
  if (sub_10013661C(v11))
  {
    v12 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v12 = 0;
    sub_10011AE18((void *)&_mh_execute_header, v10, v4, "EnhancedEmergency: webview request to unpause streaming video", v12);
    sub_100109440((uint64_t)v12);
  }

  v15 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v15)
  {
    v16 = v15;
    sub_1001367A8();
    v17 = sub_100136194();
    sub_100135F6C(v3, v18, v19, v17);
    v20 = sub_1001364F0();
    v21 = v2;
    v22 = sub_100135B74(a1, a2);
    v23 = static MainActor.shared.getter(v22);
    v24 = (_QWORD *)sub_100109754((uint64_t)&unk_100289CC8, 64);
    v24[2] = v23;
    v24[3] = &protocol witness table for MainActor;
    v24[4] = v20;
    v24[5] = v21;
    v24[6] = a1;
    v24[7] = a2;
    sub_10011102C();
    swift_release(v25);

  }
  else
  {
    v28 = Logger.logObject.getter(v13, v14);
    v26 = static os_log_type_t.error.getter(v28);
    if (sub_10013618C(v28))
    {
      v27 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v27);
      sub_10011AE18((void *)&_mh_execute_header, v28, v26, "EnhancedEmergency: trying to unpause video stream, but webView is nil", (uint8_t *)v2);
      sub_100109440((uint64_t)v2);
    }

  }
}

uint64_t sub_10012F728(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(void);

  v7[4] = a6;
  v7[5] = a7;
  v7[3] = a5;
  v9 = type metadata accessor for MainActor(0);
  v7[6] = v9;
  v7[7] = static MainActor.shared.getter(v9);
  v10 = *(int **)((swift_isaMask & *a4) + 0x190);
  v13 = (uint64_t (*)(void))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc(v10[1]);
  v7[8] = v11;
  *v11 = v7;
  v11[1] = sub_10012F7BC;
  return v13();
}

uint64_t sub_10012F7BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1001363F8();
  v3 = *(_QWORD *)(v2 + 64);
  *v4 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  v5 = swift_task_dealloc(v3);
  sub_1001362E0(v5, (uint64_t)&protocol witness table for MainActor);
  sub_1001363AC();
  return sub_1001093F4();
}

uint64_t sub_10012F824()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *);

  sub_100136810(*(_QWORD *)(v0 + 56));
  v1 = (void *)sub_1001365E4(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  if (v1)
  {
    objc_msgSend(v1, "videoStreamingAboutToStart");
    v1 = (void *)sub_100136124();
  }
  v2 = *(void (**)(void *))(v0 + 32);
  if (v2)
    v2(v1);
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10012F880()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100135FA8();
  swift_release(*(_QWORD *)(v0 + 56));
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = *(void **)(v0 + 72);
  v3 = sub_100109570();
  sub_10013605C(v3, (uint64_t)&unk_1002E2CC8);
  sub_100110FE8();
  sub_100109724();
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v7 = sub_10013612C();
    sub_100135EBC(v7);
    *v6 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: can't unpause video stream, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440(v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_10012F990()
{
  NSObject *v0;
  os_log_type_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  sub_10010BC70();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v7, v8);
  sub_100136038();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v9 = sub_100109570();
  v10 = sub_10011ADC0(v9, (uint64_t)&unk_1002E2CC8);
  v11 = static os_log_type_t.default.getter();
  if (sub_10013661C(v11))
  {
    v12 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v12 = 0;
    sub_10011AE18((void *)&_mh_execute_header, v10, v1, "EnhancedEmergency: webview request to pause streaming video", v12);
    sub_100109440((uint64_t)v12);
  }

  v15 = OBJC_IVAR___EmergencyWebRTCViewController_webRTCView;
  v16 = *(Class *)((char *)&v0->isa + OBJC_IVAR___EmergencyWebRTCViewController_webRTCView);
  if (v16)
  {
    v17 = v16;
    sub_1001361A4();
    v18 = sub_100136194();
    sub_100135F48(v18);
    v19 = sub_1001364F0();
    v20 = sub_100135B74(v6, v4);
    v0 = static MainActor.shared.getter(v20);
    v21 = (_QWORD *)sub_100109754((uint64_t)&unk_100289CA0, 56);
    v21[2] = v0;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v19;
    v21[5] = v6;
    v21[6] = v4;
    sub_100136294();
    swift_release(v22);

  }
  else
  {
    Logger.logObject.getter(v13, v14);
    v23 = sub_1001096F0();
    if (sub_10010E390(v23))
    {
      v24 = (uint8_t *)sub_1001094C8(2);
      *(_WORD *)v24 = 0;
      sub_10011AE18((void *)&_mh_execute_header, v0, (os_log_type_t)v4, "EnhancedEmergency: trying to pause video stream, but webView is nil", v24);
      sub_100109440((uint64_t)v24);
    }

  }
  v25 = *(Class *)((char *)&v2->isa + v15);
  if (v25)
  {
    v26 = v25;
    sub_1001361A4();
    v27 = sub_100136194();
    sub_100135F48(v27);
    v28 = v0;
    v29 = static MainActor.shared.getter(v28);
    v30 = (_QWORD *)sub_100109754((uint64_t)&unk_100289C78, 40);
    v30[2] = v29;
    v30[3] = &protocol witness table for MainActor;
    v30[4] = v28;
    sub_100136294();
    swift_release(v31);

  }
  sub_10010BC44();
}

uint64_t sub_10012FB8C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(void);

  v6[3] = a5;
  v6[4] = a6;
  v8 = type metadata accessor for MainActor(0);
  v6[5] = v8;
  v6[6] = static MainActor.shared.getter(v8);
  v9 = *(int **)((swift_isaMask & *a4) + 0x180);
  v12 = (uint64_t (*)(void))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  v6[7] = v10;
  *v10 = v6;
  v10[1] = sub_10012FC1C;
  return v12();
}

uint64_t sub_10012FC1C()
{
  uint64_t v0;

  v0 = sub_100136010();
  sub_1001362E0(v0, (uint64_t)&protocol witness table for MainActor);
  sub_1001363AC();
  return sub_1001093F4();
}

uint64_t sub_10012FC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_100136810(*(_QWORD *)(v1 + 48));
  if (v0)
    (*(void (**)(uint64_t))(v1 + 24))(v2);
  return sub_100110E88(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_10012FCA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100135FA8();
  sub_1001365DC();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = *(void **)(v0 + 64);
  v3 = sub_100109570();
  sub_10013605C(v3, (uint64_t)&unk_1002E2CC8);
  sub_100110FE8();
  sub_100109724();
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v7 = sub_10013612C();
    sub_100135EBC(v7);
    *v6 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: can't pause video stream, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440(v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10012FDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[5] = v6;
  v4[6] = v7;
  return swift_task_switch(sub_10012FE18, v6, v7);
}

uint64_t sub_10012FE18()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_100136804();
  v3 = sub_100135FC4(0x564F5F4553554150, 0xED000059414C5245);
  v5 = v4;

  v0[7] = v5;
  v6 = (_QWORD *)sub_1001360C8(*(_QWORD *)((swift_isaMask & *v1) + 0x248));
  v0[8] = v6;
  *v6 = v0;
  v6[1] = sub_10012FEE8;
  return v8(v3, v5);
}

uint64_t sub_10012FEE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_100136204();
  sub_100136324(v2);
  *(_QWORD *)(v0 + 72) = v1;
  swift_task_dealloc(v3);
  if (!v1)
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return sub_100110E74();
}

uint64_t sub_10012FF44()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100135FA8();
  sub_10013662C();
  sub_1001094F4();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = *(void **)(v0 + 72);
  v3 = sub_100109570();
  sub_10013605C(v3, (uint64_t)&unk_1002E2CC8);
  sub_100110FE8();
  sub_100109724();
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v7 = sub_10013612C();
    sub_100135EBC(v7);
    *v6 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: can't set pause string, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440(v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100130058()
{
  NSObject *v0;
  NSObject *v1;
  uint8_t *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  _WORD *v28;
  void *v29;
  os_log_type_t v30;
  uint8_t *v31;
  NSObject *v32;
  NSObject *v33[2];

  v3 = v0;
  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v4, v5);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v8 = sub_100109570();
  sub_10011ADC0(v8, (uint64_t)&unk_1002E2CC8);
  v9 = sub_100136264();
  if (sub_1001360C0(v1))
  {
    v10 = (_WORD *)sub_1001094C8(2);
    sub_10011B070(v10);
    sub_10011AE18((void *)&_mh_execute_header, v1, v9, "EnhancedEmergency: webview request to start video preview", v2);
    sub_100109440((uint64_t)v2);
  }

  v13 = *(Class *)((char *)&v0->isa + OBJC_IVAR___EmergencyWebRTCViewController_webRTCView);
  if (v13)
  {
    v14 = v13;
    v15 = -[NSObject window](v14, "window");

    if (v15)
    {
      static TaskPriority.userInitiated.getter(v16);
      v18 = sub_100136194();
      sub_100135F6C((uint64_t)v7, v19, v20, v18);
      v21 = v14;
      v22 = v0;
      v23 = static MainActor.shared.getter(v22);
      v24 = (_QWORD *)sub_100109754((uint64_t)&unk_100289C50, 48);
      v24[2] = v23;
      v24[3] = &protocol witness table for MainActor;
      v24[4] = v21;
      v24[5] = v22;
      sub_10011102C();
      swift_release(v25);

    }
    else
    {
      Logger.logObject.getter(v16, v17);
      v30 = sub_10011ADDC();
      if (sub_100109560(v30))
      {
        v31 = (uint8_t *)sub_1001094C8(2);
        *(_WORD *)v31 = 0;
        sub_10011AE18((void *)&_mh_execute_header, v0, (os_log_type_t)v7, "EnhancedEmergency: webview window is nil, queue startVideoPreview request", v31);
        sub_100109440((uint64_t)v31);
        v32 = v14;
      }
      else
      {
        v32 = v0;
        v0 = v14;
      }

      *((_BYTE *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_hasPendingStartVideoPreviewRequest) = 1;
    }
    sub_1001360E4();
  }
  else
  {
    v26 = Logger.logObject.getter(v11, v12);
    v27 = sub_10013643C(v26);
    if (sub_10013617C(v27))
    {
      v28 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v28);
      sub_10011AE18((void *)&_mh_execute_header, v33[1], (os_log_type_t)v0, "EnhancedEmergency: trying to start video preview, but webView is nil", (uint8_t *)v0);
      sub_100109440((uint64_t)v0);
    }
    v29 = (void *)sub_100136500();
    sub_100136074(v29);
  }
}

uint64_t sub_1001302A0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(void);

  v5[5] = a4;
  v5[6] = a5;
  v7 = type metadata accessor for MainActor(0);
  v5[7] = v7;
  v5[8] = static MainActor.shared.getter(v7);
  v8 = *(int **)((swift_isaMask & *a4) + 0x1A8);
  v11 = (uint64_t (*)(void))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  v5[9] = v9;
  *v9 = v5;
  v9[1] = sub_100130330;
  return v11();
}

uint64_t sub_100130330()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)*v1;
  v2 = v7;
  sub_100136324(&v7);
  v2[10] = v0;
  v4 = swift_task_dealloc(v3);
  v2[11] = sub_1001362E0(v4, (uint64_t)&protocol witness table for MainActor);
  v2[12] = v5;
  return sub_100110E74();
}

uint64_t sub_1001303B0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  os_log_type_t v5;
  _BOOL4 v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v19;
  uint64_t v20;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  v3 = sub_1001366A0(v2, (uint64_t)&unk_1002E2CC8);
  Logger.logObject.getter(v3, v4);
  v5 = sub_10011ADDC();
  v6 = sub_10013618C(v0);
  v7 = *(char **)(v1 + 48);
  if (v6)
  {
    v8 = sub_1001094C8(22);
    *(_DWORD *)v8 = 134218240;
    *(_QWORD *)(v1 + 24) = *(_QWORD *)&v7[OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v8 + 4, v8 + 12);
    *(_WORD *)(v8 + 12) = 2048;
    *(_QWORD *)(v1 + 32) = *(_QWORD *)&v7[OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 32, v1 + 40, v8 + 14, v8 + 22);

    sub_1001364DC((void *)&_mh_execute_header, v0, v5, "EnhancedEmergency: startVideoPreview, setFrameRate:%f, setMaximumBitrate:%f", (uint8_t *)v8);
    sub_100109440(v8);
  }
  else
  {

  }
  v9 = (_QWORD *)sub_1001360C8(*(_QWORD *)((swift_isaMask & **(_QWORD **)(v1 + 40)) + 0x260));
  *(_QWORD *)(v1 + 104) = v9;
  *v9 = v1;
  v9[1] = sub_100130534;
  v17 = (uint64_t (*)(void))sub_1001365AC((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v19, v20);
  return v17();
}

uint64_t sub_100130534()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_100136204();
  sub_100136324(v2);
  *(_QWORD *)(v0 + 112) = v1;
  swift_task_dealloc(v3);
  return sub_100110E74();
}

uint64_t sub_100130584()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;

  v1 = (_QWORD *)sub_1001360C8(*(_QWORD *)((swift_isaMask & **(_QWORD **)(v0 + 40)) + 0x240));
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = sub_1001305F4;
  v9 = (uint64_t (*)(void))sub_1001365AC((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  return v9();
}

uint64_t sub_1001305F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_100136204();
  sub_100136324(v2);
  *(_QWORD *)(v0 + 128) = v1;
  swift_task_dealloc(v3);
  return sub_100110E74();
}

uint64_t sub_100130644()
{
  uint64_t v0;

  sub_10013646C();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100130668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_100135FA8();
  sub_10013646C();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  v3 = (void *)sub_100108664(v2, (uint64_t)&unk_1002E2CC8);
  sub_1001360B8();
  v4 = sub_1001360B8();
  Logger.logObject.getter(v4, v5);
  v6 = sub_1001096F0();
  if (sub_10011AF5C(v6))
  {
    v7 = sub_1001094C8(12);
    v8 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v9 = sub_10013612C();
    sub_100135EBC(v9);
    *v8 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: can't start video preview, error: %@");
    v12 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v12);
    sub_100109440((uint64_t)v8);
    sub_100109440(v7);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100130778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_100135FA8();
  sub_10013646C();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  v3 = (void *)sub_100108664(v2, (uint64_t)&unk_1002E2CC8);
  sub_1001360B8();
  v4 = sub_1001360B8();
  Logger.logObject.getter(v4, v5);
  v6 = sub_1001096F0();
  if (sub_10011AF5C(v6))
  {
    v7 = sub_1001094C8(12);
    v8 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v9 = sub_10013612C();
    sub_100135EBC(v9);
    *v8 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: can't start video preview, error: %@");
    v12 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v12);
    sub_100109440((uint64_t)v8);
    sub_100109440(v7);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100130888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_100135FA8();
  sub_10013646C();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  v3 = (void *)sub_100108664(v2, (uint64_t)&unk_1002E2CC8);
  sub_1001360B8();
  v4 = sub_1001360B8();
  Logger.logObject.getter(v4, v5);
  v6 = sub_1001096F0();
  if (sub_10011AF5C(v6))
  {
    v7 = sub_1001094C8(12);
    v8 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v9 = sub_10013612C();
    sub_100135EBC(v9);
    *v8 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: can't start video preview, error: %@");
    v12 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v12);
    sub_100109440((uint64_t)v8);
    sub_100109440(v7);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100130998()
{
  sub_1001309BC();
}

void sub_1001309BC()
{
  uint8_t *v0;
  uint64_t v1;
  const char *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  os_log_type_t v25;
  _WORD *v26;
  NSObject *v27;

  sub_10010BC70();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v8, v9);
  sub_1001097B0();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v10 = sub_100109570();
  v11 = sub_10011ADC0(v10, (uint64_t)&unk_1002E2CC8);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v13 = 0;
    sub_10011AE18((void *)&_mh_execute_header, v11, v12, v7, v13);
    sub_100109440((uint64_t)v13);
  }

  v16 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v16)
  {
    v17 = v16;
    sub_1001367A8();
    v18 = sub_100136194();
    sub_100135F6C(v1, v19, v20, v18);
    v21 = sub_100136488();
    v22 = static MainActor.shared.getter(v21);
    v23 = (_QWORD *)sub_100109754(v5, 40);
    v23[2] = v22;
    v23[3] = &protocol witness table for MainActor;
    v23[4] = v21;
    sub_10011102C();
    swift_release(v24);

    sub_10010BC44();
  }
  else
  {
    v27 = Logger.logObject.getter(v14, v15);
    v25 = static os_log_type_t.error.getter(v27);
    if (sub_10013618C(v27))
    {
      v26 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v26);
      sub_10011AE18((void *)&_mh_execute_header, v27, v25, v3, v0);
      sub_100109440((uint64_t)v0);
    }

  }
}

uint64_t sub_100130B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 32) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100130BEC, v6, v7);
}

uint64_t sub_100130BEC()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v2;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(__n128))((swift_isaMask & *v1) + 0x118))(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100130D8C(double a1, double a2)
{
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v4 = OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate;
  *(double *)((char *)&v2->isa + OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate) = a1;
  v5 = OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate;
  *(double *)((char *)&v2->isa + OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate) = a2;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v6 = sub_100109570();
  v15 = sub_1001366A0(v6, (uint64_t)&unk_1002E2CC8);
  Logger.logObject.getter(v15, v7);
  v8 = sub_10011ADDC();
  if (sub_100109560(v8))
  {
    v9 = sub_1001094C8(22);
    *(_DWORD *)v9 = 134218240;
    v16 = *(uint64_t *)((char *)&v2->isa + v4);
    v12 = sub_1001366CC(v9, v10, v9 + 4, v9 + 12, v11);
    *(_WORD *)(v9 + 12) = 2048;
    v16 = *(uint64_t *)((char *)&v2->isa + v5);
    sub_1001366CC(v12, v13, v9 + 14, v9 + 22, v14);

    sub_1001364DC((void *)&_mh_execute_header, v2, v3, "EnhancedEmergency: setFrameRateAndMaximumBitRate, stored frameRate: %f bitRate: %f", (uint8_t *)v9);
    sub_100109440(v9);

    sub_10013621C();
  }
  else
  {

    sub_1001362BC(v15);
  }
}

void sub_100130EA8()
{
  uint8_t *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  float *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  os_log_type_t v21;
  _WORD *v22;

  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v2, v3);
  sub_100136038();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v4 = sub_100109570();
  sub_10011ADC0(v4, (uint64_t)&unk_1002E2CC8);
  v5 = sub_100136264();
  if (sub_1001360C0(v1))
  {
    v6 = (float *)sub_1001094C8(12);
    sub_10013629C(v6, 3.852e-34);
    sub_100109638((void *)&_mh_execute_header, v1, v5, "EnhancedEmergency: webview request to set frameRate as %f", (uint8_t *)v6);
    sub_100109440((uint64_t)v6);
  }

  v9 = *(char **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_currentState];
  if (v9
    && ((v10 = *(_QWORD *)&v9[direct field offset for SOSUIWebRTCState.state], v10 != 6) ? (v11 = v10 == 0) : (v11 = 1),
        v11))
  {
    v12 = v9;
    Logger.logObject.getter(v12, v13);
    v14 = sub_100136264();
    if (sub_100136598(v1))
    {
      v15 = (uint8_t *)sub_1001094C8(2);
      *(_WORD *)v15 = 0;
      sub_10011AE18((void *)&_mh_execute_header, v1, v14, "EnhancedEmergency: setFrameRate, webview state is either NotLoaded or FatalError, can't set frame rate, early return", v15);
      sub_100109440((uint64_t)v15);

    }
    else
    {

      v1 = v12;
    }
  }
  else
  {
    v16 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
    if (v16)
    {
      v17 = v16;
      sub_1001361A4();
      v18 = sub_100136194();
      sub_100135F48(v18);
      sub_100136488();
      sub_100136798();
      sub_1001366B4();
      v19 = (_QWORD *)sub_100109754((uint64_t)&unk_100289C00, 56);
      sub_1001366EC(v19, (uint64_t)&protocol witness table for MainActor);
      sub_100136294();
      swift_release(v20);
    }
    else
    {
      v1 = Logger.logObject.getter(v7, v8);
      v21 = static os_log_type_t.error.getter(v1);
      if (sub_10013618C(v1))
      {
        v22 = (_WORD *)sub_1001094C8(2);
        sub_1001361D8(v22);
        sub_10011AE18((void *)&_mh_execute_header, v1, v21, "EnhancedEmergency: trying to set frameRate, but webView is nil", v0);
        sub_100109440((uint64_t)v0);
      }
    }
  }

  sub_10013640C();
}

uint64_t sub_1001310E0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(double);

  *(_QWORD *)(v6 + 32) = a6;
  *(double *)(v6 + 24) = a1;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 40) = v9;
  *(_QWORD *)(v6 + 48) = static MainActor.shared.getter(v9);
  v10 = *(int **)((swift_isaMask & *a5) + 0x260);
  v13 = (uint64_t (*)(double))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc(v10[1]);
  *(_QWORD *)(v6 + 56) = v11;
  *v11 = v6;
  v11[1] = sub_10013117C;
  return v13(a1);
}

uint64_t sub_10013117C()
{
  uint64_t v0;

  v0 = sub_100136010();
  sub_1001362E0(v0, (uint64_t)&protocol witness table for MainActor);
  sub_1001363AC();
  return sub_1001093F4();
}

uint64_t sub_1001311CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1001365CC();
  *(_QWORD *)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate) = v2;
  return sub_100136110(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_100131200()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100135FA8();
  sub_1001365DC();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = *(void **)(v0 + 64);
  v3 = sub_100109570();
  sub_10013605C(v3, (uint64_t)&unk_1002E2CC8);
  sub_100110FE8();
  sub_100109724();
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v7 = sub_10013612C();
    sub_100135EBC(v7);
    *v6 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: can't set frameRate, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440(v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_10013130C()
{
  uint8_t *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  float *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  os_log_type_t v21;
  _WORD *v22;

  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v2, v3);
  sub_100136038();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v4 = sub_100109570();
  sub_10011ADC0(v4, (uint64_t)&unk_1002E2CC8);
  v5 = sub_100136264();
  if (sub_1001360C0(v1))
  {
    v6 = (float *)sub_1001094C8(12);
    sub_10013629C(v6, 3.852e-34);
    sub_100109638((void *)&_mh_execute_header, v1, v5, "EnhancedEmergency: webview request to set maximum bitRate as %f", (uint8_t *)v6);
    sub_100109440((uint64_t)v6);
  }

  v9 = *(char **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_currentState];
  if (v9
    && ((v10 = *(_QWORD *)&v9[direct field offset for SOSUIWebRTCState.state], v10 != 6) ? (v11 = v10 == 0) : (v11 = 1),
        v11))
  {
    v12 = v9;
    Logger.logObject.getter(v12, v13);
    v14 = sub_100136264();
    if (sub_100136598(v1))
    {
      v15 = (uint8_t *)sub_1001094C8(2);
      *(_WORD *)v15 = 0;
      sub_10011AE18((void *)&_mh_execute_header, v1, v14, "EnhancedEmergency: setBitRate, webview state is either NotLoaded or FatalError, can't set bit rate, early return", v15);
      sub_100109440((uint64_t)v15);

    }
    else
    {

      v1 = v12;
    }
  }
  else
  {
    v16 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
    if (v16)
    {
      v17 = v16;
      sub_1001361A4();
      v18 = sub_100136194();
      sub_100135F48(v18);
      sub_100136488();
      sub_100136798();
      sub_1001366B4();
      v19 = (_QWORD *)sub_100109754((uint64_t)&unk_100289BD8, 56);
      sub_1001366EC(v19, (uint64_t)&protocol witness table for MainActor);
      sub_100136294();
      swift_release(v20);
    }
    else
    {
      v1 = Logger.logObject.getter(v7, v8);
      v21 = static os_log_type_t.error.getter(v1);
      if (sub_10013618C(v1))
      {
        v22 = (_WORD *)sub_1001094C8(2);
        sub_1001361D8(v22);
        sub_10011AE18((void *)&_mh_execute_header, v1, v21, "EnhancedEmergency: trying to set maximum bitRate, but webView is nil", v0);
        sub_100109440((uint64_t)v0);
      }
    }
  }

  sub_10013640C();
}

uint64_t sub_100131544(double a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(double);

  *(_QWORD *)(v6 + 32) = a6;
  *(double *)(v6 + 24) = a1;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 40) = v9;
  *(_QWORD *)(v6 + 48) = static MainActor.shared.getter(v9);
  v10 = *(int **)((swift_isaMask & *a5) + 0x240);
  v13 = (uint64_t (*)(double))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc(v10[1]);
  *(_QWORD *)(v6 + 56) = v11;
  *v11 = v6;
  v11[1] = sub_1001315E0;
  return v13(a1);
}

uint64_t sub_1001315E0()
{
  uint64_t v0;

  v0 = sub_100136010();
  sub_1001362E0(v0, (uint64_t)&protocol witness table for MainActor);
  sub_1001363AC();
  return sub_1001093F4();
}

uint64_t sub_100131630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1001365CC();
  *(_QWORD *)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate) = v2;
  return sub_100136110(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_100131664()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100135FA8();
  sub_1001365DC();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = *(void **)(v0 + 64);
  v3 = sub_100109570();
  sub_10013605C(v3, (uint64_t)&unk_1002E2CC8);
  sub_100110FE8();
  sub_100109724();
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v7 = sub_10013612C();
    sub_100135EBC(v7);
    *v6 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: can't set maximum bitRate, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440(v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100131770()
{
  os_log_type_t v0;
  uint8_t *v1;
  NSObject *v2;
  uint8_t *v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  void *v21;
  NSObject *v22;

  v4 = v1;
  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v5, v6);
  sub_100136038();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v7 = sub_100109570();
  sub_10011ADC0(v7, (uint64_t)&unk_1002E2CC8);
  v8 = sub_100136264();
  if (sub_1001360C0(v2))
  {
    v9 = (_WORD *)sub_1001094C8(2);
    sub_10011B070(v9);
    sub_10011AE18((void *)&_mh_execute_header, v2, (os_log_type_t)v8, "EnhancedEmergency: webview request to toggle torch", v3);
    sub_100109440((uint64_t)v3);
  }

  v12 = *(void **)&v1[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v12)
  {
    v13 = v12;
    sub_1001361A4();
    v14 = sub_100136194();
    sub_100135F48(v14);
    sub_1001364A0();
    sub_100136578();
    v15 = sub_100136330();
    v16 = (_QWORD *)sub_100109754((uint64_t)&unk_100289BB0, 48);
    v16[2] = v15;
    v16[3] = &protocol witness table for MainActor;
    v16[4] = v8;
    v16[5] = v4;
    sub_100136294();
    swift_release(v17);

    sub_1001360E4();
  }
  else
  {
    v18 = Logger.logObject.getter(v10, v11);
    v19 = sub_10013643C(v18);
    if (sub_10013617C(v19))
    {
      v20 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v20);
      sub_10011AE18((void *)&_mh_execute_header, v22, v0, "EnhancedEmergency: trying to toggle torch, but webView is nil", v1);
      sub_100109440((uint64_t)v1);
    }
    v21 = (void *)sub_100136500();
    sub_100136074(v21);
  }
}

uint64_t sub_1001318F4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(void);

  v5[3] = a5;
  v7 = type metadata accessor for MainActor(0);
  v5[4] = v7;
  v5[5] = static MainActor.shared.getter(v7);
  v8 = *(int **)((swift_isaMask & *a4) + 0x1F0);
  v11 = (uint64_t (*)(void))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  v5[6] = v9;
  *v9 = v5;
  v9[1] = sub_100131984;
  return v11();
}

uint64_t sub_100131984()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1001363F8();
  v3 = *(_QWORD *)(v2 + 48);
  *v4 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  v5 = swift_task_dealloc(v3);
  sub_1001362E0(v5, (uint64_t)&protocol witness table for MainActor);
  sub_1001363AC();
  return sub_1001093F4();
}

uint64_t sub_1001319EC()
{
  uint64_t v0;
  void *v1;

  sub_100136810(*(_QWORD *)(v0 + 40));
  v1 = (void *)sub_1001365E4(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  if (v1)
  {
    objc_msgSend(v1, "torchStateChangeTo:", objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___EmergencyWebRTCViewController_flashButton), "isSelected") ^ 1);
    sub_100136124();
  }
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100131A5C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100135FA8();
  sub_1001367FC();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = *(void **)(v0 + 56);
  v3 = sub_100109570();
  sub_10013605C(v3, (uint64_t)&unk_1002E2CC8);
  sub_100110FE8();
  sub_100109724();
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v7 = sub_10013612C();
    sub_100135EBC(v7);
    *v6 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: can't toggle torch, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440(v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100131B68()
{
  os_log_type_t v0;
  uint8_t *v1;
  NSObject *v2;
  uint8_t *v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(void);
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  _WORD *v23;
  void *v24;
  NSObject *v25;

  v4 = v1;
  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v5, v6);
  sub_100136038();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v7 = sub_100109570();
  sub_10011ADC0(v7, (uint64_t)&unk_1002E2CC8);
  v8 = sub_100136264();
  if (sub_1001360C0(v2))
  {
    v9 = (_WORD *)sub_1001094C8(2);
    sub_10011B070(v9);
    sub_10011AE18((void *)&_mh_execute_header, v2, (os_log_type_t)v8, "EnhancedEmergency: flipCameraButtonTapped, request to flip camera", v3);
    sub_100109440((uint64_t)v3);
  }

  v12 = *(_QWORD **)&v1[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v12)
  {
    v13 = *(uint64_t (**)(void))((swift_isaMask & *v12) + 0xA0);
    v14 = v12;
    v15 = (char *)v13();
    v16 = *(_QWORD *)&v15[direct field offset for SOSUIWebRTCState.cameraFacing];

    if (v16 == 1)
    {
      sub_100135F3C(*(void **)&v1[OBJC_IVAR___EmergencyWebRTCViewController_flashButton]);
      sub_100135F3C(*(void **)&v1[OBJC_IVAR___EmergencyWebRTCViewController_zoomButton]);
    }
    sub_100136214();
    v17 = sub_100136194();
    sub_100135F48(v17);
    sub_1001364A0();
    sub_100136578();
    v18 = sub_100136330();
    v19 = (_QWORD *)sub_100109754((uint64_t)&unk_100289B88, 48);
    v19[2] = v18;
    v19[3] = &protocol witness table for MainActor;
    v19[4] = v8;
    v19[5] = v4;
    sub_100136294();
    swift_release(v20);

    sub_1001360E4();
  }
  else
  {
    v21 = Logger.logObject.getter(v10, v11);
    v22 = sub_10013643C(v21);
    if (sub_10013617C(v22))
    {
      v23 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v23);
      sub_10011AE18((void *)&_mh_execute_header, v25, v0, "EnhancedEmergency: trying to flip camera, but webView is nil", v1);
      sub_100109440((uint64_t)v1);
    }
    v24 = (void *)sub_100136500();
    sub_100136074(v24);
  }
}

uint64_t sub_100131D4C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(void);

  v5[3] = a4;
  v5[4] = a5;
  v7 = type metadata accessor for MainActor(0);
  v5[5] = v7;
  v5[6] = static MainActor.shared.getter(v7);
  v8 = *(int **)((swift_isaMask & *a4) + 0x1D8);
  v11 = (uint64_t (*)(void))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  v5[7] = v9;
  *v9 = v5;
  v9[1] = sub_100131DDC;
  return v11();
}

uint64_t sub_100131DDC()
{
  uint64_t v0;

  v0 = sub_100136010();
  sub_1001362E0(v0, (uint64_t)&protocol witness table for MainActor);
  sub_1001363AC();
  return sub_1001093F4();
}

uint64_t sub_100131E2C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  swift_release(*(_QWORD *)(v0 + 48));
  v1 = sub_1001365E4(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  if (v1)
  {
    v2 = (void *)v1;

    sub_100136274(v2, "cameraFacingChange:");
    swift_unknownObjectRelease(v2);
  }
  return sub_100136110(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100131EBC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100135FA8();
  sub_1001365DC();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = *(void **)(v0 + 64);
  v3 = sub_100109570();
  sub_10013605C(v3, (uint64_t)&unk_1002E2CC8);
  sub_100110FE8();
  sub_100109724();
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v7 = sub_10013612C();
    sub_100135EBC(v7);
    *v6 = v1;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: can't flip camera, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440(v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100131FFC()
{
  os_log_type_t v0;
  uint8_t *v1;
  NSObject *v2;
  uint8_t *v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  void *v21;
  NSObject *v22;

  v4 = v1;
  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v5, v6);
  sub_100136038();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v7 = sub_100109570();
  sub_10011ADC0(v7, (uint64_t)&unk_1002E2CC8);
  v8 = sub_100136264();
  if (sub_1001360C0(v2))
  {
    v9 = (_WORD *)sub_1001094C8(2);
    sub_10011B070(v9);
    sub_10011AE18((void *)&_mh_execute_header, v2, (os_log_type_t)v8, "EnhancedEmergency: zoomButtonTapped, request to change Zoom level", v3);
    sub_100109440((uint64_t)v3);
  }

  v12 = *(void **)&v1[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v12)
  {
    v13 = v12;
    sub_1001361A4();
    v14 = sub_100136194();
    sub_100135F48(v14);
    sub_1001364A0();
    sub_100136578();
    v15 = sub_100136330();
    v16 = (_QWORD *)sub_100109754((uint64_t)&unk_100289B60, 48);
    v16[2] = v15;
    v16[3] = &protocol witness table for MainActor;
    v16[4] = v4;
    v16[5] = v8;
    sub_100136294();
    swift_release(v17);

    sub_1001360E4();
  }
  else
  {
    v18 = Logger.logObject.getter(v10, v11);
    v19 = sub_10013643C(v18);
    if (sub_10013617C(v19))
    {
      v20 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v20);
      sub_10011AE18((void *)&_mh_execute_header, v22, v0, "EnhancedEmergency: trying to set zoom level, but webView is nil", v1);
      sub_100109440((uint64_t)v1);
    }
    v21 = (void *)sub_100136500();
    sub_100136074(v21);
  }
}

uint64_t sub_100132180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[17] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[18] = v7;
  v5[19] = v8;
  return swift_task_switch(sub_1001321EC, v7, v8);
}

uint64_t sub_1001321EC()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(v0 + 120);
  v3 = OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine;
  *(_QWORD *)(v0 + 160) = OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine;
  v4 = *(_QWORD *)(v2 + v3);
  v5 = *(double *)(v4 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom);
  *(double *)(v0 + 88) = v5;
  v6 = *(double *)(v4 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_midZoom);
  if (v5 >= v6)
  {
    v6 = *(double *)(v4 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_maxZoom);
    if (v5 >= v6)
      v6 = *(double *)(v4 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_minZoom);
  }
  *(double *)(v0 + 96) = v6;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v7 = sub_100109570();
  v8 = sub_100108664(v7, (uint64_t)&unk_1002E2CC8);
  *(_QWORD *)(v0 + 168) = v8;
  v9 = v8;
  Logger.logObject.getter(v8, v10);
  v11 = sub_10011ADDC();
  if (sub_100136000(v11))
  {
    v25 = v0 + 16;
    v12 = sub_1001094C8(22);
    *(_DWORD *)v12 = 134218240;
    sub_100110F6C(v0 + 88, v0 + 16);
    *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v12 + 4, v12 + 12);
    *(_WORD *)(v12 + 12) = 2048;
    *(double *)(v0 + 112) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v12 + 14, v12 + 22);
    sub_1001364DC((void *)&_mh_execute_header, v9, v1, "EnhancedEmergency: current zoom level is %f, next zoom level is %f", (uint8_t *)v12);
    sub_100109440(v12);
  }

  v13 = *(_QWORD **)(v0 + 128);
  sub_100110F6C(v0 + 96, v0 + 40);
  v14 = (_QWORD *)sub_1001360C8(*(_QWORD *)((swift_isaMask & *v13) + 0x1F8));
  *(_QWORD *)(v0 + 176) = v14;
  *v14 = v0;
  v14[1] = sub_1001323D0;
  v22 = (uint64_t (*)(void))sub_1001365AC((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v24, v25);
  return sub_100136358(v22);
}

uint64_t sub_1001323D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_100136204();
  sub_100136324(v2);
  *(_QWORD *)(v0 + 184) = v1;
  swift_task_dealloc(v3);
  return sub_100110E74();
}

uint64_t sub_100132420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 136));
  *(_QWORD *)(*(_QWORD *)(v2 + v1)
            + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom) = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0xE000000000000000;
  Double.write<A>(to:)(v0 + 64, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  sub_100136390();
  sub_1001366C0(*(_QWORD *)(v0 + 64));
  sub_100109558();
  v3 = (void *)sub_100136790(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  if (v3)
  {
    sub_1001364F8(v3, "zoomLevelChange:");
    sub_100136124();
  }
  return sub_100136110(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1001324D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100135FA8();
  v1 = *(void **)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 136));
  sub_1001360B8();
  v2 = sub_1001360B8();
  Logger.logObject.getter(v2, v3);
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    sub_100135F0C(5.7779e-34);
    v7 = sub_10013612C();
    *(_QWORD *)(v0 + 80) = v7;
    sub_100136050(v0 + 80, v0 + 88);
    *v6 = v7;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: trying to set zoom level, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440(v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100135E98(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1001325F8(void *a1)
{
  char *v1;
  void *v2;
  char *v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;

  v2 = *(void **)&v1[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v2)
  {
    v12 = v2;
    v4 = (char *)sub_10010E310((uint64_t)v12, "state");
    if ((unint64_t)(v4 - 1) >= 2)
    {
      if (v4 == (char *)3)
      {
        *(_QWORD *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_lastZoomFactor] = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine]
                                                                                             + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom);
        if (qword_1002D7250 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v8 = sub_100109570();
        v9 = sub_10011ADC0(v8, (uint64_t)&unk_1002E2CC8);
        v10 = static os_log_type_t.error.getter(v9);
        if (sub_100136598(v9))
        {
          v11 = (uint8_t *)sub_1001094C8(2);
          *(_WORD *)v11 = 0;
          sub_10011AE18((void *)&_mh_execute_header, v9, v10, "EnhancedEmergency: pinch session ended", v11);
          sub_100109440((uint64_t)v11);
        }

      }
    }
    else
    {
      objc_msgSend(a1, "scale");
      v6 = v5 * *(double *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_lastZoomFactor];
      v7 = *(_QWORD *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine];
      if (v6 <= *(double *)(v7
                           + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_minZoom))
        v6 = *(double *)(v7
                       + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_minZoom);
      if (*(double *)(v7 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_maxZoom) < v6)
        v6 = *(double *)(v7
                       + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_maxZoom);
      sub_100132770(v1, v12, v6);
    }
    sub_10013633C(v12);
  }
  else
  {
    sub_10011AEDC();
  }
}

void sub_100132770(void *a1, void *a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1001085C0(&qword_1002D84A0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter(v8);
  v11 = type metadata accessor for TaskPriority(0);
  sub_100108600((uint64_t)v10, 0, 1, v11);
  type metadata accessor for MainActor(0);
  v12 = a1;
  v13 = a2;
  v14 = static MainActor.shared.getter(v13);
  v15 = swift_allocObject(&unk_100289B38, 56, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v15 + 32) = v12;
  *(double *)(v15 + 40) = round(a3 * 100.0) / 100.0;
  *(_QWORD *)(v15 + 48) = v13;
  sub_10011102C();
  swift_release(v16);
}

uint64_t sub_10013288C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 + 56) = a6;
  *(double *)(v6 + 48) = a1;
  *(_QWORD *)(v6 + 40) = a5;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 64) = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 72) = v8;
  *(_QWORD *)(v6 + 80) = v9;
  return swift_task_switch(sub_100132900, v8, v9);
}

uint64_t sub_100132900()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  os_log_type_t v6;
  double v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v17)(void);
  uint64_t v18;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v1 = *(void **)(v0 + 40);
  v2 = sub_100109570();
  v3 = sub_100108664(v2, (uint64_t)&unk_1002E2CC8);
  *(_QWORD *)(v0 + 88) = v3;
  v4 = v1;
  Logger.logObject.getter(v4, v5);
  v6 = sub_10011ADDC();
  if (sub_100109560(v6))
  {
    v7 = *(double *)(v0 + 48);
    v8 = *(char **)(v0 + 40);
    v9 = sub_1001094C8(22);
    v10 = sub_1001094C8(32);
    v18 = v10;
    *(_DWORD *)v9 = 134218242;
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)&v8[OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine]
                                     + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v9 + 4, v9 + 12);

    *(_WORD *)(v9 + 12) = 2080;
    v11 = Double.description.getter(v7);
    v13 = v12;
    *(_QWORD *)(v0 + 32) = sub_100121E04(v11, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v9 + 14, v9 + 22);
    swift_bridgeObjectRelease(v13);
    sub_1001364DC((void *)&_mh_execute_header, v3, (os_log_type_t)v1, "EnhancedEmergency: Setting zoom level from pinch, current zoom level is %f, next zoom level is %s", (uint8_t *)v9);
    sub_100109598(v10, v14, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v10);
    sub_100109440(v9);
  }
  else
  {

  }
  v15 = (_QWORD *)sub_1001360C8(*(_QWORD *)((swift_isaMask & **(_QWORD **)(v0 + 56)) + 0x1F8));
  *(_QWORD *)(v0 + 96) = v15;
  *v15 = v0;
  v15[1] = sub_100132ADC;
  return sub_100136358(v17);
}

uint64_t sub_100132ADC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_100136204();
  sub_100136324(v2);
  *(_QWORD *)(v0 + 104) = v1;
  swift_task_dealloc(v3);
  return sub_100110E74();
}

uint64_t sub_100132B2C()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  v1 = *(double *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 64));
  *(double *)(*(_QWORD *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine)
            + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom) = v1;
  v5 = Double.description.getter(round(v1 * 10.0) / 10.0);
  sub_100136390();
  sub_1001366C0(v5);
  sub_100109558();
  v3 = (void *)sub_100136790(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  if (v3)
  {
    objc_msgSend(v3, "zoomLevelChange:", *(double *)(v0 + 48));
    sub_100136124();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100132BE0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _DWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 88);
  sub_10013646C();
  sub_1001360B8();
  v2 = sub_1001360B8();
  Logger.logObject.getter(v2, v3);
  v4 = sub_1001096F0();
  if (sub_10011AF5C(v4))
  {
    v5 = (_DWORD *)sub_1001094C8(12);
    v6 = (_QWORD *)sub_1001094C8(8);
    *v5 = 138412290;
    sub_1001360B8();
    v7 = sub_10013612C();
    *(_QWORD *)(v0 + 16) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v5 + 1, v5 + 3);
    *v6 = v7;
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EF8((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: trying to set zoom level, error: %@");
    v10 = sub_1001085C0(&qword_1002D7880);
    sub_100135F88(v10);
    sub_100109440((uint64_t)v6);
    sub_100109440((uint64_t)v5);

    sub_100135EB4();
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();

  }
  return sub_100136110(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100132D4C()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v3 = sub_100109570();
  sub_10011ADC0(v3, (uint64_t)&unk_1002E2CC8);
  v4 = sub_10011ADDC();
  if (sub_100109560(v4))
  {
    v5 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v5);
    sub_10011AE18((void *)&_mh_execute_header, v0, v1, "EnhancedEmergency: preparing WebRTC view for pip, hiding controls and labels", v2);
    sub_100109440((uint64_t)v2);
  }

  v6 = (void *)objc_opt_self(UIView);
  v7 = sub_100109754((uint64_t)&unk_100289AC0, 24);
  sub_100136744(v7);
  v15 = v7;
  v8 = sub_10010E350((uint64_t)sub_100112054, (uint64_t)_NSConcreteStackBlock, 1107296256, v11, v13);
  swift_release(v15);
  v9 = sub_100109754((uint64_t)&unk_100289AC0, 24);
  sub_100136744(v9);
  v10 = sub_10010E350((uint64_t)sub_100110294, (uint64_t)_NSConcreteStackBlock, 1107296256, v12, v14);
  swift_release(v9);
  objc_msgSend(v6, "animateWithDuration:animations:completion:", v8, v10, 0.2);
  _Block_release(v10);
  _Block_release(v8);
}

void sub_100132EEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR___EmergencyWebRTCViewController_currentState);
    v5 = v4;

    if (v4)
    {
      swift_beginAccess(v1, &v8, 0, 0);
      v6 = swift_unknownObjectWeakLoadStrong(v1);
      if (v6)
      {
        v7 = (void *)v6;
        sub_1001283AC((uint64_t)v5);

      }
    }
  }
}

void sub_100132F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    if (objc_msgSend(*(id *)(Strong + OBJC_IVAR___EmergencyWebRTCViewController_flashButton), "isSelected"))
    {
      sub_100131770();
      sub_100131770();
    }

  }
}

void sub_100132FFC()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  void *v6;
  id v7;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v3 = sub_100109570();
  sub_10011ADC0(v3, (uint64_t)&unk_1002E2CC8);
  v4 = sub_10011ADDC();
  if (sub_100109560(v4))
  {
    v5 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v5);
    sub_10011AE18((void *)&_mh_execute_header, v0, v1, "EnhancedEmergency: restoring WebRTC view from pip, showing controls and labels", v2);
    sub_100109440((uint64_t)v2);
  }

  v6 = *(Class *)((char *)&v0->isa + OBJC_IVAR___EmergencyWebRTCViewController_currentState);
  if (v6)
  {
    v7 = v6;
    sub_1001283AC((uint64_t)v7);
    sub_10013633C(v7);
  }
  else
  {
    sub_10011AEDC();
  }
}

void sub_1001330C4()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;

  sub_100136544();
  v4 = v0;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v5 = sub_100109570();
  sub_10011ADC0(v5, (uint64_t)&unk_1002E2CC8);
  v6 = sub_10011ADDC();
  if (sub_100109560(v6))
  {
    v7 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v7);
    sub_10011AE18((void *)&_mh_execute_header, v0, v1, "EnhancedEmergency: showPlaceHolderViewWithExclamation as mitigations are active", v2);
    sub_100109440((uint64_t)v2);
  }

  v8 = OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView;
  objc_msgSend(*(id *)((char *)&v0->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView), "setAlpha:", 1.0);
  sub_100135F98(*(id *)((char *)&v0->isa + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton), "setAlpha:");
  v9 = OBJC_IVAR___EmergencyWebRTCViewController_exclamationImageView;
  objc_msgSend(*(id *)((char *)&v0->isa + v8), "addSubview:", *(Class *)((char *)&v0->isa + OBJC_IVAR___EmergencyWebRTCViewController_exclamationImageView));
  v10 = (void *)objc_opt_self(NSLayoutConstraint);
  v11 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v12 = sub_100109754(v11, 48);
  *(_OWORD *)(v12 + 16) = xmmword_100241810;
  v13 = objc_msgSend(*(id *)((char *)&v4->isa + v9), "centerXAnchor");
  v14 = objc_msgSend(*(id *)((char *)&v4->isa + v8), "centerXAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);
  sub_1001363A4();

  *(_QWORD *)(v12 + 32) = v3;
  v16 = objc_msgSend(*(id *)((char *)&v4->isa + v9), "centerYAnchor");
  v17 = objc_msgSend(*(id *)((char *)&v4->isa + v8), "centerYAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);
  sub_10011B028();

  *(_QWORD *)(v12 + 40) = &selRef_buttonsForAmbientTransition;
  sub_10013670C(v19, v20);
  sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_1001096DC();
  objc_msgSend(v10, "activateConstraints:", isa);
  sub_1001360F4(isa);
}

void sub_1001332E0()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.EmergencyWebRTCViewController", 43, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_100133330(uint64_t a1)
{
  return sub_1001354B8(a1, type metadata accessor for EmergencyWebRTCViewController);
}

uint64_t type metadata accessor for EmergencyWebRTCViewController()
{
  return objc_opt_self(EmergencyWebRTCViewController);
}

void sub_1001335B0(const char *a1, SEL *a2)
{
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  void *v10;
  void *v11;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v7 = sub_100109570();
  sub_10011ADC0(v7, (uint64_t)&unk_1002E2CC8);
  v8 = sub_10011ADDC();
  if (sub_10011AF5C(v8))
  {
    v9 = (_WORD *)sub_1001094C8(2);
    sub_10011B070(v9);
    sub_10011AE18((void *)&_mh_execute_header, v2, v3, a1, v4);
    sub_100109440((uint64_t)v4);
  }

  v10 = (void *)sub_1001364A8(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, *a2);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    sub_1001360E4();
  }
}

void sub_1001336CC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v0 = sub_100109570();
  v9 = sub_1001366A0(v0, (uint64_t)&unk_1002E2CC8);
  v2 = Logger.logObject.getter(v9, v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)sub_1001094C8(12);
    v5 = (_QWORD *)sub_1001094C8(8);
    *(_DWORD *)v4 = 138412290;
    v10 = v9;
    v6 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v4 + 4, v4 + 12);
    *v5 = v9;

    sub_100109638((void *)&_mh_execute_header, v2, v3, "EnhancedEmergency: encoutered a webRTC error: %@", v4);
    v7 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v5, v8, v7);
    sub_100109440((uint64_t)v5);
    sub_100109440((uint64_t)v4);

  }
  else
  {

    sub_100136474(v9);
  }
}

void *sub_10013384C(uint64_t a1)
{
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v4;
  double v5;
  char v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  Swift::String v47;
  Swift::String v48;
  void *result;
  uint64_t v50;
  uint64_t v51;

  v5 = sub_100136230(a1, direct field offset for SOSUIWebRTCQualityMessage.framesPerSecond);
  if (v6)
    v7 = v5;
  else
    v7 = -1.0;
  v9 = sub_100136230(v4, direct field offset for SOSUIWebRTCQualityMessage.bitrate);
  if (v6)
    *(double *)&v11 = v9;
  else
    v11 = v10;
  v13 = sub_100136230(v8, direct field offset for SOSUIWebRTCQualityMessage.packetLoss);
  if (v6)
    *(double *)&v15 = v13;
  else
    v15 = v14;
  v16 = sub_100136230(v12, direct field offset for SOSUIWebRTCQualityMessage.jitter);
  if (v6)
    *(double *)&v18 = v16;
  else
    v18 = v17;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v19 = sub_100109570();
  sub_10011ADC0(v19, (uint64_t)&unk_1002E2CC8);
  v20 = sub_10011ADDC();
  if (sub_10010E390(v20))
  {
    v21 = sub_1001094C8(42);
    *(_DWORD *)v21 = 134218752;
    v27 = sub_10013634C(v21, v22, v21 + 4, v21 + 12, v23, v24, v25, v26, *(uint64_t *)&v7);
    *(_WORD *)(v21 + 12) = 2048;
    v33 = sub_10013634C(v27, v28, v21 + 14, v21 + 22, v29, v30, v31, v32, v11);
    *(_WORD *)(v21 + 22) = 2048;
    v39 = sub_10013634C(v33, v34, v21 + 24, v21 + 32, v35, v36, v37, v38, v15);
    *(_WORD *)(v21 + 32) = 2048;
    sub_10013634C(v39, v40, v21 + 34, v21 + 42, v41, v42, v43, v44, v18);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "EnhancedEmergency: videoStreamQualityChanged, frameRate = %f, biteRate = %f, packetLoss = %f, jitter = %f", (uint8_t *)v21, 0x2Au);
    sub_100109440(v21);
  }

  sub_100128628();
  v46 = v45;
  v50 = 0;
  v51 = 0xE000000000000000;
  v47._countAndFlagsBits = 3822150;
  v47._object = (void *)0xE300000000000000;
  String.append(_:)(v47);
  sub_100136700((uint64_t)&v50);
  v48._countAndFlagsBits = 0x3A5242202CLL;
  v48._object = (void *)0xE500000000000000;
  String.append(_:)(v48);
  sub_100136700((uint64_t)&v50);
  sub_10017E2FC(v50, v51, v46);

  result = (void *)sub_1001364A8(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
  if (result)
  {
    objc_msgSend(result, "videoStreamQuality:", a1);
    return (void *)sub_100136124();
  }
  return result;
}

void sub_100133A80()
{
  uint8_t *v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  NSObject *v4;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v1 = sub_100109570();
  v4 = sub_10011ADC0(v1, (uint64_t)&unk_1002E2CC8);
  v2 = static os_log_type_t.default.getter();
  if (sub_10013618C(v4))
  {
    v3 = (_WORD *)sub_1001094C8(2);
    sub_1001361D8(v3);
    sub_10011AE18((void *)&_mh_execute_header, v4, v2, "EnhancedEmergency: encountered video stream lost", v0);
    sub_100109440((uint64_t)v0);
  }

}

void sub_100133B28(void *a1)
{
  NSObject *v1;
  void *v2;
  NSObject *v3;
  void *v5;
  uint8_t *v6;
  char *v7;
  uint64_t v8;
  void **p_vtable;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;
  uint64_t v15;
  void *v16;
  void **v17;
  uint64_t v18;
  NSObject *v19;
  char **v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  id v34;
  double v35;
  double v36;
  double v37;
  id v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  os_log_type_t v72;
  _WORD *v73;
  uint64_t v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  double v82;
  void *v83;
  uint8_t *v84;
  uint64_t v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint8_t *v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  os_log_type_t v101;
  _WORD *v102;
  uint64_t v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  id v111;
  double v112;
  void *v113;
  id v114;
  void *v115;
  void *v116;
  uint64_t v117;
  os_log_type_t v118;
  _WORD *v119;
  uint64_t v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  uint64_t v126;
  void *v127;
  id v128;
  void *v129;
  id v130;
  void *v131;
  void *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  os_log_type_t v137;
  _WORD *v138;
  uint64_t v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  id v148;
  id v149;
  id v150;
  void *v151;
  id v152;
  objc_class *v153;
  NSBundle v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  BOOL v173;
  void *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  id v179;
  void *v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  void *v185;
  id v186;
  objc_class *v187;
  NSBundle v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  uint64_t v198;
  uint8_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char **v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211[6];

  v3 = v1;
  v207 = OBJC_IVAR___EmergencyWebRTCViewController_currentState;
  v5 = *(Class *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_currentState);
  v6 = v5;
  v7 = a1;
  sub_1001285C4((uint64_t)a1);
  v8 = *(_QWORD *)&v7[direct field offset for SOSUIWebRTCState.state];
  v202 = (uint64_t)v5;
  v205 = (uint64_t)v7;
  p_vtable = _TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo.vtable;
  v10 = 0x1002C0000;
  v11 = &selRef__routeIsReceiver_;
  switch(v8)
  {
    case 0:
      sub_100136318();
      if (!v173)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v12 = sub_100109570();
      sub_10011ADC0(v12, (uint64_t)&unk_1002E2CC8);
      v13 = sub_10011ADDC();
      v11 = (char **)v202;
      v10 = v205;
      if (sub_100136000(v13))
      {
        v14 = (_WORD *)sub_1001094C8(2);
        sub_100136308(v14);
        sub_10011AE18((void *)&_mh_execute_header, v3, (os_log_type_t)v2, "EnhancedEmergency: received state change from webView, state is NotLoaded", v6);
        v15 = (uint64_t)v6;
        v6 = (uint8_t *)&direct field offset for SOSUIWebRTCState.zoomLevel;
        sub_100109440(v15);
      }

      v16 = (void *)sub_100136664();
      sub_100135F98(v16, "setAlpha:");
      sub_100135F98(*(id *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView), "setAlpha:");
      sub_100135F98(*(id *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView), "setAlpha:");
      v17 = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                    + 24);
      p_vtable = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                         + 24);
      break;
    case 1:
      v200 = (uint64_t)v6;
      sub_100136318();
      if (!v173)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v29 = sub_100109570();
      v30 = sub_100108664(v29, (uint64_t)&unk_1002E2CC8);
      Logger.logObject.getter(v30, v31);
      v32 = sub_10011ADDC();
      if (os_log_type_enabled(v30, v32))
      {
        v33 = (uint8_t *)sub_1001094C8(2);
        *(_WORD *)v33 = 0;
        sub_10011AE18((void *)&_mh_execute_header, v30, v32, "EnhancedEmergency: received state change from webView, state is CallGood", v33);
        sub_100109440((uint64_t)v33);
      }

      v34 = *(id *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView);
      sub_1001364BC();
      sub_100136634(v35, v36, v37);

      v38 = *(id *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView);
      sub_1001364BC();
      sub_100136634(v39, v40, v41);

      sub_100136654(v42, v43, v44, v45, v46, v47, v48, v49, v196, v200, v202, v205);
      sub_100135F98(*(id *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView), "setAlpha:");
      v50 = (void *)sub_100136434();
      if (v50)
      {
        objc_msgSend(v50, "cameraTurnedOnForRemoteSide");
        sub_100136124();
      }
      v51 = (void *)sub_100136434();
      v11 = (char **)v203;
      if (v51)
      {
        v52 = sub_1001364B0(v51);
        sub_100136124();
        if (v52 == (id)3)
          goto LABEL_23;
      }
      if ((v53 = (void *)sub_100136434()) != 0 && (v54 = sub_1001364B0(v53), sub_100136124(), v54 == (id)7)
        || (v55 = (void *)sub_100136434()) != 0
        && (v57 = sub_1001364B0(v55), v55 = (void *)sub_100136124(), v57 == (id)4))
      {
LABEL_23:
        v58 = (void *)sub_100136434();
        if (v58)
        {
          objc_msgSend(v58, "videoStreamingAboutToStart");
          v58 = (void *)sub_100136124();
        }
        sub_10012E698((uint64_t)v58, v59, v60, v61, v62, v63, v64, v65, v197, v201, v203, v206, v207, v208, v209, v210, v211[0], v211[1], v211[2],
          v211[3],
          v211[4],
          v211[5]);
      }
      v66 = *(_QWORD *)(direct field offset for SOSUIWebRTCState.zoomLevel + 0x1002C0000);
      Logger.logObject.getter(v55, v56);
      v67 = sub_10011ADDC();
      if (sub_100136000(v67))
      {
        v68 = (uint8_t *)sub_1001094C8(12);
        *(_DWORD *)v68 = 134217984;
        v208 = v66;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v208, &v209, v68 + 4, v68 + 12);
        sub_100109638((void *)&_mh_execute_header, v30, (os_log_type_t)v30, "EnhancedEmergency: Setting zoom level to %f", v68);
        sub_100109440((uint64_t)v68);
      }

      v17 = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                    + 24);
      p_vtable = _TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo.vtable;
      *(_QWORD *)(*(char **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine)
                + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom) = v66;
      v208 = 0;
      v209 = 0xE000000000000000;
      Double.write<A>(to:)(&v208, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      sub_100136390();
      v69 = v209;
      sub_10012E4E8(v208, v209);
      swift_bridgeObjectRelease(v69);
      v70 = (void *)sub_100136434();
      v6 = (uint8_t *)v201;
      if (v70)
      {
        sub_1001364F8(v70, "zoomLevelChange:");
        goto LABEL_81;
      }
      break;
    case 2:
      sub_100136318();
      if (!v173)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v71 = sub_100109570();
      sub_10011ADC0(v71, (uint64_t)&unk_1002E2CC8);
      v72 = sub_10011ADDC();
      v11 = (char **)v202;
      v10 = v205;
      if (sub_100136000(v72))
      {
        v73 = (_WORD *)sub_1001094C8(2);
        sub_100136308(v73);
        sub_10011AE18((void *)&_mh_execute_header, v3, (os_log_type_t)v2, "EnhancedEmergency: received state change from webView, state is CallPaused", v6);
        v74 = (uint64_t)v6;
        v6 = (uint8_t *)&direct field offset for SOSUIWebRTCState.zoomLevel;
        sub_100109440(v74);
      }

      v75 = (void *)sub_100136664();
      sub_100135F98(v75, "setAlpha:");
      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView));
      sub_100128614();
      v77 = v76;
      objc_msgSend(v76, "setAlpha:", 1.0);

      sub_100128600();
      v79 = v78;
      sub_1001361B0(v78);

      sub_100128628();
      v81 = v80;
      if (*((_BYTE *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_showWebRTCQualityLabel))
        v82 = 1.0;
      else
        v82 = 0.0;
      objc_msgSend(v80, "setAlpha:", v82);

      sub_1001361B0(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_flashButton));
      v17 = _TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo.vtable;
      sub_1001361B0(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton));
      sub_1001361B0(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton));
      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView));
      v83 = (void *)sub_1001364A8(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
      p_vtable = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                         + 24);
      if (v83)
      {
        objc_msgSend(v83, "cameraTurnedOffForRemoteSide");
        goto LABEL_81;
      }
      break;
    case 3:
      sub_100136318();
      if (!v173)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v84 = v6;
      v85 = sub_100109570();
      sub_10011ADC0(v85, (uint64_t)&unk_1002E2CC8);
      v86 = sub_10011ADDC();
      if (sub_100136000(v86))
      {
        v87 = (uint8_t *)sub_1001094C8(2);
        *(_WORD *)v87 = 0;
        sub_10011AE18((void *)&_mh_execute_header, v3, (os_log_type_t)v2, "EnhancedEmergency: received state change from webView, state is CallPoor", v87);
        sub_100109440((uint64_t)v87);
      }

      sub_10011ADD4(v88, &qword_1002DA660, UIImage_ptr);
      sub_100136764();
      sub_10017BD1C(v89, v90);
      v91 = *(Class *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel);
      if (v92)
      {
        sub_1001364F0();
        v93 = v2;
      }
      else
      {
        v149 = objc_allocWithZone((Class)UIImage);
        v150 = sub_1001364F0();
        v93 = sub_10011AED4((uint64_t)v150, "init");
        v2 = 0;
      }
      p_vtable = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                         + 24);
      v151 = (void *)objc_opt_self(NSBundle);
      v152 = v2;
      v153 = (objc_class *)objc_msgSend(v151, "mainBundle");
      sub_100136804();
      sub_100136764();
      sub_100136134();
      v154.super.isa = v153;
      v10 = sub_100136094(v155, v156, v157, v158, v154);
      v160 = v159;

      sub_10015E894((uint64_t)v93, v10, v160);
      swift_bridgeObjectRelease(v160);

      sub_100136654(v161, v162, v163, v164, v165, v166, v167, v168, v196, v198, v202, v205);
      sub_100135F98(*(id *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView), "setAlpha:");

      v6 = v84;
      v17 = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                    + 24);
      v11 = v204;
      break;
    case 4:
      sub_100136318();
      if (!v173)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v94 = sub_100109570();
      sub_10011ADC0(v94, (uint64_t)&unk_1002E2CC8);
      v95 = sub_10011ADDC();
      v11 = (char **)v202;
      v10 = v205;
      v17 = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                    + 24);
      if (sub_100136000(v95))
      {
        v96 = v6;
        v97 = (uint8_t *)sub_1001094C8(2);
        *(_WORD *)v97 = 0;
        sub_10011AE18((void *)&_mh_execute_header, v3, (os_log_type_t)v2, "EnhancedEmergency: received state change from webView, state is Idle", v97);
        v98 = (uint64_t)v97;
        v6 = v96;
        sub_100109440(v98);
      }

      sub_100130058();
      p_vtable = _TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo.vtable;
      *(_QWORD *)(*(char **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine)
                + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom) = *(_QWORD *)(v205 + direct field offset for SOSUIWebRTCState.zoomLevel);
      v99 = (void *)sub_1001364A8(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
      if (v99)
      {
        sub_1001364F8(v99, "zoomLevelChange:");
        sub_100136124();
      }
      sub_10012DF0C();
      break;
    case 5:
      sub_100136318();
      if (!v173)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v100 = sub_100109570();
      sub_10011ADC0(v100, (uint64_t)&unk_1002E2CC8);
      v101 = sub_10011ADDC();
      if (sub_100136000(v101))
      {
        v102 = (_WORD *)sub_1001094C8(2);
        sub_100136308(v102);
        sub_10011AE18((void *)&_mh_execute_header, v3, (os_log_type_t)v2, "EnhancedEmergency: received state change from webView, state is Preview", v6);
        v103 = (uint64_t)v6;
        v6 = (uint8_t *)&direct field offset for SOSUIWebRTCState.zoomLevel;
        sub_100109440(v103);
      }

      v104 = (void *)sub_100136664();
      sub_100135F3C(v104);
      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView));
      sub_100128614();
      v106 = v105;
      sub_100135F3C(v105);

      sub_100128600();
      v108 = v107;
      sub_100135F3C(v107);

      sub_100128628();
      v110 = v109;
      sub_100135F3C(v109);

      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_flashButton));
      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton));
      v17 = _TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo.vtable;
      sub_1001361B0(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton));
      v111 = objc_retain(*(id *)((char *)&v3->isa
                               + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView));
      sub_1001364BC();
      objc_msgSend(v111, "_setCornerRadius:", v112 * 0.5);

      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView));
      v113 = *(Class *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView);
      v11 = (char **)v202;
      v10 = v205;
      p_vtable = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                         + 24);
      if (v113)
      {
        v114 = v113;
        sub_10016ED48();
        v116 = v115;
        sub_100136284(v115, "setUserInteractionEnabled:");

      }
      break;
    case 6:
      sub_100136318();
      if (!v173)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v117 = sub_100109570();
      sub_10011ADC0(v117, (uint64_t)&unk_1002E2CC8);
      v118 = sub_10011ADDC();
      v11 = (char **)v202;
      v10 = v205;
      if (sub_100136000(v118))
      {
        v119 = (_WORD *)sub_1001094C8(2);
        sub_100136308(v119);
        sub_10011AE18((void *)&_mh_execute_header, v3, (os_log_type_t)v2, "EnhancedEmergency: received state change from webView, state is FatalError", v6);
        v120 = (uint64_t)v6;
        v6 = (uint8_t *)&direct field offset for SOSUIWebRTCState.zoomLevel;
        sub_100109440(v120);
      }

      v121 = (void *)sub_100136664();
      sub_100135F3C(v121);
      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView));
      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView));
      sub_100128600();
      v123 = v122;
      sub_100135F3C(v122);

      sub_100128628();
      v125 = v124;
      sub_100135F3C(v124);

      v126 = OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView;
      v127 = *(Class *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView);
      if (v127)
      {
        v128 = v127;
        sub_100170E84();

      }
      sub_10012EBA8();
      v129 = *(Class *)((char *)&v3->isa + v126);
      v17 = _TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo.vtable;
      if (v129)
      {
        v130 = v129;
        sub_10016ED48();
        v132 = v131;
        sub_1001360DC(v131, "setUserInteractionEnabled:");

      }
      v133 = (void *)sub_1001364A8(OBJC_IVAR___EmergencyWebRTCViewController_delegate);
      p_vtable = _TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo.vtable;
      if (v133)
      {
        v134 = *(_QWORD *)(v205 + direct field offset for SOSUIWebRTCState.error);
        if (v134)
          v135 = *(unsigned __int8 *)(v134 + direct field offset for SOSUIWebRTCErrorMessage.retryable);
        else
          v135 = 0;
        objc_msgSend(v133, "handleFatalErrorWithRetryable:", v135);
LABEL_81:
        sub_100136124();
      }
      break;
    case 7:
      sub_100136318();
      if (!v173)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v136 = sub_100109570();
      sub_10011ADC0(v136, (uint64_t)&unk_1002E2CC8);
      v137 = sub_10011ADDC();
      v11 = (char **)v202;
      v10 = v205;
      if (sub_100136000(v137))
      {
        v138 = (_WORD *)sub_1001094C8(2);
        sub_100136308(v138);
        sub_10011AE18((void *)&_mh_execute_header, v3, (os_log_type_t)v2, "EnhancedEmergency: received state change from webView, state is Connecting", v6);
        v139 = (uint64_t)v6;
        v6 = (uint8_t *)&direct field offset for SOSUIWebRTCState.zoomLevel;
        sub_100109440(v139);
      }

      v140 = (void *)sub_100136664();
      sub_100135F3C(v140);
      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView));
      sub_100128614();
      v142 = v141;
      sub_100135F3C(v141);

      sub_100128600();
      v144 = v143;
      sub_100135F3C(v143);

      sub_100128628();
      v146 = v145;
      sub_100135F3C(v145);

      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_flashButton));
      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton));
      v17 = _TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo.vtable;
      sub_1001361B0(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton));
      sub_100135F3C(*(void **)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView));
      v147 = *(Class *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView);
      p_vtable = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                         + 24);
      if (v147)
      {
        v148 = v147;
        sub_100170BB4();

      }
      break;
    default:
      sub_100136318();
      if (!v173)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v18 = sub_100109570();
      v19 = sub_100108664(v18, (uint64_t)&unk_1002E2CC8);
      v20 = &selRef_delegate;
      Logger.logObject.getter(v20, v21);
      v22 = sub_10011ADDC();
      if (os_log_type_enabled(v19, v22))
      {
        v199 = v6;
        v23 = (uint8_t *)sub_1001094C8(12);
        v24 = sub_1001094C8(32);
        v208 = v24;
        *(_DWORD *)v23 = 136315138;
        v25 = SOSUIWebRTCStateName.getValue()();
        v210 = sub_100121E04(v25._countAndFlagsBits, (unint64_t)v25._object, &v208);
        p_vtable = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                           + 24);
        v11 = (char **)v202;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v210, v211, v23 + 4, v23 + 12);

        swift_bridgeObjectRelease(v25._object);
        sub_100109638((void *)&_mh_execute_header, v19, v22, "EnhancedEmergency: received unknown state change from webView, state is %s", v23);
        sub_100109598(v24, v26, (uint64_t)&type metadata for Any + 8);
        v27 = v24;
        v10 = v205;
        sub_100109440(v27);
        v28 = (uint64_t)v23;
        v6 = v199;
        sub_100109440(v28);

      }
      else
      {

      }
      v17 = (void **)(_TtCE13InCallServiceCSo33PHAudioCallControlsViewControllerP33_F6B0F727ECA3ADCC7CBC970D9966FC5C24InCallServiceTipUserInfo
                    + 24);
      break;
  }
  v169 = (void *)sub_1001362D8();
  if (v169)
  {
    v170 = v169;
    objc_msgSend(v169, "webRTCstateChange:", v10);
    swift_unknownObjectRelease(v170);
  }
  if ((*(_BYTE *)(*(_QWORD *)((char *)p_vtable[349] + (_QWORD)v3)
                 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_isZoomSupported) & 1) == 0)
    sub_100135F98(*(id *)((char *)&v3->isa + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton), "setAlpha:");
  v171 = (void *)sub_1001362D8();
  if (!v171
    || (v172 = v171, p_vtable = (void **)objc_msgSend(v171, "getRTTState"), swift_unknownObjectRelease(v172), p_vtable))
  {
    v173 = v8 == 1 || v8 == 3;
    if (v173)
    {
      v174 = (void *)sub_1001362D8();
      if (!v174 || (sub_10013647C(v174), sub_1001364C8(), p_vtable != (void **)2))
      {
        v175 = (void *)sub_1001362D8();
        if (!v175 || (sub_10013647C(v175), sub_1001364C8(), p_vtable != (void **)4))
        {
          v176 = (void *)sub_1001362D8();
          if (v176)
          {
            objc_msgSend(v176, "transitionToRTTState:", 2);
LABEL_106:
            sub_100136124();
          }
        }
      }
    }
    else if (v8 != 2
           || (v177 = (void *)sub_1001362D8()) == 0
           || (v178 = v177,
               v179 = objc_msgSend(v177, "isShownAboveCoverSheet"),
               swift_unknownObjectRelease(v178),
               !(_DWORD)v179)
           || (v180 = (void *)sub_1001362D8()) == 0
           || (sub_10013647C(v180), sub_1001364C8(), v179 != (id)4))
    {
      v181 = (void *)sub_1001362D8();
      if (v181)
      {
        objc_msgSend(v181, "transitionToRTTState:", 1);
        goto LABEL_106;
      }
    }
  }
  v182 = *(uint64_t *)((char *)&v3->isa + v207);
  if (v11)
  {
    if (!v182)
      goto LABEL_115;
    v183 = *(_QWORD *)(v182 + direct field offset for SOSUIWebRTCState.state);
    if (*(_QWORD *)&v6[direct field offset for SOSUIWebRTCState.state] == v183)
      goto LABEL_117;
LABEL_113:
    if (v183 == 5)
    {
      v184 = *(id *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel + (_QWORD)v3);
LABEL_116:
      UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v184);

      goto LABEL_117;
    }
LABEL_115:
    v184 = 0;
    goto LABEL_116;
  }
  if (v182)
  {
    v183 = *(_QWORD *)(v182 + direct field offset for SOSUIWebRTCState.state);
    goto LABEL_113;
  }
LABEL_117:
  v185 = *(void **)((char *)v17[368] + (_QWORD)v3);
  objc_opt_self(NSBundle);
  v186 = v185;
  v187 = (objc_class *)sub_10010E310((uint64_t)v186, "mainBundle");
  sub_100136718();
  sub_100136134();
  v188.super.isa = v187;
  v193 = sub_100136094(v189, v190, v191, v192, v188);
  v195 = v194;

  sub_10010E114(v193, v195, v186);
}

NSObject *sub_100134B78()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject **v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v15;
  objc_super v16;

  v1 = &v0[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF126PHSOSUIWebViewEventsHelper_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for PHSOSUIWebViewEventsHelper();
  v2 = objc_msgSendSuper2(&v16, "init");
  v3 = qword_1002D7250;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v5 = type metadata accessor for Logger(0);
  sub_100108664(v5, (uint64_t)&unk_1002E2CC8);
  v6 = v4;
  v8 = Logger.logObject.getter(v6, v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    v15 = v6;
    v12 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v10 + 4, v10 + 12);
    *v11 = v6;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: created PHSOSUIWebViewEventsHelper: %@", v10, 0xCu);
    v13 = sub_1001085C0(&qword_1002D7880);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {

    v8 = v6;
  }

  return v6;
}

uint64_t sub_100134D68()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF126PHSOSUIWebViewEventsHelper_delegate);
  if (result)
  {
    v2 = result;
    sub_1001336CC();
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

uint64_t sub_100134E08(uint64_t a1)
{
  return sub_100134EEC(a1, (void (*)(uint64_t))sub_10013384C);
}

uint64_t sub_100134E68()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF126PHSOSUIWebViewEventsHelper_delegate);
  if (result)
  {
    v2 = result;
    sub_100133A80();
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

uint64_t sub_100134EE0(uint64_t a1)
{
  return sub_100134EEC(a1, (void (*)(uint64_t))sub_100133B28);
}

uint64_t sub_100134EEC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = sub_1001365E4(OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF126PHSOSUIWebViewEventsHelper_delegate);
  if (result)
  {
    v5 = result;
    a2(a1);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_100134F9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  id v5;

  Strong = swift_unknownObjectWeakLoadStrong(v1+ OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF126PHSOSUIWebViewEventsHelper_delegate);
  if (!Strong)
    return 1;
  v4 = Strong;
  v5 = objc_msgSend((id)objc_opt_self(CLEEDRequestHelper), "validateServerCertificateChallenge:", a1);
  swift_unknownObjectRelease(v4);
  return (uint64_t)v5;
}

uint64_t sub_100135050()
{
  uint64_t v0;
  uint64_t result;

  result = swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF126PHSOSUIWebViewEventsHelper_delegate);
  if (result)
    return swift_unknownObjectRelease(result);
  return result;
}

id sub_1001350CC()
{
  return sub_1001354B8(0, type metadata accessor for PHSOSUIWebViewEventsHelper);
}

uint64_t type metadata accessor for PHSOSUIWebViewEventsHelper()
{
  return objc_opt_self(_TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF126PHSOSUIWebViewEventsHelper);
}

id sub_10013510C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_super v6;

  v4[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_isZoomSupported] = 0;
  *(double *)&v4[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_minZoom] = a1;
  *(double *)&v4[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_maxZoom] = a2;
  *(double *)&v4[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_midZoom] = a3;
  *(double *)&v4[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom] = a4;
  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for ZoomStateMachine();
  return objc_msgSendSuper2(&v6, "init");
}

void sub_10013517C()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.ZoomStateMachine", 30, "init()", 6, 0);
  __break(1u);
}

id sub_1001351C8()
{
  return sub_1001354B8(0, type metadata accessor for ZoomStateMachine);
}

uint64_t type metadata accessor for ZoomStateMachine()
{
  return objc_opt_self(_TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine);
}

id sub_1001351F8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  Class isa;
  _OWORD v14[5];
  objc_super v15;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for ButtonBackgroundViewEffectView();
  v1 = objc_msgSendSuper2(&v15, "initWithEffect:", 0);
  v2 = (void *)objc_opt_self(UIBlurEffect);
  v3 = v1;
  v4 = objc_msgSend(v2, "effectWithBlurRadius:", 100.0);
  v14[0] = xmmword_100241FA0;
  v14[1] = xmmword_100241FB0;
  v14[2] = xmmword_100241FC0;
  v14[3] = xmmword_100241FD0;
  v14[4] = xmmword_100241FE0;
  result = objc_msgSend((id)objc_opt_self(UIColorEffect), "_colorEffectCAMatrix:", v14);
  if (result)
  {
    v6 = result;
    if (v4)
    {
      v7 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
      v8 = swift_allocObject(v7, 48, 7);
      *(_OWORD *)(v8 + 16) = xmmword_100241810;
      *(_QWORD *)(v8 + 32) = v4;
      *(_QWORD *)(v8 + 40) = v6;
      *(_QWORD *)&v14[0] = v8;
      specialized Array._endMutation()(v8, v9);
      v10 = *(_QWORD *)&v14[0];
      sub_10010BBE8(0, &qword_1002D8CF8, UIVisualEffect_ptr);
      v11 = v4;
      v12 = v6;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v10);
      objc_msgSend(v3, "setBackgroundEffects:", isa);

      v6 = v11;
    }
    else
    {
      v11 = v3;
    }

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001353C4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/EmergencyWebRTCViewController.swift", 49, 2);
  __break(1u);
}

uint64_t sub_100135438(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void sub_100135450()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.ButtonBackgroundViewEffectView", 44, "init(effect:)", 13, 0);
  __break(1u);
}

id sub_1001354A8()
{
  return sub_1001354B8(0, type metadata accessor for ButtonBackgroundViewEffectView);
}

id sub_1001354B8(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for ButtonBackgroundViewEffectView()
{
  return objc_opt_self(_TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF130ButtonBackgroundViewEffectView);
}

id sub_100135508(_QWORD *a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  v4 = a1[3];
  if (v4)
  {
    v6 = sub_10011ACB0(a1, a1[3]);
    v7 = *(_QWORD *)(v4 - 8);
    __chkstk_darwin(v6, v6);
    v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    sub_100110DC0(a1);
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v2, "initWithTarget:action:", v10, a2);
  swift_unknownObjectRelease(v10);
  return v11;
}

id sub_1001355F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  NSString v6;
  NSDictionary v7;
  id v8;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (a3)
  {
    type metadata accessor for Key(0);
    sub_10012095C(&qword_1002DC260, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100241124);
    v7.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v7.super.isa = 0;
  }
  v8 = objc_msgSend(v3, "initWithString:attributes:", v6, v7.super.isa);

  return v8;
}

unint64_t sub_1001356B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8CF0;
  if (!qword_1002D8CF0)
  {
    v1 = sub_10010AD84((uint64_t *)&unk_1002DA920);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002D8CF0);
  }
  return result;
}

uint64_t sub_1001356F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0(&qword_1002D84F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013573C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100135760()
{
  uint64_t v0;

  return sub_100128D2C(*(void **)(v0 + 16));
}

uint64_t sub_100135768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100135778(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100135780(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "text");

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t sub_1001357EC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100135810()
{
  uint64_t v0;

  sub_100132EEC(v0);
}

void sub_100135818(uint64_t a1)
{
  uint64_t v1;

  sub_100132F8C(a1, v1);
}

uint64_t sub_100135824()
{
  uint64_t v0;
  _QWORD *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1001362F0();
  v0 = swift_task_alloc(dword_1002D8D04);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_100136158(v1);
  return sub_10013288C(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_10013587C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1001366D8();
  sub_1001096B4();
  v0 = swift_task_alloc(dword_1002D8D14);
  v1 = (_QWORD *)sub_100109804(v0);
  sub_1001094A8(v1);
  sub_10013677C();
  return sub_100132180(v2, v3, v4, v5, v6);
}

uint64_t sub_1001358CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  sub_1001366D8();
  sub_1001096B4();
  v0 = swift_task_alloc(dword_1002D8D24);
  v1 = (_QWORD *)sub_100109804(v0);
  sub_1001094A8(v1);
  sub_10013677C();
  return sub_100131D4C(v2, v3, v4, v5, v6);
}

uint64_t sub_10013591C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  sub_1001366D8();
  sub_1001096B4();
  v0 = swift_task_alloc(dword_1002D8D34);
  v1 = (_QWORD *)sub_100109804(v0);
  sub_1001094A8(v1);
  sub_10013677C();
  return sub_1001318F4(v2, v3, v4, v5, v6);
}

uint64_t sub_10013596C()
{
  uint64_t v0;
  _QWORD *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1001362F0();
  v0 = swift_task_alloc(dword_1002D8D44);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_100136158(v1);
  return sub_100131544(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1001359C4()
{
  uint64_t v0;

  sub_100136490();
  sub_1001097E8();

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001359F0()
{
  uint64_t v0;
  _QWORD *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1001362F0();
  v0 = swift_task_alloc(dword_1002D8D54);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_100136158(v1);
  return sub_1001310E0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_100135A48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100136644();
  v0 = swift_task_alloc(dword_1002D8D64);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_1001361BC(v1);
  return sub_100130B80(v2, v3, v4, v5);
}

uint64_t sub_100135A94()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return sub_100110E88(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_100135AD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  sub_1001366D8();
  sub_1001096B4();
  v0 = swift_task_alloc(dword_1002D8D74);
  v1 = (_QWORD *)sub_100109804(v0);
  sub_1001094A8(v1);
  sub_10013677C();
  return sub_1001302A0(v2, v3, v4, v5, v6);
}

uint64_t sub_100135B28()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100136644();
  v0 = swift_task_alloc(dword_1002D8D84);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_1001361BC(v1);
  return sub_10012FDAC(v2, v3, v4, v5);
}

uint64_t sub_100135B74(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_100135B84()
{
  uint64_t v0;

  sub_100136490();
  sub_1001097E8();
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100135BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc(dword_1002D8D94);
  v3 = (_QWORD *)sub_100109804(v2);
  v4 = sub_1001363B8(v3);
  return sub_10012FB8C(v4, v5, v6, v7, v8, v1);
}

uint64_t sub_100135C1C()
{
  uint64_t v0;

  sub_100136490();
  sub_1001097E8();

  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100135C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = swift_task_alloc(dword_1002D8DA4);
  v4 = (_QWORD *)sub_100109804(v3);
  v5 = sub_1001363B8(v4);
  return sub_10012F728(v5, v6, v7, v8, v9, v2, v1);
}

uint64_t sub_100135CCC()
{
  uint64_t v0;

  sub_100136490();
  sub_1001097E8();
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100135CF0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_100136644();
  v0 = swift_task_alloc(dword_1002D8DB4);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_1001361BC(v1);
  return sub_10012F31C(v2, v3, v4, v5);
}

uint64_t sub_100135D40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1001366D8();
  sub_1001096B4();
  v0 = swift_task_alloc(dword_1002D8DC4);
  v1 = (_QWORD *)sub_100109804(v0);
  sub_1001094A8(v1);
  sub_10013677C();
  return sub_10012F014(v2, v3, v4, v5, v6);
}

uint64_t sub_100135D90()
{
  uint64_t v0;

  sub_100136490();
  sub_1001097E8();

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100135DBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  sub_1001366D8();
  sub_1001096B4();
  v0 = swift_task_alloc(dword_1002D8DE4);
  v1 = (_QWORD *)sub_100109804(v0);
  sub_1001094A8(v1);
  sub_10013677C();
  return sub_10012DFC4(v2, v3, v4, v5, v6);
}

uint64_t sub_100135E08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  sub_1001096DC();
  sub_1001094F4();
  return v9 & 1;
}

uint64_t sub_100135E98(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100135EB4()
{
  uint64_t v0;

  return swift_errorRelease(v0);
}

uint64_t sub_100135EBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v2, v1 + 24, v4, v3);
}

id sub_100135ED8(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, *(SEL *)(v2 + 2128), a1);
}

void sub_100135EEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(v2 + a2);
  *(_QWORD *)(v2 + a2) = a1;

}

void sub_100135EF8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_100135F0C(float a1)
{
  uint64_t v1;
  float *v2;

  *v2 = a1;
  return swift_errorRetain(v1);
}

uint64_t sub_100135F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, a1, a2, 0);
}

id sub_100135F3C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3824), 0.0);
}

uint64_t sub_100135F48(uint64_t a1)
{
  uint64_t v1;

  sub_100108600(v1, 0, 1, a1);
  return type metadata accessor for MainActor(0);
}

uint64_t sub_100135F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100108600(a1, 0, 1, a4);
  return type metadata accessor for MainActor(0);
}

uint64_t sub_100135F88(uint64_t a1)
{
  uint64_t v1;

  return swift_arrayDestroy(v1, 1, a1);
}

id sub_100135F98(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0.0);
}

void sub_100135FA0(uint64_t a1@<X8>)
{
  uint64_t v1;

}

uint64_t sub_100135FC4(uint64_t a1, uint64_t a2)
{
  NSBundle v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v6;

  v3.value._countAndFlagsBits = 0x65536C6C61436E49;
  v3.value._object = (void *)0xED00006563697672;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, v3, v2, v4, v6)._countAndFlagsBits;
}

void sub_100135FF8()
{
  void *v0;

}

BOOL sub_100136000(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100136010()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  v5 = *(_QWORD *)(v3 + 56);
  *v4 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  return swift_task_dealloc(v5);
}

uint64_t sub_100136050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

uint64_t sub_10013605C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100108664(a1, a2);
  return swift_errorRetain(v2);
}

void sub_100136074(id a1)
{

}

uint64_t sub_100136084()
{
  uint64_t v0;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_100136094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSBundle a5)
{
  Swift::String v5;
  Swift::String v7;

  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&a3, a5, v5, v7)._countAndFlagsBits;
}

id sub_1001360A4(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id sub_1001360B0(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_1001360B8()
{
  uint64_t v0;

  return swift_errorRetain(v0);
}

BOOL sub_1001360C0(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_1001360C8@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

id sub_1001360DC(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0);
}

void sub_1001360F4(id a1)
{

}

uint64_t sub_100136110(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100136118()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100136124()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

uint64_t sub_10013612C()
{
  uint64_t v0;

  return _swift_stdlib_bridgeErrorToNSError(v0);
}

double sub_100136158(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

BOOL sub_10013617C(os_log_type_t a1)
{
  uint64_t v1;

  return os_log_type_enabled(*(os_log_t *)(v1 - 56), a1);
}

BOOL sub_10013618C(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_100136194()
{
  return type metadata accessor for TaskPriority(0);
}

id sub_10013619C(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1001361A4()
{
  return static TaskPriority.userInitiated.getter();
}

id sub_1001361B0(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3824), 1.0);
}

uint64_t sub_1001361BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

_WORD *sub_1001361D8(_WORD *result)
{
  *result = 0;
  return result;
}

id sub_1001361E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, *(SEL *)(v2 + 1400), v0);
}

id sub_1001361F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, *(SEL *)(v0 + 2128), v2);
}

void sub_100136204()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_100136214()
{
  return static TaskPriority.userInitiated.getter();
}

double sub_100136230@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return *(double *)(a1 + a2);
}

id sub_100136244(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3512), 1);
}

id sub_100136250(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  return objc_msgSend(v2, *(SEL *)(v1 + 2128), a1);
}

uint64_t sub_100136264()
{
  return static os_log_type_t.default.getter();
}

void sub_10013626C()
{
  void *v0;

}

id sub_100136274(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id sub_10013627C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 1400));
}

id sub_100136284(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 1);
}

id sub_10013628C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3656));
}

void sub_100136294()
{
  sub_10011102C();
}

uint64_t sub_10013629C(float *a1, float a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *a1 = a2;
  *(_QWORD *)(v3 - 88) = v4;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 88, v3 - 80, a1 + 1, (char *)a1 + v2);
}

void sub_1001362BC(id a1)
{

}

id sub_1001362D0(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3680));
}

uint64_t sub_1001362D8()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

uint64_t sub_1001362E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return dispatch thunk of Actor.unownedExecutor.getter(v2, a2);
}

id sub_1001362E8(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 656));
}

_WORD *sub_100136308(_WORD *result)
{
  *result = 0;
  return result;
}

void sub_100136324(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_100136330()
{
  return static MainActor.shared.getter();
}

void sub_10013633C(id a1)
{

}

uint64_t sub_10013634C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a9, v9, a3, a4);
}

uint64_t sub_100136358(uint64_t (*a1)(void))
{
  return a1();
}

id sub_100136368(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

id sub_100136370(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return objc_msgSend(a1, *(SEL *)(v5 + 1408), v4, a4, 64);
}

id sub_100136380()
{
  uint64_t v0;
  uint64_t v1;

  return objc_msgSend(*(id *)(v0 + v1), "bottomAnchor");
}

void sub_100136390()
{
  Swift::String v0;

  v0._countAndFlagsBits = 120;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
}

id sub_10013639C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3680));
}

void sub_1001363A4()
{
  void *v0;

}

uint64_t sub_1001363B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void sub_1001363D8()
{
  void *v0;

}

id sub_1001363E0()
{
  return sub_10013510C(-1.0, -1.0, -1.0, -1.0);
}

void sub_1001363F8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void sub_100136424()
{
  void *v0;

}

id sub_10013642C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 1272));
}

uint64_t sub_100136434()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

uint64_t sub_10013643C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 56) = a1;
  return static os_log_type_t.error.getter();
}

id sub_100136444(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0.0, 0.0, 0.0, 0.0);
}

uint64_t sub_100136458(uint64_t a1)
{
  uint64_t v1;

  return sub_100109FF4(a1, 1, v1);
}

id sub_100136464(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 696));
}

uint64_t sub_10013646C()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 64));
}

void sub_100136474(id a1)
{

}

id sub_10013647C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2696));
}

id sub_100136488()
{
  void *v0;

  return v0;
}

uint64_t sub_100136490()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
}

id sub_100136498(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3864));
}

id sub_1001364A0()
{
  void *v0;

  return v0;
}

uint64_t sub_1001364A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_unknownObjectWeakLoadStrong(v1 + a1);
}

id sub_1001364B0(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2744));
}

id sub_1001364BC()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2584));
}

uint64_t sub_1001364C8()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

id sub_1001364D4(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3864));
}

void sub_1001364DC(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

uint64_t sub_1001364E4(uint64_t a1, unint64_t *a2)
{
  _QWORD *v2;

  return sub_10010BBE8(0, a2, v2);
}

id sub_1001364F0()
{
  void *v0;

  return v0;
}

id sub_1001364F8(id a1, SEL a2)
{
  double v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_100136500()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 56);
}

id sub_10013650C(id a1, SEL a2)
{
  double v2;

  return objc_msgSend(a1, a2, v2);
}

void sub_100136514()
{
  sub_100128614();
}

void sub_10013652C()
{
  sub_100128600();
}

id sub_100136560()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

id sub_100136568(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 1664));
}

id sub_100136570(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  return objc_msgSend(a9, a2);
}

id sub_100136578()
{
  void *v0;

  return v0;
}

void sub_100136580()
{
  void *v0;

}

id sub_100136588(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 696));
}

id sub_100136590(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2512));
}

BOOL sub_100136598(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

_WORD *sub_1001365A0(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1001365AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

id sub_1001365BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, *(SEL *)(v3 + 1400), *(_QWORD *)(v1 + a1));
}

uint64_t sub_1001365CC()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 48));
}

uint64_t sub_1001365DC()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 48));
}

uint64_t sub_1001365E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_unknownObjectWeakLoadStrong(v1 + a1);
}

uint64_t sub_1001365EC()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + v1);
}

id sub_1001365F8()
{
  void *v0;

  return v0;
}

id sub_100136600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(*(id *)(v0 + v1), *(SEL *)(v2 + 3864));
}

uint64_t sub_100136610()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + v1);
}

BOOL sub_10013661C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10013662C()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 32));
}

id sub_100136634(double a1, double a2, double a3)
{
  void *v3;
  uint64_t v4;
  double v5;

  return objc_msgSend(v3, *(SEL *)(v4 + 128), a3 * v5);
}

id sub_100136654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1001283AC(a12);
}

uint64_t sub_100136664()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + *(_QWORD *)(v1 + 2976));
}

id sub_100136670(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 656));
}

void sub_100136678()
{
  void *v0;

}

void sub_100136680()
{
  void *v0;

}

id sub_100136688(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 584));
}

uint64_t sub_100136690()
{
  _QWORD *v0;

  return objc_opt_self(*v0);
}

uint64_t sub_100136698()
{
  return specialized Array._endMutation()();
}

id sub_1001366A0(uint64_t a1, uint64_t a2)
{
  void *v2;

  sub_100108664(a1, a2);
  return v2;
}

uint64_t sub_1001366B4()
{
  return static MainActor.shared.getter();
}

void sub_1001366C0(uint64_t a1)
{
  uint64_t v1;

  sub_10012E4E8(a1, v1);
}

uint64_t sub_1001366CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v5, a3, a4);
}

_QWORD *sub_1001366EC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result[2] = v2;
  result[3] = a2;
  result[4] = v4;
  result[5] = v5;
  result[6] = v3;
  return result;
}

uint64_t sub_100136700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return Double.write<A>(to:)(a1, v1, v2);
}

uint64_t sub_10013670C(uint64_t a1, uint64_t a2)
{
  return specialized Array._endMutation()(a1, a2);
}

uint64_t sub_100136718()
{
  return 0x4152454D4143;
}

id sub_10013672C(void *a1)
{
  return objc_msgSend(a1, "mainBundle");
}

void sub_100136738()
{
  void *v0;

}

uint64_t sub_100136744(uint64_t a1)
{
  uint64_t v1;

  return swift_unknownObjectWeakInit(a1 + 16, v1);
}

uint64_t sub_100136750()
{
  uint64_t v0;

  return swift_errorRetain(v0);
}

id sub_100136758(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

NSString sub_100136770()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100136790@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_unknownObjectWeakLoadStrong(v1 + a1);
}

id sub_100136798()
{
  void *v0;

  return v0;
}

id sub_1001367A0(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3328));
}

uint64_t sub_1001367A8()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t sub_1001367B4()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + v1);
}

id sub_1001367C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(*(id *)(v0 + v2), *(SEL *)(v1 + 560));
}

id sub_1001367CC(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 656));
}

uint64_t sub_1001367D4(uint64_t a1)
{
  uint64_t v1;

  return sub_10010E08C(a1, v1);
}

uint64_t sub_1001367DC()
{
  uint64_t v0;

  return v0;
}

void sub_1001367E8()
{
  void *v0;

}

id sub_1001367F0(id a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + v1) = a1;
  return a1;
}

uint64_t sub_1001367FC()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 40));
}

uint64_t sub_100136810(uint64_t a1)
{
  return swift_release(a1);
}

void sub_100136818()
{
  void *v0;

}

void sub_100136820(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  char *v15;
  id v16;
  double v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  Class isa;
  uint64_t v24;
  void *v25;
  objc_super v26;

  v2 = v1;
  v26.receiver = v1;
  v26.super_class = (Class)sub_100137260();
  objc_msgSendSuper2(&v26, "viewWillAppear:", a1 & 1);
  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  static os_log_type_t.default.getter();
  sub_100137268((uint64_t)"Presenting share card", 21, v4, (uint64_t)&_mh_execute_header);
  v5 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v6 = objc_msgSend(v5, "delegate");

  if (v6)
  {
    v7 = objc_opt_self(ICSApplicationDelegate);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      swift_unknownObjectRetain(v6);
      v9 = ICSApplicationDelegate.bannerPresentationManager.getter();
      swift_unknownObjectRelease(v6);
      v6 = v9;
      v10 = (void *)dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();

    }
    else
    {
      swift_unknownObjectRelease(v6);
      v10 = 0;
      v6 = 0;
    }
  }
  else
  {
    v10 = 0;
    v8 = 0;
  }
  v11 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsShareCardViewController(0));
  v12 = v10;
  v13 = (void *)ConversationControlsShareCardViewController.init(conversationControlsManager:)(v10);
  v14 = sub_100137158();
  v15 = v2;
  ConversationControlsShareCardViewController.delegate.setter(v2, v14);
  v16 = objc_msgSend(v13, "sheetPresentationController");
  if (v16)
  {
    v18 = v16;
    v19 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
    v20 = swift_allocObject(v19, 40, 7);
    *(_OWORD *)(v20 + 16) = xmmword_1002420C0;
    v21 = objc_msgSend((id)objc_opt_self(UISheetPresentationControllerDetent), "mediumDetent");
    *(_QWORD *)(v20 + 32) = v21;
    specialized Array._endMutation()(v21, v22);
    sub_100137194();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v20);
    objc_msgSend(v18, "setDetents:", isa);

    v24 = swift_allocObject(&unk_100289D68, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16);
    swift_retain(v24);
    ConversationControlsShareCardViewController.updateSheetDetent.setter(sub_1001371F4, v24);

    *(_QWORD *)&v17 = swift_release(v24).n128_u64[0];
  }
  objc_msgSend(v15, "presentViewController:animated:completion:", v13, 1, 0, v17);

  v25 = *(void **)&v15[OBJC_IVAR____TtC13InCallService34ShareCardRemoteAlertViewController_shareViewController];
  *(_QWORD *)&v15[OBJC_IVAR____TtC13InCallService34ShareCardRemoteAlertViewController_shareViewController] = v13;

}

void sub_100136B10(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Class isa;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  char isEscapingClosureAtFileLocation;
  _QWORD v20[5];
  uint64_t v21;
  char v22[24];
  char v23[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
    v8 = swift_allocObject(v7, 40, 7);
    *(_OWORD *)(v8 + 16) = xmmword_1002420C0;
    *(_QWORD *)(v8 + 32) = a1;
    v20[0] = v8;
    specialized Array._endMutation()(v8, v9);
    sub_100137194();
    v10 = a1;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v20[0]);
    objc_msgSend(v6, "setDetents:", isa);

  }
  swift_beginAccess(v4, v22, 0, 0);
  v12 = swift_unknownObjectWeakLoadStrong(v4);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = swift_allocObject(&unk_100289D90, 32, 7);
    *(_QWORD *)(v14 + 16) = a2;
    *(_QWORD *)(v14 + 24) = a1;
    v15 = swift_allocObject(&unk_100289DB8, 32, 7);
    *(_QWORD *)(v15 + 16) = sub_100137228;
    *(_QWORD *)(v15 + 24) = v14;
    v20[4] = sub_100137240;
    v21 = v15;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_1001711D4;
    v20[3] = &unk_100289DD0;
    v16 = _Block_copy(v20);
    v17 = v21;
    v18 = a1;
    swift_retain(a2);
    swift_retain(v15);
    objc_msgSend(v13, "animateChanges:", v16, swift_release(v17).n128_f64[0]);

    _Block_release(v16);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v15, "", 104, 30, 39, 1);
    swift_release(v14);
    swift_release(v15);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_100136D18(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_msgSend(a2, "identifier");
    objc_msgSend(v5, "setSelectedDetentIdentifier:", v6);

  }
}

uint64_t sub_100136DEC()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = objc_msgSend(v0, "_remoteViewControllerProxy");
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v6, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1001356F4((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_1001085C0(&qword_1002D8E20);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_100137118((uint64_t)v7);
    return 0;
  }
}

id sub_100136EA4(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  objc_class *v6;
  NSString v7;
  id v8;
  objc_super v10;

  v6 = (objc_class *)sub_100137260();
  *(_QWORD *)&v3[OBJC_IVAR____TtC13InCallService34ShareCardRemoteAlertViewController_shareViewController] = 0;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = v6;
  v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

id sub_100136FA0(void *a1)
{
  char *v1;
  objc_class *v3;
  id v4;
  objc_super v6;

  v3 = (objc_class *)sub_100137260();
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService34ShareCardRemoteAlertViewController_shareViewController] = 0;
  v6.receiver = v1;
  v6.super_class = v3;
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id UserFeedbackViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_100137260();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShareCardRemoteAlertViewController()
{
  return objc_opt_self(_TtC13InCallService34ShareCardRemoteAlertViewController);
}

void *sub_10013707C()
{
  uint64_t v0;
  void *result;
  void *v2;

  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  static os_log_type_t.default.getter();
  sub_100137268((uint64_t)"Share card dismissed, dismissing remote alert", 45, v0, (uint64_t)&_mh_execute_header);
  result = (void *)sub_100136DEC();
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "dismiss");
    return (void *)swift_unknownObjectRelease(v2);
  }
  return result;
}

uint64_t sub_100137118(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001085C0(&qword_1002D84F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100137158()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8E28;
  if (!qword_1002D8E28)
  {
    v1 = type metadata accessor for ShareCardRemoteAlertViewController();
    result = swift_getWitnessTable(&unk_1002420F4, v1);
    atomic_store(result, (unint64_t *)&qword_1002D8E28);
  }
  return result;
}

unint64_t sub_100137194()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8E30;
  if (!qword_1002D8E30)
  {
    v1 = objc_opt_self(UISheetPresentationControllerDetent);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D8E30);
  }
  return result;
}

uint64_t sub_1001371D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001371F4(void *a1)
{
  uint64_t v1;

  sub_100136B10(a1, v1);
}

uint64_t sub_1001371FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100137228()
{
  uint64_t v0;

  sub_100136D18(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100137230()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100137240()
{
  uint64_t v0;

  sub_1001711B8(*(void (**)(void))(v0 + 16));
}

uint64_t sub_100137248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100137258(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100137260()
{
  uint64_t v0;

  return swift_getObjectType(v0);
}

uint64_t sub_100137268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return os_log(_:dso:log:type:_:)(a1, a2, 2, a4, v4);
}

uint64_t sub_100137278(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) == 0)
    return *(_QWORD *)(a1 + 16);
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  return __CocoaSet.count.getter(a1);
}

NSString sub_100137298()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1002E2DD0 = (uint64_t)result;
  return result;
}

NSString sub_1001372CC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1002E2DD8 = (uint64_t)result;
  return result;
}

NSString sub_100137300()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1002E2DE0 = (uint64_t)result;
  return result;
}

NSString sub_100137334()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1002E2DE8 = (uint64_t)result;
  return result;
}

NSString sub_100137368()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1002E2DF0 = (uint64_t)result;
  return result;
}

uint64_t sub_1001373BC()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
}

uint64_t sub_100137418(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectWeakAssign(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate, a1);
  return swift_unknownObjectRelease(a1);
}

void sub_10013746C()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_tuCall);
  sub_100109438();
}

void sub_1001374DC(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEnhancedEmergencyCoordinator_tuCall);
}

void sub_1001374E8(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
}

void sub_1001374F4(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
}

void sub_100137500(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController);
}

void sub_10013750C(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEnhancedEmergencyCoordinator_pipCoordinator);
}

void sub_100137518(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper);
}

void sub_100137524(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest);
}

uint64_t sub_100137550()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState);
}

uint64_t sub_100137584(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState) = result;
  return result;
}

void sub_100137594(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest);
}

void sub_1001375A0(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
}

uint64_t sub_1001375CC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState);
}

uint64_t sub_100137600(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState) = result;
  return result;
}

NSObject *sub_100137610()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  id v25;
  char *v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  _QWORD *v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  objc_super v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;

  sub_10010BC70();
  v55 = v3;
  v56 = v4;
  v5 = v0;
  v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  sub_10011AE0C();
  __chkstk_darwin(v7, v8);
  v9 = sub_100143840();
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(v9);
  sub_10011AE0C();
  __chkstk_darwin(v11, v12);
  sub_10010BC88();
  v15 = v14 - v13;
  type metadata accessor for DispatchQoS(0);
  sub_10011AE0C();
  __chkstk_darwin(v16, v17);
  sub_1001436D4();
  v18 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate]);
  *(_QWORD *)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_tuCall] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_pipCoordinator] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper] = 0;
  v49 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestQueue;
  sub_10011ADD4(v18, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v19 = v5;
  static DispatchQoS.unspecified.getter(v19);
  v54 = _swiftEmptyArrayStorage;
  sub_1001081CC((unint64_t *)&qword_1002D8CE8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v21 = v20;
  v22 = sub_1001085C0((uint64_t *)&unk_1002DA920);
  sub_100143410((unint64_t *)&qword_1002D8CF0, (uint64_t *)&unk_1002DA920);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v54, v22, v23, v10, v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v50 + 104))(v1, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v51);
  *(_QWORD *)&v5[v49] = ((uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:))(0xD00000000000003CLL, 0x80000001001F25B0, v2, v15, v1, 0);
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaSet] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_maxRequestCountPerRequestType] = 3;
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState] = 0;
  v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequestHasBeenAccepted] = 0;
  v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState] = 3;
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState] = 3;
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EnhancedEmergencyDataCollector()), "init");
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_streamingRequestCount] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequestCount] = 0;

  v53.receiver = v19;
  v53.super_class = (Class)type metadata accessor for EnhancedEmergencyCoordinator();
  v24 = *(NSObject **)((char *)objc_msgSendSuper2(&v53, "init")
                     + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestQueue);
  v25 = objc_allocWithZone((Class)CLEEDRequestHelper);
  v26 = (char *)sub_100143824();
  v27 = objc_msgSend(v19, "initWithDelegate:andQueue:", v26, v24);
  v28 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper;
  v29 = *(void **)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
  *(_QWORD *)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper] = v27;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v30 = sub_100109570();
  v31 = sub_100143A60(v30, (uint64_t)&unk_1002E2CC8);
  Logger.logObject.getter(v31, v32);
  v33 = sub_10011ADDC();
  if (sub_10011AFD8(v33))
  {
    v52 = v33;
    v34 = sub_1001094C8(22);
    v35 = (_QWORD *)sub_1001094C8(16);
    *(_DWORD *)v34 = 138412546;
    v54 = v31;
    v36 = v31;
    v37 = sub_100143904();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v38, v39, v34 + 12);
    *v35 = v31;

    *(_WORD *)(v34 + 12) = 2112;
    v40 = *(NSObject **)&v26[v28];
    if (v40)
    {
      v54 = v40;
      v41 = v40;
      v42 = sub_100143904();
      v45 = v34 + 22;
    }
    else
    {
      v54 = 0;
      v42 = sub_100143904();
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v42, v43, v44, v45);
    v35[1] = v40;

    sub_1001364DC((void *)&_mh_execute_header, v24, v52, "EnhancedEmergency: created EnhancedEmergencyCoordinator: %@, eedRequestHelper: %@", (uint8_t *)v34);
    v46 = sub_1001085C0(&qword_1002D7880);
    sub_100143714((uint64_t)v35, v47, v46);
    sub_100109440((uint64_t)v35);
    sub_100109440(v34);
  }
  else
  {

    v24 = v31;
  }

  sub_10013E114();
  sub_10013C39C();
  sub_10013DBB8();
  sub_10013DCC4();
  sub_100137F44();

  return v31;
}

id sub_100137B38()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id result;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  double v10;
  double v11;

  v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v2, "parentViewController");

  if (!v3)
    goto LABEL_9;
  result = sub_10010E310(v4, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v6 = result;
  v7 = objc_msgSend(result, "window");

  if (!v7)
  {
    v8 = sub_100194FF8(*(_QWORD *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState), (uint64_t)&off_1002880C0);
    if ((v8 & 1) == 0)
    {
LABEL_9:

      return 0;
    }
  }
  result = sub_10010E310(v8, "view");
  if (result)
  {
    v9 = result;
    objc_msgSend(result, "alpha");
    v11 = v10;

    return (id)(v11 != 0.0);
  }
LABEL_12:
  __break(1u);
  return result;
}

id sub_100137C7C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id result;
  void *v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v2, "parentViewController");

  if (!v3)
  {

    return 0;
  }
  result = sub_10010E310(v4, "view");
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend(result, "window");

    return (id)(v7 != 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_100137D50()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequestHasBeenAccepted);
}

uint64_t sub_100137D84(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequestHasBeenAccepted) = result;
  return result;
}

uint64_t sub_100137DB8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls);
}

void sub_100137E08(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls) = a1;
  sub_100137E18();
}

void sub_100137E18()
{
  unsigned __int8 *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  char v7;
  id v8;
  int v9;
  uint64_t v10;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v3 = sub_100109570();
  sub_100108664(v3, (uint64_t)&unk_1002E2CC8);
  sub_1001437A0();
  sub_10014385C();
  v4 = sub_10011ADDC();
  if (sub_100109560(v4))
  {
    v5 = (uint8_t *)sub_1001094C8(8);
    *(_DWORD *)v5 = 67109120;
    v9 = v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v5 + 4, v5 + 8);

    _os_log_impl((void *)&_mh_execute_header, v1, v2, "EnhancedEmergency: should hide video streaming controls: %{BOOL}d", v5, 8u);
    sub_100109440((uint64_t)v5);

  }
  else
  {

  }
  v6 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v6)
  {
    v7 = v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls];
    v8 = v6;
    sub_1001285AC(v7);

  }
}

void sub_100137F44()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
  v3 = sub_10011ADDC();
  if (sub_100109560(v3))
  {
    v4 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v4);
    sub_100123A2C((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: setting up app active notification observers");
    sub_100109440(v1);
  }

  v7 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v7, "addObserver:selector:name:object:", v0, "appWillResignActive", UIApplicationWillResignActiveNotification, 0);

  v8 = sub_100143698();
  v12 = v8;
  if (qword_1002D72C8 != -1)
    v8 = (id)swift_once(&qword_1002D72C8, sub_100137298);
  sub_100143594((uint64_t)v8, v9, v10, v11, qword_1002E2DD0);

  v13 = sub_100143698();
  v17 = v13;
  if (qword_1002D72D0 != -1)
    v13 = (id)swift_once(&qword_1002D72D0, sub_1001372CC);
  sub_100143594((uint64_t)v13, v14, v15, v16, qword_1002E2DD8);

  v18 = sub_100143698();
  v22 = v18;
  if (qword_1002D72D8 != -1)
    v18 = (id)swift_once(&qword_1002D72D8, sub_100137300);
  sub_100143594((uint64_t)v18, v19, v20, v21, qword_1002E2DE0);

  v23 = sub_100143698();
  v27 = v23;
  if (qword_1002D72E0 != -1)
    v23 = (id)swift_once(&qword_1002D72E0, sub_100137334);
  sub_100143594((uint64_t)v23, v24, v25, v26, qword_1002E2DE8);

  v28 = sub_100143698();
  v29 = v28;
  if (qword_1002D72E8 != -1)
  {
    swift_once(&qword_1002D72E8, sub_100137368);
    v28 = v29;
  }
  objc_msgSend(v28, "addObserver:selector:name:object:", v0, "handleBannerUploadRequestPickerDuringStreaming", qword_1002E2DF0, 0);
  sub_1001436A4(v29);
}

void sub_1001381DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  char *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  void *v31;
  id v32;
  uint8_t *v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;

  sub_100136544();
  a21 = v24;
  a22 = v25;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v26 = sub_100109570();
  sub_100108664(v26, (uint64_t)&unk_1002E2CC8);
  v27 = sub_1001437A0();
  sub_10014385C();
  v28 = sub_10011ADDC();
  if (sub_10011AFD8(v28))
  {
    v29 = (uint8_t *)sub_1001094C8(12);
    v30 = (_QWORD *)sub_1001094C8(8);
    *(_DWORD *)v29 = 138412290;
    v31 = *(void **)&v22[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v31)
    {
      a9 = *(_QWORD *)&v22[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
      v32 = v31;
      v33 = v29 + 4;
      v34 = v29 + 12;
    }
    else
    {
      v34 = v29 + 12;
      a9 = 0;
      v33 = v29 + 4;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&a9, &a10, v33, v34);
    *v30 = v31;

    sub_100109638((void *)&_mh_execute_header, v23, v28, "EnhancedEmergency: going to end video streaming and clean eedRequestHelper: %@", v29);
    v35 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v30, v36, v35);
    sub_100109440((uint64_t)v30);
    sub_100109440((uint64_t)v29);

  }
  else
  {

  }
  objc_msgSend(*(id *)&v22[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper], "cleanup");
  sub_100137518(0);
  v37 = *(void **)&v22[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v37)
  {
    v38 = v37;
    sub_100143B68();

  }
  v39 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector;
  v40 = *(id *)&v22[OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector];
  sub_1001467C8();

  v41 = *(id *)&v22[v39];
  sub_100147700();

  sub_100143530();
}

#error "1001383E4: call analysis failed (funcsize=13)"

#error "10013852C: call analysis failed (funcsize=83)"

void sub_100138590()
{
  char *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  NSObject *v18;
  char *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char **v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;

  sub_10010BC70();
  v2 = v0;
  v3 = sub_10010AE94();
  sub_1001438E0();
  __chkstk_darwin(v4, v5);
  sub_10010BC88();
  v8 = v7 - v6;
  v9 = (uint64_t)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate];
  v10 = (void *)sub_10010E340();
  if (v10)
  {
    objc_msgSend(v10, "requestToPresentVideoStreamingRequestBanner");
    sub_1001437DC();
  }
  v11 = (void *)sub_10010E340();
  if (v11)
  {
    objc_msgSend(v11, "requestHapticForRequest");
    sub_1001437DC();
  }
  v12 = (void *)sub_10010E340();
  if (v12)
  {
    objc_msgSend(v12, "requestToEnableVideoStreamingButton");
    sub_1001437DC();
  }
  v43 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController;
  if (*(_QWORD *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController])
  {
    sub_10010E340();
    v13 = sub_100143B7C();
    if (v0)
    {
      sub_100143BA0(v0, "removeWebRTCViewController:");
      sub_100136124();
    }
    sub_1001374E8(0);

  }
  v14 = objc_allocWithZone((Class)type metadata accessor for EmergencyWebRTCViewController());
  v44 = sub_100143B60();
  v15 = sub_10012A4EC();
  sub_1001285AC(v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls]);
  v16 = v15;
  sub_1001374E8((uint64_t)v15);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v17 = sub_100109570();
  v18 = sub_100108664(v17, (uint64_t)&unk_1002E2CC8);
  v19 = v2;
  Logger.logObject.getter(v19, v20);
  v21 = sub_10011ADDC();
  if (sub_10011AFD8(v21))
  {
    v41 = v8;
    v42 = v1;
    v22 = sub_1001094C8(22);
    v23 = (_QWORD *)sub_1001094C8(16);
    *(_DWORD *)v22 = 138412546;
    v45 = v19;
    v24 = v19;
    v25 = sub_100143AC4();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v25, v26, v27, v28);
    *v23 = v19;

    *(_WORD *)(v22 + 12) = 2112;
    v29 = *(char **)&v2[v43];
    if (v29)
    {
      v45 = v29;
      v30 = v29;
      v31 = (char **)sub_100143AC4();
    }
    else
    {
      v34 = v22 + 22;
      v45 = 0;
      v31 = &v45;
      v32 = &v46;
      v33 = v22 + 14;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v31, v32, v33, v34);
    v23[1] = v29;

    sub_1001364DC((void *)&_mh_execute_header, v18, v21, "EnhancedEmergency: emergencyCoordinator :%@ created webTRCViewController: %@", (uint8_t *)v22);
    v35 = sub_1001085C0(&qword_1002D7880);
    sub_100143714((uint64_t)v23, v36, v35);
    sub_100109440((uint64_t)v23);
    sub_100109440(v22);

    v8 = v41;
    v1 = v42;
  }
  else
  {

  }
  swift_unknownObjectWeakAssign((char *)v16 + OBJC_IVAR___EmergencyWebRTCViewController_delegate, v19);
  v37 = (void *)sub_10010E340();
  if (v37)
  {
    sub_1001360B0(v37, "addWebRTCViewController:");
    sub_1001437DC();
  }
  sub_10013892C();
  v38 = *(id *)&v19[OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector];
  v39 = objc_msgSend(v44, "ID");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v39);

  UUID.uuidString.getter(v40);
  sub_100143934();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v8, v3);
  sub_1001464E0(v8, v9);
  sub_100109558();

  sub_10010BC44();
}

void sub_10013892C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  double v5;
  double v6;
  void *v7;
  id v8;

  v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "streamingFPS");
    v4 = (uint64_t)sub_10010E3C8((uint64_t)v3, "streamingBitrate");

    if ((unsigned __int128)(v4 * (__int128)1000) >> 64 != (1000 * v4) >> 63)
    {
      __break(1u);
      return;
    }
    v5 = (double)(uint64_t)v3;
    v6 = (double)(1000 * v4);
  }
  else
  {
    v5 = 24.0;
    v6 = 800000.0;
  }
  v7 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (v7)
  {
    v8 = v7;
    sub_100130D8C(v5, v6);
    sub_1001436A4(v8);
  }
}

void sub_100138A08()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  char *v7;
  char *v8;
  os_log_type_t v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  NSObject *v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  sub_100143A04();
  v2 = v0;
  sub_10010AE94();
  sub_10014377C();
  __chkstk_darwin(v3, v4);
  sub_10014357C();
  if (*(_QWORD *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController])
  {
    swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate]);
    v5 = sub_100143B60();
    if (v0)
    {
      sub_1001360B0(v0, "removeMediaRequestViewController:");
      sub_100136124();
    }
    sub_1001374F4(0);

  }
  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EmergencyMediaRequestViewController()), "init");
  v7 = (char *)v6;
  sub_1001374F4((uint64_t)v6);
  v8 = &v7[OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate];
  *((_QWORD *)v8 + 1) = &off_100289E08;
  swift_unknownObjectWeakAssign(v8, v2);
  v9 = (_BYTE)v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate;
  v10 = (void *)sub_100143A18();
  if (v10)
  {
    objc_msgSend(v10, "requestToPresentMediaUploadRequestBanner");
    sub_100136124();
  }
  v11 = (void *)sub_100143A18();
  if (v11)
  {
    objc_msgSend(v11, "requestHapticForRequest");
    sub_100136124();
  }
  v12 = sub_100137B38();
  v13 = sub_100143A18();
  v14 = v13;
  if ((v12 & 1) != 0)
  {
    if (v13)
    {
      -[NSObject requestToPresentMediaUploadRequestBannerDuringStreaming](v13, "requestToPresentMediaUploadRequestBannerDuringStreaming");
      sub_100136124();
    }
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v15 = sub_100109570();
    sub_10011ADC0(v15, (uint64_t)&unk_1002E2CC8);
    v16 = sub_10011ADDC();
    if (sub_100136000(v16))
    {
      v17 = (uint8_t *)sub_1001094C8(2);
      *(_WORD *)v17 = 0;
      sub_10011AE18((void *)&_mh_execute_header, v14, v9, "EnhancedEmergency: handleMediaUploadRequest, videoStreamingIsOnScreen, inform user about new upload request via a banner", v17);
      sub_100109440((uint64_t)v17);
    }

  }
  else if (v13)
  {
    sub_1001360B0(v13, "addMediaRequestViewController:");
    sub_100136124();
  }
  v18 = *(void **)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector];
  v19 = *(void **)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest];
  v20 = v18;
  if (v19)
  {
    sub_10014368C((uint64_t)objc_msgSend(v19, "ID"));

    v19 = (void *)sub_100143868();
    v22 = v21;
    sub_1001435F8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    v22 = 0xE000000000000000;
  }
  sub_1001464E0((uint64_t)v19, v22);
  sub_100109898();

  sub_100143558();
}

id sub_100138C74()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v2)
  {
    v3 = v2;
    sub_10012F990();

  }
  return objc_msgSend(v1, "transitionToRTTState:", 1);
}

id sub_100138CC8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
  v3 = sub_10011ADDC();
  if (sub_100109560(v3))
  {
    v4 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v4);
    sub_100123A2C((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: get notification that request wanna dismiss from Jindo action");
    sub_100109440(v1);
  }

  if ((sub_1001437F8() & 1) != 0)
    return objc_msgSend(v0, "cancelVideoStreamingRequest");
  else
    return (id)sub_100138D80();
}

#error "100138E5C: call analysis failed (funcsize=113)"

void sub_100138F8C()
{
  char *v0;
  uint8_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _WORD *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  os_log_type_t v22;
  _WORD *v23;
  NSObject *v24;
  _QWORD aBlock[6];

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  v3 = sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
  v4 = static os_log_type_t.default.getter();
  v5 = v4;
  if (os_log_type_enabled(v3, v4))
  {
    v6 = (_WORD *)sub_1001094C8(2);
    sub_10011AF94(v6);
    sub_10011AE18((void *)&_mh_execute_header, v3, (os_log_type_t)v5, "EnhancedEmergency: get notification that request to choose photo from Jindo action", v1);
    sub_100109440((uint64_t)v1);
  }

  v7 = (void *)sub_100136790(OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
  if (v7)
  {
    v9 = v7;
    objc_msgSend(v7, "hideRTTConversationIfNeeded");
    v7 = (void *)swift_unknownObjectRelease(v9);
  }
  v10 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController];
  if (v10)
  {
    v11 = v10;
    Logger.logObject.getter(v11, v12);
    v13 = sub_10011ADDC();
    if (sub_100109560(v13))
    {
      v14 = (_WORD *)sub_1001094C8(2);
      sub_1001365A0(v14);
      sub_100123A2C((void *)&_mh_execute_header, v15, v16, "EnhancedEmergency: requesting passcode unlock");
      sub_100109440(v5);
    }

    v17 = objc_msgSend((id)objc_opt_self(PHInCallUtilities), "sharedInstance");
    if (v17)
    {
      v18 = v17;
      v19 = sub_100122840((uint64_t)&unk_10028A3E0);
      *(_QWORD *)(v19 + 16) = v11;
      aBlock[4] = sub_100143408;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100110294;
      aBlock[3] = &unk_10028A3F8;
      v20 = _Block_copy(aBlock);
      v21 = v11;
      sub_1001438D8();
      objc_msgSend(v18, "requestPasscodeUnlockWithCompletion:", v20);
      _Block_release(v20);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v24 = Logger.logObject.getter(v7, v8);
    v22 = static os_log_type_t.error.getter(v24);
    if (sub_10013618C(v24))
    {
      v23 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v23);
      sub_10011AE18((void *)&_mh_execute_header, v24, v22, "EnhancedEmergency: get notification that request to choose photo from Jindo action, but mediaRequestViewController doesn't exist", (uint8_t *)v0);
      sub_100109440((uint64_t)v0);
    }

  }
}

void sub_1001391E8(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  int v15;
  uint64_t v16;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100108664(v4, (uint64_t)&unk_1002E2CC8);
  v7 = Logger.logObject.getter(v5, v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 67109120;
    v15 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v9 + 4, v9 + 8);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: got passcode unlock %{BOOL}d", v9, 8u);
    swift_slowDealloc(v9, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    objc_msgSend(a2, "requestContinue");
  }
  else
  {
    v12 = Logger.logObject.getter(v10, v11);
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "EnhancedEmergency: passcode unlock failed, not continuing with media request", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

  }
}

void *sub_1001393B8()
{
  return sub_10013F650("EnhancedEmergency: get notification to preview request from banner action");
}

#error "10013958C: call analysis failed (funcsize=141)"

#error "100139A54: call analysis failed (funcsize=360)"

#error "100139FCC: call analysis failed (funcsize=268)"

#error "10013A154: call analysis failed (funcsize=13)"

void sub_10013A16C()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(PHInCallUtilities), "sharedInstance");
  if (v0)
  {
    v1 = v0;
    v2 = sub_100122840((uint64_t)&unk_10028A390);
    swift_unknownObjectWeakInit(v2 + 16);
    sub_10010E350((uint64_t)sub_100110294, (uint64_t)_NSConcreteStackBlock, 1107296256, v3, v4);
    swift_release(v2);
    sub_100136274(v1, "requestPasscodeUnlockWithCompletion:");
    sub_100143800();

    sub_1001435C0();
  }
  else
  {
    __break(1u);
  }
}

void sub_10013A22C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  char *v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  NSObject *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  void *Strong;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[8];

  if ((a1 & 1) != 0
    && (v2 = a2 + 16, swift_beginAccess(a2 + 16, v61, 0, 0), (v3 = swift_unknownObjectWeakLoadStrong(v2)) != 0))
  {
    v4 = (char *)v3;
    v5 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController;
    v6 = *(void **)(v3 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
    if (v6)
      goto LABEL_19;
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100108664(v7, (uint64_t)&unk_1002E2CC8);
    v10 = Logger.logObject.getter(v8, v9);
    v11 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: handling media upload button events, didn't find an media request viewController, create a new one", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    v13 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EmergencyMediaRequestViewController()), "init");
    v14 = (char *)v13;
    sub_1001374F4((uint64_t)v13);
    v15 = v4;
    v17 = Logger.logObject.getter(v15, v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      HIDWORD(v56) = v18;
      v58 = (uint64_t)v14;
      v19 = swift_slowAlloc(22, -1);
      v20 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v19 = 138412546;
      v60 = (uint64_t)v15;
      v21 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v19 + 4, v19 + 12);
      v57 = (uint64_t)v20;
      *v20 = v4;

      *(_WORD *)(v19 + 12) = 2112;
      v59 = v5;
      v22 = *(void **)&v4[v5];
      if (v22)
      {
        v60 = *(_QWORD *)&v4[v5];
        v23 = v22;
        v24 = v19 + 14;
        v25 = v19 + 22;
      }
      else
      {
        v25 = v19 + 22;
        v60 = 0;
        v24 = v19 + 14;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v24, v25);
      v20[1] = v22;

      _os_log_impl((void *)&_mh_execute_header, v17, BYTE4(v56), "EnhancedEmergency: emergencyCoordinator :%@ created emegencyMediaRequestViewController: %@", (uint8_t *)v19, 0x16u);
      v31 = sub_1001085C0(&qword_1002D7880);
      swift_arrayDestroy(v20, 2, v31);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
      v14 = (char *)v58;
    }
    else
    {

      v17 = v15;
    }

    v32 = &v14[OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate];
    *((_QWORD *)v32 + 1) = &off_100289E08;
    swift_unknownObjectWeakAssign(v32, v15);

    v6 = *(void **)&v4[v5];
    if (v6)
    {
LABEL_19:
      v15 = v6;
      if ((sub_100137B38() & 1) != 0)
      {
        if (qword_1002D7250 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v33 = type metadata accessor for Logger(0);
        v34 = sub_100108664(v33, (uint64_t)&unk_1002E2CC8);
        v36 = Logger.logObject.getter(v34, v35);
        v37 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v38 = 0;
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "EnhancedEmergency: we have an ongoing video streaming request, pause the video and handle handleMediaUploadButtonTapped", v38, 2u);
          swift_slowDealloc(v38, -1, -1);
        }

        sub_100139CBC(v39, v40, v41, v42, v43, v44, v45, v46, v55, v56, v57, v58, v59, v60, v61[0], v61[1], v61[2], v61[3], v61[4],
          v61[5],
          v61[6],
          v61[7]);
      }
      Strong = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate]);
      if (Strong)
      {
        v48 = Strong;
        objc_msgSend(Strong, "addMediaRequestViewController:", v15);
        swift_unknownObjectRelease(v48);
      }
      if (qword_1002D7250 != -1)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v49 = type metadata accessor for Logger(0);
      v50 = sub_100108664(v49, (uint64_t)&unk_1002E2CC8);
      v52 = Logger.logObject.getter(v50, v51);
      v53 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "EnhancedEmergency: handling media upload button events", v54, 2u);
        swift_slowDealloc(v54, -1, -1);
      }

      if (*(_QWORD *)&v4[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState] == 1)
        sub_100199084();

    }
  }
  else
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100108664(v26, (uint64_t)&unk_1002E2CC8);
    v15 = Logger.logObject.getter(v27, v28);
    v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v29, "EnhancedEmergency: wanna handle MediaUploadButtonTapped, but passcode unlock failed or self is nil", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }
  }

}

void sub_10013A81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _BYTE *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  const void *v27;
  const void *v28;
  NSObject *isa;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  id v71;
  _QWORD *v72;
  id v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  const void *v77;
  NSObject *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  sub_10010BC70();
  a19 = v24;
  a20 = v25;
  v26 = v20;
  v28 = v27;
  isa = sub_10010AE94();
  sub_1001438C0();
  __chkstk_darwin(v30, v31);
  sub_1001436EC();
  v32 = *(void **)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest];
  if (!v32)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v34 = sub_100109570();
    v78 = sub_10011ADC0(v34, (uint64_t)&unk_1002E2CC8);
    v35 = static os_log_type_t.error.getter(v78);
    if (!sub_1001439A0(v35))
      goto LABEL_28;
    v36 = (uint8_t *)sub_1001094C8(12);
    v79 = sub_1001094C8(32);
    *(_DWORD *)v36 = 136315138;
    sub_1001435EC();
    v37 = sub_1001436B4();
    v83 = sub_1001436AC(v37, v38);
    sub_100143A30((uint64_t)&v83, (uint64_t)&a9, (uint64_t)(v36 + 4));
    sub_1001096DC();
    sub_100109638((void *)&_mh_execute_header, v78, (os_log_type_t)v26, "EnhancedEmergency: trying to update state: %s for video streaming request but it's nil", v36);
    sub_100109598(v79, v39, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v79);
    sub_100109440((uint64_t)v36);
LABEL_25:
    sub_1001438B8();
    goto LABEL_26;
  }
  v78 = *(NSObject **)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest];
  if (v28 == (const void *)1)
  {
    v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequestHasBeenAccepted] = 1;
    v33 = v32;
  }
  else
  {
    v40 = v32;
    if (!objc_msgSend(v26, "isShownAboveCoverSheet")
      || *(_QWORD *)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState] != 4)
    {
      objc_msgSend(v26, "transitionToRTTState:", 1);
    }
  }
  v41 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState;
  if (*(const void **)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState] != v28)
  {
    v76 = v21;
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v48 = sub_100109570();
    sub_10011ADC0(v48, (uint64_t)&unk_1002E2CC8);
    v49 = sub_100143A44();
    v50 = (uint8_t *)&qword_10023F000;
    v77 = v28;
    if (sub_10014371C(v49))
    {
      v50 = (uint8_t *)sub_1001094C8(12);
      v81 = sub_1001094C8(32);
      *(_DWORD *)v50 = 136315138;
      v83 = (uint64_t)v28;
      sub_10014362C();
      v51 = sub_1001436B4();
      v53 = v52;
      v54 = sub_1001436AC(v51, v52);
      v55 = sub_100143660(v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v55, v56, v50 + 4, v50 + 12);
      swift_bridgeObjectRelease(v53);
      sub_100109638((void *)&_mh_execute_header, v22, v23, "EnhancedEmergency: set video streaming state to: %s", v50);
      sub_100109598(v81, v57, (uint64_t)&type metadata for Any + 8);
      sub_100109440(v81);
      sub_100109440((uint64_t)v50);
    }

    *(_QWORD *)&v26[v41] = v28;
    Logger.logObject.getter(v58, v59);
    v60 = sub_10011ADDC();
    if (sub_100143704(v60))
    {
      v61 = (uint8_t *)sub_1001094C8(12);
      v82 = sub_1001094C8(32);
      *(_DWORD *)v61 = 136315138;
      sub_1001435EC();
      v62 = sub_1001436B4();
      v64 = v63;
      v65 = sub_1001436AC(v62, v63);
      v66 = sub_100143660(v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v66, v67, v61 + 4, v61 + 12);
      swift_bridgeObjectRelease(v64);
      sub_100109638((void *)&_mh_execute_header, isa, (os_log_type_t)v50, "EnhancedEmergency: calling eed to update video streaming state to: %s", v61);
      sub_100109598(v82, v68, (uint64_t)&type metadata for Any + 8);
      sub_100109440(v82);
      sub_100109440((uint64_t)v61);
    }

    v69 = *(void **)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v69)
    {
      v70 = v69;
      v71 = -[NSObject ID](v78, "ID");
      sub_1001439EC((uint64_t)v71);

      isa = UUID._bridgeToObjectiveC()().super.isa;
      sub_1001439E0(v76);
      v72 = (_QWORD *)sub_100109754((uint64_t)&unk_10028A340, 40);
      v72[2] = v77;
      v72[3] = v78;
      v72[4] = v26;
      sub_10011AFF0((uint64_t)sub_10013AD8C);
      v73 = sub_100143978();
      v74 = v26;
      v75 = sub_1001438D8();
      sub_1001437E4(v75, "handleResponse:forRequest:completion:");

      _Block_release(v77);
      goto LABEL_24;
    }
    goto LABEL_25;
  }
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v42 = sub_100109570();
  sub_10011ADC0(v42, (uint64_t)&unk_1002E2CC8);
  v43 = sub_1001096F0();
  if (sub_10010E390(v43))
  {
    v44 = (uint8_t *)sub_1001094C8(12);
    v80 = sub_1001094C8(32);
    *(_DWORD *)v44 = 136315138;
    sub_1001435EC();
    v45 = sub_1001436B4();
    v83 = sub_1001436AC(v45, v46);
    sub_100143A9C((uint64_t)&v83, (uint64_t)&a9);
    sub_1001096DC();
    sub_100109638((void *)&_mh_execute_header, isa, (os_log_type_t)v21, "EnhancedEmergency: trying to update state: %s for video streaming, but already in that state", v44);
    sub_100109598(v80, v47, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v80);
    sub_100109440((uint64_t)v44);
    sub_1001438B8();
LABEL_24:

LABEL_26:
    sub_10010BC44();
    return;
  }

LABEL_28:
  sub_100143518(v78);
}

void sub_10013AD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  NSObject *v21;
  uint8_t *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  NSObject *isa;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  uint8_t *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  id v82;
  _QWORD *v83;
  id v84;
  char *v85;
  uint64_t v86;
  uint8_t *v87;
  NSObject *v88;
  uint64_t v89;
  NSObject *v90;
  void **v91;
  _QWORD v92[5];
  uint64_t v93;

  sub_10010BC70();
  a19 = v24;
  a20 = v25;
  v26 = v20;
  v28 = v27;
  v29 = sub_10010AE94();
  sub_1001438E0();
  __chkstk_darwin(v30, v31);
  sub_1001436D4();
  v32 = *(void **)&v20[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest];
  if (!v32)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v44 = sub_100109570();
    v90 = sub_10011ADC0(v44, (uint64_t)&unk_1002E2CC8);
    v45 = static os_log_type_t.error.getter(v90);
    if (!sub_1001439A0(v45))
      goto LABEL_20;
    v46 = (uint8_t *)sub_1001094C8(12);
    v47 = sub_1001094C8(32);
    v91 = (void **)v47;
    *(_DWORD *)v46 = 136315138;
    sub_1001435EC();
    v48 = sub_1001436B4();
    v93 = sub_1001436AC(v48, v49);
    sub_1001439B8((uint64_t)&v93, (uint64_t)&a9, (uint64_t)(v46 + 4));
    sub_10011AE68();
    sub_100109638((void *)&_mh_execute_header, v90, (os_log_type_t)v26, "EnhancedEmergency: trying to update state: %s for media upload request but it's nil", v46);
    sub_100109598(v47, v50, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v47);
    sub_100109440((uint64_t)v46);
LABEL_28:
    sub_1001438B8();
    goto LABEL_29;
  }
  v33 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState;
  isa = *(NSObject **)&v20[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState];
  v35 = qword_1002D7250;
  v90 = v32;
  if (isa == v28)
  {
    if (v35 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v36 = sub_100109570();
    sub_10011ADC0(v36, (uint64_t)&unk_1002E2CC8);
    v37 = sub_1001096F0();
    if (sub_10010E390(v37))
    {
      v38 = (uint8_t *)sub_1001094C8(12);
      v39 = sub_1001094C8(32);
      v91 = (void **)v39;
      *(_DWORD *)v38 = 136315138;
      sub_1001435EC();
      v40 = sub_1001436B4();
      v42 = v41;
      v93 = sub_1001436AC(v40, v41);
      sub_1001439B8((uint64_t)&v93, (uint64_t)&a9, (uint64_t)(v38 + 4));
      swift_bridgeObjectRelease(v42);
      sub_100109638((void *)&_mh_execute_header, isa, (os_log_type_t)v29, "EnhancedEmergency: trying to update state: %s for media upload, but already in that state", v38);
      sub_100109598(v39, v43, (uint64_t)&type metadata for Any + 8);
      sub_100109440(v39);
      sub_100109440((uint64_t)v38);
      sub_1001438B8();
LABEL_27:

LABEL_29:
      sub_10010BC44();
      return;
    }

LABEL_20:
    sub_100143518(v90);
    return;
  }
  v88 = v21;
  v89 = v29;
  if (v35 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v51 = sub_100109570();
  sub_10011ADC0(v51, (uint64_t)&unk_1002E2CC8);
  v52 = sub_100143A44();
  v87 = v22;
  if (sub_10014371C(v52))
  {
    v22 = (uint8_t *)sub_1001094C8(12);
    v53 = sub_1001094C8(32);
    v91 = (void **)v53;
    *(_DWORD *)v22 = 136315138;
    v93 = (uint64_t)v28;
    sub_10014362C();
    v54 = sub_1001436B4();
    v56 = v55;
    v57 = sub_1001436AC(v54, v55);
    v58 = sub_100143660(v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v58, v59, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease(v56);
    sub_100109638((void *)&_mh_execute_header, v21, v23, "EnhancedEmergency: set media upload state to: %s", v22);
    sub_100109598(v53, v60, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v53);
    sub_100109440((uint64_t)v22);
  }

  *(_QWORD *)&v26[v33] = v28;
  if (v28 != 4)
  {
LABEL_23:
    Logger.logObject.getter(v61, v62);
    v70 = sub_10011ADDC();
    if (sub_100143704(v70))
    {
      v71 = (uint8_t *)sub_1001094C8(12);
      v72 = sub_1001094C8(32);
      v91 = (void **)v72;
      *(_DWORD *)v71 = 136315138;
      sub_1001435EC();
      v73 = sub_1001436B4();
      v75 = v74;
      v76 = sub_1001436AC(v73, v74);
      v77 = sub_100143660(v76);
      sub_1001439B8(v77, v78, (uint64_t)(v71 + 4));
      swift_bridgeObjectRelease(v75);
      sub_100109638((void *)&_mh_execute_header, isa, (os_log_type_t)v22, "EnhancedEmergency: calling eed to update media upload state to: %s", v71);
      sub_100109598(v72, v79, (uint64_t)&type metadata for Any + 8);
      sub_100109440(v72);
      sub_100109440((uint64_t)v71);
    }

    v80 = *(void **)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v80)
    {
      v81 = v80;
      v82 = -[NSObject ID](v90, "ID");
      sub_100143940((uint64_t)v82);

      isa = UUID._bridgeToObjectiveC()().super.isa;
      ((void (*)(uint8_t *, uint64_t))v88[1].isa)(v87, v89);
      v83 = (_QWORD *)sub_100109754((uint64_t)&unk_10028A2F0, 40);
      v83[2] = v28;
      v83[3] = v90;
      v83[4] = v26;
      v92[3] = sub_100143324;
      v92[4] = v83;
      v91 = _NSConcreteStackBlock;
      v92[0] = 1107296256;
      sub_10011AFF0((uint64_t)sub_10013AD8C);
      v84 = sub_100143978();
      v85 = v26;
      v86 = sub_1001438D8();
      sub_1001437E4(v86, "handleResponse:forRequest:completion:");

      _Block_release(v82);
      goto LABEL_27;
    }
    goto LABEL_28;
  }
  v63 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequestCount;
  v64 = *(_QWORD *)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequestCount];
  v65 = __OFADD__(v64, 1);
  v66 = v64 + 1;
  if (!v65)
  {
    *(_QWORD *)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequestCount] = v66;
    v22 = v26;
    Logger.logObject.getter(v22, v67);
    v68 = sub_100143A44();
    if (sub_10014371C(v68))
    {
      v69 = (uint8_t *)sub_1001094C8(12);
      *(_DWORD *)v69 = 134217984;
      v91 = *(void ***)&v26[v63];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v69 + 4, v69 + 12);

      sub_100109638((void *)&_mh_execute_header, v21, v23, "EnhancedEmergency: User has NotNow(ed) the media upload request. NotNow Request count: %ld", v69);
      sub_100109440((uint64_t)v69);
    }
    else
    {

      v21 = v22;
    }

    goto LABEL_23;
  }
  __break(1u);
}

void sub_10013B36C(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, _QWORD *a6, const char *a7, void (*a8)(uint64_t), _QWORD *a9, const char *a10)
{
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  char *v36;
  os_log_type_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *oslog;
  os_log_t osloga;
  os_log_t oslogb;
  uint64_t v86;
  uint64_t v87;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v14 = sub_100109570();
    sub_100108664(v14, (uint64_t)&unk_1002E2CC8);
    sub_1001360B8();
    v15 = a4;
    sub_1001360B8();
    v16 = v15;
    oslog = Logger.logObject.getter(v16, v17);
    v18 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v18))
    {
      v19 = sub_1001094C8(32);
      v20 = (_QWORD *)sub_1001094C8(16);
      v79 = sub_1001094C8(32);
      v86 = a3;
      v87 = v79;
      *(_DWORD *)v19 = 136315650;
      sub_10014362C();
      v21 = String.init<A>(reflecting:)(&v86);
      v86 = sub_100121E04(v21, v22, &v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v19 + 4, v19 + 12);
      sub_100109558();
      *(_WORD *)(v19 + 12) = 2112;
      v86 = (uint64_t)v16;
      v23 = v16;
      sub_100143A94((uint64_t)&v86, (uint64_t)&v87, v19 + 14);
      *v20 = v16;

      *(_WORD *)(v19 + 22) = 2112;
      sub_1001360B8();
      v24 = _swift_stdlib_bridgeErrorToNSError(a2);
      v86 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v19 + 24, v19 + 32);
      v20[1] = v24;
      sub_100135EB4();
      sub_100135EB4();
      sub_100143B10((void *)&_mh_execute_header, oslog, v18, a7, (uint8_t *)v19);
      v25 = sub_1001085C0(&qword_1002D7880);
      sub_100143714((uint64_t)v20, v26, v25);
      sub_100109440((uint64_t)v20);
      sub_100109598(v79, v27, (uint64_t)&type metadata for Any + 8);
      sub_100109440(v79);
      sub_100109440(v19);

      sub_100135EB4();
      return;
    }
    sub_100135EB4();

    sub_100135EB4();
    sub_100135EB4();
    goto LABEL_14;
  }
  if (a1)
  {
    v31 = objc_opt_self(*a6);
    v32 = swift_dynamicCastObjCClass(a1, v31);
    if (v32)
    {
      v33 = v32;
      oslog = a1;
      a8(v33);
      if (qword_1002D7250 != -1)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v34 = sub_100109570();
      v35 = sub_100108664(v34, (uint64_t)&unk_1002E2CC8);
      v36 = a5;
      sub_100109724();
      v37 = sub_100123A70();
      if (!os_log_type_enabled(v35, v37))
      {

LABEL_14:
        return;
      }
      v38 = sub_1001094C8(32);
      v39 = (_QWORD *)sub_1001094C8(16);
      v80 = sub_1001094C8(32);
      v86 = a3;
      v87 = v80;
      *(_DWORD *)v38 = 136315650;
      sub_10014362C();
      v40 = String.init<A>(reflecting:)(&v86);
      v42 = v41;
      v43 = sub_100121E04(v40, v41, &v87);
      v50 = sub_100143948(v43, v44, v45, v38 + 12, v46, v47, v48, v49, v77, v80, (uint64_t)oslog, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v50, v51, v52, v53);
      v54 = swift_bridgeObjectRelease(v42);
      *(_WORD *)(v38 + 12) = 2112;
      v61 = *(void **)&v36[*a9];
      if (v61)
      {
        v86 = *(_QWORD *)&v36[*a9];
        v62 = v61;
        v70 = sub_100143948((uint64_t)v62, v63, v64, v65, v66, v67, v68, v69, v78, v81, (uint64_t)osloga, v86);
        v73 = v38 + 22;
      }
      else
      {
        v70 = sub_100143948(v54, v55, v56, v38 + 22, v57, v58, v59, v60, v78, v81, (uint64_t)osloga, 0);
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v70, v71, v72, v73);
      *v39 = v61;

      *(_WORD *)(v38 + 22) = 2112;
      v86 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v38 + 24, v38 + 32);
      v39[1] = 0;
      sub_100143B10((void *)&_mh_execute_header, v35, v37, a10, (uint8_t *)v38);
      v74 = sub_1001085C0(&qword_1002D7880);
      sub_100143714((uint64_t)v39, v75, v74);
      sub_100109440((uint64_t)v39);
      sub_100109598(v82, v76, (uint64_t)&type metadata for Any + 8);
      sub_100109440(v82);
      sub_100109440(v38);

    }
  }
}

void sub_10013B82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  NSObject *v20;
  uint8_t *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  _WORD *v34;
  id v35;
  uint64_t v36;
  NSObject *v37;
  id v38;
  os_log_type_t v39;
  uint8_t *v40;
  _QWORD *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  _WORD *v50;
  uint64_t v51;
  os_log_type_t v52;
  _WORD *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  objc_class *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  id v61;
  id v62;
  id v63;
  NSObject *v64;
  NSObject *v65;
  uint8_t *v66;
  id v67;
  uint64_t v68;
  NSObject *v69;
  uint8_t *v70;
  id v71;

  sub_10010BC70();
  a19 = v23;
  a20 = v24;
  v25 = v20;
  v27 = v26;
  v28 = sub_10010AE94();
  v29 = *(uint8_t **)(v28 - 8);
  __chkstk_darwin(v28, v30);
  sub_10014357C();
  if (!v27)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v32 = sub_100109570();
    v69 = sub_10011ADC0(v32, (uint64_t)&unk_1002E2CC8);
    v33 = static os_log_type_t.error.getter(v69);
    if (sub_10013618C(v69))
    {
      v34 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v34);
      sub_10011AE18((void *)&_mh_execute_header, v69, v33, "EnhancedEmergency: new video streaming request is nil", v29);
      sub_100109440((uint64_t)v29);
    }
    goto LABEL_23;
  }
  v31 = *(NSObject **)((char *)&v25->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
  if (v31)
  {
    v67 = v27;
    v69 = v31;
    if ((-[NSObject newStreamingAllowed](v69, "newStreamingAllowed") & 1) != 0)
    {
      sub_1001438F0();
      goto LABEL_10;
    }
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v51 = sub_100109570();
    sub_10011ADC0(v51, (uint64_t)&unk_1002E2CC8);
    v52 = sub_100123A70();
    if (!sub_100123A54(v52))
    {

      sub_1001438F0();
      sub_100143518(v67);
      return;
    }
    v53 = (_WORD *)sub_1001094C8(2);
    sub_100143680(v53);
    sub_10011AE18((void *)&_mh_execute_header, v31, (os_log_type_t)v29, "EnhancedEmergency: setVideoStreamingRequest, new video streaming request not allowed due to mitigations in place, early return", v21);
    sub_100109440((uint64_t)v21);
    sub_1001438B0();

LABEL_23:
    sub_100143518(v69);
    return;
  }
  v35 = v27;
LABEL_10:
  v70 = v29;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v36 = sub_100109570();
  v37 = sub_100108664(v36, (uint64_t)&unk_1002E2CC8);
  v38 = v27;
  sub_100109724();
  v39 = sub_10011ADDC();
  v66 = v21;
  if (sub_10014372C(v39))
  {
    v64 = v37;
    v40 = (uint8_t *)sub_1001094C8(12);
    v68 = v28;
    v41 = (_QWORD *)sub_1001094C8(8);
    *(_DWORD *)v40 = 138412290;
    v71 = v38;
    v21 = (uint8_t *)&a9;
    v65 = v25;
    v42 = v38;
    v43 = v38;
    sub_10014391C((uint64_t)&v71, (uint64_t)&a9, (uint64_t)(v40 + 4));
    *v41 = v27;

    v38 = v42;
    v25 = v65;
    sub_100109638((void *)&_mh_execute_header, v29, v22, "EnhancedEmergency: received a new video streming request: %@", v40);
    v44 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v41, v45, v44);
    v46 = (uint64_t)v41;
    v28 = v68;
    sub_100109440(v46);
    v47 = (uint64_t)v40;
    v37 = v64;
    sub_100109440(v47);

  }
  else
  {

  }
  LOBYTE(v48) = (_BYTE)v25;
  if ((sub_100137C7C() & 1) != 0 || (v48 = v25, (sub_100137B38() & 1) != 0))
  {
    sub_100109724();
    v49 = sub_100123A70();
    if (sub_100123A54(v49))
    {
      v50 = (_WORD *)sub_1001094C8(2);
      sub_100143680(v50);
      sub_10011AE18((void *)&_mh_execute_header, v37, (os_log_type_t)v48, "EnhancedEmergency: we have an ongoing request, wait until it's finished before it can be opened", v21);
      sub_100109440((uint64_t)v21);

    }
    else
    {

    }
LABEL_31:
    sub_10010BC44();
    return;
  }
  v54 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_streamingRequestCount;
  v55 = *(uint64_t *)((char *)&v25->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_streamingRequestCount);
  v56 = __OFADD__(v55, 1);
  v57 = (objc_class *)(v55 + 1);
  if (!v56)
  {
    *(Class *)((char *)&v25->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_streamingRequestCount) = v57;
    v58 = v25;
    sub_100109724();
    v59 = sub_10011ADDC();
    if (sub_100143704(v59))
    {
      v60 = (uint8_t *)sub_1001094C8(12);
      *(_DWORD *)v60 = 134217984;
      v71 = *(Class *)((char *)&v25->isa + v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &a9, v60 + 4, v60 + 12);

      sub_100109638((void *)&_mh_execute_header, v25, (os_log_type_t)v38, "EnhancedEmergency: setVideoStreamingRequest, streamingRequestCount:%ld after receiving the request", v60);
      sub_100109440((uint64_t)v60);
    }
    else
    {

      v48 = v58;
    }

    v61 = v38;
    sub_100137524((uint64_t)v27);
    *(Class *)((char *)&v58->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState) = (Class)3;
    v62 = *(id *)((char *)&v58->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
    v63 = sub_100136368((uint64_t)v62, "ID");
    sub_100143940((uint64_t)v63);

    sub_1001439FC();
    sub_100143934();
    (*((void (**)(uint8_t *, uint64_t))v70 + 1))(v66, v28);
    sub_100143888(1);
    sub_100109558();

    sub_100138590();
    goto LABEL_31;
  }
  __break(1u);
}

void sub_10013BCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint8_t *v20;
  uint8_t *v21;
  uint64_t v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  os_log_type_t v36;
  _WORD *v37;
  id v38;
  uint64_t v39;
  NSObject *v40;
  id v41;
  os_log_type_t v42;
  uint8_t *v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  _WORD *v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  _WORD *v57;
  NSObject *v58;
  uint64_t v59;
  id v60;
  NSObject *v61;
  id v62;

  sub_10010BC70();
  a19 = v24;
  a20 = v25;
  v26 = v20;
  v28 = v27;
  sub_10010AE94();
  sub_1001438C0();
  __chkstk_darwin(v29, v30);
  sub_10010BC88();
  v33 = v32 - v31;
  if (!v28)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v35 = sub_100109570();
    v61 = sub_10011ADC0(v35, (uint64_t)&unk_1002E2CC8);
    v36 = static os_log_type_t.error.getter(v61);
    if (sub_10013618C(v61))
    {
      v37 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v37);
      sub_10011AE18((void *)&_mh_execute_header, v61, v36, "EnhancedEmergency: new media upload request is nil", v20);
      sub_100109440((uint64_t)v20);
    }
    goto LABEL_23;
  }
  v34 = *(NSObject **)&v20[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation];
  if (!v34)
  {
    v38 = v28;
LABEL_10:
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v39 = sub_100109570();
    v40 = sub_100108664(v39, (uint64_t)&unk_1002E2CC8);
    v41 = v28;
    sub_100109724();
    v42 = sub_10011ADDC();
    if (sub_10014372C(v42))
    {
      v58 = v40;
      v43 = (uint8_t *)sub_1001094C8(12);
      v59 = v33;
      v44 = (_QWORD *)sub_1001094C8(8);
      *(_DWORD *)v43 = 138412290;
      v21 = v43 + 4;
      v62 = v41;
      v45 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &a9, v43 + 4, v43 + 12);
      *v44 = v28;

      v40 = v58;
      sub_100109638((void *)&_mh_execute_header, v20, v23, "EnhancedEmergency: received a new media upload request: %@", v43);
      v46 = sub_1001085C0(&qword_1002D7880);
      sub_100109598((uint64_t)v44, v47, v46);
      v48 = (uint64_t)v44;
      v33 = v59;
      sub_100109440(v48);
      v49 = (uint64_t)v43;
      v26 = v20;
      sub_100109440(v49);

    }
    else
    {

    }
    if ((sub_100137C7C() & 1) != 0)
    {
      sub_100109724();
      v50 = sub_100123A70();
      if (sub_100123A54(v50))
      {
        v51 = (_WORD *)sub_1001094C8(2);
        sub_100143680(v51);
        sub_10011AE18((void *)&_mh_execute_header, v40, (os_log_type_t)v26, "EnhancedEmergency: we have an ongoing request, wait until it's finished before it can be opened", v21);
        sub_100109440((uint64_t)v21);

LABEL_26:
        sub_10010BC44();
        return;
      }

    }
    else
    {
      v41 = v41;
      sub_100137594((uint64_t)v28);
      *(_QWORD *)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState] = 3;
      v52 = *(id *)&v26[OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector];
      v53 = objc_msgSend(v41, "ID");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v53);

      UUID.uuidString.getter(v54);
      sub_100143934();
      sub_100143914(v33, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
      sub_100143888(2);
      sub_100109558();

      sub_100138A08();
    }

    goto LABEL_26;
  }
  v60 = v28;
  v61 = v34;
  if ((-[NSObject newUploadAllowed](v61, "newUploadAllowed") & 1) != 0)
  {
    sub_1001438F0();
    goto LABEL_10;
  }
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v55 = sub_100109570();
  sub_10011ADC0(v55, (uint64_t)&unk_1002E2CC8);
  v56 = sub_100123A70();
  if (sub_100123A54(v56))
  {
    v57 = (_WORD *)sub_1001094C8(2);
    sub_100143680(v57);
    sub_10011AE18((void *)&_mh_execute_header, v34, (os_log_type_t)v20, "EnhancedEmergency: setMediaUploadRequest, new upload request not allowed due to mitigations in place, early return", v21);
    sub_100109440((uint64_t)v21);
    sub_1001438B0();

LABEL_23:
    sub_100143518(v61);
    return;
  }

  sub_1001438F0();
  sub_100143518(v60);
}

void sub_10013C0CC()
{
  sub_10013C114();
}

void sub_10013C0F0()
{
  sub_10013C114();
}

void sub_10013C114()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  os_log_type_t v22;
  _WORD *v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  void *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_10010BC70();
  v42 = v3;
  v43 = v4;
  v41 = v5;
  v44 = sub_10011AFC8();
  v47 = *(_QWORD *)(v44 - 8);
  sub_10011AE0C();
  __chkstk_darwin(v6, v7);
  v8 = sub_100143748();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  sub_10011AE0C();
  __chkstk_darwin(v9, v10);
  v11 = sub_10011AE70();
  v12 = type metadata accessor for DispatchTime(v11);
  sub_10014377C();
  v15 = __chkstk_darwin(v13, v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  v20 = (char *)&v40 - v19;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v21 = sub_100109570();
  sub_10011ADC0(v21, (uint64_t)&unk_1002E2CC8);
  v22 = sub_10011ADDC();
  if (os_log_type_enabled(v0, v22))
  {
    v23 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v23);
    sub_10011AE18((void *)&_mh_execute_header, v0, v22, v24, (uint8_t *)v0);
    sub_100109440((uint64_t)v0);
  }

  sub_10011ADD4(v25, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v26 = (void *)sub_100143B58();
  static DispatchTime.now()();
  + infix(_:_:)(v17, 2.0);
  v27 = *(void (**)(char *, uint64_t))(v2 + 8);
  v27(v17, v12);
  v28 = sub_100122840(v41);
  *(_QWORD *)(v28 + 16) = v0;
  v52 = v42;
  v53 = v28;
  v48 = _NSConcreteStackBlock;
  v49 = 1107296256;
  v50 = sub_100112054;
  v51 = v43;
  v29 = sub_1001439F4();
  v30 = v0;
  v31 = sub_100110F0C();
  static DispatchQoS.unspecified.getter(v31);
  v48 = (void **)_swiftEmptyArrayStorage;
  sub_1001081CC((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v33 = v32;
  sub_100143A4C();
  sub_100143A20((unint64_t *)&qword_1002D83C0);
  v34 = sub_100143AD8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v34, v35, v36, v44, v33);
  sub_1001438F8();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v37, v38, v39, v29);
  _Block_release(v29);

  sub_100143914(v1, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
  sub_1001439E0(v45);
  v27(v20, v12);
  sub_10010BC44();
}

void sub_10013C39C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
  v3 = sub_10011ADDC();
  if (sub_100109560(v3))
  {
    v4 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v4);
    sub_100123A2C((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: fetch all pending requests");
    sub_100109440(v1);
  }

  v7 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
  if (v7)
  {
    *(_QWORD *)(sub_100122840((uint64_t)&unk_10028A0C0) + 16) = v0;
    sub_10010E350((uint64_t)sub_10013DB30, (uint64_t)_NSConcreteStackBlock, 1107296256, v8, v9);
    sub_10014373C();
    sub_100143824();
    sub_1001436CC();
    sub_100136274(v7, "fetchAllPendingRequestsWithCompletion:");
    sub_100143800();

  }
  sub_1001435C0();
}

double sub_10013C4A8(uint64_t a1, _UNKNOWN **a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  _UNKNOWN **v32;
  void *v33;
  unint64_t v34;
  unint64_t i;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  NSObject v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  _UNKNOWN **v52;
  _UNKNOWN **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  objc_class *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  __n128 v92;
  uint64_t v93;
  int64_t v94;
  NSObject *v95;
  void **aBlock;
  _QWORD v97[3];
  void (*v98)();
  uint64_t v99;
  uint64_t v100;
  _OWORD v101[2];
  uint64_t v102;
  _OWORD v103[2];
  uint64_t v104;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v13 = __chkstk_darwin(v11, v12);
  v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (qword_1002D7250 != -1)
      goto LABEL_43;
    goto LABEL_3;
  }
  if (!a1)
  {
    if (qword_1002D7250 != -1)
      goto LABEL_45;
    goto LABEL_36;
  }
  v84 = a3;
  v85 = v16;
  v86 = v14;
  v87 = v10;
  v88 = v7;
  v89 = v13;
  v90 = v6;
  v26 = *(_QWORD *)(a1 + 56);
  v93 = a1 + 56;
  v27 = 1 << *(_BYTE *)(a1 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & v26;
  v94 = (unint64_t)(v27 + 63) >> 6;
  v30 = swift_bridgeObjectRetain(a1);
  v31 = 0;
  v32 = &_sSd5write2toyxz_ts16TextOutputStreamRzlF_ptr;
  a2 = &_sSd5write2toyxz_ts16TextOutputStreamRzlF_ptr;
  v33 = &unk_1002E2CC8;
  v30.n128_u64[0] = 136315138;
  v92 = v30;
  v91 = (char *)&type metadata for Any + 8;
  if (!v29)
    goto LABEL_10;
LABEL_9:
  v34 = __clz(__rbit64(v29));
  v29 &= v29 - 1;
  for (i = v34 | (v31 << 6); ; i = __clz(__rbit64(v37)) + (v31 << 6))
  {
    sub_10011D608(*(_QWORD *)(a1 + 48) + 40 * i, (uint64_t)v103);
    v101[0] = v103[0];
    v101[1] = v103[1];
    v102 = v104;
    v39.isa = AnyHashable._bridgeToObjectiveC()().isa;
    v40 = objc_opt_self(v32[480]);
    v41 = swift_dynamicCastObjCClass(v39.isa, v40);
    if (v41)
    {
      v65 = v41;
      sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
      v66 = (void *)static OS_dispatch_queue.main.getter();
      v67 = swift_allocObject(&unk_10028A160, 32, 7);
      v68 = v84;
      *(_QWORD *)(v67 + 16) = v84;
      *(_QWORD *)(v67 + 24) = v65;
      v98 = sub_1001432C4;
      v99 = v67;
      aBlock = _NSConcreteStackBlock;
      v97[0] = 1107296256;
      v69 = &unk_10028A178;
LABEL_40:
      v97[1] = sub_100112054;
      v97[2] = v69;
      v72 = _Block_copy(&aBlock);
      v73 = v99;
      v74 = v68;
      v75 = v39.isa;
      swift_release(v73);
      v76 = v85;
      static DispatchQoS.unspecified.getter(v77);
      aBlock = (void **)_swiftEmptyArrayStorage;
      sub_1001081CC((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v79 = v78;
      v80 = sub_1001085C0((uint64_t *)&unk_1002D7F80);
      sub_100143410((unint64_t *)&qword_1002D83C0, (uint64_t *)&unk_1002D7F80);
      v81 = v87;
      v82 = v90;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v80, v83, v90, v79);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v76, v81, v72);
      _Block_release(v72);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v81, v82);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v76, v89);
      sub_10011D238((uint64_t)v101);
LABEL_41:
      *(_QWORD *)&result = swift_release(a1).n128_u64[0];
      return result;
    }

    v39.isa = AnyHashable._bridgeToObjectiveC()().isa;
    v42 = objc_opt_self(a2[481]);
    v43 = swift_dynamicCastObjCClass(v39.isa, v42);
    if (v43)
    {
      v70 = v43;
      sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
      v66 = (void *)static OS_dispatch_queue.main.getter();
      v71 = swift_allocObject(&unk_10028A110, 32, 7);
      v68 = v84;
      *(_QWORD *)(v71 + 16) = v84;
      *(_QWORD *)(v71 + 24) = v70;
      v98 = sub_1001432BC;
      v99 = v71;
      aBlock = _NSConcreteStackBlock;
      v97[0] = 1107296256;
      v69 = &unk_10028A128;
      goto LABEL_40;
    }

    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v44 = type metadata accessor for Logger(0);
    sub_100108664(v44, (uint64_t)v33);
    v45 = sub_10011D608((uint64_t)v101, (uint64_t)&aBlock);
    v47 = Logger.logObject.getter(v45, v46);
    v48 = static os_log_type_t.error.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc(12, -1);
      v95 = v31;
      v50 = a1;
      v51 = v33;
      v52 = a2;
      v53 = v32;
      v54 = v49;
      v55 = swift_slowAlloc(32, -1);
      v100 = v55;
      *(_DWORD *)v54 = v92.n128_u32[0];
      v56 = AnyHashable.description.getter();
      v58 = v57;
      *(_QWORD *)(v54 + 4) = sub_100121E04(v56, v57, &v100);
      swift_bridgeObjectRelease(v58);
      sub_10011D238((uint64_t)&aBlock);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "EnhancedEmergency: new pending request is nil or can't cast its type, request: %s", (uint8_t *)v54, 0xCu);
      swift_arrayDestroy(v55, 1, v91);
      swift_slowDealloc(v55, -1, -1);
      v59 = v54;
      v32 = v53;
      a2 = v52;
      v33 = v51;
      a1 = v50;
      v31 = (uint64_t)v95;
      swift_slowDealloc(v59, -1, -1);

    }
    else
    {

      sub_10011D238((uint64_t)&aBlock);
    }
    sub_10011D238((uint64_t)v101);
    if (v29)
      goto LABEL_9;
LABEL_10:
    v36 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v36 >= v94)
      goto LABEL_41;
    v37 = *(_QWORD *)(v93 + 8 * v36);
    ++v31;
    if (!v37)
    {
      v31 = v36 + 1;
      if (v36 + 1 >= v94)
        goto LABEL_41;
      v37 = *(_QWORD *)(v93 + 8 * v31);
      if (!v37)
      {
        v31 = v36 + 2;
        if (v36 + 2 >= v94)
          goto LABEL_41;
        v37 = *(_QWORD *)(v93 + 8 * v31);
        if (!v37)
        {
          v38 = v36 + 3;
          if (v38 >= v94)
            goto LABEL_41;
          v37 = *(_QWORD *)(v93 + 8 * v38);
          if (!v37)
          {
            while (1)
            {
              v31 = v38 + 1;
              if (__OFADD__(v38, 1))
                break;
              if (v31 >= v94)
                goto LABEL_41;
              v37 = *(_QWORD *)(v93 + 8 * v31);
              ++v38;
              if (v37)
                goto LABEL_23;
            }
            __break(1u);
LABEL_45:
            swift_once(&qword_1002D7250, sub_10010BCAC);
LABEL_36:
            v60 = type metadata accessor for Logger(0);
            v61 = sub_100108664(v60, (uint64_t)&unk_1002E2CC8);
            v95 = Logger.logObject.getter(v61, v62);
            v63 = static os_log_type_t.error.getter(v95);
            if (os_log_type_enabled(v95, v63))
            {
              v64 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v64 = 0;
              _os_log_impl((void *)&_mh_execute_header, v95, v63, "EnhancedEmergency: trying to fetch all pending requests, but requestSet is nil", v64, 2u);
              swift_slowDealloc(v64, -1, -1);
            }
LABEL_34:

            return result;
          }
          v31 = v38;
        }
      }
    }
LABEL_23:
    v29 = (v37 - 1) & v37;
  }
  __break(1u);
LABEL_43:
  swift_once(&qword_1002D7250, sub_10010BCAC);
LABEL_3:
  v17 = type metadata accessor for Logger(0);
  sub_100108664(v17, (uint64_t)&unk_1002E2CC8);
  swift_errorRetain(a2);
  v18 = swift_errorRetain(a2);
  v95 = Logger.logObject.getter(v18, v19);
  v20 = static os_log_type_t.error.getter(v95);
  if (!os_log_type_enabled(v95, v20))
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    goto LABEL_34;
  }
  v21 = (uint8_t *)swift_slowAlloc(12, -1);
  v22 = (uint64_t *)swift_slowAlloc(8, -1);
  *(_DWORD *)v21 = 138412290;
  swift_errorRetain(a2);
  v23 = _swift_stdlib_bridgeErrorToNSError(a2);
  aBlock = (void **)v23;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v97, v21 + 4, v21 + 12);
  *v22 = v23;
  swift_errorRelease(a2);
  swift_errorRelease(a2);
  _os_log_impl((void *)&_mh_execute_header, v95, v20, "EnhancedEmergency: trying to fetch all pending requests, but failed with error: %@", v21, 0xCu);
  v24 = sub_1001085C0(&qword_1002D7880);
  swift_arrayDestroy(v22, 1, v24);
  swift_slowDealloc(v22, -1, -1);
  swift_slowDealloc(v21, -1, -1);

  return result;
}

void sub_10013CD20(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  id v23;
  id v24;
  Class isa;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  char *v30;
  void **aBlock;
  uint64_t v32;
  uint64_t (*v33)();
  void *v34;
  void (*v35)(void *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v15 = (char *)&aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)&a1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_streamingRequestCount] >= 3)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100108664(v16, (uint64_t)&unk_1002E2CC8);
    v19 = Logger.logObject.getter(v17, v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "EnhancedEmergency: fetchAllPendingRequest, pendingVideoStreamingRequest, reached maxRequestCountPerRequestType for streaming. Reject the new request", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v22 = *(void **)&a1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(a2, "ID");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v24);

      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
      v26 = swift_allocObject(&unk_10028A1B0, 32, 7);
      *(_QWORD *)(v26 + 16) = a2;
      *(_QWORD *)(v26 + 24) = a1;
      v35 = sub_1001432CC;
      v36 = v26;
      aBlock = _NSConcreteStackBlock;
      v32 = 1107296256;
      v33 = sub_10013AD8C;
      v34 = &unk_10028A1C8;
      v27 = _Block_copy(&aBlock);
      v28 = v36;
      v29 = a2;
      v30 = a1;
      objc_msgSend(v23, "handleResponse:forRequest:completion:", 0, isa, v27, swift_release(v28).n128_f64[0]);
      _Block_release(v27);

    }
  }
  else
  {
    sub_10013B82C((uint64_t)a2, v7, v8, v9, v10, v11, v12, v13, (uint64_t)aBlock, v32, (uint64_t)v33, (uint64_t)v34, (uint64_t)v35, v36, v37, v38, v39, v40, v41,
      v42);
  }
}

void sub_10013CF60(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  NSObject *v35;
  NSObject *oslog;
  os_log_t osloga;
  uint64_t v38;
  uint64_t v39;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v5 = type metadata accessor for Logger(0);
    sub_100108664(v5, (uint64_t)&unk_1002E2CC8);
    swift_errorRetain(a2);
    v6 = a3;
    swift_errorRetain(a2);
    v7 = v6;
    oslog = Logger.logObject.getter(v7, v8);
    v9 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = swift_slowAlloc(22, -1);
      v11 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v10 = 138412546;
      v38 = (uint64_t)v7;
      v12 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v10 + 4, v10 + 12);
      *v11 = v7;

      *(_WORD *)(v10 + 12) = 2112;
      swift_errorRetain(a2);
      v13 = _swift_stdlib_bridgeErrorToNSError(a2);
      v38 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v10 + 14, v10 + 22);
      v11[1] = v13;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "EnhancedEmergency: fetchAllPendingRequest, pendingVideoStreamingRequest, EED returned error while updating state:Rejected for video streaming request: %@, error: %@", (uint8_t *)v10, 0x16u);
      v14 = sub_1001085C0(&qword_1002D7880);
      swift_arrayDestroy(v11, 2, v14);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);

      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
  else
  {
    if (a1)
    {
      v16 = objc_opt_self(CLEEDStreamingRequest);
      v17 = swift_dynamicCastObjCClass(a1, v16);
      if (v17)
      {
        v18 = v17;
        v19 = a1;
        sub_100137524(v18);
        if (qword_1002D7250 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v20 = type metadata accessor for Logger(0);
        sub_100108664(v20, (uint64_t)&unk_1002E2CC8);
        v21 = a3;
        v23 = Logger.logObject.getter(v21, v22);
        v24 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = swift_slowAlloc(22, -1);
          osloga = v19;
          v38 = (uint64_t)v21;
          v26 = (_QWORD *)swift_slowAlloc(16, -1);
          *(_DWORD *)v25 = 138412546;
          v27 = v21;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v25 + 4, v25 + 12);
          *v26 = v21;

          *(_WORD *)(v25 + 12) = 2112;
          v38 = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v25 + 14, v25 + 22);
          v26[1] = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "EnhancedEmergency: fetchAllPendingRequest, pendingVideoStreamingRequest, finished updating state:Rejected for video streaming request: %@, error: %@", (uint8_t *)v25, 0x16u);
          v28 = sub_1001085C0(&qword_1002D7880);
          swift_arrayDestroy(v26, 2, v28);
          v29 = v26;
          v19 = osloga;
          swift_slowDealloc(v29, -1, -1);
          swift_slowDealloc(v25, -1, -1);

        }
        else
        {

        }
        v32 = Logger.logObject.getter(v30, v31);
        v33 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v34 = 0;
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "EnhancedEmergency: fetchAllPendingRequest, pendingVideoStreamingRequest, reset videoStreamingRequest due to rate limiting", v34, 2u);
          swift_slowDealloc(v34, -1, -1);
          v35 = v19;
        }
        else
        {
          v35 = v32;
          v32 = v19;
        }

      }
    }
    sub_10013C0F0();
  }
}

void sub_10013D428(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  id v23;
  id v24;
  Class isa;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  char *v30;
  void **aBlock;
  uint64_t v32;
  uint64_t (*v33)();
  void *v34;
  void (*v35)(void *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v15 = (char *)&aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)&a1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequestCount] >= 3)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100108664(v16, (uint64_t)&unk_1002E2CC8);
    v19 = Logger.logObject.getter(v17, v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "EnhancedEmergency: fetchAllPendingRequest, reached maxRequestCountPerRequestType for media upload. Reject the new request", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v22 = *(void **)&a1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(a2, "ID");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v24);

      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
      v26 = swift_allocObject(&unk_10028A200, 32, 7);
      *(_QWORD *)(v26 + 16) = a2;
      *(_QWORD *)(v26 + 24) = a1;
      v35 = sub_1001432D4;
      v36 = v26;
      aBlock = _NSConcreteStackBlock;
      v32 = 1107296256;
      v33 = sub_10013AD8C;
      v34 = &unk_10028A218;
      v27 = _Block_copy(&aBlock);
      v28 = v36;
      v29 = a2;
      v30 = a1;
      objc_msgSend(v23, "handleResponse:forRequest:completion:", 0, isa, v27, swift_release(v28).n128_f64[0]);
      _Block_release(v27);

    }
  }
  else
  {
    sub_10013BCDC((uint64_t)a2, v7, v8, v9, v10, v11, v12, v13, (uint64_t)aBlock, v32, (uint64_t)v33, (uint64_t)v34, (uint64_t)v35, v36, v37, v38, v39, v40, v41,
      v42);
  }
}

void sub_10013D668(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  NSObject *v35;
  NSObject *oslog;
  os_log_t osloga;
  uint64_t v38;
  uint64_t v39;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v5 = type metadata accessor for Logger(0);
    sub_100108664(v5, (uint64_t)&unk_1002E2CC8);
    swift_errorRetain(a2);
    v6 = a3;
    swift_errorRetain(a2);
    v7 = v6;
    oslog = Logger.logObject.getter(v7, v8);
    v9 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = swift_slowAlloc(22, -1);
      v11 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v10 = 138412546;
      v38 = (uint64_t)v7;
      v12 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v10 + 4, v10 + 12);
      *v11 = v7;

      *(_WORD *)(v10 + 12) = 2112;
      swift_errorRetain(a2);
      v13 = _swift_stdlib_bridgeErrorToNSError(a2);
      v38 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v10 + 14, v10 + 22);
      v11[1] = v13;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "EnhancedEmergency: fetchAllPendingRequest, pendingMediaUploadRequest, EED returned error while updating state:Rejected for media upload request: %@, error: %@", (uint8_t *)v10, 0x16u);
      v14 = sub_1001085C0(&qword_1002D7880);
      swift_arrayDestroy(v11, 2, v14);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);

      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
  else
  {
    if (a1)
    {
      v16 = objc_opt_self(CLEEDUploadRequest);
      v17 = swift_dynamicCastObjCClass(a1, v16);
      if (v17)
      {
        v18 = v17;
        v19 = a1;
        sub_100137594(v18);
        if (qword_1002D7250 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v20 = type metadata accessor for Logger(0);
        sub_100108664(v20, (uint64_t)&unk_1002E2CC8);
        v21 = a3;
        v23 = Logger.logObject.getter(v21, v22);
        v24 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = swift_slowAlloc(22, -1);
          osloga = v19;
          v38 = (uint64_t)v21;
          v26 = (_QWORD *)swift_slowAlloc(16, -1);
          *(_DWORD *)v25 = 138412546;
          v27 = v21;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v25 + 4, v25 + 12);
          *v26 = v21;

          *(_WORD *)(v25 + 12) = 2112;
          v38 = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v25 + 14, v25 + 22);
          v26[1] = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "EnhancedEmergency: fetchAllPendingRequest,pendingMediaUploadRequest, finished updating state:Rejected for media upload request: %@, error: %@", (uint8_t *)v25, 0x16u);
          v28 = sub_1001085C0(&qword_1002D7880);
          swift_arrayDestroy(v26, 2, v28);
          v29 = v26;
          v19 = osloga;
          swift_slowDealloc(v29, -1, -1);
          swift_slowDealloc(v25, -1, -1);

        }
        else
        {

        }
        v32 = Logger.logObject.getter(v30, v31);
        v33 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v34 = 0;
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "EnhancedEmergency: fetchAllPendingRequest,pendingMediaUploadRequest, reset mediaUploadRequest due to rate limiting", v34, 2u);
          swift_slowDealloc(v34, -1, -1);
          v35 = v19;
        }
        else
        {
          v35 = v32;
          v32 = v19;
        }

      }
    }
    sub_10013C0CC();
  }
}

uint64_t sub_10013DB30(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  uint64_t v6;
  id v7;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
    v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
  else
    v6 = 0;
  swift_retain(v4);
  v7 = a3;
  v5(v6, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v6);
}

void sub_10013DBB8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
  v3 = sub_10011ADDC();
  if (sub_100109560(v3))
  {
    v4 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v4);
    sub_100123A2C((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: fetch video streaming request");
    sub_100109440(v1);
  }

  v7 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
  if (v7)
  {
    *(_QWORD *)(sub_100122840((uint64_t)&unk_10028A020) + 16) = v0;
    sub_10010E350((uint64_t)sub_10013AD8C, (uint64_t)_NSConcreteStackBlock, 1107296256, v8, v9);
    sub_10014373C();
    sub_100143824();
    sub_1001436CC();
    sub_100136274(v7, "fetchCurrentStreamingRequestWithCompletion:");
    sub_100143800();

  }
  sub_1001435C0();
}

void sub_10013DCC4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
  v3 = sub_10011ADDC();
  if (sub_100109560(v3))
  {
    v4 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v4);
    sub_100123A2C((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: fetch media upload request");
    sub_100109440(v1);
  }

  v7 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
  if (v7)
  {
    *(_QWORD *)(sub_100122840((uint64_t)&unk_100289F80) + 16) = v0;
    sub_10010E350((uint64_t)sub_10013AD8C, (uint64_t)_NSConcreteStackBlock, 1107296256, v8, v9);
    sub_10014373C();
    sub_100143824();
    sub_1001436CC();
    sub_100136274(v7, "fetchCurrentMediaUploadRequestWithCompletion:");
    sub_100143800();

  }
  sub_1001435C0();
}

void sub_10013DDD0()
{
  uint64_t v0;
  uint64_t v1;
  const char *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  const void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  _QWORD *v44;
  _QWORD v45[5];

  sub_10010BC70();
  v3 = v2;
  v40 = v4;
  v41 = v5;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = sub_10011AFC8();
  v42 = *(_QWORD *)(v14 - 8);
  sub_10011AE0C();
  __chkstk_darwin(v15, v16);
  v17 = sub_10011AE70();
  v18 = type metadata accessor for DispatchQoS(v17);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  sub_1001436D4();
  if (!v11)
  {
    sub_10011ADD4(v21, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
    v32 = (void *)sub_100143B58();
    v33 = sub_100109754((uint64_t)v7, 32);
    *(_QWORD *)(v33 + 16) = v13;
    *(_QWORD *)(v33 + 24) = v9;
    v45[3] = v40;
    v45[4] = v33;
    v45[0] = 1107296256;
    v45[1] = sub_100112054;
    v45[2] = v41;
    sub_1001439F4();
    sub_100143B2C();
    v34 = v9;
    v35 = sub_100110F0C();
    static DispatchQoS.unspecified.getter(v35);
    v44 = _swiftEmptyArrayStorage;
    sub_1001081CC((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v37 = v36;
    v38 = sub_100143A4C();
    sub_100143A20((unint64_t *)&qword_1002D83C0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v44, v38, v39, v14, v37);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v1, v0, v7);
    _Block_release(v7);

    sub_1001436BC(v0, *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v1, v18);
    goto LABEL_7;
  }
  v22 = v3;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v23 = sub_100109570();
  sub_100108664(v23, (uint64_t)&unk_1002E2CC8);
  sub_100143A74();
  v24 = sub_100143A74();
  v43 = Logger.logObject.getter(v24, v25);
  v26 = static os_log_type_t.error.getter(v43);
  if (os_log_type_enabled(v43, v26))
  {
    v27 = (uint8_t *)sub_1001094C8(12);
    v28 = (_QWORD *)sub_1001094C8(8);
    *(_DWORD *)v27 = 138412290;
    sub_100143A74();
    v29 = _swift_stdlib_bridgeErrorToNSError(v11);
    v44 = (_QWORD *)v29;
    sub_100143A30((uint64_t)&v44, (uint64_t)v45, (uint64_t)(v27 + 4));
    *v28 = v29;
    sub_1001438D0();
    sub_1001438D0();
    sub_100109638((void *)&_mh_execute_header, v43, v26, v22, v27);
    v30 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v28, v31, v30);
    sub_100109440((uint64_t)v28);
    sub_100109440((uint64_t)v27);

LABEL_7:
    sub_10010BC44();
    return;
  }
  sub_1001438D0();
  sub_1001438D0();
  sub_100143518(v43);
}

void sub_10013E0AC(void *a1, uint64_t a2, _QWORD *a3, void (*a4)(void *))
{
  id v7;
  void *Strong;

  if (a1
    && (*(_QWORD *)(a2 + *a3) = 3,
        v7 = a1,
        a4(a1),
        (Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate)) != 0))
  {
    sub_100143B70(Strong);
    sub_100143770(a2);
  }
  else
  {
    sub_100109830();
  }
}

void sub_10013E114()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
  v3 = sub_10011ADDC();
  if (sub_100109560(v3))
  {
    v4 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v4);
    sub_100123A2C((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: fetch the mitigations");
    sub_100109440(v1);
  }

  v7 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
  if (v7)
  {
    *(_QWORD *)(sub_100122840((uint64_t)&unk_100289F30) + 16) = v0;
    sub_10010E350((uint64_t)sub_10013AD8C, (uint64_t)_NSConcreteStackBlock, 1107296256, v8, v9);
    sub_10014373C();
    sub_100143824();
    sub_1001436CC();
    sub_100136274(v7, "fetchMitigationsWithCompletion:");
    sub_100143800();

  }
  sub_1001435C0();
}

void sub_10013E220(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *oslog;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v3 = type metadata accessor for Logger(0);
    sub_100108664(v3, (uint64_t)&unk_1002E2CC8);
    swift_errorRetain(a2);
    v4 = swift_errorRetain(a2);
    oslog = Logger.logObject.getter(v4, v5);
    v6 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v7 = 138412290;
      swift_errorRetain(a2);
      v9 = _swift_stdlib_bridgeErrorToNSError(a2);
      v17 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v7 + 4, v7 + 12);
      *v8 = v9;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "EnhancedEmergency: fetchMitigations, failed with error: %@", v7, 0xCu);
      v10 = sub_1001085C0(&qword_1002D7880);
      swift_arrayDestroy(v8, 1, v10);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

      return;
    }
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }
  else if (a1)
  {
    oslog = a1;
    sub_10013E514();
  }
  else
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100108664(v11, (uint64_t)&unk_1002E2CC8);
    oslog = Logger.logObject.getter(v12, v13);
    v14 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v14, "EnhancedEmergency: fetchMitigations, but mitigations is nil", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }
  }

}

void sub_10013E4A8(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain(*(_QWORD *)(a1 + 40));
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  sub_1001436CC();

  sub_1001436A4(v7);
}

void sub_10013E514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_10010BC70();
  v5 = v4;
  v6 = sub_10011AFC8();
  v25 = *(_QWORD *)(v6 - 8);
  sub_10011AE0C();
  __chkstk_darwin(v7, v8);
  v24 = sub_100143748();
  sub_1001438C0();
  __chkstk_darwin(v9, v10);
  sub_1001436EC();
  sub_10011ADD4(v11, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v12 = (void *)sub_100143B58();
  v13 = sub_100109754((uint64_t)&unk_100289EE0, 32);
  *(_QWORD *)(v13 + 16) = v0;
  *(_QWORD *)(v13 + 24) = v5;
  sub_1001439F4();
  sub_100143B2C();
  v14 = v5;
  v15 = sub_100110F0C();
  static DispatchQoS.unspecified.getter(v15);
  sub_1001081CC((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = v16;
  sub_100143A4C();
  sub_100143A20((unint64_t *)&qword_1002D83C0);
  v18 = sub_100143AD8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v18, v19, v20, v6, v17);
  sub_1001438F8();
  OS_dispatch_queue.async(group:qos:flags:execute:)(v21, v22, v23, v3);
  _Block_release(v3);

  sub_1001435F8(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v24);
  sub_10010BC44();
}

void sub_10013E698(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  sub_1001375A0((uint64_t)a2);
  sub_10013E6E0(v3);
  sub_10013E7E4();
}

void sub_10013E6E0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;

  v3 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
  if (v3)
  {
    v12 = v3;
    if (objc_msgSend(a1, "uploadMigitation") != (id)2)
      goto LABEL_9;
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v5 = sub_100109570();
    sub_10011ADC0(v5, (uint64_t)&unk_1002E2CC8);
    v6 = sub_10011ADDC();
    if (sub_100109560(v6))
    {
      v7 = (_WORD *)sub_1001094C8(2);
      sub_1001365A0(v7);
      sub_100123A2C((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: processMediaMitigations,requestToDisableMediaUploadButton in 6-up");
      sub_100109440(v2);
    }

    v10 = (void *)sub_100136790(OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
    if (v10)
    {
      v11 = (uint64_t)v10;
      objc_msgSend(v10, "requestToDisableMediaUploadButton");

      sub_1001435DC(v11);
    }
    else
    {
LABEL_9:
      sub_10013633C(v12);
    }
  }
  else
  {
    sub_10011AEDC();
  }
}

void sub_10013E7E4()
{
  NSObject *v0;
  uint8_t *v1;
  os_log_type_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  char **v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  _WORD *v13;
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  void *v21;
  char **v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  _WORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_100136544();
  v3 = v0;
  v5 = v4;
  v6 = &selRef_setNfmPlayCommands_;
  if (objc_msgSend(v4, "dropStreaming") && (sub_1001437F8() & 1) != 0)
  {
    v7 = *(uint64_t *)((char *)&v0->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState);
    if (v7 == 1)
    {
      if (qword_1002D7250 != -1)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v34 = sub_100109570();
      sub_10011ADC0(v34, (uint64_t)&unk_1002E2CC8);
      v35 = sub_10011ADDC();
      if (sub_100109560(v35))
      {
        v36 = (_WORD *)sub_1001094C8(2);
        sub_1001365A0(v36);
        sub_100123A2C((void *)&_mh_execute_header, v37, v38, "EnhancedEmergency: processStreamingMitigations, in accepted screen, hide the webrtc view controller");
        sub_100109440((uint64_t)&selRef_setNfmPlayCommands_);
      }

      v39 = *(Class *)((char *)&v0->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
      if (!v39)
        goto LABEL_33;
      v40 = v39;
      sub_100143B68();
      v41 = (void *)sub_10010E340();
      if (v41)
      {
        v42 = v41;
        sub_100136274(v41, "hideWebRTCViewController:");
        swift_unknownObjectRelease(v42);
      }
      v43 = (void *)sub_10010E340();
      if (!v43)
        goto LABEL_32;
      v44 = v43;
      objc_msgSend(v43, "requestToAddMitigationLabel");

      swift_unknownObjectRelease(v44);
    }
    else if (v7 == 3)
    {
      v8 = *(Class *)((char *)&v0->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
      if (v8)
      {
        v9 = qword_1002D7250;
        v10 = v8;
        if (v9 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v11 = sub_100109570();
        sub_10011ADC0(v11, (uint64_t)&unk_1002E2CC8);
        v12 = sub_10011ADDC();
        if (sub_10010E390(v12))
        {
          v13 = (_WORD *)sub_1001094C8(2);
          sub_10011AF94(v13);
          sub_10011AE18((void *)&_mh_execute_header, v9, (os_log_type_t)&selRef_setNfmPlayCommands_, "EnhancedEmergency: processStreamingMitigations, in Preview screen, hide video preview due to mitigations", v1);
          sub_100109440((uint64_t)v1);
        }

        v0 = v10;
        sub_10012F2F8();
        sub_1001330C4();

      }
      if (qword_1002D7250 == -1)
        goto LABEL_12;
      goto LABEL_50;
    }
LABEL_33:
    v45 = (void *)sub_100136790(OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
    if (v45)
    {
      objc_msgSend(v45, "requestToDisableVideoStreamingButton");
      sub_100136124();
    }
    (*(_BYTE **)((char *)&v3->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector))[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingDropped] = 1;
    goto LABEL_48;
  }
  v19 = objc_msgSend(v5, "dropStreaming");
  v20 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController;
  v21 = *(Class *)((char *)&v0->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (v19)
  {
    if (!v21)
      goto LABEL_48;
    goto LABEL_33;
  }
  if (v21)
  {
    v6 = v21;
    v22 = &selRef_setNfmPlayCommands_;
    v23 = &unk_1002D7000;
    v24 = &qword_10023F000;
    if ((uint64_t)sub_10010E3C8((uint64_t)v6, "streamingFPS") >= 1)
    {
      if (qword_1002D7250 != -1)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v25 = sub_100109570();
      v26 = sub_100143A60(v25, (uint64_t)&unk_1002E2CC8);
      Logger.logObject.getter(v26, v27);
      v28 = sub_10011ADDC();
      if (sub_100136000(v28))
      {
        v29 = (uint8_t *)sub_1001094C8(12);
        *(_DWORD *)v29 = 134217984;
        sub_100136368((uint64_t)v29, "streamingFPS");
        sub_100143AA8();
        v24 = &qword_10023F000;
        v22 = &selRef_setNfmPlayCommands_;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v30, v31, v29 + 4, v29 + 12);

        sub_100109638((void *)&_mh_execute_header, v0, v2, "EnhancedEmergency: processStreamingMitigations,setFrameRate:%ld", v29);
        v32 = (uint64_t)v29;
        v23 = (_QWORD *)&unk_1002D7000;
        sub_100109440(v32);

      }
      else
      {

      }
      sub_100136368(v33, v22[386]);
      v0 = v6;
      sub_100130EA8();
    }

    v46 = *(Class *)((char *)&v3->isa + v20);
    if (v46)
    {
      v3 = v46;
      if ((uint64_t)sub_10010E3C8((uint64_t)v3, "streamingBitrate") >= 1)
      {
        if (v23[74] != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v47 = sub_100109570();
        v48 = sub_100143A60(v47, (uint64_t)&unk_1002E2CC8);
        Logger.logObject.getter(v48, v49);
        v50 = sub_10011ADDC();
        if (sub_10010E390(v50))
        {
          v51 = (uint8_t *)sub_1001094C8(12);
          *(_DWORD *)v51 = v24[35];
          sub_10010E3C8((uint64_t)v51, "streamingBitrate");
          sub_100143AA8();
          sub_100143A9C(v52, v53);

          sub_100109638((void *)&_mh_execute_header, v0, (os_log_type_t)v6, "EnhancedEmergency: processStreamingMitigations,setMaximumBitRateKbps:%ld", v51);
          sub_100109440((uint64_t)v51);
        }
        else
        {

          v0 = v48;
        }

        v55 = (uint64_t)sub_10010E3C8(v54, "streamingBitrate");
        if ((unsigned __int128)(v55 * (__int128)1000) >> 64 != (1000 * v55) >> 63)
        {
          __break(1u);
LABEL_50:
          swift_once(&qword_1002D7250, sub_10010BCAC);
LABEL_12:
          v14 = sub_100109570();
          sub_10011ADC0(v14, (uint64_t)&unk_1002E2CC8);
          v15 = sub_10011ADDC();
          if (sub_100109560(v15))
          {
            v16 = (_WORD *)sub_1001094C8(2);
            sub_1001365A0(v16);
            sub_100123A2C((void *)&_mh_execute_header, v17, v18, "EnhancedEmergency: processStreamingMitigations, in Preview screen, wait for user to choose NotNow/Accept and then apply mitigation");
            sub_100109440((uint64_t)v6);
          }
LABEL_32:

          goto LABEL_33;
        }
        sub_10013130C();
      }

    }
  }
LABEL_48:
  sub_100143530();
}

void sub_10013ECB4()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for EnhancedEmergencyCoordinator();
  objc_msgSendSuper2(&v1, "dealloc");
  sub_100059A24();
}

uint64_t type metadata accessor for EnhancedEmergencyCoordinator()
{
  return objc_opt_self(PHEnhancedEmergencyCoordinator);
}

void sub_10013EDC0()
{
  void *v0;
  uint64_t v1;
  id v2;

  if (*(_QWORD *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController)
    && *(_QWORD *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState) != 4
    && swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate))
  {
    v2 = sub_100143C14();
    sub_100136274(v0, "insertWebViewUnderButtonControls:");

    sub_100143770((uint64_t)v0);
  }
  else
  {
    sub_100109830();
  }
}

#error "10013EEA0: call analysis failed (funcsize=89)"

#error "10013F114: call analysis failed (funcsize=123)"

void sub_10013F260()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  NSObject *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  NSObject *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  NSObject *v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  os_log_type_t v28;
  _WORD *v29;
  os_log_type_t v30;
  _WORD *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  void *v36;

  sub_10010BC70();
  v3 = v0;
  v4 = (_QWORD *)sub_10010AE94();
  v5 = *(v4 - 1);
  __chkstk_darwin(v4, v6);
  sub_1001436EC();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v7 = sub_100109570();
  v8 = (uint8_t *)sub_100108664(v7, (uint64_t)&unk_1002E2CC8);
  sub_100122838();
  v9 = sub_10011ADDC();
  if (sub_100136000(v9))
  {
    v10 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v10 = 0;
    sub_10011AE18((void *)&_mh_execute_header, v0, v2, "EnhancedEmergency: emergency coordinator gets notified startVideoStreamingRequest because of button press", v10);
    sub_100109440((uint64_t)v10);
  }

  v13 = *(Class *)((char *)&v0->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest);
  if (v13)
  {
    v14 = sub_100143B98(v13);
    v15 = v0;
    v16 = objc_msgSend(v14, "ID");
    sub_1001439EC((uint64_t)v16);

    v18 = UUID.uuidString.getter(v17);
    v20 = v19;
    (*(void (**)(uint64_t, _QWORD *))(v5 + 8))(v1, v4);
    sub_1001464EC(v18, v20);
    swift_bridgeObjectRelease(v20);

  }
  v21 = *(Class *)((char *)&v3->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
  if (v21)
  {
    v4 = v21;
    if (objc_msgSend(v4, "dropStreaming"))
    {
      v22 = *(Class *)((char *)&v3->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
      if (v22)
      {
        v23 = v22;
        sub_100143B68();
        v24 = ((char *)v3 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
        v25 = (void *)sub_1001437D4();
        if (v25)
        {
          sub_1001360B0(v25, "hideWebRTCViewController:");
          sub_100136124();
        }
        v26 = sub_1001437D4();
        if (v26)
        {
          v24 = v26;
          -[NSObject requestToAddMitigationLabel](v26, "requestToAddMitigationLabel");
          v26 = sub_1001437DC();
        }
        Logger.logObject.getter(v26, v27);
        v28 = sub_100123A70();
        if (sub_100123A54(v28))
        {
          v29 = (_WORD *)sub_1001094C8(2);
          sub_100143680(v29);
          sub_10011AE18((void *)&_mh_execute_header, v24, (os_log_type_t)v8, "EnhancedEmergency: continueVideoStreamingRequest, drop streaming because mitigation is being applied", v8);
          sub_100109440((uint64_t)v8);
        }

      }
      goto LABEL_24;
    }

  }
  Logger.logObject.getter(v11, v12);
  v30 = sub_10011ADDC();
  if (sub_100109560(v30))
  {
    v31 = (_WORD *)sub_1001094C8(2);
    sub_1001365A0(v31);
    sub_100123A2C((void *)&_mh_execute_header, v32, v33, "EnhancedEmergency: continueVideoStreamingRequest, can start video streaming without any mitigations");
    sub_100109440((uint64_t)v4);
  }

  v34 = (void *)sub_100136790(OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
  if (v34)
  {
    objc_msgSend(v34, "requestToAddLiveCameraLabel");
    sub_100136124();
  }
  v35 = (char *)*(id *)((char *)&v3->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  *(CFAbsoluteTime *)&v35[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime] = CFAbsoluteTimeGetCurrent();

  v36 = *(Class *)((char *)&v3->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (v36)
  {
    v4 = v36;
    sub_10012EE74();
LABEL_24:

  }
  sub_10010BC44();
}

void sub_10013F588()
{
  uint8_t *v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  NSObject *v4;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v1 = sub_100109570();
  v4 = sub_10011ADC0(v1, (uint64_t)&unk_1002E2CC8);
  v2 = static os_log_type_t.default.getter();
  if (sub_10013618C(v4))
  {
    v3 = (_WORD *)sub_1001094C8(2);
    sub_1001361D8(v3);
    sub_10011AE18((void *)&_mh_execute_header, v4, v2, "EnhancedEmergency: emergency coordinator gets notified camera is turned off for remote side", v0);
    sub_100109440((uint64_t)v0);
  }
  sub_10014354C(v4);
}

void *sub_10013F650(const char *a1)
{
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  void *result;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v5 = sub_100109570();
  sub_10011ADC0(v5, (uint64_t)&unk_1002E2CC8);
  v6 = sub_10011ADDC();
  if (sub_10011AF5C(v6))
  {
    v7 = (_WORD *)sub_1001094C8(2);
    sub_10011B070(v7);
    sub_10011AE18((void *)&_mh_execute_header, v1, v2, a1, v3);
    sub_100109440((uint64_t)v3);
  }

  result = (void *)swift_unknownObjectWeakLoadStrong((char *)v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
  if (result)
  {
    sub_100143B70(result);
    return (void *)swift_unknownObjectRelease(v1);
  }
  return result;
}

void sub_10013F774()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  _WORD *v11;
  NSObject *v12;

  if ((sub_100137B38() & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v2 = sub_100109570();
    sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
    v3 = sub_10011ADDC();
    if (sub_100109560(v3))
    {
      v4 = (_WORD *)sub_1001094C8(2);
      sub_1001365A0(v4);
      sub_100123A2C((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: emergency coordinator gets notified to requestAnimationToFullScreenWebView, run the animation");
      sub_100109440(v1);
    }

    v7 = (void *)sub_100136790(OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
    if (v7)
    {
      v8 = (uint64_t)v7;
      objc_msgSend(v7, "requestAnimationToFullScreenWebView");
      sub_1001435DC(v8);
    }
    else
    {
      sub_10011AEDC();
    }
  }
  else
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v9 = sub_100109570();
    v12 = sub_10011ADC0(v9, (uint64_t)&unk_1002E2CC8);
    v10 = static os_log_type_t.default.getter();
    if (sub_10013618C(v12))
    {
      v11 = (_WORD *)sub_1001094C8(2);
      sub_1001361D8(v11);
      sub_10011AE18((void *)&_mh_execute_header, v12, v10, "EnhancedEmergency: emergency coordinator gets notified to requestAnimationToFullScreenWebView, but webview is already removed", (uint8_t *)v0);
      sub_100109440((uint64_t)v0);
    }
    sub_10013633C(v12);
  }
}

#error "10013F9A8: call analysis failed (funcsize=75)"

void sub_10013FA6C()
{
  uint64_t v0;
  void *v1;

  sub_100143870(OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  v0 = sub_10014378C();
  sub_100145C60(v0);
  sub_10014354C(v1);
}

void sub_10013FAF4()
{
  sub_100145F48();
  sub_100109438();
}

void sub_10013FB38(char a1)
{
  id v2;

  v2 = sub_100143870(OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  sub_100145F98(a1);
  sub_10014354C(v2);
}

void sub_10013FBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  sub_100143870(OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  v0 = sub_10014378C();
  sub_1001460C8(v0, v1, v2);
  sub_10014354C(v3);
}

void sub_10013FC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  sub_100143870(OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  v0 = sub_10014378C();
  sub_100146010(v0, v1, v2);
  sub_10014354C(v3);
}

#error "10013FEF4: call analysis failed (funcsize=155)"

void sub_10013FF48()
{
  char *v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  os_log_type_t v61;
  _WORD *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  os_log_type_t v67;
  _WORD *v68;
  id v69;
  uint64_t v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  os_log_type_t v75;
  _BOOL4 v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, char *, uint64_t);
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void *v89;
  uint64_t v90;
  void (*v91)(char *, NSObject *);
  NSObject *v92;
  NSString v93;
  unsigned int v94;
  void (*v95)(uint64_t, NSObject *);
  uint64_t v96;
  void *v97;
  uint64_t v98;
  NSObject *v99;
  NSObject *v100;
  NSObject *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  os_log_type_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  NSURL *v124;
  id v125;
  void *v126;
  id v127;
  void *v128;
  int v129;
  _DWORD *v130;
  unsigned __int32 v131;
  uint64_t v132;
  uint64_t v133;
  os_log_type_t v134;
  _WORD *v135;
  void (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint8_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  os_log_type_t v151;
  _BOOL4 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint8_t *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  os_log_type_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __n128 v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  NSObject *v174;
  os_log_type_t v175;
  _WORD *v176;
  void *v177;
  uint64_t v178;
  id v179;
  Class v180;
  id v181;
  uint8_t *v182;
  Class v183;
  uint64_t v184;
  void *v185;
  id v186;
  char *v187;
  uint64_t *v188;
  char *v189;
  uint8_t *v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  char *v198;
  _DWORD *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unsigned int v208;
  uint64_t v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void (*v217)(uint64_t, char *, uint64_t);
  uint64_t v218;
  NSObject *v219;
  uint64_t v220;
  void (*v221)(uint64_t, NSObject *);
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t (*v225)(uint64_t, uint64_t, uint64_t);
  NSObject *v226;
  Class isa;
  uint64_t v228;
  char *v229;
  NSObject *v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD v233[3];
  _QWORD v234[2];
  Swift::Int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;

  sub_10010BC70();
  v238 = v3;
  v239 = v4;
  v5 = v0;
  v202 = v6;
  v7 = sub_10010AE94();
  sub_1001438E0();
  __chkstk_darwin(v8, v9);
  v10 = sub_100143840();
  ((void (*)(uint64_t))type metadata accessor for String.Encoding)(v10);
  sub_10011AE0C();
  __chkstk_darwin(v11, v12);
  sub_10011ADE4();
  v205 = v13;
  sub_1001085C0((uint64_t *)&unk_1002DB390);
  sub_10011AE0C();
  __chkstk_darwin(v14, v15);
  sub_10011ADE4();
  v217 = v16;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  sub_1001437C0();
  sub_10014356C();
  __chkstk_darwin(v20, v21);
  sub_100143764();
  sub_10014356C();
  __chkstk_darwin(v22, v23);
  sub_100143764();
  sub_10014356C();
  __chkstk_darwin(v24, v25);
  sub_100143B38();
  v216 = v26;
  sub_1001085C0(&qword_1002D8F68);
  sub_10011AE0C();
  __chkstk_darwin(v27, v28);
  sub_1001437C0();
  sub_10014356C();
  __chkstk_darwin(v29, v30);
  sub_100143764();
  sub_10014356C();
  __chkstk_darwin(v31, v32);
  sub_100143764();
  sub_10014356C();
  __chkstk_darwin(v33, v34);
  sub_100143B38();
  v206 = v35;
  v36 = ((uint64_t (*)(_QWORD))type metadata accessor for UTType)(0);
  isa = v36[-1].isa;
  sub_10011AE0C();
  v39 = __chkstk_darwin(v37, v38);
  v41 = (char *)&v188 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39, v42);
  sub_100143B38();
  v228 = v43;
  v223 = ((uint64_t (*)(_QWORD))type metadata accessor for PHPickerResult)(0);
  __chkstk_darwin(v223, v44);
  sub_1001437C0();
  sub_10014356C();
  __chkstk_darwin(v45, v46);
  sub_100143764();
  sub_10014356C();
  __chkstk_darwin(v47, v48);
  sub_100143764();
  sub_10014356C();
  __chkstk_darwin(v49, v50);
  sub_100143764();
  sub_10014356C();
  __chkstk_darwin(v51, v52);
  sub_100143764();
  sub_10014356C();
  __chkstk_darwin(v53, v54);
  sub_100143B38();
  v226 = v56;
  v57 = *(void **)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest];
  if (v57)
  {
    v222 = v55;
    v230 = v36;
    v58 = *(_QWORD *)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation];
    v224 = v17;
    if (v58)
    {
      v59 = v57;
      v229 = (char *)sub_1001364A0();
      if (objc_msgSend(v229, "uploadMigitation") == (id)2)
      {
        if (qword_1002D7250 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v60 = sub_100109570();
        sub_10011ADC0(v60, (uint64_t)&unk_1002E2CC8);
        v61 = sub_100123A70();
        if (sub_100123A54(v61))
        {
          v62 = (_WORD *)sub_1001094C8(2);
          sub_100143680(v62);
          sub_10011AE18((void *)&_mh_execute_header, &unk_1002D7000, (os_log_type_t)v58, "EnhancedEmergency: uploadMedia, cannot uplaod media due to upload mitigation.", v1);
          sub_100109440((uint64_t)v1);
        }

        v63 = (void *)sub_1001437D4();
        if (v63)
        {
          objc_msgSend(v63, "requestToDisableMediaUploadButton");
          sub_100136124();
        }
        v64 = (void *)sub_1001437D4();
        if (v64)
        {
          v65 = v64;
          objc_msgSend(v64, "requestToAddPhotoMitigationLabel");

          swift_unknownObjectRelease(v65);
        }
        else
        {

          sub_100143518(v229);
        }
        return;
      }

    }
    else
    {
      v69 = v57;
    }
    v190 = v1;
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v70 = sub_100109570();
    v71 = sub_100108664(v70, (uint64_t)&unk_1002E2CC8);
    v72 = v202;
    v73 = sub_10011AF34();
    v219 = v71;
    Logger.logObject.getter(v73, v74);
    v75 = sub_10011ADDC();
    v76 = sub_100109560(v75);
    v192 = v7;
    v191 = v2;
    if (v76)
    {
      v77 = (uint8_t *)sub_1001094C8(12);
      *(_DWORD *)v77 = 134217984;
      v232 = *(_QWORD *)(v202 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v232, v233, v77 + 4, v77 + 12);
      sub_100143B04();
      sub_100109638((void *)&_mh_execute_header, v71, (os_log_type_t)v1, "EnhancedEmergency: the media to be uploaded has count of %ld ", v77);
      v78 = (uint64_t)v77;
      v72 = v202;
      sub_100109440(v78);

    }
    else
    {

      sub_1001096DC();
    }
    v79 = v223;
    v80 = *(char **)(v72 + 16);
    v81 = v215;
    v82 = (uint64_t)v226;
    v193 = v57;
    if (v80)
    {
      v189 = v5;
      v194 = &v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaSet];
      v83 = v72 + ((*(unsigned __int8 *)(v222 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v222 + 80));
      v220 = *(_QWORD *)(v222 + 72);
      v225 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v222 + 16);
      v209 = APP_SANDBOX_READ;
      v208 = SANDBOX_EXTENSION_DEFAULT;
      v188 = &v236;
      sub_10011AF34();
      v84 = (void (*)(uint64_t, char *, uint64_t))&selRef_setNfmPlayCommands_;
      *(_QWORD *)&v85 = 136315138;
      v210 = v85;
      v198 = (char *)&type metadata for Any + 8;
      v218 = v18;
      v204 = v41;
      while (1)
      {
        v229 = v80;
        v86 = v225(v82, v83, v79);
        v87 = ((uint64_t (*)(uint64_t))static UTType.image.getter)(v86);
        v88 = (char *)v82;
        v89 = (void *)((uint64_t (*)(uint64_t))PHPickerResult.itemProvider.getter)(v87);
        v90 = ((uint64_t (*)(void))static UTType.image.getter)();
        ((void (*)(uint64_t))UTType.identifier.getter)(v90);
        sub_100143934();
        v91 = (void (*)(char *, NSObject *))*((_QWORD *)isa + 1);
        v92 = v230;
        v91(v41, v230);
        v93 = sub_100143A54();
        sub_100109558();
        v94 = sub_100143878();

        if (v94)
        {
          ((void (*)(void))static UTType.image.getter)();
          v79 = 1;
          v95 = (void (*)(uint64_t, NSObject *))v91;
          v96 = v228;
          goto LABEL_30;
        }
        v97 = (void *)((uint64_t (*)(void))PHPickerResult.itemProvider.getter)();
        v98 = ((uint64_t (*)(void))static UTType.movie.getter)();
        ((void (*)(uint64_t))UTType.identifier.getter)(v98);
        sub_100143934();
        v91(v41, v92);
        v99 = sub_100143A54();
        sub_100109558();
        v79 = (uint64_t)sub_100143878();

        v95 = (void (*)(uint64_t, NSObject *))v91;
        if ((v79 & 1) != 0)
          break;
        sub_1001437A8();
        sub_1001435D0();
        v129 = sub_1001096F0();
        if (sub_10011AFD8((os_log_type_t)v129))
        {
          LODWORD(v207) = v129;
          v212 = v83;
          v130 = (_DWORD *)sub_1001094C8(12);
          v200 = sub_1001094C8(32);
          v131 = sub_100143898(v200).n128_u32[0];
          v199 = v130;
          *v130 = v131;
          sub_100143808((uint64_t)v234);
          v132 = sub_100143BC8();
          sub_100143A7C(v132, (uint64_t)&isa);
          if (sub_100109FF4((uint64_t)v130, 1, v79) == 1)
          {
            sub_1001438A8((uint64_t)v130);
            v133 = v81;
          }
          else
          {
            v145 = v222;
            v88 = v196;
            sub_100143BEC((uint64_t)v196, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v222 + 32));
            v84(v203, v88, v79);
            sub_100143BBC();
            v133 = v215;
            sub_1001436BC((uint64_t)v88, *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8));
          }
          sub_100143834();
          sub_1001438A8(v206);
          v146 = sub_100143924();
          v147 = (uint8_t *)v199;
          *(_QWORD *)(v199 + 1) = v146;
          sub_100109544();
          sub_1001436C4(v133);
          sub_100109638((void *)&_mh_execute_header, v99, (os_log_type_t)v207, "EnhancedEmergency: can't save result: %s, it's not image or video", v147);
          v148 = v200;
          sub_100109598(v200, v149, (uint64_t)&type metadata for Any + 8);
          sub_100109440(v148);
          sub_100109440((uint64_t)v147);

          sub_100143674();
          v82 = (uint64_t)v226;
          sub_1001436C4((uint64_t)v226);
          v41 = v204;
          v83 = v212;
          goto LABEL_60;
        }

        sub_1001436C4(v81);
        sub_100143674();
        sub_1001436C4((uint64_t)v88);
        v82 = (uint64_t)v88;
        sub_100143834();
LABEL_61:
        v83 += v220;
        v80 = v88 - 1;
        if (!v80)
        {
          sub_100143B04();
          v57 = v193;
          v5 = v189;
          goto LABEL_64;
        }
      }
      ((void (*)(void))static UTType.movie.getter)();
      v79 = 2;
      v96 = v228;
LABEL_30:
      v100 = v230;
      v95(v96, v230);
      (*((void (**)(uint64_t, char *, NSObject *))isa + 4))(v96, v41, v100);
      v84 = v217;
      v88 = (char *)v226;
      v101 = v226;
      ((void (*)(uint64_t))PHPickerResult._filePromiseURL(contentType:))(v96);
      v102 = v224;
      if (sub_100109FF4((uint64_t)v84, 1, v224) == 1)
      {
        v221 = v95;
        v103 = v41;
        v104 = v81;
        sub_10011ABE4((uint64_t)v84, (uint64_t *)&unk_1002DB390);
        v105 = v214;
        sub_1001437A8();
        sub_1001435D0();
        v106 = sub_1001096F0();
        if (sub_10011AFD8(v106))
        {
          v212 = v83;
          v107 = sub_1001094C8(12);
          v207 = sub_1001094C8(32);
          *(_DWORD *)v107 = sub_100143898(v207).n128_u32[0];
          sub_100143808((uint64_t)&v237);
          v108 = sub_100143BC8();
          sub_100143A7C(v108, (uint64_t)v233);
          if (sub_100109FF4(v102, 1, v79) == 1)
          {
            sub_1001438A8(v102);
          }
          else
          {
            v136 = (void (*)(uint64_t, uint64_t, uint64_t))v84;
            v137 = v222;
            v138 = v197;
            sub_100143BEC(v197, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v222 + 32));
            v136(v203, v138, v79);
            sub_100143BBC();
            sub_1001436BC(v138, *(uint64_t (**)(uint64_t, uint64_t))(v137 + 8));
          }
          v84 = (void (*)(uint64_t, char *, uint64_t))&selRef_setNfmPlayCommands_;
          sub_1001438A8(v211);
          *(_QWORD *)(v107 + 4) = sub_100143924();
          sub_100109544();
          sub_1001436C4(v214);
          sub_100109638((void *)&_mh_execute_header, v101, v106, "EnhancedEmergency: can't save result: %s, filePromise url is nil", (uint8_t *)v107);
          v139 = v207;
          swift_arrayDestroy(v207, 1, v198);
          sub_100109440(v139);
          sub_100109440(v107);

          sub_100143674();
          v82 = (uint64_t)v226;
          sub_1001436C4((uint64_t)v226);
          v41 = v204;
          v81 = v215;
          v88 = v229;
          v83 = v212;
        }
        else
        {

          sub_1001436C4(v105);
          sub_10014364C();
          sub_1001436C4((uint64_t)v88);
          v82 = (uint64_t)v88;
          sub_100143834();
          v81 = v104;
          v41 = v103;
        }
        goto LABEL_61;
      }
      v109 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v218 + 32))(v216, v84, v102);
      v110 = ((uint64_t (*)(uint64_t))URL.path.getter)(v109);
      v88 = v213;
      URL.init(fileURLWithPath:)(v110, v111);
      v112 = sub_1001096DC();
      v113 = ((uint64_t (*)(uint64_t))URL.path.getter)(v112);
      v114 = ((uint64_t (*)(uint64_t))String.utf8CString.getter)(v113);
      sub_1001096DC();
      v84 = (void (*)(uint64_t, char *, uint64_t))((uint64_t (*)(uint64_t, NSObject *, _QWORD))sandbox_extension_issue_file)(v209, &v114[4], v208);
      v115 = sub_100110F0C();
      if (!v84)
      {
        sub_1001435D0();
        v134 = sub_1001096F0();
        v84 = (void (*)(uint64_t, char *, uint64_t))&selRef_setNfmPlayCommands_;
        if (sub_10013618C(v114))
        {
          v135 = (_WORD *)sub_1001094C8(2);
          sub_100143680(v135);
          sub_10011AE18((void *)&_mh_execute_header, v114, v134, "EnhancedEmergency: sandbox_extension_issue_file failed", (uint8_t *)v79);
          sub_100109440(v79);
        }

        v82 = v224;
        sub_100143644((uint64_t)v88);
        sub_100143634();
        sub_100143674();
        sub_100143604();
        v88 = v229;
        goto LABEL_61;
      }
      v116 = v205;
      ((void (*)(uint64_t))static String.Encoding.utf8.getter)(v115);
      ((void (*)(void (*)(uint64_t, char *, uint64_t), uint64_t))String.init(cString:encoding:))(v84, v116);
      if (v117)
      {
        v118 = v117;
        v221 = v95;
        v84 = *(void (**)(uint64_t, char *, uint64_t))(v218 + 16);
        v119 = v201;
        v120 = sub_100143C1C(v201);
        v88 = (char *)v226;
        ((void (*)(uint64_t))PHPickerResult.assetIdentifier.getter)(v120);
        if (v121)
          v122 = v121;
        else
          v122 = 0xE000000000000000;
        v123 = objc_allocWithZone((Class)CLEEDMediaItem);
        v125 = sub_100141DC0(v119, v122, v118, v79, v124);
        if (v125)
        {
          v126 = v125;
          swift_beginAccess(v194, &v232, 33, 0);
          v127 = v126;
          sub_1001421B8(&v235, v127);
          v128 = (void *)v235;
          swift_endAccess(&v232);

          sub_100143644((uint64_t)v213);
          sub_100143634();
          sub_10014364C();
          v79 = v223;
          sub_1001436BC((uint64_t)v88, *(uint64_t (**)(uint64_t, uint64_t))(v222 + 8));
          v82 = (uint64_t)v88;
LABEL_59:
          sub_100143834();
LABEL_60:
          v81 = v215;
          goto LABEL_61;
        }
        v150 = v195;
        v88 = v213;
        sub_100143C1C(v195);
        v79 = sub_1001435D0();
        v151 = static os_log_type_t.error.getter(v79);
        v152 = os_log_type_enabled((os_log_t)v79, v151);
        v153 = v228;
        v84 = (void (*)(uint64_t, char *, uint64_t))v221;
        if (!v152)
        {

          v82 = v224;
          sub_100143644(v150);
          sub_100143644((uint64_t)v88);
          sub_100143634();
          ((void (*)(uint64_t, NSObject *))v84)(v153, v230);
          sub_100143604();
          sub_100143834();
          v81 = v215;
          goto LABEL_61;
        }
        v84 = (void (*)(uint64_t, char *, uint64_t))sub_1001094C8(12);
        v232 = sub_1001094C8(32);
        v154 = v232;
        *(_DWORD *)v84 = v210;
        v212 = (uint64_t)v84 + 4;
        v155 = URL.path.getter();
        v157 = v156;
        v235 = sub_100121E04(v155, v156, &v232);
        sub_100143A30((uint64_t)&v235, (uint64_t)v188, v212);
        swift_bridgeObjectRelease(v157);
        v82 = *(_QWORD *)(v218 + 8);
        sub_100143BF8(v150);
        sub_100109638((void *)&_mh_execute_header, v79, v151, "EnhancedEmergency: trying to create a CLEEDMediaItem with url: %s, but it's nil", (uint8_t *)v84);
        sub_100109598(v154, v158, (uint64_t)&type metadata for Any + 8);
        sub_100109440(v154);
        sub_100109440((uint64_t)v84);

        sub_100143BF8((uint64_t)v88);
        sub_100143BF8(v216);
        sub_10014364C();
      }
      else
      {
        sub_1001435D0();
        v140 = sub_1001096F0();
        if (sub_10014372C(v140))
        {
          v79 = sub_1001094C8(12);
          v141 = sub_1001094C8(32);
          *(_DWORD *)v79 = sub_100143898(v141).n128_u32[0];
          v235 = (Swift::Int)v84;
          sub_1001085C0(&qword_1002D8F80);
          v142 = String.init<A>(reflecting:)(&v235);
          *(_QWORD *)(v79 + 4) = sub_100121E04(v142, v143, &v232);
          sub_100109544();
          sub_100109638((void *)&_mh_execute_header, v114, (os_log_type_t)v96, "EnhancedEmergency: Unable to create string from sandbox_extension token:%s", (uint8_t *)v79);
          sub_100109598(v141, v144, (uint64_t)&type metadata for Any + 8);
          sub_100109440(v141);
          sub_100109440(v79);
        }

        v82 = v224;
        sub_100143644((uint64_t)v88);
        sub_100143634();
        sub_100143674();
      }
      sub_100143604();
      goto LABEL_59;
    }
LABEL_64:
    v159 = (uint8_t *)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaSet];
    swift_beginAccess(&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaSet], &v235, 0, 0);
    v160 = sub_10011AF34();
    v161 = sub_100137278(v160);
    sub_1001096DC();
    if (v161 < 1)
    {
      v174 = sub_1001435D0();
      v175 = static os_log_type_t.error.getter(v174);
      if (sub_100123A54(v175))
      {
        v176 = (_WORD *)sub_1001094C8(2);
        sub_100143680(v176);
        sub_10011AE18((void *)&_mh_execute_header, v174, (os_log_type_t)v161, "EnhancedEmergency: mediaSet count is 0", v159);
        sub_100109440((uint64_t)v159);

LABEL_74:
        sub_10010BC44();
        return;
      }

    }
    else
    {
      v162 = v5;
      sub_1001435D0();
      v163 = sub_10011ADDC();
      if (sub_10011AF5C(v163))
      {
        v164 = sub_1001094C8(12);
        v165 = sub_1001094C8(32);
        v232 = v165;
        *(_DWORD *)v164 = 136315138;
        v230 = (v164 + 4);
        v166 = *(_QWORD *)v159;
        sub_10011ADD4(v165, &qword_1002D8F70, CLEEDMediaItem_ptr);
        sub_100141EA0();
        v167 = swift_bridgeObjectRetain(v166);
        v168 = ((uint64_t (*)(__n128))Set.description.getter)(v167);
        v170 = v169;
        swift_bridgeObjectRelease(v166);
        v231 = sub_100121E04(v168, v170, &v232);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v231, &v232, v230, v164 + 12);

        v171 = v170;
        v57 = v193;
        swift_bridgeObjectRelease(v171);
        sub_100109638((void *)&_mh_execute_header, v161, (os_log_type_t)v81, "EnhancedEmergency: trying to send mediaSet for upload: %s", (uint8_t *)v164);
        sub_100109598(v165, v172, (uint64_t)&type metadata for Any + 8);
        sub_100109440(v165);
        sub_100109440(v164);

      }
      else
      {

      }
      v177 = *(void **)&v162[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
      if (v177)
      {
        v178 = *(_QWORD *)v159;
        sub_10011ADD4(v173, &qword_1002D8F70, CLEEDMediaItem_ptr);
        sub_100141EA0();
        v179 = v177;
        swift_bridgeObjectRetain(v178);
        v180 = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v178);
        v181 = objc_msgSend(v57, "ID");
        v182 = v190;
        sub_1001439EC((uint64_t)v181);

        v183 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(uint8_t *, uint64_t))(v191 + 8))(v182, v192);
        v184 = sub_100109754((uint64_t)&unk_100289E40, 32);
        *(_QWORD *)(v184 + 16) = v57;
        *(_QWORD *)(v184 + 24) = v162;
        v234[0] = sub_100141F18;
        v234[1] = v184;
        v232 = (uint64_t)_NSConcreteStackBlock;
        v233[0] = 1107296256;
        v233[1] = sub_1001A4BC8;
        v233[2] = &unk_100289E58;
        v185 = _Block_copy(&v232);
        v186 = v57;
        v187 = v162;
        objc_msgSend(v179, "mediaUploadList:forRequestID:completion:", v180, v183, v185, swift_release().n128_f64[0]);

        _Block_release(v185);
        goto LABEL_74;
      }
    }

    goto LABEL_74;
  }
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v66 = sub_100109570();
  v230 = sub_10011ADC0(v66, (uint64_t)&unk_1002E2CC8);
  v67 = static os_log_type_t.error.getter(v230);
  if (sub_10013618C(v230))
  {
    v68 = (_WORD *)sub_1001094C8(2);
    sub_1001361D8(v68);
    sub_10011AE18((void *)&_mh_execute_header, v230, v67, "EnhancedEmergency: trying to upload media, but mediaUploadRequest is nil", (uint8_t *)v36);
    sub_100109440((uint64_t)v36);
  }
  sub_100143518(v230);
}

uint64_t sub_10014129C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = (_QWORD *)swift_allocObject(&unk_100289E90, 40, 7);
  v15[2] = a2;
  v15[3] = a1;
  v15[4] = a3;
  aBlock[4] = sub_1001431C8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112054;
  aBlock[3] = &unk_100289EA8;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_errorRetain(a1);
  v18 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001081CC((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = v20;
  v22 = sub_1001085C0((uint64_t *)&unk_1002D7F80);
  sub_100143410((unint64_t *)&qword_1002D83C0, (uint64_t *)&unk_1002D7F80);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v6, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v25);
}

uint64_t sub_1001414BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  __n128 v17;
  os_log_type_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v11 = type metadata accessor for Logger(0);
  sub_100108664(v11, (uint64_t)&unk_1002E2CC8);
  v12 = a1;
  swift_errorRetain(a2);
  v13 = v12;
  v14 = swift_errorRetain(a2);
  v16 = Logger.logObject.getter(v14, v15);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v16, v18))
  {
    v36 = a3;
    v19 = swift_slowAlloc(22, -1);
    v34 = (uint64_t *)swift_slowAlloc(8, -1);
    v35 = swift_slowAlloc(32, -1);
    v38[0] = v35;
    *(_DWORD *)v19 = 136315394;
    v33 = v19 + 4;
    v20 = objc_msgSend(v13, "ID");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v20);

    sub_1001081CC(&qword_1002D8F90, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v22 = dispatch thunk of CustomStringConvertible.description.getter(v6, v21);
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v37 = sub_100121E04(v22, v24, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v33, v19 + 12);

    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v19 + 12) = 2112;
    if (a2)
    {
      swift_errorRetain(a2);
      v25 = _swift_stdlib_bridgeErrorToNSError(a2);
      v37 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v19 + 14, v19 + 22);
    }
    else
    {
      v37 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v19 + 14, v19 + 22);
      v25 = 0;
    }
    v26 = v34;
    *v34 = v25;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v16, v18, "EnhancedEmergency: finished sending mediaSet for media upload request: %s, error: %@", (uint8_t *)v19, 0x16u);
    v27 = sub_1001085C0(&qword_1002D7880);
    swift_arrayDestroy(v26, 1, v27);
    swift_slowDealloc(v26, -1, -1);
    v28 = v35;
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    a3 = v36;
  }
  else
  {

    swift_errorRelease(a2);
    swift_errorRelease(a2);

  }
  v29 = (uint64_t *)(a3 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaSet);
  swift_beginAccess(a3 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaSet, v38, 1, 0);
  v30 = *v29;
  *v29 = (uint64_t)&_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease(v30);
}

void sub_100141840()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  v2 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
  if (v2)
  {
    v3 = (void *)qword_1002D7250;
    v17 = v2;
    if (v3 != (void *)-1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v4 = sub_100109570();
    sub_10011ADC0(v4, (uint64_t)&unk_1002E2CC8);
    v5 = sub_10011ADDC();
    if (sub_100109560(v5))
    {
      v6 = (_WORD *)sub_1001094C8(2);
      sub_1001365A0(v6);
      sub_100123A2C((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: emergency coordinator gets notified requestToRemoveMediaRequestViewController");
      sub_100109440(v1);
    }

    v9 = (void *)sub_100136790(OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
    if (v9)
    {
      sub_10014381C(v9, "removeMediaRequestViewController:", v10, v11, v12, v13, v14, v15, v16, (uint64_t)v17);
      sub_100136124();
    }
    sub_10013C0CC();
    sub_10013633C(v17);
  }
  else
  {
    sub_10011AEDC();
  }
}

void sub_100141920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  void *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  os_log_type_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_100136544();
  a21 = v24;
  a22 = v25;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v26 = sub_100109570();
  sub_100108664(v26, (uint64_t)&unk_1002E2CC8);
  v27 = sub_1001437A0();
  sub_10014385C();
  v28 = sub_10011ADDC();
  if (sub_10011AFD8(v28))
  {
    v29 = sub_1001094C8(22);
    v30 = (_QWORD *)sub_1001094C8(16);
    *(_DWORD *)v29 = 138412546;
    a9 = v22;
    v31 = v22;
    sub_100143A94((uint64_t)&a9, (uint64_t)&a10, v29 + 4);
    *v30 = v22;

    *(_WORD *)(v29 + 12) = 2112;
    v32 = *(void **)&v31[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v32)
    {
      a9 = *(void **)&v31[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
      v33 = v32;
      v34 = v29 + 14;
      v35 = v29 + 22;
    }
    else
    {
      v35 = v29 + 22;
      a9 = 0;
      v34 = v29 + 14;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&a9, &a10, v34, v35);
    v30[1] = v32;

    sub_1001364DC((void *)&_mh_execute_header, v23, v28, "EnhancedEmergency: enhancedEmergencyCoordinator(%@) gets notified there is a new request coming in from eedRequestHelper(%@)", (uint8_t *)v29);
    v36 = sub_1001085C0(&qword_1002D7880);
    sub_100143714((uint64_t)v30, v37, v36);
    sub_100109440((uint64_t)v30);
    sub_100109440(v29);

  }
  else
  {

  }
  sub_10013C39C();
  sub_100143530();
}

#error "100141B08: call analysis failed (funcsize=13)"

void sub_100141B24(void *a1)
{
  NSObject *v1;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v3 = sub_100109570();
  sub_100108664(v3, (uint64_t)&unk_1002E2CC8);
  v4 = sub_1001364A0();
  sub_100143B7C();
  sub_1001437A0();
  v5 = sub_100143C14();
  v6 = v1;
  Logger.logObject.getter(v5, v7);
  v8 = sub_10011ADDC();
  if (sub_10011AFD8((os_log_type_t)v8))
  {
    HIDWORD(v40) = v8;
    v9 = sub_1001094C8(32);
    v10 = (_QWORD *)sub_1001094C8(24);
    *(_DWORD *)v9 = 138412802;
    v11 = a1;
    v19 = sub_100143BA8((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18, v38, v40, (char)a1);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v19, v20, v21, v22);
    *v10 = a1;

    *(_WORD *)(v9 + 12) = 2112;
    v23 = *(void **)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v23)
    {
      v42 = *(id *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
      v24 = v23;
      v32 = sub_100143BA8((uint64_t)v24, v25, v26, v27, v28, v29, v30, v31, v39, v41, (char)v42);
    }
    else
    {
      v35 = v9 + 22;
      v42 = 0;
      v32 = (char *)&v42;
      v33 = &v43;
      v34 = v9 + 14;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v32, v33, v34, v35);
    v10[1] = v23;

    *(_WORD *)(v9 + 22) = 2112;
    v42 = v5;
    v36 = v5;
    sub_10014391C((uint64_t)&v42, (uint64_t)&v43, v9 + 24);
    v10[2] = v5;

    sub_100143B10((void *)&_mh_execute_header, v6, BYTE4(v41), "EnhancedEmergency: enhancedEmergencyCoordinator %@ gets notified form eedRequestHelper %@ that mitigations needs to be applied %@", (uint8_t *)v9);
    v37 = sub_1001085C0(&qword_1002D7880);
    swift_arrayDestroy(v10, 3, v37);
    sub_100109440((uint64_t)v10);
    sub_100109440(v9);

  }
  else
  {

  }
  sub_10013E514();
}

id sub_100141DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, NSURL *a5@<X8>)
{
  void *v5;
  void *v6;
  void *v11;
  void *v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;

  v6 = v5;
  URL._bridgeToObjectiveC()(a5);
  v12 = v11;
  if (a2)
  {
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v13 = 0;
  }
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  v15 = objc_msgSend(v6, "initWithURL:assetIdentifier:sandboxExtension:mediaType:", v12, v13, v14, a4);

  v16 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
  return v15;
}

unint64_t sub_100141EA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8F78;
  if (!qword_1002D8F78)
  {
    v1 = sub_10010BBE8(255, &qword_1002D8F70, CLEEDMediaItem_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1002D8F78);
  }
  return result;
}

uint64_t sub_100141EF0()
{
  uint64_t v0;

  sub_100143A28();

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100141F18(uint64_t a1)
{
  uint64_t v1;

  return sub_10014129C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100141F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100141F30(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100141F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0(&qword_1002D8F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100141F80(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_100141F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, Swift::Int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  Swift::Int *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int *v26;
  void *v27;
  void *v28;
  Swift::Int *v29;
  Swift::Int *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  Swift::Int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  id v41;
  char v42;
  uint64_t v43;
  char v44;
  id v45;
  char v46;
  void *v47;
  id v48;
  uint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v51;
  id v52;

  sub_100136544();
  a21 = v24;
  a22 = v25;
  v26 = v22;
  v28 = v27;
  v30 = v29;
  v31 = *v22;
  if ((*v22 & 0xC000000000000001) == 0)
  {
    v36 = *(_QWORD *)(v31 + 40);
    swift_bridgeObjectRetain(v31);
    v37 = NSObject._rawHashValue(seed:)(v36);
    v38 = -1 << *(_BYTE *)(v31 + 32);
    v39 = v37 & ~v38;
    sub_1001439CC();
    if ((v40 & 1) != 0)
    {
      type metadata accessor for PerRequestMetricData();
      v41 = sub_1001439C0();
      v42 = sub_100143A38((uint64_t)v41);

      if ((v42 & 1) != 0)
      {
LABEL_12:

        sub_100109898();
        v47 = *(void **)(*(_QWORD *)(*v26 + 48) + 8 * v39);
        *v30 = (Swift::Int)v47;
        v48 = v47;
        goto LABEL_21;
      }
      v43 = ~v38;
      while (1)
      {
        v39 = (v39 + 1) & v43;
        sub_1001439CC();
        if ((v44 & 1) == 0)
          break;
        v45 = sub_1001439C0();
        v46 = sub_100143A38((uint64_t)v45);

        if ((v46 & 1) != 0)
          goto LABEL_12;
      }
    }
    sub_100109898();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v26);
    a10 = *v26;
    *v26 = 0x8000000000000000;
    v33 = v28;
    sub_100142ADC((uint64_t)v33, v39, isUniquelyReferenced_nonNull_native);
    v51 = *v26;
    *v26 = a10;
    goto LABEL_20;
  }
  if (v31 < 0)
    v32 = *v22;
  else
    v32 = v31 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v22);
  v33 = v28;
  v34 = __CocoaSet.member(for:)();

  if (v34)
  {
    sub_100109898();

    a9 = v34;
    v35 = type metadata accessor for PerRequestMetricData();
    swift_unknownObjectRetain(v34);
    swift_dynamicCast(&a10, &a9, (char *)&type metadata for Swift.AnyObject + 8, v35, 7);
    *v30 = a10;
    sub_100136124();
LABEL_21:
    sub_100143530();
    return;
  }
  v49 = __CocoaSet.count.getter(v32);
  if (!__OFADD__(v49, 1))
  {
    a10 = sub_100142458(v32, v49 + 1);
    if (*(_QWORD *)(a10 + 24) <= *(_QWORD *)(a10 + 16))
    {
      v52 = v33;
      sub_100142838();
      v34 = a10;
    }
    else
    {
      sub_100143B60();
    }
    sub_100142A64((uint64_t)v33, v34);
    v51 = *v26;
    *v26 = v34;
LABEL_20:
    swift_bridgeObjectRelease(v51);
    *v30 = (Swift::Int)v33;
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_1001421B8(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  void *v20;
  id v21;
  uint64_t result;
  Swift::Int v23;
  uint64_t v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  id v28;
  uint64_t v29;
  Swift::Int v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v29 = v9;
      v10 = sub_10010BBE8(0, &qword_1002D8F70, CLEEDMediaItem_ptr);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v30;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_100142640(v7, result + 1);
    v30 = v23;
    if (*(_QWORD *)(v23 + 24) <= *(_QWORD *)(v23 + 16))
    {
      v28 = v8;
      sub_100142838();
      v24 = v30;
    }
    else
    {
      v24 = v23;
      v25 = v8;
    }
    sub_100142A64((uint64_t)v8, v24);
    v27 = *v3;
    *v3 = v24;
  }
  else
  {
    v11 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v12 = NSObject._rawHashValue(seed:)(v11);
    v13 = -1 << *(_BYTE *)(v6 + 32);
    v14 = v12 & ~v13;
    if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      sub_10010BBE8(0, &qword_1002D8F70, CLEEDMediaItem_ptr);
      v15 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v14);
      v16 = static NSObject.== infix(_:_:)(v15, a2);

      if ((v16 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v20 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v14);
        *a1 = (Swift::Int)v20;
        v21 = v20;
        return 0;
      }
      v17 = ~v13;
      while (1)
      {
        v14 = (v14 + 1) & v17;
        if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v14);
        v19 = static NSObject.== infix(_:_:)(v18, a2);

        if ((v19 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v30 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_100142C70((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    v27 = *v3;
    *v3 = v30;
  }
  swift_bridgeObjectRelease(v27);
  *a1 = (Swift::Int)v8;
  return 1;
}

Swift::Int sub_100142458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (!a2)
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  sub_1001085C0(&qword_1002D8F98);
  v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
  v22 = v4;
  v5 = __CocoaSet.makeIterator()(a1);
  v6 = __CocoaSet.Iterator.next()(v5);
  if (!v6)
  {
LABEL_16:
    swift_release(v5);
    return v4;
  }
  v7 = v6;
  v8 = type metadata accessor for PerRequestMetricData();
  while (1)
  {
    v20 = v7;
    swift_dynamicCast(&v21, &v20, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
    v4 = v22;
    if (*(_QWORD *)(v22 + 24) <= *(_QWORD *)(v22 + 16))
    {
      sub_100142838();
      v4 = v22;
    }
    v9 = v21;
    result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
    v11 = v4 + 56;
    v12 = -1 << *(_BYTE *)(v4 + 32);
    v13 = result & ~v12;
    v14 = v13 >> 6;
    if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) == 0)
      break;
    v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
    ++*(_QWORD *)(v4 + 16);
    v7 = __CocoaSet.Iterator.next()(result);
    if (!v7)
      goto LABEL_16;
  }
  v16 = 0;
  v17 = (unint64_t)(63 - v12) >> 6;
  while (++v14 != v17 || (v16 & 1) == 0)
  {
    v18 = v14 == v17;
    if (v14 == v17)
      v14 = 0;
    v16 |= v18;
    v19 = *(_QWORD *)(v11 + 8 * v14);
    if (v19 != -1)
    {
      v15 = __clz(__rbit64(~v19)) + (v14 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

Swift::Int sub_100142640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (!a2)
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  sub_1001085C0(&qword_1002D8F88);
  v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
  v22 = v4;
  v5 = __CocoaSet.makeIterator()(a1);
  v6 = __CocoaSet.Iterator.next()(v5);
  if (!v6)
  {
LABEL_16:
    swift_release();
    return v4;
  }
  v7 = v6;
  v8 = sub_10010BBE8(0, &qword_1002D8F70, CLEEDMediaItem_ptr);
  while (1)
  {
    v20 = v7;
    swift_dynamicCast(&v21, &v20, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
    v4 = v22;
    if (*(_QWORD *)(v22 + 24) <= *(_QWORD *)(v22 + 16))
    {
      sub_100142838();
      v4 = v22;
    }
    v9 = v21;
    result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
    v11 = v4 + 56;
    v12 = -1 << *(_BYTE *)(v4 + 32);
    v13 = result & ~v12;
    v14 = v13 >> 6;
    if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) == 0)
      break;
    v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
    ++*(_QWORD *)(v4 + 16);
    v7 = __CocoaSet.Iterator.next()(result);
    if (!v7)
      goto LABEL_16;
  }
  v16 = 0;
  v17 = (unint64_t)(63 - v12) >> 6;
  while (++v14 != v17 || (v16 & 1) == 0)
  {
    v18 = v14 == v17;
    if (v14 == v17)
      v14 = 0;
    v16 |= v18;
    v19 = *(_QWORD *)(v11 + 8 * v14);
    if (v19 != -1)
    {
      v15 = __clz(__rbit64(~v19)) + (v14 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

void sub_100142838()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  sub_100136544();
  v1 = v0;
  v2 = *v0;
  sub_100143988(v3, v4);
  v5 = static _SetStorage.resize(original:capacity:move:)(v2, v0, 1);
  v6 = v5;
  if (*(_QWORD *)(v2 + 16))
  {
    v29 = v0;
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v8 = (_QWORD *)(v2 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v2 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v2);
    v13 = 0;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v14 | (v13 << 6); ; i = v20 + (v13 << 6))
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      v22 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v6 + 40)) & ~(-1 << *(_BYTE *)(v6 + 32));
      if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) == 0)
      {
        sub_100143B44();
        while (++v25 != v26 || (v24 & 1) == 0)
        {
          v27 = v25 == v26;
          if (v25 == v26)
            v25 = 0;
          v24 |= v27;
          if (*(_QWORD *)(v12 + 8 * v25) != -1)
          {
            sub_100143B18();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_100143B84();
LABEL_30:
      *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v23) = v21;
      ++*(_QWORD *)(v6 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_38;
      if (v16 >= v11)
        goto LABEL_32;
      ++v13;
      if (!v8[v16])
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v11)
          goto LABEL_32;
        if (!v8[v13])
        {
          v13 = v16 + 2;
          if (v16 + 2 >= v11)
            goto LABEL_32;
          if (!v8[v13])
          {
            v17 = v16 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              sub_1001436CC();
              v1 = v29;
              sub_100143AEC();
              if (v28 > 63)
                sub_100141F80(0, (unint64_t)(v28 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v8 = -1 << v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            if (!v8[v17])
            {
              while (1)
              {
                v13 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v13 >= v11)
                  goto LABEL_32;
                ++v17;
                if (v8[v13])
                  goto LABEL_20;
              }
            }
            v13 = v17;
          }
        }
      }
LABEL_20:
      sub_100143968();
      v10 = v19 & v18;
    }
  }
  sub_1001436CC();
  *v1 = v6;
  sub_100143530();
}

void sub_100142A64(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t v5;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  v5 = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v5;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v5) = a1;
  ++*(_QWORD *)(a2 + 16);
  sub_100109830();
}

void sub_100142ADC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_100142838();
  }
  else
  {
    if (v8 > v7)
    {
      sub_100142E14();
      goto LABEL_14;
    }
    sub_100142F8C();
  }
  v9 = *v3;
  v10 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = type metadata accessor for PerRequestMetricData();
    v13 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v14 = static NSObject.== infix(_:_:)(v13, a1);

    if ((v14 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v12);
      __break(1u);
    }
    else
    {
      v15 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v15;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v16 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v18 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * a2) = a1;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v21;
}

void sub_100142C70(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_100142838();
  }
  else
  {
    if (v8 > v7)
    {
      sub_100142E14();
      goto LABEL_14;
    }
    sub_100142F8C();
  }
  v9 = *v3;
  v10 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = sub_10010BBE8(0, &qword_1002D8F70, CLEEDMediaItem_ptr);
    v13 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v14 = static NSObject.== infix(_:_:)(v13, a1);

    if ((v14 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v12);
      __break(1u);
    }
    else
    {
      v15 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v15;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v16 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v18 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * a2) = a1;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v21;
}

void sub_100142E14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;

  sub_100143A04();
  v1 = v0;
  sub_1001085C0(v2);
  v3 = (_QWORD *)*v0;
  v4 = static _SetStorage.copy(original:)(*v0);
  if (!v3[2])
  {
LABEL_28:
    sub_1001436CC();
    *v1 = v4;
    sub_100143558();
    return;
  }
  sub_100143AEC();
  v6 = v3 + 7;
  v8 = (unint64_t)(v7 + 63) >> 6;
  if ((_QWORD *)v4 != v3 || v5 >= &v3[v8 + 7])
    memmove(v5, v3 + 7, 8 * v8);
  v10 = 0;
  *(_QWORD *)(v4 + 16) = v3[2];
  sub_100143AEC();
  v12 = v3[7];
  v13 = -1;
  if (v11 < 64)
    v13 = ~(-1 << v11);
  v14 = v13 & v12;
  v15 = (unint64_t)(v11 + 63) >> 6;
  if ((v13 & v12) == 0)
    goto LABEL_12;
LABEL_11:
  v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v16 | (v10 << 6); ; i = v22 + (v10 << 6))
  {
    v23 = *(void **)(v3[6] + 8 * i);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = v23;
    v24 = v23;
    if (v14)
      goto LABEL_11;
LABEL_12:
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v15)
      goto LABEL_28;
    ++v10;
    if (!v6[v18])
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v15)
        goto LABEL_28;
      if (!v6[v10])
      {
        v10 = v18 + 2;
        if (v18 + 2 >= v15)
          goto LABEL_28;
        if (!v6[v10])
          break;
      }
    }
LABEL_25:
    sub_100143968();
    v14 = v21 & v20;
  }
  v19 = v18 + 3;
  if (v19 >= v15)
    goto LABEL_28;
  if (v6[v19])
  {
    v10 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v15)
      goto LABEL_28;
    ++v19;
    if (v6[v10])
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100142F8C()
{
  uint64_t *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t *v28;

  sub_100136544();
  v1 = v0;
  v2 = (_QWORD *)*v0;
  sub_100143988(v3, v4);
  v5 = static _SetStorage.resize(original:capacity:move:)(v2, v0, 0);
  if (!v2[2])
  {
    sub_1001438D8();
LABEL_34:
    *v1 = v5;
    sub_100143530();
    return;
  }
  v28 = v0;
  sub_100143AEC();
  v7 = v2 + 7;
  if (v6 < 64)
    v8 = ~(-1 << v6);
  else
    v8 = -1;
  v9 = v8 & v2[7];
  v10 = (unint64_t)(v6 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v2);
  v12 = 0;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = v19 + (v12 << 6))
  {
    v20 = *(_QWORD *)(v5 + 40);
    v21 = *(id *)(v2[6] + 8 * i);
    v22 = NSObject._rawHashValue(seed:)(v20) & ~(-1 << *(_BYTE *)(v5 + 32));
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) == 0)
    {
      sub_100143B44();
      while (++v25 != v26 || (v24 & 1) == 0)
      {
        v27 = v25 == v26;
        if (v25 == v26)
          v25 = 0;
        v24 |= v27;
        if (*(_QWORD *)(v11 + 8 * v25) != -1)
        {
          sub_100143B18();
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    sub_100143B84();
LABEL_30:
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v23) = v21;
    ++*(_QWORD *)(v5 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_36;
    if (v15 >= v10)
      goto LABEL_32;
    ++v12;
    if (!v7[v15])
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_32;
      if (!v7[v12])
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_32;
        if (!v7[v12])
          break;
      }
    }
LABEL_20:
    sub_100143968();
    v9 = v18 & v17;
  }
  v16 = v15 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    swift_release_n(v2, 2);
    v1 = v28;
    goto LABEL_34;
  }
  if (v7[v16])
  {
    v12 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v12 >= v10)
      goto LABEL_32;
    ++v16;
    if (v7[v12])
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_100143198()
{
  uint64_t v0;

  sub_100143A28();
  swift_errorRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001431C8()
{
  uint64_t v0;

  return sub_1001414BC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1001431D4()
{
  uint64_t v0;

  sub_10013E698(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1001431DC(void *a1, uint64_t a2)
{
  sub_10013E220(a1, a2);
}

void sub_1001431E4()
{
  sub_10013DDD0();
}

void sub_10014321C()
{
  uint64_t v0;

  sub_10013E0AC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState, (void (*)(void *))sub_100137594);
}

void sub_10014324C()
{
  sub_10013DDD0();
}

void sub_100143284()
{
  uint64_t v0;

  sub_10013E0AC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState, (void (*)(void *))sub_100137524);
}

double sub_1001432B4(uint64_t a1, _UNKNOWN **a2)
{
  uint64_t v2;

  return sub_10013C4A8(a1, a2, *(void **)(v2 + 16));
}

void sub_1001432BC()
{
  uint64_t v0;

  sub_10013D428(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1001432C4()
{
  uint64_t v0;

  sub_10013CD20(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1001432CC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10013CF60(a1, a2, *(void **)(v2 + 16));
}

void sub_1001432D4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10013D668(a1, a2, *(void **)(v2 + 16));
}

void sub_1001432DC()
{
  sub_10013C39C();
  sub_100109438();
}

uint64_t sub_1001432F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100143324(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10013B36C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), CLEEDUploadRequest_ptr, "EnhancedEmergency: EED returned error while updating state: %s for media upload request: %@, error: %@", sub_100137594, &OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest, "EnhancedEmergency: finished updating state: %s for media upload request: %@, error: %@");
  sub_100059A24();
}

void sub_100143370(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10013B36C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), CLEEDStreamingRequest_ptr, "EnhancedEmergency: EED returned error while updating state: %s for video streaming request: %@, error: %@", sub_100137524, &OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest, "EnhancedEmergency: finished updating state: %s for video streaming request: %@, error: %@");
  sub_100059A24();
}

uint64_t sub_1001433BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001433E0(char a1)
{
  uint64_t v1;

  sub_10013A22C(a1, v1);
}

uint64_t sub_1001433E8()
{
  uint64_t v0;

  sub_100143A28();
  return swift_deallocObject(v0, 24, 7);
}

void sub_100143408(char a1)
{
  uint64_t v1;

  sub_1001391E8(a1, *(void **)(v1 + 16));
}

void sub_100143410(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_10010AD84(a2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for [A], v3), a1);
  }
  sub_100109438();
}

void sub_100143518(id a1)
{

}

void sub_10014354C(id a1)
{

}

void sub_10014356C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

id sub_100143594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  return objc_msgSend(v6, *(SEL *)(v8 + 1328), v5, v7, a5, 0);
}

void sub_1001435AC(id a1)
{

}

uint64_t sub_1001435D0()
{
  return Logger.logObject.getter();
}

uint64_t sub_1001435DC(uint64_t a1)
{
  return swift_unknownObjectRelease(a1);
}

void sub_1001435EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
  type metadata accessor for CLEEDRequestState(0);
}

uint64_t sub_1001435F8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_100143604()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 240) + 8))(*(_QWORD *)(v0 - 208), *(_QWORD *)(v0 - 232));
}

void sub_10014361C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1001464EC(v0, v1);
}

void sub_10014362C()
{
  type metadata accessor for CLEEDRequestState(0);
}

uint64_t sub_100143634()
{
  uint64_t (*v0)(_QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(*(_QWORD *)(v2 - 288), v1);
}

uint64_t sub_100143644(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_10014364C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 - 248))(*(_QWORD *)(v0 - 192), *(_QWORD *)(v0 - 176));
}

uint64_t sub_100143660(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return v1 - 88;
}

uint64_t sub_100143674()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(v0, *(_QWORD *)(v2 - 176));
}

_WORD *sub_100143680(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_10014368C(uint64_t a1)
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

id sub_100143698()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 3968));
}

void sub_1001436A4(id a1)
{

}

uint64_t sub_1001436AC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_100121E04(a1, a2, (uint64_t *)(v2 - 136));
}

uint64_t sub_1001436B4()
{
  uint64_t v0;

  return String.init<A>(reflecting:)(v0 - 88);
}

uint64_t sub_1001436BC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1001436C4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1001436CC()
{
  uint64_t v0;

  return swift_release(v0);
}

BOOL sub_100143704(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100143714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_arrayDestroy(a1, 2, a3);
}

BOOL sub_10014371C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

BOOL sub_10014372C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id sub_10014373C()
{
  void *v0;

  return v0;
}

uint64_t sub_100143748()
{
  return type metadata accessor for DispatchQoS(0);
}

uint64_t sub_100143770(uint64_t a1)
{
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_10014378C()
{
  uint64_t v0;

  return v0;
}

id sub_1001437A0()
{
  void *v0;

  return v0;
}

uint64_t sub_1001437A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 - 216))(v0, v1, *(_QWORD *)(v2 - 232));
}

uint64_t sub_1001437D4()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

uint64_t sub_1001437DC()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

id sub_1001437E4(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  return objc_msgSend(v4, a2, v5, v3, v2);
}

id sub_1001437F8()
{
  return sub_100137B38();
}

void sub_100143800()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t sub_100143808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD, uint64_t, uint64_t);

  return v3(*(_QWORD *)(a1 - 256), v2, v1);
}

id sub_10014381C(id a1, SEL a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return objc_msgSend(a1, a2, a10);
}

id sub_100143824()
{
  void *v0;

  return v0;
}

uint64_t sub_10014382C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

uint64_t sub_100143840()
{
  return 0;
}

uint64_t sub_10014385C()
{
  return Logger.logObject.getter();
}

uint64_t sub_100143868()
{
  return UUID.uuidString.getter();
}

id sub_100143870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(id *)(v1 + a1);
}

id sub_100143878()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2976), v1);
}

uint64_t sub_100143888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_100146414(a1, v1, v2);
}

__n128 sub_100143898(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  return *(__n128 *)(v1 - 352);
}

void sub_1001438A8(uint64_t a1)
{
  uint64_t *v1;

  sub_10011ABE4(a1, v1);
}

void sub_1001438B0()
{
  uint64_t v0;

}

void sub_1001438B8()
{
  uint64_t v0;

}

uint64_t sub_1001438D0()
{
  uint64_t v0;

  return swift_errorRelease(v0);
}

uint64_t sub_1001438D8()
{
  uint64_t v0;

  return swift_release(v0);
}

void sub_1001438F0()
{
  uint64_t v0;

}

uint64_t sub_100143904()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t sub_100143914@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_10014391C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

uint64_t sub_100143924()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_100121E04(v0, v1, (uint64_t *)(v2 - 160));
}

uint64_t sub_100143940(uint64_t a1)
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

char *sub_100143948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

uint64_t sub_100143958()
{
  return 0;
}

id sub_100143978()
{
  uint64_t v0;

  return *(id *)(v0 - 144);
}

uint64_t sub_100143988(uint64_t a1, uint64_t *a2)
{
  return sub_1001085C0(a2);
}

void sub_100143998()
{
  uint64_t v0;

}

BOOL sub_1001439A0(os_log_type_t a1)
{
  uint64_t v1;

  return os_log_type_enabled(*(os_log_t *)(v1 - 144), a1);
}

id sub_1001439B0@<X0>(void *a1@<X8>)
{
  return a1;
}

uint64_t sub_1001439B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

id sub_1001439C0()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v0 + 48) + 8 * v1);
}

uint64_t sub_1001439E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_1001439EC(uint64_t a1)
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

void *sub_1001439F4()
{
  uint64_t v0;

  return _Block_copy((const void *)(v0 - 128));
}

uint64_t sub_1001439FC()
{
  return UUID.uuidString.getter();
}

uint64_t sub_100143A18()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

void sub_100143A20(unint64_t *a1)
{
  uint64_t *v1;

  sub_100143410(a1, v1);
}

void sub_100143A28()
{
  uint64_t v0;

}

uint64_t sub_100143A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

uint64_t sub_100143A38(uint64_t a1)
{
  uint64_t v1;

  return static NSObject.== infix(_:_:)(a1, v1);
}

uint64_t sub_100143A44()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_100143A4C()
{
  uint64_t *v0;

  return sub_1001085C0(v0);
}

NSString sub_100143A54()
{
  return String._bridgeToObjectiveC()();
}

id sub_100143A60(uint64_t a1, uint64_t a2)
{
  void *v2;

  sub_100108664(a1, a2);
  return v2;
}

uint64_t sub_100143A74()
{
  uint64_t v0;

  return swift_errorRetain(v0);
}

uint64_t sub_100143A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100141F38(a1, *(_QWORD *)(a2 - 256));
}

void sub_100143A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10013AD90(4, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_100143A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

uint64_t sub_100143A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

id sub_100143ABC(id a1, SEL a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return objc_msgSend(a1, a2, a9);
}

uint64_t sub_100143AC4()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t sub_100143AD8()
{
  uint64_t v0;

  return v0 - 128;
}

void sub_100143AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10013AD90(1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_100143B04()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 - 424));
}

void sub_100143B10(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x20u);
}

id sub_100143B2C()
{
  void *v0;

  return v0;
}

uint64_t sub_100143B58()
{
  return static OS_dispatch_queue.main.getter();
}

id sub_100143B60()
{
  void *v0;

  return v0;
}

void sub_100143B68()
{
  sub_10012F2F8();
}

id sub_100143B70(void *a1)
{
  SEL *v1;

  return objc_msgSend(a1, *v1);
}

id sub_100143B7C()
{
  void *v0;

  return v0;
}

id sub_100143B98@<X0>(void *a1@<X8>)
{
  return a1;
}

id sub_100143BA0(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

char *sub_100143BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

uint64_t sub_100143BBC()
{
  uint64_t v0;

  return String.init<A>(reflecting:)(v0);
}

uint64_t sub_100143BC8()
{
  uint64_t v0;
  uint64_t v1;

  sub_100108600(v0, 0, 1, v1);
  return v0;
}

uint64_t sub_100143BEC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_100143BF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

id sub_100143C14()
{
  void *v0;

  return v0;
}

uint64_t sub_100143C1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, _QWORD);
  uint64_t v3;

  return v2(a1, v1, *(_QWORD *)(v3 - 224));
}

void sub_100143C28(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR____TtC13InCallService20CarPlaySceneDelegate_carPlayWindow);
}

void sub_100143C34(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR____TtC13InCallService20CarPlaySceneDelegate_hardwareControlsBroadcaster);
}

void sub_100143C40()
{
  sub_100143C28(0);
  sub_100143C34(0);
}

void sub_100143CA8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v3 = objc_opt_self(UIWindowScene);
  v4 = swift_dynamicCastObjCClassUnconditional(a1, v3, 0, 0, 0);
  v8 = a1;
  v5 = sub_100143DB0(v4);
  sub_100143C28((uint64_t)v5);
  sub_100143C34((uint64_t)objc_msgSend(objc_allocWithZone((Class)TUHardwareControlsBroadcaster), "init"));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService20CarPlaySceneDelegate_carPlayWindow);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v7, "setHidden:", 0);

  }
}

id sub_100143DB0(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIWindow), "initWithWindowScene:", a1);
  v2 = objc_msgSend(objc_allocWithZone((Class)PHCarPlayInCallViewController), "init");
  objc_msgSend(v1, "setRootViewController:", v2);

  return v1;
}

id sub_100143E24()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService20CarPlaySceneDelegate_carPlayWindow] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService20CarPlaySceneDelegate_hardwareControlsBroadcaster] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlaySceneDelegate();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_100143E8C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlaySceneDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CarPlaySceneDelegate()
{
  return objc_opt_self(_TtC13InCallService20CarPlaySceneDelegate);
}

uint64_t sub_100143F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = 1701736302;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x66664F6F65646976;
      break;
    case 2:
      result = 0xD000000000000016;
      break;
    case 3:
      result = 0xD000000000000015;
      break;
    case 4:
      result = 0xD000000000000013;
      break;
    default:
      result = sub_1001453D4((uint64_t)&type metadata for EnhancedEmergencyRTTState, 0xE400000000000000, a3, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

#error "100143FEC: call analysis failed (funcsize=20)"

uint64_t sub_100144068()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState);
}

void sub_10014409C(char a1)
{
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v4 = sub_100109570();
  sub_10011ADC0(v4, (uint64_t)&unk_1002E2CC8);
  v5 = sub_10011ADDC();
  if (sub_10011AF5C(v5))
  {
    v6 = (uint8_t *)sub_1001094C8(12);
    v7 = sub_1001094C8(32);
    *(_DWORD *)v6 = 136315138;
    v13 = v7;
    if ((a1 & 1) != 0)
      v8 = 1702195828;
    else
      v8 = 0x65736C6166;
    if ((a1 & 1) != 0)
      v9 = 0xE400000000000000;
    else
      v9 = 0xE500000000000000;
    v12 = sub_100121E04(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v6 + 4, v6 + 12);
    sub_10010974C();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "EnhancedEmergency: updating for RTT enabled: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    sub_100109440(v7);
    sub_100109440((uint64_t)v6);
  }

  if ((a1 & 1) != 0)
  {
    if ((sub_100137B38() & 1) != 0)
    {
      v10 = v1;
      v11 = 2;
    }
    else
    {
      v10 = v1;
      v11 = 1;
    }
    -[NSObject transitionToRTTState:](v10, "transitionToRTTState:", v11);
  }
  else
  {
    -[NSObject transitionToRTTState:](v1, "transitionToRTTState:", 0);
  }
  sub_100143530();
}

void sub_10014426C(uint64_t a1)
{
  void *v1;
  os_log_type_t v2;
  uint64_t v4;
  NSObject *v5;
  char *v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *Strong;
  id v39;
  unsigned int v40;
  uint64_t v41;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v4 = sub_100109570();
  v5 = sub_100108664(v4, (uint64_t)&unk_1002E2CC8);
  v6 = v1;
  v7 = v5;
  Logger.logObject.getter(v6, v8);
  v9 = sub_10011ADDC();
  if (sub_10011AF5C(v9))
  {
    v10 = sub_1001094C8(22);
    v41 = sub_1001094C8(64);
    *(_DWORD *)v10 = 136315394;
    v13 = sub_100143F1C(*(_QWORD *)&v6[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState], v11, v12);
    v16 = sub_1001453E8(v13, v14, v15);
    sub_1001453C4(v16, v17, v18, v10 + 12, v19, v20, v21, v22, v16);

    sub_10010974C();
    *(_WORD *)(v10 + 12) = 2080;
    v25 = sub_100143F1C(a1, v23, v24);
    v28 = sub_1001453E8(v25, v26, v27);
    sub_1001453C4(v28, v29, v30, v10 + 22, v31, v32, v33, v34, v28);
    sub_10010974C();
    _os_log_impl((void *)&_mh_execute_header, v7, v2, "EnhancedEmergency: transitioning from RTT state %s to %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    sub_100109440(v41);
    sub_100109440(v10);

  }
  else
  {

  }
  v36 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState;
  v37 = *(_QWORD *)&v6[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState];
  if (v37 != a1)
  {
    if (a1)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate]);
      if (!Strong)
        goto LABEL_19;
      v39 = objc_msgSend(Strong, "getCurrentCall");
      sub_100136124();
      if (!v39)
        goto LABEL_19;
      v40 = objc_msgSend(v39, "isRTT");

      if (!v40)
        goto LABEL_19;
      v37 = *(_QWORD *)&v6[v36];
    }
    *(_QWORD *)&v6[v36] = a1;
    if (v37 == 4)
      sub_1001444E8();
    switch(a1)
    {
      case 0:
      case 1:
      case 3:
        sub_100144C80();
        break;
      case 2:
        sub_1001446FC();
        break;
      case 4:
        sub_1001448E8();
        break;
      default:
        sub_1001453D4((uint64_t)&type metadata for EnhancedEmergencyRTTState, v35);
        __break(1u);
        JUMPOUT(0x1001444D4);
    }
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0);
  }
LABEL_19:
  sub_100143530();
}

void sub_1001444E8()
{
  char *v0;
  void *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  os_log_type_t v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;

  v1 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v1)
  {
    v2 = v0;
    v3 = (void *)qword_1002D7250;
    v44 = v1;
    if (v3 != (void *)-1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v4 = sub_100109570();
    v5 = sub_10011ADC0(v4, (uint64_t)&unk_1002E2CC8);
    v6 = static os_log_type_t.default.getter();
    v7 = v6;
    if (os_log_type_enabled(v5, v6))
    {
      v8 = (uint8_t *)sub_10010E3FC();
      *(_WORD *)v8 = 0;
      sub_10011AE18((void *)&_mh_execute_header, v5, (os_log_type_t)v7, "EnhancedEmergency: leaving pip state, stopping pip and restoring UI", v8);
      sub_100109440((uint64_t)v8);
    }

    v9 = objc_msgSend(v2, "isShownAboveCoverSheet");
    if ((_DWORD)v9)
    {
      Logger.logObject.getter(v9, v10);
      v11 = sub_10011ADDC();
      if (sub_100109560(v11))
      {
        v12 = (_WORD *)sub_10010E3FC();
        sub_1001365A0(v12);
        sub_100123A2C((void *)&_mh_execute_header, v13, v14, "EnhancedEmergency: ICS shown above cover sheet, resuming video streaming");
        sub_100109440(v7);
      }

      sub_10012F540(0, 0);
    }
    v15 = *(void **)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_pipCoordinator];
    if (v15)
    {
      v16 = v15;
      sub_100123224();

    }
    sub_100132FFC();
    v17 = *(void **)&v44[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
    if (v17)
      objc_msgSend(v17, "setAccessibilityActivateBlock:", 0);
    sub_10013750C(0);
    v18 = (void *)sub_1001437D4();
    if (v18)
    {
      sub_10014381C(v18, "addWebRTCViewController:", v19, v20, v21, v22, v23, v24, v42, (uint64_t)v44);
      sub_100136124();
    }
    v25 = (void *)sub_1001437D4();
    if (v25)
    {
      objc_msgSend(v25, "hideRTTConversationIfNeeded");
      sub_100136124();
    }
    v26 = (void *)sub_1001437D4();
    if (v26)
    {
      v33 = v26;
      v34 = sub_10014381C(v26, "insertWebViewUnderButtonControls:", v27, v28, v29, v30, v31, v32, v42, (uint64_t)v44);
      sub_100109874(v34, v35, v36, v37, v38, v39, v40, v41, v43, v45);
      swift_unknownObjectRelease(v33);
    }
    else
    {
      sub_1001362BC(v44);
    }
  }
  else
  {
    sub_10013621C();
  }
}

void sub_1001446FC()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  id v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;

  v2 = v0;
  v3 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController;
  v4 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController);
  if (!v4)
    goto LABEL_4;
  v5 = objc_msgSend(v4, "view");
  if (v5)
  {
    v6 = v5;
    v22 = objc_msgSend(v5, "superview");

    v7 = v22;
    if (v22)
    {
LABEL_21:
      sub_1001362BC(v7);
      return;
    }
LABEL_4:
    v8 = v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
    if (!Strong
      || (v23 = objc_msgSend(Strong, "getCurrentCall"), sub_100136124(), !v23))
    {
      sub_10013621C();
      return;
    }
    v10 = *(void **)(v2 + v3);
    if (v10)
    {
      v11 = *(void **)(v2 + v3);
    }
    else
    {
      v12 = objc_msgSend((id)objc_opt_self(RTTUIRecentMessageViewController), "viewControllerForCall:", v23);
      if (!v12)
      {
LABEL_20:
        v7 = v23;
        goto LABEL_21;
      }
      v11 = v12;
      v10 = 0;
    }
    v13 = qword_1002D7250;
    v14 = v10;
    if (v13 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v15 = sub_100109570();
    sub_10011ADC0(v15, (uint64_t)&unk_1002E2CC8);
    v16 = sub_10011ADDC();
    if (sub_10011AF5C(v16))
    {
      v17 = (uint8_t *)sub_10010E3FC();
      *(_WORD *)v17 = 0;
      sub_10011AE18((void *)&_mh_execute_header, v13, v1, "EnhancedEmergency: showing RTT message view", v17);
      sub_100109440((uint64_t)v17);
    }

    v18 = v11;
    sub_100137500((uint64_t)v11);
    v19 = (void *)swift_unknownObjectWeakLoadStrong(v8);
    if (v19)
    {
      objc_msgSend(v19, "hideCallControls");
      sub_100136124();
    }
    v20 = *(void **)(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
    if (v20)
    {
      v21 = v20;
      sub_10010D5E0(v18);

    }
    goto LABEL_20;
  }
  __break(1u);
}

void sub_1001448E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  _QWORD aBlock[5];
  uint64_t v53;

  v1 = v0;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  v3 = sub_100108664(v2, (uint64_t)&unk_1002E2CC8);
  Logger.logObject.getter(v3, v4);
  v5 = sub_10011ADDC();
  if (os_log_type_enabled(v3, v5))
  {
    v6 = (uint8_t *)sub_10010E3FC();
    *(_WORD *)v6 = 0;
    sub_10011AE18((void *)&_mh_execute_header, v3, v5, "EnhancedEmergency: showing RTT conversation and starting pip", v6);
    sub_100109440((uint64_t)v6);
  }

  v7 = (uint64_t)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate];
  v8 = (void *)sub_1001453E0();
  if (v8)
  {
    objc_msgSend(v8, "showRTTConversation");
    sub_100136124();
  }
  v9 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v9)
  {
    v10 = sub_1001453E0();
    if (v10)
    {
      v11 = v10;
      v12 = objc_opt_self(UIViewController);
      v13 = swift_dynamicCastObjCClass(v11, v12);
      if (v13)
      {
        v14 = (void *)v13;
        v51 = v9;
        v48 = objc_msgSend(v14, "view");
        sub_100136124();
        if (v48)
        {
          v15 = *(void **)&v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController];
          if (v15)
          {
            v16 = v15;
            sub_10010DBCC(v16);

          }
          v17 = objc_msgSend(v1, "isShownAboveCoverSheet", v48);
          if ((_DWORD)v17)
          {
            Logger.logObject.getter(v17, v18);
            v19 = sub_10011ADDC();
            if (sub_100109560(v19))
            {
              v20 = (_WORD *)sub_10010E3FC();
              sub_1001365A0(v20);
              sub_100123A2C((void *)&_mh_execute_header, v21, v22, "EnhancedEmergency: ICS shown above cover sheet, pausing video streaming and not starting pip");
              sub_100109440(v7);
            }

            sub_10012F990();
          }
          else
          {
            v23 = (void *)sub_1001453E0();
            if (v23)
            {
              sub_10014381C(v23, "removeWebRTCViewControllerForPIP:", v24, v25, v26, v27, v28, v29, (uint64_t)v49, (uint64_t)v51);
              sub_100136124();
            }
            v30 = (char *)objc_allocWithZone((Class)type metadata accessor for EnhancedEmergencyPIPCoordinator());
            v31 = sub_10014523C(v49, v51, v30);
            sub_10013750C((uint64_t)v31);
            v32 = *(char **)&v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_pipCoordinator];
            if (v32)
            {
              v33 = &v32[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_delegate];
              *((_QWORD *)v33 + 1) = &off_10028A448;
              swift_unknownObjectWeakAssign(v33, v1);
              v34 = v32;
              sub_100123178();

            }
          }
          sub_100132D4C();
          v35 = *(void **)&v51[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
          if (v35)
          {
            v36 = swift_allocObject(&unk_10028A468, 24, 7);
            swift_unknownObjectWeakInit(v36 + 16);
            aBlock[4] = sub_1001453A4;
            v53 = v36;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10015E9CC;
            aBlock[3] = &unk_10028A480;
            v37 = _Block_copy(aBlock);
            v38 = v53;
            v39 = v35;
            v40 = objc_msgSend(v39, "setAccessibilityActivateBlock:", v37, swift_release(v38).n128_f64[0]);
            sub_100109874(v40, v41, v42, v43, v44, v45, v46, v47, (uint64_t)v49, v51);

            _Block_release(v37);
          }
          else
          {

          }
        }
        else
        {

        }
      }
      else
      {
        swift_unknownObjectRelease(v11);
      }
    }
  }
}

void sub_100144C80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *Strong;
  void *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  id v23;

  v2 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController);
  if (v2)
  {
    v3 = v0;
    v4 = (void *)qword_1002D7250;
    v23 = v2;
    if (v4 != (void *)-1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v5 = sub_100109570();
    sub_10011ADC0(v5, (uint64_t)&unk_1002E2CC8);
    v6 = sub_10011ADDC();
    if (sub_100109560(v6))
    {
      v7 = (_WORD *)sub_10010E3FC();
      sub_1001365A0(v7);
      sub_100123A2C((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: showing call controls");
      sub_100109440(v1);
    }

    v10 = *(void **)(v3 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
    if (v10)
    {
      v11 = v10;
      sub_10010DBCC(v23);

    }
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
    if (Strong)
    {
      v13 = Strong;
      v14 = objc_msgSend(Strong, "showCallControls");
      sub_100109874(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
      swift_unknownObjectRelease(v13);
    }
    else
    {

    }
  }
}

BOOL sub_100144DF8(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  v3 = Strong;
  if (Strong)
  {
    objc_msgSend(Strong, "transitionToRTTState:", 2);

  }
  return v3 != 0;
}

void sub_100144E60()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState] == 4)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v2 = sub_100109570();
    sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
    v3 = sub_10011ADDC();
    if (sub_100109560(v3))
    {
      v4 = (_WORD *)sub_10010E3FC();
      sub_1001365A0(v4);
      sub_100123A2C((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: got appWillResignActive notification, stopping pip");
      sub_100109440(v1);
    }

    objc_msgSend(v0, "transitionToRTTState:", 2);
  }
}

id sub_100144F5C()
{
  uint64_t v0;
  void *Strong;
  id v2;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate);
  if (!Strong)
    return 0;
  v2 = objc_msgSend(Strong, "getAudioRouteMenu");
  sub_1001437DC();
  return v2;
}

void sub_100144FE8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (v1)
  {
    v2 = v1;
    sub_10010CBC0();

  }
}

uint64_t sub_100145074()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "delegate");

  if (!v1)
    return 0;
  v2 = objc_opt_self(ICSApplicationDelegate);
  v3 = (void *)swift_dynamicCastObjCClass(v1, v2);
  v4 = v3;
  if (!v3)
  {
    sub_1001437DC();
    return (uint64_t)v4;
  }
  v5 = objc_msgSend(v3, "currentInCallScene");
  if (!v5)
  {
    sub_1001437DC();
    return 0;
  }
  v6 = v5;
  if ((objc_msgSend(v5, "isBeingShownAboveCoverSheet") & 1) != 0)
  {
    sub_1001437DC();

    return 1;
  }
  else
  {
    v4 = objc_msgSend(v4, "isPresentingFullScreenOverlayCallUI");
    sub_1001437DC();

  }
  return (uint64_t)v4;
}

ValueMetadata *type metadata accessor for EnhancedEmergencyRTTState()
{
  return &type metadata for EnhancedEmergencyRTTState;
}

unint64_t sub_1001451B0()
{
  unint64_t result;

  result = qword_1002D8FD8;
  if (!qword_1002D8FD8)
  {
    result = swift_getWitnessTable(&unk_100242244, &type metadata for EnhancedEmergencyRTTState);
    atomic_store(result, (unint64_t *)&qword_1002D8FD8);
  }
  return result;
}

void sub_1001451EC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, "setOverrideInterruptionExemptionIdentifier:", v5);

}

char *sub_10014523C(void *a1, void *a2, char *a3)
{
  char *v6;
  id v7;
  char *v8;
  id v9;
  char *result;
  id v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  objc_super v16;

  v6 = &a3[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_delegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  *(_QWORD *)&a3[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_presentationController] = a2;
  v7 = objc_allocWithZone((Class)PGPictureInPictureProxy);
  v8 = a3;
  v9 = a2;
  result = (char *)objc_msgSend(v7, "initWithControlsStyle:viewController:", 4, v9);
  if (result)
  {
    *(_QWORD *)&v8[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_pictureInPictureProxy] = result;
    *(_QWORD *)&v8[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_sourceView] = a1;
    v11 = a1;

    v16.receiver = v8;
    v16.super_class = (Class)type metadata accessor for EnhancedEmergencyPIPCoordinator();
    v12 = (char *)objc_msgSendSuper2(&v16, "init");
    v13 = *(void **)&v12[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_pictureInPictureProxy];
    v14 = v12;
    objc_msgSend(v13, "setDelegate:", v14);
    v15 = v13;
    sub_1001451EC(0xD000000000000014, 0x80000001001F26F0, v15);

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100145380()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

BOOL sub_1001453A4()
{
  uint64_t v0;

  return sub_100144DF8(v0);
}

uint64_t sub_1001453AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001453BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001453C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a9, v10, v9, a4);
}

uint64_t sub_1001453D4(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(a1, va, a1);
}

uint64_t sub_1001453E0()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

uint64_t sub_1001453E8(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_100121E04(a1, a2, (uint64_t *)va);
}

void sub_1001453F4(char a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for CallParticipantsViewController();
  objc_msgSendSuper2(&v11, "viewWillAppear:", a1 & 1);
  objc_msgSend(v1, "setHandlesCallWaitingCalls:", 1);
  v3 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v4 = TUCallCenterVideoCallStatusChangedNotification;
  v5 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v6 = swift_allocObject(&unk_10028A518, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v9[4] = sub_100145930;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1001455B8;
  v9[3] = &unk_10028A530;
  v7 = _Block_copy(v9);
  v8 = objc_msgSend(v3, "addObserverForName:object:queue:usingBlock:", v4, 0, v5, v7, swift_release(v10).n128_f64[0]);
  _Block_release(v7);
  swift_unknownObjectRelease(v8);

}

void sub_100145560(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "updateCallGroups");

  }
}

uint64_t sub_1001455B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v11;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10014569C()
{
  id v0;
  id v1;
  unint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v1 = objc_msgSend(v0, "currentAudioAndVideoCallGroups");

  v2 = sub_1001458D0();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  return v3;
}

id sub_100145764(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CallParticipantsViewController();
  v3 = objc_msgSendSuper2(&v5, "initWithCallDisplayStyleManager:", a1);

  return v3;
}

id sub_1001457DC(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CallParticipantsViewController();
  v5 = objc_msgSendSuper2(&v7, "initWithCallDisplayStyleManager:contactsCache:", a1, a2);

  return v5;
}

id sub_100145880()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallParticipantsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CallParticipantsViewController()
{
  return objc_opt_self(_TtC13InCallService30CallParticipantsViewController);
}

unint64_t sub_1001458D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DA6A0;
  if (!qword_1002DA6A0)
  {
    v1 = objc_opt_self(TUCallGroup);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DA6A0);
  }
  return result;
}

uint64_t sub_10014590C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100145930(uint64_t a1)
{
  uint64_t v1;

  sub_100145560(a1, v1);
}

uint64_t sub_100145938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100145948(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100145950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  char *v5;
  objc_super v7;

  *(_QWORD *)&v3[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestType] = a1;
  v4 = &v3[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestID];
  *(_QWORD *)v4 = a2;
  *((_QWORD *)v4 + 1) = a3;
  v5 = v3;
  *(CFAbsoluteTime *)&v5[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestArrivalTime] = CFAbsoluteTimeGetCurrent();
  *(_QWORD *)&v5[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestShownToUserTime] = 0xBFF0000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestActedUponByUserTime] = 0xBFF0000000000000;

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for PerRequestMetricData();
  return objc_msgSendSuper2(&v7, "init");
}

void sub_1001459DC()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.PerRequestMetricData", 34, "init()", 6, 0);
  __break(1u);
}

id sub_100145A14()
{
  return sub_100112450(type metadata accessor for PerRequestMetricData);
}

uint64_t type metadata accessor for PerRequestMetricData()
{
  return objc_opt_self(_TtC13InCallService20PerRequestMetricData);
}

id sub_100145A54()
{
  _BYTE *v0;
  _BYTE *v1;
  objc_super v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_bitRateArray] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_frameRateArray] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_packetLossArray] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_jitterRateArray] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorDefault] = -32767;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_requestMetricDataSet] = &_swiftEmptySetSingleton;
  v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingRequestReceived] = 0;
  v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingDropped] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minBitRate] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxBitRate] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minFrameRate] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxFrameRate] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxPacketLoss] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minJitterRate] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxJitterRate] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minZoomLevel] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxZoomLevel] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_totalBytesTransmittedWebRTCStream] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONDuration] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime] = 0xBFF0000000000000;
  v1 = v0;
  *(CFAbsoluteTime *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_emergencyCallStartTime] = CFAbsoluteTimeGetCurrent();
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime] = 0xBFF0000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoDuration] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime] = 0xBFF0000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoDuration] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime] = 0xBFF0000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingDuration] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_previousWebRTCState] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewError] = -32767;
  v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorRecovery] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraFacing] = 1;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for EnhancedEmergencyDataCollector();
  return objc_msgSendSuper2(&v3, "init");
}

void sub_100145C60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;
  double v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  BOOL v19;
  double v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  BOOL v27;
  double v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  BOOL v40;
  double v41;
  uint64_t v43;
  uint64_t v44;
  double v45;
  _BYTE v46[24];

  v3 = sub_100136230(a1, direct field offset for SOSUIWebRTCQualityMessage.framesPerSecond);
  v4 = -1.0;
  if (v5)
    v6 = v3;
  else
    v6 = -1.0;
  v8 = sub_100136230(v2, direct field offset for SOSUIWebRTCQualityMessage.bitrate);
  if (v5)
    v9 = v8;
  else
    v9 = -1.0;
  v11 = sub_100136230(v7, direct field offset for SOSUIWebRTCQualityMessage.packetLoss);
  if (v5)
    v12 = v11;
  else
    v12 = -1.0;
  v14 = sub_100136230(v10, direct field offset for SOSUIWebRTCQualityMessage.jitter);
  if (v5)
    v15 = v14;
  else
    v15 = -1.0;
  if ((*(_BYTE *)(v13 + direct field offset for SOSUIWebRTCQualityMessage.bytesSent + 8) & 1) == 0)
  {
    v4 = *(double *)(v13 + direct field offset for SOSUIWebRTCQualityMessage.bytesSent);
    if (v9 <= -1.0)
      goto LABEL_33;
    goto LABEL_20;
  }
  if (v9 > -1.0)
  {
LABEL_20:
    v17 = sub_1001480D8();
    if (v5)
      v19 = 1;
    else
      v19 = v9 < v18;
    if (v19)
      *(double *)(v1 + v16) = v9;
    v20 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxBitRate);
    if (v20 == v17 || v20 < v9)
      *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxBitRate) = v9;
    sub_100111F6C(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_bitRateArray, (uint64_t)v46, 33);
    sub_100181D10();
    sub_100147F9C();
    sub_100147FC8();
    *(double *)(v22 + 32) = v9;
    sub_1001480A8(v23);
LABEL_33:
    if (v6 <= -1.0)
      goto LABEL_47;
    goto LABEL_34;
  }
  if (v6 > -1.0)
  {
LABEL_34:
    v25 = sub_1001480D8();
    if (v5)
      v27 = 1;
    else
      v27 = v6 < v26;
    if (v27)
      *(double *)(v1 + v24) = v6;
    v28 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxFrameRate);
    if (v28 == v25 || v28 < v6)
      *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxFrameRate) = v6;
    sub_100111F6C(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_frameRateArray, (uint64_t)v46, 33);
    sub_100181D10();
    sub_100147F9C();
    sub_100147FC8();
    *(double *)(v30 + 32) = v6;
    sub_1001480A8(v31);
LABEL_47:
    if (v12 <= -1.0)
      goto LABEL_55;
    goto LABEL_48;
  }
  if (v12 > -1.0)
  {
LABEL_48:
    sub_100148120();
    if (v5)
      v34 = 1;
    else
      v34 = v33 < v12;
    if (v34)
      *(double *)(v1 + v32) = v12;
    sub_100111F6C(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_packetLossArray, (uint64_t)v46, 33);
    sub_100181D10();
    sub_100147F9C();
    sub_100147FC8();
    *(double *)(v35 + 32) = v12;
    sub_1001480A8(v36);
LABEL_55:
    if (v15 <= -1.0)
      goto LABEL_69;
    goto LABEL_56;
  }
  if (v15 <= -1.0)
    return;
LABEL_56:
  v38 = sub_1001480D8();
  if (v5)
    v40 = 1;
  else
    v40 = v15 < v39;
  if (v40)
    *(double *)(v1 + v37) = v15;
  v41 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxJitterRate);
  if (v41 == v38 || v41 < v15)
    *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxJitterRate) = v15;
  sub_100111F6C(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_jitterRateArray, (uint64_t)v46, 33);
  sub_100181D10();
  sub_100147F9C();
  sub_100147FC8();
  *(double *)(v43 + 32) = v15;
  sub_1001480A8(v44);
LABEL_69:
  if (v4 <= -1.0)
    return;
  v45 = v4
      + *(double *)(v1
                  + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_totalBytesTransmittedWebRTCStream);
  if ((~*(_QWORD *)&v45 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_77;
  }
  if (v45 <= -9.22337204e18)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (v45 >= 9.22337204e18)
  {
LABEL_78:
    __break(1u);
    return;
  }
  if ((uint64_t)v45 != 0x7FFFFFFFFFFFFFFFLL)
    *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_totalBytesTransmittedWebRTCStream) = v45;
}

void sub_100145F48()
{
  uint64_t v0;
  double v1;
  double v2;
  char v3;
  char v4;
  double v5;
  double v7;
  BOOL v8;

  sub_100148120();
  if (!(v8 ^ v4 | v3))
  {
    v5 = *(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minZoomLevel);
    if (v5 == v2 || v5 > v1)
      *(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minZoomLevel) = v1;
    v7 = *(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxZoomLevel);
    v8 = v7 == -1.0 || v7 < v1;
    if (v8)
      *(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxZoomLevel) = v1;
  }
}

CFAbsoluteTime sub_100145F98(char a1)
{
  uint64_t v1;
  CFAbsoluteTime result;
  uint64_t v3;
  char v4;
  double v5;
  double v6;

  if ((a1 & 1) != 0)
  {
    result = CFAbsoluteTimeGetCurrent();
    *(CFAbsoluteTime *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime) = result;
  }
  else
  {
    v3 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime;
    result = sub_100148184();
    if (!v4)
    {
      v5 = vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(v1 + v3));
      v6 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONDuration);
      if (v6 <= 0.0)
        v6 = -0.0;
      result = v5 + v6;
      *(CFAbsoluteTime *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONDuration) = result;
      *(_QWORD *)(v1 + v3) = 0xBFF0000000000000;
    }
  }
  return result;
}

void sub_100146010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;

  if (a1 == 1)
  {
    v5 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime;
    if (*(double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) > 0.0)
    {
      *(double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingDuration) = *(double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingDuration) + vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime));
      *(_QWORD *)(v3 + v5) = 0xBFF0000000000000;
    }
    goto LABEL_6;
  }
  if (!a1)
  {
    *(CFAbsoluteTime *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) = CFAbsoluteTimeGetCurrent();
LABEL_6:
    *(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraFacing) = a1;
    return;
  }
  sub_1001453D4((uint64_t)&type metadata for SOSUIWebRTCCameraFacing, a2, a3, &type metadata for Int);
  __break(1u);
}

void sub_1001460C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v12;
  double v13;
  double v14;
  double Current;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t *v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;

  v5 = *(_QWORD *)(a1 + direct field offset for SOSUIWebRTCState.state);
  switch(v5)
  {
    case 0:
    case 4:
    case 5:
    case 7:
      *(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime) = 0xBFF0000000000000;
      *(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) = 0xBFF0000000000000;
      goto LABEL_43;
    case 1:
      v6 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_previousWebRTCState;
      v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_previousWebRTCState);
      if (v7 == 2)
      {
        sub_100148040(OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime);
        if (v9 ^ v10 | v8)
          goto LABEL_25;
        goto LABEL_24;
      }
      if (v7 != 3)
        goto LABEL_28;
      sub_100148040(OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime);
      if (!(v9 ^ v10 | v8))
      {
LABEL_24:
        v20 = sub_100148134();
        sub_100148078(v20);
      }
LABEL_25:
      if (*(_QWORD *)(v3 + v6) == 2
        && !*(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraFacing))
      {
        *(CFAbsoluteTime *)(v3
                          + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) = CFAbsoluteTimeGetCurrent();
      }
LABEL_28:
      if (*(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewError) != -32767)
        *(_BYTE *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorRecovery) = 1;
      goto LABEL_43;
    case 2:
      if (*(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_previousWebRTCState) == 3)
      {
        sub_100148184();
        if (!(v9 ^ v10 | v8))
        {
          v13 = sub_1001480E8();
          sub_100147FAC(v13);
        }
      }
      sub_100148184();
      if (!(v9 ^ v10 | v8))
      {
        v14 = sub_1001480E8();
        sub_100147FAC(v14);
      }
      Current = CFAbsoluteTimeGetCurrent();
      v16 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime;
      goto LABEL_18;
    case 3:
      Current = CFAbsoluteTimeGetCurrent();
      v16 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime;
LABEL_18:
      *(double *)(v3 + v16) = Current;
      goto LABEL_43;
    case 6:
      v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_previousWebRTCState);
      if (v12 == 2)
      {
        sub_100148040(OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime);
        if (v9 ^ v10 | v8)
          goto LABEL_32;
        goto LABEL_31;
      }
      if (v12 == 3)
      {
        sub_100148040(OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime);
        if (!(v9 ^ v10 | v8))
        {
LABEL_31:
          v21 = sub_100148134();
          sub_100148078(v21);
        }
      }
LABEL_32:
      v22 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime;
      if (*(double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) > 0.0)
      {
        *(double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingDuration) = v4 + vabdd_f64(sub_100148134(), *(double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime));
        *(_QWORD *)(v3 + v22) = 0xBFF0000000000000;
      }
      v23 = *(_QWORD *)(a1 + direct field offset for SOSUIWebRTCState.error);
      if (v23)
        v24 = *(_QWORD *)(v23 + direct field offset for SOSUIWebRTCErrorMessage.errorCode);
      else
        v24 = -32767;
      *(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewError) = v24;
      *(_BYTE *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorRecovery) = 0;
      goto LABEL_43;
    case 8:
      v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_previousWebRTCState);
      if (v17 == 2)
      {
        v18 = (double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime);
        if (*(double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime) <= 0.0)
          goto LABEL_41;
        v19 = &OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoDuration;
        goto LABEL_40;
      }
      if (v17 == 3)
      {
        v18 = (double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime);
        if (*(double *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime) > 0.0)
        {
          v19 = &OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoDuration;
LABEL_40:
          *(double *)(v3 + *v19) = v4 + vabdd_f64(sub_1001480E8(), *v18);
          *v18 = -1.0;
        }
      }
LABEL_41:
      sub_100148184();
      if (!(v9 ^ v10 | v8))
      {
        v25 = sub_1001480E8();
        sub_100147FAC(v25);
      }
LABEL_43:
      *(_QWORD *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_previousWebRTCState) = v5;
      return;
    default:
      sub_1001453D4((uint64_t)&type metadata for SOSUIWebRTCStateName, a2, a3, &type metadata for Int);
      __break(1u);
      return;
  }
}

#error "100146498: call analysis failed (funcsize=51)"

void sub_1001464E0(uint64_t a1, uint64_t a2)
{
  sub_1001464F8(a1, a2, &OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestShownToUserTime);
}

void sub_1001464EC(uint64_t a1, uint64_t a2)
{
  sub_1001464F8(a1, a2, &OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestActedUponByUserTime);
}

void sub_1001464F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37[24];
  _QWORD v38[5];

  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_requestMetricDataSet);
  sub_100110F6C((uint64_t)v7, (uint64_t)v37);
  v8 = *v7;
  if ((*v7 & 0xC000000000000001) != 0)
  {
    if (v8 < 0)
      v9 = *v7;
    else
      v9 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v10 = __CocoaSet.makeIterator()(v9);
    v11 = type metadata accessor for PerRequestMetricData();
    v12 = sub_100147DF0();
    v13 = Set.Iterator.init(_cocoa:)(v38, v10, v11, v12);
    v8 = v38[0];
    v34 = v38[1];
    v14 = v38[2];
    v15 = v38[3];
    v16 = v38[4];
  }
  else
  {
    v34 = v8 + 56;
    v14 = ~(-1 << *(_BYTE *)(v8 + 32));
    sub_100148164();
    v16 = v17 & v18;
    v13 = (_QWORD *)swift_bridgeObjectRetain(v8);
    v15 = 0;
  }
  v33 = (unint64_t)(v14 + 64) >> 6;
  if (v8 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v16)
    {
      v19 = (v16 - 1) & v16;
      v20 = __clz(__rbit64(v16)) | (v15 << 6);
      v21 = v15;
      goto LABEL_27;
    }
    v26 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v26 >= v33)
      goto LABEL_37;
    v27 = *(_QWORD *)(v34 + 8 * v26);
    v21 = v15 + 1;
    if (!v27)
    {
      v21 = v15 + 2;
      if (v15 + 2 >= v33)
        goto LABEL_37;
      v27 = *(_QWORD *)(v34 + 8 * v21);
      if (!v27)
      {
        v21 = v15 + 3;
        if (v15 + 3 >= v33)
          goto LABEL_37;
        v27 = *(_QWORD *)(v34 + 8 * v21);
        if (!v27)
        {
          v21 = v15 + 4;
          if (v15 + 4 >= v33)
            goto LABEL_37;
          v27 = *(_QWORD *)(v34 + 8 * v21);
          if (!v27)
          {
            v28 = v15 + 5;
            while (v28 < v33)
            {
              v27 = *(_QWORD *)(v34 + 8 * v28++);
              if (v27)
              {
                v21 = v28 - 1;
                goto LABEL_26;
              }
            }
LABEL_37:
            sub_10011ACD4(v8);
            return;
          }
        }
      }
    }
LABEL_26:
    v19 = (v27 - 1) & v27;
    v20 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_27:
    v25 = (char *)*(id *)(*(_QWORD *)(v8 + 48) + 8 * v20);
    if (!v25)
      goto LABEL_37;
    while (1)
    {
      v29 = *(_QWORD *)&v25[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestID];
      v30 = *(_QWORD *)&v25[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestID + 8];
      v31 = v29 == a1 && v30 == a2;
      if ((v31 || (_stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, a1, a2, 0) & 1) != 0)
        && *(double *)&v25[*a3] < 0.0)
      {
        v32 = *a3;
        *(CFAbsoluteTime *)&v25[v32] = CFAbsoluteTimeGetCurrent();
      }

      v15 = v21;
      v16 = v19;
      if ((v8 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      v22 = __CocoaSet.Iterator.next()(v13);
      if (v22)
      {
        v23 = v22;
        v35 = v22;
        v24 = type metadata accessor for PerRequestMetricData();
        swift_unknownObjectRetain(v23);
        swift_dynamicCast(&v36, &v35, (char *)&type metadata for Swift.AnyObject + 8, v24, 7);
        v25 = v36;
        swift_unknownObjectRelease(v23);
        v21 = v15;
        v19 = v16;
        if (v25)
          continue;
      }
      goto LABEL_37;
    }
  }
  __break(1u);
}

void sub_1001467C8()
{
  _BYTE *v0;
  double Current;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  __objc2_class_ro **p_info;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  double v17;
  double v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  uint64_t v83;
  NSObject *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  double v136;
  _QWORD *v137;
  char v138;
  _QWORD *v139;
  id v140;
  char v141;
  char v142;
  id v143;
  char v144;
  id v145;
  char v146;
  id v147;
  char v148;
  id v149;
  char v150;
  id v151;
  char v152;
  double v153;
  id v154;
  uint64_t v155;
  unsigned __int16 v156;
  uint64_t v157;
  char v158;
  double v159;
  id v160;
  uint64_t v161;
  unsigned __int16 v162;
  uint64_t v163;
  char v164;
  double v165;
  id v166;
  uint64_t v167;
  unsigned __int16 v168;
  char v169;
  double v170;
  id v171;
  uint64_t v172;
  unsigned __int16 v173;
  uint64_t v174;
  char v175;
  double v176;
  id v177;
  uint64_t v178;
  unsigned __int16 v179;
  uint64_t v180;
  char v181;
  double v182;
  id v183;
  uint64_t v184;
  unsigned __int16 v185;
  uint64_t v186;
  char v187;
  double v188;
  id v189;
  uint64_t v190;
  unsigned __int16 v191;
  char v192;
  double v193;
  id v194;
  char v195;
  double v196;
  id v197;
  uint64_t v198;
  unsigned __int16 v199;
  uint64_t v200;
  char v201;
  double v202;
  id v203;
  uint64_t v204;
  unsigned __int16 v205;
  uint64_t v206;
  char v207;
  double v208;
  id v209;
  char v210;
  id v211;
  uint64_t v212;
  unsigned __int16 v213;
  uint64_t v214;
  char v215;
  id v216;
  uint64_t v217;
  unsigned __int16 v218;
  uint64_t v219;
  char v220;
  char v221;
  uint64_t v222;
  id v223;
  char v224;
  id v225;
  char isUniquelyReferenced_nonNull_native;
  NSString v227;
  uint64_t v228;
  void *v229;
  __n128 v230;
  uint64_t v231;
  uint64_t v232;
  NSObject *v233;
  os_log_type_t v234;
  uint8_t *v235;
  os_log_type_t type[8];
  os_log_type_t typea;
  NSObject *oslog;
  _QWORD aBlock[5];
  uint64_t v240;
  _BYTE v241[24];
  _BYTE v242[24];
  _BYTE v243[24];
  _BYTE v244[24];
  _BYTE v245[24];
  _BYTE v246[24];
  _BYTE v247[24];
  _BYTE v248[24];
  _BYTE v249[24];
  _BYTE v250[24];
  double v251;
  _BYTE v252[24];
  double v253;
  _BYTE v254[24];
  double v255;
  _BYTE v256[24];
  double v257;
  double v258;
  double v259;
  double v260;
  uint64_t v261;
  uint64_t v262;

  if ((v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingRequestReceived] & 1) == 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100108664(v11, (uint64_t)&unk_1002E2CC8);
    oslog = Logger.logObject.getter(v12, v13);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)sub_1001094C8(2);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v14, "EnhancedEmergency: submitCAMetric, No streaming request received during emergency call, early return", v15, 2u);
      sub_100109440((uint64_t)v15);
    }
    sub_1001480B0();

    return;
  }
  Current = CFAbsoluteTimeGetCurrent();
  v2 = *(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_emergencyCallStartTime];
  v3 = Current - v2;
  v4 = *(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime];
  v5 = vabdd_f64(Current, v2);
  v6 = Current - v4;
  v7 = vabdd_f64(Current, v4);
  v262 = 0;
  p_info = &OBJC_METACLASS____TtC13InCallService30CallParticipantsViewController.info;
  if (v6 != 0.0)
  {
    if (*(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingDuration] > 0.0)
    {
      sub_100148150();
      v262 = v9;
    }
    v261 = 0;
    if (*(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONDuration] > 0.0)
    {
      sub_100148150();
      v261 = v10;
    }
    v260 = 0.0;
    if (v3 != 0.0)
    {
      v260 = ceil(v7 / v5 * 100.0);
      goto LABEL_15;
    }
LABEL_17:
    v259 = 0.0;
    goto LABEL_18;
  }
  v260 = 0.0;
  v261 = 0;
  if (v3 == 0.0)
    goto LABEL_17;
LABEL_15:
  v259 = 0.0;
  v17 = *(double *)((char *)&p_info[34]->flags + (_QWORD)v0);
  if (v17 > 0.0)
    v259 = ceil(v17 / v5 * 100.0);
LABEL_18:
  v258 = 0.0;
  if (v6 != 0.0)
  {
    v18 = *(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoDuration];
    if (v18 > 0.0)
      v258 = ceil(v18 / v7 * 100.0);
  }
  v257 = 0.0;
  sub_100110F6C((uint64_t)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_bitRateArray], (uint64_t)v256);
  sub_10014819C();
  if (v19)
  {
    v20 = sub_100148050();
    do
      v20 = sub_100147FDC(v20);
    while (!v22);
    v257 = sub_100148190(v21, v20);
  }
  v255 = 0.0;
  sub_100110F6C((uint64_t)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_frameRateArray], (uint64_t)v254);
  sub_10014819C();
  if (v23)
  {
    v24 = sub_100148050();
    do
      v24 = sub_100147FDC(v24);
    while (!v22);
    v255 = sub_100148190(v25, v24);
  }
  v253 = 0.0;
  sub_100110F6C((uint64_t)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_packetLossArray], (uint64_t)v252);
  sub_10014819C();
  if (v26)
  {
    v27 = sub_100148050();
    do
      v27 = sub_100147FDC(v27);
    while (!v22);
    v253 = sub_100148190(v28, v27);
  }
  v251 = 0.0;
  sub_100110F6C((uint64_t)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_jitterRateArray], (uint64_t)v250);
  sub_10014819C();
  if (v29)
  {
    v30 = sub_100148050();
    do
      v30 = sub_100147FDC(v30);
    while (!v22);
    v251 = sub_100148190(v31, v30);
  }
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v32 = type metadata accessor for Logger(0);
  v33 = sub_100108664(v32, (uint64_t)&unk_1002E2CC8);
  *(double *)type = v251;
  v35 = Logger.logObject.getter(v33, v34);
  v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = sub_1001094C8(92);
    *(_DWORD *)v37 = 134220032;
    v42 = sub_100147ED8(v37, v38, v37 + 4, v37 + 12, v39, v40, v41);
    *(_WORD *)(v37 + 12) = 2048;
    v47 = sub_100147ED8(v42, v43, v37 + 14, v37 + 22, v44, v45, v46);
    *(_WORD *)(v37 + 22) = 2048;
    v52 = sub_100147ED8(v47, v48, v37 + 24, v37 + 32, v49, v50, v51);
    *(_WORD *)(v37 + 32) = 2048;
    v57 = sub_100147ED8(v52, v53, v37 + 34, v37 + 42, v54, v55, v56);
    *(_WORD *)(v37 + 42) = 2048;
    v62 = sub_100147ED8(v57, v58, v37 + 44, v37 + 52, v59, v60, v61);
    *(_WORD *)(v37 + 52) = 2048;
    v67 = sub_100147ED8(v62, v63, v37 + 54, v37 + 62, v64, v65, v66);
    *(_WORD *)(v37 + 62) = 2048;
    v72 = sub_100147ED8(v67, v68, v37 + 64, v37 + 72, v69, v70, v71);
    *(_WORD *)(v37 + 72) = 2048;
    v77 = sub_100147ED8(v72, v73, v37 + 74, v37 + 82, v74, v75, v76);
    *(_WORD *)(v37 + 82) = 2048;
    aBlock[0] = *(_QWORD *)type;
    sub_100147ED8(v77, v78, v37 + 84, v37 + 92, v79, v80, v81);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "EnhancedEmergency: submitCAMetric frontCameraVideoPercentage:%f torchOnPercentage:%f videoOnPercentage:%f videoPausedPercentage:%f unstableVideoPercentage:%f averageBitRate:%f avgFrameRate:%f averagePacketLoss:%f averageJitterRate:%f", (uint8_t *)v37, 0x5Cu);
    sub_100109440(v37);
  }

  v82 = v0;
  v84 = Logger.logObject.getter(v82, v83);
  typea = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v84, typea))
  {
    v85 = sub_1001094C8(108);
    *(_DWORD *)v85 = 134220544;
    aBlock[0] = *((char *)v82 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minBitRate);
    v90 = sub_100147ED8(v85, v86, v85 + 4, v85 + 12, v87, v88, v89);
    *(_WORD *)(v85 + 12) = 2048;
    aBlock[0] = *((char *)v82 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxBitRate);
    v95 = sub_100147ED8(v90, v91, v85 + 14, v85 + 22, v92, v93, v94);
    *(_WORD *)(v85 + 22) = 2048;
    aBlock[0] = *((char *)v82 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minFrameRate);
    v100 = sub_100147ED8(v95, v96, v85 + 24, v85 + 32, v97, v98, v99);
    *(_WORD *)(v85 + 32) = 2048;
    aBlock[0] = *((char *)v82 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxFrameRate);
    v105 = sub_100147ED8(v100, v101, v85 + 34, v85 + 42, v102, v103, v104);
    *(_WORD *)(v85 + 42) = 2048;
    aBlock[0] = *((char *)v82 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxPacketLoss);
    v110 = sub_100147ED8(v105, v106, v85 + 44, v85 + 52, v107, v108, v109);
    *(_WORD *)(v85 + 52) = 2048;
    aBlock[0] = *((char *)v82 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minJitterRate);
    v115 = sub_100147ED8(v110, v111, v85 + 54, v85 + 62, v112, v113, v114);
    *(_WORD *)(v85 + 62) = 2048;
    aBlock[0] = *((char *)v82 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxJitterRate);
    v120 = sub_100147ED8(v115, v116, v85 + 64, v85 + 72, v117, v118, v119);
    *(_WORD *)(v85 + 72) = 2048;
    aBlock[0] = *((char *)v82 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxZoomLevel);
    v125 = sub_100147ED8(v120, v121, v85 + 74, v85 + 82, v122, v123, v124);
    *(_WORD *)(v85 + 82) = 2048;
    aBlock[0] = *((char *)v82 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minZoomLevel);
    v130 = sub_100147ED8(v125, v126, v85 + 84, v85 + 92, v127, v128, v129);
    *(_WORD *)(v85 + 92) = 2048;
    aBlock[0] = *((char *)v82
                            + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewError);
    sub_100147ED8(v130, v131, v85 + 94, v85 + 102, v132, v133, v134);
    *(_WORD *)(v85 + 102) = 1024;
    LODWORD(aBlock[0]) = *((unsigned __int8 *)&v82->isa
                         + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorRecovery);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4, v85 + 104, v85 + 108);

    _os_log_impl((void *)&_mh_execute_header, v84, typea, "EnhancedEmergency: submitCAMetric minBitRate:%f maxBitRate:%f minFrameRate:%f maxFrameRate:%f maxPacketLoss:%f minJitterRate:%f maxJitterRate:%f maxZoomLevel:%f minZoomLevel:%f webRTCViewError:%ld webRTCViewErrorRecovery:%{BOOL}d", (uint8_t *)v85, 0x6Cu);
    sub_100109440(v85);
  }
  else
  {

    v84 = v82;
  }

  v135 = sub_100147E50();
  Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, &type metadata for String, v135, &protocol witness table for String);
  sub_100147EE4();
  if (v22)
  {
    __break(1u);
    goto LABEL_122;
  }
  if (v136 <= -9.22337204e18)
  {
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_123;
  v139 = v137;
  v140 = sub_100147F10();
  sub_100147EF4(v140);
  sub_100147ECC();
  sub_100148034();
  sub_100147F34(0xD000000000000021, v141, (uint64_t)"totalBytesTransmittedWebRTCStream");
  sub_100147EC0();
  sub_100110F6C((uint64_t)&v258, (uint64_t)v249);
  sub_100147EE4();
  if (v22)
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  sub_100148120();
  if (v138 ^ v142 | v22)
  {
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
  sub_100147F48();
  if (!v138)
    goto LABEL_126;
  v143 = sub_100147F10();
  sub_10010E3C0(v143, "initWithUnsignedLongLong:");
  v144 = sub_100147ECC();
  aBlock[0] = v139;
  sub_100147F34(0xD000000000000017, v144, (uint64_t)"unstableVideoPercentage");
  sub_100147EC0();
  sub_100110F6C((uint64_t)&v262, (uint64_t)v248);
  sub_100147EE4();
  if (v22)
  {
LABEL_127:
    __break(1u);
    goto LABEL_128;
  }
  sub_100148120();
  if (v138 ^ v142 | v22)
  {
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
  sub_100147F48();
  if (!v138)
    goto LABEL_129;
  v145 = sub_100147F10();
  sub_10010E3C0(v145, "initWithUnsignedLongLong:");
  sub_100147ECC();
  sub_100148034();
  sub_100147F34(0xD00000000000001ALL, v146, (uint64_t)"frontCameraVideoPercentage");
  sub_100147EC0();
  sub_100110F6C((uint64_t)&v260, (uint64_t)v247);
  sub_100147EE4();
  if (v22)
  {
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  sub_100148120();
  if (v138 ^ v142 | v22)
  {
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
  sub_100147F48();
  if (!v138)
    goto LABEL_132;
  v147 = sub_100147F10();
  sub_10010E3C0(v147, "initWithUnsignedLongLong:");
  sub_100147ECC();
  sub_100148034();
  sub_100147F18(v148, (uint64_t)"videoOnPercentage");
  sub_100147EC0();
  sub_100110F6C((uint64_t)&v259, (uint64_t)v246);
  sub_100147EE4();
  if (v22)
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  sub_100148120();
  if (v138 ^ v142 | v22)
  {
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  sub_100147F48();
  if (!v138)
    goto LABEL_135;
  v149 = sub_100147F10();
  sub_10010E3C0(v149, "initWithUnsignedLongLong:");
  sub_100147ECC();
  sub_100148034();
  sub_100147F34(0xD000000000000015, v150, (uint64_t)"videoPausedPercentage");
  sub_100147EC0();
  sub_100110F6C((uint64_t)&v261, (uint64_t)v245);
  sub_100147EE4();
  if (v22)
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  sub_100148120();
  if (v138 ^ v142 | v22)
  {
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  sub_100147F48();
  if (!v138)
    goto LABEL_138;
  v151 = sub_100147F10();
  sub_10010E3C0(v151, "initWithUnsignedLongLong:");
  sub_100147ECC();
  sub_100148034();
  sub_100147F18(v152, (uint64_t)"torchOnPercentage");
  sub_100147EC0();
  sub_100147EE4();
  if (v22)
  {
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  if (v153 <= -9.22337204e18)
  {
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_141;
  v154 = sub_100147F10();
  sub_100147EF4(v154);
  sub_100147ECC();
  v155 = sub_100147F6C();
  sub_100148094(v155, v156 | 0x426E0000, v157, v158);
  sub_100147EC0();
  sub_100147EE4();
  if (v22)
  {
LABEL_142:
    __break(1u);
    goto LABEL_143;
  }
  if (v159 <= -9.22337204e18)
  {
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_144;
  v160 = sub_100147F10();
  sub_100147EF4(v160);
  sub_100147ECC();
  v161 = sub_100147F54();
  sub_100148094(v161, v162 | 0x42780000, v163, v164);
  sub_100147EC0();
  sub_100110F6C((uint64_t)&v257, (uint64_t)v244);
  sub_100147EE4();
  if (v22)
  {
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  if (v165 <= -9.22337204e18)
  {
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
    goto LABEL_148;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_147;
  v166 = sub_100147F10();
  sub_100147EF4(v166);
  sub_100147ECC();
  v167 = sub_1001480F0();
  sub_100177548(v167, v168 | 0x4265676172650000, 0xEE00657461527469, v169);
  sub_100147EC0();
  sub_100147EE4();
  if (v22)
  {
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  if (v170 <= -9.22337204e18)
  {
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_150;
  v171 = sub_100147F10();
  sub_100147EF4(v171);
  sub_100147ECC();
  v172 = sub_100147F6C();
  sub_100147F84(v172, v173 | 0x466E0000, v174, v175);
  sub_100147EC0();
  sub_100147EE4();
  if (v22)
  {
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  if (v176 <= -9.22337204e18)
  {
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_153;
  v177 = sub_100147F10();
  sub_100147EF4(v177);
  sub_100147ECC();
  v178 = sub_100147F54();
  sub_100147F84(v178, v179 | 0x46780000, v180, v181);
  sub_100147EC0();
  sub_100110F6C((uint64_t)&v255, (uint64_t)v243);
  sub_100147EE4();
  if (v22)
  {
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  if (v182 <= -9.22337204e18)
  {
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_156;
  v183 = sub_100147F10();
  sub_100147EF4(v183);
  sub_100147ECC();
  v184 = sub_1001480F0();
  sub_100147F84(v184, v185 | 0x46670000, v186, v187);
  sub_100147EC0();
  sub_100147EE4();
  if (v22)
  {
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
  if (v188 <= -9.22337204e18)
  {
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
    goto LABEL_160;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_159;
  v189 = sub_100147F10();
  sub_100147EF4(v189);
  sub_100147ECC();
  v190 = sub_100147F54();
  sub_100177548(v190, v191 | 0x656B636150780000, 0xED000073736F4C74, v192);
  sub_100147EC0();
  sub_100110F6C((uint64_t)&v253, (uint64_t)v242);
  sub_100147EE4();
  if (v22)
  {
LABEL_160:
    __break(1u);
    goto LABEL_161;
  }
  if (v193 <= -9.22337204e18)
  {
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
    goto LABEL_163;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_162;
  v194 = sub_100147F10();
  sub_100147EF4(v194);
  sub_100147ECC();
  sub_100148034();
  sub_100147F18(v195, (uint64_t)"averagePacketLoss");
  sub_100147EC0();
  sub_100147EE4();
  if (v22)
  {
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  if (v196 <= -9.22337204e18)
  {
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
    goto LABEL_166;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_165;
  v197 = sub_100147F10();
  sub_100147EF4(v197);
  sub_100147ECC();
  v198 = sub_100147F6C();
  sub_100148018(v198, v199 | 0x4A6E0000, v200, v201);
  sub_100147EC0();
  sub_100147EE4();
  if (v22)
  {
LABEL_166:
    __break(1u);
    goto LABEL_167;
  }
  if (v202 <= -9.22337204e18)
  {
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
    goto LABEL_169;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_168;
  v203 = sub_100147F10();
  sub_100147EF4(v203);
  sub_100147ECC();
  v204 = sub_100147F54();
  sub_100148018(v204, v205 | 0x4A780000, v206, v207);
  sub_100147EC0();
  sub_100110F6C((uint64_t)&v251, (uint64_t)v241);
  sub_100147EE4();
  if (v22)
  {
LABEL_169:
    __break(1u);
    goto LABEL_170;
  }
  if (v208 <= -9.22337204e18)
  {
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
    return;
  }
  sub_100147F00();
  if (!v138)
    goto LABEL_171;
  v209 = sub_100147F10();
  sub_100147EF4(v209);
  sub_100147ECC();
  sub_100148034();
  sub_100147F18(v210, (uint64_t)"averageJitterRate");
  sub_100147EC0();
  v211 = sub_100147F10();
  sub_1001481A8(v211);
  sub_100147ECC();
  v212 = sub_100147F54();
  sub_100148060(v212, v213 | 0x5A780000, v214, v215);
  sub_100147EC0();
  v216 = sub_100147F10();
  sub_1001481A8(v216);
  sub_100147ECC();
  v217 = sub_100147F6C();
  sub_100148060(v217, v218 | 0x5A6E0000, v219, v220);
  sub_100147EC0();
  objc_msgSend(sub_100147F10(), "initWithBool:", *((unsigned __int8 *)&v82->isa + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingDropped));
  sub_100147ECC();
  sub_100148034();
  sub_100147F34(0xD000000000000010, v221, (uint64_t)"streamingDropped");
  sub_100147EC0();
  v222 = *(uint64_t *)((char *)&v82->isa + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewError);
  if (v222 != -32767)
  {
    v223 = sub_100147F10();
    sub_100147EF4(v223);
    v224 = sub_100147ECC();
    aBlock[0] = v139;
    sub_100177548(v222, 0x6956435452626577, 0xEF726F7272457765, v224);
    sub_100147EC0();
    v225 = objc_msgSend(sub_100147F10(), "initWithBool:", *((unsigned __int8 *)&v82->isa+ OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorRecovery));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(aBlock);
    aBlock[0] = aBlock;
    v139 = aBlock;
    sub_100177548((uint64_t)v225, 0xD000000000000017, 0x80000001001F2B00, isUniquelyReferenced_nonNull_native);
    sub_100147EC0();
  }
  v227 = String._bridgeToObjectiveC()();
  v228 = sub_100122840((uint64_t)&unk_10028A5B8);
  *(_QWORD *)(v228 + 16) = v139;
  aBlock[4] = sub_100147EAC;
  v240 = v228;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001757F4;
  aBlock[3] = &unk_10028A5D0;
  v229 = _Block_copy(aBlock);
  v230 = swift_release(v240);
  AnalyticsSendEventLazy(v227, v229, v230);
  _Block_release(v229);

  v233 = Logger.logObject.getter(v231, v232);
  v234 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v233, v234))
  {
    v235 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v235 = 0;
    _os_log_impl((void *)&_mh_execute_header, v233, v234, "Metric submitted successfully for topic com.apple.incallservice.eed", v235, 2u);
    sub_100109440((uint64_t)v235);
  }

  sub_1001480B0();
}

uint64_t sub_100147700()
{
  uint64_t v0;
  Swift::Bool v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  double v28;
  char v29;
  double v30;
  char v31;
  id v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _BOOL8 v36;
  Swift::Int v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  _BOOL8 v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  char v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  NSString v62;
  void *v63;
  uint64_t v64;
  __n128 v65;
  uint64_t result;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int64_t v71;
  _QWORD aBlock[5];
  uint64_t v73;
  _QWORD *v74;
  char v75[24];
  _QWORD v76[6];

  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_requestMetricDataSet);
  sub_100110F6C(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_requestMetricDataSet, (uint64_t)v75);
  v3 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v2;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = type metadata accessor for PerRequestMetricData();
    v7 = sub_100147DF0();
    v8 = Set.Iterator.init(_cocoa:)(v76, v5, v6, v7);
    v3 = v76[0];
    v68 = v76[1];
    v9 = v76[2];
    v10 = v76[3];
    v11 = v76[4];
  }
  else
  {
    v68 = v3 + 56;
    v12 = ~(-1 << *(_BYTE *)(v3 + 32));
    sub_100148164();
    v11 = v13 & v14;
    swift_bridgeObjectRetain(v3);
    v9 = v12;
    v10 = 0;
  }
  v67 = (unint64_t)(v9 + 64) >> 6;
  v69 = v3;
  if (v3 < 0)
    goto LABEL_10;
LABEL_8:
  if (v11)
  {
    v15 = (v11 - 1) & v11;
    v16 = __clz(__rbit64(v11)) | (v10 << 6);
    v17 = v10;
    goto LABEL_27;
  }
  v22 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v22 >= v67)
      return sub_10011ACD4(v3);
    v23 = *(_QWORD *)(v68 + 8 * v22);
    v17 = v10 + 1;
    if (!v23)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v67)
        return sub_10011ACD4(v3);
      v23 = *(_QWORD *)(v68 + 8 * v17);
      if (!v23)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v67)
          return sub_10011ACD4(v3);
        v23 = *(_QWORD *)(v68 + 8 * v17);
        if (!v23)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v67)
            return sub_10011ACD4(v3);
          v23 = *(_QWORD *)(v68 + 8 * v17);
          if (!v23)
          {
            v24 = v10 + 5;
            while (v24 < v67)
            {
              v23 = *(_QWORD *)(v68 + 8 * v24++);
              if (v23)
              {
                v17 = v24 - 1;
                goto LABEL_26;
              }
            }
            return sub_10011ACD4(v3);
          }
        }
      }
    }
LABEL_26:
    v15 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_27:
    v21 = (char *)*(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (v21)
    {
      while (1)
      {
        v25 = sub_100122840((uint64_t)&unk_10028A568);
        v26 = sub_100147E50();
        *(_QWORD *)(v25 + 16) = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, &type metadata for String, v26, &protocol witness table for String);
        v27 = (_QWORD *)(v25 + 16);
        sub_100147EE4();
        if (v29)
          break;
        if (v28 <= -9.22337204e18)
          goto LABEL_52;
        sub_100147F00();
        if (!v31)
          goto LABEL_53;
        v70 = v15;
        v71 = v17;
        v32 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithLongLong:", (uint64_t)v30);
        sub_100111F6C(v25 + 16, (uint64_t)aBlock, 33);
        swift_isUniquelyReferenced_nonNull_native(*v27);
        sub_100148108();
        v33 = sub_10011D2A8(0xD000000000000026, 0x80000001001F2B50);
        v35 = *(_QWORD *)(v15 + 16);
        v36 = (v34 & 1) == 0;
        v37 = v35 + v36;
        if (__OFADD__(v35, v36))
          goto LABEL_54;
        v38 = v33;
        v39 = v34;
        sub_1001085C0(&qword_1002D9188);
        v40 = &v74;
        if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v1, v37))
        {
          v40 = v74;
          v41 = sub_10011D2A8(0xD000000000000026, 0x80000001001F2B50);
          if ((v39 & 1) != (v42 & 1))
            goto LABEL_59;
          v38 = v41;
        }
        v43 = v74;
        if ((v39 & 1) != 0)
        {
          sub_100148178();
          v40[v38] = v32;
        }
        else
        {
          sub_100147FF0();
          *v44 = 0xD000000000000026;
          v44[1] = 0x80000001001F2B50;
          sub_10014813C();
          if (v46)
            goto LABEL_56;
          v43[2] = v45;
        }
        v47 = *v27;
        *v27 = v43;
        swift_bridgeObjectRelease(v47);
        swift_endAccess(aBlock);
        v48 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", *(_QWORD *)&v21[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestType]);
        sub_100111F6C(v25 + 16, (uint64_t)aBlock, 33);
        swift_isUniquelyReferenced_nonNull_native(*v27);
        sub_100148108();
        v49 = sub_10011D2A8(0xD000000000000022, 0x80000001001F2B80);
        v51 = v50;
        v52 = v40[2];
        v53 = (v50 & 1) == 0;
        if (__OFADD__(v52, v53))
          goto LABEL_55;
        v54 = v49;
        v55 = &v74;
        if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v1, v52 + v53))
        {
          v55 = v74;
          v56 = sub_10011D2A8(0xD000000000000022, 0x80000001001F2B80);
          if ((v51 & 1) != (v57 & 1))
            goto LABEL_59;
          v54 = v56;
        }
        v58 = v74;
        if ((v51 & 1) != 0)
        {
          sub_100148178();
          v55[v54] = v48;
        }
        else
        {
          sub_100147FF0();
          *v59 = 0xD000000000000022;
          v59[1] = 0x80000001001F2B80;
          sub_10014813C();
          if (v46)
            goto LABEL_57;
          v58[2] = v60;
        }
        v61 = *(_QWORD *)(v25 + 16);
        *(_QWORD *)(v25 + 16) = v58;
        swift_bridgeObjectRelease(v61);
        swift_endAccess(aBlock);
        v62 = String._bridgeToObjectiveC()();
        aBlock[4] = sub_100147E8C;
        v73 = v25;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1001757F4;
        aBlock[3] = &unk_10028A580;
        v63 = _Block_copy(aBlock);
        v64 = v73;
        swift_retain(v25);
        v65 = swift_release(v64);
        AnalyticsSendEventLazy(v62, v63, v65);

        _Block_release(v63);
        swift_release(v25);

        v11 = v70;
        v10 = v71;
        v3 = v69;
        if ((v69 & 0x8000000000000000) == 0)
          goto LABEL_8;
LABEL_10:
        v18 = __CocoaSet.Iterator.next()(v8);
        if (v18)
        {
          v19 = v18;
          v74 = (_QWORD *)v18;
          v20 = type metadata accessor for PerRequestMetricData();
          swift_unknownObjectRetain(v19);
          swift_dynamicCast(aBlock, &v74, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
          v21 = (char *)aBlock[0];
          swift_unknownObjectRelease(v19);
          v17 = v10;
          v15 = v11;
          if (v21)
            continue;
        }
        return sub_10011ACD4(v3);
      }
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    return sub_10011ACD4(v3);
  }
LABEL_58:
  __break(1u);
LABEL_59:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100147D28(uint64_t a1)
{
  _BYTE v3[24];

  swift_beginAccess(a1 + 16, v3, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(a1 + 16));
}

id sub_100147D68()
{
  return sub_100112450(type metadata accessor for EnhancedEmergencyDataCollector);
}

uint64_t type metadata accessor for EnhancedEmergencyDataCollector()
{
  return objc_opt_self(_TtC13InCallService30EnhancedEmergencyDataCollector);
}

unint64_t sub_100147DF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D9180;
  if (!qword_1002D9180)
  {
    v1 = type metadata accessor for PerRequestMetricData();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1002D9180);
  }
  return result;
}

uint64_t sub_100147E2C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100147E50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D7E50;
  if (!qword_1002D7E50)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D7E50);
  }
  return result;
}

uint64_t sub_100147E8C()
{
  uint64_t v0;

  return sub_100147D28(v0);
}

uint64_t sub_100147E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100147EA4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100147EAC()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100147EC0()
{
  return swift_bridgeObjectRelease(0x8000000000000000);
}

uint64_t sub_100147ECC()
{
  uint64_t v0;

  return swift_isUniquelyReferenced_nonNull_native(v0);
}

uint64_t sub_100147ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v7, a3, a4);
}

id sub_100147EF4(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(a1, *(SEL *)(v1 + 3408), v2);
}

id sub_100147F10()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 680));
}

void sub_100147F18(char a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100177548(v2, 0xD000000000000011, (a2 - 32) | 0x8000000000000000, a1);
}

void sub_100147F34(uint64_t a1@<X1>, char a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_100177548(v3, a1, (a3 - 32) | 0x8000000000000000, a2);
}

uint64_t sub_100147F54()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100147F6C()
{
  uint64_t v0;

  return v0;
}

void sub_100147F84(uint64_t a1, unsigned int a2, uint64_t a3, char a4)
{
  sub_100177548(a1, a2 | 0x656D617200000000, 0xEC00000065746152, a4);
}

uint64_t sub_100147F9C()
{
  uint64_t v0;

  return sub_100181D70(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

double sub_100147FAC(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double result;

  result = v4 + vabdd_f64(a1, *(double *)(v2 + v1));
  *(double *)(v2 + v3) = result;
  *(_QWORD *)(v2 + v1) = 0xBFF0000000000000;
  return result;
}

void sub_100147FC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v0 + 16) = v1 + 1;
}

double sub_100147FDC(double a1)
{
  uint64_t v1;
  uint64_t v2;

  return a1 + *(double *)(v2 + 8 * v1);
}

void sub_100147FF0()
{
  uint64_t v0;
  unint64_t v1;

  *(_QWORD *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
}

void sub_100148018(uint64_t a1, unsigned int a2, uint64_t a3, char a4)
{
  sub_100177548(a1, a2 | 0x6574746900000000, 0xED00006574615272, a4);
}

double sub_100148040@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(double *)(v1 + a1);
}

double sub_100148050()
{
  return 0.0;
}

void sub_100148060(uint64_t a1, unsigned int a2, uint64_t a3, char a4)
{
  sub_100177548(a1, a2 | 0x4C6D6F6F00000000, 0xEC0000006C657665, a4);
}

double sub_100148078(double a1)
{
  uint64_t v1;
  double *v2;
  uint64_t v3;
  double v4;
  double result;

  result = v4 + vabdd_f64(a1, *v2);
  *(double *)(v1 + v3) = result;
  *v2 = -1.0;
  return result;
}

void sub_100148094(uint64_t a1, unsigned int a2, uint64_t a3, char a4)
{
  sub_100177548(a1, a2 | 0x6152746900000000, 0xEA00000000006574, a4);
}

uint64_t sub_1001480A8(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return swift_endAccess(va);
}

double sub_1001480D8()
{
  return -1.0;
}

double sub_1001480E8()
{
  return CFAbsoluteTimeGetCurrent();
}

uint64_t sub_1001480F0()
{
  uint64_t v0;

  return v0;
}

void sub_100148108()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_10014812C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_bridgeObjectRelease(*(_QWORD *)(v1 + a1));
}

double sub_100148134()
{
  return CFAbsoluteTimeGetCurrent();
}

void sub_10014813C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v2) = v1;
}

void sub_100148178()
{
  uint64_t v0;
  uint64_t v1;

}

double sub_100148184()
{
  uint64_t v0;
  uint64_t v1;

  return *(double *)(v1 + v0);
}

double sub_100148190@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  return a2 / (double)a1;
}

id sub_1001481A8(void *a1)
{
  uint64_t v1;
  double v2;

  return objc_msgSend(a1, *(SEL *)(v1 + 3432), v2);
}

id sub_1001481D4()
{
  return sub_100149030(OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_contact);
}

void sub_100148228(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_contact);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_contact) = a1;
  v3 = a1;

  sub_10014826C();
}

id sub_10014826C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_cnAvatarView), "setContact:", *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_contact));
}

uint64_t sub_1001482B4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_wantsBlur);
}

id sub_100148304(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_wantsBlur) = a1;
  return sub_1001487E0(a1);
}

id sub_100148334()
{
  return sub_100149030(OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_cnAvatarView);
}

void sub_100148340(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView);
}

void sub_10014834C(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon);
}

id sub_100148358(void *a1, char a2, char a3)
{
  char *v3;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v3[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon] = 0;
  v7 = objc_allocWithZone((Class)CNAvatarView);
  v8 = v3;
  v9 = objc_msgSend(v7, "initWithContact:", a1);
  sub_1001360DC(v9, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)&v8[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_cnAvatarView] = v9;
  *(_QWORD *)&v8[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_contact] = a1;
  v8[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_wantsBlur] = a2;
  v8[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_isCommunicationSafetyEnabled] = a3;
  v10 = v9;
  v11 = a1;

  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for BlurrableAvatarView();
  v12 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10010E3C0(v12, "addSubview:");
  sub_100148614();
  sub_1001487E0(a2);

  return v12;
}

void sub_1001484C4()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/BlurrableAvatarView.swift", 39, 2);
  __break(1u);
}

void sub_100148550()
{
  char *v0;
  void *v1;
  id v2;
  objc_super v3;
  CGRect v4;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for BlurrableAvatarView();
  objc_msgSendSuper2(&v3, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView];
  if (v1)
  {
    v2 = objc_msgSend(v1, "layer");
    objc_msgSend(v0, "bounds");
    objc_msgSend(v2, "setCornerRadius:", CGRectGetWidth(v4) * 0.5);

  }
}

void sub_100148614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  Class isa;
  id v29;

  objc_opt_self(NSLayoutConstraint);
  v1 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v2 = sub_100109754(v1, 64);
  *(_OWORD *)(v2 + 16) = xmmword_100241800;
  v3 = sub_100136368(v2, "topAnchor");
  v4 = sub_10010A1B8((uint64_t)v3, "topAnchor");
  v5 = sub_100149018();
  sub_100149038();

  *(_QWORD *)(v2 + 32) = v0;
  v7 = sub_100136368(v6, "bottomAnchor");
  v8 = sub_10010A1B8((uint64_t)v7, "bottomAnchor");
  v9 = sub_100149018();
  sub_100149038();

  *(_QWORD *)(v2 + 40) = v0;
  v11 = sub_100136368(v10, "leadingAnchor");
  v12 = sub_10010A1B8((uint64_t)v11, "leadingAnchor");
  v13 = sub_100149018();
  sub_100149038();

  *(_QWORD *)(v2 + 48) = v0;
  v15 = sub_100136368(v14, "trailingAnchor");
  v16 = sub_10010A1B8((uint64_t)v15, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v2 + 56) = v17;
  v20 = specialized Array._endMutation()(v18, v19);
  sub_10014904C(v20, (unint64_t *)&qword_1002DB440);
  isa = sub_10010983C().super.isa;
  v21 = sub_1001094F4();
  sub_100149040(v21, "activateConstraints:", v22, v23, v24, v25, v26, v27, (uint64_t)isa);
  sub_1001360F4(v29);
}

id sub_1001487E0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id result;
  uint64_t v6;

  v3 = OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView;
  if ((a1 & 1) != 0
    && (!*(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView)
     || !*(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon)))
  {
    sub_100148888();
    sub_100148B88();
    v3 = OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView;
  }
  v4 = *(void **)(v1 + v3);
  if (v4)
    objc_msgSend(v4, "setHidden:", (a1 & 1) == 0);
  result = *(id *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon);
  if (result)
  {
    if ((a1 & 1) != 0)
      v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_isCommunicationSafetyEnabled);
    else
      v6 = 1;
    return objc_msgSend(result, "setHidden:", v6);
  }
  return result;
}

void sub_100148888()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  unsigned __int8 *v18;
  id v19;
  _QWORD v20[4];

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v3 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v4 = sub_100109754(v3, 40);
  *(_OWORD *)(v4 + 16) = xmmword_1002420C0;
  v5 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  *(_QWORD *)(v4 + 32) = v5;
  v20[0] = v4;
  specialized Array._endMutation()(v5, v6);
  sub_10010BBE8(0, &qword_1002D8CF8, UIVisualEffect_ptr);
  isa = sub_10010983C().super.isa;
  sub_1001094F4();
  objc_msgSend(v2, "setBackgroundEffects:", isa);

  v9 = sub_10010A1B8(v8, "layer");
  objc_msgSend(v9, "setMasksToBounds:", 1);

  sub_1001360DC(v2, "setTranslatesAutoresizingMaskIntoConstraints:");
  v10 = v2;
  sub_100148340((uint64_t)v2);
  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  sub_10017BD1C(0x73616C732E657965, 0xEE006C6C69662E68);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 25.0);
    v14 = objc_msgSend(v12, "imageWithSymbolConfiguration:", v13);

  }
  else
  {
    v14 = 0;
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v14);

  v16 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  sub_10010E3C0(v15, "setTintColor:");

  sub_1001360DC(v15, "setUserInteractionEnabled:");
  sub_1001360DC(v15, "setTranslatesAutoresizingMaskIntoConstraints:");
  objc_msgSend(v15, "setHidden:", v1[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_isCommunicationSafetyEnabled]);
  v17 = v15;
  sub_10014834C((uint64_t)v15);
  v20[3] = type metadata accessor for BlurrableAvatarView();
  v20[0] = v1;
  objc_allocWithZone((Class)UITapGestureRecognizer);
  v18 = v1;
  v19 = sub_100135508(v20, (uint64_t)"didTapWithSender:");
  objc_msgSend(v10, "addGestureRecognizer:", v19);
  objc_msgSend(v18, "addSubview:", v10);
  sub_10010E3C0(v18, "addSubview:");

}

void sub_100148B88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  Class isa;
  id v50;

  v2 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView);
  if (v2)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon);
    if (v3)
    {
      objc_opt_self(NSLayoutConstraint);
      v4 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
      v5 = sub_100109754(v4, 96);
      *(_OWORD *)(v5 + 16) = xmmword_100242310;
      v6 = v2;
      v7 = v3;
      v8 = sub_10010A1B8((uint64_t)v7, "topAnchor");
      v9 = sub_10010BC5C((uint64_t)v8, "topAnchor");
      v10 = sub_10014900C((uint64_t)v9, "constraintEqualToAnchor:");
      sub_100149028();

      *(_QWORD *)(v5 + 32) = v1;
      v12 = sub_10010A1B8(v11, "bottomAnchor");
      v13 = sub_10010BC5C((uint64_t)v12, "bottomAnchor");
      v14 = sub_100148FF8((uint64_t)v13);
      sub_100149028();

      *(_QWORD *)(v5 + 40) = v1;
      v16 = sub_10010A1B8(v15, "leadingAnchor");
      v17 = sub_10010BC5C((uint64_t)v16, "leadingAnchor");
      v18 = sub_100148FF8((uint64_t)v17);
      sub_100149028();

      *(_QWORD *)(v5 + 48) = v1;
      v20 = sub_10010A1B8(v19, "trailingAnchor");
      v21 = sub_10010BC5C((uint64_t)v20, "trailingAnchor");
      v22 = sub_100148FF8((uint64_t)v21);
      sub_100149028();

      *(_QWORD *)(v5 + 56) = v1;
      v24 = sub_100136368(v23, "centerXAnchor");
      v25 = sub_10010BC5C((uint64_t)v24, "centerXAnchor");
      v26 = sub_100148FF8((uint64_t)v25);
      sub_100149028();

      *(_QWORD *)(v5 + 64) = v1;
      v28 = sub_100136368(v27, "centerYAnchor");
      v29 = sub_10010BC5C((uint64_t)v28, "centerYAnchor");
      v30 = sub_100148FF8((uint64_t)v29);
      sub_100149028();

      *(_QWORD *)(v5 + 72) = v1;
      v32 = sub_100136368(v31, "widthAnchor");
      v33 = sub_10010BC5C((uint64_t)v32, "widthAnchor");
      v34 = sub_10014900C((uint64_t)v33, "constraintLessThanOrEqualToAnchor:");
      sub_100149028();

      *(_QWORD *)(v5 + 80) = v1;
      v36 = sub_100136368(v35, "heightAnchor");
      v37 = sub_10010BC5C((uint64_t)v36, "heightAnchor");
      v38 = objc_msgSend(v36, "constraintLessThanOrEqualToAnchor:", v37);

      *(_QWORD *)(v5 + 88) = v38;
      v41 = specialized Array._endMutation()(v39, v40);
      sub_10014904C(v41, (unint64_t *)&qword_1002DB440);
      isa = sub_10010983C().super.isa;
      v42 = sub_1001094F4();
      sub_100149040(v42, "activateConstraints:", v43, v44, v45, v46, v47, v48, (uint64_t)isa);

      sub_1001360F4(v50);
    }
  }
}

id sub_100148EA4()
{
  uint64_t v0;
  id result;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_isCommunicationSafetyEnabled) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_wantsBlur) = 0;
    return sub_1001487E0(0);
  }
  return result;
}

void sub_100148F18()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.BlurrableAvatarView", 33, "init(frame:)", 12, 0);
  __break(1u);
}

id sub_100148F50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlurrableAvatarView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BlurrableAvatarView()
{
  return objc_opt_self(_TtC13InCallService19BlurrableAvatarView);
}

id sub_100148FF8(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, *(SEL *)(v2 + 2128), a1);
}

id sub_10014900C(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id sub_100149018()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2128), v1);
}

void sub_100149028()
{
  void *v0;

}

id sub_100149030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(id *)(v1 + a1);
}

void sub_100149038()
{
  void *v0;

}

id sub_100149040(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  return objc_msgSend(v9, a2, a9);
}

uint64_t sub_10014904C(uint64_t a1, unint64_t *a2)
{
  _QWORD *v2;

  return sub_10010BBE8(0, a2, v2);
}

uint64_t AddCallControlService.controlEnabledPublisher.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t FaceTimeControlService.validityStatePublisher.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 24));
}

void MuteControlService.__allocating_init(call:)(void *a1)
{
  uint64_t v1;

  swift_allocObject(v1, 48, 7);
  MuteControlService.init(call:)(a1);
  sub_100109438();
}

_QWORD *MuteControlService.init(call:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  id v26;
  uint64_t v27;
  _QWORD v29[3];

  v2 = v1;
  v4 = sub_1001085C0(&qword_1002D91E8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  sub_10010BC88();
  v9 = v8 - v7;
  v10 = sub_100149758();
  __chkstk_darwin(v10, v11);
  sub_10010BC88();
  v14 = v13 - v12;
  v2[5] = &_swiftEmptySetSingleton;
  v2[4] = a1;
  LOBYTE(v29[0]) = 1;
  v15 = sub_1001085C0(&qword_1002D7E20);
  sub_10010BC64(v15);
  v16 = a1;
  v2[2] = CurrentValueSubject.init(_:)(v29);
  sub_100149330(v14);
  v17 = sub_1001085C0(&qword_1002D91F0);
  sub_10010BC64(v17);
  v18 = CurrentValueSubject.init(_:)(v14);
  v2[3] = v18;
  v29[0] = v18;
  sub_10010B56C(&qword_1002D91F8, &qword_1002D91F0);
  v20 = v19;
  sub_10010B874(&qword_1002D9200, 255, (uint64_t (*)(uint64_t))&type metadata accessor for MuteState);
  Publisher<>.removeDuplicates()(v17, v20, v21);
  v22 = swift_allocObject(&unk_10028A608, 24, 7);
  swift_weakInit(v22 + 16, v2);
  sub_10010B56C(&qword_1002D9208, &qword_1002D91E8);
  v24 = Publisher<>.sink(receiveValue:)(sub_1001494B4, v22, v4, v23);
  v25 = swift_release(v22);
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v9, v4, v25);
  swift_beginAccess(v2 + 5, v29, 33, 0);
  AnyCancellable.store(in:)(v2 + 5);
  swift_endAccess(v29);
  swift_release(v24);
  v26 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v27 = TUCallIsUplinkMutedChangedNotification;
  swift_retain(v2);
  objc_msgSend(v26, "addObserver:selector:name:object:", v2, "isUplinkMutedChanged:", v27, 0);

  swift_release(v2);
  return v2;
}

uint64_t sub_100149330@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  unsigned int v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = objc_msgSend(v1, "isUplinkMuted");
  v4 = sub_100149758();
  v5 = (unsigned int *)&enum case for MuteState.muted(_:);
  if (!v3)
    v5 = (unsigned int *)&enum case for MuteState.unmuted(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, *v5, v4);
}

uint64_t sub_100149390()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001493B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  id v10;
  char v11;
  _BYTE v13[24];

  v4 = type metadata accessor for MuteState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(id *)(Strong + 32);
    swift_release(v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for MuteState.muted(_:), v4);
    v11 = static MuteState.== infix(_:_:)(a1, v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v10, "setUplinkMuted:", v11 & 1);

  }
}

void sub_1001494B4(uint64_t a1)
{
  uint64_t v1;

  sub_1001493B4(a1, v1);
}

void sub_1001494BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  unsigned __int8 v10;
  id v11;
  _QWORD v12[4];

  v1 = sub_100149758();
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  sub_10010BC88();
  v6 = v5 - v4;
  v7 = *(_QWORD *)(v0 + 32);
  Notification.object.getter(v12);
  if (v12[3])
  {
    v8 = sub_10014971C();
    if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {
      v9 = v11;
      v10 = objc_msgSend(v11, "isEqualToCall:", v7);

      if ((v10 & 1) != 0)
      {
        sub_100149330(v6);
        CurrentValueSubject.send(_:)(v6);
        (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
      }
    }
  }
  else
  {
    sub_100137118((uint64_t)v12);
  }
}

uint64_t MuteControlService.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t MuteControlService.__deallocating_deinit()
{
  uint64_t v0;

  MuteControlService.deinit();
  return swift_deallocClassInstance(v0, 48, 7);
}

void sub_1001496B8(uint64_t a1, uint64_t a2)
{
  sub_10010B874(&qword_1002D9210, a2, (uint64_t (*)(uint64_t))type metadata accessor for MuteControlService);
}

uint64_t type metadata accessor for MuteControlService()
{
  return objc_opt_self(_TtC13InCallService18MuteControlService);
}

uint64_t sub_100149704()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 24));
}

uint64_t sub_100149710()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

unint64_t sub_10014971C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DA680;
  if (!qword_1002DA680)
  {
    v1 = objc_opt_self(TUCall);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DA680);
  }
  return result;
}

uint64_t sub_100149758()
{
  return type metadata accessor for MuteState(0);
}

id sub_100149760(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  id v5;
  objc_super v7;

  objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewController(0));
  v3 = v1;
  v4 = a1;
  *(_QWORD *)&v3[OBJC_IVAR___ICSVideoMessageRootViewController_player] = VideoMessagePlayerViewController.init(viewModel:)();

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for VideoMessageRootViewController();
  v5 = objc_msgSendSuper2(&v7, "initWithNibName:bundle:", 0, 0);

  return v5;
}

void sub_100149814()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/VideoMessageRootViewController.swift", 50, 2);
  __break(1u);
}

void sub_100149878()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  Class isa;

  v2 = sub_100149E80();
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlackColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = *(void **)&v0[OBJC_IVAR___ICSVideoMessageRootViewController_player];
  v6 = sub_10010E364();
  if (!v6)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = v6;
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v8 = sub_100149E80();
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v8;
  v10 = sub_10010E364();
  if (!v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v11 = v10;
  objc_msgSend(v9, "addSubview:", v10);

  objc_msgSend(v0, "addChildViewController:", v5);
  objc_msgSend(v5, "didMoveToParentViewController:", v0);
  v12 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100241800;
  v14 = sub_10010E364();
  if (!v14)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v15 = objc_msgSend(v14, "leadingAnchor");
  sub_100149EAC();
  v16 = sub_100149E80();
  if (!v16)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = v16;
  v18 = sub_100149EA4(v16);
  sub_10011B028();
  v20 = sub_10011AED4(v19, "leadingAnchor");
  sub_100149EB4();
  v21 = sub_100149E8C();
  sub_100149E9C();

  *(_QWORD *)(v13 + 32) = v1;
  v22 = sub_10010E364();
  if (!v22)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v23 = objc_msgSend(v22, "trailingAnchor");
  sub_100149EAC();
  v24 = sub_100149E80();
  if (!v24)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v25 = v24;
  v26 = sub_100149EA4(v24);
  sub_10011B028();
  v28 = sub_10011AED4(v27, "trailingAnchor");
  sub_100149EB4();
  v29 = sub_100149E8C();
  sub_100149E9C();

  *(_QWORD *)(v13 + 40) = v1;
  v30 = sub_10010E364();
  if (!v30)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v31 = objc_msgSend(v30, "topAnchor");
  sub_100149EAC();
  v32 = sub_100149E80();
  if (!v32)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v33 = v32;
  v34 = sub_100149EA4(v32);
  sub_10011B028();
  v36 = sub_10011AED4(v35, "topAnchor");
  sub_100149EB4();
  v37 = sub_100149E8C();
  sub_100149E9C();

  *(_QWORD *)(v13 + 48) = v1;
  v38 = sub_10010E364();
  if (!v38)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v39 = v38;
  v40 = objc_msgSend(v38, "bottomAnchor");

  v41 = sub_100149E80();
  if (v41)
  {
    v42 = v41;
    v43 = (void *)objc_opt_self(NSLayoutConstraint);
    v44 = objc_msgSend(v42, "safeAreaLayoutGuide");

    v45 = objc_msgSend(v44, "bottomAnchor");
    v46 = objc_msgSend(v40, "constraintEqualToAnchor:", v45);

    *(_QWORD *)(v13 + 56) = v46;
    specialized Array._endMutation()(v47, v48);
    sub_100149E44();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v13);
    objc_msgSend(v43, "activateConstraints:", isa);

    return;
  }
LABEL_25:
  __break(1u);
}

void sub_100149CB4()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.VideoMessageRootViewController", 44, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_100149D04()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoMessageRootViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VideoMessageRootViewController()
{
  return objc_opt_self(ICSVideoMessageRootViewController);
}

void sub_100149D64(uint64_t a1, uint64_t a2)
{
  id v2;
  id v3;
  uint64_t v4;

  if (a2 != 2)
  {
    v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v3 = objc_msgSend(v2, "delegate");

    if (v3)
    {
      v4 = objc_opt_self(ICSApplicationDelegate);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0), "dismissVideoMessageSceneSession");
      swift_unknownObjectRelease(v3);
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_100149E44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB440;
  if (!qword_1002DB440)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DB440);
  }
  return result;
}

id sub_100149E80()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1912));
}

id sub_100149E8C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2128), v1);
}

void sub_100149E9C()
{
  void *v0;

}

id sub_100149EA4(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2784));
}

void sub_100149EAC()
{
  void *v0;

}

void sub_100149EB4()
{
  void *v0;

}

uint64_t UniqueAddress._placeholder.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*UniqueAddress._placeholder.modify())(_QWORD, _QWORD)
{
  return FactoryOutcome.rawValue.getter;
}

uint64_t UniqueAddress.wrappedValue.getter()
{
  uint64_t v0;

  return v0;
}

ValueMetadata *type metadata accessor for UniqueAddress()
{
  return &type metadata for UniqueAddress;
}

id sub_100149EEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v16;

  v2 = type metadata accessor for VideoMessagePlayerViewModel.PlayerSpatiality(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1001085C0((uint64_t *)&unk_1002DB390);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, a1, v11);
  sub_100108600((uint64_t)v10, 0, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for VideoMessagePlayerViewModel.PlayerSpatiality.remote(_:), v2);
  v12 = objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewModel(0));
  v13 = (void *)VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)(v10, v6);
  v14 = objc_allocWithZone((Class)type metadata accessor for VideoMessageRootViewController());
  return sub_100149760(v13);
}

double sub_10014A0DC()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage);
}

id sub_10014A130(double a1)
{
  char *v1;

  *(double *)&v1[OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage] = a1;
  return objc_msgSend(v1, "setNeedsDisplay");
}

id sub_10014A14C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth] = 0x4020000000000000;
  v1 = OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor;
  v2 = (void *)objc_opt_self(UIColor);
  v3 = v0;
  v4 = objc_msgSend(v2, "systemDarkGreenColor");
  v5 = sub_10014AD74(v4);

  *(_QWORD *)&v0[v1] = v5;
  v6 = OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor;
  v7 = objc_msgSend(v2, "systemGreenColor");
  v8 = sub_10014AD74(v7);

  *(_QWORD *)&v3[v6] = v8;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for PHRingLayer();
  return objc_msgSendSuper2(&v10, "init");
}

char *sub_10014A270(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v26;
  _BYTE v27[32];
  objc_super v28;

  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth] = 0x4020000000000000;
  v3 = OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v1;
  v6 = objc_msgSend(v4, "systemDarkGreenColor");
  v7 = sub_10014AD74(v6);

  *(_QWORD *)&v1[v3] = v7;
  v8 = OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor;
  v9 = objc_msgSend(v4, "systemGreenColor");
  v10 = sub_10014AD74(v9);

  *(_QWORD *)&v5[v8] = v10;
  v11 = a1[3];
  v12 = sub_10011ACB0(a1, v11);
  v13 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v11);
  v14 = (objc_class *)type metadata accessor for PHRingLayer();
  v28.receiver = v5;
  v28.super_class = v14;
  v15 = objc_msgSendSuper2(&v28, "initWithLayer:", v13);
  swift_unknownObjectRelease(v13);
  sub_10011D33C((uint64_t)a1, (uint64_t)v27);
  v16 = (char *)v15;
  if ((swift_dynamicCast(&v26, v27, (char *)&type metadata for Any + 8, v14, 6) & 1) != 0)
  {
    v17 = (char *)v26;
    objc_msgSend(v26, "percentage");
    v19 = v18;

    *(_QWORD *)&v16[OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage] = v19;
    *(_QWORD *)&v16[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth] = *(_QWORD *)&v17[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth];
    v20 = *(void **)&v17[OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor];
    v21 = *(void **)&v16[OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor];
    *(_QWORD *)&v16[OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor] = v20;
    v22 = v20;

    v23 = *(id *)&v17[OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor];
    sub_100110DC0(a1);
    v24 = *(void **)&v16[OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor];
    *(_QWORD *)&v16[OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor] = v23;

  }
  else
  {

    sub_100110DC0(a1);
  }
  return v16;
}

void sub_10014A4C8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth] = 0x4020000000000000;
  v1 = OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor;
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "systemDarkGreenColor");
  v4 = objc_msgSend(v3, "CGColor");

  *(_QWORD *)&v0[v1] = v4;
  v5 = OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor;
  v6 = objc_msgSend(v2, "systemGreenColor");
  v7 = objc_msgSend(v6, "CGColor");

  *(_QWORD *)&v0[v5] = v7;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "InCallService/PHRingLayer.swift", 31, 2);
  __break(1u);
}

uint64_t sub_10014A5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  id v5;
  void *ObjCClassFromMetadata;
  NSString v7;
  objc_super v9;

  sub_10014AD40();
  v4 = v4 && v2 == v3;
  if (v4 || (sub_10014AD0C(v1, v2) & 1) != 0)
    return 1;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v0);
  v7 = String._bridgeToObjectiveC()();
  v9.receiver = ObjCClassFromMetadata;
  v9.super_class = (Class)&OBJC_METACLASS____TtC13InCallService11PHRingLayer;
  v5 = objc_msgSendSuper2(&v9, "needsDisplayForKey:", v7);

  return (uint64_t)v5;
}

id sub_10014A6D8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  id v10;
  void *v11;
  Class isa;
  NSString v13;
  objc_super v15;

  v3 = v2;
  sub_10014AD40();
  v8 = v8 && v6 == v7;
  if (v8 || (sub_10014AD0C(a1, a2) & 1) != 0)
  {
    sub_10014ACC4();
    swift_bridgeObjectRetain(a2);
    v9 = sub_10018514C(a1, a2);
    v10 = objc_msgSend(v3, "presentationLayer");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "percentage");

    }
    else
    {
      objc_msgSend(v3, "percentage");
    }
    isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v9, "setFromValue:", isa);

  }
  else
  {
    v13 = String._bridgeToObjectiveC()();
    v15.receiver = v3;
    v15.super_class = (Class)type metadata accessor for PHRingLayer();
    v9 = objc_msgSendSuper2(&v15, "actionForKey:", v13);

  }
  return v9;
}

void sub_10014A864(CGContext *a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  id v11;
  void *v12;
  char *v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  id v18;
  CGColor *v19;
  id v20;
  CGColor *v21;
  CGFloat v22;
  CGFloat v23;
  void *v24;
  double v25;
  id v26;
  SEL v27;
  id v28;
  const CGPath *v29;
  double v30;
  CGFloat v31;
  id v32;
  const CGPath *v33;
  double v34;
  double v35;
  objc_super v36;
  CGRect v37;
  CGRect v38;

  v3 = v1;
  v5 = type metadata accessor for CGPathFillRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (objc_class *)type metadata accessor for PHRingLayer();
  v36.receiver = v3;
  v36.super_class = v10;
  -[CGContext drawInContext:](&v36, "drawInContext:", a1);
  v11 = sub_10014AD00();
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "bounds");
    sub_10014AD7C();

  }
  else
  {
    objc_msgSend(v3, "bounds");
    sub_10014AD7C();
  }
  v13 = (char *)sub_10014AD00();
  if (v13)
  {
    v35 = *(double *)&v13[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth];

  }
  else
  {
    v35 = *(double *)&v3[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth];
  }
  v14 = sub_10014AD00();
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "percentage");
    v34 = v16;

  }
  else
  {
    objc_msgSend(v3, "percentage");
    v34 = v17;
  }
  v18 = sub_10014AD00();
  if (v18)
  {
    v19 = (CGColor *)sub_10014AD90((uint64_t)v18, OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor);

  }
  else
  {
    v19 = (CGColor *)*(id *)&v3[OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor];
  }
  v20 = sub_10014AD00();
  if (v20)
  {
    v21 = (CGColor *)sub_10014AD90((uint64_t)v20, OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor);

  }
  else
  {
    v21 = (CGColor *)*(id *)&v3[OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor];
  }
  v37.origin.x = sub_10014AD2C();
  v22 = CGRectGetMaxX(v37) * 0.5;
  v38.origin.x = sub_10014AD2C();
  v23 = CGRectGetMaxY(v38) * 0.5;
  sub_10014AD60();
  v24 = (void *)objc_opt_self(UIBezierPath);
  v25 = sub_10014AD2C();
  v28 = objc_msgSend(v26, v27, v25);
  v29 = (const CGPath *)objc_msgSend(v28, "CGPath");
  CGContextSaveGState(a1);
  CGContextAddPath(a1, v29);
  CGContextSetFillColorWithColor(a1, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for CGPathFillRule.winding(_:), v5);
  CGContextRef.fillPath(using:)(v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  CGContextRestoreGState(a1);
  v30 = sub_10014AD60();
  v31 = v35;
  v32 = objc_msgSend(v24, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, v22, v23, v30 * 0.5 - v35 * 0.5, -1.57079633, (v34 * 360.0 + -90.0) * 0.0174532925);
  v33 = (const CGPath *)objc_msgSend(v32, "CGPath");
  CGContextSaveGState(a1);
  CGContextAddPath(a1, v33);
  CGContextSetStrokeColorWithColor(a1, v19);
  CGContextSetLineCap(a1, kCGLineCapRound);
  CGContextSetLineWidth(a1, v31);
  CGContextStrokePath(a1);
  CGContextSetShouldAntialias(a1, 1);
  CGContextRestoreGState(a1);

}

id sub_10014AC3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PHRingLayer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PHRingLayer()
{
  return objc_opt_self(_TtC13InCallService11PHRingLayer);
}

unint64_t sub_10014ACC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D86F0;
  if (!qword_1002D86F0)
  {
    v1 = objc_opt_self(CABasicAnimation);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D86F0);
  }
  return result;
}

id sub_10014AD00()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2608));
}

uint64_t sub_10014AD0C(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x61746E6563726570, 0xEA00000000006567, 0);
}

double sub_10014AD2C()
{
  double v0;

  return v0;
}

double sub_10014AD60()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v5;

  v5.origin.x = v0;
  v5.origin.y = v1;
  v5.size.width = v2;
  v5.size.height = v3;
  return CGRectGetWidth(v5);
}

id sub_10014AD74(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2912));
}

id sub_10014AD90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return *(id *)(a1 + a2);
}

uint64_t *PosterSnapshotService.shared.unsafeMutableAddressor()
{
  if (qword_1002D72F0 != -1)
    swift_once(&qword_1002D72F0, sub_10014ADDC);
  return &static PosterSnapshotService.shared;
}

uint64_t sub_10014ADDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for PosterSnapshotService();
  v1 = swift_allocObject(v0, 128, 15);
  result = sub_10014C59C();
  static PosterSnapshotService.shared = v1;
  return result;
}

uint64_t static PosterSnapshotService.shared.getter()
{
  if (qword_1002D72F0 != -1)
    swift_once(&qword_1002D72F0, sub_10014ADDC);
  return swift_retain(static PosterSnapshotService.shared);
}

uint64_t PosterSnapshotService.prewarmSnapshot(call:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[5] = static MainActor.shared.getter(v3);
  v2[6] = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[7] = v4;
  return sub_10014C9C8();
}

uint64_t sub_10014AEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  Class isa;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  __n128 v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v1 = sub_10014C608(*(void **)(v0 + 24));
  if (v1)
  {
    v2 = v1;
    if (*(_QWORD *)(v1 + 16))
    {
      v3 = *(_QWORD *)(v0 + 24);
      swift_bridgeObjectRetain(*(_QWORD *)(v1 + 40));
      swift_bridgeObjectRelease(v2);
      v4 = objc_msgSend((id)objc_opt_self(CNContactStoreConfiguration), "tu_contactStoreConfigurationForCall:", v3);
      v5 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "initWithConfiguration:", v4);
      *(_QWORD *)(v0 + 64) = v5;

      v6 = String._bridgeToObjectiveC()();
      sub_1001094F4();
      v7 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
      v8 = swift_allocObject(v7, 48, 7);
      *(_OWORD *)(v8 + 16) = xmmword_100241810;
      v9 = (void *)CNContactWallpaperKey;
      v10 = (void *)CNContactWallpaperMetadataKey;
      *(_QWORD *)(v8 + 32) = CNContactWallpaperKey;
      *(_QWORD *)(v8 + 40) = v10;
      specialized Array._endMutation()(v8, v11);
      v12 = v9;
      v13 = v10;
      sub_1001085C0(&qword_1002D93E0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      sub_1001094F4();
      *(_QWORD *)(v0 + 16) = 0;
      v15 = objc_msgSend(v5, "unifiedContactWithIdentifier:keysToFetch:error:", v6, isa, v0 + 16);
      *(_QWORD *)(v0 + 72) = v15;

      v16 = *(void **)(v0 + 16);
      if (v15)
      {
        v17 = dword_1002D93EC;
        v18 = v16;
        v19 = (_QWORD *)swift_task_alloc(v17);
        *(_QWORD *)(v0 + 80) = v19;
        *v19 = v0;
        v19[1] = sub_10014B160;
        return PosterSnapshotService.takeSnapshot(contact:)((uint64_t)v15);
      }
      v22 = *(_QWORD *)(v0 + 40);
      v23 = v16;
      swift_release(v22);
      v24 = _convertNSErrorToError(_:)(v16);

      swift_willThrow(v25);
      swift_errorRelease(v24);
    }
    else
    {
      swift_release(*(_QWORD *)(v0 + 40));
      swift_bridgeObjectRelease(v2);
    }
  }
  else
  {
    v21 = swift_release(*(_QWORD *)(v0 + 40));
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v21);
}

uint64_t sub_10014B160(void *a1)
{
  uint64_t v1;
  _QWORD *v3;

  sub_10014CAF8();
  sub_10011DB9C(*(_QWORD *)(v1 + 80), v3);

  return sub_10014C9C8();
}

uint64_t sub_10014B1CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 40);

  swift_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PosterSnapshotService.prewarmSnapshot(contact:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1002D93EC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10014B28C;
  return PosterSnapshotService.takeSnapshot(contact:)(a1);
}

uint64_t sub_10014B28C(void *a1)
{
  uint64_t v1;

  sub_100110EA8();

  return sub_100110E88(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t PosterSnapshotService.takeSnapshot(contact:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_10014CA40((uint64_t)sub_10014B2CC, v1);
}

uint64_t sub_10014B2CC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = objc_msgSend(*(id *)(v0 + 16), "wallpaper");
  *(_QWORD *)(v0 + 32) = v1;
  if (!v1)
    return sub_10014CA14(0, *(uint64_t (**)(void))(v0 + 8));
  v2 = v1;
  v3 = objc_msgSend(*(id *)(v0 + 16), "identifier");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *(_QWORD *)(v0 + 40) = v6;
  v7 = objc_msgSend(v2, "posterArchiveData");
  v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v10;
  sub_10014C65C(v2);
  *(_QWORD *)(v0 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1002D93FC);
  *(_QWORD *)(v0 + 72) = v12;
  *v12 = v0;
  v12[1] = sub_10014B3D0;
  return sub_10014B4A0(v4, v6, v8, v10);
}

uint64_t sub_10014B3D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  v4 = *(_QWORD *)(*v1 + 48);
  v5 = *(_QWORD *)(*v1 + 56);
  v6 = *(_QWORD *)(*v1 + 24);
  if (*(_QWORD *)(*v1 + 64))
    v7 = *(_QWORD *)(v2 + 64);
  else
    v7 = 0xE000000000000000;
  *(_QWORD *)(v2 + 80) = a1;
  swift_task_dealloc(v3);
  sub_10011ABA0(v4, v5);
  sub_100109558();
  swift_bridgeObjectRelease(v7);
  return swift_task_switch(sub_10014B46C, v6, 0);
}

uint64_t sub_10014B46C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80));
}

uint64_t sub_10014B4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  v6 = sub_1001085C0(&qword_1002D84A0);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10014CB18();
  return sub_100110E68();
}

uint64_t sub_10014B524()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v4;
  NSData v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  _DWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_100110F94();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + 112);
  *(_QWORD *)(v0 + 144) = v1;
  if (v1)
  {
    sub_10014CB24();
    v2 = (_QWORD *)sub_10010971C();
    *(_QWORD *)(v0 + 152) = v2;
    sub_1001085C0((uint64_t *)&unk_1002D9540);
    *v2 = v0;
    v2[1] = sub_10014B864;
    return sub_10014C9D8();
  }
  v4 = *(void **)(v0 + 112);
  objc_opt_self(PRSPosterArchiver);
  v5.super.isa = sub_10014CA48().super.isa;
  *(_QWORD *)(v0 + 72) = 0;
  v6 = sub_10014CA98((uint64_t)v5.super.isa, "unarchiveConfigurationFromData:error:");
  sub_10014CAEC((uint64_t)v6);
  v7 = *(void **)(v0 + 72);
  if (v4)
  {
    v8 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 96);
    v9 = *(void **)(v0 + 104);
    static TaskPriority.userInitiated.getter(v7);
    v11 = type metadata accessor for TaskPriority(0);
    v12 = sub_10014CA78(v11);
    v13 = (_QWORD *)sub_10014CB0C((uint64_t)&unk_10028A750);
    v13[2] = v8;
    v13[3] = v12;
    v13[4] = v8;
    v13[5] = v10;
    v13[6] = v9;
    v13[7] = v4;
    sub_10014CB2C();
    swift_bridgeObjectRetain(v9);
    v14 = v4;
    sub_1001110F0();
    sub_10014CA58(v15);
    v16 = *(NSObject **)(v8 + 112);
    *(_QWORD *)(v0 + 168) = v16;
    if (v16)
    {
      sub_10014CB24();
      v17 = (_QWORD *)sub_10010971C();
      *(_QWORD *)(v0 + 176) = v17;
      sub_1001085C0((uint64_t *)&unk_1002D9540);
      *v17 = v0;
      v17[1] = sub_10014BBB4;
      return sub_10014C9D8();
    }
    sub_10014C9F4();
    sub_10014CA68();
    sub_10014CAB4();
    sub_10014CAD4();

    sub_100109558();
    goto LABEL_13;
  }
  v18 = v7;
  v19 = _convertNSErrorToError(_:)(v7);

  swift_willThrow(v20);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v21 = sub_100109570();
  v16 = sub_100108664(v21, (uint64_t)&unk_1002E2CC8);
  sub_1001360B8();
  v22 = sub_1001360B8();
  Logger.logObject.getter(v22, v23);
  v24 = sub_1001096F0();
  if (!os_log_type_enabled(v16, v24))
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();
LABEL_13:

    goto LABEL_14;
  }
  v25 = (_DWORD *)sub_1001094C8(12);
  v31 = sub_1001094C8(32);
  *v25 = 136315138;
  *(_QWORD *)(v0 + 80) = v19;
  sub_1001360B8();
  sub_1001085C0(&qword_1002D8520);
  v26 = sub_10014CAE0();
  v29 = sub_10014CAA8(v26, v27, v28);
  sub_10014CA28(v29);
  swift_bridgeObjectRelease(v0 + 80);
  sub_100135EB4();
  sub_100135EB4();
  sub_10014CAC8((void *)&_mh_execute_header, v16, v24, "PosterSnapshotService: unarchiving configuration error: %s");
  sub_100109598(v31, v30, (uint64_t)&type metadata for Any + 8);
  sub_100109440(v31);
  sub_100109440((uint64_t)v25);

  sub_100135EB4();
LABEL_14:
  sub_10014CAC0();
  return sub_10014C9AC(0, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10014B864()
{
  uint64_t v0;
  _QWORD *v1;

  sub_10014CAF8();
  sub_10011DB9C(*(_QWORD *)(v0 + 152), v1);

  sub_10014CB18();
  return sub_10014C9C8();
}

uint64_t sub_10014B8D4()
{
  uint64_t v0;
  void *v1;
  NSData v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD *v14;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  _DWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_100110F94();
  swift_release(*(_QWORD *)(v0 + 144));
  v1 = *(void **)(v0 + 112);
  objc_opt_self(PRSPosterArchiver);
  v2.super.isa = sub_10014CA48().super.isa;
  *(_QWORD *)(v0 + 72) = 0;
  v3 = sub_10014CA98((uint64_t)v2.super.isa, "unarchiveConfigurationFromData:error:");
  sub_10014CAEC((uint64_t)v3);
  v4 = *(void **)(v0 + 72);
  if (v1)
  {
    v5 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 104);
    static TaskPriority.userInitiated.getter(v4);
    v8 = type metadata accessor for TaskPriority(0);
    v9 = (void *)sub_10014CA78(v8);
    v10 = (_QWORD *)sub_10014CB0C((uint64_t)&unk_10028A750);
    v10[2] = v5;
    v10[3] = v9;
    v10[4] = v5;
    v10[5] = v7;
    v10[6] = v6;
    v10[7] = v1;
    sub_10014CB2C();
    swift_bridgeObjectRetain(v6);
    v11 = v1;
    sub_1001110F0();
    sub_10014CA58(v12);
    v13 = *(NSObject **)(v5 + 112);
    *(_QWORD *)(v0 + 168) = v13;
    if (v13)
    {
      sub_10014CB24();
      v14 = (_QWORD *)sub_10010971C();
      *(_QWORD *)(v0 + 176) = v14;
      sub_1001085C0((uint64_t *)&unk_1002D9540);
      *v14 = v0;
      v14[1] = sub_10014BBB4;
      return sub_10014C9D8();
    }
    sub_10014C9F4();
    sub_10014CA68();
    sub_10014CAB4();
    sub_10014CAD4();

    sub_100109558();
    goto LABEL_10;
  }
  v16 = v4;
  v17 = _convertNSErrorToError(_:)(v4);

  swift_willThrow(v18);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v19 = sub_100109570();
  v13 = sub_100108664(v19, (uint64_t)&unk_1002E2CC8);
  sub_1001360B8();
  v20 = sub_1001360B8();
  Logger.logObject.getter(v20, v21);
  v22 = sub_1001096F0();
  if (!os_log_type_enabled(v13, v22))
  {
    sub_100135EB4();
    sub_100135EB4();
    sub_100135EB4();
LABEL_10:

    goto LABEL_11;
  }
  v23 = (_DWORD *)sub_1001094C8(12);
  v29 = sub_1001094C8(32);
  *v23 = 136315138;
  *(_QWORD *)(v0 + 80) = v17;
  sub_1001360B8();
  sub_1001085C0(&qword_1002D8520);
  v24 = sub_10014CAE0();
  v27 = sub_10014CAA8(v24, v25, v26);
  sub_10014CA28(v27);
  swift_bridgeObjectRelease(v0 + 80);
  sub_100135EB4();
  sub_100135EB4();
  sub_10014CAC8((void *)&_mh_execute_header, v13, v22, "PosterSnapshotService: unarchiving configuration error: %s");
  sub_100109598(v29, v28, (uint64_t)&type metadata for Any + 8);
  sub_100109440(v29);
  sub_100109440((uint64_t)v23);

  sub_100135EB4();
LABEL_11:
  sub_10014CAC0();
  return sub_10014C9AC(0, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10014BBB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *(_QWORD *)(v3 + 168);
  sub_10011DB9C(*(_QWORD *)(v3 + 176), &v3);
  swift_release(v1);
  sub_10014CB18();
  return sub_10014C9C8();
}

uint64_t sub_10014BC34()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v4 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = 0;
  swift_release(v4);
  swift_beginAccess(v1 + 120, v0 + 16, 33, 0);
  v5 = *(void **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain(v6);
  if (v2)
  {
    sub_1001772B4(v3, (uint64_t)v2, v7, v6);
    swift_endAccess(v0 + 16);
    sub_100109544();
  }
  else
  {
    sub_100176FF4(v7, v6);
    v9 = v8;
    swift_endAccess(v0 + 16);
    sub_100109544();

    v5 = v9;
  }

  sub_10014CAC0();
  return (*(uint64_t (**)(void *))(v0 + 8))(v2);
}

uint64_t sub_10014BD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[5] = a1;
  return swift_task_switch(sub_10014BD60, a4, 0);
}

uint64_t sub_10014BD60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  swift_beginAccess(v3 + 120, v0 + 16, 0, 0);
  v4 = *(_QWORD *)(v3 + 120);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v4);
  v5 = sub_10011B278(v1, v2, v4);
  v7 = v6;
  sub_1001094F4();
  v8 = sub_100109544();
  if (v7)
  {
    if (v5 == NSObject.hashValue.getter(v8))
    {
      v9 = *(uint64_t **)(v0 + 40);
      *v9 = v5;
      v9[1] = (uint64_t)v7;
      return sub_1001095F4(*(uint64_t (**)(void))(v0 + 8));
    }

  }
  v11 = (_QWORD *)swift_task_alloc(dword_1002D942C);
  *(_QWORD *)(v0 + 80) = v11;
  *v11 = v0;
  v11[1] = sub_10014BE34;
  return sub_10014BEE0(*(_QWORD *)(v0 + 72));
}

uint64_t sub_10014BE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc(v2);
  sub_10014CB18();
  return sub_100110E68();
}

uint64_t sub_10014BE88()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 88);
  if (v1)
  {
    v2 = *(uint64_t **)(v0 + 40);
    v3 = v1;
    v4 = NSObject.hashValue.getter();

    *v2 = v4;
    v2[1] = (uint64_t)v1;
  }
  else
  {
    v5 = *(_QWORD **)(v0 + 40);
    *v5 = 0;
    v5[1] = 0;
  }
  return sub_1001095F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10014BEE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return sub_10014CA40((uint64_t)sub_10014BEF4, v1);
}

uint64_t sub_10014BEF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;

  v2 = v0[4];
  v1 = v0[5];
  v3 = objc_msgSend((id)objc_opt_self(PRUISPosterSnapshotController), "sharedIncomingCallSnapshotController");
  v0[6] = v3;
  v4 = objc_msgSend(objc_allocWithZone((Class)PRPosterSnapshotDefinition), "initWithUniqueIdentifier:includeHeaderElements:includesComplications:layerSet:isUnlocked:renderingContent:renderingMode:previewContent:", PRPosterSnapshotDefinitionIdentifierIncomingCallPosterContentsExcludingBackground, 0, 0, 1, 1, 0, 1, 1);
  v0[7] = v4;
  v5 = objc_msgSend((id)objc_opt_self(PRUISPosterSnapshotRequest), "snapshotRequestForPRSPosterConfiguration:definition:interfaceOrientation:", v2, v4, 1);
  v0[8] = v5;
  v6 = sub_10014C78C();
  v7 = swift_task_alloc(32);
  v0[9] = v7;
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v5;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[10] = v8;
  v9 = sub_10014C7D0();
  *v8 = v0;
  v8[1] = sub_10014C060;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, v1, v6, 0xD000000000000025, 0x80000001001F30A0, sub_10014C7C8, v7, v9);
}

uint64_t sub_10014C060()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 40);
    v5 = sub_10014C180;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 40);
    swift_task_dealloc(*(_QWORD *)(v2 + 72));
    v5 = sub_10014C0D4;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_10014C0D4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(v1, "floatingLayerImage");
  v4 = *(void **)(v0 + 56);
  v3 = *(void **)(v0 + 64);
  v5 = *(void **)(v0 + 48);
  if (v2)
  {
    v6 = v2;
    v7 = objc_msgSend((id)objc_opt_self(PHImageUtilities), "trimmedImageByTrimmingTransparentPixelsFromImage:", v2);

  }
  else
  {

    v7 = 0;
  }
  return sub_10014CA14((uint64_t)v7, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10014C180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  void *v12;
  uint8_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  void *v20;

  sub_100110F94();
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v1 = *(_QWORD *)(v0 + 88);
  v2 = sub_100109570();
  v3 = sub_100108664(v2, (uint64_t)&unk_1002E2CC8);
  swift_errorRetain(v1);
  v4 = swift_errorRetain(v1);
  v5 = v3;
  Logger.logObject.getter(v4, v6);
  v7 = sub_1001096F0();
  v8 = os_log_type_enabled(v3, v7);
  v9 = *(_QWORD *)(v0 + 88);
  v11 = *(NSObject **)(v0 + 56);
  v10 = *(void **)(v0 + 64);
  v12 = *(void **)(v0 + 48);
  if (v8)
  {
    v20 = *(void **)(v0 + 64);
    v13 = (uint8_t *)sub_1001094C8(12);
    v19 = v12;
    v14 = (_QWORD *)sub_1001094C8(8);
    *(_DWORD *)v13 = 138412290;
    sub_1001360B8();
    v15 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v0 + 24) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v13 + 4, v13 + 12);
    *v14 = v15;
    sub_100135EB4();
    sub_100135EB4();
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "PosterSnapshotService: PosterKit snapshot failed with error: %@", v13, 0xCu);
    v16 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v14, v17, v16);
    sub_100109440((uint64_t)v14);
    sub_100109440((uint64_t)v13);

  }
  else
  {

    sub_100135EB4();
    sub_100135EB4();
    v11 = v5;
  }
  sub_100135EB4();

  return sub_10014C9AC(0, *(uint64_t (**)(void))(v0 + 8));
}

void sub_10014C324(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[5];
  uint64_t v15;

  v6 = sub_1001085C0(&qword_1002D9528);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_10028A700, v11 + v8, v10 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10014C870;
  v15 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10014C4D0;
  aBlock[3] = &unk_10028A718;
  v13 = _Block_copy(aBlock);
  objc_msgSend(a2, "executeSnapshotRequest:completion:", a3, v13, swift_release(v15).n128_f64[0]);
  _Block_release(v13);
}

void sub_10014C45C(uint64_t a1, void *a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  if (a2)
  {
    v6 = a2;
    v3 = a2;
    v4 = sub_1001085C0(&qword_1002D9528);
    CheckedContinuation.resume(returning:)(&v6, v4);
  }
  else if (a3)
  {
    v6 = a3;
    swift_errorRetain(a3);
    v5 = sub_1001085C0(&qword_1002D9528);
    CheckedContinuation.resume(throwing:)(&v6, v5);
  }
}

void sub_10014C4D0(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7;
  void (*v8)(id, void *, void *);
  id v9;
  id v10;
  id v11;

  v8 = *(void (**)(id, void *, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v11 = a2;
  v9 = a3;
  v10 = a4;
  v8(v11, a3, a4);
  swift_release(v7);

}

uint64_t PosterSnapshotService.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t PosterSnapshotService.__deallocating_deinit()
{
  uint64_t v0;

  PosterSnapshotService.deinit();
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10014C59C()
{
  uint64_t v0;

  swift_defaultActor_initialize(v0);
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, &type metadata for String, &type metadata for PosterSnapshotService.Snapshot, &protocol witness table for String);
  return v0;
}

uint64_t PosterSnapshotService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10014C5F0()
{
  return PosterSnapshotService.unownedExecutor.getter();
}

uint64_t sub_10014C608(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, "contactIdentifiers");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);

  return v3;
}

uint64_t sub_10014C65C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, "extensionBundleID");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

uint64_t type metadata accessor for PosterSnapshotService()
{
  return objc_opt_self(_TtC13InCallService21PosterSnapshotService);
}

_QWORD *initializeBufferWithCopyOfBuffer for PosterSnapshotService.Snapshot(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for PosterSnapshotService.Snapshot(uint64_t a1)
{

}

_QWORD *assignWithCopy for PosterSnapshotService.Snapshot(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for PosterSnapshotService.Snapshot(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for PosterSnapshotService.Snapshot()
{
  return &type metadata for PosterSnapshotService.Snapshot;
}

unint64_t sub_10014C78C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D9510;
  if (!qword_1002D9510)
  {
    v1 = type metadata accessor for PosterSnapshotService();
    result = swift_getWitnessTable(&protocol conformance descriptor for PosterSnapshotService, v1);
    atomic_store(result, (unint64_t *)&qword_1002D9510);
  }
  return result;
}

void sub_10014C7C8(uint64_t a1)
{
  uint64_t v1;

  sub_10014C324(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_10014C7D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D9518;
  if (!qword_1002D9518)
  {
    v1 = objc_opt_self(PRUISPosterSnapshotResult);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D9518);
  }
  return result;
}

uint64_t sub_10014C80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1001085C0(&qword_1002D9528);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10014C870(uint64_t a1, void *a2, void *a3)
{
  sub_1001085C0(&qword_1002D9528);
  sub_10014C45C(a1, a2, a3);
}

uint64_t sub_10014C8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10014C8D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10014C8E0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10014C91C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1002D9534);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_100110A6C;
  return sub_10014BD40(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10014C9AC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_10014C9C8()
{
  return swift_task_switch();
}

uint64_t sub_10014C9D8()
{
  return ((uint64_t (*)(void))Task<>.value.getter)();
}

uint64_t sub_10014C9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v2 + 112) = 0;
  return swift_beginAccess(v2 + 120, v0, 33, 0);
}

uint64_t sub_10014CA14(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_10014CA28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 88) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v2, v1 + 96, v4, v3);
}

uint64_t sub_10014CA40(uint64_t a1, uint64_t a2)
{
  return swift_task_switch(a1, a2, 0);
}

NSData sub_10014CA48()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_10014CA58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = a1;
  return swift_release(v2);
}

uint64_t sub_10014CA68()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 104));
}

unint64_t sub_10014CA78(uint64_t a1)
{
  uint64_t v1;

  sub_100108600(v1, 0, 1, a1);
  return sub_10014C78C();
}

id sub_10014CA98(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v2, v4);
}

uint64_t sub_10014CAA8(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_100121E04(a1, a2, (uint64_t *)va);
}

uint64_t sub_10014CAB4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100176FF4(v1, v0);
}

uint64_t sub_10014CAC0()
{
  uint64_t v0;

  return swift_task_dealloc(*(_QWORD *)(v0 + 136));
}

void sub_10014CAC8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_10014CAD4()
{
  uint64_t v0;

  return swift_endAccess(v0);
}

uint64_t sub_10014CAE0()
{
  uint64_t v0;

  return String.init<A>(reflecting:)(v0);
}

void sub_10014CAEC(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;

}

void sub_10014CAF8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_10014CB0C(uint64_t a1)
{
  return swift_allocObject(a1, 64, 7);
}

uint64_t sub_10014CB24()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_10014CB2C()
{
  uint64_t v0;

  return swift_retain_n(v0, 2);
}

void destroy for FeedbackView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));

}

uint64_t initializeWithCopy for FeedbackView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain(v3);
  swift_retain(v4);
  v6 = v5;
  return a1;
}

uint64_t assignWithCopy for FeedbackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain(v5);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = *(void **)(a1 + 32);
  v9 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  v10 = v9;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FeedbackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release(*(_QWORD *)(a1 + 24));
  v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackView(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedbackView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackView()
{
  return &type metadata for FeedbackView;
}

uint64_t sub_10014CD68(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100266018, 1);
}

uint64_t sub_10014CD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, __int16 a12)
{
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char v18;
  double v19;
  char v20;
  double v21;
  char v22;
  char v23;
  char v24;
  double v25;
  double v26;
  double v27;
  char v28;
  double v29;
  int v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unsigned int v41;
  uint64_t v42;
  _QWORD __src[15];

  v13 = a12;
  v14 = a9;
  v27 = sub_10014FC4C(a1);
  if (!v28)
    v27 = -INFINITY;
  v29 = v17;
  if ((v18 & 1) != 0)
    v29 = v27;
  v30 = v22 & 1;
  v31 = v19;
  if ((v20 & 1) != 0)
    v31 = v29;
  if (v27 > v29 || v29 > v31)
    goto LABEL_22;
  v33 = v21;
  if (v30)
    v33 = -INFINITY;
  v34 = v26;
  if ((v24 & 1) != 0)
    v34 = v33;
  v35 = v25;
  if ((v23 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v42 = v15;
    v41 = v16;
    v37 = static os_log_type_t.fault.getter();
    v38 = (void *)static Log.runtimeIssuesLog.getter();
    v39 = v37;
    v14 = a9;
    v13 = a12;
    sub_10014FC80(v39, (uint64_t)&_mh_execute_header, (uint64_t)v38, (uint64_t)"Contradictory frame constraints specified.");

    v16 = v41;
    v15 = v42;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, v15, v16);
  *(_QWORD *)a2 = v14;
  *(_BYTE *)(a2 + 8) = a10 & 1;
  *(_QWORD *)(a2 + 16) = a11;
  *(_BYTE *)(a2 + 24) = v13 & 1;
  *(_BYTE *)(a2 + 25) = HIBYTE(v13) & 1;
  memcpy((void *)(a2 + 32), __src, 0x70uLL);
  return sub_10014FB5C(v14, a10 & 1);
}

double sub_10014CF20@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v32;
  void *v33;
  char v34;
  double result;
  unsigned int v36;
  double v37;
  _QWORD __src[15];

  v20 = a19;
  v21 = a18;
  v22 = a17;
  v23 = a2 & 1;
  v24 = a1;
  if ((_DWORD)v23)
    v24 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = v24;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (v24 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    v37 = a1;
    v36 = v23;
    v32 = static os_log_type_t.fault.getter();
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2);

    v23 = v36;
    a1 = v37;
    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, *(_QWORD *)&a1, v23);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  v34 = v21 & 1;
  *(_BYTE *)(a9 + 16) = v34;
  *(_QWORD *)(a9 + 24) = v20;
  memcpy((void *)(a9 + 32), __src, 0x70uLL);
  sub_10014F068(a16, v22, v34);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v20).n128_u64[0];
  return result;
}

void *sub_10014D0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  char v8;
  double v9;
  char v10;
  double v11;
  char v12;
  char v13;
  char v14;
  double v15;
  double v16;
  double v17;
  char v18;
  double v19;
  double v20;
  double v22;
  double v23;
  double v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unsigned int v30;
  uint64_t v31;
  _QWORD __src[15];

  v3 = v2;
  v17 = sub_10014FC4C(a1);
  if (!v18)
    v17 = -INFINITY;
  v19 = v7;
  if ((v8 & 1) != 0)
    v19 = v17;
  v20 = v9;
  if ((v10 & 1) != 0)
    v20 = v19;
  if (v17 > v19 || v19 > v20)
    goto LABEL_22;
  v22 = v11;
  if ((v12 & 1) != 0)
    v22 = -INFINITY;
  v23 = v16;
  if ((v14 & 1) != 0)
    v23 = v22;
  v24 = v15;
  if ((v13 & 1) != 0)
    v24 = v23;
  if (v22 > v23 || v23 > v24)
  {
LABEL_22:
    v31 = v5;
    v30 = v6;
    v26 = static os_log_type_t.fault.getter();
    v27 = (void *)static Log.runtimeIssuesLog.getter();
    sub_10014FC80(v26, (uint64_t)&_mh_execute_header, (uint64_t)v27, (uint64_t)"Contradictory frame constraints specified.");

    v6 = v30;
    v5 = v31;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, v5, v6);
  sub_10014FC0C(v3, a2, &qword_1002D9678);
  v28 = sub_1001085C0(&qword_1002D9680);
  return memcpy((void *)(a2 + *(int *)(v28 + 36)), __src, 0x70uLL);
}

void sub_10014D268(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  __int128 v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v43;
  _OWORD v45[3];

  v2 = v1;
  v3 = type metadata accessor for RoundedRectangle(0);
  sub_100120AA0();
  __chkstk_darwin(v4, v5);
  sub_10010BC88();
  v8 = (_OWORD *)(v7 - v6);
  sub_1001085C0(&qword_1002D9550);
  sub_100120AA0();
  __chkstk_darwin(v9, v10);
  sub_10010BC88();
  v13 = v12 - v11;
  v14 = sub_1001085C0(&qword_1002D9558);
  sub_100120AA0();
  __chkstk_darwin(v15, v16);
  sub_10010BC88();
  v19 = v18 - v17;
  v20 = sub_1001085C0(&qword_1002D9560);
  sub_100120AA0();
  __chkstk_darwin(v21, v22);
  sub_10010BC88();
  v25 = v24 - v23;
  *(_QWORD *)v13 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 1;
  v26 = sub_1001085C0(&qword_1002D9568);
  sub_10014D4EC(v2, v13 + *(int *)(v26 + 44));
  v28 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v45, 0x4072C00000000000, 0, 0x4075E00000000000, 0, v28, v29);
  sub_10014FC0C(v13, v19, &qword_1002D9550);
  v30 = (_OWORD *)(v19 + *(int *)(v14 + 36));
  v31 = v45[1];
  *v30 = v45[0];
  v30[1] = v31;
  v30[2] = v45[2];
  sub_10011ABE4(v13, &qword_1002D9550);
  v32 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray2Color");
  v33 = Color.init(_:)(v32);
  LOBYTE(v2) = static Edge.Set.all.getter(v33);
  sub_10014FC0C(v19, v25, &qword_1002D9558);
  v34 = v25 + *(int *)(v20 + 36);
  *(_QWORD *)v34 = v33;
  *(_BYTE *)(v34 + 8) = (_BYTE)v2;
  sub_10011ABE4(v19, &qword_1002D9558);
  v35 = (char *)v8 + *(int *)(v3 + 20);
  v36 = enum case for RoundedCornerStyle.continuous(_:);
  v37 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
  __asm { FMOV            V0.2D, #10.0 }
  *v8 = _Q0;
  v43 = a1 + *(int *)(sub_1001085C0(&qword_1002D9570) + 36);
  sub_10014EF90((uint64_t)v8, v43);
  *(_WORD *)(v43 + *(int *)(sub_1001085C0(&qword_1002D9578) + 36)) = 256;
  sub_10014FC0C(v25, a1, &qword_1002D9560);
  sub_10014EFD4((uint64_t)v8);
  sub_10011ABE4(v25, &qword_1002D9560);
}

void sub_10014D4EC(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __int128 *v108;
  void *v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  int v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  __int128 *v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD v162[29];
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD v179[12];
  uint64_t v180;
  unsigned __int8 v181;
  uint64_t v182;
  unsigned __int8 v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD v192[20];
  _BYTE v193[176];
  char v194;
  _BYTE v195[7];
  _BYTE v196[167];
  _QWORD v197[30];

  v147 = a1;
  v150 = a2;
  v2 = sub_1001085C0(&qword_1002D9580);
  v4 = __chkstk_darwin(v2, v3);
  v160 = (uint64_t)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v6);
  v148 = (uint64_t *)((char *)&v136 - v7);
  v149 = type metadata accessor for Divider(0);
  v159 = *(_QWORD *)(v149 - 8);
  v9 = __chkstk_darwin(v149, v8);
  v158 = (char *)&v136 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  v157 = (char *)&v136 - v12;
  v13 = sub_1001085C0(&qword_1002D9588);
  __chkstk_darwin(v13, v14);
  v155 = (uint64_t)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_1001085C0(&qword_1002D9578);
  __chkstk_darwin(v154, v16);
  v153 = (uint64_t)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v18, v19);
  v21 = (_OWORD *)((char *)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = type metadata accessor for Image.ResizingMode(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  v26 = (char *)&v136 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_1001085C0(&qword_1002D9590);
  v28 = __chkstk_darwin(v152, v27);
  v30 = (char *)&v136 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v28, v31);
  v161 = (uint64_t)&v136 - v33;
  v34 = static Alignment.center.getter(v32);
  _FrameLayout.init(width:height:alignment:)(&v180, 0, 1, 0x403E000000000000, 0, v34, v35);
  v146 = v180;
  v145 = v181;
  v144 = v182;
  v143 = v183;
  v141 = v185;
  v142 = v184;
  v36 = Image.init(_:bundle:)(0x656D697465636166, 0xED00006E6F63692DLL, 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v26, enum case for Image.ResizingMode.stretch(_:), v22);
  v37 = Image.resizable(capInsets:resizingMode:)(v26, v36, 0.0, 0.0, 0.0, 0.0);
  v38 = swift_release(v36);
  v39 = (*(uint64_t (**)(char *, uint64_t, __n128))(v23 + 8))(v26, v22, v38);
  v40 = static Alignment.center.getter(v39);
  _FrameLayout.init(width:height:alignment:)(&v186, 0x404E000000000000, 0, 0x404E000000000000, 0, v40, v41);
  v42 = v186;
  LOBYTE(v22) = v187;
  v43 = v188;
  v44 = v189;
  v151 = v190;
  v140 = v191;
  v45 = (char *)v21 + *(int *)(v18 + 20);
  v46 = enum case for RoundedCornerStyle.continuous(_:);
  v47 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v45, v46, v47);
  __asm { FMOV            V0.2D, #10.0 }
  *v21 = _Q0;
  v53 = v153;
  sub_10014EF90((uint64_t)v21, v153);
  *(_WORD *)(v53 + *(int *)(v154 + 36)) = 256;
  sub_10014FC0C(v53, (uint64_t)&v30[*(int *)(v152 + 36)], &qword_1002D9578);
  *(_QWORD *)v30 = v37;
  *((_QWORD *)v30 + 1) = 0;
  *((_WORD *)v30 + 8) = 1;
  *((_QWORD *)v30 + 3) = v42;
  v30[32] = v22;
  *((_QWORD *)v30 + 5) = v43;
  v30[48] = v44;
  v54 = v140;
  *((_QWORD *)v30 + 7) = v151;
  *((_QWORD *)v30 + 8) = v54;
  v156 = v30;
  swift_retain(v37);
  sub_10011ABE4(v53, &qword_1002D9578);
  sub_10014EFD4((uint64_t)v21);
  swift_release(v37);
  sub_10014F010((uint64_t)v30, v161);
  v55 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000012, 0x80000001001F3120);
  v56 = Text.init(_:tableName:bundle:comment:)(v55);
  v58 = v57;
  v60 = v59;
  v62 = v61 & 1;
  v152 = type metadata accessor for Font.Design(0);
  v63 = v155;
  sub_100108600(v155, 1, 1, v152);
  v64 = static Font.system(size:weight:design:)(0, 1, v63, 20.0);
  sub_10011ABE4(v63, &qword_1002D9588);
  v65 = Text.font(_:)(v64, v56, v58, v62, v60);
  v67 = v66;
  LOBYTE(v63) = v68;
  v70 = v69;
  swift_release(v64);
  v71 = v63 & 1;
  sub_10014F058(v56, v58, v62);
  v72 = swift_bridgeObjectRelease(v60);
  v73 = static Color.black.getter(v72);
  v74 = Text.foregroundColor(_:)(v73, v65, v67, v71, v70);
  v76 = v75;
  LOBYTE(v58) = v77;
  v79 = v78;
  swift_release(v73);
  sub_10014F058(v65, v67, v71);
  swift_bridgeObjectRelease(v70);
  v139 = Text.bold()(v74, v76, v58 & 1, v79);
  v140 = v80;
  v154 = v81;
  LODWORD(v153) = v82 & 1;
  sub_10014F058(v74, v76, v58 & 1);
  swift_bridgeObjectRelease(v79);
  v83 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001001F3140);
  v84 = Text.init(_:tableName:bundle:comment:)(v83);
  v86 = v85;
  v88 = v87;
  v90 = v89 & 1;
  v91 = v155;
  sub_100108600(v155, 1, 1, v152);
  v92 = static Font.system(size:weight:design:)(0, 1, v91, 15.0);
  sub_10011ABE4(v91, &qword_1002D9588);
  v93 = Text.font(_:)(v92, v84, v86, v90, v88);
  v95 = v94;
  LOBYTE(v65) = v96;
  v98 = v97;
  swift_release(v92);
  v99 = v65 & 1;
  sub_10014F058(v84, v86, v90);
  v100 = swift_bridgeObjectRelease(v88);
  v101 = static Color.black.getter(v100);
  v155 = Text.foregroundColor(_:)(v101, v93, v95, v99, v98);
  v151 = v103;
  v152 = v102;
  LOBYTE(v92) = v104;
  swift_release(v101);
  LOBYTE(v101) = v92 & 1;
  v136 = v92 & 1;
  sub_10014F058(v93, v95, v99);
  v105 = swift_bridgeObjectRelease(v98);
  v106 = v157;
  v107 = Divider.init()(v105);
  v138 = static VerticalAlignment.center.getter(v107);
  v108 = v147;
  sub_10014DEEC(v192);
  v193[168] = 1;
  memcpy(&v193[7], v192, 0xA0uLL);
  v109 = memcpy(v196, v193, sizeof(v196));
  v137 = static Edge.Set.vertical.getter(v109);
  v110 = EdgeInsets.init(_all:)(5.0);
  v112 = v111;
  v114 = v113;
  v116 = v115;
  v194 = 0;
  v117 = static HorizontalAlignment.center.getter();
  v118 = (uint64_t)v148;
  *v148 = v117;
  *(_QWORD *)(v118 + 8) = 0;
  *(_BYTE *)(v118 + 16) = 0;
  v119 = sub_1001085C0(&qword_1002D9598);
  sub_10014E43C(v108, v118 + *(int *)(v119 + 44));
  v171 = 0;
  v172 = 1;
  v173 = v146;
  v174 = v145;
  v175 = v144;
  v176 = v143;
  v177 = v142;
  v178 = v141;
  v179[0] = &v171;
  v120 = (uint64_t)v156;
  sub_10014FC0C(v161, (uint64_t)v156, &qword_1002D9590);
  v121 = v139;
  v122 = v140;
  v123 = v154;
  v167 = v139;
  v168 = v154;
  LOBYTE(v88) = v153;
  v169 = v153;
  v170 = v140;
  v179[1] = v120;
  v179[2] = &v167;
  v163 = v155;
  v164 = v152;
  v165 = v101;
  v166 = v151;
  v179[3] = &v163;
  v124 = v158;
  v125 = v106;
  v126 = v149;
  (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v158, v125, v149);
  v179[4] = v124;
  v162[0] = v138;
  v162[1] = 0;
  LOBYTE(v162[2]) = 1;
  memcpy((char *)&v162[2] + 1, v196, 0xA7uLL);
  LOBYTE(v162[23]) = v137;
  *(_DWORD *)((char *)&v162[23] + 1) = *(_DWORD *)v195;
  HIDWORD(v162[23]) = *(_DWORD *)&v195[3];
  *(double *)&v162[24] = v110;
  v162[25] = v112;
  v162[26] = v114;
  v162[27] = v116;
  LOBYTE(v162[28]) = v194;
  v179[5] = v162;
  v127 = v118;
  v128 = v160;
  sub_10014FC0C(v118, v160, &qword_1002D9580);
  v179[6] = v128;
  sub_10014E0B4((uint64_t)v179, v150);
  sub_10014F068(v121, v123, v88);
  v129 = v122;
  swift_bridgeObjectRetain(v122);
  v130 = v155;
  v131 = v152;
  LOBYTE(v123) = v136;
  sub_10014F068(v155, v152, v136);
  v132 = v151;
  swift_bridgeObjectRetain(v151);
  sub_10011ABE4(v127, &qword_1002D9580);
  v133 = *(void (**)(char *, uint64_t))(v159 + 8);
  v133(v157, v126);
  sub_10014F058(v130, v131, v123);
  swift_bridgeObjectRelease(v132);
  sub_10014F058(v121, v154, v153);
  swift_bridgeObjectRelease(v129);
  sub_10011ABE4(v161, &qword_1002D9590);
  sub_10011ABE4(v160, &qword_1002D9580);
  memcpy(v197, v162, 0xE1uLL);
  sub_10014F078(v197);
  v133(v158, v126);
  v134 = v166;
  sub_10014F058(v163, v164, v165);
  swift_bridgeObjectRelease(v134);
  v135 = v170;
  sub_10014F058(v167, v168, v169);
  swift_bridgeObjectRelease(v135);
  sub_10011ABE4((uint64_t)v156, &qword_1002D9590);
}

double sub_10014DEEC@<D0>(_QWORD *a1@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t *v31;
  __int128 v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *v35;

  sub_1001085C0(&qword_1002D9628);
  State.projectedValue.getter(&v32);
  v16 = v32;
  v2 = v33;
  State.projectedValue.getter(&v32);
  v15 = v32;
  v3 = v33;
  State.projectedValue.getter(&v32);
  v14 = v32;
  v4 = v33;
  State.projectedValue.getter(&v32);
  v13 = v32;
  v5 = v33;
  State.projectedValue.getter(&v32);
  v6 = v32;
  v30 = v16;
  v29 = 1;
  v31 = v2;
  v25 = v4;
  v26 = 2;
  v27 = v15;
  v28 = v3;
  *(_QWORD *)&v32 = &v29;
  *((_QWORD *)&v32 + 1) = &v26;
  v22 = v5;
  v23 = 3;
  v24 = v14;
  v19 = v33;
  v20 = 4;
  v21 = v13;
  v33 = &v23;
  v34 = &v20;
  v17 = 5;
  v18 = v6;
  v35 = &v17;
  sub_10014E258((uint64_t **)&v32, a1);
  v7 = v18;
  swift_release(*((_QWORD *)&v18 + 1));
  swift_release(v7);
  v8 = v21;
  swift_release(*((_QWORD *)&v21 + 1));
  swift_release(v8);
  v9 = v24;
  swift_release(*((_QWORD *)&v24 + 1));
  swift_release(v9);
  v10 = v27;
  swift_release(*((_QWORD *)&v27 + 1));
  swift_release(v10);
  v11 = v30;
  swift_release(*((_QWORD *)&v30 + 1));
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

_QWORD *sub_10014E0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD __dst[30];

  v4 = *(_BYTE *)(*(_QWORD *)a1 + 8);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v6 = *(_BYTE *)(*(_QWORD *)a1 + 24);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v8 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  v9 = *(_OWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)a2 = **(_QWORD **)a1;
  *(_BYTE *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 40) = v8;
  *(_OWORD *)(a2 + 48) = v9;
  v10 = (int *)sub_1001085C0(&qword_1002D95A0);
  sub_10014FC0C(*(_QWORD *)(a1 + 8), a2 + v10[12], &qword_1002D9590);
  v11 = a2 + v10[16];
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)v12;
  v15 = *(_QWORD *)(v12 + 8);
  v16 = *(_BYTE *)(v12 + 16);
  v17 = *(_QWORD *)(v12 + 24);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = v15;
  *(_BYTE *)(v11 + 16) = v16;
  *(_QWORD *)(v11 + 24) = v17;
  v18 = a2 + v10[20];
  v19 = *(_QWORD *)v13;
  v27 = *(_QWORD *)(v13 + 8);
  v20 = *(_BYTE *)(v13 + 16);
  v28 = v20;
  v29 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)v18 = *(_QWORD *)v13;
  *(_QWORD *)(v18 + 8) = v27;
  *(_BYTE *)(v18 + 16) = v20;
  *(_QWORD *)(v18 + 24) = v29;
  v21 = a2 + v10[24];
  v22 = *(_QWORD *)(a1 + 32);
  v23 = type metadata accessor for Divider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = (void *)(a2 + v10[28]);
  v25 = *(const void **)(a1 + 40);
  memcpy(__dst, v25, 0xE1uLL);
  memmove(v24, v25, 0xE1uLL);
  sub_10014FC0C(*(_QWORD *)(a1 + 48), a2 + v10[32], &qword_1002D9580);
  sub_10014F068(v14, v15, v16);
  swift_bridgeObjectRetain(v17);
  sub_10014F068(v19, v27, v28);
  swift_bridgeObjectRetain(v29);
  return sub_10014F118(__dst);
}

uint64_t sub_10014E258@<X0>(uint64_t **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = a1[1];
  v3 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  v7 = *v2;
  v8 = v2[1];
  v10 = v2[2];
  v9 = v2[3];
  v11 = a1[2];
  v12 = a1[3];
  v13 = *v11;
  v14 = v11[1];
  v16 = v11[2];
  v15 = v11[3];
  v17 = *v12;
  v18 = v12[1];
  v20 = v12[2];
  v19 = v12[3];
  v21 = a1[4];
  v23 = *v21;
  v22 = v21[1];
  v25 = v21[2];
  v24 = v21[3];
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  a2[4] = v7;
  a2[5] = v8;
  a2[6] = v10;
  a2[7] = v9;
  a2[8] = v13;
  a2[9] = v14;
  a2[10] = v16;
  a2[11] = v15;
  a2[12] = v17;
  a2[13] = v18;
  a2[14] = v20;
  a2[15] = v19;
  a2[16] = v23;
  a2[17] = v22;
  a2[18] = v25;
  a2[19] = v24;
  swift_retain(v22);
  swift_retain(v25);
  swift_retain(v4);
  swift_retain(v6);
  swift_retain(v8);
  swift_retain(v10);
  swift_retain(v14);
  swift_retain(v16);
  swift_retain(v18);
  return swift_retain(v20);
}

uint64_t sub_10014E334@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = *a1;
  v5 = type metadata accessor for Divider(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v6(a2, v4, v5);
  v7 = (int *)sub_1001085C0(&qword_1002D9618);
  v8 = a2 + v7[12];
  v9 = a1[1];
  v10 = sub_1001085C0(&qword_1002D95A8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12(v8, v9, v10);
  v6(a2 + v7[16], a1[2], v5);
  v12(a2 + v7[20], a1[3], v10);
  v6(a2 + v7[24], a1[4], v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(a2 + v7[28], a1[5], v10);
}

uint64_t sub_10014E43C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  __int128 v49;
  uint64_t v50;
  _OWORD *v51;
  __int128 v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  void (*v69)(char *, uint64_t);
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87[6];
  __int128 v88;
  __int128 v89;
  _OWORD v90[2];

  v81 = a2;
  v79 = sub_1001085C0(&qword_1002D95A8);
  v78 = *(_QWORD *)(v79 - 8);
  v4 = __chkstk_darwin(v79, v3);
  v80 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4, v6);
  v85 = (char *)&v71 - v8;
  v10 = __chkstk_darwin(v7, v9);
  v84 = (char *)&v71 - v11;
  v13 = __chkstk_darwin(v10, v12);
  v76 = (char *)&v71 - v14;
  v16 = __chkstk_darwin(v13, v15);
  v18 = (char *)&v71 - v17;
  __chkstk_darwin(v16, v19);
  v21 = (char *)&v71 - v20;
  v75 = type metadata accessor for Divider(0);
  v86 = *(_QWORD *)(v75 - 8);
  v23 = __chkstk_darwin(v75, v22);
  v77 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v23, v25);
  v83 = (char *)&v71 - v27;
  v29 = __chkstk_darwin(v26, v28);
  v31 = (char *)&v71 - v30;
  v33 = __chkstk_darwin(v29, v32);
  v73 = (char *)&v71 - v34;
  v36 = __chkstk_darwin(v33, v35);
  v38 = (char *)&v71 - v37;
  v40 = __chkstk_darwin(v36, v39);
  v82 = (char *)&v71 - v41;
  Divider.init()(v40);
  v42 = *a1;
  v89 = a1[1];
  v90[0] = v42;
  v88 = a1[2];
  v43 = (_OWORD *)swift_allocObject(&unk_10028A810, 64, 7);
  v44 = a1[1];
  v43[1] = *a1;
  v43[2] = v44;
  v43[3] = a1[2];
  sub_10014F1DC((uint64_t)v90);
  sub_10014F1DC((uint64_t)&v89);
  sub_10014F204((id *)&v88);
  v45 = sub_1001085C0(&qword_1002D95B0);
  v46 = sub_10014FA4C(&qword_1002D95B8, &qword_1002D95B0);
  v72 = v21;
  v47 = Button.init(action:label:)(sub_10014F1C0, v43, sub_10014E96C, 0, v45, v46);
  v71 = v38;
  Divider.init()(v47);
  v48 = (_OWORD *)swift_allocObject(&unk_10028A838, 64, 7);
  v49 = a1[1];
  v48[1] = *a1;
  v48[2] = v49;
  v48[3] = a1[2];
  sub_10014F1DC((uint64_t)v90);
  sub_10014F1DC((uint64_t)&v89);
  sub_10014F204((id *)&v88);
  v50 = Button.init(action:label:)(sub_10014F39C, v48, sub_10014EC24, 0, v45, v46);
  Divider.init()(v50);
  v51 = (_OWORD *)swift_allocObject(&unk_10028A860, 64, 7);
  v52 = a1[1];
  v51[1] = *a1;
  v51[2] = v52;
  v51[3] = a1[2];
  sub_10014F1DC((uint64_t)v90);
  sub_10014F1DC((uint64_t)&v89);
  sub_10014F204((id *)&v88);
  v53 = v76;
  Button.init(action:label:)(sub_10014F3F0, v51, sub_10014ECB4, 0, v45, v46);
  v54 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  v74 = v31;
  v55 = v75;
  v54(v31, v82, v75);
  v87[0] = (uint64_t)v31;
  v56 = v78;
  v57 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  v58 = (uint64_t)v84;
  v59 = v21;
  v60 = v79;
  v57(v84, v59, v79);
  v87[1] = v58;
  v61 = (uint64_t)v83;
  v62 = v55;
  v54(v83, v38, v55);
  v87[2] = v61;
  v63 = (uint64_t)v85;
  v57(v85, v18, v60);
  v87[3] = v63;
  v64 = (uint64_t)v77;
  v65 = v73;
  v54(v77, v73, v62);
  v87[4] = v64;
  v66 = (uint64_t)v80;
  v57(v80, v53, v60);
  v87[5] = v66;
  v67 = v66;
  sub_10014E334(v87, v81);
  v68 = *(void (**)(char *, uint64_t))(v56 + 8);
  v68(v53, v60);
  v69 = *(void (**)(char *, uint64_t))(v86 + 8);
  v69(v65, v62);
  v68(v18, v60);
  v69(v71, v62);
  v68(v72, v60);
  v69(v82, v62);
  v68((char *)v67, v60);
  v69((char *)v64, v62);
  v68(v85, v60);
  v69(v83, v62);
  v68(v84, v60);
  return ((uint64_t (*)(char *, uint64_t))v69)(v74, v62);
}

void *sub_10014E96C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *result;
  _BYTE __src[144];

  v2 = sub_1001085C0(&qword_1002D9588);
  __chkstk_darwin(v2, v3);
  v5 = &__src[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = LocalizedStringKey.init(stringLiteral:)(0x74696D627553, 0xE600000000000000);
  v7 = Text.init(_:tableName:bundle:comment:)(v6);
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  v14 = static Alignment.center.getter(v7);
  sub_10014CF20(0.0, 0, 0.0, 1, 300.0, 0, 0.0, 0, (uint64_t)__src, 0.0, 1, 50.0, 0, v14, v15, v7, v9, v13, v11);
  sub_10014F058(v7, v9, v13);
  v16 = swift_bridgeObjectRelease(v11);
  v17 = static Font.Weight.bold.getter(v16);
  v18 = type metadata accessor for Font.Design(0);
  sub_100108600((uint64_t)v5, 1, 1, v18);
  v19 = static Font.system(size:weight:design:)(*(_QWORD *)&v17, 0, v5, 15.0);
  sub_10011ABE4((uint64_t)v5, &qword_1002D9588);
  KeyPath = swift_getKeyPath(&unk_100242538);
  v21 = (void *)objc_opt_self(UIColor);
  v22 = Color.init(_:)(objc_msgSend(v21, "systemBlueColor"));
  v23 = swift_getKeyPath(&unk_100242568);
  v24 = Color.init(_:)(objc_msgSend(v21, "systemGray2Color"));
  v25 = static Edge.Set.all.getter(v24);
  result = memcpy((void *)a1, __src, 0x90uLL);
  *(_QWORD *)(a1 + 144) = KeyPath;
  *(_QWORD *)(a1 + 152) = v19;
  *(_QWORD *)(a1 + 160) = v23;
  *(_QWORD *)(a1 + 168) = v22;
  *(_QWORD *)(a1 + 176) = v24;
  *(_BYTE *)(a1 + 184) = v25;
  return result;
}

void sub_10014EB88(uint64_t a1, char a2)
{
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = *(void **)(a1 + 32);
  if (v2)
  {
    v4 = v2;
    v5 = sub_1001085C0(&qword_1002D9628);
    State.wrappedValue.getter(v5);
    sub_100192E64(v9, a2 & 1);

  }
  else
  {
    v6 = *(_QWORD *)(a1 + 40);
    v7 = type metadata accessor for ScoreController();
    v8 = sub_10014F7C0();
    EnvironmentObject.error()(0, v6, v7, v8);
    __break(1u);
  }
}

void *sub_10014EC24@<X0>(uint64_t a1@<X8>)
{
  return sub_10014ECC8(0xD000000000000010, 0x80000001001F3190, a1);
}

void sub_10014EC40(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;

  v1 = *(void **)(a1 + 32);
  if (v1)
  {
    v5 = v1;
    sub_100192E64(-1, 0);

  }
  else
  {
    v2 = *(_QWORD *)(a1 + 40);
    v3 = type metadata accessor for ScoreController();
    v4 = sub_10014F7C0();
    EnvironmentObject.error()(0, v2, v3, v4);
    __break(1u);
  }
}

void *sub_10014ECB4@<X0>(uint64_t a1@<X8>)
{
  return sub_10014ECC8(0x6C65636E6143, 0xE600000000000000, a1);
}

void *sub_10014ECC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *result;
  _BYTE __src[144];

  sub_1001085C0(&qword_1002D9588);
  sub_100120AA0();
  __chkstk_darwin(v6, v7);
  sub_10010BC88();
  v10 = v9 - v8;
  v11 = LocalizedStringKey.init(stringLiteral:)(a1, a2);
  v12 = Text.init(_:tableName:bundle:comment:)(v11);
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  v19 = static Alignment.center.getter(v12);
  sub_10014CF20(0.0, 0, 0.0, 1, 300.0, 0, 0.0, 0, (uint64_t)__src, 0.0, 1, 50.0, 0, v19, v20, v12, v14, v18, v16);
  sub_10014F058(v12, v14, v18);
  swift_bridgeObjectRelease(v16);
  v21 = type metadata accessor for Font.Design(0);
  sub_100108600(v10, 1, 1, v21);
  v22 = static Font.system(size:weight:design:)(0, 1, v10, 15.0);
  sub_10011ABE4(v10, &qword_1002D9588);
  KeyPath = swift_getKeyPath(&unk_100242538);
  v24 = (void *)objc_opt_self(UIColor);
  v25 = Color.init(_:)(objc_msgSend(v24, "systemBlueColor"));
  v26 = swift_getKeyPath(&unk_100242568);
  v27 = Color.init(_:)(objc_msgSend(v24, "systemGray2Color"));
  v28 = static Edge.Set.all.getter(v27);
  result = memcpy((void *)a3, __src, 0x90uLL);
  *(_QWORD *)(a3 + 144) = KeyPath;
  *(_QWORD *)(a3 + 152) = v22;
  *(_QWORD *)(a3 + 160) = v26;
  *(_QWORD *)(a3 + 168) = v25;
  *(_QWORD *)(a3 + 176) = v27;
  *(_BYTE *)(a3 + 184) = v28;
  return result;
}

uint64_t sub_10014EECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_10014FC74(a1, &type metadata for Int);
  sub_10014FC74((uint64_t)v3, &type metadata for Bool);
  v4 = type metadata accessor for ScoreController();
  v5 = sub_10014F7C0();
  result = EnvironmentObject.init()(v4, v5);
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v9;
  *(_BYTE *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = result;
  *(_QWORD *)(a2 + 40) = v7;
  return result;
}

void sub_10014EF58(uint64_t a1@<X8>)
{
  sub_10014D268(a1);
}

uint64_t sub_10014EF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014EFD4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10014F010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0(&qword_1002D9590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014F058(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_10014F068(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

_QWORD *sub_10014F078(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[8];
  v5 = a1[9];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[16];
  v9 = a1[17];
  v10 = a1[20];
  swift_release(a1[21]);
  swift_release(v9);
  swift_release(v7);
  swift_release(v5);
  swift_release(v3);
  swift_release(v2);
  swift_release(v4);
  swift_release(v6);
  swift_release(v8);
  swift_release(v10);
  return a1;
}

_QWORD *sub_10014F118(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[8];
  v5 = a1[9];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[16];
  v9 = a1[17];
  v10 = a1[21];
  swift_retain(a1[20]);
  swift_retain(v10);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  return a1;
}

void sub_10014F1C0()
{
  uint64_t v0;

  sub_10014EB88(v0 + 16, 0);
}

uint64_t sub_10014F1DC(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 8));
  return a1;
}

id *sub_10014F204(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

unint64_t sub_10014F22C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D95C0;
  if (!qword_1002D95C0)
  {
    v1 = sub_10010AD84(&qword_1002D95C8);
    sub_10014F2B0();
    sub_10014FBD8((unint64_t *)&unk_1002DB200, &qword_1002D9600);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D95C0);
  }
  return result;
}

unint64_t sub_10014F2B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D95D0;
  if (!qword_1002D95D0)
  {
    v1 = sub_10010AD84(&qword_1002D95D8);
    sub_10014F334();
    sub_10014FBD8((unint64_t *)&qword_1002D95F0, &qword_1002D95F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D95D0);
  }
  return result;
}

unint64_t sub_10014F334()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D95E0;
  if (!qword_1002D95E0)
  {
    v1 = sub_10010AD84(&qword_1002D95E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D95E0);
  }
  return result;
}

void sub_10014F39C()
{
  uint64_t v0;

  sub_10014EB88(v0 + 16, 1);
}

uint64_t sub_10014F3BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 64, 7);
}

void sub_10014F3F0()
{
  uint64_t v0;

  sub_10014EC40(v0 + 16);
}

uint64_t sub_10014F3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  _QWORD v10[6];

  v8 = (_QWORD *)swift_allocObject(&unk_10028A908, 48, 7);
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  swift_retain(a2);
  swift_retain(a3);
  return Button.init(action:label:)(sub_10014FB94, v8, sub_10014FBA0, v10, &type metadata for Text, &protocol witness table for Text);
}

uint64_t sub_10014F4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v8[1] = a2;
  v8[2] = a3;
  v8[3] = a4;
  v8[0] = a1;
  v4 = sub_1001085C0(&qword_1002D9658);
  Binding.wrappedValue.setter(v8, v4);
  v5 = sub_1001085C0(&qword_1002D9660);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100241240;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  strcpy((char *)(v6 + 32), "selected star");
  *(_WORD *)(v6 + 46) = -4864;
  print(_:separator:terminator:)(v6, 32, 0xE100000000000000, 10);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_10014F560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  _QWORD v34[5];
  uint64_t v35;

  v10 = sub_1001085C0(&qword_1002D9588);
  __chkstk_darwin(v10, v11);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[2] = a2;
  v34[3] = a3;
  v34[4] = a4;
  v14 = sub_1001085C0(&qword_1002D9658);
  Binding.wrappedValue.getter(&v35, v14);
  if (v35 >= a1)
    v15 = 8755426;
  else
    v15 = 8820962;
  v16 = LocalizedStringKey.init(stringLiteral:)(v15, 0xA300000000000000);
  v17 = Text.init(_:tableName:bundle:comment:)(v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  v24 = type metadata accessor for Font.Design(0);
  sub_100108600((uint64_t)v13, 1, 1, v24);
  v25 = static Font.system(size:weight:design:)(0, 1, v13, 30.0);
  sub_10011ABE4((uint64_t)v13, &qword_1002D9588);
  v26 = Text.font(_:)(v25, v17, v19, v23, v21);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  swift_release(v25);
  sub_10014F058(v17, v19, v23);
  result = swift_bridgeObjectRelease(v21);
  *(_QWORD *)a5 = v26;
  *(_QWORD *)(a5 + 8) = v28;
  *(_BYTE *)(a5 + 16) = v30 & 1;
  *(_QWORD *)(a5 + 24) = v32;
  return result;
}

uint64_t sub_10014F704()
{
  uint64_t *v0;

  return sub_10014F3F8(*v0, v0[1], v0[2], v0[3]);
}

void sub_10014F710(_QWORD *a1@<X8>)
{
  *a1 = EnvironmentValues.font.getter();
  sub_100109438();
}

uint64_t sub_10014F734(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

void sub_10014F760()
{
  uint64_t *v0;

  *v0 = sub_10014FC8C();
  sub_100109438();
}

void sub_10014F77C()
{
  uint64_t *v0;

  *v0 = sub_10014FC8C();
  sub_100109438();
}

void sub_10014F798(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  EnvironmentValues.foregroundColor.setter(v1);
  sub_100109438();
}

unint64_t sub_10014F7C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D9620;
  if (!qword_1002D9620)
  {
    v1 = type metadata accessor for ScoreController();
    result = swift_getWitnessTable(&protocol conformance descriptor for ScoreController, v1);
    atomic_store(result, (unint64_t *)&qword_1002D9620);
  }
  return result;
}

uint64_t destroy for StarView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *initializeWithCopy for StarView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  swift_retain(v3);
  swift_retain(v5);
  return a1;
}

_QWORD *assignWithCopy for StarView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a1[1];
  v5 = a2[1];
  a1[1] = v5;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[3] = a2[3];
  return a1;
}

_QWORD *assignWithTake for StarView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = *(_QWORD *)a2;
  swift_release(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  a1[3] = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for StarView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StarView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StarView()
{
  return &type metadata for StarView;
}

unint64_t sub_10014F9B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D9630;
  if (!qword_1002D9630)
  {
    v1 = sub_10010AD84(&qword_1002D9570);
    sub_10014FA4C(&qword_1002D9638, &qword_1002D9560);
    sub_10014FBD8(&qword_1002D9650, &qword_1002D9578);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D9630);
  }
  return result;
}

uint64_t sub_10014FA4C(unint64_t *a1, uint64_t *a2)
{
  void (*v2)(void);
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_10014FC68(0, a2);
    v2();
    sub_10014FBD8(&qword_1002D9608, &qword_1002D9610);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10014FAC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D9640;
  if (!qword_1002D9640)
  {
    v1 = sub_10010AD84(&qword_1002D9558);
    sub_10014FBD8(&qword_1002D9648, &qword_1002D9550);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D9640);
  }
  return result;
}

uint64_t sub_10014FB4C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100266040, 1);
}

uint64_t sub_10014FB5C(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_10014FB68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10014FB94()
{
  uint64_t *v0;

  return sub_10014F4A4(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10014FBA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10014F560(v1[2], v1[3], v1[4], v1[5], a1);
}

void sub_10014FBAC()
{
  sub_10014FBD8(&qword_1002D9668, &qword_1002D9670);
}

void sub_10014FBD8(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_10014FC68(0, a2);
    atomic_store(swift_getWitnessTable(v2, v4), a1);
  }
  sub_100109438();
}

void sub_10014FC0C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1001085C0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_100109438();
}

double sub_10014FC4C(uint64_t a1)
{
  return *(double *)&a1;
}

uint64_t sub_10014FC68(uint64_t a1, uint64_t *a2)
{
  return sub_10010AD84(a2);
}

_QWORD *sub_10014FC74(uint64_t a1, ...)
{
  uint64_t v2;
  va_list va;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v2 = va_arg(va1, _QWORD);
  return State.init(wrappedValue:)((uint64_t *)va1, (uint64_t *)va);
}

uint64_t sub_10014FC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return os_log(_:dso:log:_:_:)(a1, a2, a3, a4, 42, 2);
}

uint64_t sub_10014FC8C()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_10014FC98(uint64_t a1)
{
  return j__swift_continuation_resume(*(_QWORD *)(a1 + 32));
}

uint64_t sub_10014FCA4(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_resume();
}

id sub_10014FCB4()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  objc_super v9;

  v1 = objc_allocWithZone((Class)type metadata accessor for DeclineCallServiceFactory());
  v2 = v0;
  v3 = objc_msgSend(v1, "init");
  v4 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v5 = type metadata accessor for DeclineCallService();
  swift_allocObject(v5, 112, 7);
  v6 = v4;
  v7 = sub_1001829C4((uint64_t)v6);

  *(_QWORD *)&v2[OBJC_IVAR___ICSGreenTea3PUIHardwareEventHandler_declineCallService] = v7;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for GreenTea3PUIHardwareEventHandler();
  return objc_msgSendSuper2(&v9, "init");
}

uint64_t sub_10014FDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[31] = a4;
  v5[32] = v4;
  v5[29] = a2;
  v5[30] = a3;
  v5[28] = a1;
  v6 = sub_1001085C0(&qword_1002D7D78);
  v5[33] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[34] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v5[35] = v8;
  v5[36] = v9;
  return swift_task_switch(sub_10014FE44, v8, v9);
}

id sub_10014FE44()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  unsigned int v5;
  id v6;
  id v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void (*v15)(_QWORD);
  id result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void (*v23)(_QWORD);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  unsigned int v34;
  uint64_t v35;
  void *v36;
  void *v37;

  v1 = (void *)objc_opt_self(TUCallCenter);
  v2 = objc_msgSend(v1, "sharedInstance");
  v3 = objc_msgSend(v2, "frontmostAudioOrVideoCall");
  *(_QWORD *)(v0 + 296) = v3;

  if (!v3)
    goto LABEL_7;
  v4 = objc_msgSend(v3, "provider");
  v5 = objc_msgSend(v4, "supportsDynamicSystemUI");

  if (!v5)
  {

LABEL_7:
    sub_100150824();
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100108664(v9, (uint64_t)&unk_1002E2CC8);
    v12 = Logger.logObject.getter(v10, v11);
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)sub_10010E3FC();
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "GreenTea3PHardwareEventHandler is not handling lock event because frontmost call does not support dynamic system UI", v14, 2u);
      sub_100109440((uint64_t)v14);
    }
    v15 = *(void (**)(_QWORD))(v0 + 232);

    v15(0);
    goto LABEL_12;
  }
  if (!objc_msgSend(*(id *)(v0 + 224), "sourceType"))
  {
    sub_100150824();
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100108664(v17, (uint64_t)&unk_1002E2CC8);
    v20 = Logger.logObject.getter(v18, v19);
    v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)sub_10010E3FC();
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "GreenTea3PHardwareEventHandler is not handling lock event because event source is unknown", v22, 2u);
      sub_100109440((uint64_t)v22);
    }
    v23 = *(void (**)(_QWORD))(v0 + 232);

    v23(0);
    goto LABEL_12;
  }
  v6 = objc_msgSend(v1, "sharedInstance");
  v7 = objc_msgSend(v6, "incomingCall");
  *(_QWORD *)(v0 + 304) = v7;

  if (v7)
    v8 = objc_msgSend(v7, "shouldSuppressRingtone");
  else
    v8 = 0;
  if (objc_msgSend(*(id *)(v0 + 224), "sourceType") == (id)2)
  {
    if (v7 || (sub_10015058C() & 1) != 0)
    {
      v24 = v0 + 80;
      v25 = *(void **)(*(_QWORD *)(v0 + 256) + OBJC_IVAR___ICSGreenTea3PUIHardwareEventHandler_declineCallService);
      *(_QWORD *)(v0 + 80) = v0;
      *(_QWORD *)(v0 + 88) = sub_1001502AC;
      v26 = sub_10015082C();
      *(_QWORD *)(v0 + 184) = _NSConcreteStackBlock;
      v27 = (_QWORD *)(v0 + 184);
      v27[4] = v26;
      v27[1] = 0x40000000;
      v28 = &unk_10028A980;
LABEL_30:
      v27[2] = sub_10014FC98;
      v27[3] = v28;
      objc_msgSend(v25, "declineAnsweringCallDueToLockEventWithCurrentActiveCall:completionHandler:", v3, v27);
      return (id)swift_continuation_await(v24);
    }
  }
  else if (v7)
  {
    if ((v8 & 1) == 0)
    {
      v29 = *(_QWORD *)(v0 + 264);
      v30 = objc_msgSend(v7, "uniqueProxyIdentifierUUID", swift_release(*(_QWORD *)(v0 + 272)).n128_f64[0]);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v30);

      v31 = type metadata accessor for UUID(0);
      v32 = 1;
      sub_100108600(v29, 0, 1, v31);
      sub_100176198();
      sub_10015068C(v29);
      objc_msgSend(v7, "suppressRingtone");
LABEL_32:
      v37 = *(void **)(v0 + 296);
      v36 = *(void **)(v0 + 304);
      (*(void (**)(uint64_t))(v0 + 232))(v32);

LABEL_12:
      swift_task_dealloc(*(_QWORD *)(v0 + 264));
      return (id)sub_1001507F4(*(uint64_t (**)(void))(v0 + 8));
    }
    goto LABEL_27;
  }
  if ((sub_10015058C() & 1) == 0)
  {
LABEL_31:
    sub_100150824();
    v32 = 0;
    goto LABEL_32;
  }
LABEL_27:
  result = objc_msgSend((id)objc_opt_self(PHInCallUtilities), "sharedInstance");
  if (result)
  {
    v33 = result;
    v34 = objc_msgSend(result, "isLockToEndCallEnabled");

    if (v34)
    {
      v24 = v0 + 16;
      v25 = *(void **)(*(_QWORD *)(v0 + 256) + OBJC_IVAR___ICSGreenTea3PUIHardwareEventHandler_declineCallService);
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_100150328;
      v35 = sub_10015082C();
      *(_QWORD *)(v0 + 144) = _NSConcreteStackBlock;
      v27 = (_QWORD *)(v0 + 144);
      v27[4] = v35;
      v27[1] = 0x40000000;
      v28 = &unk_10028A968;
      goto LABEL_30;
    }
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001502AC()
{
  sub_100150808();
  return sub_100110E68();
}

uint64_t sub_1001502D4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  sub_100150824();
  v2 = *(void **)(v0 + 296);
  v1 = *(void **)(v0 + 304);
  (*(void (**)(uint64_t))(v0 + 232))(1);

  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100150328()
{
  sub_100150808();
  return sub_100110E68();
}

uint64_t sub_1001503DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100150450, v7, v8);
}

uint64_t sub_100150450()
{
  uint64_t *v0;
  void *v1;
  const void *v2;
  void *v3;
  const void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t **v12;

  v1 = (void *)v0[6];
  v3 = (void *)v0[4];
  v2 = (const void *)v0[5];
  v5 = (void *)v0[2];
  v4 = (const void *)v0[3];
  swift_release(v0[7]);
  v6 = _Block_copy(v4);
  v0[8] = (uint64_t)_Block_copy(v2);
  v7 = swift_allocObject(&unk_10028A9D0, 24, 7);
  v0[9] = v7;
  *(_QWORD *)(v7 + 16) = v6;
  v8 = dword_1002D96BC;
  v9 = v5;
  v10 = v3;
  v11 = v1;
  v12 = (uint64_t **)swift_task_alloc(v8);
  v0[10] = (uint64_t)v12;
  *v12 = v0;
  v12[1] = (uint64_t *)sub_100150518;
  return sub_10014FDAC(v0[2], (uint64_t)sub_10011ACA8, v7, v0[4]);
}

uint64_t sub_100150518()
{
  uint64_t (**v0)(void);
  uint64_t v1;
  void (**v2)(_QWORD);
  void *v3;
  void *v4;
  void *v5;

  v1 = *((_QWORD *)*v0 + 9);
  v2 = (void (**)(_QWORD))*((_QWORD *)*v0 + 8);
  v3 = (void *)*((_QWORD *)*v0 + 6);
  v4 = (void *)*((_QWORD *)*v0 + 4);
  v5 = (void *)*((_QWORD *)*v0 + 2);
  sub_100109528();
  swift_release(v1);

  v2[2](v2);
  _Block_release(v2);
  return sub_1001507F4(v0[1]);
}

id sub_10015058C()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v1 = objc_msgSend(v0, "routeController");

  v2 = objc_msgSend(v1, "pickedRoute");
  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, "isReceiver");

  return v3;
}

id sub_10015062C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GreenTea3PUIHardwareEventHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for GreenTea3PUIHardwareEventHandler()
{
  return objc_opt_self(ICSGreenTea3PUIHardwareEventHandler);
}

uint64_t sub_10015068C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001085C0(&qword_1002D7D78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001506CC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  _Block_release(*(const void **)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100150710()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = (_QWORD *)swift_task_alloc(dword_1002D96C4);
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_100150790;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1002D96C0
                                                                              + dword_1002D96C0))(v2, v3, v4, v5, v6);
}

uint64_t sub_100150790()
{
  uint64_t v0;

  sub_100109528();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001507CC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001507F4(uint64_t (*a1)(void))
{
  return a1();
}

void sub_100150808()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
}

uint64_t sub_100150824()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 272));
}

uint64_t sub_10015082C()
{
  uint64_t v0;

  return swift_continuation_init(v0, 0);
}

id sub_100150868()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  const char *v5;
  char v6;
  id *v7;
  id v8;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  char v14;

  v1 = sub_10014C65C(v0);
  v3 = v2;
  if (v2)
  {
    v4 = v1;
    v5 = "com.apple.AvatarUI.AvatarPosterExtension";
    if (v1 == 0xD000000000000028 && (sub_100150C38(), v6)
      || (sub_100150C28(0xD000000000000028, (unint64_t)(v5 - 32) | 0x8000000000000000) & 1) != 0)
    {
      v7 = (id *)&CNWallpaperTypeMemoji;
    }
    else
    {
      v10 = 0xD00000000000002CLL;
      v11 = "com.apple.ContactsUI.MonogramPosterExtension";
      if (v4 == 0xD00000000000002CLL && (sub_100150C38(), v6)
        || (sub_100150C28(v10, (unint64_t)(v11 - 32) | 0x8000000000000000) & 1) != 0)
      {
        v7 = (id *)&CNWallpaperTypeMonogram;
      }
      else
      {
        v12 = 0xD00000000000002ELL;
        v13 = "com.apple.PhotosUIPrivate.PhotosPosterProvider";
        if (v4 != 0xD00000000000002ELL || (sub_100150C38(), !v6))
        {
          v14 = sub_100150C28(v12, (unint64_t)(v13 - 32) | 0x8000000000000000);
          swift_bridgeObjectRelease(v3);
          if ((v14 & 1) == 0)
            return 0;
          v7 = (id *)&CNWallpaperTypePhoto;
          goto LABEL_7;
        }
        v7 = (id *)&CNWallpaperTypePhoto;
      }
    }
    swift_bridgeObjectRelease(v3);
LABEL_7:
    v3 = *v7;
    v8 = *v7;
  }
  return v3;
}

id sub_1001509B0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;

  v1 = objc_msgSend(v0, "metadata");
  if (!v1)
    return 0;
  v2 = (id)sub_100150B60(v1);
  if (v2)
  {
    v3 = CNWallpaperColorDescriptionKeyRed;
    sub_100150C48((uint64_t)v3);
    v5 = v4;

    if (v5)
    {
      v6 = CNWallpaperColorDescriptionKeyGreen;
      sub_100150C48((uint64_t)v6);
      v8 = v7;

      if (v8)
      {
        v9 = CNWallpaperColorDescriptionKeyBlue;
        sub_100150C48((uint64_t)v9);
        v11 = v10;

        if (v11)
        {
          v12 = CNWallpaperColorDescriptionKeyAlpha;
          sub_100150C48((uint64_t)v12);
          v14 = v13;

          sub_100109898();
          if (v14)
          {
            objc_msgSend(v5, "doubleValue");
            v16 = v15;
            objc_msgSend(v8, "doubleValue");
            v18 = v17;
            objc_msgSend(v11, "doubleValue");
            v20 = v19;
            objc_msgSend(v14, "doubleValue");
            v2 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v16, v18, v20, v21);

            return v2;
          }

        }
        else
        {
          sub_100109898();

        }
      }
      else
      {
        sub_100109898();

      }
    }
    else
    {
      sub_100109898();
    }
    return 0;
  }
  return v2;
}

uint64_t sub_100150B60(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v2 = objc_msgSend(a1, "backgroundColorDescription");

  if (!v2)
    return 0;
  type metadata accessor for CNWallpaperColorDescriptionKey(0);
  v4 = v3;
  v5 = sub_10011D26C();
  v6 = sub_100150BE8();
  v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, v4, v5, v6);

  return v7;
}

unint64_t sub_100150BE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D79F0;
  if (!qword_1002D79F0)
  {
    type metadata accessor for CNWallpaperColorDescriptionKey(255);
    result = swift_getWitnessTable(&unk_1002410E4, v1);
    atomic_store(result, (unint64_t *)&qword_1002D79F0);
  }
  return result;
}

uint64_t sub_100150C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0);
}

void sub_100150C48(uint64_t a1)
{
  uint64_t v1;

  sub_10011B340(a1, v1);
}

id sub_100150C50()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  objc_super v5;

  v1 = objc_allocWithZone((Class)type metadata accessor for ScreenSharingBroadcasterViewController(0));
  v2 = v0;
  v3 = objc_msgSend(v1, "init");
  *(_QWORD *)&v2[OBJC_IVAR___ICSScreenSharingBroadcasterRootViewController_containerViewController] = v3;

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterRootViewController();
  return objc_msgSendSuper2(&v5, "initWithNibName:bundle:", 0, 0);
}

void sub_100150CE8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/ScreenSharingBroadcasterRootViewController.swift", 62, 2);
  __break(1u);
}

id sub_100150D5C()
{
  char *v0;
  void *v1;
  void *v2;
  id result;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class isa;
  objc_super v33;

  v1 = v0;
  v33.receiver = v0;
  v33.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterRootViewController();
  objc_msgSendSuper2(&v33, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR___ICSScreenSharingBroadcasterRootViewController_containerViewController];
  result = sub_100149E80();
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = result;
  objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  result = sub_100149E80();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v5 = result;
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  sub_100136758((uint64_t)v6, "setBackgroundColor:");

  result = sub_10010E2F4();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = result;
  result = sub_100149E80();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = result;
  sub_100136758((uint64_t)result, "addSubview:");

  objc_msgSend(v1, "addChildViewController:", v2);
  objc_msgSend(v2, "didMoveToParentViewController:", v1);
  v9 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100241800;
  result = sub_100149E80();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = objc_msgSend(result, "leadingAnchor");
  sub_100149EAC();
  result = sub_10010E2F4();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = result;
  v13 = objc_msgSend(result, "leadingAnchor");
  sub_10011B028();
  v14 = sub_100151288();
  sub_100151298();

  *(_QWORD *)(v10 + 32) = v12;
  result = sub_100149E80();
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = objc_msgSend(result, "trailingAnchor");
  sub_100149EAC();
  result = sub_10010E2F4();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v16 = result;
  v17 = objc_msgSend(result, "trailingAnchor");
  sub_10011B028();
  v18 = sub_100151288();
  sub_100151298();

  *(_QWORD *)(v10 + 40) = v16;
  result = sub_100149E80();
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v19 = objc_msgSend(result, "topAnchor");
  sub_100149EAC();
  result = sub_10010E2F4();
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v20 = result;
  v21 = objc_msgSend(result, "topAnchor");
  sub_10011B028();
  v22 = sub_100151288();
  sub_100151298();

  *(_QWORD *)(v10 + 48) = v20;
  result = sub_100149E80();
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v23 = result;
  v24 = objc_msgSend(result, "bottomAnchor");

  result = sub_10010E2F4();
  if (result)
  {
    v25 = result;
    v26 = (void *)objc_opt_self(NSLayoutConstraint);
    v27 = objc_msgSend(v25, "bottomAnchor");
    sub_10011B028();
    v28 = objc_msgSend(v24, "constraintEqualToAnchor:", &selRef__routeIsReceiver_);

    *(_QWORD *)(v10 + 56) = v28;
    specialized Array._endMutation()(v29, v30);
    v31 = v10;
    sub_100149E44();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v31);
    objc_msgSend(v26, "activateConstraints:", isa);

    return objc_msgSend(v1, "setNeedsStatusBarAppearanceUpdate");
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_100151158(char a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterRootViewController();
  return objc_msgSendSuper2(&v4, "viewDidAppear:", a1 & 1);
}

void sub_1001511D8()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.ScreenSharingBroadcasterRootViewController", 56, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_100151228()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterRootViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ScreenSharingBroadcasterRootViewController()
{
  return objc_opt_self(ICSScreenSharingBroadcasterRootViewController);
}

id sub_100151288()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2128), v1);
}

void sub_100151298()
{
  void *v0;

}

uint64_t AddCallControlService.__allocating_init(call:callCenter:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, 40, 7);
  AddCallControlService.init(call:callCenter:)(a1, a2);
  return v5;
}

_QWORD *AddCallControlService.init(call:callCenter:)(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v3 = v2;
  v3[3] = a1;
  v3[4] = a2;
  v17 = 1;
  v6 = sub_1001085C0(&qword_1002D7E20);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = a1;
  v8 = a2;
  v3[2] = CurrentValueSubject.init(_:)(&v17);
  v9 = (void *)objc_opt_self(NSNotificationCenter);
  v10 = objc_msgSend(v9, "defaultCenter");
  sub_1001517BC(v10, v11, v12, (uint64_t)"callModelDidChange:", TUCallModelChangedNotification);

  v13 = objc_msgSend(v9, "defaultCenter");
  sub_1001517BC(v13, v14, v15, (uint64_t)"callStatusDidChange:", TUCallCenterCallStatusChangedNotification);

  sub_100151584();
  return v3;
}

uint64_t sub_100151424(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = type metadata accessor for Notification(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  swift_retain(a1);
  a4(v10);
  swift_release(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1001514CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  unsigned __int8 v4;
  id v5;
  _QWORD v6[4];

  v1 = *(_QWORD *)(v0 + 24);
  Notification.object.getter(v6);
  if (v6[3])
  {
    v2 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
    if ((swift_dynamicCast(&v5, v6, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
    {
      v3 = v5;
      v4 = objc_msgSend(v5, "isEqualToCall:", v1);

      if ((v4 & 1) != 0)
        sub_100151584();
    }
  }
  else
  {
    sub_100137118((uint64_t)v6);
  }
}

uint64_t sub_100151584()
{
  char v1;

  v1 = sub_1001515C0() & 1;
  return CurrentValueSubject.send(_:)(&v1);
}

id sub_1001515C0()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;
  unsigned __int8 v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unsigned int v12;

  result = objc_msgSend(*(id *)(v0 + 32), "isAddCallAllowed");
  if ((_DWORD)result)
  {
    v2 = (void *)objc_opt_self(PHInCallUtilities);
    result = objc_msgSend(v2, "sharedInstance");
    if (result)
    {
      v3 = result;
      v4 = objc_msgSend(result, "isSetupAssistantRunning");

      if ((v4 & 1) != 0)
        return 0;
      v5 = *(void **)(v0 + 24);
      if (objc_msgSend(v5, "isConversation"))
      {
        v6 = objc_msgSend(v5, "remoteParticipantHandles");
        v7 = sub_10010BBE8(0, &qword_1002D8290, TUHandle_ptr);
        v8 = sub_10011F4FC();
        v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v6, v7, v8);

        v10 = sub_100137274(v9);
        swift_bridgeObjectRelease(v9);
        if (v10 != 1)
          return 0;
      }
      result = objc_msgSend(v2, "sharedInstance");
      if (result)
      {
        v11 = result;
        v12 = objc_msgSend(result, "isInLostMode");

        return (id)(v12 ^ 1);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t AddCallControlService.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return v0;
}

uint64_t AddCallControlService.__deallocating_deinit()
{
  uint64_t v0;

  AddCallControlService.deinit();
  return swift_deallocClassInstance(v0, 40, 7);
}

unint64_t sub_10015175C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D9700;
  if (!qword_1002D9700)
  {
    v1 = type metadata accessor for AddCallControlService();
    result = swift_getWitnessTable(&protocol conformance descriptor for AddCallControlService, v1);
    atomic_store(result, (unint64_t *)&qword_1002D9700);
  }
  return result;
}

uint64_t type metadata accessor for AddCallControlService()
{
  return objc_opt_self(_TtC13InCallService21AddCallControlService);
}

id sub_1001517BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return objc_msgSend(a1, *(SEL *)(v6 + 1328), v5, a4, a5, 0);
}

char *sub_1001517CC(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;

  v6 = objc_allocWithZone((Class)type metadata accessor for VisualVoicemailManager());
  v7 = a1;
  swift_retain(a3);
  return sub_100104FEC(v7, a2, a3);
}

id sub_1001518A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisualVoicemailManagerFactory();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1001518F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisualVoicemailManagerFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VisualVoicemailManagerFactory()
{
  return objc_opt_self(PHVisualVoicemailManagerFactory);
}

uint64_t sub_100151944()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100151970(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SecureWindow();
  sub_100151B5C((uint64_t)v9.super_class, "initWithWindowScene:", v3, v4, v5, v6, v7, v8, v9);

  sub_100064628();
}

void sub_1001519D0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)sub_100151B38();
  sub_100151B20((uint64_t)v7.super_class, "initWithFrame:", v1, v2, v3, v4, v5, v6, v7);
  sub_100151B4C();
}

void sub_100151A20(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SecureWindow();
  sub_100151B5C((uint64_t)v9.super_class, "initWithCoder:", v3, v4, v5, v6, v7, v8, v9);

  sub_100064628();
}

void sub_100151A80()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)sub_100151B38();
  sub_100151B20((uint64_t)v7.super_class, "initWithContentRect:", v1, v2, v3, v4, v5, v6, v7);
  sub_100151B4C();
}

id sub_100151AD0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureWindow();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SecureWindow()
{
  return objc_opt_self(ICSSecureWindow);
}

id sub_100151B20(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  double v9;
  double v10;
  double v11;
  double v12;

  return objc_msgSendSuper2(&a9, a2, v12, v11, v10, v9);
}

uint64_t sub_100151B38()
{
  return type metadata accessor for SecureWindow();
}

id sub_100151B5C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  uint64_t v9;

  return objc_msgSendSuper2(&a9, a2, v9);
}

id FaceTimeControlService.callCenter.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

uint64_t FaceTimeControlService.__allocating_init(call:callCenter:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, 48, 7);
  FaceTimeControlService.init(call:callCenter:)(a1, a2);
  return v5;
}

_QWORD *FaceTimeControlService.init(call:callCenter:)(void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;

  v4 = v2;
  v7 = sub_100152318();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  sub_1001436EC();
  v4[4] = a1;
  v4[5] = a2;
  v23 = 1;
  v10 = sub_1001085C0(&qword_1002D7E20);
  sub_10010BC64(v10);
  v11 = a1;
  v12 = a2;
  v4[2] = CurrentValueSubject.init(_:)(&v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v3, enum case for FaceTimeValidityState.unknown(_:), v7);
  v13 = sub_1001085C0(&qword_1002D9830);
  sub_10010BC64(v13);
  v4[3] = CurrentValueSubject.init(_:)(v3);
  v14 = (void *)objc_opt_self(NSNotificationCenter);
  v15 = objc_msgSend(v14, "defaultCenter");
  sub_1001517BC(v15, v16, v17, (uint64_t)"callStatusDidChange:", TUCallCenterCallStatusChangedNotification);

  v18 = objc_msgSend(v14, "defaultCenter");
  sub_1001517BC(v18, v19, v20, (uint64_t)"faceTimeIDStatusDidChange:", TUCallFaceTimeIDStatusChangedNotification);

  sub_100151D4C(v21);
  sub_100151ED8();

  return v4;
}

void sub_100151D34(uint64_t a1)
{
  sub_100151D94(a1, (void (*)(void))sub_100151D4C);
}

uint64_t sub_100151D4C(uint64_t a1)
{
  char v2;

  v2 = sub_100152030(a1) & 1;
  return CurrentValueSubject.send(_:)(&v2);
}

void sub_100151D88(uint64_t a1)
{
  sub_100151D94(a1, sub_100151ED8);
}

void sub_100151D94(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  id v6;
  unsigned __int8 v7;
  id v8;
  _QWORD v9[4];

  v4 = *(_QWORD *)(v2 + 32);
  Notification.object.getter(v9);
  if (v9[3])
  {
    v5 = sub_10014971C();
    if ((swift_dynamicCast(&v8, v9, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
    {
      v6 = v8;
      v7 = objc_msgSend(v8, "isEqualToCall:", v4);

      if ((v7 & 1) != 0)
        a2();
    }
  }
  else
  {
    sub_100137118((uint64_t)v9);
  }
}

void sub_100151E4C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;

  v8 = type metadata accessor for Notification(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  sub_1001436EC();
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  swift_retain(a1);
  a4(v4);
  v11 = swift_release(a1);
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(v4, v8, v11);
  sub_1001360E4();
}

void sub_100151ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v0 = sub_100152318();
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001521E4((uint64_t)v4);
  CurrentValueSubject.send(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1001360E4();
}

Swift::Void __swiftcall FaceTimeControlService.requestUpgradeToFaceTime()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = v0 + 32;
  v1 = *(void **)(v0 + 32);
  objc_msgSend(*(id *)(v2 + 8), "requestVideoUpgradeForCall:originatingUIType:", v1, 27);
  v7 = sub_10010E310((uint64_t)objc_msgSend(v1, "setIsSendingVideo:", 1), "routeController");
  v3 = objc_msgSend(v7, "pickedRoute");
  if (v3)
  {
    v4 = v3;
    if (objc_msgSend(v3, "isReceiver"))
    {
      v5 = objc_msgSend(v7, "speakerRoute");
      if (v5)
      {
        v6 = v5;
        objc_msgSend(v7, "pickRoute:", v5);

        v7 = v6;
      }
    }

  }
}

id sub_100152030(uint64_t a1)
{
  id v1;
  unsigned __int8 v2;
  uint64_t v3;
  id result;
  void *v5;
  unsigned int v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  unsigned int v20;

  v1 = sub_10010E310(a1, "provider");
  v2 = objc_msgSend(v1, "supportsAudioAndVideo");

  if ((v2 & 1) == 0)
  {
    result = objc_msgSend((id)objc_opt_self(PHInCallUtilities), "sharedInstance");
    if (!result)
    {
      __break(1u);
      goto LABEL_17;
    }
    v5 = result;
    v6 = objc_msgSend(result, "faceTimeVideoIsAvailable");

    if (!v6)
      return 0;
  }
  v7 = sub_10010E310(v3, "handle");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "value");

    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0xE000000000000000;
  }
  v13 = String.count.getter(v10, v12);
  v14 = swift_bridgeObjectRelease(v12);
  if (v13 < 1)
    return 0;
  v15 = (uint64_t)sub_10010E310(v14, "isConferenced");
  if ((v15 & 1) != 0)
    return 0;
  v16 = (uint64_t)sub_10010E310(v15, "isVoicemail");
  if ((v16 & 1) != 0)
    return 0;
  v17 = (uint64_t)sub_10010E310(v16, "isEmergency");
  if ((v17 & 1) != 0)
    return 0;
  v18 = sub_10010E310(v17, "status");
  if ((_DWORD)v18 != 1 || sub_10010E310((uint64_t)v18, "faceTimeIDStatus") == 1)
    return 0;
  result = objc_msgSend((id)objc_opt_self(PHInCallUtilities), "sharedInstance");
  if (result)
  {
    v19 = result;
    v20 = objc_msgSend(result, "isSetupAssistantRunning");

    return (id)(v20 ^ 1);
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1001521E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = objc_msgSend(*(id *)(v1 + 32), "faceTimeIDStatus");
  v4 = sub_100152318();
  v5 = (unsigned int *)&enum case for FaceTimeValidityState.valid(_:);
  if (v3 != 2)
    v5 = (unsigned int *)&enum case for FaceTimeValidityState.unknown(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, *v5, v4);
}

uint64_t FaceTimeControlService.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return v0;
}

uint64_t FaceTimeControlService.__deallocating_deinit()
{
  uint64_t v0;

  FaceTimeControlService.deinit();
  return swift_deallocClassInstance(v0, 48, 7);
}

unint64_t sub_10015229C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D9838;
  if (!qword_1002D9838)
  {
    v1 = type metadata accessor for FaceTimeControlService();
    result = swift_getWitnessTable(&protocol conformance descriptor for FaceTimeControlService, v1);
    atomic_store(result, (unint64_t *)&qword_1002D9838);
  }
  return result;
}

uint64_t type metadata accessor for FaceTimeControlService()
{
  return objc_opt_self(_TtC13InCallService22FaceTimeControlService);
}

void sub_1001522F8()
{
  FaceTimeControlService.requestUpgradeToFaceTime()();
}

uint64_t sub_100152318()
{
  return type metadata accessor for FaceTimeValidityState(0);
}

id sub_100152340()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PHAudioCallViewControllerWrapper_viewController);
}

id sub_100152350(void *a1, void *a2, uint64_t a3, double a4)
{
  void *v4;
  char *v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  objc_super v15;

  objc_allocWithZone((Class)type metadata accessor for AudioCallViewController(0));
  v9 = v4;
  v10 = a1;
  v11 = a2;
  v12 = sub_100152710(v10, v11, a4);
  swift_unknownObjectWeakAssign(&v12[qword_1002D9970], a3);
  *(_QWORD *)&v9[OBJC_IVAR___PHAudioCallViewControllerWrapper_viewController] = v12;

  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for AudioCallViewControllerWrapper();
  v13 = objc_msgSendSuper2(&v15, "init");

  sub_1001437DC();
  return v13;
}

void sub_100152490()
{
  sub_100153014((uint64_t)"InCallService.AudioCallViewControllerWrapper", 44, (uint64_t)"init()", 6);
  __break(1u);
}

id sub_1001524C4(uint64_t a1)
{
  return sub_1001354B8(a1, type metadata accessor for AudioCallViewControllerWrapper);
}

uint64_t type metadata accessor for AudioCallViewControllerWrapper()
{
  return objc_opt_self(PHAudioCallViewControllerWrapper);
}

uint64_t type metadata accessor for AudioCallViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1002D9980;
  if (!qword_1002D9980)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AudioCallViewController);
  return result;
}

uint64_t sub_100152538(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = "\b";
  v2[3] = &unk_100242840;
  return swift_initClassMetadata2(a1, 0, 4, v2, a1 + qword_1002E2E00);
}

void sub_1001525A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_1002D9978);
  *(_QWORD *)(v1 + qword_1002D9978) = a1;

}

id sub_1001525B8()
{
  char *v0;
  uint64_t v1;
  id v2;
  id *v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;

  v1 = sub_100152664();
  if (v1)
  {
    v2 = (id)v1;
    v3 = (id *)&v0[qword_1002D9978];
    if (!*(_QWORD *)&v0[qword_1002D9978])
    {
      objc_allocWithZone((Class)type metadata accessor for CallDetailsCoordinator(0));
      v4 = v0;
      v2 = v2;
      v5 = CallDetailsCoordinator.init(hostViewController:controlsManager:deferredPresentationManager:)(v4, v2, v4);
      sub_1001525A4(v5);
    }

  }
  else
  {
    sub_1001525A4(0);
    v3 = (id *)&v0[qword_1002D9978];
  }
  v6 = *v3;
  v7 = *v3;
  return v6;
}

uint64_t sub_100152664()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "delegate");

  if (v1)
  {
    v2 = objc_opt_self(ICSApplicationDelegate);
    if (swift_dynamicCastObjCClass(v1, v2))
    {
      v3 = ICSApplicationDelegate.bannerPresentationManager.getter();
      v4 = dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();
      sub_1001437DC();

      return v4;
    }
    sub_1001437DC();
  }
  return 0;
}

char *sub_100152710(void *a1, void *a2, double a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  char *result;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v7 = type metadata accessor for AudioCallView(0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100153008(qword_1002D9970);
  *(_QWORD *)&v3[qword_1002D9978] = 0;
  *(_QWORD *)&v3[qword_1002D9960] = a1;
  v11 = v3;
  v12 = a1;
  result = (char *)objc_msgSend(a2, "frontmostCall");
  if (result)
  {
    v14 = result;
    v15 = type metadata accessor for AudioCallModelManager();
    swift_allocObject(v15, 96, 7);
    v16 = v12;
    v17 = a2;
    v18 = sub_10016A208(v16, v14, v17, a3);
    v19 = qword_1002D9968;
    *(_QWORD *)&v11[qword_1002D9968] = v18;

    v20 = swift_retain(*(_QWORD *)(*(_QWORD *)&v11[v19] + 48));
    AudioCallView.init(model:)(v20);
    v21 = (char *)LockScreenHostingController.init(rootView:)(v10);
    v22 = *(_QWORD *)&v21[qword_1002D9968];
    *(_QWORD *)(v22 + 64) = sub_100152FC0((unint64_t *)&unk_1002D9A40, (uint64_t)&unk_1002428C8);
    swift_unknownObjectWeakAssign(v22 + 56, v21);
    v23 = v21;
    swift_retain(v22);
    sub_10016A374();
    swift_release(v22);

    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001528A8()
{
  char *v0;

  sub_100153008(qword_1002D9970);
  *(_QWORD *)&v0[qword_1002D9978] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/AudioCallViewControllerWrapper.swift", 50, 2);
  __break(1u);
}

void sub_10015291C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1001528A8();
}

void sub_100152934()
{
  sub_100153014((uint64_t)"InCallService.AudioCallViewController", 37, (uint64_t)"init(rootView:)", 15);
  __break(1u);
}

void sub_10015295C()
{
  sub_100153014((uint64_t)"InCallService.AudioCallViewController", 37, (uint64_t)"init(coder:rootView:)", 21);
  __break(1u);
}

void sub_100152984()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_1002D9968));
  sub_100123A08(v0 + qword_1002D9970);

}

id sub_1001529D0()
{
  return sub_1001354B8(0, (uint64_t (*)(void))type metadata accessor for AudioCallViewController);
}

void sub_1001529E0(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + qword_1002D9968));
  sub_100123A08(a1 + qword_1002D9970);

}

uint64_t sub_100152A38()
{
  return type metadata accessor for AudioCallViewController(0);
}

void sub_100152A44()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;

  if (objc_msgSend(v0, "isReadyToShowCallDetails"))
  {
    v1 = sub_100152664();
    if (v1)
    {
      v4 = (id)v1;
      if ((dispatch thunk of ConversationControlsManager.shouldShowCallDetailsWhenReady.getter() & 1) != 0)
      {
        v2 = sub_1001525B8();
        if (v2)
        {
          v3 = v2;
          dispatch thunk of CallDetailsCoordinator.start(withReason:)(0xD00000000000003DLL, 0x80000001001F36B0);

        }
      }

    }
  }
}

void sub_100152AD8(void *a1)
{
  id v1;

  v1 = a1;
  sub_100152A40();

}

BOOL sub_100152B0C(void *a1)
{
  id v1;
  BOOL v2;

  v1 = a1;
  v2 = sub_100152B3C();

  return v2;
}

BOOL sub_100152B3C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_1002D9960), "callDisplayStyle") == (id)2;
}

void sub_100152B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  objc_msgSend(*(id *)(v2 + qword_1002D9968), "callDisplayStyleDidChangeFromStyle:toStyle:", a1, a2);
  sub_100152A44();
}

void sub_100152B9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;

  v6 = a1;
  sub_100152B6C(a3, a4);

}

void sub_100152BE4(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  _BYTE v12[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if ((a1 & 1) == 0)
      goto LABEL_9;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + qword_1002D9970);
    if (!v6)
      goto LABEL_9;
    v7 = (void *)v6;
    if (objc_msgSend((id)objc_opt_self(PHUIConfiguration), "shouldUseFullScreenPeoplePicker"))
    {
      v8 = objc_msgSend((id)objc_opt_self(PHInCallUtilities), "sharedInstance");
      if (!v8)
        goto LABEL_12;
      v9 = v8;
      sub_100152F50(1, 0xD000000000000025, 0x80000001001F3650, v8);

    }
    v10 = objc_msgSend(v5, "view");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v7, "presentPhoneRemoteViewControllerForView:", v10);

      swift_unknownObjectRelease(v7);
      v5 = v11;
LABEL_9:

      return;
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
}

void sub_100152D10()
{
  sub_100152D24((uint64_t)sub_100152FB8, (uint64_t)&unk_10028AAD0);
}

void sub_100152D24(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[5];
  uint64_t v9;

  v4 = objc_msgSend((id)objc_opt_self(PHInCallUtilities), "sharedInstance");
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject(&unk_10028AA90, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    v8[4] = a1;
    v9 = v6;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100110294;
    v8[3] = a2;
    v7 = _Block_copy(v8);
    objc_msgSend(v5, "requestPasscodeUnlockWithCompletion:", v7, swift_release(v9).n128_f64[0]);
    _Block_release(v7);

  }
  else
  {
    __break(1u);
  }
}

void sub_100152E08(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  id v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if ((a1 & 1) != 0)
    {
      v6 = sub_1001525B8();
      if (v6)
      {
        v7 = v6;
        dispatch thunk of CallDetailsCoordinator.start(withReason:)(0xD00000000000002ELL, 0x80000001001F3680);

        v5 = v7;
      }
    }

  }
}

void sub_100152E90()
{
  sub_100152D24((uint64_t)sub_100152F30, (uint64_t)&unk_10028AAA8);
}

uint64_t sub_100152EC0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100152FC0(&qword_1002D9A30, (uint64_t)&unk_1002428A0);
  result = sub_100152FC0(&qword_1002D9A38, (uint64_t)&unk_100242878);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100152F0C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100152F30(char a1)
{
  uint64_t v1;

  sub_100152BE4(a1, v1);
}

uint64_t sub_100152F38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100152F48(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100152F50(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  objc_msgSend(a4, "setRequestedVCPresentationWithStatusBar:withReasonLog:", a1 & 1, v7);

}

void sub_100152FB8(char a1)
{
  uint64_t v1;

  sub_100152E08(a1, v1);
}

uint64_t sub_100152FC0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AudioCallViewController(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100153008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_unknownObjectWeakInit(v1 + a1, 0);
}

uint64_t sub_100153014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, a2, a3, a4, 0);
}

uint64_t DeclineControlService.__allocating_init(callCenter:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_100109754(v1, 32);
  DeclineControlService.init(callCenter:)(a1);
  return v3;
}

uint64_t DeclineControlService.init(callCenter:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v2 = v1;
  *(_QWORD *)(v2 + 16) = a1;
  v4 = objc_allocWithZone((Class)type metadata accessor for DeclineCallServiceFactory());
  v5 = a1;
  v6 = objc_msgSend(v4, "init");
  v7 = type metadata accessor for DeclineCallService();
  sub_100109754(v7, 112);
  v8 = v5;
  v9 = sub_1001829C4((uint64_t)v8);

  *(_QWORD *)(v2 + 24) = v9;
  return v2;
}

Swift::Void __swiftcall DeclineControlService.requestDeclineCall()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1001085C0(&qword_1002D84A0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  sub_100108600((uint64_t)v5, 1, 1, v6);
  type metadata accessor for MainActor(0);
  v7 = swift_retain();
  v8 = static MainActor.shared.getter(v7);
  v9 = (_QWORD *)sub_100109754((uint64_t)&unk_10028AB48, 40);
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = v1;
  sub_10011102C();
  swift_release(v10);
}

uint64_t sub_1001531BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[15] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[16] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[17] = v6;
  v4[18] = v7;
  return swift_task_switch(sub_100153228, v6, v7);
}

uint64_t sub_100153228()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = *(void **)(v0[15] + 24);
  v0[2] = v0;
  v0[3] = sub_1001532B8;
  v3 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_10014FC98;
  v4[3] = &unk_10028AB60;
  v4[4] = v3;
  objc_msgSend(v2, "declineAnsweringFrontMostCallViaUserActionWithCompletionHandler:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_1001532B8()
{
  uint64_t v0;

  return swift_task_switch(sub_1001532FC, *(_QWORD *)(*(_QWORD *)v0 + 136), *(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_1001532FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 128));
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t DeclineControlService.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t DeclineControlService.__deallocating_deinit()
{
  uint64_t v0;

  DeclineControlService.deinit();
  return swift_deallocClassInstance(v0, 32, 7);
}

void sub_100153368()
{
  DeclineControlService.requestDeclineCall()();
}

uint64_t sub_100153388()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001533B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1002D9A54);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100135A94;
  return sub_1001531BC(a1, v4, v5, v6);
}

uint64_t type metadata accessor for DeclineControlService()
{
  return objc_opt_self(_TtC13InCallService21DeclineControlService);
}

uint64_t sub_100153440(uint64_t a1, void *a2)
{
  id v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t countAndFlagsBits;
  Swift::String v10;

  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10._object = (void *)0xE000000000000000;
  v5.value._object = (void *)0x80000001001F37F0;
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  v5.value._countAndFlagsBits = 0xD000000000000012;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v5, (NSBundle)v4, v7, v10)._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_100153514()
{
  uint64_t v0;
  uint64_t v1;

  sub_100156AB4(0, (unint64_t *)&qword_1002DB3A0, NSAttributedString_ptr);
  v0 = Transcript.text.getter();
  sub_100185B18(v0, v1);
  sub_100109438();
}

void sub_10015355C()
{
  Transcript.text.getter();
  sub_100109438();
}

uint64_t sub_1001535AC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService22FTTranscriptionMessage_confidenceRating);
}

id sub_1001535C4(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService22FTTranscriptionMessage_confidenceRating] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService22FTTranscriptionMessage_confidence] = 0x3FF0000000000000;
  v4 = &v1[OBJC_IVAR____TtC13InCallService22FTTranscriptionMessage_transcriptData];
  v5 = sub_100156F1C();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, "init");
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

void sub_100153678()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.FTTranscriptionMessage", 36, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1001536E8()
{
  return type metadata accessor for FTTranscriptionMessage(0);
}

uint64_t type metadata accessor for FTTranscriptionMessage(uint64_t a1)
{
  return sub_100120158(a1, (uint64_t *)&unk_1002D9B40, (uint64_t)&nominal type descriptor for FTTranscriptionMessage);
}

uint64_t sub_100153704(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Transcript(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1001537B0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_100156AB4(0, (unint64_t *)&qword_1002DB3A0, NSAttributedString_ptr);
  v1 = sub_100156E60((uint64_t)objc_msgSend(v0, "text"));
  v3 = v2;

  sub_100185B18(v1, v3);
  sub_100109830();
}

id sub_100153828(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  NSString v5;

  v4 = a1;
  a3();
  sub_100156F10();

  v5 = String._bridgeToObjectiveC()();
  sub_100109558();
  return sub_100156D2C(v5);
}

void sub_100153870()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "makeTranscriptMessage");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  sub_100109830();
}

void sub_1001538CC(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int sub_1001538F0(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL sub_100153934(char *a1, char *a2)
{
  return sub_100107B18(*a1, *a2);
}

Swift::Int sub_100153940()
{
  unsigned __int8 *v0;

  return sub_1001538F0(*v0);
}

void sub_100153948(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001538CC(a1, *v1);
}

void sub_10015398C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  v3 = __chkstk_darwin(v0, v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v3, v6);
  v9 = (char *)&v11 - v8;
  dispatch thunk of Message.recordUUID.getter(v7);
  sub_100156DDC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  v10 = objc_allocWithZone((Class)type metadata accessor for MessageID(0));
  sub_10011FF20((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
  sub_1001360E4();
}

void sub_100153A9C()
{
  dispatch thunk of Message.provider.getter();
  sub_100109438();
}

uint64_t sub_100153B7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  dispatch thunk of Message.callUUID.getter();
  v2 = type metadata accessor for UUID(0);
  return sub_100108600(a1, 0, 1, v2);
}

uint64_t sub_100153BEC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  __int16 v4;
  unint64_t v5;
  unint64_t v6;

  LOWORD(result) = ((uint64_t (*)(void))dispatch thunk of Message.messageType.getter)();
  if ((unsigned __int16)result < 3u)
    return (unsigned __int16)result;
  _StringGuts.grow(_:)(23);
  v1 = swift_bridgeObjectRelease(0xE000000000000000);
  v5 = 0xD000000000000015;
  v6 = 0x80000001001F3DD0;
  v2 = dispatch thunk of Message.messageType.getter(v1);
  v4 = MessageType.rawValue.getter(v2);
  v3._countAndFlagsBits = String.init<A>(reflecting:)(&v4);
  String.append(_:)(v3);
  sub_1001096DC();
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v5, v6, "InCallService/FTMessage.swift", 29, 2);
  __break(1u);
  return result;
}

uint64_t sub_100153CC8()
{
  if ((dispatch thunk of Message.isFromUnknown.getter() & 1) != 0)
    return 0;
  else
    return dispatch thunk of Message.from.getter();
}

void sub_100153D30()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  id v3;

  sub_100153CC8();
  if (v0)
  {
    v1 = (void *)objc_opt_self(TUHandle);
    v2 = sub_100156E90();
    sub_1001096DC();
    v3 = objc_msgSend(v1, "normalizedHandleWithDestinationID:", v2);

  }
  sub_100109830();
}

id sub_100153DC4(uint64_t a1)
{
  uint64_t (*v2)(void);
  SEL *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;

  swift_retain();
  v2 = (uint64_t (*)(void))sub_100156EB0();
  sub_100153ED0(v2, v3);
  v5 = v4;
  swift_release(a1);
  if (!v5)
    return sub_100156D2C(0);
  v6 = sub_100156E90();
  sub_1001096DC();
  return sub_100156D2C(v6);
}

id sub_100153E24()
{
  void *v0;
  id v1;
  void *v2;
  NSString v3;

  dispatch thunk of Message.recipient.getter();
  v1 = v0;
  if (v0)
  {
    v2 = (void *)objc_opt_self(TUHandle);
    v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v1);
    v1 = objc_msgSend(v2, "normalizedHandleWithDestinationID:", v3);

  }
  return v1;
}

void sub_100153ED0(uint64_t (*a1)(void), SEL *a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;

  v3 = (void *)a1();
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, *a2);
    if (v5)
    {
      v6 = v5;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

    }
  }
  sub_100109830();
}

uint64_t sub_100153FA8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t result;

  if (*(_BYTE *)(v0 + 32) != 1)
    return *(_QWORD *)(v0 + 24);
  v1 = (unsigned __int16)dispatch thunk of Message.mailboxType.getter();
  v2 = 1;
  if (v1 == 2)
    v2 = 2;
  if (v1 == 1)
    result = 3;
  else
    result = v2;
  *(_QWORD *)(v0 + 24) = result;
  *(_BYTE *)(v0 + 32) = 0;
  return result;
}

void sub_100154038()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty) == 1)
  {
    sub_100153FA8();
  }
  else
  {
    dispatch thunk of Message.mailboxType.getter();
    sub_100109438();
  }
}

uint64_t sub_1001540B4(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty) = 1;
  *(_QWORD *)(v1 + 24) = result;
  *(_BYTE *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1001540D0()
{
  uint64_t v0;
  int v1;
  char v2;

  v1 = *(unsigned __int8 *)(v0 + 33);
  if (v1 == 2)
  {
    v2 = dispatch thunk of Message.isRead.getter();
    *(_BYTE *)(v0 + 33) = v2 & 1;
  }
  else
  {
    v2 = v1 & 1;
  }
  return v2 & 1;
}

void sub_100154120()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty) == 1)
  {
    sub_1001540D0();
  }
  else
  {
    dispatch thunk of Message.isRead.getter();
    sub_100109438();
  }
}

uint64_t sub_100154184(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty) = 1;
  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t sub_100154234()
{
  return dispatch thunk of Message.dateCreated.getter();
}

void sub_100154260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  int v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  sub_1001085C0((uint64_t *)&unk_1002DB390);
  sub_100120AA0();
  __chkstk_darwin(v3, v4);
  sub_10014357C();
  sub_1001085C0((uint64_t *)&unk_1002D9BD8);
  sub_100120AA0();
  __chkstk_darwin(v5, v6);
  sub_1001097B0();
  v8 = sub_10015444C(v7);
  if (v8 == 2
    && (v8 = dispatch thunk of Message.isRTT.getter(), (v8 & 1) != 0)
    && (v8 = TUCallScreeningRTTEnabled(0), (_DWORD)v8))
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC13InCallService9FTMessage_didLoadTranscript) == 1)
    {
      sub_100154634();
      v10 = v9;
      if (v9)
      {
        v11 = objc_opt_self(MPRTTTranscriptionMessage);
        v12 = (void *)swift_dynamicCastObjCClass(v10, v11);
        if (v12)
        {
          v13 = objc_msgSend(v12, "conversation");
          swift_unknownObjectRelease(v10);
          if (v13)
          {
            v14 = objc_msgSend(v13, "utterances");

            if (v14)
            {
              objc_msgSend(v14, "count");

            }
            else
            {
              __break(1u);
            }
          }
        }
        else
        {
          swift_unknownObjectRelease(v10);
        }
      }
    }
  }
  else
  {
    v15 = sub_10015444C(v8);
    if (v15)
    {
      if (v15 == 1)
        return;
      sub_100154694(v2);
      v19 = sub_100156F1C();
      sub_100109FF4(v2, 1, v19);
      v17 = (uint64_t *)&unk_1002D9BD8;
      v18 = v2;
    }
    else
    {
      sub_100156F08(&OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptURL, (uint64_t (*)(void))&dispatch thunk of Message.sandboxTranscriptFile.getter);
      v16 = sub_10011AFB4();
      sub_100109FF4(v1, 1, v16);
      v17 = (uint64_t *)&unk_1002DB390;
      v18 = v1;
    }
    sub_10011ABE4(v18, v17);
  }
}

uint64_t sub_10015444C(uint64_t a1)
{
  uint64_t v1;
  unsigned __int16 v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = dispatch thunk of Message.messageType.getter(a1);
  if (v2 < 3u)
    return 0x10002u >> (8 * v2);
  if (qword_1002D7260 != -1)
    swift_once(&qword_1002D7260, sub_10010BD38);
  v4 = type metadata accessor for Logger(0);
  sub_100108664(v4, (uint64_t)&unk_1002E2CF8);
  v5 = swift_retain_n(v1, 2);
  v7 = Logger.logObject.getter(v5, v6);
  v8 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v14 = v10;
    *(_DWORD *)v9 = 136446210;
    LOWORD(v13) = dispatch thunk of Message.messageType.getter(v10);
    v11 = String.init<A>(describing:)(&v13, &type metadata for MessageType);
    v13 = sub_100121E04(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v9 + 4, v9 + 12);
    sub_100156E54();
    sub_1001094F4();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unexpected Message type %{public}s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    sub_100109440(v10);
    sub_100109440((uint64_t)v9);

  }
  else
  {

    sub_100156E54();
  }
  return 0;
}

void sub_100154614()
{
  dispatch thunk of Message.isRTT.getter();
  sub_100109438();
}

void sub_100154634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcript;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcript);
  if (v2 == 1)
  {
    v3 = sub_100155220(v0);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_unknownObjectRetain(v3);
    sub_1001569B0(v4);
  }
  sub_1001569C0(v2);
  sub_1001360E4();
}

void sub_100154694(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _BYTE v17[24];
  _BYTE v18[24];

  sub_1001085C0(&qword_1002D9CE0);
  sub_100120AA0();
  v5 = __chkstk_darwin(v3, v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v8);
  v10 = &v17[-v9];
  v11 = v1 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptData;
  sub_100111F6C(v1 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptData, (uint64_t)v18, 0);
  sub_1001569D0(v11, (uint64_t)v10, &qword_1002D9CE0);
  v12 = sub_1001085C0((uint64_t *)&unk_1002D9BD8);
  sub_100156EF4((uint64_t)v10, 1, v12);
  if (v13)
  {
    sub_10011ABE4((uint64_t)v10, &qword_1002D9CE0);
    dispatch thunk of Message.transcript.getter();
    v14 = sub_100156EB0();
    sub_1001569D0(v14, v15, v16);
    sub_100108600((uint64_t)v7, 0, 1, v12);
    sub_100111F6C(v11, (uint64_t)v17, 33);
    sub_1001569FC((uint64_t)v7, v11, &qword_1002D9CE0);
    swift_endAccess(v17);
  }
  else
  {
    sub_100156A28((uint64_t)v10, a1, (uint64_t *)&unk_1002D9BD8);
  }
}

uint64_t sub_100154830()
{
  return dispatch thunk of Message.duration.getter();
}

void sub_10015486C()
{
  uint64_t v0;

  v0 = dispatch thunk of Message.transcriptionStatus.getter();
  TranscriptionStatus.rawValue.getter(v0);
  TranscriptionStatus.rawValue.getter(0);
  sub_100109438();
}

void sub_1001548A0()
{
  uint64_t v0;

  v0 = dispatch thunk of Message.mailboxType.getter();
  MailboxType.rawValue.getter(v0);
  MailboxType.rawValue.getter(1);
  sub_100109438();
}

uint64_t sub_1001548F8()
{
  uint64_t v0;
  int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + 34);
  if (v1 != 2)
    return v1 & 1;
  result = 0;
  *(_BYTE *)(v0 + 34) = 0;
  return result;
}

uint64_t sub_10015493C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty) = 1;
  *(_BYTE *)(v1 + 34) = result;
  return result;
}

void sub_100154960()
{
  dispatch thunk of Message.isSensitive.getter();
  sub_100109438();
}

void sub_100154A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];

  v2 = sub_1001085C0((uint64_t *)&unk_1002DB390);
  sub_100120AA0();
  __chkstk_darwin(v3, v4);
  sub_100156DA8();
  __chkstk_darwin(v5, v6);
  v8 = &v31[-v7];
  sub_1001085C0(&qword_1002D9CE8);
  sub_100120AA0();
  __chkstk_darwin(v9, v10);
  sub_100156D8C();
  __chkstk_darwin(v11, v12);
  v14 = &v31[-v13];
  v15 = v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___dataURL;
  sub_100111F6C(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___dataURL, (uint64_t)v32, 0);
  sub_1001569D0(v15, (uint64_t)v14, &qword_1002D9CE8);
  v16 = sub_100156EF4((uint64_t)v14, 1, v2);
  if (v18)
  {
    sub_10011ABE4((uint64_t)v14, &qword_1002D9CE8);
    v19 = (void *)dispatch thunk of Message.sandboxMessageFile.getter();
    v20 = (void *)dispatch thunk of SandboxExtendedURL.sandboxResolvedURL.getter();

    if (v20)
    {
      v21 = type metadata accessor for URL(0);
      sub_100156D6C();
      sub_1001081CC((unint64_t *)&unk_1002D9CF0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      sub_100156D58(v22);

      sub_100156EF4(v1, 1, v21);
      if (v18)
      {
        v25 = (uint64_t)v8;
        v26 = 1;
      }
      else
      {
        sub_100156D14();
        v25 = (uint64_t)v8;
        v26 = 0;
      }
      v23 = 1;
      v24 = v21;
    }
    else
    {
      type metadata accessor for URL(0);
      v25 = sub_100156E7C();
    }
    v27 = sub_100108600(v25, v26, v23, v24);
    sub_100156EA4(v27, v28, (uint64_t *)&unk_1002DB390);
    v29 = sub_100156CB8();
    sub_100156EC8(v29, v30, &qword_1002D9CE8);
    v16 = swift_endAccess(v31);
  }
  sub_100156EBC(v16, v17, (uint64_t *)&unk_1002DB390);
  sub_10010BC44();
}

void sub_100154CEC(_QWORD *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  _BYTE v37[24];

  v6 = sub_1001085C0((uint64_t *)&unk_1002DB390);
  sub_100120AA0();
  __chkstk_darwin(v7, v8);
  sub_100156DA8();
  __chkstk_darwin(v9, v10);
  v12 = &v36[-v11];
  sub_1001085C0(&qword_1002D9CE8);
  sub_100120AA0();
  __chkstk_darwin(v13, v14);
  sub_100156D8C();
  __chkstk_darwin(v15, v16);
  v18 = &v36[-v17];
  v19 = v2 + *a1;
  sub_100111F6C(v19, (uint64_t)v37, 0);
  sub_1001569D0(v19, (uint64_t)v18, &qword_1002D9CE8);
  v20 = sub_100156EF4((uint64_t)v18, 1, v6);
  if (v22)
  {
    sub_10011ABE4((uint64_t)v18, &qword_1002D9CE8);
    v23 = a2();
    if (v23
      && (v24 = (void *)v23,
          v25 = (void *)dispatch thunk of SandboxExtendedURL.sandboxResolvedURL.getter(),
          v24,
          v25))
    {
      v26 = sub_10011AFB4();
      sub_100156D6C();
      sub_1001081CC((unint64_t *)&unk_1002D9CF0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      sub_100156D58(v27);

      sub_100156EF4(v3, 1, v26);
      if (v22)
      {
        v30 = (uint64_t)v12;
        v31 = 1;
      }
      else
      {
        sub_100156D14();
        v30 = (uint64_t)v12;
        v31 = 0;
      }
      v28 = 1;
      v29 = v26;
    }
    else
    {
      sub_10011AFB4();
      v30 = sub_100156E7C();
    }
    v32 = sub_100108600(v30, v31, v28, v29);
    sub_100156EA4(v32, v33, (uint64_t *)&unk_1002DB390);
    v34 = sub_100156CB8();
    sub_100156EC8(v34, v35, &qword_1002D9CE8);
    v20 = swift_endAccess(v36);
  }
  sub_100156EBC(v20, v21, (uint64_t *)&unk_1002DB390);
  sub_10010BC44();
}

double sub_100154EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double result;

  sub_1001085C0((uint64_t *)&unk_1002DB390);
  sub_100120AA0();
  __chkstk_darwin(v6, v7);
  sub_10014357C();
  if (a3)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v8 = sub_10011AFB4();
    v9 = 0;
  }
  else
  {
    v8 = sub_10011AFB4();
    v9 = 1;
  }
  sub_100108600(v3, v9, 1, v8);
  swift_retain();
  v10 = sub_100156EB0();
  sub_100154F64(v10, v11);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

uint64_t sub_100154F64(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];

  sub_1001085C0(&qword_1002D9CE8);
  sub_100120AA0();
  __chkstk_darwin(v5, v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100156A28(a1, (uint64_t)v8, (uint64_t *)&unk_1002DB390);
  v9 = sub_1001085C0((uint64_t *)&unk_1002DB390);
  sub_100108600((uint64_t)v8, 0, 1, v9);
  v10 = v2 + *a2;
  sub_100111F6C(v10, (uint64_t)v13, 33);
  sub_1001569FC((uint64_t)v8, v10, &qword_1002D9CE8);
  return swift_endAccess(v13);
}

void sub_10015504C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;

  v5 = swift_retain();
  a3(v5);
  swift_release(a1);
  sub_100109438();
}

id sub_100155080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void (*v11)(uint64_t);

  sub_1001085C0((uint64_t *)&unk_1002DB390);
  sub_100120AA0();
  __chkstk_darwin(v1, v2);
  sub_1001097B0();
  v3 = sub_10011AFB4();
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  sub_10014357C();
  sub_100154A44();
  sub_100156EF4(v0, 1, v3);
  if (v6)
  {
    sub_10011ABE4(v0, (uint64_t *)&unk_1002DB390);
    return 0;
  }
  else
  {
    sub_100156DDC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    v7 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    URL.path.getter();
    v8 = String._bridgeToObjectiveC()();
    sub_1001094F4();
    v9 = objc_msgSend(v7, "fileExistsAtPath:", v8);

    v10 = sub_100156EB0();
    v11(v10);
  }
  return v9;
}

uint64_t sub_100155208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcript);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcript) = a1;
  return sub_1001569B0(v2);
}

id sub_100155220(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  objc_class *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  objc_super v50;

  v2 = sub_1001085C0((uint64_t *)&unk_1002DB390);
  v4 = __chkstk_darwin(v2, v3);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v45 - v6;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1001085C0((uint64_t *)&unk_1002D9BD8);
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Transcript(0);
  v47 = *(_QWORD *)(v17 - 8);
  v48 = v17;
  v19 = __chkstk_darwin(v17, v18);
  v46 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v21);
  v23 = (char *)&v45 - v22;
  v24 = type metadata accessor for UUID(0);
  v26 = __chkstk_darwin(v24, v25);
  v28 = (char *)&v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a1;
  v29 = sub_10015444C(v26);
  if (!v29)
  {
    sub_100154CEC(&OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptURL, (uint64_t (*)(void))&dispatch thunk of Message.sandboxTranscriptFile.getter);
    if (sub_100109FF4((uint64_t)v7, 1, v8) == 1)
    {
      sub_10011ABE4((uint64_t)v7, (uint64_t *)&unk_1002DB390);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
      v36 = Data.init(contentsOf:options:)(v12, 0);
      v38 = v37;
      sub_100156AB4(0, &qword_1002D9CC8, NSKeyedUnarchiver_ptr);
      sub_100156AB4(0, &qword_1002D9CD0, VMVoicemailTranscript_ptr);
      v40 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v39, v36, v38, v39);
      v42 = v40;
      if (v40)
      {
        v43 = (objc_class *)type metadata accessor for VisualTranscriptionMessage();
        v44 = (char *)objc_allocWithZone(v43);
        *(_QWORD *)&v44[OBJC_IVAR___MPVisualTranscriptionMessage_vmTranscript] = v42;
        v50.receiver = v44;
        v50.super_class = v43;
        v30 = objc_msgSendSuper2(&v50, "init");
        sub_10011ABA0(v36, v38);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      sub_10011ABA0(v36, v38);
    }
    v30 = 0;
LABEL_9:
    v31 = v49;
    goto LABEL_14;
  }
  v30 = 0;
  v31 = v49;
  if (v29 != 1)
  {
    if ((dispatch thunk of Message.isRTT.getter() & 1) != 0 && TUCallScreeningRTTEnabled(0))
    {
      sub_100156AB4(0, &qword_1002D9CD8, &off_100283190);
      dispatch thunk of Message.callUUID.getter();
      v30 = sub_1001558A8((uint64_t)v28);
    }
    else
    {
      sub_100154694((uint64_t)v16);
      v32 = v48;
      if (sub_100109FF4((uint64_t)v16, 1, v48) == 1)
      {
        sub_10011ABE4((uint64_t)v16, (uint64_t *)&unk_1002D9BD8);
        v30 = 0;
      }
      else
      {
        v33 = v47;
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v23, v16, v32);
        v34 = (uint64_t)v46;
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v46, v23, v32);
        v35 = objc_allocWithZone((Class)type metadata accessor for FTTranscriptionMessage(0));
        v30 = sub_1001535C4(v34);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v32);
      }
    }
  }
LABEL_14:
  *(_BYTE *)(v31 + OBJC_IVAR____TtC13InCallService9FTMessage_didLoadTranscript) = 1;
  return v30;
}

id sub_1001558A8(uint64_t a1)
{
  uint64_t v1;
  id v3;
  Class isa;
  id v5;
  uint64_t v6;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1));
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "initWithCallUUID:", isa);

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return v5;
}

void sub_100155924()
{
  uint64_t v0;

  sub_10011ABE4(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___dataURL, &qword_1002D9CE8);
  sub_100156E68(OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___thumbnailURL);
  sub_100156E68(OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptURL);
  sub_10011ABE4(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptData, &qword_1002D9CE0);
  sub_1001569B0(*(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcript));
  sub_100109438();
}

uint64_t sub_1001559A0()
{
  uint64_t v0;

  sub_100155924();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001559C4()
{
  return type metadata accessor for FTMessage(0);
}

uint64_t type metadata accessor for FTMessage(uint64_t a1)
{
  return sub_100120158(a1, (uint64_t *)&unk_1002D9BB0, (uint64_t)&nominal type descriptor for FTMessage);
}

void sub_1001559E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = "\t";
  v6[2] = &unk_1002429D0;
  v6[3] = &unk_1002429D0;
  sub_100155AC0(319, (unint64_t *)&unk_1002D9BC0, (uint64_t *)&unk_1002DB390);
  if (v3 <= 0x3F)
  {
    v7 = *(_QWORD *)(v2 - 8) + 64;
    v8 = v7;
    v9 = v7;
    sub_100155AC0(319, &qword_1002D9BD0, (uint64_t *)&unk_1002D9BD8);
    if (v5 <= 0x3F)
    {
      v10 = *(_QWORD *)(v4 - 8) + 64;
      v11 = &unk_1002429E8;
      v12 = &unk_100242A00;
      v13 = &unk_100242A00;
      swift_updateClassMetadata2(a1, 256, 11, v6, a1 + 80);
    }
  }
}

void sub_100155AC0(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_10010AD84(a3);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
  sub_100109438();
}

BOOL sub_100155B08(double a1)
{
  char v2;

  sub_100154120();
  if ((v2 & 1) != 0)
    return 0;
  if (a1 <= 5.0)
    return dispatch thunk of Message.duration.getter() / 3.0 < a1;
  return 1;
}

void sub_100155BAC(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  Class isa;
  id v10;

  sub_100153ED0((uint64_t (*)(void))sub_100153D30, (SEL *)&selRef_normalizedValue);
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    v6 = swift_bridgeObjectRelease(v3);
    v7 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      dispatch thunk of Message.from.getter(v6);
      v8 = String._bridgeToObjectiveC()();
      sub_1001094F4();
      sub_1001085C0(&qword_1002D93E0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v10 = objc_msgSend(a1, "contactForDestinationId:keysToFetch:", v8, isa);

    }
  }
  sub_1001360E4();
}

uint64_t sub_100155CFC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;

  v2 = v1;
  v4 = dispatch thunk of Message.from.getter(a1);
  v6 = v5;
  swift_bridgeObjectRelease(v5);
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
    return 0;
  v8 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1002420C0;
  v10 = (void *)objc_opt_self(CNContactFormatter);
  v11 = objc_msgSend(v10, "descriptorForRequiredKeysForStyle:", 0);
  *(_QWORD *)(v9 + 32) = v11;
  specialized Array._endMutation()(v11, v12);
  sub_100155BAC(a1);
  v14 = v13;
  sub_100109544();
  if (v14)
  {
    if ((objc_msgSend(v14, "isSuggested") & 1) != 0)
    {
      sub_100155E64();
      sub_100156F10();
LABEL_10:

      return v2;
    }
    v15 = objc_msgSend(v10, "stringFromContact:style:", v14, 0);
    if (v15)
    {
      v16 = v15;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      sub_100156F10();

      goto LABEL_10;
    }

    return 0;
  }
  sub_100155E64();
  sub_100156F10();
  return v2;
}

uint64_t sub_100155E64()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  uint64_t v12;

  v0 = (void *)objc_opt_self(TUHandle);
  dispatch thunk of Message.from.getter(v0);
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v4 = objc_msgSend(v0, "normalizedHandleWithDestinationID:", v3);

  if (!v4)
    return 0;
  sub_100156A60(v4, (SEL *)&selRef_normalizedValue);
  if (v5)
  {
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  sub_100156A60(v4, (SEL *)&selRef_isoCountryCode);
  if (v8)
  {
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = 0;
  }
  v11 = (id)TUFormattedPhoneNumber(v7, v10);

  if (!v11)
  {

    return 0;
  }
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);

  return v12;
}

uint64_t sub_100156010()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  void *v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  void *v30;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  void *v34;
  void *v35;
  Swift::String v36;
  uint64_t v37;
  void *v38;
  void *v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  char v48;
  uint64_t v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  Swift::String v56;
  Swift::String v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  Swift::String v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[2];
  Swift::String v94;
  Swift::String v95;
  Swift::String v96;
  Swift::String v97;
  Swift::String v98;
  Swift::String v99;
  Swift::String v100;
  Swift::String v101;

  v91 = sub_1001085C0((uint64_t *)&unk_1002D9BD8);
  sub_100120AA0();
  __chkstk_darwin(v1, v2);
  sub_10011ADE4();
  v90 = v3;
  v89 = sub_1001085C0((uint64_t *)&unk_1002DB390);
  sub_100120AA0();
  __chkstk_darwin(v4, v5);
  sub_10011ADE4();
  v88 = v6;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v86 = v7;
  v87 = v8;
  __chkstk_darwin(v7, v9);
  sub_10011ADE4();
  v85 = v10;
  v11 = sub_1001085C0(&qword_1002D7D78);
  sub_100120AA0();
  __chkstk_darwin(v12, v13);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93[0] = 0;
  v93[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(722);
  sub_100156CF4((uint64_t)"FTMessage(\n    ftMessage: ");
  v16 = v0[2];
  v17 = sub_100156E60((uint64_t)objc_msgSend(v16, "description"));
  v19 = v18;

  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);

  v84 = v16;
  swift_bridgeObjectRelease(v19);
  v21._countAndFlagsBits = sub_100156DEC() & 0xFFFFFFFFFFFFLL | 0x3A64000000000000;
  v21._object = (void *)0xE900000000000020;
  String.append(_:)(v21);
  sub_10015398C();
  v23 = v22;
  v24 = sub_100156E60((uint64_t)objc_msgSend(v22, "description"));

  sub_100156CB0(v24);
  sub_100109558();
  v25 = sub_100156ED4();
  sub_100156E9C(v25 | 0x6F72702000000000, 0x3A7265646976);
  v94._countAndFlagsBits = dispatch thunk of Message.provider.getter();
  sub_100156C9C(v94);
  sub_100109558();
  v26 = sub_100156ED4();
  sub_100156E9C(v26 | 0x6C61632000000000, 0x3A444955556CLL);
  sub_100153B7C((uint64_t)v15);
  v95._countAndFlagsBits = String.init<A>(describing:)(v15, v11);
  sub_100156C9C(v95);
  sub_100109558();
  v27._object = (void *)0x80000001001F3AF0;
  v27._countAndFlagsBits = 0xD000000000000012;
  v82 = 0xD000000000000012;
  String.append(_:)(v27);
  v92 = sub_100153BEC();
  sub_100156E74((uint64_t)&v92, (uint64_t)v93, (uint64_t)&type metadata for MessageType, (uint64_t)&type metadata for DefaultStringInterpolation);
  sub_100156E3C();
  v28._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v28);
  sub_100156E0C();
  v29 = sub_100156DC4();
  v31 = v30;
  sub_1001094F4();
  v32._countAndFlagsBits = v29;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v31);
  v83 = 0xD00000000000001BLL;
  sub_100156C84(0xD00000000000001BLL, (uint64_t)"\n    senderISOCountryCode: ");
  sub_100156DFC();
  sub_100156DC4();
  sub_1001094F4();
  sub_100156DCC();
  sub_100109544();
  sub_100156E2C((uint64_t)"\n    receiverDestinationID: ");
  sub_100156E0C();
  v33 = sub_100156DC4();
  v35 = v34;
  sub_1001094F4();
  v36._countAndFlagsBits = v33;
  v36._object = v35;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v35);
  v81 = 0xD00000000000001DLL;
  sub_100156C84(0xD00000000000001DLL, (uint64_t)"\n    receiverISOCountryCode: ");
  sub_100156DFC();
  v37 = sub_100156DC4();
  v39 = v38;
  sub_1001094F4();
  v40._countAndFlagsBits = v37;
  v40._object = v39;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v39);
  sub_100156E2C((uint64_t)"\n    callbackDestinationID: ");
  sub_100153CC8();
  sub_100156DC4();
  sub_1001094F4();
  sub_100156DCC();
  sub_100109544();
  v41._object = (void *)0x80000001001F3BB0;
  v41._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v41);
  v92 = sub_100153FA8();
  sub_100156E74((uint64_t)&v92, (uint64_t)v93, (uint64_t)&type metadata for MessageFolder, (uint64_t)&type metadata for DefaultStringInterpolation);
  v42._countAndFlagsBits = sub_100156ED4() | 0x6C6F662000000000;
  v42._object = (void *)0xED0000203A726564;
  String.append(_:)(v42);
  sub_100154038();
  v92 = v43;
  sub_100156E74((uint64_t)&v92, (uint64_t)v93, (uint64_t)&type metadata for MessageFolder, (uint64_t)&type metadata for DefaultStringInterpolation);
  sub_100156E3C();
  sub_100156D80(v44, v45);
  if ((sub_1001540D0() & 1) != 0)
    v46 = 1702195828;
  else
    v46 = 0x65736C6166;
  sub_100156C90(v46);
  sub_100109558();
  v47._countAndFlagsBits = sub_100156ED4() | 0x6165722000000000;
  v47._object = (void *)0xEB00000000203A64;
  String.append(_:)(v47);
  sub_100154120();
  if ((v48 & 1) != 0)
    v49 = 1702195828;
  else
    v49 = 0x65736C6166;
  sub_100156C90(v49);
  sub_100109558();
  v50._countAndFlagsBits = sub_100156EE0();
  String.append(_:)(v50);
  v51 = v85;
  dispatch thunk of Message.dateCreated.getter();
  sub_1001081CC(&qword_1002D9CB0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v52 = v86;
  v96._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v86, v53);
  sub_100156C9C(v96);
  sub_100109558();
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v51, v52);
  sub_100156C84(0xD00000000000001FLL, (uint64_t)"\n    isTranscriptionAvailable: ");
  sub_100154260();
  if ((v54 & 1) != 0)
    v55 = 1702195828;
  else
    v55 = 0x65736C6166;
  sub_100156C90(v55);
  sub_100109558();
  sub_100156E9C(0x727564202020200ALL, 0x3A6E6F697461);
  dispatch thunk of Message.duration.getter();
  Double.write<A>(to:)(v93, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  sub_100156E3C();
  v56._countAndFlagsBits = v83;
  String.append(_:)(v56);
  sub_100156D44();
  sub_100156E1C((uint64_t)"\n    isTranscribing: ");
  sub_100156D44();
  v57._object = (void *)0x80000001001F3C50;
  v57._countAndFlagsBits = v81;
  String.append(_:)(v57);
  sub_10015486C();
  if ((v58 & 1) != 0)
    v59 = 1702195828;
  else
    v59 = 0x65736C6166;
  sub_100156CE8(v59);
  v60 = sub_100109898();
  sub_100156D80(v60, 0x80000001001F3C70);
  sub_1001548A0();
  if ((v61 & 1) != 0)
    v62 = 1702195828;
  else
    v62 = 0x65736C6166;
  sub_100156CE8(v62);
  v63 = sub_100109898();
  sub_100156D80(v63, 0x80000001001F3C90);
  if ((sub_1001548F8() & 1) != 0)
    v64 = 1702195828;
  else
    v64 = 0x65736C6166;
  sub_100156CE8(v64);
  sub_100109898();
  v65._object = (void *)0x80000001001F3CB0;
  v65._countAndFlagsBits = v82;
  String.append(_:)(v65);
  if ((dispatch thunk of Message.isSensitive.getter() & 1) != 0)
    v66 = 1702195828;
  else
    v66 = 0x65736C6166;
  sub_100156CE8(v66);
  sub_100109898();
  v67 = sub_100156EE0();
  sub_100156F24(v67, 0x4C525561u);
  v68 = v88;
  sub_100154A44();
  v97._countAndFlagsBits = sub_100156E4C(v68);
  sub_100156CA8(v97);
  sub_100109898();
  sub_100156C84(0xD000000000000013, (uint64_t)"\n    thumbnailURL: ");
  sub_100156F08(&OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___thumbnailURL, (uint64_t (*)(void))&dispatch thunk of Message.sandboxThumbnailFile.getter);
  v98._countAndFlagsBits = sub_100156E4C(v68);
  sub_100156CA8(v98);
  sub_100109898();
  sub_100156CF4((uint64_t)"\n    transcriptURL: ");
  sub_100156F08(&OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptURL, (uint64_t (*)(void))&dispatch thunk of Message.sandboxTranscriptFile.getter);
  v99._countAndFlagsBits = sub_100156E4C(v68);
  sub_100156CA8(v99);
  sub_100109544();
  sub_100156E1C((uint64_t)"\n    transcriptData: ");
  v69 = v90;
  sub_100154694(v90);
  v100._countAndFlagsBits = String.init<A>(describing:)(v69, v91);
  sub_100156C9C(v100);
  sub_100109558();
  v70._countAndFlagsBits = sub_100156DEC() & 0xFFFFFFFFFFFFLL | 0x5273000000000000;
  v70._object = (void *)0xEC000000203A5454;
  String.append(_:)(v70);
  if ((dispatch thunk of Message.isRTT.getter() & 1) != 0)
    v71 = 1702195828;
  else
    v71 = 0x65736C6166;
  sub_100156C90(v71);
  sub_100109558();
  sub_100156C84(0xD000000000000016, (uint64_t)"\n    isDataAvailable: ");
  if ((sub_100155080() & 1) != 0)
    v72 = 1702195828;
  else
    v72 = 0x65736C6166;
  sub_100156C90(v72);
  sub_100109558();
  sub_100156C84(0xD000000000000011, (uint64_t)"\n    transcript: ");
  sub_100154634();
  v92 = v73;
  v74 = sub_1001085C0((uint64_t *)&unk_1002D9CB8);
  v101._countAndFlagsBits = String.init<A>(describing:)(&v92, v74);
  sub_100156C9C(v101);
  sub_100109558();
  sub_100156C84(0xD000000000000018, (uint64_t)"\n    didLoadTranscript: ");
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC13InCallService9FTMessage_didLoadTranscript))
    v75 = 1702195828;
  else
    v75 = 0x65736C6166;
  sub_100156CB0(v75);
  sub_100109558();
  v76 = sub_100156DEC();
  sub_100156F24(v76 & 0xFFFFFFFFFFFFLL | 0x4473000000000000, 0x79747269u);
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty))
    v77 = 1702195828;
  else
    v77 = 0x65736C6166;
  sub_100156CB0(v77);
  sub_100109558();
  sub_100156CF4((uint64_t)"\n    messageSource: ");
  LOBYTE(v92) = sub_10015444C(v78);
  _print_unlocked<A, B>(_:_:)(&v92, v93, &type metadata for FTMessageSource, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v79._countAndFlagsBits = 0x202020202020200ALL;
  v79._object = (void *)0xEA00000000002920;
  String.append(_:)(v79);
  return v93[0];
}

uint64_t sub_100156970()
{
  return sub_100156010();
}

uint64_t sub_100156990()
{
  return sub_10015600C();
}

uint64_t sub_1001569B0(uint64_t result)
{
  if (result != 1)
    return swift_unknownObjectRelease(result);
  return result;
}

uint64_t sub_1001569C0(uint64_t result)
{
  if (result != 1)
    return swift_unknownObjectRetain(result);
  return result;
}

void sub_1001569D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_100156D04(a1, a2, a3);
  sub_100156D38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_100109438();
}

void sub_1001569FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_100156D04(a1, a2, a3);
  sub_100156D38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_100109438();
}

void sub_100156A28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_100156D04(a1, a2, a3);
  sub_100156D38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_100109438();
}

void sub_100156A54(void *a1)
{
  sub_100156A60(a1, (SEL *)&selRef_normalizedValue);
}

void sub_100156A60(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(a1, *a2);
  if (v2)
  {
    v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  }
  sub_100109830();
}

void sub_100156AB4(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v4;

  if (!*a2)
  {
    v4 = objc_opt_self(*a3);
    atomic_store(swift_getObjCClassMetadata(v4), a2);
  }
  sub_100109438();
}

uint64_t getEnumTagSinglePayload for FTMessageSource(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FTMessageSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100156BBC + 4 * byte_100242955[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100156BF0 + 4 * asc_100242950[v4]))();
}

uint64_t sub_100156BF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100156BF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100156C00);
  return result;
}

uint64_t sub_100156C0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100156C14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100156C18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100156C20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_100156C2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for FTMessageSource()
{
  return &type metadata for FTMessageSource;
}

unint64_t sub_100156C48()
{
  unint64_t result;

  result = qword_1002D9D00;
  if (!qword_1002D9D00)
  {
    result = swift_getWitnessTable(&unk_100242AC8, &type metadata for FTMessageSource);
    atomic_store(result, (unint64_t *)&qword_1002D9D00);
  }
  return result;
}

void sub_100156C84(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;

  v2 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_100156C90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_100156C9C(Swift::String a1)
{
  String.append(_:)(a1);
}

void sub_100156CA8(Swift::String a1)
{
  String.append(_:)(a1);
}

void sub_100156CB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_100156CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_100108600(v1, 0, 1, v0);
  return swift_beginAccess(v2, v3 - 128, 33, 0);
}

void sub_100156CE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_100156CF4(uint64_t a1@<X8>)
{
  uint64_t v1;
  Swift::String v2;

  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  v2._countAndFlagsBits = v1;
  String.append(_:)(v2);
}

uint64_t sub_100156D04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1001085C0(a3);
}

uint64_t sub_100156D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v1, v2, v0);
}

id sub_100156D2C(id a1)
{
  return a1;
}

uint64_t sub_100156D38@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_100156D44()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0x65736C6166;
  v0._object = (void *)0xE500000000000000;
  String.append(_:)(v0);
}

uint64_t sub_100156D58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return dispatch thunk of static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:)(v3, v2, v1, a1);
}

uint64_t sub_100156D6C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100108600(v1, 1, 1, v0);
}

void sub_100156D80(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = 0xD000000000000010;
  String.append(_:)(*(Swift::String *)(&a2 - 1));
}

uint64_t sub_100156DC4()
{
  return Optional<A>.description.getter();
}

void sub_100156DCC()
{
  uint64_t v0;
  void *v1;
  Swift::String v2;

  v2._countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

uint64_t sub_100156DDC@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t sub_100156DEC()
{
  return 0x69202020200ALL;
}

void sub_100156DFC()
{
  uint64_t (*v0)(void);
  SEL *v1;

  sub_100153ED0(v0, v1);
}

void sub_100156E0C()
{
  uint64_t (*v0)(void);
  SEL *v1;

  sub_100153ED0(v0, v1);
}

void sub_100156E1C(uint64_t a1@<X8>)
{
  uint64_t v1;
  Swift::String v2;

  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  v2._countAndFlagsBits = v1;
  String.append(_:)(v2);
}

void sub_100156E2C(uint64_t a1@<X8>)
{
  uint64_t v1;
  Swift::String v2;

  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  v2._countAndFlagsBits = v1;
  String.append(_:)(v2);
}

uint64_t sub_100156E4C(uint64_t a1)
{
  uint64_t v1;

  return String.init<A>(describing:)(a1, v1);
}

uint64_t sub_100156E54()
{
  uint64_t v0;

  return swift_release_n(v0, 2);
}

uint64_t sub_100156E60(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

void sub_100156E68(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  sub_10011ABE4(v2 + a1, v1);
}

uint64_t sub_100156E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return _print_unlocked<A, B>(_:_:)(a1, a2, a3, a4, v4);
}

uint64_t sub_100156E7C()
{
  uint64_t v0;

  return v0;
}

NSString sub_100156E90()
{
  return String._bridgeToObjectiveC()();
}

void sub_100156E9C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a2 & 0xFFFFFFFFFFFFLL | 0xEF20000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_100156EA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1001569D0(v3, v4, a3);
}

uint64_t sub_100156EB0()
{
  uint64_t v0;

  return v0;
}

void sub_100156EBC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_100156A28(v4, v3, a3);
}

void sub_100156EC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1001569FC(v3, v4, a3);
}

uint64_t sub_100156ED4()
{
  return 538976266;
}

uint64_t sub_100156EE0()
{
  return 0x746164202020200ALL;
}

uint64_t sub_100156EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100109FF4(a1, a2, a3);
}

void sub_100156F08(_QWORD *a1, uint64_t (*a2)(void))
{
  sub_100154CEC(a1, a2);
}

uint64_t sub_100156F1C()
{
  return type metadata accessor for Transcript(0);
}

void sub_100156F24(uint64_t a1, unsigned int a2)
{
  unint64_t v2;

  v2 = a2 | 0xEE00203A00000000;
  String.append(_:)(*(Swift::String *)&a1);
}

id sub_100156F60()
{
  void *v0;

  return objc_msgSend(v0, "cnk_hasTooManyCallsForCallWaitingBanner");
}

double sub_100156F80()
{
  double result;

  result = 10.0;
  xmmword_1002D9D10 = xmmword_100242AF0;
  *(_OWORD *)&qword_1002D9D20 = xmmword_100242AF0;
  return result;
}

uint64_t sub_100157014()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton);
  sub_100135B74(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton + 8));
  return v1;
}

uint64_t sub_1001570D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_100158160(v4, v5);
}

char *sub_1001570F8(char a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  Class isa;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  id v23;
  char *v24;
  void *v25;
  id v26;
  objc_super v28;
  uint64_t v29;
  Swift::String v30;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = &v1[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = objc_allocWithZone((Class)UIVisualEffectView);
  v6 = v1;
  v7 = objc_msgSend(v5, "init");
  v8 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1002420C0;
  v10 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  *(_QWORD *)(v9 + 32) = v10;
  v29 = v9;
  specialized Array._endMutation()(v10, v11);
  sub_10010BBE8(0, &qword_1002D8CF8, UIVisualEffect_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  sub_100158278(v7, "setBackgroundEffects:");

  sub_1001360DC(v7, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)&v6[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_blurEffectView] = v7;
  v13 = objc_allocWithZone((Class)UILabel);
  v14 = v7;
  v15 = objc_msgSend(v13, "init");
  v16 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  sub_100158278(v15, "setFont:");

  v17 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  sub_100158278(v15, "setTextColor:");

  objc_msgSend(v15, "setNumberOfLines:", 2);
  objc_msgSend(v15, "setTextAlignment:", 1);
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v30._object = (void *)0xE000000000000000;
  v19._object = (void *)0x80000001001F3FC0;
  v19._countAndFlagsBits = 0xD000000000000021;
  v20.value._countAndFlagsBits = 0x65536C6C61436E49;
  v20.value._object = (void *)0xED00006563697672;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v30);

  sub_10017E2FC(v22._countAndFlagsBits, (uint64_t)v22._object, v15);
  sub_1001360DC(v15, "setTranslatesAutoresizingMaskIntoConstraints:");
  *(_QWORD *)&v6[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_descriptionLabel] = v15;
  v23 = v15;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_revealButton] = sub_100157488(a1);

  v28.receiver = v6;
  v28.super_class = ObjectType;
  v24 = (char *)objc_msgSendSuper2(&v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1001360DC(v24, "setTranslatesAutoresizingMaskIntoConstraints:");
  sub_10015828C();
  sub_10015828C();
  v25 = *(void **)&v24[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_revealButton];
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v24, "addSubview:", v26);
    objc_msgSend(v26, "addTarget:action:forControlEvents:", v24, "didTapButton", 0x2000);

  }
  sub_1001577A0();

  return v24;
}

void *sub_100157488(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  Swift::String v35;

  v2 = type metadata accessor for UIButton.Configuration.Size(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIButton.Configuration(0);
  v14 = __chkstk_darwin(v12, v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v14, v17);
  v21 = (char *)&v34 - v20;
  v22 = 0;
  if ((a1 & 1) == 0)
  {
    v23 = v19;
    v24 = v18;
    static UIButton.Configuration.gray()();
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v7);
    UIButton.Configuration.cornerStyle.setter(v11);
    v25 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    UIButton.Configuration.baseForegroundColor.setter(v25);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for UIButton.Configuration.Size.medium(_:), v2);
    UIButton.Configuration.buttonSize.setter(v6);
    v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v35._object = (void *)0xE000000000000000;
    v27._object = (void *)0x80000001001F3FF0;
    v27._countAndFlagsBits = 0xD000000000000022;
    v28.value._countAndFlagsBits = 0x65536C6C61436E49;
    v28.value._object = (void *)0xED00006563697672;
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0;
    v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v35);

    UIButton.Configuration.title.setter(v30._countAndFlagsBits, v30._object);
    sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
    sub_10017BD1C(0x6C6C69662E657965, 0xE800000000000000);
    UIButton.Configuration.image.setter(v31);
    UIButton.Configuration.imagePlacement.setter(2);
    UIButton.Configuration.imagePadding.setter(5.0);
    if (qword_1002D72F8 != -1)
      swift_once(&qword_1002D72F8, sub_100156F80);
    UIButton.Configuration.contentInsets.setter(*(double *)&xmmword_1002D9D10, *((double *)&xmmword_1002D9D10 + 1), *(double *)&qword_1002D9D20, unk_1002D9D28);
    sub_10010BBE8(0, &qword_1002D9D78, UIButton_ptr);
    v32 = v23;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v16, v21, v24);
    v22 = (void *)UIButton.init(configuration:primaryAction:)(v16, 0);
    objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v24);
  }
  return v22;
}

void sub_1001577A0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  Class isa;
  uint64_t v68;

  v1 = v0;
  v2 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100241800;
  v4 = *(void **)&v1[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_blurEffectView];
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = objc_msgSend(v1, "topAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v3 + 32) = v7;
  v8 = objc_msgSend(v4, "bottomAnchor");
  v9 = objc_msgSend(v1, "bottomAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v3 + 40) = v10;
  v11 = objc_msgSend(v4, "leadingAnchor");
  v12 = objc_msgSend(v1, "leadingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v3 + 48) = v13;
  v14 = objc_msgSend(v4, "trailingAnchor");
  v15 = objc_msgSend(v1, "trailingAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v3 + 56) = v16;
  v68 = v3;
  specialized Array._endMutation()(v17, v18);
  v19 = *(void **)&v1[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_descriptionLabel];
  v20 = objc_msgSend(v19, "centerYAnchor");
  v21 = objc_msgSend(v1, "centerYAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  v23 = objc_msgSend(v19, "leadingAnchor");
  v24 = objc_msgSend(v1, "leadingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, 17.0);

  v26 = objc_msgSend(v19, "trailingAnchor");
  v27 = objc_msgSend(v1, "trailingAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v27, -17.0);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v65 = v3;
    else
      v65 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v30 = _CocoaArrayWrapper.endIndex.getter(v65);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v29 = v3 & 0xFFFFFFFFFFFFF8;
    v30 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v30, 3))
  {
    __break(1u);
  }
  else
  {
    v31 = sub_100158170(v30 + 3, 1);
    specialized Array._endMutation()(v31, v32);
    v22 = v22;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v30 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v29 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v30 < v29 >> 1)
      goto LABEL_5;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1);
LABEL_5:
  v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v22);
  specialized Array._endMutation()(v33, v34);
  v35 = v25;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v37 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v36 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v37 >= v36 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1);
  v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
  specialized Array._endMutation()(v38, v39);
  v40 = v28;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v42 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v41 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v42 >= v41 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1);
  v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
  specialized Array._endMutation()(v43, v44);

  v45 = *(void **)&v1[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_revealButton];
  if (v45)
  {
    v46 = v45;
    v47 = objc_msgSend(v46, "topAnchor");
    v48 = objc_msgSend(v19, "bottomAnchor");
    v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, 8.0);

    v50 = objc_msgSend(v46, "centerXAnchor");
    v51 = objc_msgSend(v1, "centerXAnchor");
    v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

    if ((unint64_t)v68 >> 62)
    {
      if (v68 < 0)
        v66 = v68;
      else
        v66 = v68 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v68);
      v54 = _CocoaArrayWrapper.endIndex.getter(v66);
      swift_bridgeObjectRelease(v68);
    }
    else
    {
      v53 = v68 & 0xFFFFFFFFFFFFF8;
      v54 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFADD__(v54, 2))
    {
      __break(1u);
    }
    else
    {
      v55 = sub_100158170(v54 + 2, 1);
      specialized Array._endMutation()(v55, v56);
      v49 = v49;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v54 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v53 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v54 < v53 >> 1)
      {
LABEL_14:
        v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v49);
        specialized Array._endMutation()(v57, v58);
        v59 = v52;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v61 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v60 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v61 >= v60 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1);
        v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v59);
        specialized Array._endMutation()(v62, v63);

        goto LABEL_17;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1);
    goto LABEL_14;
  }
LABEL_17:
  v64 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v68);
  objc_msgSend(v64, "activateConstraints:", isa);

}

void sub_100157E90()
{
  sub_100158280(OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton);
  sub_100158268((uint64_t)"Fatal error", 11, 2, 60, 0x80000001001F3F80, (uint64_t)"InCallService/PHContactWallpaperSensitiveBlurView.swift");
  __break(1u);
}

void sub_100157EFC()
{
  sub_100158280(OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton);
  sub_100158268((uint64_t)"Fatal error", 11, 2, 37, 0x80000001001F1490, (uint64_t)"InCallService/PHContactWallpaperSensitiveBlurView.swift");
  __break(1u);
}

void sub_100157F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100108664(v2, (uint64_t)&unk_1002E2CC8);
  v5 = Logger.logObject.getter(v3, v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Did tap reveal button", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = v1 + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton;
  v9 = *(void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton);
  if (v9)
  {
    v10 = *(_QWORD *)(v8 + 8);
    v11 = swift_retain();
    v9(v11);
    sub_100158160((uint64_t)v9, v10);
  }
}

void sub_1001580AC()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.PHContactWallpaperSensitiveBlurView", 49, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t type metadata accessor for PHContactWallpaperSensitiveBlurView()
{
  return objc_opt_self(_TtC13InCallService35PHContactWallpaperSensitiveBlurView);
}

uint64_t sub_100158160(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_100158170(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_10015822C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100158250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100158260(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100158268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return _assertionFailure(_:_:file:line:flags:)(a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a5, a6, 55, 2);
}

id sub_100158278(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

void sub_100158280(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;

  v2 = &v1[a1];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;

}

id sub_10015828C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1400));
}

BOOL sub_100158298()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "_carScreen");
  v1 = v0;
  if (v0)

  return v1 != 0;
}

id sub_1001582E4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(PHPIPController), "defaultPIPController");
  if (!v0)
    return 0;
  v1 = v0;
  v2 = objc_msgSend(v0, "isPIPProxyInterrupted");

  return v2;
}

uint64_t sub_100158344()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  TUCallCenter.activeVideoCall.getter();
  v2 = v1;

  return v2;
}

id sub_1001583B8()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v1 = objc_msgSend(v0, "videoDeviceController");

  v2 = objc_msgSend(v1, "isPreviewRunning");
  return v2;
}

id sub_10015842C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "predicateMatchingBundleIdentifier:", v4);

  return v5;
}

void *sub_10015848C()
{
  _QWORD *v0;
  _QWORD *v1;
  objc_class *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v1 = v0;
  v2 = (objc_class *)sub_100137260();
  sub_10015C890((uint64_t)v2, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v3 = (void *)static OS_dispatch_queue.main.getter();
  v4 = objc_allocWithZone(v2);
  v5 = sub_100158544(v3);
  v6 = sub_10015C8AC();
  swift_deallocPartialClassInstance(v1, v6, *(unsigned int *)((swift_isaMask & *v1) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v1) + 0x34));
  return v5;
}

void *sub_100158544(void *a1)
{
  char *v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL (**v39)();
  uint64_t (**v40)();
  id (**v41)();
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[3];
  objc_super v107;

  v3 = (objc_class *)sub_100137260();
  v4 = sub_1001085C0(&qword_1002D9F10);
  v5 = *(_QWORD *)(v4 - 8);
  v99 = v4;
  v100 = v5;
  sub_10011AE0C();
  __chkstk_darwin(v6, v7);
  sub_10011ADE4();
  v98 = v8;
  sub_1001085C0(&qword_1002D9F18);
  sub_10011AE0C();
  __chkstk_darwin(v9, v10);
  sub_10011ADE4();
  v103 = v11;
  v12 = sub_1001085C0(&qword_1002D9F20);
  v13 = *(_QWORD *)(v12 - 8);
  v94 = v12;
  v95 = v13;
  sub_10011AE0C();
  __chkstk_darwin(v14, v15);
  sub_10011ADE4();
  v17 = v16;
  v18 = sub_1001085C0(&qword_1002D9F28);
  v19 = *(_QWORD *)(v18 - 8);
  v96 = v18;
  v97 = v19;
  sub_10011AE0C();
  __chkstk_darwin(v20, v21);
  sub_10011ADE4();
  v93 = v22;
  v23 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v105 = *(_QWORD *)(v23 - 8);
  sub_10011AE0C();
  v26 = __chkstk_darwin(v24, v25);
  v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v26, v29);
  v32 = (char *)&v90 - v31;
  v34 = __chkstk_darwin(v30, v33);
  v102 = (uint64_t)&v90 - v35;
  v37 = __chkstk_darwin(v34, v36);
  v104 = (uint64_t)&v90 - v38;
  v39 = (BOOL (**)())&v1[OBJC_IVAR___ICSCameraStateMonitor_viewState];
  *v39 = sub_100158298;
  v39[1] = 0;
  v39[2] = (BOOL (*)())UniqueAddress.init();
  v39[3] = 0;
  v39[4] = (BOOL (*)())UniqueAddress.init();
  v39[5] = 0;
  v39[6] = (BOOL (*)())UniqueAddress.init();
  v39[7] = 0;
  v39[8] = (BOOL (*)())sub_1001582E4;
  v39[9] = 0;
  v40 = (uint64_t (**)())&v1[OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall];
  *v40 = sub_100158344;
  v40[1] = 0;
  v41 = (id (**)())&v1[OBJC_IVAR___ICSCameraStateMonitor_isPreviewRunning];
  *v41 = sub_1001583B8;
  v41[1] = 0;
  v42 = OBJC_IVAR___ICSCameraStateMonitor_faceTimeProcessPredicate;
  sub_10015C890(v37, &qword_1002D9F30, RBSProcessPredicate_ptr);
  v43 = v1;
  *(_QWORD *)&v1[v42] = sub_10015842C(0xD000000000000012, 0x80000001001F4100);
  *(_QWORD *)&v43[OBJC_IVAR___ICSCameraStateMonitor_subscriptions] = &_swiftEmptySetSingleton;
  v44 = &v43[OBJC_IVAR___ICSCameraStateMonitor_timerState];
  *(_OWORD *)v44 = 0u;
  *((_OWORD *)v44 + 1) = 0u;
  *((_QWORD *)v44 + 4) = 0;
  v45 = (uint64_t)&v43[OBJC_IVAR___ICSCameraStateMonitor_state];
  v46 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  sub_100108600(v45, 1, 2, v46);
  *(_QWORD *)&v43[OBJC_IVAR___ICSCameraStateMonitor_queue] = a1;
  v47 = a1;
  v91 = v47;

  v107.receiver = v43;
  v107.super_class = v3;
  v48 = objc_msgSendSuper2(&v107, "init");
  v49 = (void *)objc_opt_self(NSNotificationCenter);
  v101 = v48;
  v50 = v49;
  v92 = v49;
  v51 = objc_msgSend(v49, "defaultCenter");
  v52 = v104;
  sub_10015C8B4(TUCallCenterCallStatusChangedNotification);

  v53 = objc_msgSend(v50, "defaultCenter");
  v54 = v102;
  sub_10015C8B4(TUCallCenterVideoCallStatusChangedNotification);

  v55 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
  v55(v32, v52, v23);
  v55(v28, v54, v23);
  sub_10015C704((unint64_t *)&qword_1002DC4E0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  v57 = v56;
  v58 = v17;
  v59 = (uint64_t)v32;
  v60.n128_f64[0] = Publishers.Merge.init(_:_:)(v32, v28, v23, v23, v57, v57);
  v106[0] = v47;
  v90 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0, v60);
  v61 = v103;
  v64 = sub_10011100C(v103, v62, v63, v90);
  sub_10015C890(v64, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v66 = v65;
  sub_10010B56C(&qword_1002D9F38, &qword_1002D9F20);
  v68 = v67;
  v69 = sub_10015AD40();
  v70 = v93;
  v71 = v94;
  Publisher.receive<A>(on:options:)(v106, v61, v94, v66, v68, v69);
  sub_10010A03C(v61, &qword_1002D9F18);
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v58, v71);
  v72 = sub_100122840((uint64_t)&unk_10028AF00);
  v73 = v101;
  swift_unknownObjectWeakInit(v72 + 16);
  sub_10010B56C(&qword_1002D9F48, &qword_1002D9F28);
  v74 = v96;
  Publisher<>.sink(receiveValue:)(sub_10015ADB4, v72, v96, v75);
  v76 = swift_release(v72);
  (*(void (**)(uint64_t, uint64_t, __n128))(v97 + 8))(v70, v74, v76);
  v77 = (uint64_t)v73 + OBJC_IVAR___ICSCameraStateMonitor_subscriptions;
  sub_10015C868((uint64_t)v73 + OBJC_IVAR___ICSCameraStateMonitor_subscriptions, (uint64_t)v106);
  AnyCancellable.store(in:)(v77);
  swift_endAccess(v106);
  sub_100110F0C();
  v78 = objc_msgSend(v92, "defaultCenter");
  sub_10015C8B4(TUVideoDeviceControllerDeviceDidReceiveErrorNotification);

  v79 = v91;
  v106[0] = v91;
  v80 = v103;
  sub_10011100C(v103, v81, v82, v90);
  v83 = v98;
  Publisher.receive<A>(on:options:)(v106, v80, v23, v66, v57, v69);
  sub_10010A03C(v80, &qword_1002D9F18);
  sub_10015C8A4(v59);
  v84 = sub_100122840((uint64_t)&unk_10028AF00);
  v85 = v101;
  swift_unknownObjectWeakInit(v84 + 16);
  sub_10010B56C(&qword_1002D9F50, &qword_1002D9F10);
  v86 = v99;
  Publisher<>.sink(receiveValue:)(sub_10015ADD4, v84, v99, v87);
  v88 = swift_release(v84);
  (*(void (**)(uint64_t, uint64_t, __n128))(v100 + 8))(v83, v86, v88);
  sub_10015C868(v77, (uint64_t)v106);
  AnyCancellable.store(in:)(v77);
  swift_endAccess(v106);

  sub_100110F0C();
  sub_10015C8A4(v102);
  sub_10015C8A4(v104);
  return v85;
}

void sub_100158BC8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint8_t *v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint8_t *v43;
  void *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  void *v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  uint8_t *v91;
  void *v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  char *v97;
  id v98[3];
  __int128 v99;
  __int128 v100;
  void *v101;
  uint64_t v102;
  _QWORD v103[2];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109[32];

  v1 = v0;
  v2 = type metadata accessor for CameraStateMonitor.State(0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001085C0(&qword_1002D9F18);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1001085C0(&qword_1002D9F58);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1001085C0(&qword_1002D9F60);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  v97 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchPredicate(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  v22 = (uint64_t *)((char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(void **)&v1[OBJC_IVAR___ICSCameraStateMonitor_queue];
  *v22 = v23;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v18);
  v96 = v23;
  v24 = _dispatchPreconditionTest(_:)(v22);
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v22, v18);
  if ((v24 & 1) == 0)
  {
    __break(1u);
LABEL_25:
    swift_once(&qword_1002D7280, sub_10010BF14);
LABEL_11:
    v45 = type metadata accessor for Logger(0);
    sub_100108664(v45, (uint64_t)&unk_1002E2D48);
    swift_unknownObjectRetain_n(v24, 2);
    v46 = v1;
    v48 = Logger.logObject.getter(v46, v47);
    v49 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc(22, -1);
      v51 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v99 = v51;
      *(_DWORD *)v50 = 136315394;
      if (v24)
      {
        v102 = v24;
        v103[0] = v14;
        v103[1] = v19;
        v104 = v15;
        swift_unknownObjectRetain(v24);
        sub_1001085C0(&qword_1002D9F70);
        v52 = String.init<A>(reflecting:)(&v102);
        v54 = v53;
      }
      else
      {
        v54 = 0xE300000000000000;
        v52 = 7104878;
      }
      v102 = sub_100121E04(v52, v54, (uint64_t *)&v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103, v50 + 4, v50 + 12);
      swift_unknownObjectRelease_n(v24, 2);
      swift_bridgeObjectRelease(v54);
      *(_WORD *)(v50 + 12) = 2080;
      sub_10015C658(v18, (uint64_t)&v102);
      sub_10019C950((uint64_t)&v102);
      v86 = v85;
      v88 = v87;
      sub_10010A03C((uint64_t)&v102, &qword_1002D9F68);
      v102 = sub_100121E04(v86, v88, (uint64_t *)&v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103, v50 + 14, v50 + 22);

      swift_bridgeObjectRelease(v88);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Call status changed for call: %s, but timer state does not need to be changed (timerState: %s).", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy(v51, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v50, -1, -1);
      swift_unknownObjectRelease(v24);

    }
    else
    {

      swift_unknownObjectRelease_n(v24, 3);
    }
    return;
  }
  v94 = v15;
  v95 = v14;
  v25 = *(uint64_t (**)(uint64_t))&v1[OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall];
  v26 = *(_QWORD *)&v1[OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall + 8];
  v27 = swift_retain();
  v24 = v25(v27);
  v14 = v28;
  v19 = v29;
  v15 = v30;
  swift_release(v26);
  v18 = (uint64_t)&v1[OBJC_IVAR___ICSCameraStateMonitor_timerState];
  swift_beginAccess(&v1[OBJC_IVAR___ICSCameraStateMonitor_timerState], v109, 0, 0);
  sub_10015C658(v18, (uint64_t)&v102);
  v105 = v24;
  v106 = v14;
  v107 = v19;
  v108 = v15;
  if (v104)
  {
    if (v24)
    {
      sub_100110DC0(&v102);
      goto LABEL_10;
    }
    if (qword_1002D7280 != -1)
      swift_once(&qword_1002D7280, sub_10010BF14);
    v55 = type metadata accessor for Logger(0);
    v56 = sub_100108664(v55, (uint64_t)&unk_1002E2D48);
    v58 = Logger.logObject.getter(v56, v57);
    v59 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v60 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "Video call is no longer active, unsubscribing from camera state changes.", v60, 2u);
      swift_slowDealloc(v60, -1, -1);
    }

    v61 = type metadata accessor for CameraStateMonitor.Snapshot(0);
    sub_100108600((uint64_t)v5, 1, 2, v61);
    v62 = (uint64_t)&v1[OBJC_IVAR___ICSCameraStateMonitor_state];
    swift_beginAccess(&v1[OBJC_IVAR___ICSCameraStateMonitor_state], &v99, 33, 0);
    sub_10015C68C((uint64_t)v5, v62);
    swift_endAccess(&v99);
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
    swift_beginAccess(v18, v98, 33, 0);
    sub_10015C6D0((uint64_t)&v99, v18);
    swift_endAccess(v98);
    sub_100110DC0(&v102);
  }
  else
  {
    if (!v24)
    {
LABEL_10:
      if (qword_1002D7280 == -1)
        goto LABEL_11;
      goto LABEL_25;
    }
    if (qword_1002D7280 != -1)
      swift_once(&qword_1002D7280, sub_10010BF14);
    v31 = type metadata accessor for Logger(0);
    sub_100108664(v31, (uint64_t)&unk_1002E2D48);
    v32 = swift_unknownObjectRetain_n(v24, 2);
    v34 = Logger.logObject.getter(v32, v33);
    v35 = static os_log_type_t.default.getter();
    v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      v37 = swift_slowAlloc(12, -1);
      v93 = v36;
      v38 = (uint8_t *)v37;
      v39 = (void *)swift_slowAlloc(32, -1);
      v92 = v39;
      v91 = v38;
      *(_DWORD *)v38 = 136315138;
      v98[0] = v39;
      v90 = v38 + 4;
      *(_QWORD *)&v99 = v24;
      *((_QWORD *)&v99 + 1) = v14;
      *(_QWORD *)&v100 = v19;
      *((_QWORD *)&v100 + 1) = v15;
      swift_unknownObjectRetain(v24);
      sub_1001085C0(&qword_1002D9F70);
      v40 = String.init<A>(reflecting:)(&v99);
      v42 = v41;
      *(_QWORD *)&v99 = sub_100121E04(v40, v41, (uint64_t *)v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, (char *)&v99 + 8, v90, v38 + 12);
      swift_unknownObjectRelease_n(v24, 2);
      swift_bridgeObjectRelease(v42);
      v43 = v91;
      _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v93, "Call status changed for call: %s, starting timer to poll for camera state changes.", v91, 0xCu);
      v44 = v92;
      swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(v24, 2);
    }
    sub_100156AB4(0, &qword_1002D9F78, NSTimer_ptr);
    v63 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v64 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    sub_100108600((uint64_t)v13, 1, 1, v64);
    v65 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v63, NSDefaultRunLoopMode, v13, 1.0);

    sub_10010A03C((uint64_t)v13, &qword_1002D9F58);
    *(_QWORD *)&v99 = v65;
    v66 = type metadata accessor for NSTimer.TimerPublisher(0);
    sub_10015C704(&qword_1002D9F80, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
    v68 = ConnectablePublisher.autoconnect()(v66, v67);
    v69 = swift_release(v65);
    *(_QWORD *)&v99 = v68;
    v70 = v96;
    v98[0] = v96;
    v71 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0, v69);
    sub_100108600((uint64_t)v9, 1, 1, v71);
    v72 = v70;
    v73 = sub_1001085C0(&qword_1002D9F88);
    sub_100156AB4(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
    v75 = v74;
    sub_10010B56C(&qword_1002D9F90, &qword_1002D9F88);
    v77 = v76;
    v78 = sub_10015AD40();
    v79 = v97;
    Publisher.receive<A>(on:options:)(v98, v9, v73, v75, v77, v78);
    sub_10010A03C((uint64_t)v9, &qword_1002D9F18);

    swift_release(v99);
    v80 = swift_allocObject(&unk_10028AF00, 24, 7);
    swift_unknownObjectWeakInit(v80 + 16);
    sub_10010B56C(&qword_1002D9F98, &qword_1002D9F60);
    v81 = v95;
    v83 = Publisher<>.sink(receiveValue:)(sub_10015C738, v80, v95, v82);
    v84 = swift_release(v80);
    (*(void (**)(char *, uint64_t, __n128))(v94 + 8))(v79, v81, v84);
    *((_QWORD *)&v100 + 1) = type metadata accessor for AnyCancellable(0);
    v101 = &protocol witness table for AnyCancellable;
    swift_unknownObjectRelease(v24);
    *(_QWORD *)&v99 = v83;
    swift_beginAccess(v18, v98, 33, 0);
    sub_10015C6D0((uint64_t)&v99, v18);
    swift_endAccess(v98);
  }
}

void sub_1001595A8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *oslog;
  uint64_t v25;
  uint64_t v26;

  v1 = *(uint64_t (**)(uint64_t))(v0 + OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall);
  v2 = sub_10014CB24();
  v3 = v1(v2);
  v5 = v4;
  sub_100110F0C();
  if (v3)
  {
    v6 = sub_10015C8AC();
    dispatch thunk of Call.isSendingVideo.setter(0, v6, v5);
    v7 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
    v8 = objc_msgSend(v7, "videoDeviceController");

    objc_msgSend(v8, "stopPreview");
    if (qword_1002D7280 != -1)
      swift_once(&qword_1002D7280, sub_10010BF14);
    v9 = sub_100109570();
    sub_100108664(v9, (uint64_t)&unk_1002E2D48);
    v10 = sub_10015C880();
    v12 = Logger.logObject.getter(v10, v11);
    v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)sub_1001094C8(12);
      v15 = sub_1001094C8(32);
      v26 = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = dispatch thunk of Call.uniqueProxyIdentifier.getter(v6, v5);
      v18 = v17;
      v25 = sub_100121E04(v16, v17, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v14 + 4, v14 + 12);
      sub_10015C85C();
      swift_bridgeObjectRelease(v18);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Camera failed for call: %s. Force disabling video...", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      sub_100109440(v15);
      sub_100109440((uint64_t)v14);
      swift_unknownObjectRelease(v3);

    }
    else
    {

      swift_unknownObjectRelease_n(v3, 3);
    }
  }
  else
  {
    if (qword_1002D7280 != -1)
      swift_once(&qword_1002D7280, sub_10010BF14);
    v19 = sub_100109570();
    v20 = sub_100108664(v19, (uint64_t)&unk_1002E2D48);
    oslog = Logger.logObject.getter(v20, v21);
    v22 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v22))
    {
      v23 = (uint8_t *)sub_1001094C8(2);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v22, "Not updating camera state on monitor because we have no active video call.", v23, 2u);
      sub_100109440((uint64_t)v23);
    }

  }
}

uint64_t sub_100159954()
{
  return type metadata accessor for CameraStateMonitor(0);
}

uint64_t type metadata accessor for CameraStateMonitor(uint64_t a1)
{
  return sub_100120158(a1, (uint64_t *)&unk_1002D9DE8, (uint64_t)&nominal type descriptor for CameraStateMonitor);
}

uint64_t sub_100159970(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = "P";
  v4[1] = (char *)&value witness table for () + 64;
  v4[2] = (char *)&value witness table for () + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[5] = &unk_100242B80;
  result = type metadata accessor for CameraStateMonitor.State(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CameraStateMonitor.State(uint64_t a1)
{
  return sub_100120158(a1, (uint64_t *)&unk_1002D9E68, (uint64_t)&nominal type descriptor for CameraStateMonitor.State);
}

void sub_100159A44()
{
  sub_10014CB24();
  sub_10015C874();
  sub_100109438();
}

uint64_t sub_100159A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + OBJC_IVAR___ICSCameraStateMonitor_viewState;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR___ICSCameraStateMonitor_viewState + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  return sub_10015C848(v4);
}

void sub_100159AB8()
{
  sub_10014CB24();
  sub_10015C874();
  sub_100109438();
}

uint64_t sub_100159B00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + OBJC_IVAR___ICSCameraStateMonitor_viewState;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR___ICSCameraStateMonitor_viewState + 40);
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  return sub_10015C848(v4);
}

id sub_100159B2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v5;
  void *v6;
  _QWORD v8[5];
  uint64_t v9;

  v8[4] = a3();
  v9 = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100195174;
  v8[3] = a4;
  v6 = _Block_copy(v8);
  swift_release(v9);
  return v6;
}

void sub_100159B98()
{
  sub_10014CB24();
  sub_10015C874();
  sub_100109438();
}

void sub_100159BE0(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  void *v10;
  uint64_t v11;
  id v12;

  v10 = _Block_copy(aBlock);
  v11 = sub_100122840(a4);
  *(_QWORD *)(v11 + 16) = v10;
  v12 = a1;
  a6(a5, v11);

}

_QWORD *destroy for CameraStateMonitor.TimerState(_QWORD *a1)
{
  if (a1[3] >= 0xFFFFFFFFuLL)
    return (_QWORD *)sub_100110DC0(a1);
  return a1;
}

uint64_t initializeWithCopy for CameraStateMonitor.TimerState(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for CameraStateMonitor.TimerState(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    sub_100110DC0((_QWORD *)a1);
    goto LABEL_7;
  }
  sub_100159D68((_QWORD *)a1, a2);
  return a1;
}

_QWORD *sub_100159D68(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for CameraStateMonitor.TimerState(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    sub_100110DC0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CameraStateMonitor.TimerState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CameraStateMonitor.TimerState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t sub_100159FC8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_100159FE0(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraStateMonitor.TimerState()
{
  return &type metadata for CameraStateMonitor.TimerState;
}

uint64_t destroy for CameraStateMonitor.ViewState(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  swift_release(a1[7]);
  return swift_release(a1[9]);
}

uint64_t initializeWithCopy for CameraStateMonitor.ViewState(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  v4 = *(_QWORD *)(a2 + 72);
  v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 72) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for CameraStateMonitor.ViewState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v11);
  v13 = a2[8];
  v12 = a2[9];
  v14 = a1[9];
  a1[8] = v13;
  a1[9] = v12;
  swift_retain(v12);
  swift_release(v14);
  return a1;
}

void *initializeWithTake for CameraStateMonitor.ViewState(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for CameraStateMonitor.ViewState(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = a2[3];
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = a2[4];
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CameraStateMonitor.ViewState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraStateMonitor.ViewState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraStateMonitor.ViewState()
{
  return &type metadata for CameraStateMonitor.ViewState;
}

uint64_t *sub_10015A2B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for CameraStateMonitor.Snapshot(0);
    if (sub_100109FF4((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      *((_BYTE *)a1 + *(int *)(v7 + 20)) = *((_BYTE *)a2 + *(int *)(v7 + 20));
      *((_BYTE *)a1 + *(int *)(v7 + 24)) = *((_BYTE *)a2 + *(int *)(v7 + 24));
      sub_100108600((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for CameraStateMonitor.Snapshot(uint64_t a1)
{
  return sub_100120158(a1, qword_1002D9ED0, (uint64_t)&nominal type descriptor for CameraStateMonitor.Snapshot);
}

uint64_t sub_10015A3A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  result = sub_100109FF4(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_10015A400(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  if (sub_100109FF4((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
    sub_100108600((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

_BYTE *sub_10015A4B4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  v7 = sub_100109FF4((uint64_t)a1, 2, v6);
  v8 = sub_100109FF4((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(a1, a2, v11);
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
      return a1;
    }
    sub_10015C804((uint64_t)a1, type metadata accessor for CameraStateMonitor.Snapshot);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
  sub_100108600((uint64_t)a1, 0, 2, v6);
  return a1;
}

void *sub_10015A5D8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  if (sub_100109FF4((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
    sub_100108600((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

_BYTE *sub_10015A68C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  v7 = sub_100109FF4((uint64_t)a1, 2, v6);
  v8 = sub_100109FF4((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(a1, a2, v11);
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
      return a1;
    }
    sub_10015C804((uint64_t)a1, type metadata accessor for CameraStateMonitor.Snapshot);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
  sub_100108600((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_10015A7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10015A7BC);
}

uint64_t sub_10015A7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  v5 = sub_100109FF4(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_10015A800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10015A80C);
}

uint64_t sub_10015A80C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  return sub_10015C850(a1, v5, a3, v6);
}

uint64_t sub_10015A850(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  return sub_100109FF4(a1, 2, v2);
}

uint64_t sub_10015A880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  return sub_100108600(a1, a2, 2, v4);
}

uint64_t sub_10015A8B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for CameraStateMonitor.Snapshot(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 2);
    return 0;
  }
  return result;
}

_QWORD *sub_10015A90C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  }
  return a1;
}

uint64_t sub_10015A99C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10015A9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10015AA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10015AA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10015AB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10015AB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10015AB70);
}

uint64_t sub_10015AB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = type metadata accessor for Date(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_100109FF4(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 2)
    return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_10015ABF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10015AC04);
}

uint64_t sub_10015AC04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for Date(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_10015C850(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_10015AC70(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100242BC0;
    v4[2] = &unk_100242BC0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10015ACE4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10015AD08()
{
  uint64_t v0;

  return sub_1001951A0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10015AD10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + OBJC_IVAR___ICSCameraStateMonitor_viewState;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR___ICSCameraStateMonitor_viewState + 56);
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = a2;
  return sub_10015C848(v4);
}

uint64_t sub_10015AD28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10015AD38(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10015AD40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D9F40;
  if (!qword_1002D9F40)
  {
    sub_100156AB4(255, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1002D9F40);
  }
  return result;
}

uint64_t sub_10015AD90()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10015ADB4(uint64_t a1)
{
  uint64_t v1;

  sub_10015ADF4(a1, v1, sub_100158BC8);
}

void sub_10015ADD4(uint64_t a1)
{
  uint64_t v1;

  sub_10015ADF4(a1, v1, sub_1001595A8);
}

void sub_10015ADF4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3();

  }
}

void sub_10015AE48()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void *v53;
  id v54;
  int v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t);
  uint64_t v77;
  uint64_t ObjectType;
  char v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  _BOOL4 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  const char *v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  int v129;
  char v130;
  int v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  NSObject *v173;
  os_log_type_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  int v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint8_t *v197;
  char *v198;
  uint8_t *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204[4];

  v1 = v0;
  v2 = sub_1001085C0(&qword_1002DC310);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v184 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CameraStateMonitor.State(0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v184 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  v197 = (uint8_t *)&v184 - v12;
  v200 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  v14 = __chkstk_darwin(v200, v13);
  v191 = (char *)&v184 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14, v16);
  v193 = (char *)&v184 - v18;
  v20 = __chkstk_darwin(v17, v19);
  v186 = (uint64_t)&v184 - v21;
  v23 = __chkstk_darwin(v20, v22);
  v187 = (uint64_t)&v184 - v24;
  v26 = __chkstk_darwin(v23, v25);
  v198 = (char *)&v184 - v27;
  v29 = __chkstk_darwin(v26, v28);
  v31 = (char *)&v184 - v30;
  v33 = __chkstk_darwin(v29, v32);
  v189 = (uint64_t)&v184 - v34;
  v36 = __chkstk_darwin(v33, v35);
  v192 = (uint64_t)&v184 - v37;
  v39 = __chkstk_darwin(v36, v38);
  v41 = (uint8_t *)&v184 - v40;
  v43 = __chkstk_darwin(v39, v42);
  v194 = (uint64_t)&v184 - v44;
  __chkstk_darwin(v43, v45);
  v47 = (char *)&v184 - v46;
  v48 = type metadata accessor for DispatchPredicate(0);
  v49 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48, v50);
  v52 = (char *)&v184 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = *(void **)&v1[OBJC_IVAR___ICSCameraStateMonitor_queue];
  *(_QWORD *)v52 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v52, enum case for DispatchPredicate.onQueue(_:), v48);
  v54 = v53;
  v55 = _dispatchPreconditionTest(_:)(v52);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v52, v48);
  if ((v55 & 1) == 0)
  {
    __break(1u);
    goto LABEL_52;
  }
  v188 = v31;
  v199 = v41;
  v196 = v5;
  v57 = *(uint64_t (**)(uint64_t))&v1[OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall];
  v56 = *(_QWORD *)&v1[OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall + 8];
  v58 = swift_retain();
  v41 = (uint8_t *)v57(v58);
  v60 = v59;
  swift_release(v56);
  if (v41)
  {
    v61 = sub_1001085C0(&qword_1002D9FA0);
    v52 = (char *)swift_allocObject(v61, 37, 7);
    *((_OWORD *)v52 + 1) = xmmword_100242B30;
    v62 = &v1[OBJC_IVAR___ICSCameraStateMonitor_viewState];
    v64 = *(uint64_t (**)(uint64_t))&v1[OBJC_IVAR___ICSCameraStateMonitor_viewState];
    v63 = *(_QWORD *)&v1[OBJC_IVAR___ICSCameraStateMonitor_viewState + 8];
    v65 = swift_retain();
    LOBYTE(v64) = v64(v65);
    swift_release(v63);
    v52[32] = v64 & 1;
    v67 = (uint64_t (*)(uint64_t))*((_QWORD *)v62 + 2);
    v66 = *((_QWORD *)v62 + 3);
    v68 = swift_retain();
    LOBYTE(v67) = v67(v68);
    swift_release(v66);
    v52[33] = v67 & 1;
    v70 = (uint64_t (*)(uint64_t))*((_QWORD *)v62 + 4);
    v69 = *((_QWORD *)v62 + 5);
    v71 = swift_retain();
    LOBYTE(v70) = v70(v71);
    swift_release(v69);
    v52[34] = v70 & 1;
    v73 = (uint64_t (*)(uint64_t))*((_QWORD *)v62 + 6);
    v72 = *((_QWORD *)v62 + 7);
    v74 = swift_retain();
    LOBYTE(v73) = v73(v74);
    swift_release(v72);
    v52[35] = v73 & 1;
    v76 = (uint64_t (*)(uint64_t))*((_QWORD *)v62 + 8);
    v75 = *((_QWORD *)v62 + 9);
    v77 = swift_retain();
    LOBYTE(v76) = v76(v77);
    swift_release(v75);
    v52[36] = v76 & 1;
    v55 = sub_100194FFC(1, (uint64_t)v52);
    ObjectType = swift_getObjectType(v41);
    v79 = dispatch thunk of Call.isSendingVideo.getter(ObjectType, v60);
    v195 = v1;
    LODWORD(v49) = (v79 & 1) != 0
                && (v81 = *(uint64_t (**)(uint64_t))&v1[OBJC_IVAR___ICSCameraStateMonitor_isPreviewRunning],
                    v80 = *(_QWORD *)&v1[OBJC_IVAR___ICSCameraStateMonitor_isPreviewRunning + 8],
                    v82 = swift_retain(),
                    LOBYTE(v81) = v81(v82),
                    swift_release(v80),
                    (v81 & 1) != 0)
                && !sub_10015BF30(v83);
    if (qword_1002D7280 == -1)
    {
LABEL_8:
      LODWORD(v84) = v55 ^ 1;
      v85 = type metadata accessor for Logger(0);
      sub_100108664(v85, (uint64_t)&unk_1002E2D48);
      swift_bridgeObjectRetain(v52);
      v88 = Logger.logObject.getter(v86, v87);
      v89 = static os_log_type_t.debug.getter();
      v90 = os_log_type_enabled(v88, v89);
      v190 = v10;
      if (v90)
      {
        v91 = swift_slowAlloc(24, -1);
        v184 = v84;
        v84 = v91;
        v92 = swift_slowAlloc(32, -1);
        v185 = v49;
        v49 = v92;
        v204[0] = v92;
        *(_DWORD *)v84 = 136315650;
        v202 = v52;
        swift_bridgeObjectRetain(v52);
        sub_1001085C0(&qword_1002D9FA8);
        v93 = String.init<A>(reflecting:)(&v202);
        v94 = v47;
        v96 = v95;
        v202 = (char *)sub_100121E04(v93, v95, v204);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v202, &v203, v84 + 4, v84 + 12);
        swift_bridgeObjectRelease_n(v52, 2);
        swift_bridgeObjectRelease(v96);
        *(_WORD *)(v84 + 12) = 1024;
        LODWORD(v202) = v184 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v202, (char *)&v202 + 4, v84 + 14, v84 + 18);
        *(_WORD *)(v84 + 18) = 1024;
        v47 = v94;
        LODWORD(v202) = v185 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v202, (char *)&v202 + 4, v84 + 20, v84 + 24);
        _os_log_impl((void *)&_mh_execute_header, v88, v89, "Camera state timer fired. Calculated current view state to be: %s (isViewForCameraVisible: %{BOOL}d, isSendingVideo: %{BOOL}d)", (uint8_t *)v84, 0x18u);
        swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
        v97 = v49;
        LOBYTE(v49) = v185;
        swift_slowDealloc(v97, -1, -1);
        v98 = v84;
        LOBYTE(v84) = v184;
        swift_slowDealloc(v98, -1, -1);

      }
      else
      {

        v99 = swift_bridgeObjectRelease_n(v52, 2);
      }
      v106 = (uint64_t)v198;
      Date.init()(v99);
      v107 = v200;
      v47[*(int *)(v200 + 20)] = v49 & 1;
      v47[*(int *)(v107 + 24)] = v84 & 1;
      v108 = (uint64_t)&v195[OBJC_IVAR___ICSCameraStateMonitor_state];
      swift_beginAccess(&v195[OBJC_IVAR___ICSCameraStateMonitor_state], v204, 0, 0);
      v109 = (uint64_t)v197;
      sub_10015C758(v108, (uint64_t)v197, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.State);
      v110 = sub_100109FF4(v109, 2, v107);
      v111 = (uint64_t)v199;
      if (v110)
      {
        if (v110 != 1)
        {
          v134 = (uint64_t)v193;
          sub_10015C758((uint64_t)v47, (uint64_t)v193, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
          if ((v49 & 1) != 0)
          {
            v135 = *(_BYTE *)(v134 + *(int *)(v200 + 24));
            sub_10015C804(v134, type metadata accessor for CameraStateMonitor.Snapshot);
            v136 = (uint64_t)v191;
            if ((v135 & 1) == 0)
            {
              sub_10015C804((uint64_t)v47, type metadata accessor for CameraStateMonitor.Snapshot);
              swift_unknownObjectRelease(v41);
              return;
            }
          }
          else
          {
            sub_10015C804(v134, type metadata accessor for CameraStateMonitor.Snapshot);
            v136 = (uint64_t)v191;
          }
          sub_10015C758((uint64_t)v47, v136, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
          v115 = Logger.logObject.getter(v160, v161);
          v116 = static os_log_type_t.debug.getter();
          if (!os_log_type_enabled(v115, v116))
          {
            swift_unknownObjectRelease(v41);
            sub_10015C804(v136, type metadata accessor for CameraStateMonitor.Snapshot);
            goto LABEL_43;
          }
          v198 = (char *)v108;
          v117 = (uint8_t *)swift_slowAlloc(12, -1);
          v118 = swift_slowAlloc(32, -1);
          v202 = (char *)v118;
          *(_DWORD *)v117 = 136315138;
          v199 = v117 + 4;
          v162 = (uint64_t)v196;
          sub_10015C758(v136, (uint64_t)v196, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
          sub_100108600(v162, 0, 1, v200);
          sub_10019C9CC(v162);
          v164 = v163;
          v197 = v41;
          v166 = v165;
          v167 = v162;
          v108 = (uint64_t)v198;
          sub_10010A03C(v167, &qword_1002DC310);
          v201 = sub_100121E04(v164, v166, (uint64_t *)&v202);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, &v202, v199, v117 + 12);
          swift_bridgeObjectRelease(v166);
          sub_10015C804(v136, type metadata accessor for CameraStateMonitor.Snapshot);
          v125 = "View state changed from inconsistent state -> %s.";
LABEL_38:
          _os_log_impl((void *)&_mh_execute_header, v115, v116, v125, v117, 0xCu);
          swift_arrayDestroy(v118, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v118, -1, -1);
          swift_slowDealloc(v117, -1, -1);
          swift_unknownObjectRelease(v197);
LABEL_43:

          goto LABEL_44;
        }
        v112 = v194;
        sub_10015C758((uint64_t)v47, v194, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
        v115 = Logger.logObject.getter(v113, v114);
        v116 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v115, v116))
        {
          v198 = (char *)v108;
          v117 = (uint8_t *)swift_slowAlloc(12, -1);
          v118 = swift_slowAlloc(32, -1);
          v202 = (char *)v118;
          *(_DWORD *)v117 = 136315138;
          v199 = v117 + 4;
          v119 = (uint64_t)v196;
          sub_10015C758(v112, (uint64_t)v196, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
          sub_100108600(v119, 0, 1, v200);
          sub_10019C9CC(v119);
          v121 = v120;
          v197 = v41;
          v123 = v122;
          v124 = v119;
          v108 = (uint64_t)v198;
          sub_10010A03C(v124, &qword_1002DC310);
          v201 = sub_100121E04(v121, v123, (uint64_t *)&v202);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, &v202, v199, v117 + 12);
          swift_bridgeObjectRelease(v123);
          sub_10015C804(v112, type metadata accessor for CameraStateMonitor.Snapshot);
          v125 = "Changing state from unknown to %s.";
          goto LABEL_38;
        }
        sub_10015C804(v112, type metadata accessor for CameraStateMonitor.Snapshot);

        swift_unknownObjectRelease(v41);
LABEL_44:
        v169 = (uint64_t)v190;
        sub_10015C794((uint64_t)v47, (uint64_t)v190);
        sub_100108600(v169, 0, 2, v200);
        swift_beginAccess(v108, &v202, 33, 0);
        sub_10015C68C(v169, v108);
        swift_endAccess(&v202);
        return;
      }
      sub_10015C794(v109, (uint64_t)v199);
      v126 = v192;
      sub_10015C758((uint64_t)v47, v192, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
      if ((v49 & 1) != 0)
      {
        v127 = *(_BYTE *)(v126 + *(int *)(v200 + 24));
        sub_10015C804(v126, type metadata accessor for CameraStateMonitor.Snapshot);
        if ((v127 & 1) == 0)
        {
          v128 = *(int *)(v200 + 20);
          v129 = *(unsigned __int8 *)(v111 + v128);
          sub_10015C758(v111, v106, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
          if (v129 == 1)
          {
            v130 = *(_BYTE *)(v106 + *(int *)(v200 + 24));
            sub_10015C804(v106, type metadata accessor for CameraStateMonitor.Snapshot);
            if ((v130 & 1) == 0)
            {
              v131 = *(unsigned __int8 *)(v111 + v128);
              v132 = v186;
              sub_10015C758(v111, v186, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
              if (v131 == 1)
              {
                v133 = *(_BYTE *)(v132 + *(int *)(v200 + 24));
                sub_10015C804(v132, type metadata accessor for CameraStateMonitor.Snapshot);
                if ((v133 & 1) == 0 && Date.timeIntervalSince(_:)(v111) > 3.0)
                  sub_10015C008();
              }
              else
              {
                sub_10015C804(v132, type metadata accessor for CameraStateMonitor.Snapshot);
              }
              swift_unknownObjectRelease(v41);
              sub_10015C804(v111, type metadata accessor for CameraStateMonitor.Snapshot);
              sub_10015C804((uint64_t)v47, type metadata accessor for CameraStateMonitor.Snapshot);
              return;
            }
          }
          else
          {
            sub_10015C804(v106, type metadata accessor for CameraStateMonitor.Snapshot);
          }
          v170 = v187;
          sub_10015C758(v111, v187, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
          v173 = Logger.logObject.getter(v171, v172);
          v174 = static os_log_type_t.error.getter(v173);
          if (os_log_type_enabled(v173, v174))
          {
            v175 = swift_slowAlloc(22, -1);
            v176 = swift_slowAlloc(32, -1);
            v202 = (char *)v176;
            *(_DWORD *)v175 = 136315394;
            v198 = (char *)v108;
            v177 = v170;
            v178 = (uint64_t)v196;
            sub_10015C758(v177, (uint64_t)v196, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
            sub_100108600(v178, 0, 1, v200);
            sub_10019C9CC(v178);
            v179 = v47;
            v181 = v180;
            v183 = v182;
            sub_10010A03C(v178, &qword_1002DC310);
            v201 = sub_100121E04(v181, v183, (uint64_t *)&v202);
            v108 = (uint64_t)v198;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, &v202, v175 + 4, v175 + 12);
            swift_bridgeObjectRelease(v183);
            sub_10015C804(v187, type metadata accessor for CameraStateMonitor.Snapshot);
            *(_WORD *)(v175 + 12) = 2048;
            v201 = 0x4008000000000000;
            v47 = v179;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, &v202, v175 + 14, v175 + 22);
            _os_log_impl((void *)&_mh_execute_header, v173, v174, "We detected an inconsistent view state %s -> inconsistent state. Will hold for %f seconds before we take action.", (uint8_t *)v175, 0x16u);
            swift_arrayDestroy(v176, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v176, -1, -1);
            swift_slowDealloc(v175, -1, -1);
            swift_unknownObjectRelease(v41);

            v159 = (uint64_t)v199;
            goto LABEL_41;
          }
          swift_unknownObjectRelease(v41);

          v168 = v170;
          goto LABEL_40;
        }
      }
      else
      {
        sub_10015C804(v126, type metadata accessor for CameraStateMonitor.Snapshot);
      }
      v137 = v189;
      sub_10015C758(v111, v189, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
      v138 = (uint64_t)v188;
      sub_10015C758((uint64_t)v47, (uint64_t)v188, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
      v141 = Logger.logObject.getter(v139, v140);
      v142 = static os_log_type_t.debug.getter();
      v143 = v142;
      if (os_log_type_enabled(v141, v142))
      {
        v144 = swift_slowAlloc(22, -1);
        LODWORD(v194) = v143;
        v145 = v144;
        v193 = (char *)swift_slowAlloc(64, -1);
        v202 = v193;
        *(_DWORD *)v145 = 136315394;
        v192 = v145 + 4;
        v198 = (char *)v108;
        v146 = (uint64_t)v196;
        sub_10015C758(v137, (uint64_t)v196, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
        v147 = v200;
        sub_100108600(v146, 0, 1, v200);
        sub_10019C9CC(v146);
        v197 = v41;
        v195 = v47;
        v149 = v148;
        v151 = v150;
        sub_10010A03C(v146, &qword_1002DC310);
        v201 = sub_100121E04(v149, v151, (uint64_t *)&v202);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, &v202, v192, v145 + 12);
        swift_bridgeObjectRelease(v151);
        sub_10015C804(v137, type metadata accessor for CameraStateMonitor.Snapshot);
        *(_WORD *)(v145 + 12) = 2080;
        sub_10015C758(v138, v146, (void (*)(_QWORD))type metadata accessor for CameraStateMonitor.Snapshot);
        sub_100108600(v146, 0, 1, v147);
        sub_10019C9CC(v146);
        v153 = v152;
        v154 = v111;
        v156 = v155;
        v157 = v146;
        v108 = (uint64_t)v198;
        sub_10010A03C(v157, &qword_1002DC310);
        v201 = sub_100121E04(v153, v156, (uint64_t *)&v202);
        v47 = v195;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, &v202, v145 + 14, v145 + 22);
        swift_bridgeObjectRelease(v156);
        sub_10015C804(v138, type metadata accessor for CameraStateMonitor.Snapshot);
        _os_log_impl((void *)&_mh_execute_header, v141, (os_log_type_t)v194, "View state changed from %s -> %s.", (uint8_t *)v145, 0x16u);
        v158 = (uint64_t)v193;
        swift_arrayDestroy(v193, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v158, -1, -1);
        swift_slowDealloc(v145, -1, -1);
        swift_unknownObjectRelease(v197);

        v159 = v154;
LABEL_41:
        sub_10015C804(v159, type metadata accessor for CameraStateMonitor.Snapshot);
        goto LABEL_44;
      }
      swift_unknownObjectRelease(v41);

      sub_10015C804(v138, type metadata accessor for CameraStateMonitor.Snapshot);
      v168 = v137;
LABEL_40:
      sub_10015C804(v168, type metadata accessor for CameraStateMonitor.Snapshot);
      v159 = v111;
      goto LABEL_41;
    }
LABEL_52:
    swift_once(&qword_1002D7280, sub_10010BF14);
    goto LABEL_8;
  }
  if (qword_1002D7280 != -1)
    swift_once(&qword_1002D7280, sub_10010BF14);
  v100 = type metadata accessor for Logger(0);
  v101 = sub_100108664(v100, (uint64_t)&unk_1002E2D48);
  v103 = Logger.logObject.getter(v101, v102);
  v104 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v103, v104))
  {
    v105 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v105 = 0;
    _os_log_impl((void *)&_mh_execute_header, v103, v104, "Not updating camera state on monitor because we have no active video call.", v105, 2u);
    swift_slowDealloc(v105, -1, -1);
  }

}

BOOL sub_10015BF30(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  unsigned int v6;

  sub_10015C890(a1, &qword_1002D9FB0, RBSProcessHandle_ptr);
  v2 = objc_msgSend((id)objc_opt_self(RBSProcessPredicate), "predicateMatching:", *(_QWORD *)(v1 + OBJC_IVAR___ICSCameraStateMonitor_faceTimeProcessPredicate));
  v3 = sub_10015C588(v2);
  v4 = objc_msgSend(v3, "currentState");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "taskState");

    return v6 == 4;
  }
  else
  {

    return 0;
  }
}

void sub_10015C008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  Swift::String v54;
  void *object;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v1 = v0;
  type metadata accessor for CameraStateMonitor.State(0);
  sub_10011AE0C();
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (uint64_t *)((char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v1 + OBJC_IVAR___ICSCameraStateMonitor_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6);
  v12 = v11;
  v13 = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v14 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  sub_100108600((uint64_t)v5, 2, 2, v14);
  sub_10015C868(v1 + OBJC_IVAR___ICSCameraStateMonitor_state, (uint64_t)&v58);
  v15 = sub_10015C874();
  sub_10015C68C(v15, v16);
  swift_endAccess(&v58);
  v17 = *(uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall);
  v18 = sub_10014CB24();
  v5 = (char *)v17(v18);
  v10 = v19;
  sub_100110F0C();
  if (v5)
  {
    v13 = sub_10015C8AC();
    dispatch thunk of Call.isSendingVideo.setter(0, v13, v10);
    v20 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
    v21 = objc_msgSend(v20, "videoDeviceController");

    objc_msgSend(v21, "stopPreview");
    if (qword_1002D7280 == -1)
    {
LABEL_4:
      v22 = sub_100109570();
      sub_100108664(v22, (uint64_t)&unk_1002E2D48);
      v23 = sub_10015C880();
      v25 = Logger.logObject.getter(v23, v24);
      v26 = static os_log_type_t.error.getter(v25);
      if (os_log_type_enabled(v25, v26))
      {
        v27 = sub_1001094C8(22);
        v28 = sub_1001094C8(32);
        *(_DWORD *)v27 = 134218242;
        v57 = 0x4008000000000000;
        v58 = v28;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v27 + 4, v27 + 12);
        *(_WORD *)(v27 + 12) = 2080;
        v29 = dispatch thunk of Call.uniqueProxyIdentifier.getter(v13, v10);
        v31 = v30;
        v57 = sub_100121E04(v29, v30, &v58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v27 + 14, v27 + 22);
        sub_10015C85C();
        swift_bridgeObjectRelease(v31);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "View state was hidden with camera active for %f seconds for call: %s. Force disabling video...", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
        sub_100109440(v28);
        sub_100109440(v27);

      }
      else
      {

        sub_10015C85C();
      }
      v38 = (void *)objc_opt_self(ICSCrashReporter);
      v58 = 0;
      v59 = 0xE000000000000000;
      _StringGuts.grow(_:)(82);
      v39._countAndFlagsBits = 0xD00000000000002DLL;
      v39._object = (void *)0x80000001001F4120;
      String.append(_:)(v39);
      Double.write<A>(to:)(&v58, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v40._object = (void *)0x80000001001F4150;
      v40._countAndFlagsBits = 0xD000000000000021;
      String.append(_:)(v40);
      v41 = sub_1001085C0(&qword_1002D9FA0);
      v42 = swift_allocObject(v41, 37, 7);
      *(_OWORD *)(v42 + 16) = xmmword_100242B30;
      v43 = (_QWORD *)(v1 + OBJC_IVAR___ICSCameraStateMonitor_viewState);
      v44 = *(uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___ICSCameraStateMonitor_viewState);
      v45 = sub_10014CB24();
      LOBYTE(v44) = v44(v45);
      sub_100110F0C();
      *(_BYTE *)(v42 + 32) = v44 & 1;
      v46 = (uint64_t (*)(uint64_t))v43[2];
      v47 = sub_10014CB24();
      LOBYTE(v46) = v46(v47);
      sub_100110F0C();
      *(_BYTE *)(v42 + 33) = v46 & 1;
      v48 = (uint64_t (*)(uint64_t))v43[4];
      v49 = sub_10014CB24();
      LOBYTE(v48) = v48(v49);
      sub_100110F0C();
      *(_BYTE *)(v42 + 34) = v48 & 1;
      v50 = (uint64_t (*)(uint64_t))v43[6];
      v51 = sub_10014CB24();
      LOBYTE(v50) = v50(v51);
      sub_100110F0C();
      *(_BYTE *)(v42 + 35) = v50 & 1;
      v52 = (uint64_t (*)(uint64_t))v43[8];
      v53 = sub_10014CB24();
      LOBYTE(v52) = v52(v53);
      sub_100110F0C();
      *(_BYTE *)(v42 + 36) = v52 & 1;
      v57 = v42;
      sub_1001085C0(&qword_1002D9FA8);
      v54._countAndFlagsBits = String.init<A>(reflecting:)(&v57);
      object = v54._object;
      String.append(_:)(v54);
      swift_bridgeObjectRelease(object);
      v56 = v59;
      v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v56);
      objc_msgSend(v38, "simulateCrashReportWithReason:pid:code:", v35, getpid(), 3735931409);
      swift_unknownObjectRelease(v5);
      goto LABEL_12;
    }
LABEL_14:
    swift_once(&qword_1002D7280, sub_10010BF14);
    goto LABEL_4;
  }
  if (qword_1002D7280 != -1)
    swift_once(&qword_1002D7280, sub_10010BF14);
  v32 = sub_100109570();
  v33 = sub_100108664(v32, (uint64_t)&unk_1002E2D48);
  v35 = Logger.logObject.getter(v33, v34);
  v36 = static os_log_type_t.error.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Not updating camera state on monitor because we have no active video call.", v37, 2u);
    sub_100109440((uint64_t)v37);
  }
LABEL_12:

}

id sub_10015C588(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  id v7;
  id v9;

  v2 = v1;
  v9 = 0;
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "handleForPredicate:error:", a1, &v9);
  v5 = v9;
  if (v4)
  {
    v6 = v9;
  }
  else
  {
    v7 = v9;
    _convertNSErrorToError(_:)(v5);

    swift_willThrow();
  }

  return v4;
}

uint64_t sub_10015C658(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CameraStateMonitor.TimerState(a2, a1);
  return a2;
}

uint64_t sub_10015C68C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CameraStateMonitor.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015C6D0(uint64_t a1, uint64_t a2)
{
  assignWithTake for CameraStateMonitor.TimerState(a2, a1);
  return a2;
}

void sub_10015C704(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = a2(255);
    atomic_store(sub_10010BCA0(v3), a1);
  }
  sub_100109438();
}

void sub_10015C738(uint64_t a1)
{
  uint64_t v1;

  sub_10015ADF4(a1, v1, sub_10015AE48);
}

void sub_10015C758(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  void (*v4)(uint64_t);

  a3(0);
  v3 = sub_10015C874();
  v4(v3);
  sub_100109438();
}

uint64_t sub_10015C794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10015C7D8(_QWORD *a1)
{
  destroy for CameraStateMonitor.TimerState(a1);
  return a1;
}

void sub_10015C804(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_10010A198(v2);
  sub_100109438();
}

uint64_t sub_10015C848@<X0>(uint64_t a1@<X8>)
{
  return swift_release(a1);
}

uint64_t sub_10015C850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108600(a1, a2, a3, a4);
}

uint64_t sub_10015C85C()
{
  uint64_t v0;

  return swift_unknownObjectRelease_n(v0, 2);
}

uint64_t sub_10015C868(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 33, 0);
}

uint64_t sub_10015C874()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10015C880()
{
  uint64_t v0;

  return swift_unknownObjectRetain_n(v0, 2);
}

void sub_10015C890(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  sub_100156AB4(0, a2, a3);
}

uint64_t sub_10015C898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_release(*(_QWORD *)(v1 + a1 + 8));
}

uint64_t sub_10015C8A4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_10015C8AC()
{
  uint64_t v0;

  return swift_getObjectType(v0);
}

uint64_t sub_10015C8B4(uint64_t a1)
{
  return NSNotificationCenter.publisher(for:object:)(a1, 0);
}

uint64_t sub_10015C8BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = type metadata accessor for ObjectTracker.Tracker(0);
  sub_10010BED4(v0, qword_1002D9FB8);
  sub_100108664(v0, (uint64_t)qword_1002D9FB8);
  type metadata accessor for ObjectTracker(0);
  v1 = static ObjectTracker.shared.getter();
  v2 = sub_10015CAB4();
  v3 = sub_1001085C0(&qword_1002D9FD0);
  v4 = type metadata accessor for ObjectTracker.Rule(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v3, v7 + *(_QWORD *)(v5 + 72), v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100241240;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8 + v7, enum case for ObjectTracker.Rule.exclusive(_:), v4);
  v9 = sub_10015CC50(v8);
  ObjectTracker.tracker(for:with:)(v2, v9);
  swift_release(v1);
  return swift_bridgeObjectRelease(v9);
}

uint64_t sub_10015CA0C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  if (qword_1002D7300 != -1)
    swift_once(&qword_1002D7300, sub_10015C8BC);
  v3 = type metadata accessor for ObjectTracker.Tracker(0);
  sub_100108664(v3, (uint64_t)qword_1002D9FB8);
  return a1(v1);
}

unint64_t sub_10015CAB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8410;
  if (!qword_1002D8410)
  {
    v1 = objc_opt_self(PHAudioCallViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D8410);
  }
  return result;
}

Swift::Int sub_10015CAF0(uint64_t a1)
{
  uint64_t v2;
  Swift::Int result;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  Swift::UInt32 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_1001085C0((uint64_t *)&unk_1002D9FF0);
  result = static _SetStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)result;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_16:
    swift_bridgeObjectRelease(a1);
    return (Swift::Int)v4;
  }
  v6 = 0;
  v7 = result + 56;
  while (v6 < *(_QWORD *)(a1 + 16))
  {
    v8 = *(_DWORD *)(a1 + 32 + 4 * v6);
    Hasher.init(_seed:)(v19, v4[5]);
    Hasher._combine(_:)(v8);
    result = Hasher._finalize()();
    v9 = -1 << *((_BYTE *)v4 + 32);
    v10 = result & ~v9;
    v11 = v10 >> 6;
    v12 = *(_QWORD *)(v7 + 8 * (v10 >> 6));
    v13 = 1 << v10;
    v14 = v4[6];
    if (((1 << v10) & v12) != 0)
    {
      if (*(_DWORD *)(v14 + 4 * v10) == v8)
        goto LABEL_13;
      v15 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v15;
        v11 = v10 >> 6;
        v12 = *(_QWORD *)(v7 + 8 * (v10 >> 6));
        v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0)
          break;
        if (*(_DWORD *)(v14 + 4 * v10) == v8)
          goto LABEL_13;
      }
    }
    *(_QWORD *)(v7 + 8 * v11) = v13 | v12;
    *(_DWORD *)(v14 + 4 * v10) = v8;
    v16 = v4[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_18;
    v4[2] = v18;
LABEL_13:
    if (++v6 == v5)
      goto LABEL_16;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10015CC50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = type metadata accessor for ObjectTracker.Rule(0);
  v37 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2, v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  v9 = (char *)&v32 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
    v12 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_1001085C0(&qword_1002D9FD8);
  result = static _SetStorage.allocate(capacity:)(v10);
  v12 = (_QWORD *)result;
  v34 = *(_QWORD *)(a1 + 16);
  if (!v34)
  {
LABEL_16:
    swift_bridgeObjectRelease(a1);
    return (uint64_t)v12;
  }
  v13 = 0;
  v36 = result + 56;
  v14 = *(unsigned __int8 *)(v37 + 80);
  v32 = a1;
  v33 = a1 + ((v14 + 32) & ~v14);
  while (v13 < *(_QWORD *)(a1 + 16))
  {
    v15 = *(_QWORD *)(v37 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
    v16(v9, v33 + v15 * v13, v2);
    v17 = v12[5];
    v18 = sub_10015CED8(&qword_1002D9FE0, (uint64_t)&protocol conformance descriptor for ObjectTracker.Rule);
    v19 = dispatch thunk of Hashable._rawHashValue(seed:)(v17, v2, v18);
    v20 = -1 << *((_BYTE *)v12 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    v23 = *(_QWORD *)(v36 + 8 * (v21 >> 6));
    v24 = 1 << v21;
    if (((1 << v21) & v23) != 0)
    {
      v35 = v13;
      v25 = ~v20;
      while (1)
      {
        v16(v6, v12[6] + v21 * v15, v2);
        v26 = sub_10015CED8(&qword_1002D9FE8, (uint64_t)&protocol conformance descriptor for ObjectTracker.Rule);
        v27 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v9, v2, v26);
        v28 = *(void (**)(char *, uint64_t))(v37 + 8);
        v28(v6, v2);
        if ((v27 & 1) != 0)
          break;
        v21 = (v21 + 1) & v25;
        v22 = v21 >> 6;
        v23 = *(_QWORD *)(v36 + 8 * (v21 >> 6));
        v24 = 1 << v21;
        if ((v23 & (1 << v21)) == 0)
        {
          a1 = v32;
          v13 = v35;
          goto LABEL_10;
        }
      }
      result = ((uint64_t (*)(char *, uint64_t))v28)(v9, v2);
      a1 = v32;
      v13 = v35;
    }
    else
    {
LABEL_10:
      *(_QWORD *)(v36 + 8 * v22) = v24 | v23;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32))(v12[6] + v21 * v15, v9, v2);
      v29 = v12[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_18;
      v12[2] = v31;
    }
    if (++v13 == v34)
      goto LABEL_16;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10015CED8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ObjectTracker.Rule(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10015CF20(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SecureOverlayWindow();
  sub_100151B5C((uint64_t)v9.super_class, "initWithWindowScene:", v3, v4, v5, v6, v7, v8, v9);

  sub_100064628();
}

void sub_10015CF80()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)sub_10015D9C4();
  sub_100151B20((uint64_t)v7.super_class, "initWithFrame:", v1, v2, v3, v4, v5, v6, v7);
  sub_100151B4C();
}

void sub_10015CFD0(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SecureOverlayWindow();
  sub_100151B5C((uint64_t)v9.super_class, "initWithCoder:", v3, v4, v5, v6, v7, v8, v9);

  sub_100064628();
}

void sub_10015D030()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)sub_10015D9C4();
  sub_100151B20((uint64_t)v7.super_class, "initWithContentRect:", v1, v2, v3, v4, v5, v6, v7);
  sub_100151B4C();
}

id sub_10015D080()
{
  return sub_100112450(type metadata accessor for SecureOverlayWindow);
}

uint64_t type metadata accessor for SecureOverlayWindow()
{
  return objc_opt_self(_TtC13InCallService19SecureOverlayWindow);
}

void *sub_10015D0CC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_window);
  v2 = v1;
  return v1;
}

void sub_10015D140(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_window);
}

void sub_10015D14C(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_cloneTerminatingWindow);
}

void sub_10015D158(id a1)
{
  char *v1;
  char *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  double v38;
  UIWindowLevel v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  void *v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  UIWindowLevel v61;
  double v62;

  v2 = v1;
  v4 = (_QWORD *)type metadata accessor for DispatchPredicate(0);
  v5 = *(v4 - 1);
  __chkstk_darwin(v4, v6);
  v8 = (uint64_t *)((char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10015D948();
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = _dispatchPreconditionTest(_:)(v8);
  (*(void (**)(_QWORD *, _QWORD *))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v10, "delegate");

  if (!v4)
    return;
  v11 = objc_opt_self(ICSApplicationDelegate);
  v12 = (void *)sub_10015D9D8(v11);
  if (v12)
  {
    v13 = objc_msgSend(v12, "sceneManager");
    objc_msgSend(v13, "registerGenericScene:ofType:", a1, 2);

    v14 = objc_opt_self(UIWindowScene);
    v15 = swift_dynamicCastObjCClass(a1, v14);
    if (!v15)
    {
      if (qword_1002D7250 != -1)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v40 = type metadata accessor for Logger(0);
      v41 = sub_100108664(v40, (uint64_t)&unk_1002E2CC8);
      v43 = Logger.logObject.getter(v41, v42);
      v44 = static os_log_type_t.error.getter(v43);
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)sub_10010E3FC();
        *(_WORD *)v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Received a non-UIWindowScene with a compact role - requesting scene dismissal", v45, 2u);
        sub_100109440((uint64_t)v45);
      }
LABEL_32:

      goto LABEL_33;
    }
    v16 = v15;
    v17 = objc_allocWithZone((Class)type metadata accessor for SecureOverlayWindow());
    a1 = a1;
    sub_10015D140((uint64_t)objc_msgSend(v17, "initWithWindowScene:", v16));
    v18 = OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_window;
    v19 = *(void **)&v2[OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_window];
    if (v19)
    {
      v20 = objc_allocWithZone((Class)type metadata accessor for ScreenSharingBroadcasterRootViewController());
      v21 = v19;
      v22 = objc_msgSend(v20, "init");
      objc_msgSend(v21, "setRootViewController:", v22);

      v23 = *(void **)&v2[v18];
      if (v23)
      {
        sub_1001360DC(v23, "setHidden:");
        v24 = *(void **)&v2[v18];
        if (v24)
        {
          v25 = objc_msgSend(v24, "_bindingLayer");
          objc_msgSend(v25, "setDisableUpdateMask:", 32);

        }
      }
    }
    v26 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SecureWindow()), "initWithWindowScene:", v16);
    sub_10015D14C((uint64_t)v26);
    v27 = OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_cloneTerminatingWindow;
    v28 = *(void **)&v2[OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_cloneTerminatingWindow];
    if (v28)
    {
      sub_1001360DC(v28, "setUserInteractionEnabled:");
      v29 = *(void **)&v2[v27];
      if (v29)
      {
        v30 = objc_msgSend(v29, "layer");
        sub_1001360DC(v30, "setAllowsHitTesting:");

        v31 = *(void **)&v2[v27];
        if (v31)
        {
          v32 = (void *)objc_opt_self(UIColor);
          v33 = v31;
          v34 = objc_msgSend(v32, "clearColor");
          objc_msgSend(v33, "setBackgroundColor:", v34);

          v35 = *(void **)&v2[v27];
          if (v35)
          {
            v36 = *(void **)&v2[v18];
            if (v36)
            {
              v37 = v35;
              objc_msgSend(v36, "windowLevel");
              v39 = v38;
            }
            else
            {
              v39 = UIWindowLevelNormal;
              v46 = v35;
            }
            type metadata accessor for Level(0);
            v48 = v47;
            v61 = v39;
            v60 = 0x3F50624DD2F1A9FCLL;
            v49 = sub_10015D984();
            static _UIKitNumericRawRepresentable.- infix(_:_:)(&v62, &v61, &v60, v48, v49);
            objc_msgSend(v35, "setWindowLevel:", v62);

            v50 = *(void **)&v2[v27];
            if (v50)
              sub_1001360DC(v50, "setHidden:");
          }
        }
      }
    }
    v8 = objc_msgSend(objc_allocWithZone((Class)CACloningTerminatorLayer), "init");
    v51 = *(void **)&v2[v27];
    if (v51)
    {
      v2 = (char *)objc_msgSend(v51, "layer");
      if (v2)
      {
        while (1)
        {
          v52 = sub_10015D9E4();

          if (!v52)
            break;
          v53 = (char *)sub_10015D9E4();

          v2 = v53;
          if (!v53)
            goto LABEL_29;
        }
        objc_msgSend(v2, "addSublayer:", v8);
      }
    }
    else
    {
      v2 = 0;
    }
LABEL_29:
    if (qword_1002D7250 == -1)
    {
LABEL_30:
      v54 = type metadata accessor for Logger(0);
      v55 = sub_100108664(v54, (uint64_t)&unk_1002E2CC8);
      v43 = Logger.logObject.getter(v55, v56);
      v57 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v43, v57))
      {

        swift_unknownObjectRelease(v4);
        return;
      }
      v58 = (uint8_t *)sub_10010E3FC();
      *(_WORD *)v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v57, "Finished creating new generic scene for ScreenSharingBroadcasterSceneDelegate", v58, 2u);
      sub_100109440((uint64_t)v58);

      goto LABEL_32;
    }
LABEL_37:
    swift_once(&qword_1002D7250, sub_10010BCAC);
    goto LABEL_30;
  }
LABEL_33:
  swift_unknownObjectRelease(v4);
}

void sub_10015D788()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "delegate");

  if (v1)
  {
    v2 = objc_opt_self(ICSApplicationDelegate);
    v3 = sub_10015D9D8(v2);
    if (v3)
    {
      v4 = (void *)v3;
      sub_10015D140(0);
      objc_msgSend(v4, "dismissScreenSharingBroadcasterSession");
    }
    swift_unknownObjectRelease(v1);
  }
}

id sub_10015D87C()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_window] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_cloneTerminatingWindow] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterSceneDelegate();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10015D8E4()
{
  return sub_100112450(type metadata accessor for ScreenSharingBroadcasterSceneDelegate);
}

uint64_t type metadata accessor for ScreenSharingBroadcasterSceneDelegate()
{
  return objc_opt_self(_TtC13InCallService37ScreenSharingBroadcasterSceneDelegate);
}

unint64_t sub_10015D948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D7F70;
  if (!qword_1002D7F70)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D7F70);
  }
  return result;
}

unint64_t sub_10015D984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DA068;
  if (!qword_1002DA068)
  {
    type metadata accessor for Level(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UIWindowLevel, v1);
    atomic_store(result, (unint64_t *)&qword_1002DA068);
  }
  return result;
}

uint64_t sub_10015D9C4()
{
  return type metadata accessor for SecureOverlayWindow();
}

uint64_t sub_10015D9D8(uint64_t a1)
{
  uint64_t v1;

  return swift_dynamicCastObjCClass(v1, a1);
}

id sub_10015D9E4()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 3720));
}

uint64_t *sub_10015D9F0()
{
  if (qword_1002D7310 != -1)
    swift_once(&qword_1002D7310, sub_10015DC3C);
  return &qword_1002E2E28;
}

uint64_t sub_10015DA30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue_serial.Attributes(0);
  __chkstk_darwin(v5, v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9, v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015DE84();
  static DispatchQoS.userInteractive.getter();
  v18 = _swiftEmptyArrayStorage;
  v13 = sub_10015DEC0(&qword_1002DA138, 255, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue_serial.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue_serial.Attributes);
  v14 = sub_1001085C0(&qword_1002DA140);
  v15 = sub_10015DF00();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v14, v15, v5, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  result = OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000021, 0x80000001001F42D0, v12, v8, v4, 0);
  qword_1002E2E20 = result;
  return result;
}

uint64_t *sub_10015DBE0()
{
  if (qword_1002D7308 != -1)
    swift_once(&qword_1002D7308, sub_10015DA30);
  return &qword_1002E2E20;
}

uint64_t sub_10015DC3C()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for VoicemailActor();
  result = swift_initStaticObject(v0, &unk_1002D73B8);
  qword_1002E2E28 = result;
  return result;
}

uint64_t sub_10015DC64()
{
  if (qword_1002D7308 != -1)
    swift_once(&qword_1002D7308, sub_10015DA30);
  return OS_dispatch_queue_serial_executor.asUnownedSerialExecutor()();
}

uint64_t sub_10015DCB0()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for VoicemailActor()
{
  return objc_opt_self(_TtC13InCallService14VoicemailActor);
}

uint64_t sub_10015DCE0()
{
  return sub_10015DC64();
}

uint64_t sub_10015DCF4()
{
  sub_10015D9F0();
  return swift_retain();
}

uint64_t sub_10015DD10()
{
  uint64_t v0;

  return static GlobalActor.sharedUnownedExecutor.getter(v0);
}

id sub_10015DD18()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VoicemailQueueManager();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10015DD68()
{
  if (qword_1002D7308 != -1)
    swift_once(&qword_1002D7308, sub_10015DA30);
  qword_1002E2E30 = qword_1002E2E20;
  return (id)qword_1002E2E20;
}

id sub_10015DDB0()
{
  if (qword_1002D7318 != -1)
    swift_once(&qword_1002D7318, sub_10015DD68);
  return (id)qword_1002E2E30;
}

id sub_10015DE04()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VoicemailQueueManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VoicemailQueueManager()
{
  return objc_opt_self(MPVoicemailQueueManager);
}

uint64_t sub_10015DE58(uint64_t a1, uint64_t a2)
{
  return sub_10015DEC0(&qword_1002D77E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for VoicemailActor, (uint64_t)&unk_100242C98);
}

unint64_t sub_10015DE84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DA130;
  if (!qword_1002DA130)
  {
    v1 = objc_opt_self(OS_dispatch_queue_serial);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DA130);
  }
  return result;
}

uint64_t sub_10015DEC0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10015DF00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DA148;
  if (!qword_1002DA148)
  {
    v1 = sub_10010AD84(&qword_1002DA140);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002DA148);
  }
  return result;
}

uint64_t sub_10015DF44()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10010BED4(v0, qword_1002E2E38);
  sub_100108664(v0, (uint64_t)qword_1002E2E38);
  return Logger.init(subsystem:category:)(0xD000000000000027, 0x80000001001F4320, 0x746C7561666564, 0xE700000000000000);
}

void sub_10015DFB8(void *a1)
{
  id v2;
  void *v3;
  char **v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  __int128 v31;
  void *v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  _BOOL8 v45;
  uint64_t v46;
  _BOOL8 IsEmpty;
  uint64_t v48;
  os_log_type_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  NSObject *v59;
  os_log_type_t v60;
  const char *v61;
  os_log_type_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_type_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  os_log_type_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double Width;
  uint64_t v94;
  uint64_t v95;
  os_log_type_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  double Height;
  uint64_t v106;
  uint64_t v107;
  os_log_type_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  os_log_type_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  double v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  os_log_type_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  os_log_type_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  __int128 v201;
  _QWORD *v202;
  uint64_t *v203;
  void *v204;
  uint64_t v205;
  id v206;
  id v207[2];
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  uint64_t v213;
  CGRect v214;
  CGRect v215;
  CGRect v216;
  CGRect v217;
  CGRect v218;
  CGRect v219;
  CGRect v220;
  CGRect v221;
  CGRect v222;

  v2 = objc_msgSend(a1, "window");
  if (v2)
  {
    v3 = v2;
    v4 = &selRef__routeIsReceiver_;
    objc_msgSend(v2, "bounds");
    if (qword_1002D7320 != -1)
      swift_once(&qword_1002D7320, sub_10015DF44);
    v5 = type metadata accessor for Logger(0);
    sub_100108664(v5, (uint64_t)qword_1002E2E38);
    v6 = v3;
    v8 = Logger.logObject.getter(v6, v7);
    v9 = static os_log_type_t.debug.getter();
    v10 = (void *)v9;
    v204 = v6;
    if (os_log_type_enabled(v8, v9))
    {
      v11 = sub_1001094C8(22);
      v202 = (_QWORD *)sub_1001094C8(8);
      v205 = sub_1001094C8(32);
      v209 = v205;
      *(_DWORD *)v11 = 138412546;
      v212 = v6;
      v12 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, &v213, v11 + 4, v11 + 12);
      *v202 = v3;

      *(_WORD *)(v11 + 12) = 2080;
      v13 = sub_10015E80C();
      v14 = CGRect.description.getter(v13);
      v16 = v15;
      v212 = (void *)sub_100121E04(v14, v15, &v209);
      v4 = &selRef__routeIsReceiver_;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, &v213, v11 + 14, v11 + 22);
      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v8, (os_log_type_t)v10, "[View Evaluation] Current window %@ has a bound of %s.", (uint8_t *)v11, 0x16u);
      v17 = sub_1001085C0(&qword_1002D7880);
      sub_100109598((uint64_t)v202, v18, v17);
      sub_100109440((uint64_t)v202);
      sub_100109598(v205, v19, (uint64_t)&type metadata for Any + 8);
      sub_100109440(v205);
      sub_100109440(v11);

    }
    else
    {

    }
    v212 = a1;
    v29 = a1;
    swift_beginAccess(&v212, &v209, 1, 0);
    v30 = sub_10015E888();
    if (v30)
    {
      v203 = &v209;
      *(_QWORD *)&v31 = 138543362;
      *(_OWORD *)v207 = v31;
      *(_QWORD *)&v31 = 138412290;
      v201 = v31;
      do
      {
        v32 = v29;
        v29 = v30;
        objc_msgSend(v30, v4[476]);
        v34 = v33;
        v36 = v35;
        v38 = v37;
        v40 = v39;
        objc_msgSend(v32, "frame");
        v222.origin.x = v41;
        v222.origin.y = v42;
        v222.size.width = v43;
        v222.size.height = v44;
        v214.origin.x = v34;
        v214.origin.y = v36;
        v214.size.width = v38;
        v214.size.height = v40;
        v45 = CGRectContainsRect(v214, v222);
        if (v45)
        {
          sub_10015E7DC();
          IsEmpty = CGRectIsEmpty(v215);
          if (IsEmpty)
          {
            Logger.logObject.getter(IsEmpty, v48);
            v49 = sub_10015E7E8();
            if (sub_10015E7BC(v49))
            {
              sub_1001094C8(12);
              v50 = (_QWORD *)sub_10015E7AC();
              sub_10015E790(v50, v51, v52, v53, v54, v55, v56, v57, v185, v190, v195, v198, v201, *((uint64_t *)&v201 + 1), (uint64_t)v203, (uint64_t)v204, (int)v207[0], (uint64_t)v207[1], v208,
                v209,
                v210,
                v211,
                v212);
              v58 = (void *)sub_10015E7CC();
              v61 = "[View Evaluation] Current view %{public}@ has a zero rect.";
LABEL_39:
              _os_log_impl(v58, v59, v60, v61, (uint8_t *)v32, 0xCu);
              v181 = sub_1001085C0(&qword_1002D7880);
              sub_100109598((uint64_t)v4, v182, v181);
              sub_100109440((uint64_t)v4);
              sub_100109440((uint64_t)v32);
              v4 = &selRef__routeIsReceiver_;
            }
          }
          else
          {
            sub_10015E7DC();
            if (CGRectGetWidth(v216) == 0.0)
            {
              Logger.logObject.getter(v71, v72);
              v73 = sub_10015E7E8();
              if (sub_10015E7BC(v73))
              {
                sub_1001094C8(12);
                v74 = (_QWORD *)sub_10015E7AC();
                sub_10015E790(v74, v75, v76, v77, v78, v79, v80, v81, v185, v190, v195, v198, v201, *((uint64_t *)&v201 + 1), (uint64_t)v203, (uint64_t)v204, (int)v207[0], (uint64_t)v207[1], v208,
                  v209,
                  v210,
                  v211,
                  v212);
                v58 = (void *)sub_10015E7CC();
                v61 = "[View Evaluation] Current view %{public}@ has a zero width.";
                goto LABEL_39;
              }
            }
            else
            {
              sub_10015E7DC();
              if (CGRectGetHeight(v217) == 0.0)
              {
                Logger.logObject.getter(v82, v83);
                v84 = sub_10015E7E8();
                if (sub_10015E7BC(v84))
                {
                  sub_1001094C8(12);
                  v85 = (_QWORD *)sub_10015E7AC();
                  sub_10015E790(v85, v86, v87, v88, v89, v90, v91, v92, v185, v190, v195, v198, v201, *((uint64_t *)&v201 + 1), (uint64_t)v203, (uint64_t)v204, (int)v207[0], (uint64_t)v207[1], v208,
                    v209,
                    v210,
                    v211,
                    v212);
                  v58 = (void *)sub_10015E7CC();
                  v61 = "[View Evaluation] Current view %{public}@ has a zero height.";
                  goto LABEL_39;
                }
              }
              else
              {
                sub_10015E7DC();
                Width = CGRectGetWidth(v218);
                v219.origin.x = sub_10015E80C();
                if (CGRectGetWidth(v219) >= Width)
                {
                  sub_10015E7DC();
                  Height = CGRectGetHeight(v220);
                  v221.origin.x = sub_10015E80C();
                  if (CGRectGetHeight(v221) >= Height)
                  {
                    v117 = objc_msgSend(v32, "isHidden");
                    if ((_DWORD)v117)
                    {
                      Logger.logObject.getter(v117, v118);
                      v119 = sub_10015E7E8();
                      if (sub_10015E7BC(v119))
                      {
                        sub_1001094C8(12);
                        v120 = (_QWORD *)sub_10015E7AC();
                        sub_10015E790(v120, v121, v122, v123, v124, v125, v126, v127, v185, v190, v195, v198, v201, *((uint64_t *)&v201 + 1), (uint64_t)v203, (uint64_t)v204, (int)v207[0], (uint64_t)v207[1], v208,
                          v209,
                          v210,
                          v211,
                          v212);
                        v58 = (void *)sub_10015E7CC();
                        v61 = "[View Evaluation] Current view %{public}@ is hidden.";
                        goto LABEL_39;
                      }
                    }
                    else
                    {
                      v128 = objc_msgSend(v32, "alpha");
                      v130 = v129;
                      v132 = Logger.logObject.getter(v128, v131);
                      v10 = (void *)v132;
                      if (v130 == 0.0)
                      {
                        v133 = static os_log_type_t.error.getter(v132);
                        if (sub_10015E860(v133))
                        {
                          sub_1001094C8(12);
                          HIDWORD(v195) = (_DWORD)v32;
                          v4 = (char **)sub_10015E7AC();
                          v141 = sub_10015E7F0(*(float *)v207, (uint64_t)v4, v134, v135, v136, v137, v138, v139, v140, v185, v190, v195, v198, v201, *((uint64_t *)&v201 + 1), (uint64_t)v203, (uint64_t)v204, (uint64_t)v207[0], (uint64_t)v207[1],
                                   v208,
                                   v209,
                                   v210,
                                   v211,
                                   v212);
                          v149 = sub_10015E84C((uint64_t)v141, v142, v143, v144, v145, v146, v147, v148, v186, v191);
                          v58 = (void *)sub_10015E870(v149, v150, v151, v152, v153, v154, v155, v156, v187, v192, v196, v199);
                          v61 = "[View Evaluation] Current view %{public}@ has alpha of 0.";
                          goto LABEL_39;
                        }
                      }
                      else
                      {
                        v157 = static os_log_type_t.debug.getter();
                        if (sub_10015E860(v157))
                        {
                          sub_1001094C8(12);
                          HIDWORD(v195) = (_DWORD)v32;
                          v4 = (char **)sub_10015E7AC();
                          v165 = sub_10015E7F0(*(float *)&v201, (uint64_t)v4, v158, v159, v160, v161, v162, v163, v164, v185, v190, v195, v198, v201, *((uint64_t *)&v201 + 1), (uint64_t)v203, (uint64_t)v204, (uint64_t)v207[0], (uint64_t)v207[1],
                                   v208,
                                   v209,
                                   v210,
                                   v211,
                                   v212);
                          v173 = sub_10015E84C((uint64_t)v165, v166, v167, v168, v169, v170, v171, v172, v188, v193);
                          v58 = (void *)sub_10015E870(v173, v174, v175, v176, v177, v178, v179, v180, v189, v194, v197, v200);
                          v61 = "[View Evaluation] Current view %@.";
                          goto LABEL_39;
                        }
                      }
                    }
                  }
                  else
                  {
                    Logger.logObject.getter(v106, v107);
                    v108 = sub_10015E7E8();
                    if (sub_10015E7BC(v108))
                    {
                      sub_1001094C8(12);
                      v109 = (_QWORD *)sub_10015E7AC();
                      sub_10015E790(v109, v110, v111, v112, v113, v114, v115, v116, v185, v190, v195, v198, v201, *((uint64_t *)&v201 + 1), (uint64_t)v203, (uint64_t)v204, (int)v207[0], (uint64_t)v207[1], v208,
                        v209,
                        v210,
                        v211,
                        v212);
                      v58 = (void *)sub_10015E7CC();
                      v61 = "[View Evaluation] Current view %{public}@ has a height larger than the window.";
                      goto LABEL_39;
                    }
                  }
                }
                else
                {
                  Logger.logObject.getter(v94, v95);
                  v96 = sub_10015E7E8();
                  if (sub_10015E7BC(v96))
                  {
                    sub_1001094C8(12);
                    v97 = (_QWORD *)sub_10015E7AC();
                    sub_10015E790(v97, v98, v99, v100, v101, v102, v103, v104, v185, v190, v195, v198, v201, *((uint64_t *)&v201 + 1), (uint64_t)v203, (uint64_t)v204, (int)v207[0], (uint64_t)v207[1], v208,
                      v209,
                      v210,
                      v211,
                      v212);
                    v58 = (void *)sub_10015E7CC();
                    v61 = "[View Evaluation] Current view %{public}@ has a width larger than the window.";
                    goto LABEL_39;
                  }
                }
              }
            }
          }
        }
        else
        {
          Logger.logObject.getter(v45, v46);
          v62 = sub_10015E7E8();
          if (sub_10015E7BC(v62))
          {
            sub_1001094C8(12);
            v63 = (_QWORD *)sub_10015E7AC();
            sub_10015E790(v63, v64, v65, v66, v67, v68, v69, v70, v185, v190, v195, v198, v201, *((uint64_t *)&v201 + 1), (uint64_t)v203, (uint64_t)v204, (int)v207[0], (uint64_t)v207[1], v208,
              v209,
              v210,
              v211,
              v212);
            v58 = (void *)sub_10015E7CC();
            v61 = "[View Evaluation] Current view %{public}@ is not entirely contained in parent view.";
            goto LABEL_39;
          }
        }

        v183 = v212;
        v212 = v29;

        v30 = sub_10015E888();
      }
      while (v30);
    }

    goto LABEL_42;
  }
  if (qword_1002D7320 != -1)
    swift_once(&qword_1002D7320, sub_10015DF44);
  v20 = type metadata accessor for Logger(0);
  sub_100108664(v20, (uint64_t)qword_1002E2E38);
  v206 = a1;
  v22 = Logger.logObject.getter(v206, v21);
  v23 = static os_log_type_t.error.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)sub_1001094C8(12);
    v25 = (_QWORD *)sub_1001094C8(8);
    *(_DWORD *)v24 = 138543362;
    v209 = (uint64_t)v206;
    v26 = v206;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v209, &v210, v24 + 4, v24 + 12);
    *v25 = v206;

    _os_log_impl((void *)&_mh_execute_header, v22, v23, "[View Evaluation] Current view %{public}@ has no window.", v24, 0xCu);
    v27 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v25, v28, v27);
    sub_100109440((uint64_t)v25);
    sub_100109440((uint64_t)v24);

LABEL_42:
    sub_10015E820();
    return;
  }

  sub_10015E820();
}

id sub_10015E6EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ViewEvaluation();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10015E73C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ViewEvaluation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ViewEvaluation()
{
  return objc_opt_self(ICSViewEvaluation);
}

id sub_10015E790(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  uint64_t v23;

  *(_DWORD *)v23 = a17;
  *(_QWORD *)(v23 + 4) = a23;
  *a1 = a23;
  return a23;
}

uint64_t sub_10015E7AC()
{
  return swift_slowAlloc(8, -1);
}

BOOL sub_10015E7BC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10015E7CC()
{
  uint64_t v0;

  return v0;
}

id sub_10015E7DC()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 3808));
}

uint64_t sub_10015E7E8()
{
  return static os_log_type_t.error.getter();
}

id sub_10015E7F0(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{
  float *v24;

  *v24 = a1;
  return a24;
}

double sub_10015E80C()
{
  double v0;

  return v0;
}

uint64_t sub_10015E84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, a7, a2, v10);
}

BOOL sub_10015E860(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10015E870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  _QWORD *v13;

  *v13 = a12;
  return v12;
}

id sub_10015E888()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, *(SEL *)(v0 + 2832));
}

void sub_10015E894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v5;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;

  v5 = v3;
  v8 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", a1);
  v9 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v8);
  sub_10010E338();
  sub_10011ADD4(v10, &qword_1002DA178, NSMutableAttributedString_ptr);
  v13 = sub_100162E0C(0, 0xE000000000000000);
  objc_msgSend(v13, "appendAttributedString:", v4);
  v11 = sub_100162E0C(32, 0xE100000000000000);
  sub_100158278(v13, "appendAttributedString:");

  swift_bridgeObjectRetain(a3);
  v12 = sub_100162E0C(a2, a3);
  objc_msgSend(v13, "appendAttributedString:", v12);

  objc_msgSend(v5, "setAttributedText:", v13);
}

uint64_t sub_10015E9CC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain(*(_QWORD *)(a1 + 40));
  LOBYTE(v1) = v1(v2);
  sub_100110F0C();
  return v1 & 1;
}

unint64_t sub_10015EA00(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_10015EA10@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_10015EA00(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_10015EA40()
{
  void *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  Class isa;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  sub_100162FDC();
  sub_100163048();
  sub_100163040();
  sub_10010E3D8();
  if ((v3 & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v5 = sub_100109570();
    sub_10011ADC0(v5, (uint64_t)&unk_1002E2CC8);
    v6 = sub_10011ADDC();
    if (sub_10010E390(v6))
    {
      v7 = (_WORD *)sub_10010E3FC();
      sub_10011AF94(v7);
      sub_10010E37C((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: PHAudioCallViewController trying to add webView");
      sub_100109440(v4);
    }

    v11 = sub_10010E3C8(v10, "parentViewController");
    if (v11)
    {
      v13 = sub_10010E3C8(v12, "view");
      if (!v13)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      v14 = v13;
      sub_100163224(objc_msgSend(v13, "window"));

      if (v3)
      {
        v15 = sub_10010E3C8(v12, "view");
        if (!v15)
        {
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
        v16 = v15;
        objc_msgSend(v15, "alpha");
        v18 = v17;

        if (v18 == 0.0)
        {
          v19 = sub_10010E3C8(v12, "view");
          if (v19)
          {
            v20 = v19;
            objc_msgSend(v19, "setAlpha:", 1.0);

LABEL_28:
            objc_msgSend(v0, "requestToEnableVideoStreamingButton");
            return;
          }
LABEL_44:
          __break(1u);
          return;
        }
      }
    }
    v21 = sub_10010E3E8(v12, "addChildViewController:");
    v22 = sub_10010E310((uint64_t)v21, "view");
    if (v22)
    {
      v23 = v22;
      v24 = sub_10010E3C8((uint64_t)v22, "view");
      if (v24)
      {
        v25 = v24;
        sub_1001630F4((uint64_t)v24, "addSubview:");

        v27 = sub_1001632B4(v26, "didMoveToParentViewController:");
        v28 = sub_10010E3C8((uint64_t)v27, "view");
        if (v28)
        {
          v29 = v28;
          sub_1001360DC(v28, "setTranslatesAutoresizingMaskIntoConstraints:");

          v31 = sub_10010E3C8(v30, "view");
          if (v31)
          {
            v32 = v31;
            v33 = objc_msgSend(v31, "topAnchor");

            v35 = sub_10010E310(v34, "callParticipantsViewController");
            v36 = sub_100163338(v35);
            sub_100149EAC();
            v37 = objc_msgSend(v32, "bottomAnchor");
            sub_100151298();
            v38 = objc_msgSend(v33, "constraintEqualToAnchor:", v35);
            sub_10010E3D8();

            sub_1001285F4((uint64_t)v32);
            v40 = *(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_webViewRTCViewControllerWaitingStataTopAnchor];
            if (v40)
            {
              v41 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
              v42 = sub_100109754(v41, 64);
              *(_OWORD *)(v42 + 16) = xmmword_100241800;
              *(_QWORD *)(v42 + 32) = v40;
              v40 = v40;
              v43 = sub_10010E3C8((uint64_t)v40, "view");
              if (!v43)
              {
LABEL_37:
                __break(1u);
                goto LABEL_38;
              }
              v44 = sub_10016321C(v43);
              sub_100149EB4();
              v46 = sub_10010E310(v45, "view");
              if (!v46)
              {
LABEL_38:
                __break(1u);
                goto LABEL_39;
              }
              v47 = v46;
              v48 = sub_10016321C(v46);

              v49 = sub_10016320C();
              sub_10011B028();

              *(_QWORD *)(v42 + 40) = v47;
              v51 = sub_10010E3C8(v50, "view");
              if (!v51)
              {
LABEL_39:
                __break(1u);
                goto LABEL_40;
              }
              v52 = objc_msgSend(v51, "leadingAnchor");
              sub_100149EB4();
              v54 = sub_10010E310(v53, "view");
              if (!v54)
              {
LABEL_40:
                __break(1u);
                goto LABEL_41;
              }
              v55 = v54;
              v56 = objc_msgSend(v54, "leadingAnchor");

              v57 = sub_10016320C();
              sub_10011B028();

              *(_QWORD *)(v42 + 48) = v55;
              v59 = sub_10010E3C8(v58, "view");
              if (!v59)
              {
LABEL_41:
                __break(1u);
                goto LABEL_42;
              }
              v60 = objc_msgSend(v59, "trailingAnchor");
              sub_10011B028();
              if (!sub_10010E310(v61, "view"))
              {
LABEL_42:
                __break(1u);
                goto LABEL_43;
              }
              v62 = (void *)objc_opt_self(NSLayoutConstraint);
              v63 = sub_100163050((uint64_t)v62, "trailingAnchor");
              sub_1001630D4();
              v64 = sub_100163060(v55, "constraintEqualToAnchor:");

              *(_QWORD *)(v42 + 56) = v64;
              sub_10016329C(v65, v66);
              sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
              isa = sub_10010983C().super.isa;
              sub_1001094F4();
              sub_100158278(v62, "activateConstraints:");

            }
            v68 = sub_10010E310(v39, "buttonsViewController");
            v69 = sub_100163338(v68);
            sub_10010E3D8();
            if (v40)
            {
              v70 = sub_100122840((uint64_t)&unk_10028B1B8);
              *(_QWORD *)(v70 + 16) = v2;
              v103 = v70;
              v78 = sub_10016313C(v70, v71, v72, v73, v74, v75, v76, v77, (uint64_t)_NSConcreteStackBlock);
              v79 = v2;
              swift_release(v103);
              sub_1001632A8(v80, "setAccessibilityElementsHiddenBlock:");
              _Block_release(v78);

              v82 = sub_10010E310(v81, "callParticipantsViewController");
              v83 = sub_100163338(v82);

              if (v83)
              {
                v84 = sub_100122840((uint64_t)&unk_10028B208);
                *(_QWORD *)(v84 + 16) = v79;
                sub_10016313C(v84, v85, v86, v87, v88, v89, v90, v91, (uint64_t)_NSConcreteStackBlock);
                v92 = sub_100163324();
                swift_release(v78);
                sub_10010E3C0(v83, "setAccessibilityElementsHiddenBlock:");
                sub_1001631FC();

                v94 = sub_10010E310(v93, "callDetailsViewButton");
                v95 = sub_100122840((uint64_t)&unk_10028B258);
                *(_QWORD *)(v95 + 16) = v92;
                sub_10016313C(v95, v96, v97, v98, v99, v100, v101, v102, (uint64_t)_NSConcreteStackBlock);
                sub_100163324();
                swift_release(v78);
                sub_10010E3C0(v94, "setIsAccessibilityElementBlock:");
                sub_1001631FC();

                goto LABEL_28;
              }
              goto LABEL_35;
            }
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
LABEL_33:
          __break(1u);
          __break(1u);
          goto LABEL_34;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_32;
  }
}

id sub_10015F0EC(char *a1)
{
  uint64_t v1;
  id result;
  void *v3;
  double v4;
  double v5;

  v1 = *(_QWORD *)&a1[OBJC_IVAR___EmergencyWebRTCViewController_currentState];
  if (!v1 || *(_QWORD *)(v1 + direct field offset for SOSUIWebRTCState.state) != 5)
    return 0;
  result = objc_msgSend(a1, "view");
  if (result)
  {
    v3 = result;
    objc_msgSend(result, "alpha");
    v5 = v4;

    return (id)(v5 > 0.0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_10015F17C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR___EmergencyWebRTCViewController_currentState);
  return v1 && (*(_QWORD *)(v1 + direct field offset for SOSUIWebRTCState.state) & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

BOOL sub_10015F1B8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR___EmergencyWebRTCViewController_currentState);
  return v1 && (*(_QWORD *)(v1 + direct field offset for SOSUIWebRTCState.state) & 0xFFFFFFFFFFFFFFFDLL) != 1;
}

void sub_10015F248()
{
  void *v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;

  sub_100162FDC();
  sub_100163048();
  sub_100163040();
  sub_10010E3D8();
  if ((v2 & 1) == 0)
  {
    sub_10013621C();
    return;
  }
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v4 = sub_100109570();
  sub_10011ADC0(v4, (uint64_t)&unk_1002E2CC8);
  v5 = sub_10011ADDC();
  if (sub_10010E390(v5))
  {
    v6 = (_WORD *)sub_10010E3FC();
    sub_10011AF94(v6);
    sub_10010E37C((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: PHAudioCallViewController trying to remove webView");
    sub_100109440(v3);
  }

  v9 = sub_100163058(v1, "willMoveToParentViewController:");
  v10 = sub_10010E3C8((uint64_t)v9, "view");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "removeFromSuperview");

    v13 = sub_10010E3E8(v12, "removeChildViewController:");
    v14 = sub_10010E310((uint64_t)v13, "buttonsViewController");
    v15 = sub_1001631CC(v14);

    if (v15)
    {
      sub_100163058(v15, "setAccessibilityElementsHiddenBlock:");

      v17 = sub_10010E310(v16, "callParticipantsViewController");
      v18 = sub_1001631CC(v17);

      if (v18)
      {
        sub_100163058(v18, "setAccessibilityElementsHiddenBlock:");

        v20 = sub_10010E310(v19, "callDetailsViewButton");
        sub_100163058(v20, "setIsAccessibilityElementBlock:");
        sub_1001362BC(v20);
        return;
      }
      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_13:
  __break(1u);
}

void sub_10015F510(SEL *a1, char a2)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = objc_msgSend(sub_10010BC5C((uint64_t)objc_msgSend(v2, *a1, a2 & 1), "buttonsViewController"), "view");
  sub_1001632F0();
  if (v14)
  {
    v4 = objc_opt_self(PHAudioCallControlsView);
    v12 = (void *)sub_100163290(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
    if (v12)
      objc_msgSend(v12, "updateControls");
    sub_10014354C(v15);
  }
  else
  {
    sub_100064628();
  }
}

void sub_10015F5E4()
{
  void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  sub_100162FDC();
  sub_100163048();
  sub_100163040();
  sub_10010E3D8();
  if ((v1 & 1) == 0)
    goto LABEL_11;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v3 = sub_100109570();
  sub_10011ADC0(v3, (uint64_t)&unk_1002E2CC8);
  v4 = sub_10011ADDC();
  if (sub_10010E390(v4))
  {
    v5 = (_WORD *)sub_10010E3FC();
    sub_10011AF94(v5);
    sub_10010E37C((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: PHAudioCallViewController trying to hide webView");
    sub_100109440(v2);
  }

  v9 = sub_10010E3C8(v8, "view");
  if (!v9)
  {
    __break(1u);
    return;
  }
  v10 = v9;
  objc_msgSend(v9, "setAlpha:", 0.0);

  v12 = sub_10010E310(v11, "buttonsViewController");
  v13 = sub_1001631CC(v12);
  sub_1001632F0();
  if (!v24)
  {
LABEL_11:
    sub_10013621C();
    return;
  }
  v14 = objc_opt_self(PHAudioCallControlsView);
  v22 = (void *)sub_100163290(v14, v15, v16, v17, v18, v19, v20, v21, v23, v24);
  if (v22)
    objc_msgSend(v22, "updateControls");
  sub_1001362BC(v25);
}

void sub_10015F768(void *a1)
{
  void *v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;

  v4 = v1;
  sub_100163038();
  sub_100163048();
  sub_100163040();
  sub_10010E3D8();
  if ((v2 & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v6 = sub_100109570();
    sub_10011ADC0(v6, (uint64_t)&unk_1002E2CC8);
    v7 = sub_10011ADDC();
    if (sub_10010E390(v7))
    {
      v8 = (_WORD *)sub_10010E3FC();
      sub_10011AF94(v8);
      sub_10010E37C((void *)&_mh_execute_header, v9, v10, "EnhancedEmergency: PHAudioCallViewController trying to remove webView");
      sub_100109440(v3);
    }

    v11 = sub_100163058(a1, "willMoveToParentViewController:");
    v12 = sub_10010E310((uint64_t)v11, "view");
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, "removeFromSuperview");

      objc_msgSend(v4, "removeChildViewController:", a1);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1001360E4();
  }
}

void sub_10015F8C4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  Class isa;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;

  sub_100162FDC();
  sub_100163048();
  sub_100163040();
  sub_10010E3D8();
  if ((v3 & 1) == 0)
    goto LABEL_18;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v5 = sub_100109570();
  sub_10011ADC0(v5, (uint64_t)&unk_1002E2CC8);
  v6 = sub_10011ADDC();
  if (sub_10010E390(v6))
  {
    v7 = (_WORD *)sub_10010E3FC();
    sub_10011AF94(v7);
    sub_10010E37C((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: PHAudioCallViewController trying to add media request viewController");
    sub_100109440(v4);
  }

  v11 = sub_10010E3E8(v10, "addChildViewController:");
  v12 = sub_10010E310((uint64_t)v11, "view");
  if (!v12)
  {
    __break(1u);
    goto LABEL_20;
  }
  v13 = v12;
  v14 = sub_10010E3C8((uint64_t)v12, "view");
  if (!v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = v14;
  sub_1001630F4((uint64_t)v14, "addSubview:");

  v17 = sub_1001632B4(v16, "didMoveToParentViewController:");
  v18 = sub_10010E3C8((uint64_t)v17, "view");
  if (!v18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v19 = v18;
  sub_1001360DC(v18, "setTranslatesAutoresizingMaskIntoConstraints:");

  v20 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v21 = sub_100109754(v20, 64);
  *(_OWORD *)(v21 + 16) = xmmword_100241800;
  v22 = sub_10010E3C8(v21, "view");
  if (!v22)
  {
LABEL_22:
    __break(1u);
    __break(1u);
    goto LABEL_23;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, "topAnchor");
  sub_100149EAC();
  v26 = sub_10010E310(v25, "callParticipantsViewController");
  v27 = objc_msgSend(v26, "view");
  sub_100149EB4();
  v29 = sub_100136368(v28, "bottomAnchor");
  sub_10011B028();
  v30 = sub_10016312C();
  sub_100151298();

  *(_QWORD *)(v21 + 32) = v23;
  v32 = sub_10010E3C8(v31, "view");
  if (!v32)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v33 = sub_10016321C(v32);
  sub_100149EAC();
  v35 = sub_10010E310(v34, "view");
  if (!v35)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v36 = v35;
  v37 = sub_10016321C(v35);
  sub_10011B028();
  v38 = sub_10016312C();
  sub_100151298();

  *(_QWORD *)(v21 + 40) = v36;
  v40 = sub_10010E3C8(v39, "view");
  if (!v40)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v41 = objc_msgSend(v40, "leadingAnchor");
  sub_100149EAC();
  v43 = sub_10010E310(v42, "view");
  if (!v43)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v44 = v43;
  v45 = objc_msgSend(v43, "leadingAnchor");
  sub_10011B028();
  v46 = sub_10016312C();
  sub_100151298();

  *(_QWORD *)(v21 + 48) = v44;
  v48 = sub_10010E3C8(v47, "view");
  if (!v48)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v49 = objc_msgSend(v48, "trailingAnchor");
  sub_100151298();
  v51 = sub_10010E310(v50, "view");
  if (!v51)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v52 = v51;
  v53 = objc_opt_self(NSLayoutConstraint);
  v54 = sub_10011AF6C(v53, "trailingAnchor");

  v55 = sub_1001632DC(v44, "constraintEqualToAnchor:");
  *(_QWORD *)(v21 + 56) = v55;
  sub_10016329C(v56, v57);
  sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
  isa = sub_10010983C().super.isa;
  v59 = sub_1001094F4();
  sub_1001632A8(v59, "activateConstraints:");

  v61 = sub_10010E310(v60, "buttonsViewController");
  v62 = objc_msgSend(v61, "view");

  if (v62)
  {
    v71 = sub_10016313C(v63, v64, v65, v66, v67, v68, v69, v70, (uint64_t)_NSConcreteStackBlock);
    sub_1001630F4((uint64_t)v71, "setAccessibilityElementsHiddenBlock:");
    sub_1001631FC();

    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, *(id *)(v2 + OBJC_IVAR___PHEmergencyMediaRequestViewController_waitingStateTitlelabel));
    objc_msgSend(v0, "requestToEnableMediaUploadButton");
LABEL_18:
    sub_100163110();
    return;
  }
LABEL_29:
  __break(1u);
}

void sub_10015FD94()
{
  void *v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;

  sub_100162FDC();
  sub_100163048();
  sub_100163040();
  sub_10010E3D8();
  if ((v2 & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v4 = sub_100109570();
    sub_10011ADC0(v4, (uint64_t)&unk_1002E2CC8);
    v5 = sub_10011ADDC();
    if (sub_10010E390(v5))
    {
      v6 = (_WORD *)sub_10010E3FC();
      sub_10011AF94(v6);
      sub_10010E37C((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: PHAudioCallViewController trying to remove media request viewController");
      sub_100109440(v3);
    }

    v9 = sub_100163058(v1, "willMoveToParentViewController:");
    v10 = sub_10010E3C8((uint64_t)v9, "view");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "removeFromSuperview");

      v13 = sub_10010E3E8(v12, "removeChildViewController:");
      v14 = sub_10010E310((uint64_t)v13, "buttonsViewController");
      v15 = sub_1001631CC(v14);

      if (v15)
      {
        sub_100163058(v15, "setAccessibilityElementsHiddenBlock:");

        UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sub_1001360E4();
  }
}

void sub_10015FF3C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  os_log_type_t v31;
  uint8_t *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  Class isa;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *oslog;

  sub_100162FDC();
  sub_100163048();
  sub_100163040();
  sub_10010E3D8();
  if ((v1 & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v2 = sub_100109570();
    v3 = sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)sub_10010E3FC();
      *(_WORD *)v5 = 0;
      sub_10011AE18((void *)&_mh_execute_header, v3, v4, "EnhancedEmergency: PHAudioCallViewController trying to insert webView above participantsView", v5);
      sub_100109440((uint64_t)v5);
    }

    v7 = sub_10010E310(v6, "buttonsViewController");
    sub_100163224(v7);
    if (!v3)
    {
      oslog = Logger.logObject.getter(v8, v9);
      v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(oslog, v31))
      {
        v32 = (uint8_t *)sub_10010E3FC();
        *(_WORD *)v32 = 0;
        sub_10011AE18((void *)&_mh_execute_header, oslog, v31, "EnhancedEmergency: PHAudioCallViewController not fully loaded yet, return", v32);
        sub_100109440((uint64_t)v32);
      }
      goto LABEL_30;
    }
    v10 = sub_10010E310(v8, "callParticipantsViewController");
    sub_100163224(v10);
    v12 = sub_10010E310(v11, "buttonsViewController");
    sub_100163224(v12);
    v14 = sub_10010E310(v13, "view");
    if (v14)
    {
      v15 = v14;
      v16 = sub_10010E310((uint64_t)v14, "callDetailsViewButton");
      sub_1001630F4((uint64_t)v16, "sendSubviewToBack:");

      v18 = sub_10010E310(v17, "view");
      if (v18)
      {
        v19 = v18;
        v20 = sub_10010E3C8((uint64_t)v18, "view");
        if (v20)
        {
          v21 = v20;
          v22 = sub_10010E310((uint64_t)v20, "callParticipantsViewController");
          v23 = sub_100163270(v22);
          sub_100149EB4();
          if (&selRef_buttonsForAmbientTransition)
          {
            sub_100163084();

            v24 = sub_100163258();
            if ((_DWORD)v24 == 1)
            {
              v25 = sub_10010E310((uint64_t)v24, "view");
              if (!v25)
              {
LABEL_37:
                __break(1u);
                __break(1u);
                goto LABEL_38;
              }
              v26 = v25;
              v27 = sub_10010E310((uint64_t)v25, "buttonsViewController");
              v28 = sub_100163270(v27);
              sub_100149EAC();
              v30 = sub_10010E3C8(v29, "view");
              if (!v30)
              {
                __break(1u);
                return;
              }
            }
            else
            {
              v33 = sub_100163258();
              if ((_DWORD)v33 != 2)
                goto LABEL_25;
              v34 = sub_10010E310((uint64_t)v33, "view");
              if (!v34)
              {
LABEL_38:
                __break(1u);
                __break(1u);
                goto LABEL_39;
              }
              v35 = v34;
              v36 = sub_10010E310((uint64_t)v34, "keypadViewController");
              v37 = sub_100163270(v36);
              sub_100149EAC();
              v39 = sub_10010E3C8(v38, "view");
              if (!v39)
              {
LABEL_39:
                __break(1u);
                goto LABEL_40;
              }
              v40 = v39;
              sub_100163084();

              v42 = sub_10010E310(v41, "view");
              if (!v42)
              {
LABEL_40:
                __break(1u);
                goto LABEL_41;
              }
              v26 = v42;
              v43 = sub_10010E310((uint64_t)v42, "bottomBar");
              if (!v43)
              {
LABEL_41:
                __break(1u);
                goto LABEL_42;
              }
              v21 = v43;
              v30 = sub_10010E3C8((uint64_t)v43, "view");
              if (!v30)
              {
LABEL_42:
                __break(1u);
                return;
              }
            }
            v44 = v30;
            sub_100163084();

LABEL_25:
            v45 = *(void **)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_webViewRTCViewControllerWaitingStataTopAnchor);
            if (v45)
            {
              v46 = (void *)objc_opt_self(NSLayoutConstraint);
              v47 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
              v48 = sub_100109754(v47, 40);
              *(_OWORD *)(v48 + 16) = xmmword_1002420C0;
              *(_QWORD *)(v48 + 32) = v45;
              v50 = specialized Array._endMutation()(v48, v49);
              sub_1001632F8(v50, (unint64_t *)&qword_1002DB440);
              v51 = v45;
              isa = Array._bridgeToObjectiveC()().super.isa;
              sub_1001094F4();
              sub_100158278(v46, "deactivateConstraints:");

            }
            v53 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
            v54 = sub_100109754(v53, 40);
            *(_OWORD *)(v54 + 16) = xmmword_1002420C0;
            v55 = sub_10010E3C8(v54, "view");
            if (v55)
            {
              v56 = v55;
              v57 = objc_msgSend(v55, "topAnchor");

              if (sub_10010E310(v58, "view"))
              {
                v59 = (void *)objc_opt_self(NSLayoutConstraint);
                v60 = sub_100136368((uint64_t)v59, "topAnchor");
                sub_10011B028();
                v61 = objc_msgSend(v57, "constraintEqualToAnchor:", &selRef_shouldRestrictJoinConversationRequest_performSynchronously_);

                *(_QWORD *)(v54 + 32) = v61;
                v64 = specialized Array._endMutation()(v62, v63);
                sub_1001632F8(v64, (unint64_t *)&qword_1002DB440);
                oslog = sub_10010983C().super.isa;
                sub_1001094F4();
                objc_msgSend(v59, "activateConstraints:", oslog);
LABEL_30:

                return;
              }
              goto LABEL_36;
            }
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_33;
  }
}

void sub_1001604FC()
{
  void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  sub_100163038();
  sub_100163048();
  sub_100163040();
  sub_10010E3D8();
  if ((v1 & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v3 = sub_100109570();
    sub_10011ADC0(v3, (uint64_t)&unk_1002E2CC8);
    v4 = sub_10011ADDC();
    if (sub_10010E390(v4))
    {
      v5 = (_WORD *)sub_10010E3FC();
      sub_10011AF94(v5);
      sub_10010E37C((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: PHAudioCallViewController trying to bring webView to front");
      sub_100109440(v2);
    }

    v9 = sub_10010E3C8(v8, "view");
    if (v9)
    {
      v10 = v9;
      v11 = sub_10010E310((uint64_t)v9, "view");
      if (v11)
      {
        sub_100163278((int)v11, "bringSubviewToFront:", (int)v11, v12, v13, v14, v15, v16, v17, v18);

        sub_1001362BC(v19);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sub_10013621C();
  }
}

void sub_100160650()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;

  sub_100163038();
  sub_100163048();
  sub_100163040();
  sub_100163238();
  if ((v1 & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v3 = sub_100109570();
    sub_10011ADC0(v3, (uint64_t)&unk_1002E2CC8);
    v4 = sub_10011ADDC();
    if (sub_100109560(v4))
    {
      v5 = (_WORD *)sub_10010E3FC();
      sub_1001365A0(v5);
      sub_10011AE18((void *)&_mh_execute_header, v0, v1, "EnhancedEmergency: run animation to fullScreen webView", v2);
      sub_100109440((uint64_t)v2);
    }

    objc_opt_self(UIView);
    v6 = sub_100122840((uint64_t)&unk_10028B140);
    *(_QWORD *)(v6 + 16) = v0;
    sub_10016313C(v6, v7, v8, v9, v10, v11, v12, v13, (uint64_t)_NSConcreteStackBlock);
    v14 = v0;
    v15 = sub_1001438D8();
    sub_100163284(v15, "animateWithDuration:animations:");
    sub_1001632C0();
  }
  sub_1001435C0();
}

void sub_10016077C(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;

  v2 = objc_msgSend(a1, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNeedsLayout");

    v4 = objc_msgSend(a1, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10016083C()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;

  sub_100163038();
  sub_100163048();
  sub_100163040();
  sub_100163238();
  if ((v1 & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v3 = sub_100109570();
    sub_10011ADC0(v3, (uint64_t)&unk_1002E2CC8);
    v4 = sub_10011ADDC();
    if (sub_100109560(v4))
    {
      v5 = (_WORD *)sub_10010E3FC();
      sub_1001365A0(v5);
      sub_10011AE18((void *)&_mh_execute_header, v0, v1, "EnhancedEmergency: PHAudioCallViewController trying to remove intermittent state label", v2);
      sub_100109440((uint64_t)v2);
    }

    -[NSObject removeEnhancedEmergencyIntermittentStateLabel](v0, "removeEnhancedEmergencyIntermittentStateLabel");
  }
}

void sub_10016098C()
{
  void *v0;
  uint8_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _WORD *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id *v19;
  id v20;
  _BYTE v21[24];

  sub_100163038();
  sub_100163048();
  v3 = sub_100163040();

  if ((v3 & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v4 = sub_100109570();
    v5 = sub_10011ADC0(v4, (uint64_t)&unk_1002E2CC8);
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (_WORD *)sub_10010E3FC();
      sub_1001365A0(v7);
      sub_10011AE18((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: PHAudioCallViewController trying to request mediaUploadRequest banner during streaming", v1);
      sub_100109440((uint64_t)v1);
    }

    v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v9 = objc_msgSend(v8, "delegate");

    if (v9)
    {
      v10 = objc_opt_self(ICSApplicationDelegate);
      v11 = sub_10015D9D8(v10);
      if (v11)
      {
        Logger.logObject.getter(v11, v12);
        v13 = sub_10011ADDC();
        if (sub_10010E390(v13))
        {
          v14 = (_WORD *)sub_10010E3FC();
          sub_10011AF94(v14);
          sub_10010E37C((void *)&_mh_execute_header, v15, v16, "EnhancedEmergency: PHAudioCallViewController about to call showEnhancedEmergencyMediaUploadDuringStreamingHUD");
          sub_100109440(v2);
        }

        v18 = (char *)sub_10010E3C8(v17, "bannerPresentationManager");
        v19 = (id *)&v18[direct field offset for CNKBannerPresentationManager.value];
        sub_100110F6C((uint64_t)&v18[direct field offset for CNKBannerPresentationManager.value], (uint64_t)v21);
        v20 = *v19;

        BannerPresentationManager.showEnhancedEmergencyMediaUploadDuringStreamingHUD()();
        swift_unknownObjectRelease(v9);

      }
      else
      {
        swift_unknownObjectRelease(v9);
      }
    }
  }
}

void sub_100160B8C()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
  sub_100163058(v1, "notificationOccurred:");
  objc_msgSend(v0, "setMiddleViewState:animated:", 1, 1);

}

void sub_100160C1C(const char *a1, void (*a2)(void), void (*a3)(void))
{
  NSObject *v3;
  NSObject *v7;
  char v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  id *v26;
  id v27;
  uint64_t v28;
  _BYTE v29[24];

  v7 = v3;
  sub_100163038();
  sub_100163048();
  v8 = sub_100163040();

  if ((v8 & 1) != 0)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v9 = sub_100109570();
    sub_10011ADC0(v9, (uint64_t)&unk_1002E2CC8);
    v10 = sub_10011ADDC();
    if (os_log_type_enabled(v3, v10))
    {
      v11 = (uint8_t *)sub_10010E3FC();
      *(_WORD *)v11 = 0;
      sub_10011AE18((void *)&_mh_execute_header, v3, v10, a1, v11);
      sub_100109440((uint64_t)v11);
    }

    v12 = objc_msgSend(objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication"), "delegate");
    sub_10010E3D8();
    if (a1)
    {
      v13 = objc_opt_self(ICSApplicationDelegate);
      v14 = (void *)swift_dynamicCastObjCClass(a1, v13);
      if (!v14)
      {
        swift_unknownObjectRelease(a1);
        return;
      }
      v15 = (char *)objc_msgSend(v14, "bannerPresentationManager");
      v16 = (id *)&v15[direct field offset for CNKBannerPresentationManager.value];
      sub_100110F6C((uint64_t)&v15[direct field offset for CNKBannerPresentationManager.value], (uint64_t)v29);
      v17 = *v16;

      a2();
      v19 = sub_10010E3C8(v18, "navigationController");
      if (v19)
      {
        v20 = v19;
        v21 = objc_msgSend(v19, "topViewController");

        if (v21)
        {
          v22 = objc_opt_self(RTTUIConversationViewController);
          sub_100163178(v22);
          sub_10010E338();
          v24 = sub_10011AED4(v23, "currentInCallScene");
          if (v24 && (objc_msgSend(v24, "presentationMode"), sub_10010E338(), v20 == (void *)3))
          {
            -[NSObject hideRTTConversationIfNeeded](v7, "hideRTTConversationIfNeeded");
          }
          else
          {
            v25 = (char *)sub_10011AED4((uint64_t)v24, "bannerPresentationManager");
            v26 = (id *)&v25[direct field offset for CNKBannerPresentationManager.value];
            sub_100110F6C((uint64_t)&v25[direct field offset for CNKBannerPresentationManager.value], (uint64_t)&v28);
            v27 = *v26;

            a3();
          }
        }
      }
      swift_unknownObjectRelease(a1);
    }
  }
  sub_100163110();
}

id sub_100160EFC()
{
  void *v0;

  return objc_msgSend(v0, "addEnhancedEmergencyIntermittentStateLabelWithState:", 2);
}

void sub_100160F4C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  unint64_t v20;

  v3 = sub_1001631AC();
  v4 = sub_1001630BC(v3);
  __chkstk_darwin(v4, v5);
  v6 = sub_100143748();
  v7 = sub_10016314C(v6);
  __chkstk_darwin(v7, v8);
  sub_10016301C();
  sub_1001632C8();
  __chkstk_darwin(v9, v10);
  sub_100163184();
  __chkstk_darwin(v11, v12);
  sub_1001631EC();
  v14 = sub_10010BC5C(v13, "buttonsViewController");
  v15 = objc_msgSend(v14, "view");

  if (v15)
  {
    v16 = objc_opt_self(PHAudioCallControlsView);
    v17 = (void *)sub_100163178(v16);
    if (v17)
      sub_1001360DC(v17, "changeVideoStreamingButtonTitleWithIsSharing:");

  }
  v18 = sub_100163058(v1, "addEnhancedEmergencyIntermittentStateLabelWithState:");
  sub_10011ADD4((uint64_t)v18, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  sub_100143B58();
  sub_100163264();
  sub_1001631DC();
  sub_1001631C4(v2);
  *(_QWORD *)(sub_100122840((uint64_t)&unk_10028B0F0) + 16) = v1;
  v19 = sub_1001439F4();
  sub_100163248();
  sub_100110F0C();
  sub_100163240();
  sub_100163250((uint64_t)_swiftEmptyArrayStorage);
  sub_1001085C0((uint64_t *)&unk_1002D7F80);
  v20 = sub_10011B048();
  sub_100162FEC(v20);
  sub_100163160();
  _Block_release(v19);

  sub_100163068();
  sub_1001630DC();
  sub_1001631C4(v0);
  sub_10010BC44();
}

void sub_100161134()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  unint64_t v20;

  v3 = sub_1001631AC();
  v4 = sub_1001630BC(v3);
  __chkstk_darwin(v4, v5);
  v6 = sub_100143748();
  v7 = sub_10016314C(v6);
  __chkstk_darwin(v7, v8);
  sub_10016301C();
  sub_1001632C8();
  __chkstk_darwin(v9, v10);
  sub_100163184();
  __chkstk_darwin(v11, v12);
  sub_1001631EC();
  v14 = sub_10010BC5C(v13, "buttonsViewController");
  v15 = objc_msgSend(v14, "view");

  if (v15)
  {
    v16 = objc_opt_self(PHAudioCallControlsView);
    v17 = (void *)sub_100163178(v16);
    if (v17)
      objc_msgSend(v17, "changeVideoStreamingButtonTitleWithIsSharing:", 1);

  }
  v18 = sub_100136284(v1, "addEnhancedEmergencyIntermittentStateLabelWithState:");
  sub_10011ADD4((uint64_t)v18, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  sub_100143B58();
  sub_100163264();
  sub_1001631DC();
  sub_1001631C4(v2);
  *(_QWORD *)(sub_100122840((uint64_t)&unk_10028B0A0) + 16) = v1;
  v19 = sub_1001439F4();
  sub_100163248();
  sub_100110F0C();
  sub_100163240();
  sub_100163250((uint64_t)_swiftEmptyArrayStorage);
  sub_1001085C0((uint64_t *)&unk_1002D7F80);
  v20 = sub_10011B048();
  sub_100162FEC(v20);
  sub_100163160();
  _Block_release(v19);

  sub_100163068();
  sub_1001630DC();
  sub_1001631C4(v0);
  sub_10010BC44();
}

void sub_100161370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void **v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v29 = a3;
  v30 = a4;
  v28 = a2;
  v9 = sub_1001631AC();
  v10 = sub_1001630BC(v9);
  __chkstk_darwin(v10, v11);
  v12 = sub_100143748();
  v13 = sub_10016314C(v12);
  __chkstk_darwin(v13, v14);
  v15 = sub_10016301C();
  v16 = *(_QWORD *)(v15 - 8);
  v18 = __chkstk_darwin(v15, v17);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  sub_1001631EC();
  v22 = sub_100163330(v4, "addEnhancedEmergencyIntermittentStateLabelWithState:");
  sub_10011ADD4((uint64_t)v22, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v23 = (void *)sub_100143B58();
  static DispatchTime.now()();
  + infix(_:_:)(v20, 5.0);
  v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v24(v20, v15);
  v25 = sub_100122840(v28);
  *(_QWORD *)(v25 + 16) = v8;
  v35 = v29;
  v36 = v25;
  v31 = _NSConcreteStackBlock;
  v32 = 1107296256;
  v33 = sub_100112054;
  v34 = v30;
  v26 = sub_1001439F4();
  sub_100163248();
  sub_100110F0C();
  sub_100163240();
  sub_100163250((uint64_t)_swiftEmptyArrayStorage);
  sub_1001085C0((uint64_t *)&unk_1002D7F80);
  v27 = sub_10011B048();
  sub_100162FEC(v27);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v7, v6, v5, v26);
  sub_1001631FC();

  sub_100163068();
  sub_1001630DC();
  v24(v7, v15);
  sub_10010BC44();
}

void sub_100161564()
{
  char v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  sub_100163038();
  sub_100163048();
  sub_100163040();
  sub_100163238();
  if ((v0 & 1) != 0)
  {
    v2 = sub_10010E310(v1, "view");
    if (v2)
    {
      v3 = v2;
      v4 = sub_10010E310((uint64_t)v2, "bottomBar");
      if (v4)
      {
        sub_100163278((int)v4, "bringSubviewToFront:", (int)v4, v5, v6, v7, v8, v9, v10, v11);

        sub_10013633C(v12);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sub_10011AEDC();
  }
}

void sub_100161628(char **a1)
{
  NSObject *v1;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char **v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  Class isa;
  id v109;
  void *v110;
  uint64_t v111;
  void *v112;
  id v113;
  id v114;
  uint64_t v115;
  void *v116;
  id v117;
  id v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  id v124;
  uint64_t v125;
  void *v126;
  id v127;
  id v128;
  id v129;
  id v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  id v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  id v139;
  objc_class *v140;
  id v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  id v147;
  id v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  NSBundle v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  objc_class *v160;
  NSBundle v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  void *v172;
  id v173;
  char **v174;
  id v175;
  NSObject *v176;
  uint64_t v177;
  uint64_t v178;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v3 = sub_100109570();
  sub_10011ADC0(v3, (uint64_t)&unk_1002E2CC8);
  v4 = sub_10011ADDC();
  v176 = v1;
  if (os_log_type_enabled(v1, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v177 = (uint64_t)a1;
    v178 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = String.init<A>(reflecting:)(&v177);
    v177 = sub_100121E04(v7, v8, &v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, &v178, v5 + 4, v5 + 12);
    sub_1001631D4();
    _os_log_impl((void *)&_mh_execute_header, v1, v4, "EnhancedEmergency: Adding intermittentState label of state %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    sub_100109440(v6);
    sub_100109440((uint64_t)v5);
  }

  v9 = &selRef_setNfmPlayCommands_;
  v11 = sub_10011AED4(v10, "enhancedEmergencyIntermittentStateScrollView");

  if (!v11)
  {
    v174 = a1;
    a1 = &selRef_setParticipantAndStatusRectangleCenterYConstraint_;
    v175 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    sub_1001360DC(v175, "setTranslatesAutoresizingMaskIntoConstraints:");
    v13 = sub_100163144(objc_allocWithZone((Class)UIView));
    sub_1001360DC(v13, "setTranslatesAutoresizingMaskIntoConstraints:");
    v14 = sub_100163144(objc_allocWithZone((Class)UILabel));
    sub_1001360DC(v14, "setTranslatesAutoresizingMaskIntoConstraints:");
    v15 = (void *)objc_opt_self(UIFont);
    v16 = sub_1001632DC(v15, "preferredFontForTextStyle:");
    sub_100163204(v14, "setFont:");

    sub_100163058(v14, "setNumberOfLines:");
    sub_100136284(v14, "setTextAlignment:");
    v17 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    sub_100163204(v14, "setTextColor:");

    v18 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    sub_1001360DC(v18, "setTranslatesAutoresizingMaskIntoConstraints:");
    v19 = sub_1001632DC(v15, "preferredFontForTextStyle:");
    sub_1001632E4((uint64_t)v19, "setFont:");

    sub_100163058(v18, "setNumberOfLines:");
    v20 = sub_100136284(v18, "setTextAlignment:");
    v21 = sub_10013619C((uint64_t)v20, "secondaryLabelColor");
    sub_1001632E4((uint64_t)v21, "setTextColor:");

    v23 = sub_10011AED4(v22, "view");
    if (v23)
    {
      v24 = v23;
      a1 = (char **)v175;
      objc_msgSend(v23, "addSubview:", v175);

      sub_10010E3C0(v175, "addSubview:");
      sub_100163330(v13, "addSubview:");
      sub_100163204(v13, "addSubview:");
      -[NSObject setEnhancedEmergencyIntermittentStateScrollView:](v176, "setEnhancedEmergencyIntermittentStateScrollView:", v175);
      sub_100163330(v176, "setEnhancedEmergencyIntermittentStateLabel:");
      sub_100163204(v176, "setEnhancedEmergencySecondaryLabel:");
      v25 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
      v26 = sub_100109754(v25, 160);
      *(_OWORD *)(v26 + 16) = xmmword_100242CD0;
      v27 = sub_10010E3C8(v26, "topAnchor");
      v28 = sub_10011AED4((uint64_t)v27, "view");
      if (v28)
      {
        v29 = v28;
        v30 = v14;
        v31 = objc_msgSend(v28, "centerYAnchor");
        sub_1001630EC();
        v32 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v14, -30.0);
        sub_1001630D4();

        *(_QWORD *)(v26 + 32) = v29;
        v34 = sub_10010E3C8(v33, "bottomAnchor");
        v35 = sub_10011AED4((uint64_t)v34, "buttonsViewController");
        v36 = objc_msgSend(v35, "view");

        if (v36)
        {
          v38 = sub_10013619C(v37, "topAnchor");
          sub_1001630EC();
          v39 = sub_10016300C();
          sub_1001630D4();

          *(_QWORD *)(v26 + 40) = v36;
          v41 = sub_10010E3C8(v40, "leadingAnchor");
          v42 = sub_10011AED4((uint64_t)v41, "view");
          if (v42)
          {
            v43 = objc_msgSend(v42, "readableContentGuide");
            sub_1001630EC();
            v44 = objc_msgSend(v35, "leadingAnchor");

            v45 = sub_100163060(v41, "constraintEqualToAnchor:");
            sub_10016307C();

            *(_QWORD *)(v26 + 48) = v35;
            v47 = sub_10010E3C8(v46, "trailingAnchor");
            v48 = sub_10011AED4((uint64_t)v47, "view");
            if (v48)
            {
              v49 = v48;
              v173 = (id)objc_opt_self(NSLayoutConstraint);
              v50 = sub_10013619C((uint64_t)v173, "readableContentGuide");

              v52 = sub_100163050(v51, "trailingAnchor");
              sub_1001630D4();
              v53 = sub_100163060(v47, "constraintEqualToAnchor:");

              *(_QWORD *)(v26 + 56) = v53;
              v55 = sub_100136368(v54, "topAnchor");
              v56 = sub_10010E3C8((uint64_t)v55, "topAnchor");
              v57 = sub_100162F94((uint64_t)v56);
              sub_10016307C();

              *(_QWORD *)(v26 + 64) = v47;
              v59 = sub_100136368(v58, "bottomAnchor");
              v60 = sub_10010E3C8((uint64_t)v59, "contentLayoutGuide");
              v61 = objc_msgSend(v60, "bottomAnchor");
              sub_1001630EC();
              v62 = sub_10016300C();
              sub_1001630D4();

              *(_QWORD *)(v26 + 72) = v60;
              v64 = sub_100136368(v63, "leadingAnchor");
              v65 = sub_10010E3C8((uint64_t)v64, "contentLayoutGuide");
              v66 = objc_msgSend(v65, "leadingAnchor");
              sub_1001630EC();
              v67 = sub_10016300C();
              sub_1001630D4();

              *(_QWORD *)(v26 + 80) = v65;
              v69 = sub_100136368(v68, "trailingAnchor");
              v70 = sub_10010E3C8((uint64_t)v69, "contentLayoutGuide");
              v71 = objc_msgSend(v70, "trailingAnchor");
              sub_1001630EC();
              v72 = sub_10016300C();
              sub_1001630D4();

              *(_QWORD *)(v26 + 88) = v70;
              v74 = sub_100136368(v73, "widthAnchor");
              v75 = sub_10010E3C8((uint64_t)v74, "frameLayoutGuide");
              v76 = objc_msgSend(v75, "widthAnchor");
              sub_1001630EC();
              v77 = sub_10016300C();
              sub_1001630D4();

              *(_QWORD *)(v26 + 96) = v75;
              v79 = sub_10010E310(v78, "topAnchor");
              v80 = sub_100136368((uint64_t)v79, "topAnchor");
              v81 = sub_100162F94((uint64_t)v80);
              sub_10016307C();

              *(_QWORD *)(v26 + 104) = &selRef_shouldRestrictJoinConversationRequest_performSynchronously_;
              v83 = sub_10010E310(v82, "leadingAnchor");
              v84 = sub_100136368((uint64_t)v83, "leadingAnchor");
              v85 = sub_100162F94((uint64_t)v84);
              sub_10016307C();

              *(_QWORD *)(v26 + 112) = &selRef_shouldRestrictJoinConversationRequest_performSynchronously_;
              v87 = sub_10010E310(v86, "trailingAnchor");
              v88 = sub_100136368((uint64_t)v87, "trailingAnchor");
              v89 = sub_100162F94((uint64_t)v88);
              sub_10016307C();

              *(_QWORD *)(v26 + 120) = &selRef_shouldRestrictJoinConversationRequest_performSynchronously_;
              v91 = sub_10011AF6C(v90, "topAnchor");
              v92 = sub_10010E310((uint64_t)v91, "bottomAnchor");
              v93 = sub_100162F94((uint64_t)v92);
              sub_10016307C();

              *(_QWORD *)(v26 + 128) = &selRef_shouldRestrictJoinConversationRequest_performSynchronously_;
              v95 = sub_10011AF6C(v94, "leadingAnchor");
              v96 = sub_100136368((uint64_t)v95, "leadingAnchor");
              v97 = sub_100162F94((uint64_t)v96);
              sub_10016307C();

              *(_QWORD *)(v26 + 136) = &selRef_shouldRestrictJoinConversationRequest_performSynchronously_;
              v99 = sub_10011AF6C(v98, "trailingAnchor");
              v100 = sub_100136368((uint64_t)v99, "trailingAnchor");
              v101 = sub_100162F94((uint64_t)v100);
              sub_10016307C();

              *(_QWORD *)(v26 + 144) = &selRef_shouldRestrictJoinConversationRequest_performSynchronously_;
              v103 = sub_10011AF6C(v102, "bottomAnchor");
              v104 = sub_100136368((uint64_t)v103, "bottomAnchor");
              v105 = sub_100162F94((uint64_t)v104);
              sub_10016307C();

              *(_QWORD *)(v26 + 152) = &selRef_shouldRestrictJoinConversationRequest_performSynchronously_;
              v178 = v26;
              specialized Array._endMutation()(v106, v107);
              sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
              isa = sub_10010983C().super.isa;
              sub_1001094F4();
              objc_msgSend(v173, "activateConstraints:", isa);

              v9 = &selRef_setNfmPlayCommands_;
              a1 = v174;
              goto LABEL_12;
            }
LABEL_40:
            __break(1u);
LABEL_41:
            v178 = (uint64_t)a1;
            _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for PHEnhancedEmergencyIntermittentState, &v178, &type metadata for PHEnhancedEmergencyIntermittentState);
            __break(1u);
            JUMPOUT(0x10016263CLL);
          }
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_12:
  v109 = sub_10011AED4(v12, "enhancedEmergencyIntermittentStateScrollView");
  if (v109)
  {
    v110 = v109;
    switch((unint64_t)a1)
    {
      case 0uLL:
        sub_10011ADD4((uint64_t)v109, &qword_1002DA660, UIImage_ptr);
        sub_100163098();
        v112 = (void *)v111;
        v113 = sub_10011AED4(v111, "enhancedEmergencyIntermittentStateLabel");
        if (v112)
          v114 = v112;
        else
          v114 = sub_100163144(objc_allocWithZone((Class)UIImage));
        objc_opt_self(NSBundle);
        v129 = sub_100136578();
        v141 = sub_100136368((uint64_t)v129, "mainBundle");
        sub_100136804();
        sub_100162FA8(0x505F4152454D4143, 0xED00004445535541);
        sub_1001631B8();
        sub_100163100();

        sub_1001631D4();
        v143 = sub_100163050(v142, "enhancedEmergencySecondaryLabel");
        objc_msgSend(v143, "setAlpha:", 1.0);

        v139 = sub_100163050(v144, "enhancedEmergencySecondaryLabel");
        v140 = (objc_class *)sub_100136368((uint64_t)v139, "mainBundle");
        sub_100136804();
        goto LABEL_29;
      case 1uLL:
        sub_10011ADD4((uint64_t)v109, &qword_1002DA660, UIImage_ptr);
        sub_10017BD1C(0x6F65646976, 0xE500000000000000);
        v126 = (void *)v125;
        v127 = sub_10011AED4(v125, "enhancedEmergencyIntermittentStateLabel");
        if (v126)
          v128 = v126;
        else
          v128 = sub_100163144(objc_allocWithZone((Class)UIImage));
        objc_opt_self(NSBundle);
        v129 = v126;
        v160 = (objc_class *)sub_10011AED4((uint64_t)v129, "mainBundle");
        sub_100136804();
        sub_100136134();
        v161.super.isa = v160;
        v166 = sub_100136094(v162, v163, v164, v165, v161);
        v168 = v167;

        sub_10015E894((uint64_t)v128, v166, v168);
        swift_bridgeObjectRelease(v168);

        v139 = sub_100163050(v169, "enhancedEmergencySecondaryLabel");
        objc_msgSend(v139, "setAlpha:", 0.0);
        goto LABEL_32;
      case 2uLL:
        sub_10011ADD4((uint64_t)v109, &qword_1002DA660, UIImage_ptr);
        sub_100163098();
        v116 = (void *)v115;
        v117 = sub_10011AED4(v115, "enhancedEmergencyIntermittentStateLabel");
        if (v116)
          v118 = v116;
        else
          v118 = sub_100163144(objc_allocWithZone((Class)UIImage));
        objc_opt_self(NSBundle);
        v129 = sub_100136578();
        v130 = sub_100136368((uint64_t)v129, "mainBundle");
        v131 = sub_100163310();
        sub_100162FA8(v131, v132);
        sub_1001631B8();
        sub_100163100();

        sub_1001631D4();
        v134 = sub_100163050(v133, "enhancedEmergencyIntermittentStateLabel");
        v135 = objc_msgSend((id)sub_100163304(), "systemWhiteColor", 0xE000000000000000);
        sub_100158278(v117, "setTextColor:");

        v137 = sub_100163050(v136, "enhancedEmergencySecondaryLabel");
        sub_1001631A0(v137);

        v139 = sub_100163050(v138, "enhancedEmergencySecondaryLabel");
        v140 = (objc_class *)sub_100136368((uint64_t)v139, "mainBundle");
        goto LABEL_28;
      case 3uLL:
        sub_10011ADD4((uint64_t)v109, &qword_1002DA660, UIImage_ptr);
        v119 = sub_100163310();
        sub_10017BD1C(v119, v120);
        v122 = (void *)v121;
        v123 = sub_10011AED4(v121, "enhancedEmergencyIntermittentStateLabel");
        if (v122)
          v124 = v122;
        else
          v124 = sub_100163144(objc_allocWithZone((Class)UIImage));
        objc_opt_self(NSBundle);
        v129 = sub_100136578();
        v145 = sub_100136368((uint64_t)v129, "mainBundle");
        sub_100136804();
        sub_100162FA8(0x48535F4F544F4850, 0xED0000474E495241);
        sub_1001631B8();
        sub_100163100();

        sub_1001631D4();
        v147 = sub_100163050(v146, "enhancedEmergencyIntermittentStateLabel");
        v148 = objc_msgSend((id)sub_100163304(), "systemWhiteColor");
        sub_100158278(v123, "setTextColor:");

        v150 = sub_100163050(v149, "enhancedEmergencySecondaryLabel");
        sub_1001631A0(v150);

        v139 = sub_100163050(v151, "enhancedEmergencySecondaryLabel");
        v140 = (objc_class *)sub_100136368((uint64_t)v139, "mainBundle");
LABEL_28:
        sub_100136804();
LABEL_29:
        sub_100136134();
        v152.super.isa = v140;
        v157 = sub_100136094(v153, v154, v155, v156, v152);
        v159 = v158;

        sub_10017E2FC(v157, v159, v139);
        v9 = &selRef_setNfmPlayCommands_;
LABEL_32:

        v171 = sub_100163050(v170, v9[467]);
        if (v171)
        {
          v172 = v171;
          sub_1001631A0(v171);

        }
        return;
      default:
        goto LABEL_41;
    }
  }
}

void sub_10016268C()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  id v7;
  void *v8;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v3 = sub_100109570();
  sub_10011ADC0(v3, (uint64_t)&unk_1002E2CC8);
  v4 = sub_10011ADDC();
  if (sub_100109560(v4))
  {
    v5 = (_WORD *)sub_10010E3FC();
    sub_1001365A0(v5);
    sub_10011AE18((void *)&_mh_execute_header, v0, v1, "EnhancedEmergency: removing intermittentState label", v2);
    sub_100109440((uint64_t)v2);
  }

  v7 = sub_10010E310(v6, "enhancedEmergencyIntermittentStateScrollView");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "setAlpha:", 0.0);
    sub_10013633C(v8);
  }
  else
  {
    sub_10011AEDC();
  }
}

void sub_100162790()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v1 = objc_msgSend(v0, "buttonsViewController");
  v2 = objc_msgSend(v1, "view");

  v3 = (void *)objc_opt_self(UIView);
  v4 = sub_100122840((uint64_t)&unk_10028AFB0);
  *(_QWORD *)(v4 + 16) = v2;
  v12 = sub_10016313C(v4, v5, v6, v7, v8, v9, v10, v11, (uint64_t)_NSConcreteStackBlock);
  v13 = v2;
  sub_1001438D8();
  objc_msgSend(v3, "animateWithDuration:animations:", v12, 0.3);
  sub_1001632C0();

  sub_1001435C0();
}

id sub_100162878(id result)
{
  void *v1;
  _QWORD v2[6];

  if (result)
  {
    v1 = result;
    objc_msgSend(result, "setAlpha:", 1.0);
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return objc_msgSend(v1, "setTransform:", v2);
  }
  return result;
}

void sub_100162908()
{
  void *v0;
  id v1;
  id v2;
  CGFloat tx;
  CGFloat ty;
  CGFloat v5;
  CGFloat Height;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  CGFloat v10;
  CGFloat v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  CGAffineTransform v19;
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGRect v22;
  CGRect v23;

  v1 = objc_msgSend(v0, "buttonsViewController");
  v2 = objc_msgSend(v1, "view");

  if (v2)
  {
    CGAffineTransformMakeScale(&t1, 0.01, 0.01);
    v15 = *(_OWORD *)&t1.c;
    v17 = *(_OWORD *)&t1.a;
    tx = t1.tx;
    ty = t1.ty;
    sub_10016322C();
    v5 = CGRectGetWidth(v22) * 0.4;
    sub_10016322C();
    Height = CGRectGetHeight(v23);
    CGAffineTransformMakeTranslation(&t1, v5, Height * 0.6);
    v7 = *(_OWORD *)&t1.a;
    v8 = *(_OWORD *)&t1.c;
    v9 = *(_OWORD *)&t1.tx;
    *(_OWORD *)&t1.a = v17;
    *(_OWORD *)&t1.c = v15;
    t1.tx = tx;
    t1.ty = ty;
    *(_OWORD *)&t2.a = v7;
    *(_OWORD *)&t2.c = v8;
    *(_OWORD *)&t2.tx = v9;
    CGAffineTransformConcat(&v19, &t1, &t2);
    v16 = *(_OWORD *)&v19.c;
    v18 = *(_OWORD *)&v19.a;
    v10 = v19.tx;
    v11 = v19.ty;
    objc_opt_self(UIView);
    v12 = sub_100109754((uint64_t)&unk_10028AF60, 72);
    *(_QWORD *)(v12 + 16) = v2;
    *(_OWORD *)(v12 + 24) = v18;
    *(_OWORD *)(v12 + 40) = v16;
    *(CGFloat *)(v12 + 56) = v10;
    *(CGFloat *)(v12 + 64) = v11;
    *(_QWORD *)&t1.tx = sub_100162DE0;
    *(_QWORD *)&t1.ty = v12;
    *(_QWORD *)&t1.a = _NSConcreteStackBlock;
    *(_QWORD *)&t1.b = 1107296256;
    *(_QWORD *)&t1.c = sub_100112054;
    *(_QWORD *)&t1.d = &unk_10028AF78;
    _Block_copy(&t1);
    v13 = v2;
    v14 = sub_1001438D8();
    sub_100163284(v14, "animateWithDuration:animations:");
    sub_1001632C0();

  }
}

id sub_100162AC8(void *a1, _OWORD *a2)
{
  __int128 v3;
  _OWORD v5[3];

  v3 = a2[1];
  v5[0] = *a2;
  v5[1] = v3;
  v5[2] = a2[2];
  objc_msgSend(a1, "setTransform:", v5);
  return objc_msgSend(a1, "setAlpha:", 0.0);
}

id sub_100162B58()
{
  void *v0;

  return objc_msgSend(v0, "activeCall");
}

void sub_100162BAC(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  void *v4;
  void *v5;

  v1 = sub_10010BC5C(a1, "activeCall");
  v2 = objc_msgSend((id)objc_opt_self(RTTUIConversationViewController), "viewControllerForCall:", v1);
  sub_1001632F0();
  if (v5)
  {
    v3 = sub_10010BC5C((uint64_t)v5, "navigationController");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "pushViewController:animated:", v5, 1);

    }
    sub_10014354C(v5);
  }
  else
  {
    sub_100064628();
  }
}

void sub_100162C80(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;

  v1 = sub_10010BC5C(a1, "navigationController");
  if (v1
    && (v2 = v1, v3 = objc_msgSend(v1, "topViewController"), v2, v3)
    && (v4 = objc_opt_self(RTTUIConversationViewController), v5 = sub_10015D9D8(v4), v3, v5)
    && (v7 = sub_10010BC5C(v6, "navigationController")) != 0)
  {
    v8 = v7;

    sub_10013633C(v8);
  }
  else
  {
    sub_10011AEDC();
  }
}

id sub_100162D68()
{
  void *v0;

  return objc_msgSend(v0, "audioRouteMenu");
}

uint64_t sub_100162DBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 72, 7);
}

id sub_100162DE0()
{
  uint64_t v0;

  return sub_100162AC8(*(void **)(v0 + 16), (_OWORD *)(v0 + 24));
}

uint64_t sub_100162DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100162DFC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100162E04()
{
  uint64_t v0;

  return sub_100162878(*(id *)(v0 + 16));
}

id sub_100162E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  NSString v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend(v4, "initWithString:", v5);

  return v6;
}

uint64_t sub_100162E7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100162EA0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "removeEnhancedEmergencyIntermittentStateLabel");
}

void sub_100162EB0()
{
  uint64_t v0;

  sub_10016077C(*(void **)(v0 + 16));
}

id sub_100162EB8()
{
  uint64_t v0;

  return sub_10015F0EC(*(char **)(v0 + 16));
}

BOOL sub_100162EC0()
{
  uint64_t v0;

  return sub_10015F17C(*(_QWORD *)(v0 + 16));
}

BOOL sub_100162EC8()
{
  uint64_t v0;

  return sub_10015F1B8(*(_QWORD *)(v0 + 16));
}

ValueMetadata *type metadata accessor for PHEnhancedEmergencyIntermittentState()
{
  return &type metadata for PHEnhancedEmergencyIntermittentState;
}

unint64_t sub_100162EE4()
{
  unint64_t result;

  result = qword_1002DA180;
  if (!qword_1002DA180)
  {
    result = swift_getWitnessTable(&unk_100242D90, &type metadata for PHEnhancedEmergencyIntermittentState);
    atomic_store(result, (unint64_t *)&qword_1002DA180);
  }
  return result;
}

id sub_100162F94(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  return objc_msgSend(v2, *(SEL *)(v1 + 2128), a1);
}

uint64_t sub_100162FA8(uint64_t a1, uint64_t a2)
{
  NSBundle v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v6;

  v3.value._countAndFlagsBits = 0x65536C6C61436E49;
  v3.value._object = (void *)0xED00006563697672;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, v3, v2, v4, v6)._countAndFlagsBits;
}

uint64_t sub_100162FDC()
{
  return type metadata accessor for Features(0);
}

uint64_t sub_100162FEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return dispatch thunk of SetAlgebra.init<A>(_:)(v4 - 128, v2, a1, v1, v3);
}

id sub_10016300C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, *(SEL *)(v0 + 2128), v2);
}

uint64_t sub_10016301C()
{
  return type metadata accessor for DispatchTime(0);
}

uint64_t sub_100163038()
{
  return type metadata accessor for Features(0);
}

uint64_t sub_100163040()
{
  return dispatch thunk of Features.isEnhancedEmergencyEnabled.getter();
}

uint64_t sub_100163048()
{
  return static Features.shared.getter();
}

id sub_100163050(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

id sub_100163058(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0);
}

id sub_100163060(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_100163068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v1, v0);
}

void sub_10016307C()
{
  void *v0;

}

id sub_100163084()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(v0, *(SEL *)(v3 + 3784), v1, v2);
}

void sub_100163098()
{
  sub_10017BD1C(0x6C732E6F65646976, 0xEB00000000687361);
}

uint64_t sub_1001630BC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = *(_QWORD *)(result - 8);
  return result;
}

void sub_1001630D4()
{
  void *v0;

}

uint64_t sub_1001630DC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 144));
}

void sub_1001630EC()
{
  void *v0;

}

id sub_1001630F4(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void sub_100163100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10015E894(v0, v1, v2);
}

id sub_10016312C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2128), v1);
}

void *sub_10016313C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return _Block_copy(&a9);
}

id sub_100163144(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 696));
}

uint64_t sub_10016314C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = *(_QWORD *)(result - 8);
  *(_QWORD *)(v1 - 144) = result;
  return result;
}

uint64_t sub_100163160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v2, v1, v0, v3);
}

uint64_t sub_100163178(uint64_t a1)
{
  uint64_t v1;

  return swift_dynamicCastObjCClass(v1, a1);
}

id sub_1001631A0(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3824), 1.0);
}

uint64_t sub_1001631AC()
{
  return type metadata accessor for DispatchWorkItemFlags(0);
}

void sub_1001631B8()
{
  void *v0;

}

uint64_t sub_1001631C4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

id sub_1001631CC(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 1912));
}

uint64_t sub_1001631D4()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1001631DC()
{
  uint64_t v0;

  return + infix(_:_:)(v0, 5.0);
}

void sub_1001631FC()
{
  const void *v0;

  _Block_release(v0);
}

id sub_100163204(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id sub_10016320C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2128), v1);
}

id sub_10016321C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3680));
}

void sub_100163224(void *a1)
{

}

id sub_10016322C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2584));
}

void sub_100163238()
{
  void *v0;

}

uint64_t sub_100163240()
{
  return static DispatchQoS.unspecified.getter();
}

id sub_100163248()
{
  void *v0;

  return v0;
}

unint64_t sub_100163250@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
  return sub_10010E258();
}

id sub_100163258()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1696));
}

uint64_t sub_100163264()
{
  return static DispatchTime.now()();
}

id sub_100163270(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 1912));
}

id sub_100163278(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void *v10;

  return objc_msgSend(v10, a2);
}

id sub_100163284(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_100163290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return swift_dynamicCastObjCClass(a10, a1);
}

uint64_t sub_10016329C(uint64_t a1, uint64_t a2)
{
  return specialized Array._endMutation()(a1, a2);
}

id sub_1001632A8(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id sub_1001632B4(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

void sub_1001632C0()
{
  const void *v0;

  _Block_release(v0);
}

id sub_1001632DC(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id sub_1001632E4(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

void sub_1001632F0()
{
  void *v0;

}

uint64_t sub_1001632F8(uint64_t a1, unint64_t *a2)
{
  _QWORD *v2;

  return sub_10010BBE8(0, a2, v2);
}

uint64_t sub_100163304()
{
  uint64_t v0;

  return objc_opt_self(*(_QWORD *)(v0 + 1776));
}

unint64_t sub_100163310()
{
  return 0xD000000000000012;
}

id sub_100163324()
{
  void *v0;

  return v0;
}

id sub_100163330(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id sub_100163338(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 1912));
}

uint64_t sub_100163340(uint64_t a1)
{
  return 1000000000000000000 * a1;
}

uint64_t sub_100163370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = type metadata accessor for ContinuousClock.Instant(0);
  *(_QWORD *)(v6 + 64) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 72) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 80) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 88) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  sub_100110F78();
  return swift_task_switch(v15, v16, v17);
}

uint64_t sub_100163410()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  v4 = type metadata accessor for ContinuousClock(0);
  sub_1001081CC(&qword_1002DA2B0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
  dispatch thunk of Clock.now.getter(v4, v5);
  sub_1001081CC(&qword_1002DA2B8, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)(v0 + 5, v2, v6);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v7;
  v7(v1, v2);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_10016351C;
  sub_1001664F0();
  return dispatch thunk of Clock.sleep(until:tolerance:)();
}

uint64_t sub_10016351C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v2 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = *(_QWORD *)(*v1 + 64);
  v6 = *v1;
  *(_QWORD *)(v6 + 112) = v0;
  swift_task_dealloc(v2);
  v3(v4, v5);
  if (v0)
  {
    sub_100110F78();
    return sub_1001664A4(v7, v8, v9);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v6 + 88));
    sub_100110F48();
    return (*(uint64_t (**)(void))(v6 + 8))();
  }
}

uint64_t sub_1001635B0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  sub_100110F48();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

id sub_1001635E0(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  objc_class *ObjectType;
  objc_super v37;
  _QWORD *v38;

  v6 = v4;
  v34 = a2;
  v35 = a3;
  v33 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v32 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v7 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32, v8);
  sub_1001436D4();
  v9 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  sub_100120AA0();
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchQoS(0);
  sub_100120AA0();
  __chkstk_darwin(v14, v15);
  sub_100136038();
  v6[OBJC_IVAR___ICSAmbientActivityController_hasStartedMonitoringCalls] = 0;
  *(_QWORD *)&v6[OBJC_IVAR___ICSAmbientActivityController_currentActivity] = 0;
  v31 = OBJC_IVAR___ICSAmbientActivityController_ambientActivityQueue;
  v30 = sub_10015D948();
  v16 = v6;
  static DispatchQoS.userInitiated.getter();
  v38 = _swiftEmptyArrayStorage;
  sub_1001081CC((unint64_t *)&qword_1002D8CE8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = v17;
  v19 = sub_1001085C0((uint64_t *)&unk_1002DA920);
  sub_100143410((unint64_t *)&qword_1002D8CF0, (uint64_t *)&unk_1002DA920);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v38, v19, v20, v9, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v32);
  v21 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000029, 0x80000001001F44C0, v3, v13, v5, 0);
  *(_QWORD *)&v6[v31] = v21;
  v22 = v33;
  v23 = v34;
  *(_QWORD *)&v16[OBJC_IVAR___ICSAmbientActivityController_callCenter] = v33;
  *(_QWORD *)&v16[OBJC_IVAR___ICSAmbientActivityController_notificationCenter] = v23;
  v24 = v35;
  *(_QWORD *)&v16[OBJC_IVAR___ICSAmbientActivityController_sceneManager] = v35;
  v25 = v22;
  v26 = v23;
  v27 = v24;

  v37.receiver = v16;
  v37.super_class = ObjectType;
  v28 = objc_msgSendSuper2(&v37, "init");

  return v28;
}

double sub_100163878(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  double result;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  sub_1001085C0(&qword_1002D84A0);
  sub_100120AA0();
  __chkstk_darwin(v4, v5);
  sub_100136038();
  type metadata accessor for Features(0);
  v6 = (void *)static Features.shared.getter();
  v7 = dispatch thunk of Features.isDominoEnabled.getter();

  if ((v7 & 1) != 0)
  {
    sub_1001639D4();
    type metadata accessor for TaskPriority(0);
    sub_1001664DC();
    type metadata accessor for MainActor(0);
    v9 = v2;
    v10 = static MainActor.shared.getter(v9);
    v11 = (_QWORD *)swift_allocObject(&unk_10028B430, 40, 7);
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v9;
    sub_10011102C();
    v13 = v12;
    sub_1001664DC();
    v14 = v9;
    v15 = a1;
    v16 = swift_retain();
    v17 = static MainActor.shared.getter(v16);
    v18 = (_QWORD *)swift_allocObject(&unk_10028B458, 56, 7);
    v18[2] = v17;
    v18[3] = &protocol witness table for MainActor;
    v18[4] = v15;
    v18[5] = v13;
    v18[6] = v14;
    sub_10011102C();
    v20 = v19;
    swift_release(v13);
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001639D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t inited;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  _BYTE v23[48];

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015D948();
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v3);
  v8 = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once(&qword_1002D7290, sub_10010BFC0);
    goto LABEL_4;
  }
  v1 = OBJC_IVAR___ICSAmbientActivityController_hasStartedMonitoringCalls;
  if ((*(_BYTE *)(v2 + OBJC_IVAR___ICSAmbientActivityController_hasStartedMonitoringCalls) & 1) != 0)
    return result;
  if (qword_1002D7290 != -1)
    goto LABEL_9;
LABEL_4:
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100108664(v10, (uint64_t)&unk_1002E2D78);
  v13 = Logger.logObject.getter(v11, v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Starting to monitor calls", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = sub_1001085C0(&qword_1002DA2C0);
  inited = swift_initStackObject(v16, v23);
  *(_OWORD *)(inited + 16) = xmmword_100241F90;
  v18 = (void *)TUCallCenterCallStatusChangedNotification;
  v19 = (void *)TUCallCenterVideoCallStatusChangedNotification;
  *(_QWORD *)(inited + 32) = TUCallCenterCallStatusChangedNotification;
  *(_QWORD *)(inited + 40) = v19;
  v20 = *(void **)(v2 + OBJC_IVAR___ICSAmbientActivityController_notificationCenter);
  v21 = v18;
  v22 = v19;
  objc_msgSend(v20, "addObserver:selector:name:object:", v2, "handleCallStatusChanged:", v21, 0);
  objc_msgSend(v20, "addObserver:selector:name:object:", v2, "handleCallStatusChanged:", *(_QWORD *)(inited + 40), 0);
  swift_setDeallocating(inited);
  result = sub_10016BA24();
  *(_BYTE *)(v2 + v1) = 1;
  return result;
}

uint64_t sub_100163C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[2] = a4;
  v5 = type metadata accessor for ContinuousClock(0);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[4] = v6;
  v4[5] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v4[7] = v8;
  v4[8] = v9;
  return swift_task_switch(sub_100163C9C, v8, v9);
}

uint64_t sub_100163C9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  ContinuousClock.init()();
  v1 = (_QWORD *)sub_1001664C8((uint64_t)&dword_1002DA2A8);
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_100163D08;
  sub_100110F78();
  return v3();
}

uint64_t sub_100163D08()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t *v4;

  v2 = *v1;
  v4 = v2;
  sub_10011DB9C(v2[9], &v4);
  if (v0)
  {
    swift_errorRelease(v0);
    sub_1001664B8();
    return sub_1001664A4((uint64_t)sub_100166484, v2[7], v2[8]);
  }
  else
  {
    sub_1001664B8();
    return sub_1001664A4((uint64_t)sub_100163D7C, v2[7], v2[8]);
  }
}

uint64_t sub_100163D7C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 48));
  if ((static Task<>.isCancelled.getter(v1) & 1) == 0)
  {
    sub_100163DC0();
    sub_10016404C();
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100163DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v12 = sub_100166004(v11);
  if (v13)
  {
    v14 = v12;
    v15 = v13;
    if (objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICSAmbientActivityController_callCenter), "hasCurrentCalls"))
    {
      v27 = *(_QWORD *)(v0 + OBJC_IVAR___ICSAmbientActivityController_ambientActivityQueue);
      v16 = swift_allocObject(&unk_10028B3E0, 24, 7);
      v26 = v2;
      v17 = v16;
      swift_unknownObjectWeakInit(v16 + 16);
      v18 = (_QWORD *)swift_allocObject(&unk_10028B480, 40, 7);
      v18[2] = v17;
      v18[3] = v14;
      v18[4] = v15;
      aBlock[4] = sub_100166348;
      v30 = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10019CD08;
      aBlock[3] = &unk_10028B498;
      v19 = _Block_copy(aBlock);
      v20 = swift_retain();
      static DispatchQoS.unspecified.getter(v20);
      v28 = _swiftEmptyArrayStorage;
      sub_1001081CC((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v22 = v21;
      v23 = sub_1001085C0((uint64_t *)&unk_1002D7F80);
      sub_100143410((unint64_t *)&qword_1002D83C0, (uint64_t *)&unk_1002D7F80);
      dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v23, v24, v1, v22);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v19);
      _Block_release(v19);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_release(v30);
      swift_release(v17);
    }
    else
    {
      swift_bridgeObjectRelease(v15);
    }
  }
}

double sub_10016404C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)&v0[OBJC_IVAR___ICSAmbientActivityController_ambientActivityQueue];
  v11 = swift_allocObject(&unk_10028B340, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_100165F8C;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10019CD08;
  aBlock[3] = &unk_10028B358;
  v12 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v0);
  v19 = _swiftEmptyArrayStorage;
  sub_1001081CC((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v14 = v13;
  v15 = sub_1001085C0((uint64_t *)&unk_1002D7F80);
  sub_100143410((unint64_t *)&qword_1002D83C0, (uint64_t *)&unk_1002D7F80);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v1, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100164230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v8;
  v6[7] = v9;
  return swift_task_switch(sub_1001642A0, v8, v9);
}

uint64_t sub_1001642A0()
{
  uint64_t v0;
  _QWORD *v2;

  if ((objc_msgSend(*(id *)(v0 + 16), "isVideo") & 1) != 0)
  {
    swift_release(*(_QWORD *)(v0 + 40));
    Task.cancel()();
    sub_100163DC0();
    sub_10016404C();
    return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    if (qword_1002D72F0 != -1)
      swift_once(&qword_1002D72F0, sub_10014ADDC);
    v2 = (_QWORD *)swift_task_alloc(dword_1002D9374);
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_100164378;
    return PosterSnapshotService.prewarmSnapshot(call:)(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_100164378()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v3;

  v1 = (_QWORD *)*v0;
  v3 = v1;
  sub_10011DB9C(v1[8], &v3);
  return swift_task_switch(sub_1001643C0, v1[6], v1[7]);
}

uint64_t sub_1001643C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  Task.cancel()();
  sub_100163DC0();
  sub_10016404C();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100164458()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.AmbientActivityController", 39, "init()", 6, 0);
  __break(1u);
}

uint64_t type metadata accessor for AmbientActivityController()
{
  return objc_opt_self(ICSAmbientActivityController);
}

uint64_t sub_10016451C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100165020();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100164544(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100165020();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_10016456C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  return Hasher._finalize()();
}

uint64_t sub_1001645A0(_QWORD *a1)
{
  return sub_100110DC0(a1);
}

uint64_t sub_1001645C4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease(a2);
  return 1;
}

uint64_t sub_1001645E0()
{
  return 0;
}

uint64_t sub_1001645EC()
{
  return 0;
}

uint64_t sub_1001645F8(_QWORD *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = sub_1001085C0(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  sub_1001436D4();
  v11 = a1[3];
  v12 = a1[4];
  sub_10011ACB0(a1, v11);
  v13 = a3();
  dispatch thunk of Encoder.container<A>(keyedBy:)(a4, a4, v13, v11, v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v4, v8);
}

uint64_t sub_1001646B8(_QWORD *a1)
{
  return sub_1001645A0(a1);
}

uint64_t sub_1001646CC(_QWORD *a1)
{
  return sub_1001645F8(a1, &qword_1002DA210, (uint64_t (*)(void))sub_100165020, (uint64_t)&type metadata for AmbientActivityAttributes.ContentState.CodingKeys);
}

Swift::Int sub_1001646FC(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  return Hasher._finalize()();
}

uint64_t sub_100164730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001645C4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100164758()
{
  return sub_1001645E0();
}

BOOL sub_100164770@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = AudioCallBackgroundGradientViewController._canShowWhileLocked()();
  *a1 = result;
  return result;
}

uint64_t sub_100164798(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10016505C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001647C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10016505C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001647E8(_QWORD *a1)
{
  return sub_1001645F8(a1, &qword_1002DA220, (uint64_t (*)(void))sub_10016505C, (uint64_t)&type metadata for AmbientActivityAttributes.CodingKeys);
}

void sub_100164814(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v13 = (uint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10015D948();
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  if ((v14 & 1) != 0)
  {
    if (qword_1002D7290 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1002D7290, sub_10010BFC0);
LABEL_3:
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100108664(v15, (uint64_t)&unk_1002E2D78);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v19 = Logger.logObject.getter(v17, v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v42 = v2;
    v23 = v22;
    v44 = v22;
    *(_DWORD *)v21 = 136315138;
    v40 = v21 + 4;
    v41 = v16;
    v43 = Notification.name.getter(v22);
    type metadata accessor for Name(0);
    v24 = String.init<A>(reflecting:)(&v43);
    v26 = v25;
    v43 = sub_100121E04(v24, v25, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v40, v21 + 12);
    swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Observed notification: %s", v21, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v27 = v23;
    v2 = v42;
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }

  v28 = objc_msgSend(*(id *)(v2 + OBJC_IVAR___ICSAmbientActivityController_callCenter), "hasCurrentCalls");
  if ((v28 & 1) != 0)
  {
    v30 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                + OBJC_IVAR___ICSAmbientActivityController_sceneManager), "ambientScene"));

    if (v30)
    {
      sub_10016404C();
    }
    else
    {
      v36 = Logger.logObject.getter(v31, v32);
      v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "There are no ambientScene, ignore call status update", v38, 2u);
        swift_slowDealloc(v38, -1, -1);
      }

    }
  }
  else
  {
    v33 = Logger.logObject.getter(v28, v29);
    v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "There are no current calls that need an ambient activity", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }

    sub_100164BE8();
  }
}

double sub_100164BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)(v0 + OBJC_IVAR___ICSAmbientActivityController_ambientActivityQueue);
  v10 = swift_allocObject(&unk_10028B3E0, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  aBlock[4] = sub_1001661D8;
  v23 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10019CD08;
  aBlock[3] = &unk_10028B3F8;
  v11 = _Block_copy(aBlock);
  v12 = swift_retain();
  static DispatchQoS.unspecified.getter(v12);
  v21 = _swiftEmptyArrayStorage;
  sub_1001081CC((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v14 = v13;
  v15 = sub_1001085C0((uint64_t *)&unk_1002D7F80);
  sub_100143410((unint64_t *)&qword_1002D83C0, (uint64_t *)&unk_1002D7F80);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v15, v16, v1, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v4, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v17 = v23;
  swift_release(v10);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for AmbientActivityAttributes()
{
  return &type metadata for AmbientActivityAttributes;
}

unint64_t sub_100164EA4()
{
  unint64_t result;

  result = qword_1002DA1E0;
  if (!qword_1002DA1E0)
  {
    result = swift_getWitnessTable(&unk_100242E34, &type metadata for AmbientActivityAttributes);
    atomic_store(result, (unint64_t *)&qword_1002DA1E0);
  }
  return result;
}

unint64_t sub_100164EE4()
{
  unint64_t result;

  result = qword_1002DA1E8;
  if (!qword_1002DA1E8)
  {
    result = swift_getWitnessTable(&unk_100242E0C, &type metadata for AmbientActivityAttributes);
    atomic_store(result, (unint64_t *)&qword_1002DA1E8);
  }
  return result;
}

unint64_t sub_100164F24()
{
  unint64_t result;

  result = qword_1002DA1F0;
  if (!qword_1002DA1F0)
  {
    result = swift_getWitnessTable(&unk_100242F3C, &type metadata for AmbientActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_1002DA1F0);
  }
  return result;
}

unint64_t sub_100164F64()
{
  unint64_t result;

  result = qword_1002DA1F8;
  if (!qword_1002DA1F8)
  {
    result = swift_getWitnessTable(&unk_100242F14, &type metadata for AmbientActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_1002DA1F8);
  }
  return result;
}

unint64_t sub_100164FA4()
{
  unint64_t result;

  result = qword_1002DA200;
  if (!qword_1002DA200)
  {
    result = swift_getWitnessTable(&unk_100242EAC, &type metadata for AmbientActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_1002DA200);
  }
  return result;
}

unint64_t sub_100164FE4()
{
  unint64_t result;

  result = qword_1002DA208;
  if (!qword_1002DA208)
  {
    result = swift_getWitnessTable(&unk_100242EEC, &type metadata for AmbientActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_1002DA208);
  }
  return result;
}

unint64_t sub_100165020()
{
  unint64_t result;

  result = qword_1002DA218;
  if (!qword_1002DA218)
  {
    result = swift_getWitnessTable(&unk_10024306C, &type metadata for AmbientActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1002DA218);
  }
  return result;
}

unint64_t sub_10016505C()
{
  unint64_t result;

  result = qword_1002DA228;
  if (!qword_1002DA228)
  {
    result = swift_getWitnessTable(&unk_10024301C, &type metadata for AmbientActivityAttributes.CodingKeys);
    atomic_store(result, &qword_1002DA228);
  }
  return result;
}

double sub_100165098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *Strong;
  double result;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];
  _BYTE v53[24];

  v50 = a3;
  v5 = type metadata accessor for ActivityPresentationOptions(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1001085C0(&qword_1002DA260);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1001085C0(&qword_1002DA268);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v53, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v21 = Strong;
    if (*(_QWORD *)&Strong[OBJC_IVAR___ICSAmbientActivityController_currentActivity])
    {

    }
    else
    {
      v47 = v6;
      v48 = v5;
      v46 = OBJC_IVAR___ICSAmbientActivityController_currentActivity;
      v49 = sub_1001085C0(&qword_1002DA278);
      v22 = type metadata accessor for Date(0);
      sub_100108600((uint64_t)v13, 1, 1, v22);
      v23 = sub_100164F24();
      v24 = sub_100164F64();
      v25 = sub_100164FA4();
      ActivityContent.init(state:staleDate:relevanceScore:)(v25, v13, &type metadata for AmbientActivityAttributes.ContentState, v23, v24, v25, 0.0);
      v26 = sub_1001085C0(&qword_1002DA2A0);
      v27 = type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(unsigned __int8 *)(v28 + 80);
      v30 = (v29 + 32) & ~v29;
      v31 = swift_allocObject(v26, v30 + *(_QWORD *)(v28 + 72), v29 | 7);
      *(_OWORD *)(v31 + 16) = xmmword_100241240;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v31 + v30, enum case for ActivityPresentationOptions.ActivityPresentationDestination.ambient(_:), v27);
      v32 = ActivityPresentationOptions.init(destinations:)(v31);
      v33 = static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)(v32, v18, v9, a2, v50, 1, _swiftEmptyArrayStorage, 1, 1);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v48);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      if (qword_1002D7290 != -1)
        swift_once(&qword_1002D7290, sub_10010BFC0);
      v34 = type metadata accessor for Logger(0);
      sub_100108664(v34, (uint64_t)&unk_1002E2D78);
      v35 = swift_retain_n(v33, 2);
      v37 = Logger.logObject.getter(v35, v36);
      v38 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(12, -1);
        v40 = swift_slowAlloc(32, -1);
        v51 = v33;
        v52[0] = v40;
        *(_DWORD *)v39 = 136315138;
        swift_retain();
        v41 = String.init<A>(reflecting:)(&v51);
        v43 = v42;
        v51 = sub_100121E04(v41, v42, v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v39 + 4, v39 + 12);
        swift_release_n(v33, 2);
        swift_bridgeObjectRelease(v43);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Starting ambient activity: %s", v39, 0xCu);
        swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1, -1);
        swift_slowDealloc(v39, -1, -1);

      }
      else
      {

        swift_release_n(v33, 2);
      }
      v44 = *(_QWORD *)&v21[v46];
      *(_QWORD *)&v21[v46] = v33;

      *(_QWORD *)&result = swift_release(v44).n128_u64[0];
    }
  }
  return result;
}

void sub_100165660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37[24];

  v2 = type metadata accessor for ActivityUIDismissalPolicy(0);
  v34 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001085C0(&qword_1002DA270);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v11 = (void *)Strong;
    if (qword_1002D7290 != -1)
      swift_once(&qword_1002D7290, sub_10010BFC0);
    v12 = type metadata accessor for Logger(0);
    sub_100108664(v12, (uint64_t)&unk_1002E2D78);
    v13 = v11;
    v15 = Logger.logObject.getter(v13, v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v36 = v18;
      *(_DWORD *)v17 = 136315138;
      if (*(_QWORD *)&v13[OBJC_IVAR___ICSAmbientActivityController_currentActivity])
      {
        v35 = *(_QWORD *)&v13[OBJC_IVAR___ICSAmbientActivityController_currentActivity];
        swift_retain();
        sub_1001085C0(&qword_1002DA278);
        v19 = String.init<A>(reflecting:)(&v35);
        v21 = v20;
      }
      else
      {
        v21 = 0xE300000000000000;
        v19 = 7104878;
      }
      v35 = sub_100121E04(v19, v21, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v17 + 4, v17 + 12);

      swift_bridgeObjectRelease(v21);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Ending ambient activity: %s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {

    }
    sub_1001085C0(&qword_1002DA278);
    v22 = static Activity.activities.getter();
    v23 = v22;
    v33 = v13;
    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v31 = v22;
      else
        v31 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v24 = _CocoaArrayWrapper.endIndex.getter(v31);
      if (v24)
        goto LABEL_12;
    }
    else
    {
      v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v22);
      if (v24)
      {
LABEL_12:
        if (v24 < 1)
        {
          __break(1u);
          return;
        }
        v25 = 0;
        do
        {
          if ((v23 & 0xC000000000000001) != 0)
          {
            v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
          }
          else
          {
            v26 = *(_QWORD *)(v23 + 8 * v25 + 32);
            swift_retain();
          }
          ++v25;
          v27 = sub_1001085C0(&qword_1002DA268);
          v28 = sub_100108600((uint64_t)v9, 1, 1, v27);
          static ActivityUIDismissalPolicy.immediate.getter(v28);
          dispatch thunk of Activity.endSync(_:dismissalPolicy:)(v9, v5);
          (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v2);
          sub_10011ABE4((uint64_t)v9, &qword_1002DA270);
          swift_release(v26);
        }
        while (v24 != v25);
      }
    }
    swift_bridgeObjectRelease_n(v23, 2);
    v29 = v33;
    v30 = *(_QWORD *)&v33[OBJC_IVAR___ICSAmbientActivityController_currentActivity];
    *(_QWORD *)&v33[OBJC_IVAR___ICSAmbientActivityController_currentActivity] = 0;

    swift_release(v30);
  }
}

double sub_100165A0C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  double result;
  _QWORD v24[4];

  v2 = sub_1001085C0(&qword_1002D84A0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  sub_100108600((uint64_t)v5, 1, 1, v6);
  v7 = (_QWORD *)swift_allocObject(&unk_10028B390, 40, 7);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = a1;
  v9 = sub_100109FF4((uint64_t)v5, 1, v6);
  v10 = a1;
  if (v9 == 1)
  {
    sub_10011ABE4((uint64_t)v5, &qword_1002D84A0);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v13 = v14 | 0x1C00;
    v15 = *v8;
    if (*v8)
    {
      v16 = v7[3];
      ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v19 = swift_allocObject(&unk_10028B3B8, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_1002DA238;
  *(_QWORD *)(v19 + 24) = v7;
  v20 = sub_1001085C0(&qword_1002DA250);
  if (v12 | v11)
  {
    v24[0] = 0;
    v24[1] = 0;
    v21 = v24;
    v24[2] = v11;
    v24[3] = v12;
  }
  else
  {
    v21 = 0;
  }
  v22 = swift_task_create(v13, v21, v20, &unk_1002DA248, v19);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

uint64_t sub_100165BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for AlertConfiguration.AlertSound(0);
  v4[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[5] = swift_task_alloc(v6);
  v4[6] = swift_task_alloc(v6);
  v7 = sub_1001085C0(&qword_1002DA258);
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001085C0(&qword_1002DA260);
  v4[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1001085C0(&qword_1002DA268);
  v4[9] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[10] = v10;
  v4[11] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100165CD0, 0, 0);
}

void sub_100165CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___ICSAmbientActivityController_currentActivity);
  *(_QWORD *)(v0 + 96) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 64);
    v20 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = type metadata accessor for Date(0);
    sub_100108600(v2, 1, 1, v6);
    v7 = sub_100164F24();
    v8 = sub_100164F64();
    v9 = sub_100164FA4();
    v10 = swift_retain();
    ActivityContent.init(state:staleDate:relevanceScore:)(v10, v2, &type metadata for AmbientActivityAttributes.ContentState, v7, v8, v9, 0.0);
    sub_10016650C();
    sub_10016650C();
    static AlertConfiguration.AlertSound.named(_:)(0, 0xE000000000000000);
    AlertConfiguration.init(title:body:sound:)(v3, v4, v5);
    v11 = type metadata accessor for AlertConfiguration(0);
    sub_100108600(v20, 0, 1, v11);
    v12 = (_QWORD *)sub_1001664C8((uint64_t)&async function pointer to dispatch thunk of Activity.update(_:alertConfiguration:));
    *(_QWORD *)(v0 + 104) = v12;
    *v12 = v0;
    v12[1] = sub_100165E74;
    sub_1001664F0();
    __asm { BR              X2 }
  }
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 56);
  v17 = *(_QWORD *)(v0 + 40);
  v16 = *(_QWORD *)(v0 + 48);
  v18 = *(_QWORD *)(v0 + 32);
  **(_BYTE **)(v0 + 16) = 1;
  swift_task_dealloc(v14);
  sub_100110F48();
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  sub_1001664F0();
  __asm { BR              X0 }
}

uint64_t sub_100165E74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)*v0;
  v1 = v7[12];
  v2 = v7[7];
  sub_10011DB9C(v7[13], &v7);
  swift_release(v1);
  sub_10011ABE4(v2, &qword_1002DA258);
  sub_1001664B8();
  sub_100110F78();
  return sub_1001664A4(v3, v4, v5);
}

uint64_t sub_100165EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 96) == 0;
  swift_task_dealloc(v1);
  sub_100110F48();
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100165F68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100165F8C()
{
  uint64_t v0;

  return sub_100165A0C(*(void **)(v0 + 16));
}

uint64_t sub_100165F94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100165FA4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100165FB0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc(dword_1002DA234);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_1001361BC(v1);
  return sub_100165BD4(v2, v3, v4, v5);
}

uint64_t sub_100166004(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "bundleIdentifier");

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t sub_100166070(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1001660D8;
  return v5(v2 + 32);
}

uint64_t sub_1001660D8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *v0;
  v5 = v1;
  v2 = *(_BYTE **)(v1 + 16);
  v3 = *v0;
  sub_10011DB9C(*(_QWORD *)(v1 + 24), &v5);
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100166124()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100166148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc(dword_1002DA244);
  v6 = (_QWORD *)sub_100109804(v5);
  *v6 = v2;
  v6[1] = sub_100110A6C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1002DA240 + dword_1002DA240))(a1, v4);
}

uint64_t sub_1001661B4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001661D8()
{
  uint64_t v0;

  sub_100165660(v0);
}

uint64_t sub_1001661E4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100166210()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc(dword_1002DA284);
  v1 = (_QWORD *)sub_100109804(v0);
  v2 = sub_1001361BC(v1);
  return sub_100163C08(v2, v3, v4, v5);
}

uint64_t sub_100166264()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001662A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = swift_task_alloc(dword_1002DA294);
  v10 = (_QWORD *)sub_100109804(v9);
  *v10 = v2;
  v10[1] = sub_100110A6C;
  return sub_100164230(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10016631C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_100166348()
{
  uint64_t *v0;

  return sub_100165098(v0[2], v0[3], v0[4]);
}

ValueMetadata *type metadata accessor for AmbientActivityAttributes.CodingKeys()
{
  return &type metadata for AmbientActivityAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for AmbientActivityAttributes.ContentState.CodingKeys()
{
  return &type metadata for AmbientActivityAttributes.ContentState.CodingKeys;
}

ValueMetadata *type metadata accessor for AmbientActivityAttributes.ContentState()
{
  return &type metadata for AmbientActivityAttributes.ContentState;
}

unint64_t sub_100166388()
{
  unint64_t result;

  result = qword_1002DA2C8;
  if (!qword_1002DA2C8)
  {
    result = swift_getWitnessTable(&unk_100242FCC, &type metadata for AmbientActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1002DA2C8);
  }
  return result;
}

unint64_t sub_1001663C8()
{
  unint64_t result;

  result = qword_1002DA2D0;
  if (!qword_1002DA2D0)
  {
    result = swift_getWitnessTable(&unk_100242FF4, &type metadata for AmbientActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1002DA2D0);
  }
  return result;
}

unint64_t sub_100166408()
{
  unint64_t result;

  result = qword_1002DA2D8;
  if (!qword_1002DA2D8)
  {
    result = swift_getWitnessTable(&unk_100242F7C, &type metadata for AmbientActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1002DA2D8);
  }
  return result;
}

unint64_t sub_100166448()
{
  unint64_t result;

  result = qword_1002DA2E0;
  if (!qword_1002DA2E0)
  {
    result = swift_getWitnessTable(&unk_100242FA4, &type metadata for AmbientActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1002DA2E0);
  }
  return result;
}

uint64_t sub_1001664A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

uint64_t sub_1001664B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1001664C8@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

uint64_t sub_1001664DC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100108600(v0, 1, 1, v1);
}

uint64_t sub_10016650C()
{
  return LocalizedStringResource.init(stringLiteral:)(0, 0xE000000000000000);
}

id static UIColorEffect.inCallControlsEmergencyCallButton.getter()
{
  return sub_1001665AC((__n128)xmmword_100241FA0, (__n128)xmmword_100241FB0, (__n128)xmmword_100241FC0, (__n128)xmmword_100241FD0);
}

id static UIColorEffect.inCallControls.getter()
{
  return sub_1001665AC((__n128)xmmword_1002430C0, (__n128)xmmword_1002430D0, (__n128)xmmword_1002430E0, (__n128)xmmword_1002430F0);
}

id static UIColorEffect.inCallControlsButtonNoPhotoNoAvatar.getter()
{
  return sub_1001665AC((__n128)xmmword_100243100, (__n128)xmmword_100243110, (__n128)xmmword_100243120, (__n128)xmmword_100243130);
}

id sub_1001665AC(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  id result;
  _OWORD v5[5];

  v5[0] = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
  v5[4] = xmmword_100241FE0;
  result = objc_msgSend((id)objc_opt_self(UIColorEffect), "_colorEffectCAMatrix:", v5);
  if (!result)
    __break(1u);
  return result;
}

id static UIColorEffect.inCallControlsKeypadButton.getter()
{
  id result;
  _OWORD v1[3];
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1[0] = xmmword_100243140;
  v1[1] = xmmword_100243150;
  v1[2] = xmmword_100243160;
  v2 = 1067567809;
  v4 = 0;
  v3 = 0;
  v5 = 0;
  v6 = 1065353216;
  result = objc_msgSend((id)objc_opt_self(UIColorEffect), "_colorEffectCAMatrix:", v1);
  if (!result)
    __break(1u);
  return result;
}

id UserFeedbackViewController.__allocating_init(scoreController:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return UserFeedbackViewController.init(scoreController:)(a1);
}

id UserFeedbackViewController.init(scoreController:)(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  objc_super v5;

  v3 = (objc_class *)sub_100137260();
  *(_QWORD *)&v1[OBJC_IVAR___PHUserFeedbackViewController_scoreController] = a1;
  v5.receiver = v1;
  v5.super_class = v3;
  return objc_msgSendSuper2(&v5, "initWithNibName:bundle:", 0, 0);
}

void sub_10016676C()
{
  sub_100166C0C((uint64_t)"Fatal error", 11, 2, 31, 0x80000001001F4680, (uint64_t)"InCallService/UserFeedbackViewController.swift");
  __break(1u);
}

void sub_1001667C4()
{
  sub_100166C0C((uint64_t)"Fatal error", 11, 2, 37, 0x80000001001F1490, (uint64_t)"InCallService/UserFeedbackViewController.swift");
  __break(1u);
}

Swift::Void __swiftcall UserFeedbackViewController.viewDidLoad()()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  _QWORD v36[2];
  char v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  objc_super v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  v1 = v0;
  v43.receiver = v0;
  v43.super_class = (Class)sub_100137260();
  v2 = objc_msgSendSuper2(&v43, "viewDidLoad");
  sub_10014EECC((uint64_t)v2, (uint64_t)v44);
  v4 = v44[0];
  v3 = v44[1];
  v5 = v45;
  v6 = v46;
  v7 = v47;
  v8 = v48;
  v9 = *(void **)&v0[OBJC_IVAR___PHUserFeedbackViewController_scoreController];
  v10 = type metadata accessor for ScoreController();
  v11 = sub_10014F7C0();
  v12 = static ObservableObject.environmentStore.getter(v10, v11);
  v36[0] = v4;
  v36[1] = v3;
  v37 = v5;
  v38 = v6;
  v39 = v7;
  v40 = v8;
  v41 = v12;
  v42 = v9;
  v13 = objc_allocWithZone((Class)sub_1001085C0(&qword_1002DA2F0));
  v35 = v7;
  swift_retain();
  v14 = v9;
  swift_retain();
  swift_retain();
  v15 = (void *)UIHostingController.init(rootView:)(v36);
  v16 = objc_msgSend(v15, "view");
  if (!v16)
  {
    __break(1u);
    goto LABEL_10;
  }
  v17 = v16;
  v18 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  sub_100166C1C((uint64_t)v18, "setBackgroundColor:");

  objc_msgSend(v1, "addChildViewController:", v15);
  v19 = sub_100166BF4();
  if (!v19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v20 = v19;
  v21 = sub_100166C00();
  if (!v21)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v22 = v21;
  objc_msgSend(v21, "bounds");
  v24 = v23;

  v25 = sub_100166C00();
  if (!v25)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v26 = v25;
  objc_msgSend(v25, "bounds");
  v28 = v27;

  objc_msgSend(v20, "setFrame:", 0.0, 0.0, v24, v28);
  v29 = sub_100166BF4();
  if (!v29)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v30 = v29;
  objc_msgSend(v29, "setAutoresizingMask:", 18);

  v31 = sub_100166C00();
  if (!v31)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v32 = v31;
  v33 = sub_100166BF4();
  if (v33)
  {
    v34 = v33;
    sub_100166C1C((uint64_t)v33, "addSubview:");

    objc_msgSend(v15, "didMoveToParentViewController:", v1);
    swift_release(v12);

    swift_release(v6);
    swift_release(v3);

    return;
  }
LABEL_15:
  __break(1u);
}

id UserFeedbackViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void UserFeedbackViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.UserFeedbackViewController", 40, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t type metadata accessor for UserFeedbackViewController()
{
  return objc_opt_self(PHUserFeedbackViewController);
}

id sub_100166BF4()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1912));
}

id sub_100166C00()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1912));
}

uint64_t sub_100166C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return _assertionFailure(_:_:file:line:flags:)(a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a5, a6, 46, 2);
}

id sub_100166C1C(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void *sub_100166C48()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_window);
  v2 = v1;
  return v1;
}

void sub_100166CBC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_window);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_window) = a1;

}

uint64_t sub_100166D4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_sceneDidDisconnectBlock);
  sub_100135B74(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_sceneDidDisconnectBlock + 8));
  return v1;
}

uint64_t sub_100166E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_sceneDidDisconnectBlock);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_sceneDidDisconnectBlock);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_sceneDidDisconnectBlock + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_100158160(v4, v5);
}

void sub_100166E30(id a1)
{
  char *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  double v33;
  double v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;

  v7 = v1;
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v13 = (uint64_t *)((char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10015D948();
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  if ((v14 & 1) != 0)
  {
    v15 = type metadata accessor for ActivityScene(0);
    v16 = swift_dynamicCastClass(a1, v15);
    if (!v16)
      return;
    v17 = (void *)v16;
    v18 = (void *)objc_opt_self(UIApplication);
    a1 = a1;
    v19 = objc_msgSend(v18, "sharedApplication");
    v20 = objc_msgSend(v19, "delegate");

    if (v20)
    {
      v21 = objc_opt_self(ICSApplicationDelegate);
      v22 = sub_1001677F4(v21);
      if (v22)
      {
        v23 = (void *)v22;
        v24 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SecureWindow()), "initWithWindowScene:", v17);
        v25 = *(void **)&v7[OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_window];
        *(_QWORD *)&v7[OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_window] = v24;
        v26 = v24;

        v7 = (char *)objc_msgSend(objc_allocWithZone((Class)ICSCallDisplayStyleManager), "init");
        objc_msgSend(v7, "setCallDisplayStyle:", 3);
        v27 = objc_msgSend(v17, "session");
        v28 = objc_msgSend(v27, "persistentIdentifier");

        if (!v28)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v30 = v29;
          v28 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v30);
        }
        objc_msgSend(v7, "setSceneSessionIdentifier:", v28);

        sub_10016780C((uint64_t)objc_msgSend(v7, "setSceneType:", 5), "prepareForAmbientScene:");
        objc_msgSend(v23, "setIsPresentingAmbient:", 1);
        v31 = v26;
        v32 = objc_msgSend(v17, "coordinateSpace");
        objc_msgSend(v32, "bounds");
        v34 = v33;
        swift_unknownObjectRelease(v32);
        sub_1001677DC(v31, "setFrame:", v34);

        v35 = objc_allocWithZone((Class)PHInCallRemoteAlertShellViewController);
        v13 = v31;
        v36 = objc_msgSend(v35, "initWithCallDisplayStyleManager:", v7);
        sub_10016780C((uint64_t)v36, "setRootViewController:");

        objc_msgSend(v13, "makeKeyAndVisible");
        v37 = sub_100167800();
        if (!v37)
        {

          sub_1001677EC();
          return;
        }
        v38 = v37;
        v39 = objc_msgSend(v37, "view");

        if (!v39)
        {
          __break(1u);
          return;
        }
        objc_msgSend(v39, "safeAreaInsets");
        v3 = v40;
        v4 = v41;
        v5 = v42;
        v6 = v43;

        if (v3 > v5)
          v2 = v3;
        else
          v2 = v5;
        if (qword_1002D7250 == -1)
          goto LABEL_13;
        goto LABEL_21;
      }
      sub_1001677EC();
    }

    return;
  }
  __break(1u);
LABEL_21:
  swift_once(&qword_1002D7250, sub_10010BCAC);
LABEL_13:
  v71 = v4 - v3;
  v44 = type metadata accessor for Logger(0);
  v45 = sub_100108664(v44, (uint64_t)&unk_1002E2CC8);
  v47 = Logger.logObject.getter(v45, v46);
  v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc(32, -1);
    v70 = swift_slowAlloc(96, -1);
    v76 = v70;
    *(_DWORD *)v49 = 136315650;
    v72 = *(_QWORD *)&v71;
    v73 = v2 - v4;
    v74 = v6 - v5;
    v75 = v2 - v6;
    type metadata accessor for UIEdgeInsets(0);
    v50 = sub_1001677D0();
    v52 = v51;
    v53 = sub_10016782C(v50, v51);
    v54 = sub_100167818(v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v54, v55, v49 + 4, v56);
    swift_bridgeObjectRelease(v52);
    *(_WORD *)(v49 + 12) = 2080;
    v72 = *(_QWORD *)&v4;
    v73 = v2;
    v74 = v6;
    v75 = v2;
    v57 = sub_1001677D0();
    v59 = v58;
    v60 = sub_10016782C(v57, v58);
    v61 = sub_100167818(v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v61, v62, v49 + 14, v63);
    swift_bridgeObjectRelease(v59);
    *(_WORD *)(v49 + 22) = 2080;
    v72 = *(_QWORD *)&v3;
    v73 = v4;
    v74 = v5;
    v75 = v6;
    v64 = sub_1001677D0();
    v66 = v65;
    v72 = sub_10016782C(v64, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v49 + 24, v49 + 32);
    swift_bridgeObjectRelease(v66);
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Updating additional safe area insets to be %s based on activitySceneEdgeInsets %s and rootVCSafeAreaInsets %s", (uint8_t *)v49, 0x20u);
    v67 = v70;
    swift_arrayDestroy(v70, 3, (char *)&type metadata for Any + 8);
    sub_100109440(v67);
    sub_100109440(v49);
  }

  v68 = sub_100167800();
  sub_1001677DC(v68, "setAdditionalSafeAreaInsets:", v71);

  sub_1001677EC();
}

