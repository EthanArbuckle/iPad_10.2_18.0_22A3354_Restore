void sub_100167458()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (v3)
  {
    v4 = objc_opt_self(ICSApplicationDelegate);
    v5 = sub_1001677F4(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = *(void (**)(uint64_t))(v1
                                          + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_sceneDidDisconnectBlock);
      if (v7)
      {
        v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_sceneDidDisconnectBlock + 8);
        v9 = swift_retain();
        v7(v9);
        sub_100158160((uint64_t)v7, v8);
      }
      v10 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_window);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_window) = 0;

      objc_msgSend(v6, "transitionFromAmbientScene");
    }
    swift_unknownObjectRelease(v3);
  }
}

void sub_1001675DC(uint64_t a1, char a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;

  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (v4)
  {
    v5 = objc_opt_self(ICSApplicationDelegate);
    v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
    if (v6)
      objc_msgSend(v6, "setIsPresentingAmbient:", a2 & 1);
    swift_unknownObjectRelease(v4);
  }
}

id sub_1001676C8()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_window] = 0;
  v2 = &v0[OBJC_IVAR____TtC13InCallService20AmbientSceneDelegate_sceneDidDisconnectBlock];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, "init");
}

uint64_t type metadata accessor for AmbientSceneDelegate()
{
  return objc_opt_self(_TtC13InCallService20AmbientSceneDelegate);
}

uint64_t sub_100167794()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001677B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001677C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001677D0()
{
  uint64_t v0;

  return String.init<A>(reflecting:)(v0 - 184);
}

id sub_1001677DC(id a1, SEL a2, double a3)
{
  double v3;
  double v4;
  double v5;

  return objc_msgSend(a1, a2, a3, v3, v4, v5);
}

uint64_t sub_1001677EC()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

uint64_t sub_1001677F4(uint64_t a1)
{
  uint64_t v1;

  return swift_dynamicCastObjCClass(v1, a1);
}

id sub_100167800()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2608));
}

id sub_10016780C(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_100167818(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = a1;
  return v1 - 184;
}

uint64_t sub_10016782C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_100121E04(a1, a2, (uint64_t *)(v2 - 152));
}

uint64_t sub_100167854()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___FTConstraintsToggle_view);
}

void sub_1001678AC(void *a1)
{
  uint64_t v1;

  swift_unknownObjectWeakAssign(v1 + OBJC_IVAR___FTConstraintsToggle_view, a1);

}

uint64_t sub_1001678EC()
{
  return sub_100168020(OBJC_IVAR___FTConstraintsToggle_constraintsStatePrimary);
}

uint64_t sub_100167904(uint64_t a1)
{
  return sub_100167BA8(a1, (void (*)(void))sub_100167920, &OBJC_IVAR___FTConstraintsToggle_constraintsStatePrimary, sub_100167A3C);
}

uint64_t sub_100167920()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *i;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *Strong;
  uint64_t v11;
  char *v12;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___FTConstraintsToggle_constraintsStatePrimary];
  if ((unint64_t)v1 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(*(_QWORD *)&v0[OBJC_IVAR___FTConstraintsToggle_constraintsStatePrimary], 2);
  for (i = v0; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v11))
  {
    v4 = &v0[OBJC_IVAR___FTConstraintsToggle_view];
    v5 = 4;
    while (1)
    {
      v6 = (v1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v1)
         : *(id *)(v1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
      objc_msgSend(Strong, "removeConstraint:", v7);

      ++v5;
      if (v8 == v2)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    if (v1 < 0)
      v11 = v1;
    else
      v11 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v1, 2);
    v12 = v0;
  }
LABEL_9:

  return swift_bridgeObjectRelease_n(v1, 2);
}

uint64_t sub_100167A3C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Class isa;

  v1 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___FTConstraintsToggle_constraintsStatePrimary);
  sub_100149E44();
  swift_bridgeObjectRetain(v2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2);
  objc_msgSend(v1, "activateConstraints:", isa);

  return sub_100167CD0();
}

Class sub_100167AC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  Class isa;

  v3 = a3();
  sub_100149E44();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  return isa;
}

uint64_t sub_100167B0C()
{
  return sub_100168020(OBJC_IVAR___FTConstraintsToggle_constraintsStateSecondary);
}

void sub_100167B24(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t v7;
  uint64_t v8;
  id v9;

  v7 = sub_100149E44();
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v7);
  v9 = a1;
  a4(v8);

}

uint64_t sub_100167B8C(uint64_t a1)
{
  return sub_100167BA8(a1, (void (*)(void))sub_100167920, &OBJC_IVAR___FTConstraintsToggle_constraintsStateSecondary, sub_100167A3C);
}

uint64_t sub_100167BA8(uint64_t a1, void (*a2)(void), _QWORD *a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t v7;

  a2();
  v7 = *(_QWORD *)(v4 + *a3);
  *(_QWORD *)(v4 + *a3) = a1;
  swift_bridgeObjectRelease(v7);
  return a4();
}

uint64_t sub_100167C18()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___FTConstraintsToggle__usingSecondaryConstraints);
}

uint64_t sub_100167C68(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___FTConstraintsToggle__usingSecondaryConstraints) = a1;
  return sub_100167CD0();
}

uint64_t sub_100167CC0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___FTConstraintsToggle__usingSecondaryConstraints) = result;
  return result;
}

uint64_t sub_100167CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t j;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_BYTE *)(v0 + OBJC_IVAR___FTConstraintsToggle__usingSecondaryConstraints))
    v1 = OBJC_IVAR___FTConstraintsToggle_constraintsStatePrimary;
  else
    v1 = OBJC_IVAR___FTConstraintsToggle_constraintsStateSecondary;
  v2 = *(_QWORD *)(v0 + v1);
  if (*(_BYTE *)(v0 + OBJC_IVAR___FTConstraintsToggle__usingSecondaryConstraints))
    v3 = OBJC_IVAR___FTConstraintsToggle_constraintsStateSecondary;
  else
    v3 = OBJC_IVAR___FTConstraintsToggle_constraintsStatePrimary;
  v4 = *(_QWORD *)(v0 + v3);
  sub_100168028();
  sub_10011AF34();
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v14 = v2;
    else
      v14 = v2 & 0xFFFFFFFFFFFFFF8;
    sub_100168028();
    result = _CocoaArrayWrapper.endIndex.getter(v14);
    v5 = result;
  }
  else
  {
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_100168028();
  }
  if (v5)
  {
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_35;
    }
    for (i = 0; i != v5; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v8 = *(id *)(v2 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v8, "setActive:", 0);

    }
  }
  swift_bridgeObjectRelease_n(v2, 2);
  if (!((unint64_t)v4 >> 62))
  {
    v10 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_10011AF34();
    if (v10)
      goto LABEL_18;
    return swift_bridgeObjectRelease_n(v4, 2);
  }
  if (v4 < 0)
    v15 = v4;
  else
    v15 = v4 & 0xFFFFFFFFFFFFFF8;
  sub_10011AF34();
  result = _CocoaArrayWrapper.endIndex.getter(v15);
  v10 = result;
  if (!result)
    return swift_bridgeObjectRelease_n(v4, 2);
LABEL_18:
  if (v10 >= 1)
  {
    for (j = 0; j != v10; ++j)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v4);
      else
        v12 = *(id *)(v4 + 8 * j + 32);
      v13 = v12;
      objc_msgSend(v12, "setActive:", 1);

    }
    return swift_bridgeObjectRelease_n(v4, 2);
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100167EA4()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR___FTConstraintsToggle__usingSecondaryConstraints) = (*(_BYTE *)(v0
                                                                                          + OBJC_IVAR___FTConstraintsToggle__usingSecondaryConstraints) & 1) == 0;
  return sub_100167CD0();
}

id sub_100167EF8()
{
  _BYTE *v0;
  objc_super v2;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___FTConstraintsToggle_view]);
  *(_QWORD *)&v0[OBJC_IVAR___FTConstraintsToggle_constraintsStatePrimary] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR___FTConstraintsToggle_constraintsStateSecondary] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR___FTConstraintsToggle__usingSecondaryConstraints] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConstraintsToggle();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_100167F88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConstraintsToggle();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ConstraintsToggle()
{
  return objc_opt_self(FTConstraintsToggle);
}

uint64_t sub_100168020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + a1));
}

uint64_t sub_100168028()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

Swift::Void __swiftcall VoicemailControlService.requestSendToVoicemail()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 24), "disconnectCall:withReason:", *(_QWORD *)(v0 + 16), 2);
}

void sub_100168044()
{
  VoicemailControlService.requestSendToVoicemail()();
}

uint64_t type metadata accessor for VoicemailControlService()
{
  return objc_opt_self(_TtC13InCallService23VoicemailControlService);
}

uint64_t getEnumTagSinglePayload for AnsweredBannerCoreAnalyticsView(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AnsweredBannerCoreAnalyticsView(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100168168 + 4 * byte_100243255[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10016819C + 4 * asc_100243250[v4]))();
}

uint64_t sub_10016819C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001681A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001681ACLL);
  return result;
}

uint64_t sub_1001681B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001681C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001681C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001681CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnsweredBannerCoreAnalyticsView()
{
  return &type metadata for AnsweredBannerCoreAnalyticsView;
}

BOOL sub_1001681E8(uint64_t a1)
{
  return a1 && a1 == 1;
}

BOOL sub_100168208@<W0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _BOOL8 result;
  char v4;

  result = sub_1001681E8(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_100168238(uint64_t a1)
{
  void *v1;
  NSString v2;
  id v3;
  id v4;
  double v5;
  double v6;
  id v7;
  id v8;
  uint64_t result;
  uint64_t v10;

  if (*(_QWORD *)(a1 + OBJC_IVAR___PHDialerContactResultButtonView_type) > 1uLL)
  {
    v10 = *(_QWORD *)(a1 + OBJC_IVAR___PHDialerContactResultButtonView_type);
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DialerContactResultButtonType, &v10, &type metadata for DialerContactResultButtonType);
    __break(1u);
  }
  else
  {
    v1 = (void *)objc_opt_self(UIImage);
    v2 = String._bridgeToObjectiveC()();
    v3 = objc_msgSend(v1, "__systemImageNamedSwift:", v2);

    v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v3);
    LODWORD(v5) = 1148846080;
    objc_msgSend(v4, "setContentCompressionResistancePriority:forAxis:", 0, v5);
    LODWORD(v6) = 1148846080;
    objc_msgSend(v4, "setContentHuggingPriority:forAxis:", 0, v6);
    v7 = objc_msgSend((id)objc_opt_self(UIColor), "dynamicLabelColor");
    objc_msgSend(v4, "setTintColor:", v7);

    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v8 = v4;
    objc_msgSend(v8, "setContentMode:", 4);

    return (uint64_t)v8;
  }
  return result;
}

void sub_100168420()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(v0 + OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___primaryLabel);
  if (!v2)
  {
    v3 = sub_1001684C8();
    sub_1001367F0(v3);

    v2 = 0;
  }
  v4 = v2;
  sub_100109830();
}

void sub_1001684B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___primaryLabel);
  *(_QWORD *)(v1 + OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___primaryLabel) = a1;

}

id sub_1001684C8()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = (void *)objc_opt_self(UIColor);
  v2 = v0;
  v3 = objc_msgSend(v1, "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  v4 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 18.0);
  v5 = objc_msgSend(v4, "withCaseSensitiveAttribute");

  objc_msgSend(v2, "setFont:", v5);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 0);
  return v2;
}

id sub_1001685D8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___secondaryLabel;
  v2 = *(void **)(v0 + OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___secondaryLabel);
  v3 = v2;
  if (v2 == (void *)1)
  {
    v3 = sub_100168644(v0);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;
    sub_100111CAC(v4);
  }
  sub_100111F1C(v2);
  return v3;
}

id sub_100168644(uint64_t a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  if (*(_QWORD *)(a1 + OBJC_IVAR___PHDialerContactResultButtonView_type))
    return 0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (void *)objc_opt_self(UIColor);
  v1 = v2;
  v4 = objc_msgSend(v3, "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v4);

  v5 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 18.0);
  v6 = objc_msgSend(v5, "withCaseSensitiveAttribute");

  objc_msgSend(v1, "setFont:", v6);
  objc_msgSend(v1, "setAdjustsFontForContentSizeCategory:", 0);
  return v1;
}

void sub_10016876C(_QWORD *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)(v2 + *a1);
  if (!v4)
  {
    v5 = (void *)a2(v2);
    sub_1001367F0(v5);

    v4 = 0;
  }
  v6 = v4;
  sub_100109830();
}

id sub_1001687B8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;

  sub_10010BBE8(0, (unint64_t *)&unk_1002DA4D0, UIStackView_ptr);
  v2 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100241810;
  sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___imageView, sub_100168238);
  *(_QWORD *)(v3 + 32) = v4;
  sub_100168420();
  *(_QWORD *)(v3 + 40) = v5;
  specialized Array._endMutation()(v5, v6);
  v7 = sub_100168920(v3);
  objc_msgSend(v7, "setAxis:", 0);
  objc_msgSend(v7, "setSpacing:", 0.0);
  objc_msgSend(v7, "setAlignment:", 3);
  objc_msgSend(v7, "setDistribution:", 0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___imageView, sub_100168238);
  v9 = v8;
  objc_msgSend(v7, "setCustomSpacing:afterView:", v8, 8.0);

  objc_msgSend(a1, "addSubview:", v7);
  return v7;
}

id sub_100168920(uint64_t a1)
{
  uint64_t v1;
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1));
  sub_10010BBE8(0, (unint64_t *)&qword_1002D7F90, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v5 = objc_msgSend(v3, "initWithArrangedSubviews:", isa);

  return v5;
}

id sub_1001689A4(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  objc_super v24;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v5 = OBJC_IVAR___PHDialerContactResultButtonView_horizontalPadding;
  v6 = (void *)objc_opt_self(TPNumberPadButton);
  v7 = v2;
  v8 = objc_msgSend(v6, "horizontalPadding");
  *(_QWORD *)&v2[v5] = v9;
  *(_QWORD *)&v7[OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___imageView] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___secondaryLabel] = 1;
  sub_100169F58((uint64_t)v8, 0x80000001001F4B30, 0xD000000000000019);
  *(_QWORD *)&v7[OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___stackView] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___PHDialerContactResultButtonView_type] = a1;

  v24.receiver = v7;
  v24.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "clearColor");
  sub_100143BA0(v12, "setBackgroundColor:");

  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = sub_1001685D8();
  if (v14)
  {
    v15 = v14;
    sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_1001687B8);
    v17 = v16;
    sub_100143BA0(v16, "addArrangedSubview:");

  }
  sub_100168C28();
  v18 = objc_msgSend(v12, "traitCollection");
  v19 = objc_msgSend(v18, "preferredContentSizeCategory");

  sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___imageView, sub_100168238);
  v21 = v20;
  objc_msgSend(v20, "setHidden:", UIContentSizeCategory.isAccessibilityCategory.getter(v19) & 1);

  v22 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v22, "addObserver:selector:name:object:", v12, "handleContentSizeCategoryDidChange:", UIContentSizeCategoryDidChangeNotification, 0);

  return v12;
}

void sub_100168C28()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  Class isa;

  v1 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v2 = swift_allocObject(v1, 80, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100241360;
  sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_1001687B8);
  v4 = v3;
  v5 = objc_msgSend(v3, "leadingAnchor");

  v6 = objc_msgSend(v0, "leadingAnchor");
  v7 = OBJC_IVAR___PHDialerContactResultButtonView_horizontalPadding;
  v8 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v6, *(double *)&v0[OBJC_IVAR___PHDialerContactResultButtonView_horizontalPadding]);

  *(_QWORD *)(v2 + 32) = v8;
  sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_1001687B8);
  v10 = v9;
  v11 = objc_msgSend(v9, "trailingAnchor");

  v12 = objc_msgSend(v0, "trailingAnchor");
  v13 = objc_msgSend(v11, "constraintLessThanOrEqualToAnchor:constant:", v12, -*(double *)&v0[v7]);

  *(_QWORD *)(v2 + 40) = v13;
  sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_1001687B8);
  v15 = v14;
  v16 = objc_msgSend(v14, "topAnchor");

  v17 = objc_msgSend(v0, "topAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v2 + 48) = v18;
  sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_1001687B8);
  v20 = v19;
  v21 = objc_msgSend(v19, "bottomAnchor");

  v22 = objc_msgSend(v0, "bottomAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v2 + 56) = v23;
  sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_1001687B8);
  v25 = v24;
  v26 = objc_msgSend(v24, "heightAnchor");

  v27 = objc_msgSend(v26, "constraintEqualToConstant:", 22.0);
  *(_QWORD *)(v2 + 64) = v27;
  sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___imageView, sub_100168238);
  v29 = v28;
  v30 = objc_msgSend(v28, "widthAnchor");

  v31 = objc_msgSend(v30, "constraintGreaterThanOrEqualToConstant:", 27.0);
  *(_QWORD *)(v2 + 72) = v31;
  specialized Array._endMutation()(v32, v33);
  v34 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2);
  objc_msgSend(v34, "activateConstraints:", isa);

}

void sub_100168FA4()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = OBJC_IVAR___PHDialerContactResultButtonView_horizontalPadding;
  v2 = objc_msgSend((id)objc_opt_self(TPNumberPadButton), "horizontalPadding");
  *(_QWORD *)&v0[v1] = v3;
  *(_QWORD *)&v0[OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___imageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___primaryLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___secondaryLabel] = 1;
  sub_100169F58((uint64_t)v2, 0x80000001001F4B30, 0xD000000000000019);
  *(_QWORD *)&v0[OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___stackView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/DialerContactResultButtonView.swift", 49, 2);
  __break(1u);
}

void sub_1001690E8(float a1, float a2)
{
  void *v4;
  void *v5;
  double v6;
  id v7;
  double v8;
  void *v9;

  sub_100168420();
  v5 = v4;
  *(float *)&v6 = a1;
  objc_msgSend(v4, "setContentCompressionResistancePriority:forAxis:", 0, v6);

  v7 = sub_1001685D8();
  if (v7)
  {
    v9 = v7;
    *(float *)&v8 = a2;
    objc_msgSend(v7, "setContentCompressionResistancePriority:forAxis:", 0, v8);
    sub_1001436A4(v9);
  }
}

void sub_1001691B8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  sub_100168420();
  v3 = v2;
  objc_msgSend(v2, "setAttributedText:", a1);

  v4 = sub_1001685D8();
  sub_100143BA0(v4, "setAttributedText:");
  sub_1001436A4(v4);
}

void sub_100169290(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  double Width;
  uint64_t v29;
  id v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  Class isa;
  id v46;
  NSString v47;
  NSString v48;
  id v49;
  void *v50;
  void *v51;
  NSString v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  CGRect v65;

  v64 = a2;
  v5 = type metadata accessor for PersonNameComponents(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1001085C0(&qword_1002DA4C8);
  v12 = __chkstk_darwin(v10, v11);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v12, v15);
  v18 = (char *)&v61 - v17;
  __chkstk_darwin(v16, v19);
  v21 = (char *)&v61 - v20;
  sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_1001687B8);
  v23 = v22;
  objc_msgSend(v22, "layoutIfNeeded");

  v24 = sub_1001685D8();
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, "sizeThatFits:", 0.0, 0.0);
    v27 = v26;
    objc_msgSend(v25, "frame");
    Width = CGRectGetWidth(v65);

    if (Width < v27)
    {
      v62 = v6;
      v29 = a3;
      v30 = objc_msgSend(objc_allocWithZone((Class)NSPersonNameComponentsFormatter), "init");
      v31 = objc_msgSend(a1, "string");
      if (!v31)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v33 = v32;
        v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v33);
      }
      v63 = v30;
      v34 = objc_msgSend(v30, "personNameComponentsFromString:", v31);

      if (v34)
      {
        static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)(v34);

        v35 = 0;
      }
      else
      {
        v35 = 1;
      }
      v36 = v29;
      sub_100108600((uint64_t)v18, v35, 1, v5);
      sub_100169ECC((uint64_t)v18, (uint64_t)v21);
      v37 = v63;
      objc_msgSend(v63, "setStyle:", 1);
      sub_100169F14((uint64_t)v21, (uint64_t)v14, &qword_1002DA4C8);
      v38 = sub_100109FF4((uint64_t)v14, 1, v5);
      v39 = v62;
      if (v38 == 1)
      {
        sub_1001209C8((uint64_t)v21, &qword_1002DA4C8);

        v21 = v14;
LABEL_18:
        sub_1001209C8((uint64_t)v21, &qword_1002DA4C8);
        return;
      }
      v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v62 + 32))(v9, v14, v5);
      v42 = Logger.logObject.getter(v40, v41);
      v43 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "DialerContactResultButtonView: Using Short name as the number is being truncated", v44, 2u);
        swift_slowDealloc(v44, -1, -1);
      }

      isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      v46 = objc_msgSend(v37, "stringFromPersonNameComponents:", isa);

      v47 = v46;
      v48 = v46;
      if (v46)
      {
        if (v36)
        {
LABEL_14:
          v49 = v46;

          sub_100168420();
          v51 = v50;
          v52 = String._bridgeToObjectiveC()();
          v53 = objc_msgSend(v48, "attributedStringToHighlightText:style:", v52, 1);

LABEL_17:
          objc_msgSend(v51, "setAttributedText:", v53);

          (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v5);
          goto LABEL_18;
        }
      }
      else
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v55 = v54;
        v48 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v55);
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v57 = v56;
        v47 = String._bridgeToObjectiveC()();
        v58 = v57;
        v37 = v63;
        swift_bridgeObjectRelease(v58);
        if (v36)
          goto LABEL_14;
      }
      v59 = v46;

      sub_100168420();
      v51 = v60;
      v52 = String._bridgeToObjectiveC()();
      v53 = objc_msgSend(v47, "attributedStringToHighlightText:", v52);

      goto LABEL_17;
    }
  }
}

void sub_100169714(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  float v8;
  float v9;
  id v10;

  if ((a5 & 1) != 0)
  {
    v8 = 750.0;
    v9 = 1000.0;
  }
  else
  {
    v8 = 1000.0;
    v9 = 750.0;
  }
  sub_1001690E8(v8, v9);
  sub_1001691B8((uint64_t)a1);
  if (a1)
  {
    v10 = a1;
    sub_100169290(v10, a3, a4);
    sub_1001436A4(v10);
  }
}

void sub_100169860(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[2];
  _QWORD v15[5];
  __int128 v16;
  __int128 v17;

  v2 = sub_1001085C0(&qword_1002DC2F0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100169F14(a1, (uint64_t)v5, &qword_1002DC2F0);
  v6 = type metadata accessor for Notification(0);
  if (sub_100109FF4((uint64_t)v5, 1, v6) == 1)
  {
    sub_1001209C8((uint64_t)v5, &qword_1002DC2F0);
LABEL_7:
    v16 = 0u;
    v17 = 0u;
    goto LABEL_8;
  }
  v7 = Notification.userInfo.getter();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (!v7)
    goto LABEL_7;
  v14[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryNewValueKey);
  v14[1] = v8;
  AnyHashable.init<A>(_:)(v14, &type metadata for String, &protocol witness table for String);
  sub_10011B22C((uint64_t)v15, v7, &v16);
  swift_bridgeObjectRelease(v7);
  sub_10011D238((uint64_t)v15);
  if (!*((_QWORD *)&v17 + 1))
  {
LABEL_8:
    sub_1001209C8((uint64_t)&v16, &qword_1002D84F0);
    return;
  }
  type metadata accessor for UIContentSizeCategory(0);
  if ((swift_dynamicCast(v15, &v16, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
  {
    v10 = (void *)v15[0];
    sub_10016876C(&OBJC_IVAR___PHDialerContactResultButtonView____lazy_storage___imageView, sub_100168238);
    v12 = v11;
    objc_msgSend(v11, "setHidden:", UIContentSizeCategory.isAccessibilityCategory.getter(v10) & 1);

  }
}

uint64_t sub_100169B54()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  Swift::String v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;

  v0 = (void *)0xE000000000000000;
  sub_100168420();
  v2 = v1;
  v3 = objc_msgSend(v1, "attributedText");

  if (v3)
  {
    v4 = objc_msgSend(v3, "string");

    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v0 = v6;

  }
  else
  {
    v5 = 0;
  }
  v7._countAndFlagsBits = v5;
  v7._object = v0;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v0);
  v8 = sub_1001685D8();
  if (v8
    && (v9 = v8, v10 = objc_msgSend(v8, "attributedText"), v9, v10))
  {
    v11 = objc_msgSend(v10, "string");

    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = (void *)0xE000000000000000;
  }
  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14);
  return 0;
}

uint64_t sub_100169CE8(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

void sub_100169CF0()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.DialerContactResultButtonView", 43, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_100169DA8()
{
  return type metadata accessor for DialerContactResultButtonView(0);
}

uint64_t type metadata accessor for DialerContactResultButtonView(uint64_t a1)
{
  uint64_t result;

  result = qword_1002DA4B0;
  if (!qword_1002DA4B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DialerContactResultButtonView);
  return result;
}

uint64_t sub_100169DE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = "\b";
  v4[3] = "\b";
  v4[4] = &unk_1002432B8;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DialerContactResultButtonType()
{
  return &type metadata for DialerContactResultButtonType;
}

unint64_t sub_100169E90()
{
  unint64_t result;

  result = qword_1002DA4C0;
  if (!qword_1002DA4C0)
  {
    result = swift_getWitnessTable(&unk_100243368, &type metadata for DialerContactResultButtonType);
    atomic_store(result, (unint64_t *)&qword_1002DA4C0);
  }
  return result;
}

uint64_t sub_100169ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0(&qword_1002DA4C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100169F14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1001085C0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100169F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return Logger.init(subsystem:category:)(0xD000000000000015, a2, a3, (v3 - 32) | 0x8000000000000000);
}

uint64_t sub_100169F6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;

  v1 = v0[9];
  if (v1)
  {
    v2 = v0[9];
  }
  else
  {
    v3 = v0;
    v4 = (void *)v0[3];
    v5 = (void *)v0[4];
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 7);
    v7 = type metadata accessor for AudioCallServicesManager();
    swift_allocObject(v7, 120, 7);
    v2 = AudioCallServicesManager.init(call:callCenter:presentingViewController:)((uint64_t)v4, (uint64_t)v5, Strong);
    v8 = v3[9];
    v3[9] = v2;
    v9 = v4;
    v10 = v5;
    swift_retain(v2);
    swift_release(v8);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

id sub_10016A014()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + 88);
  v2 = v1;
  if (v1 == (void *)1)
  {
    v2 = sub_10016A070(v0);
    v3 = *(void **)(v0 + 88);
    *(_QWORD *)(v0 + 88) = v2;
    v4 = v2;
    sub_100111CAC(v3);
  }
  sub_100111F1C(v1);
  return v2;
}

id sub_10016A070(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v2 = (void *)objc_opt_self(CNContactStoreConfiguration);
  v3 = *(void **)(a1 + 24);
  v4 = objc_msgSend(v2, "tu_contactStoreConfigurationForCall:", v3);
  v5 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "initWithConfiguration:", v4);
  v6 = objc_msgSend(v3, "contactIdentifiers");
  if (!v6)
  {

    return 0;
  }
  v7 = v6;
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String);

  if (!*(_QWORD *)(v8 + 16))
  {

    swift_bridgeObjectRelease(v8);
    return 0;
  }
  v9 = *(_QWORD *)(v8 + 40);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v8);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  isa = (Class)objc_msgSend((id)objc_opt_self(PHAudioCallViewController), "contactKeysToFetch");
  if (!isa)
  {
    v12 = sub_1001085C0(&qword_1002D93E0);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v12);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v13);
  }
  v14 = objc_msgSend(v5, "contactForIdentifier:keysToFetch:", v10, isa);

  return v14;
}

uint64_t sub_10016A208(void *a1, void *a2, void *a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v5 = v4;
  *(_QWORD *)(v5 + 64) = 0;
  swift_unknownObjectWeakInit(v5 + 56, 0);
  *(_QWORD *)(v5 + 72) = 0;
  *(_QWORD *)(v5 + 80) = objc_msgSend(objc_allocWithZone((Class)CNKCallParticipantLabelDescriptorFactory), "init");
  *(_QWORD *)(v5 + 88) = 1;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  *(double *)(v5 + 40) = a4;
  type metadata accessor for AudioCallModel(0);
  v10 = a1;
  v11 = a2;
  v12 = a3;
  *(_QWORD *)(v5 + 48) = AudioCallModel.__allocating_init()();
  v13 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v13, "addObserver:selector:name:object:", v5, "callStatusChanged:", TUCallCenterCallStatusChangedNotification, 0);

  v14 = objc_msgSend((id)objc_opt_self(PHIntervalTimer), "oneSecondTimer");
  swift_retain(v5);
  objc_msgSend(v14, "addObserver:selector:", v5, "secondTickNotification:");

  swift_release(v5);
  return v5;
}

void sub_10016A374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v0;
  sub_1001085C0(&qword_1002DA668);
  sub_100120AA0();
  __chkstk_darwin(v4, v5);
  v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001085C0(&qword_1002DA6C0);
  sub_100120AA0();
  __chkstk_darwin(v8, v9);
  sub_1001097B0();
  sub_1001085C0((uint64_t *)&unk_1002DA670);
  sub_100120AA0();
  __chkstk_darwin(v10, v11);
  v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001085C0((uint64_t *)&unk_1002DA6C8);
  sub_100120AA0();
  __chkstk_darwin(v14, v15);
  sub_1001436D4();
  sub_10016AC38(v2);
  v16 = type metadata accessor for BackgroundState(0);
  v17 = sub_10016BD0C(v16);
  dispatch thunk of AudioCallModel.backgroundState.setter(v17);
  sub_10016A4FC(v13);
  v18 = sub_10016BCB8();
  sub_10016BD44((uint64_t)v13, v19, v20, v18);
  v21 = dispatch thunk of AudioCallModel.participantDetailsState.setter(v13);
  v22 = static Color.secondary.getter(v21);
  swift_retain(v3);
  InfoButtonConfiguration.init(color:action:)(v22, sub_10016BBFC, v3);
  v23 = type metadata accessor for InfoButtonConfiguration(0);
  sub_10016BD44(v1, v24, v25, v23);
  dispatch thunk of AudioCallModel.infoButtonConfiguration.setter(v1);
  sub_10016AE04(v7);
  dispatch thunk of AudioCallModel.controlsState.setter(v7);
  sub_10016A5F0();
}

uint64_t sub_10016A4FC@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_10016A014();
  if (v2)
  {
    v3 = v2;
    v4 = swift_allocObject(&unk_10028B770, 24, 7);
    *(_QWORD *)(v4 + 16) = v3;
    v5 = sub_10016BBB8;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = sub_10016B7A8();
  v8 = v7;
  v9 = sub_10016B8F8();
  v11 = v10;
  v12 = type metadata accessor for ParticipantDetails(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  *a1 = ParticipantDetails.init(status:label:additionalDetails:)(v6, v8, v9, v11, 0, 0, 0);
  a1[1] = v5;
  a1[2] = v4;
  v13 = enum case for ParticipantDetailsState.default(_:);
  v14 = type metadata accessor for ParticipantDetailsState(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a1, v13, v14);
}

void sub_10016A5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[5];

  sub_1001085C0(&qword_1002DA6A8);
  sub_100120AA0();
  __chkstk_darwin(v3, v4);
  sub_100136038();
  sub_1001085C0((uint64_t *)&unk_1002DA670);
  sub_100120AA0();
  __chkstk_darwin(v5, v6);
  sub_1001436D4();
  v7 = sub_10016BCB8();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = __chkstk_darwin(v7, v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  v15 = (char *)&v27 - v14;
  if (objc_msgSend(*(id *)(v1 + 24), "status") != 4 || objc_msgSend(*(id *)(v1 + 16), "callDisplayStyle"))
    goto LABEL_8;
  dispatch thunk of AudioCallModel.participantDetailsState.getter();
  if (sub_100109FF4(v2, 1, v7) == 1)
  {
    sub_1001209C8(v2, (uint64_t *)&unk_1002DA670);
LABEL_8:
    v26 = type metadata accessor for IncomingAudioCallBannerConfiguration(0);
    sub_100108600(v0, 1, 1, v26);
    dispatch thunk of AudioCallModel.incomingAudioCallBannerConfiguration.setter(v0);
    goto LABEL_9;
  }
  sub_10016BCC0((uint64_t)v15, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  sub_10016BCC0((uint64_t)v12, (uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v12, v7) != enum case for ParticipantDetailsState.default(_:))
  {
    v25 = *(void (**)(char *, uint64_t))(v8 + 8);
    v25(v15, v7);
    v25(v12, v7);
    goto LABEL_8;
  }
  sub_1001436BC((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
  v16 = *((_QWORD *)v12 + 1);
  v28 = *(_QWORD *)v12;
  v17 = *((_QWORD *)v12 + 2);
  swift_retain(v28);
  sub_100135B74(v16, v17);
  sub_100169F6C();
  AudioCallServicesManager.declineControlService.getter();
  v19 = v18;
  sub_100110F0C();
  v30[3] = type metadata accessor for DeclineControlService();
  v30[4] = sub_10012095C(&qword_1002DA6B0, (uint64_t (*)(uint64_t))type metadata accessor for DeclineControlService, (uint64_t)&protocol conformance descriptor for DeclineControlService);
  v30[0] = v19;
  sub_100169F6C();
  AudioCallServicesManager.acceptControlService.getter();
  v21 = v20;
  sub_100110F0C();
  v29[3] = type metadata accessor for AcceptControlService();
  v29[4] = sub_10012095C(&qword_1002DA6B8, (uint64_t (*)(uint64_t))type metadata accessor for AcceptControlService, (uint64_t)&protocol conformance descriptor for AcceptControlService);
  v29[0] = v21;
  v22 = v28;
  IncomingAudioCallBannerConfiguration.init(participantDetails:avatarView:declineControlService:acceptControlService:)(v28, v16, v17, v30, v29);
  v23 = type metadata accessor for IncomingAudioCallBannerConfiguration(0);
  v24 = sub_10016BCE8(v23);
  dispatch thunk of AudioCallModel.incomingAudioCallBannerConfiguration.setter(v24);
  sub_100158160(v16, v17);
  swift_release(v22);
  sub_1001436BC((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
LABEL_9:
  sub_10010BC44();
}

uint64_t sub_10016A8B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1001085C0((uint64_t *)&unk_1002DA670);
  sub_100120AA0();
  __chkstk_darwin(v1, v2);
  sub_100136038();
  sub_10016A4FC(v0);
  v3 = sub_10016BCB8();
  v4 = sub_10016BCE8(v3);
  return dispatch thunk of AudioCallModel.participantDetailsState.setter(v4);
}

void sub_10016A9AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  id v25;
  _QWORD v26[4];

  sub_1001085C0(&qword_1002DA668);
  sub_100120AA0();
  v5 = __chkstk_darwin(v3, v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  v10 = (uint64_t *)((char *)&v24 - v9);
  v11 = sub_10016BD30();
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  sub_1001097B0();
  sub_1001085C0((uint64_t *)&unk_1002DA670);
  sub_100120AA0();
  __chkstk_darwin(v14, v15);
  sub_1001436D4();
  v16 = *(_QWORD *)(v0 + 24);
  Notification.object.getter(v26);
  if (!v26[3])
  {
    v22 = &qword_1002D84F0;
    v23 = v26;
LABEL_7:
    sub_1001209C8((uint64_t)v23, v22);
    goto LABEL_8;
  }
  v17 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  if ((swift_dynamicCast(&v25, v26, (char *)&type metadata for Any + 8, v17, 6) & 1) != 0)
  {
    v18 = v25;
    v19 = objc_msgSend(v25, "isEqualToCall:", v16);

    if ((v19 & 1) != 0)
    {
      sub_10016A4FC(v2);
      v20 = sub_10016BCB8();
      v21 = sub_10016BD0C(v20);
      dispatch thunk of AudioCallModel.participantDetailsState.setter(v21);
      sub_10016AE04(v10);
      if (sub_100109FF4((uint64_t)v10, 1, v11) != 1)
      {
        sub_10016BCC0(v1, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
        sub_10016BCC0((uint64_t)v7, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
        sub_100108600((uint64_t)v7, 0, 1, v11);
        dispatch thunk of AudioCallModel.controlsState.setter(v7);
        sub_1001436BC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
        goto LABEL_8;
      }
      v22 = &qword_1002DA668;
      v23 = v10;
      goto LABEL_7;
    }
  }
LABEL_8:
  sub_10010BC44();
}

uint64_t sub_10016AC38@<X0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_10016A014();
  if (!v2)
    goto LABEL_8;
  v3 = v2;
  v4 = sub_10016BA78(v2, (SEL *)&selRef_fullscreenImageData);
  if (v5 >> 60 == 15)
  {
    v4 = sub_10016BA78(v3, (SEL *)&selRef_imageData);
    if (v5 >> 60 == 15)
    {
LABEL_7:

LABEL_8:
      *(_QWORD *)a1 = static BackgroundGradientView.greyGradient.getter();
      v10 = (unsigned int *)&enum case for BackgroundState.gradient(_:);
      goto LABEL_9;
    }
  }
  v6 = v4;
  v7 = v5;
  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  sub_10011AC30(v6, v7);
  v8 = sub_10016AD44(v6, v7);
  if (!v8)
  {
    sub_10016BCC8();
    goto LABEL_7;
  }
  v9 = Image.init(uiImage:)(v8);

  sub_10016BCC8();
  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = 1;
  v10 = (unsigned int *)&enum case for BackgroundState.image(_:);
LABEL_9:
  v11 = *v10;
  v12 = type metadata accessor for BackgroundState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a1, v11, v12);
}

id sub_10016AD44(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  isa = Data._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "initWithData:", isa);
  sub_10011ABA0(a1, a2);

  return v7;
}

void sub_10016ADB8(uint64_t a1)
{
  uint64_t Strong;
  id v2;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 56);
  if (Strong)
  {
    v2 = (id)Strong;
    sub_100152D10();

  }
}

void sub_10016AE04(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD v251[5];
  _QWORD v252[5];
  _BYTE v253[40];
  _BYTE v254[40];
  _BYTE v255[40];
  _BYTE v256[40];
  _QWORD v257[5];
  _QWORD v258[5];
  _OWORD v259[2];
  uint64_t v260;
  _QWORD v261[5];
  _QWORD v262[5];
  _QWORD v263[6];

  v3 = *(void **)(v1 + 24);
  v4 = objc_msgSend(v3, "status");
  if (v4 > 6)
    goto LABEL_71;
  if (((1 << v4) & 0x65) != 0)
  {
LABEL_3:
    v5 = sub_10016BD30();
    sub_100108600((uint64_t)a1, 1, 1, v5);
    return;
  }
  if (((1 << v4) & 0xA) == 0)
  {
    sub_10016BCB0();
    sub_1001748B4(7, v25, v26, v27, v28, v251);
    sub_100110F0C();
    sub_10016BCB0();
    sub_1001748B4(1, v29, v30, v31, v32, &v221);
    sub_100110F0C();
    sub_10016BCB0();
    sub_1001748B4(9, v33, v34, v35, v36, v263);
    sub_100110F0C();
    sub_10016BCB0();
    sub_1001748B4(23, v37, v38, v39, v40, v262);
    sub_100110F0C();
    type metadata accessor for ControlGridViewConfiguration(0);
    sub_100110D7C((uint64_t)v251, (uint64_t)v261);
    v260 = 0;
    memset(v259, 0, sizeof(v259));
    sub_100110D7C((uint64_t)&v221, (uint64_t)v258);
    v41 = static ControlGridViewConfiguration.bottom(arrangement:width:)(v261, v259, v258, *(double *)(v173 + 40));
    sub_10016BCD4((uint64_t)v258);
    sub_10016BCD4((uint64_t)v259);
    sub_10016BCD4((uint64_t)v261);
    type metadata accessor for SupplementaryControlViewConfiguration(0);
    v42 = static SupplementaryControlViewConfiguration.default(arrangement:)(v263, v262);
    sub_100110DC0(v262);
    sub_100110DC0(v263);
    sub_100110DC0(&v221);
    sub_100110DC0(v251);
    *a1 = v41;
    a1[1] = v42;
    v43 = (unsigned int *)&enum case for ControlsState.compositeGrid(_:);
LABEL_60:
    v122 = *v43;
    v123 = sub_10016BD30();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 104))(a1, v122, v123);
    sub_100108600((uint64_t)a1, 0, 1, v123);
    sub_10010BC44();
    return;
  }
  if ((objc_msgSend(v3, "isScreening") & 1) != 0)
    goto LABEL_3;
  v6 = (void *)objc_opt_self(PHAudioCallControlArrangement);
  v7 = sub_10016BB34(v6);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)(v7 + 16);
    v160 = (uint64_t)a1;
    if (v9)
    {
      v251[0] = _swiftEmptyArrayStorage;
      sub_100187148(0, v9, 0);
      v10 = 0;
      v11 = _swiftEmptyArrayStorage;
      v148 = v8;
      v185 = v9;
      v197 = v8 + 32;
      while (1)
      {
        v209 = (uint64_t)v11;
        v12 = *(_QWORD *)(v197 + 8 * v10);
        if ((unint64_t)v12 >> 62)
        {
          if (v12 < 0)
            v22 = *(_QWORD *)(v197 + 8 * v10);
          else
            v22 = v12 & 0xFFFFFFFFFFFFFF8;
          sub_10016BCDC();
          v13 = _CocoaArrayWrapper.endIndex.getter(v22);
          if (!v13)
          {
LABEL_26:
            v15 = _swiftEmptyArrayStorage;
            goto LABEL_27;
          }
        }
        else
        {
          v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_10016BCDC();
          if (!v13)
            goto LABEL_26;
        }
        if (v13 < 1)
        {
          __break(1u);
          goto LABEL_62;
        }
        v14 = 0;
        v15 = _swiftEmptyArrayStorage;
        do
        {
          if ((v12 & 0xC000000000000001) != 0)
            v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
          else
            v16 = *(id *)(v12 + 8 * v14 + 32);
          v17 = v16;
          v18 = objc_msgSend(v16, "unsignedIntegerValue");

          if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
          {
            sub_10016BD38();
            v15 = v20;
          }
          v19 = v15[2];
          if (v19 >= v15[3] >> 1)
          {
            sub_10016BD38();
            v15 = v21;
          }
          ++v14;
          v15[2] = v19 + 1;
          v15[v19 + 4] = v18;
        }
        while (v13 != v14);
LABEL_27:
        swift_bridgeObjectRelease_n(v12, 2);
        v11 = (_QWORD *)v209;
        v251[0] = v209;
        v24 = *(_QWORD *)(v209 + 16);
        v23 = *(_QWORD *)(v209 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_100187148((char *)(v23 > 1), v24 + 1, 1);
          v11 = (_QWORD *)v251[0];
        }
        ++v10;
        v11[2] = v24 + 1;
        v11[v24 + 4] = v15;
        if (v10 == v185)
        {
          swift_bridgeObjectRelease(v148);
          goto LABEL_33;
        }
      }
    }
    swift_bridgeObjectRelease(v7);
    v11 = _swiftEmptyArrayStorage;
LABEL_33:
    sub_100169F6C();
    if (v11[2])
    {
      if (*(_QWORD *)(v11[4] + 16))
      {
        v44 = v173;
        v45 = sub_10014382C();
        if (v45)
        {
          sub_10016BC74(v45);
          sub_10016BC54();
        }
        else
        {
          sub_10016BC84();
        }
        sub_10016BC94(v46, v47, v48, v263, v124, v136, v148, v160, v173, v185, v197, v209, v221, v222, v223, v224, v225, v226, v227,
          v228,
          v229,
          v230,
          v231,
          v232,
          v233,
          v234,
          v235,
          v236,
          v237,
          v238,
          v239,
          v240,
          v241,
          v242,
          v243,
          v244,
          v245,
          v246,
          v247,
          v248,
          v249,
          v250,
          v251[0]);
        v49 = sub_100110F0C();
        sub_10016BCA0(v49, &qword_1002DA648, v50, v51, v52, v53, v54, v55, v125, v137, v149, v161, v174, v186, v198, v210, v221, v222, v223,
          v224,
          v225,
          v226,
          v227,
          v228,
          v229,
          v230,
          v231,
          v232,
          v233,
          v234,
          v235,
          v236,
          v237,
          v238,
          v239,
          v240,
          v241,
          v242,
          v243,
          v244,
          v245,
          v246,
          v247,
          v248,
          v249,
          v250,
          v251[0]);
        sub_10016BCA8();
        if (*(_QWORD *)(v11[4] + 16) >= 2uLL)
        {
          v56 = sub_10014382C();
          if (v56)
          {
            sub_10016BC74(v56);
            sub_10016BC54();
          }
          else
          {
            sub_10016BC84();
          }
          sub_10016BC94(v57, v58, v59, v262, v126, v138, v150, v162, v175, v187, v199, v211, v221, v222, v223, v224, v225, v226, v227,
            v228,
            v229,
            v230,
            v231,
            v232,
            v233,
            v234,
            v235,
            v236,
            v237,
            v238,
            v239,
            v240,
            v241,
            v242,
            v243,
            v244,
            v245,
            v246,
            v247,
            v248,
            v249,
            v250,
            v251[0]);
          v60 = sub_100110F0C();
          sub_10016BCA0(v60, &qword_1002DA648, v61, v62, v63, v64, v65, v66, v127, v139, v151, v163, v176, v188, v200, v212, v221, v222, v223,
            v224,
            v225,
            v226,
            v227,
            v228,
            v229,
            v230,
            v231,
            v232,
            v233,
            v234,
            v235,
            v236,
            v237,
            v238,
            v239,
            v240,
            v241,
            v242,
            v243,
            v244,
            v245,
            v246,
            v247,
            v248,
            v249,
            v250,
            v251[0]);
          sub_10016BCA8();
          if (*(_QWORD *)(v11[4] + 16) >= 3uLL)
          {
            v67 = sub_10014382C();
            if (v67)
            {
              sub_10016BC74(v67);
              sub_10016BC54();
            }
            else
            {
              sub_10016BC84();
            }
            sub_10016BC94(v68, v69, v70, v261, v128, v140, v152, v164, v177, v189, v201, v213, v221, v222, v223, v224, v225, v226, v227,
              v228,
              v229,
              v230,
              v231,
              v232,
              v233,
              v234,
              v235,
              v236,
              v237,
              v238,
              v239,
              v240,
              v241,
              v242,
              v243,
              v244,
              v245,
              v246,
              v247,
              v248,
              v249,
              v250,
              v251[0]);
            v71 = sub_100110F0C();
            sub_10016BCA0(v71, &qword_1002DA648, v72, v73, v74, v75, v76, v77, v129, v141, v153, v165, v178, v190, v202, v214, v221, v222, v223,
              v224,
              v225,
              v226,
              v227,
              v228,
              v229,
              v230,
              v231,
              v232,
              v233,
              v234,
              v235,
              v236,
              v237,
              v238,
              v239,
              v240,
              v241,
              v242,
              v243,
              v244,
              v245,
              v246,
              v247,
              v248,
              v249,
              v250,
              v251[0]);
            sub_10016BCA8();
            if (v11[2] >= 2uLL)
            {
              if (*(_QWORD *)(v11[5] + 16))
              {
                v78 = sub_10014382C();
                if (v78)
                {
                  sub_10016BC74(v78);
                  sub_10016BC54();
                }
                else
                {
                  sub_10016BC84();
                }
                sub_10016BC94(v79, v80, v81, v259, v130, v142, v154, v166, v179, v191, v203, v215, v221, v222, v223, v224, v225, v226, v227,
                  v228,
                  v229,
                  v230,
                  v231,
                  v232,
                  v233,
                  v234,
                  v235,
                  v236,
                  v237,
                  v238,
                  v239,
                  v240,
                  v241,
                  v242,
                  v243,
                  v244,
                  v245,
                  v246,
                  v247,
                  v248,
                  v249,
                  v250,
                  v251[0]);
                v82 = sub_100110F0C();
                sub_10016BCA0(v82, &qword_1002DA648, v83, v84, v85, v86, v87, v88, v131, v143, v155, v167, v180, v192, v204, v216, v221, v222, v223,
                  v224,
                  v225,
                  v226,
                  v227,
                  v228,
                  v229,
                  v230,
                  v231,
                  v232,
                  v233,
                  v234,
                  v235,
                  v236,
                  v237,
                  v238,
                  v239,
                  v240,
                  v241,
                  v242,
                  v243,
                  v244,
                  v245,
                  v246,
                  v247,
                  v248,
                  v249,
                  v250,
                  v251[0]);
                sub_10016BCA8();
                if (*(_QWORD *)(v11[5] + 16) >= 2uLL)
                {
                  v89 = sub_10014382C();
                  if (v89)
                  {
                    sub_10016BC74(v89);
                    sub_10016BC54();
                  }
                  else
                  {
                    sub_10016BC84();
                  }
                  sub_10016BC94(v90, v91, v92, v258, v132, v144, v156, v168, v181, v193, v205, v217, v221, v222, v223, v224, v225, v226, v227,
                    v228,
                    v229,
                    v230,
                    v231,
                    v232,
                    v233,
                    v234,
                    v235,
                    v236,
                    v237,
                    v238,
                    v239,
                    v240,
                    v241,
                    v242,
                    v243,
                    v244,
                    v245,
                    v246,
                    v247,
                    v248,
                    v249,
                    v250,
                    v251[0]);
                  v93 = sub_100110F0C();
                  sub_10016BCA0(v93, &qword_1002DA648, v94, v95, v96, v97, v98, v99, v133, v145, v157, v169, v182, v194, v206, v218, v221, v222, v223,
                    v224,
                    v225,
                    v226,
                    v227,
                    v228,
                    v229,
                    v230,
                    v231,
                    v232,
                    v233,
                    v234,
                    v235,
                    v236,
                    v237,
                    v238,
                    v239,
                    v240,
                    v241,
                    v242,
                    v243,
                    v244,
                    v245,
                    v246,
                    v247,
                    v248,
                    v249,
                    v250,
                    v251[0]);
                  sub_10016BCA8();
                  v100 = v11[5];
                  swift_bridgeObjectRetain(v100);
                  swift_bridgeObjectRelease(v11);
                  if (*(_QWORD *)(v100 + 16) >= 3uLL)
                  {
                    v101 = *(_QWORD *)(v100 + 48);
                    swift_bridgeObjectRelease(v100);
                    v102 = sub_10014382C();
                    if (v102)
                    {
                      v103 = v102;
                      v104 = *(_QWORD *)(v44 + 64);
                      v251[3] = swift_getObjectType(v102);
                      v251[4] = *(_QWORD *)(v104 + 8);
                      v252[0] = *(_QWORD *)(v104 + 16);
                      v251[0] = v103;
                    }
                    else
                    {
                      sub_10016BC84();
                    }
                    sub_100174AC0(v101, (uint64_t)v251, v105, v106, v107, v257);
                    v108 = sub_100110F0C();
                    sub_10016BCA0(v108, &qword_1002DA648, v109, v110, v111, v112, v113, v114, v134, v146, v158, v170, v183, v195, v207, v219, v221, v222, v223,
                      v224,
                      v225,
                      v226,
                      v227,
                      v228,
                      v229,
                      v230,
                      v231,
                      v232,
                      v233,
                      v234,
                      v235,
                      v236,
                      v237,
                      v238,
                      v239,
                      v240,
                      v241,
                      v242,
                      v243,
                      v244,
                      v245,
                      v246,
                      v247,
                      v248,
                      v249,
                      v250,
                      v251[0]);
                    sub_100110D7C((uint64_t)v263, (uint64_t)v251);
                    sub_100110D7C((uint64_t)v262, (uint64_t)v252);
                    sub_100110D7C((uint64_t)v261, (uint64_t)v253);
                    sub_100110D7C((uint64_t)v259, (uint64_t)v254);
                    sub_100110D7C((uint64_t)v258, (uint64_t)v255);
                    sub_100110D7C((uint64_t)v257, (uint64_t)v256);
                    v220 = type metadata accessor for ControlGridViewConfiguration(0);
                    sub_100110D7C((uint64_t)v251, (uint64_t)&v221);
                    sub_100110D7C((uint64_t)v252, (uint64_t)&v226);
                    sub_100110D7C((uint64_t)v253, (uint64_t)&v231);
                    sub_100110D7C((uint64_t)v254, (uint64_t)&v236);
                    sub_100110D7C((uint64_t)v255, (uint64_t)&v241);
                    sub_100110D7C((uint64_t)v256, (uint64_t)&v246);
                    v115 = static ControlGridViewConfiguration.sixUp(arrangement:width:)(&v221, &v226, &v231, &v236, &v241, &v246, *(double *)(v184 + 40));
                    sub_10016BCA0(v115, &qword_1002DA650, v116, v117, v118, v119, v120, v121, v135, v147, v159, v171, v184, v196, v208, v220, v221, v222, v223,
                      v224,
                      v225,
                      v226,
                      v227,
                      v228,
                      v229,
                      v230,
                      v231,
                      v232,
                      v233,
                      v234,
                      v235,
                      v236,
                      v237,
                      v238,
                      v239,
                      v240,
                      v241,
                      v242,
                      v243,
                      v244,
                      v245,
                      v246,
                      v247,
                      v248,
                      v249,
                      v250,
                      v251[0]);
                    sub_100110DC0(v257);
                    sub_100110DC0(v258);
                    sub_100110DC0(v259);
                    sub_100110DC0(v261);
                    sub_100110DC0(v262);
                    sub_100110DC0(v263);
                    sub_100110DC0(&v246);
                    sub_100110DC0(&v241);
                    sub_100110DC0(&v236);
                    sub_100110DC0(&v231);
                    sub_100110DC0(&v226);
                    sub_100110DC0(&v221);
                    a1 = v172;
                    *v172 = v115;
                    v43 = (unsigned int *)&enum case for ControlsState.controlGrid(_:);
                    goto LABEL_60;
                  }
                  goto LABEL_69;
                }
LABEL_68:
                __break(1u);
LABEL_69:
                __break(1u);
                goto LABEL_70;
              }
LABEL_67:
              __break(1u);
              goto LABEL_68;
            }
LABEL_66:
            __break(1u);
            goto LABEL_67;
          }
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
    }
    else
    {
LABEL_62:
      __break(1u);
    }
    __break(1u);
    goto LABEL_64;
  }
LABEL_70:
  __break(1u);
LABEL_71:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "InCallService/AudioCallModelManager.swift", 41, 2);
  __break(1u);
}

uint64_t sub_10016B5DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  sub_100123A08(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));

  sub_100111CAC(*(id *)(v0 + 88));
  return v0;
}

uint64_t sub_10016B630()
{
  uint64_t v0;

  sub_10016B5DC();
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for AudioCallModelManager()
{
  return objc_opt_self(_TtC13InCallService21AudioCallModelManager);
}

uint64_t sub_10016B69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10016BC18();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10016B6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10016BC18();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10016B73C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10016BC18();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_10016B760(void *a1)
{
  unint64_t v2;
  id v3;
  void *v5;

  v5 = a1;
  v2 = sub_10016BBC0();
  v3 = a1;
  return AnyView.init<A>(_:)(&v5, &type metadata for AvatarViewRepresentable, v2);
}

uint64_t sub_10016B7A8()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = (void *)v0[10];
  v3 = v0[3];
  v2 = (void *)v0[4];
  v4 = objc_msgSend(v2, "currentCallGroups");
  v5 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA6A0, TUCallGroup_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v13 = v6;
    else
      v13 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend(v1, "labelDescriptorWithStringsForCall:callCount:callCenter:alertAvailable:allowsDuration:", v3, v7, v2, 0, 1);
  v9 = objc_msgSend(v8, "strings");
  v10 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for String);

  if (v10[2])
  {
    v11 = v10[4];
    swift_bridgeObjectRetain(v10[5]);
  }
  else
  {
    v11 = 0;
  }
  swift_unknownObjectRelease(v8);
  swift_bridgeObjectRelease(v10);
  return v11;
}

unint64_t sub_10016B8F8()
{
  unint64_t result;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = (unint64_t)sub_10016A014();
  if (result)
  {
    v1 = (void *)result;
    v2 = objc_msgSend((id)objc_opt_self(CNContactFormatter), "posterNameComponentsForContact:", result);
    v3 = sub_1001085C0(&qword_1002DA690);
    inited = swift_initStackObject(v3, &v13);
    *(_OWORD *)(inited + 16) = xmmword_100241F90;
    v5 = objc_msgSend(v2, "firstNameComponent");
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    *(_QWORD *)(inited + 32) = v6;
    *(_QWORD *)(inited + 40) = v8;
    *(_QWORD *)(inited + 48) = sub_10016BAD4(v2);
    *(_QWORD *)(inited + 56) = v9;
    result = (unint64_t)objc_msgSend(v2, "singleNameComponentIndex");
    if (result > 1)
    {
      __break(1u);
    }
    else
    {
      v10 = (uint64_t *)(inited + 32 + 16 * result);
      v12 = *v10;
      v11 = v10[1];
      swift_setDeallocating(inited);
      swift_bridgeObjectRetain(v11);
      sub_10016BA30(&qword_1002DA698);

      if (v11)
        return v12;
      else
        return 0;
    }
  }
  return result;
}

uint64_t sub_10016BA24()
{
  return sub_10016BA30(&qword_1002DA6D8);
}

uint64_t sub_10016BA30(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = sub_1001085C0(a1);
  swift_arrayDestroy(v1 + 32, v2, v3);
  return swift_deallocClassInstance(v1, 32, 7);
}

uint64_t sub_10016BA78(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v4;
}

uint64_t sub_10016BAD4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, "secondNameComponent");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

uint64_t sub_10016BB34(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(a1, "defaultControlTypes");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1001085C0(&qword_1002DA658);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_10016BB94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016BBB8()
{
  uint64_t v0;

  return sub_10016B760(*(void **)(v0 + 16));
}

unint64_t sub_10016BBC0()
{
  unint64_t result;

  result = qword_1002DA688;
  if (!qword_1002DA688)
  {
    result = swift_getWitnessTable(&unk_1002434D8, &type metadata for AvatarViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_1002DA688);
  }
  return result;
}

void sub_10016BBFC()
{
  uint64_t v0;

  sub_10016ADB8(v0);
}

ValueMetadata *type metadata accessor for AvatarViewRepresentable()
{
  return &type metadata for AvatarViewRepresentable;
}

unint64_t sub_10016BC18()
{
  unint64_t result;

  result = qword_1002DA6E0;
  if (!qword_1002DA6E0)
  {
    result = swift_getWitnessTable(&unk_100243448, &type metadata for AvatarViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_1002DA6E0);
  }
  return result;
}

uint64_t sub_10016BC74(uint64_t a1)
{
  return swift_getObjectType(a1);
}

double sub_10016BC84()
{
  return 0.0;
}

uint64_t sub_10016BC94@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  uint64_t v43;

  return sub_100174AC0(v43, (uint64_t)&a43, a1, a2, a3, a4);
}

uint64_t sub_10016BCA0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  return sub_1001209C8((uint64_t)&a47, a2);
}

uint64_t sub_10016BCA8()
{
  return sub_100169F6C();
}

uint64_t sub_10016BCB0()
{
  return sub_100169F6C();
}

uint64_t sub_10016BCB8()
{
  return type metadata accessor for ParticipantDetailsState(0);
}

uint64_t sub_10016BCC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_10016BCC8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_10011AB8C(v0, v1);
}

uint64_t sub_10016BCD4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1001209C8(a1, v1);
}

uint64_t sub_10016BCDC()
{
  uint64_t v0;

  return swift_bridgeObjectRetain_n(v0, 2);
}

uint64_t sub_10016BCE8(uint64_t a1)
{
  uint64_t v1;

  sub_100108600(v1, 0, 1, a1);
  return v1;
}

uint64_t sub_10016BD0C(uint64_t a1)
{
  uint64_t v1;

  sub_100108600(v1, 0, 1, a1);
  return v1;
}

uint64_t sub_10016BD30()
{
  return type metadata accessor for ControlsState(0);
}

void sub_10016BD38()
{
  sub_10019BD34();
}

uint64_t sub_10016BD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108600(a1, 0, 1, a4);
}

_QWORD *sub_10016BD50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for ClarityUICallCenter(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v12 = (id)sub_1001A4610();
  State.init(wrappedValue:)(&v13, &v12);
  v7 = v13;
  v8 = v14;
  v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClarityUIEnhancedEmergencyCoordinator(0)), "init");
  result = State.init(wrappedValue:)(&v13, &v12);
  v10 = v13;
  v11 = v14;
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v7;
  a3[3] = v8;
  a3[4] = v10;
  a3[5] = v11;
  return result;
}

void sub_10016BE04(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  _OWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  unint64_t v34;
  __n128 v35;
  double (**v36)();
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v45;
  __int128 v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  _QWORD v53[2];

  v42 = sub_1001085C0(&qword_1002DA6F0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42, v2);
  sub_10010BC88();
  v5 = v4 - v3;
  v43 = sub_1001085C0(&qword_1002DA6F8);
  v41 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43, v6);
  sub_10010BC88();
  v39 = v8 - v7;
  v38 = sub_1001085C0(&qword_1002DA700);
  __chkstk_darwin(v38, v9);
  sub_10010BC88();
  v12 = v11 - v10;
  v52 = *(_OWORD *)(v1 + 16);
  sub_100127D20((uint64_t)&v52 + 8, (uint64_t)v53, (uint64_t *)&unk_1002D8890);
  v13 = sub_1001085C0(&qword_1002DA708);
  State.wrappedValue.getter(v13);
  v14 = sub_1001A4150();
  sub_100110F0C();
  v46 = v52;
  sub_10016ED2C();
  v15 = v50;
  v50 = *(_OWORD *)(v1 + 32);
  v16 = (void *)v50;
  sub_100127D20((uint64_t)&v50 + 8, (uint64_t)&v51, &qword_1002D8888);
  v46 = v50;
  v17 = sub_1001085C0(&qword_1002DA710);
  State.wrappedValue.getter(v17);
  v18 = (void *)v45;
  LOBYTE(v45) = 0;
  State.init(wrappedValue:)(&v46, &v45);
  v19 = v46;
  v20 = *((_QWORD *)&v46 + 1);
  *(_QWORD *)&v46 = v14;
  *((_QWORD *)&v46 + 1) = v15;
  v47 = v18;
  LOBYTE(v48) = v19;
  v49 = v20;
  v45 = v52;
  sub_10016ED2C();
  v21 = sub_1001A4150();
  sub_100110F0C();
  *(_QWORD *)&v45 = v21;
  v22 = (_OWORD *)sub_10014CB0C((uint64_t)&unk_10028B908);
  sub_10016ECFC(v22);
  swift_retain();
  v37 = v16;
  sub_10011D0E8(v53);
  sub_10011D0E8(&v51);
  v23 = sub_1001085C0(&qword_1002DA718);
  v24 = (void *)sub_10016E40C();
  v25 = sub_10016E448();
  View.onChange<A>(of:initial:_:)(&v45, 1, sub_10016E404, v22, &type metadata for ClarityUIRootView.OptionalCallView, v23, v24, v25);
  swift_release(v22);
  swift_release(v45);
  swift_release(v46);
  swift_release(*((_QWORD *)&v46 + 1));

  swift_release(v49);
  v46 = v52;
  sub_10016ED2C();
  v26 = v45;
  v27 = sub_1001A4150();
  swift_release(v26);
  if (v27)
  {
    sub_10019AA44();
    v29 = v28;
    sub_100110F0C();
  }
  else
  {
    v29 = 0;
  }
  LODWORD(v45) = v29;
  BYTE4(v45) = v27 == 0;
  v30 = (_OWORD *)sub_10014CB0C((uint64_t)&unk_10028B930);
  sub_10016ECFC(v30);
  swift_retain();
  v31 = v37;
  sub_10011D0E8(v53);
  sub_10011D0E8(&v51);
  v32 = sub_1001085C0(&qword_1002DA738);
  *(_QWORD *)&v46 = &type metadata for ClarityUIRootView.OptionalCallView;
  *((_QWORD *)&v46 + 1) = v23;
  v47 = v24;
  v48 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v46, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v34 = sub_10016E510();
  View.onChange<A>(of:initial:_:)(&v45, 0, sub_10016E508, v30, v42, v32, OpaqueTypeConformance2, v34);
  v35 = swift_release(v30);
  (*(void (**)(uint64_t, uint64_t, __n128))(v40 + 8))(v5, v42, v35);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v12, v39, v43);
  v36 = (double (**)())(v12 + *(int *)(v38 + 36));
  *v36 = sub_10016CDB8;
  v36[1] = 0;
  v36[2] = 0;
  v36[3] = 0;
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v43);
  sub_100127D20(v12, a1, &qword_1002DA700);
}

void sub_10016C258(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      v4 = type metadata accessor for MainActor(0);
      __chkstk_darwin(v4, v5);
      swift_retain();
      swift_retain();
      v6 = sub_10019A6D8();
      swift_release(v2);
      swift_release(v3);
      if ((v6 & 1) != 0)
        goto LABEL_4;
    }
  }
  else if (!v3)
  {
LABEL_4:
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v7 = type metadata accessor for Logger(0);
    sub_100108664(v7, (uint64_t)&unk_1002E2D90);
    v8 = swift_retain_n(v3, 2);
    v10 = Logger.logObject.getter(v8, v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v30 = v3;
      v31 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_retain();
      v14 = sub_1001085C0(&qword_1002DA718);
      v15 = String.init<A>(describing:)(&v30, v14);
      v17 = v16;
      v30 = sub_100121E04(v15, v16, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v12 + 4, v12 + 12);
      swift_release_n(v3, 2);
      swift_bridgeObjectRelease(v17);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Frontmost call initially: %s", v12, 0xCu);
      v18 = 1;
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

      swift_release_n(v3, 2);
      v18 = 1;
    }
    goto LABEL_16;
  }
  if (qword_1002D7298 != -1)
    swift_once(&qword_1002D7298, sub_10010C018);
  v19 = type metadata accessor for Logger(0);
  sub_100108664(v19, (uint64_t)&unk_1002E2D90);
  v20 = swift_retain_n(v3, 2);
  v22 = Logger.logObject.getter(v20, v21);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v30 = v3;
    v31 = v25;
    *(_DWORD *)v24 = 136315138;
    swift_retain();
    v26 = sub_1001085C0(&qword_1002DA718);
    v27 = String.init<A>(describing:)(&v30, v26);
    v29 = v28;
    v30 = sub_100121E04(v27, v28, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v24 + 4, v24 + 12);
    swift_release_n(v3, 2);
    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Frontmost call changed: %s", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    swift_release_n(v3, 2);
  }
  v18 = 0;
LABEL_16:
  sub_10016C640(v18);
}

void sub_10016C640(char a1)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unsigned int v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v38[3];
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v4 = sub_1001085C0(&qword_1002D84A0);
  __chkstk_darwin(v4, v5);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v1[1];
  *(_OWORD *)v38 = v1[1];
  v8 = sub_1001085C0(&qword_1002DA708);
  State.wrappedValue.getter(v8);
  v9 = v41;
  v10 = sub_1001A4150();
  swift_release(v9);
  if (v10)
  {
    if ((a1 & 1) != 0
      || (v11 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance"),
          v12 = objc_msgSend(v11, "autoPunchOutBehaviorRequiredForCurrentCalls"),
          v11,
          !v12))
    {
      if (qword_1002D7298 != -1)
        swift_once(&qword_1002D7298, sub_10010C018);
      v21 = type metadata accessor for Logger(0);
      sub_100108664(v21, (uint64_t)&unk_1002E2D90);
      v22 = swift_retain_n(v10, 2);
      v24 = Logger.logObject.getter(v22, v23);
      v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(12, -1);
        v27 = swift_slowAlloc(32, -1);
        v38[0] = v27;
        *(_DWORD *)v26 = 136315138;
        type metadata accessor for MainActor(0);
        swift_retain();
        v28 = sub_10019A7E0();
        v30 = v29;
        swift_release(v10);
        v41 = sub_100121E04(v28, v30, v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v26 + 4, v26 + 12);
        swift_release_n(v10, 2);
        swift_bridgeObjectRelease(v30);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Showing call view for call: %s", v26, 0xCu);
        swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v27, -1, -1);
        swift_slowDealloc(v26, -1, -1);
        swift_release(v10);

      }
      else
      {

        swift_release_n(v10, 3);
      }
    }
    else
    {
      sub_100127D20((uint64_t)&v40 + 8, (uint64_t)&v41, (uint64_t *)&unk_1002D8890);
      v13 = type metadata accessor for TaskPriority(0);
      sub_100108600((uint64_t)v7, 1, 1, v13);
      *(_OWORD *)v38 = v2[2];
      v14 = (void *)v38[0];
      sub_100127D20((uint64_t)&v38[1], (uint64_t)&v39, &qword_1002D8888);
      type metadata accessor for MainActor(0);
      swift_retain();
      swift_retain();
      sub_10011D0E8(&v41);
      v15 = v14;
      sub_10011D0E8(&v39);
      v16 = swift_retain();
      v17 = static MainActor.shared.getter(v16);
      v18 = swift_allocObject(&unk_10028B9A8, 88, 7);
      *(_QWORD *)(v18 + 16) = v17;
      *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
      v19 = v2[1];
      *(_OWORD *)(v18 + 32) = *v2;
      *(_OWORD *)(v18 + 48) = v19;
      *(_OWORD *)(v18 + 64) = v2[2];
      *(_QWORD *)(v18 + 80) = v10;
      sub_10011102C();
      swift_release(v20);
      swift_release(v10);
    }
  }
  else
  {
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_100108664(v31, (uint64_t)&unk_1002E2D90);
    v34 = Logger.logObject.getter(v32, v33);
    v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Dismissing because there is no frontmost call.", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

    (*(void (**)(void))v2)();
  }
}

void sub_10016CAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  if ((*(_BYTE *)(a1 + 4) & 1) == 0 && (*(_BYTE *)(a2 + 4) & 1) == 0)
  {
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v4 = type metadata accessor for Logger(0);
    sub_100108664(v4, (uint64_t)&unk_1002E2D90);
    v5 = *(_QWORD *)(a3 + 8);
    v26 = *(_OWORD *)(a3 + 16);
    v6 = v26;
    sub_100127D20((uint64_t)&v26 + 8, (uint64_t)&v27, (uint64_t *)&unk_1002D8890);
    v24 = *(_OWORD *)(a3 + 32);
    sub_100127D20((uint64_t)&v24 + 8, (uint64_t)&v25, &qword_1002D8888);
    swift_retain();
    swift_retain();
    sub_10011D0E8(&v27);
    v7 = (id)v24;
    sub_10011D0E8(&v25);
    swift_retain();
    swift_retain();
    sub_10011D0E8(&v27);
    v8 = v7;
    v9 = sub_10011D0E8(&v25);
    v11 = Logger.logObject.getter(v9, v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v23 = v20;
      *(_DWORD *)v13 = 136315138;
      v22[0] = *((_QWORD *)&v26 + 1);
      v14 = sub_1001085C0(&qword_1002DA708);
      State.wrappedValue.getter(v14);
      v15 = sub_1001A4150();
      swift_release(v22[1]);
      v21 = v15;
      v16 = sub_1001085C0(&qword_1002DA718);
      v17 = String.init<A>(describing:)(&v21, v16);
      v19 = v18;
      v21 = sub_100121E04(v17, v18, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v13 + 4, v13 + 12);
      swift_release(v6);
      swift_release(v5);
      swift_bridgeObjectRelease(v19);
      sub_10011D210(&v27);

      sub_10011D210(&v25);
      swift_release(v6);
      swift_release(v5);
      sub_10011D210(&v27);

      sub_10011D210(&v25);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Frontmost call status changed: %s", v13, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }
    else
    {
      swift_release(v6);
      swift_release(v5);
      sub_10011D210(&v27);

      sub_10011D210(&v25);
      swift_release(v6);
      swift_release(v5);
      sub_10011D210(&v27);

      sub_10011D210(&v25);
    }

    sub_10016C640(0);
  }
}

double sub_10016CDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0, v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  v11 = __chkstk_darwin(v8, v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  v16 = (char *)&v29 - v15;
  static String._unconditionallyBridgeFromObjectiveC(_:)(TUCallCenterInCallServiceDidAppearNotification);
  v18 = v17;
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)(v13, 0.5);
  v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29(v13, v8);
  v21 = swift_allocObject(&unk_10028B958, 24, 7);
  *(_QWORD *)(v21 + 16) = v19;
  aBlock[4] = sub_10016E5B0;
  v36 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10019CD08;
  aBlock[3] = &unk_10028B970;
  v22 = _Block_copy(aBlock);
  v23 = v19;
  static DispatchQoS.unspecified.getter(v23);
  v34 = _swiftEmptyArrayStorage;
  sub_10015C704((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  v25 = v24;
  v26 = sub_1001085C0((uint64_t *)&unk_1002D7F80);
  sub_10010B56C((unint64_t *)&qword_1002D83C0, (uint64_t *)&unk_1002D7F80);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v26, v27, v0, v25);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v7, v3, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
  v29(v16, v30);
  *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  return result;
}

void sub_10016D07C(const __CFString *a1)
{
  __CFNotificationCenter *v2;

  v2 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(v2, a1, 0, 0, 1u);

}

uint64_t sub_10016D0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for MainActor(0);
  v5[2] = v7;
  v5[3] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_1002DA75C);
  v5[4] = v8;
  *v8 = v5;
  v8[1] = sub_10016D13C;
  return sub_10016D1C0(a5);
}

uint64_t sub_10016D13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1001095A8();
  v1 = *(_QWORD *)(v0 + 16);
  sub_100109528();
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10016D198, v2, v3);
}

uint64_t sub_10016D198()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10016D1C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[46] = a1;
  v2[47] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[48] = v3;
  v2[49] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[50] = v4;
  v2[51] = v5;
  return swift_task_switch(sub_10016D230, v4, v5);
}

uint64_t sub_10016D230()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t inited;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46[2];

  v1 = (_QWORD *)(v0 + 368);
  v2 = sub_10019A684();
  v3 = objc_msgSend(v2, "provider");

  v4 = sub_100166004(v3);
  if (!v5)
    goto LABEL_10;
  v6 = v5;
  v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    sub_1001096DC();
LABEL_10:
    sub_10016ED24();
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v17 = *v1;
    v18 = type metadata accessor for Logger(0);
    sub_100108664(v18, (uint64_t)&unk_1002E2D90);
    v19 = swift_retain_n(v17, 2);
    v21 = Logger.logObject.getter(v19, v20);
    v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = *(_QWORD *)(v0 + 368);
      v24 = (_DWORD *)sub_1001094C8(12);
      v25 = sub_1001094C8(32);
      v46[0] = v25;
      *v24 = 136315138;
      swift_retain();
      v26 = sub_10019A7E0();
      v28 = v27;
      swift_release(v23);
      *(_QWORD *)(v0 + 328) = sub_100121E04(v26, v28, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 328, v0 + 336, v24 + 1, v24 + 3);
      swift_bridgeObjectRelease(v28);
      swift_release_n(v23, 2);
      sub_10016ED14((void *)&_mh_execute_header, v21, v29, "Unable to punch out to VoIP application because call was missing a bundle identifier: %s");
      sub_100109598(v25, v30, (uint64_t)&type metadata for Any + 8);
      sub_100109440(v25);
      sub_100109440((uint64_t)v24);
    }
    else
    {
      swift_release_n(*v1, 2);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v45 = v4;
  if (qword_1002D7298 != -1)
    swift_once(&qword_1002D7298, sub_10010C018);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100108664(v8, (uint64_t)&unk_1002E2D90);
  *(_QWORD *)(v0 + 416) = v9;
  v10 = swift_bridgeObjectRetain_n(v6, 2);
  v12 = Logger.logObject.getter(v10, v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)sub_1001094C8(12);
    v15 = sub_1001094C8(32);
    v46[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain(v6);
    *(_QWORD *)(v0 + 360) = sub_100121E04(v45, v6, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 360, v0 + 368, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease_n(v6, 3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Punching out to VoIP application: %s", v14, 0xCu);
    sub_100109598(v15, v16, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v15);
    sub_100109440((uint64_t)v14);
  }
  else
  {
    swift_bridgeObjectRelease_n(v6, 2);
  }

  v32 = objc_msgSend((id)objc_opt_self(FBSOpenApplicationService), "serviceWithDefaultShellEndpoint");
  *(_QWORD *)(v0 + 424) = v32;
  if (!v32)
  {
    sub_10016ED24();
    v41 = sub_1001096DC();
    Logger.logObject.getter(v41, v42);
    v43 = sub_1001096F0();
    if (os_log_type_enabled(v9, v43))
    {
      v44 = (uint8_t *)sub_1001094C8(2);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v43, "Unable to find open application service.", v44, 2u);
      sub_100109440((uint64_t)v44);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v33 = v32;
  (**(void (***)(void))(v0 + 376))();
  sub_10010BBE8(0, &qword_1002DA760, FBSOpenApplicationOptions_ptr);
  v34 = sub_1001085C0(&qword_1002DA768);
  inited = swift_initStackObject(v34, v0 + 80);
  *(_OWORD *)(inited + 16) = xmmword_100241F90;
  *(_QWORD *)(v0 + 296) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyUnlockDevice);
  *(_QWORD *)(v0 + 304) = v36;
  sub_10016ED3C(v0 + 296);
  *(_QWORD *)(inited + 96) = &type metadata for Bool;
  *(_BYTE *)(inited + 72) = 1;
  *(_QWORD *)(v0 + 312) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyPromptUnlockDevice);
  *(_QWORD *)(v0 + 320) = v37;
  sub_10016ED3C(v0 + 312);
  *(_QWORD *)(inited + 168) = &type metadata for Bool;
  *(_BYTE *)(inited + 144) = 1;
  v38 = Dictionary.init(dictionaryLiteral:)(inited, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  v39 = sub_10016DC3C(v38);
  *(_QWORD *)(v0 + 432) = v39;
  v40 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v0 + 440) = v40;
  sub_1001096DC();
  *(_QWORD *)(v0 + 56) = v0 + 336;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10016D7F0;
  *(_QWORD *)(v0 + 288) = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 256) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 264) = 0x40000000;
  *(_QWORD *)(v0 + 272) = sub_10016DCC4;
  *(_QWORD *)(v0 + 280) = &unk_10028B9C0;
  objc_msgSend(v33, "openApplication:withOptions:completion:", v40, v39, v0 + 256);
  return swift_continuation_await(v0 + 16);
}

uint64_t sub_10016D7F0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  sub_1001095A8();
  *v2 = *v0;
  v3 = v1[6];
  v1[56] = v3;
  if (v3)
    v4 = sub_10016D9B0;
  else
    v4 = sub_10016D844;
  return swift_task_switch(v4, v1[50], v1[51]);
}

uint64_t sub_10016D844()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _DWORD *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v15;
  void *v16;

  v1 = *(void **)(v0 + 440);
  sub_10016ED24();
  v2 = *(void **)(v0 + 336);

  v3 = v2;
  v5 = Logger.logObject.getter(v3, v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v15 = *(void **)(v0 + 432);
    v16 = *(void **)(v0 + 424);
    v7 = (_DWORD *)sub_1001094C8(12);
    v8 = (_QWORD *)sub_1001094C8(8);
    *v7 = 138412290;
    *(_QWORD *)(v0 + 352) = v3;
    v9 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 352, v0 + 360, v7 + 1, v7 + 3);
    *v8 = v3;

    sub_10016ED14((void *)&_mh_execute_header, v5, v10, "Successfully opened application: %@");
    v11 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v8, v12, v11);
    sub_100109440((uint64_t)v8);
    sub_100109440((uint64_t)v7);

  }
  else
  {
    v13 = *(void **)(v0 + 424);
    v9 = *(id *)(v0 + 432);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016D9B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSObject *v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  void *v29;
  void *v30;
  uint8_t *v31;

  v2 = *(void **)(v0 + 440);
  v1 = *(_QWORD *)(v0 + 448);
  v3 = *(NSObject **)(v0 + 416);
  v4 = sub_10016ED24();
  v5 = v1;
  swift_willThrow(v4);

  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  Logger.logObject.getter(v6, v7);
  v8 = sub_1001096F0();
  if (sub_100109560(v8))
  {
    v9 = *(_QWORD *)(v0 + 448);
    v10 = (uint8_t *)sub_1001094C8(12);
    v11 = (_QWORD *)sub_1001094C8(8);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v9);
    v12 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v0 + 344) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 344, v0 + 352, v10 + 4, v10 + 12);
    *v11 = v12;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v3, v5, "Unable to open application: %@", v10, 0xCu);
    v13 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v11, v14, v13);
    sub_100109440((uint64_t)v11);
    sub_100109440((uint64_t)v10);
  }
  else
  {
    sub_100135EB4();
    sub_100135EB4();
  }

  v15 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v16 = objc_msgSend(v15, "delegate");

  if (v16)
  {
    v19 = objc_opt_self(ICSApplicationDelegate);
    v20 = swift_dynamicCastObjCClass(v16, v19);
    if (v20)
    {
      v21 = (void *)v20;
      v22 = *(_QWORD *)(v0 + 448);
      v24 = *(void **)(v0 + 424);
      v23 = *(void **)(v0 + 432);
      v25 = sub_10019A684();
      objc_msgSend(v21, "requestPresentationForCall:dialRequest:", v25, 0);

      swift_errorRelease(v22);
      swift_unknownObjectRelease(v16);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v17 = swift_unknownObjectRelease(v16);
  }
  v26 = *(NSObject **)(v0 + 416);
  Logger.logObject.getter(v17, v18);
  v27 = sub_1001096F0();
  v28 = sub_100109560(v27);
  v30 = *(void **)(v0 + 424);
  v29 = *(void **)(v0 + 432);
  if (v28)
  {
    v31 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v5, "Unable to find app delegate to present InCallService.", v31, 2u);
    sub_100109440((uint64_t)v31);

    sub_100135EB4();
  }
  else
  {

    sub_100135EB4();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10016DC3C(uint64_t a1)
{
  uint64_t v1;
  NSDictionary v3;
  id v4;

  if (a1)
  {
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3.super.isa = 0;
  }
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(v1), "optionsWithDictionary:", v3.super.isa);

  return v4;
}

uint64_t sub_10016DCC4(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
    return sub_10016DD10(v3, (uint64_t)a3);
  if (a2)
    return sub_10016DD60(v3, (uint64_t)a2);
  __break(1u);
  return result;
}

uint64_t sub_10016DD10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = sub_1001085C0(&qword_1002D8520);
  v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0, 0);
  *v6 = a2;
  return swift_continuation_throwingResumeWithError(a1, v5);
}

uint64_t sub_10016DD60(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

double sub_10016DD70@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  char v12;
  void *(*v13)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v14;
  char v15;
  __int128 v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  sub_100127D20(v1, (uint64_t)&v19, &qword_1002DA718);
  sub_100127D20((uint64_t)&v19, (uint64_t)&v20, &qword_1002DA718);
  v4 = v20;
  if (v20)
  {
    v5 = *(void **)(v1 + 16);
    v18 = *(_OWORD *)(v1 + 24);
    v6 = swift_allocObject(&unk_10028BA70, 64, 7);
    *(_QWORD *)(v6 + 16) = v4;
    v7 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v6 + 24) = *(_OWORD *)v1;
    *(_OWORD *)(v6 + 40) = v7;
    *(_QWORD *)(v6 + 56) = *(_QWORD *)(v1 + 32);
    v13 = sub_10016EA6C;
    v14 = v6;
    v15 = 0;
    sub_10011D0E8(&v19);
    sub_10011D0E8(&v19);
    swift_retain();
    v8 = v5;
    sub_10014F1DC((uint64_t)&v18);
  }
  else
  {
    v13 = (void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))static Color.clear.getter(v3);
    v14 = 0;
    v15 = 1;
  }
  v9 = sub_1001085C0(&qword_1002DA778);
  sub_10010B56C(&qword_1002DA780, &qword_1002DA778);
  _ConditionalContent<>.init(storage:)(&v16, &v13, v9, &type metadata for Color, v10, &protocol witness table for Color);
  result = *(double *)&v16;
  v12 = v17;
  *(_OWORD *)a1 = v16;
  *(_BYTE *)(a1 + 16) = v12;
  return result;
}

void *sub_10016DEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  char v14;
  _QWORD __src[30];

  v7 = static Alignment.center.getter(a1);
  v9 = v8;
  v10 = sub_10016DF64(a2, a3, __src);
  v11 = static Animation.clarityUINavigationTransition.getter(v10);
  v12 = sub_1001085C0(&qword_1002DB1D0);
  State.wrappedValue.getter(v12);
  *(_QWORD *)a4 = v7;
  *(_QWORD *)(a4 + 8) = v9;
  result = memcpy((void *)(a4 + 16), __src, 0xF0uLL);
  *(_QWORD *)(a4 + 256) = v11;
  *(_BYTE *)(a4 + 264) = v14;
  return result;
}

uint64_t *sub_10016DF64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v9;
  char v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[11];
  _BYTE __dst[168];
  uint64_t v22;
  _BYTE __src[176];

  v6 = *(_QWORD *)(a2 + 8);
  v20[0] = *(_OWORD *)(a2 + 24);
  swift_retain();
  swift_retain();
  v7 = sub_1001085C0(&qword_1002DB1D0);
  v8 = State.projectedValue.getter(__dst);
  v9 = *(_OWORD *)__dst;
  v10 = __dst[16];
  v11 = GeometryProxy.size.getter(v8);
  sub_1001888E4(a1, v6, v9, *((uint64_t *)&v9 + 1), v10, (uint64_t)*(id *)(a2 + 16), (uint64_t)__src, v11);
  *(_OWORD *)__dst = *(_OWORD *)(a2 + 24);
  State.wrappedValue.getter(v7);
  if (LOBYTE(v20[0]) == 1)
  {
    swift_retain();
    State.projectedValue.getter(__dst);
    v13 = *(_QWORD *)&__dst[8];
    v12 = *(_QWORD *)__dst;
    v14 = __dst[16];
    *(_QWORD *)&v20[0] = 0;
    *((_QWORD *)&v20[0] + 1) = 0xE000000000000000;
    State.init(wrappedValue:)(__dst, v20);
    v16 = *(_QWORD *)&__dst[8];
    v15 = *(_QWORD *)__dst;
    v17 = 0x3FF0000000000000;
    v18 = *(_QWORD *)&__dst[16];
  }
  else
  {
    a1 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v18 = 0;
    v17 = 0;
  }
  memcpy(v20, __src, 0xA8uLL);
  *((_QWORD *)&v20[10] + 1) = 0;
  memcpy(a3, v20, 0xB0uLL);
  a3[22] = a1;
  a3[23] = v12;
  a3[24] = v13;
  a3[25] = v14;
  a3[26] = v15;
  a3[27] = v16;
  a3[28] = v18;
  a3[29] = v17;
  sub_10016EA78((uint64_t *)v20);
  sub_10016EB1C(a1, v12, v13, v14, v15, v16, v18);
  sub_10016EB78(a1, v12, v13, v14, v15, v16, v18);
  memcpy(__dst, __src, sizeof(__dst));
  v22 = 0;
  return sub_10016EBD0((uint64_t *)__dst);
}

double sub_10016E16C@<D0>(uint64_t a1@<X8>)
{
  return sub_10016DD70(a1);
}

uint64_t destroy for ClarityUIRootView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 24));

  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *initializeWithCopy for ClarityUIRootView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v7 = (void *)a2[4];
  v6 = a2[5];
  a1[4] = v7;
  a1[5] = v6;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  v8 = v7;
  swift_retain(v6);
  return a1;
}

_QWORD *assignWithCopy for ClarityUIRootView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a1[3];
  v9 = a2[3];
  a1[3] = v9;
  swift_retain(v9);
  swift_release(v8);
  v10 = (void *)a2[4];
  v11 = (void *)a1[4];
  a1[4] = v10;
  v12 = v10;

  v13 = a1[5];
  v14 = a2[5];
  a1[5] = v14;
  swift_retain(v14);
  swift_release(v13);
  return a1;
}

uint64_t assignWithTake for ClarityUIRootView(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  swift_release(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);

  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIRootView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIRootView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIRootView()
{
  return &type metadata for ClarityUIRootView;
}

uint64_t sub_10016E3F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100266A44, 1);
}

void sub_10016E404(uint64_t *a1, uint64_t *a2)
{
  sub_10016C258(a1, a2);
}

unint64_t sub_10016E40C()
{
  unint64_t result;

  result = qword_1002DA720;
  if (!qword_1002DA720)
  {
    result = swift_getWitnessTable(&unk_1002435B4, &type metadata for ClarityUIRootView.OptionalCallView);
    atomic_store(result, (unint64_t *)&qword_1002DA720);
  }
  return result;
}

unint64_t sub_10016E448()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DA728;
  if (!qword_1002DA728)
  {
    v1 = sub_10010AD84(&qword_1002DA718);
    sub_10015C704(&qword_1002DA730, type metadata accessor for ClarityUICall);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1002DA728);
  }
  return result;
}

uint64_t sub_10016E4C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  sub_10016ED34();
  return swift_deallocObject(v0, 64, 7);
}

void sub_10016E508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10016CAA4(a1, a2, v2 + 16);
}

unint64_t sub_10016E510()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DA740;
  if (!qword_1002DA740)
  {
    v1 = sub_10010AD84(&qword_1002DA738);
    sub_10015C704(&qword_1002D7698, (uint64_t (*)(uint64_t))type metadata accessor for TUCallStatus);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, &qword_1002DA740);
  }
  return result;
}

uint64_t sub_10016E58C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10016E5B0()
{
  uint64_t v0;

  sub_10016D07C(*(const __CFString **)(v0 + 16));
}

uint64_t sub_10016E5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10016E5C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10016E5D0@<X0>(_QWORD *a1@<X8>)
{
  return sub_10019B838(a1);
}

uint64_t sub_10016E5E8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  sub_10016ED34();

  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10016E638(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[10];
  v8 = (_QWORD *)swift_task_alloc(dword_1002DA74C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10016E6B4;
  return sub_10016D0C8(a1, v4, v5, v6, v7);
}

uint64_t sub_10016E6B4()
{
  uint64_t v0;

  sub_1001095A8();
  sub_100109528();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

void sub_10016E6E0(unsigned __int8 *a1@<X8>)
{
  sub_10019B764(a1);
}

uint64_t destroy for ClarityUIRootView.OptionalCallView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));

  return swift_release(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for ClarityUIRootView.OptionalCallView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (void *)a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  v6 = a2[4];
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain(v3);
  swift_retain(v4);
  v7 = v5;
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for ClarityUIRootView.OptionalCallView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a2[2];
  v9 = (void *)a1[2];
  a1[2] = (uint64_t)v8;
  v10 = v8;

  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  v11 = a1[4];
  v12 = a2[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for ClarityUIRootView.OptionalCallView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIRootView.OptionalCallView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIRootView.OptionalCallView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIRootView.OptionalCallView()
{
  return &type metadata for ClarityUIRootView.OptionalCallView;
}

unint64_t sub_10016E920()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  ValueMetadata *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  result = qword_1002DA770;
  if (!qword_1002DA770)
  {
    v1 = sub_10010AD84(&qword_1002DA700);
    v2 = sub_10010AD84(&qword_1002DA6F0);
    v3 = sub_10010AD84(&qword_1002DA738);
    v6 = &type metadata for ClarityUIRootView.OptionalCallView;
    v7 = sub_10010AD84(&qword_1002DA718);
    v8 = sub_10016E40C();
    v9 = sub_10016E448();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v5 = sub_10016E510();
    v6 = (ValueMetadata *)v2;
    v7 = v3;
    v8 = OpaqueTypeConformance2;
    v9 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DA770);
  }
  return result;
}

uint64_t sub_10016EA1C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100266A6C, 1);
}

uint64_t sub_10016EA2C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  sub_10016ED34();
  return swift_deallocObject(v0, 64, 7);
}

void *sub_10016EA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10016DEB4(a1, *(_QWORD *)(v2 + 16), v2 + 24, a2);
}

uint64_t *sub_10016EA78(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (void *)a1[6];
  v7 = a1[8];
  v8 = a1[10];
  v9 = a1[12];
  v10 = a1[20];
  swift_retain(a1[11]);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  v11 = v6;
  swift_retain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t sub_10016EB1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;

  if (result)
  {
    v10 = result;
    swift_retain(a7);
    swift_retain(v10);
    swift_retain(a2);
    swift_retain(a3);
    return swift_bridgeObjectRetain(a6);
  }
  return result;
}

uint64_t sub_10016EB78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {
    swift_release(result);
    swift_release(a3);
    swift_bridgeObjectRelease(a6);
    swift_release(a2);
    return swift_release(a7);
  }
  return result;
}

uint64_t *sub_10016EBD0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (void *)a1[6];
  v7 = a1[8];
  v8 = a1[10];
  v9 = a1[11];
  v10 = a1[12];
  swift_release(a1[20]);
  swift_release(v10);

  swift_release(v5);
  swift_release(v3);
  swift_release(v2);
  swift_release(v4);
  swift_release(v7);
  swift_release(v8);
  swift_release(v9);
  return a1;
}

unint64_t sub_10016EC78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DA788;
  if (!qword_1002DA788)
  {
    v1 = sub_10010AD84(&qword_1002DA790);
    sub_10010B56C(&qword_1002DA780, &qword_1002DA778);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DA788);
  }
  return result;
}

uint64_t sub_10016ECFC(_OWORD *a1)
{
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;

  v3 = v2[1];
  a1[1] = *v2;
  a1[2] = v3;
  a1[3] = v2[2];
  return swift_retain(v1);
}

void sub_10016ED14(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  os_log_type_t v5;

  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

uint64_t sub_10016ED24()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 392));
}

uint64_t sub_10016ED2C()
{
  uint64_t v0;

  return State.wrappedValue.getter(v0);
}

uint64_t sub_10016ED34()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 56));
}

uint64_t sub_10016ED3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return AnyHashable.init<A>(_:)(a1, v2, v1);
}

void sub_10016ED48()
{
  sub_10016876C(&OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView____lazy_storage___continueButton, (uint64_t (*)(uint64_t))sub_10016ED5C);
}

uint64_t sub_10016ED5C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t countAndFlagsBits;
  void *object;
  unsigned int v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD *, _QWORD);
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  double v49;
  double v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  _QWORD v56[4];
  Swift::String v57;
  Swift::String v58;

  v2 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1001085C0(&qword_1002DA800);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UIButton.Configuration(0);
  v54 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19, v20);
  v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v14);
  UIButton.Configuration.cornerStyle.setter(v18);
  v24 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v24, "systemBlueColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v24, "systemWhiteColor"));
  if (qword_1002D7328 != -1)
    swift_once(&qword_1002D7328, sub_10016FC00);
  UIButton.Configuration.imagePadding.setter(*(double *)&qword_1002E2E50);
  v25 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 2);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v25);
  v53 = OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_type;
  v26 = *(_QWORD *)&a1[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_type];
  if (v26 == 1)
  {
    v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v57._object = (void *)0xE000000000000000;
    v28._countAndFlagsBits = 0x505F45534F4F4843;
    v28._object = (void *)0xEC0000004F544F48;
    v29.value._countAndFlagsBits = 0x65536C6C61436E49;
    v29.value._object = (void *)0xED00006563697672;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v57._countAndFlagsBits = 0;
    v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v57);
    countAndFlagsBits = v31._countAndFlagsBits;
    object = v31._object;
    v34 = 1953458288;
  }
  else
  {
    if (v26)
    {
      v56[0] = *(_QWORD *)&a1[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_type];
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for PHEnhancedEmergencyRequestType, v56, &type metadata for PHEnhancedEmergencyRequestType);
      __break(1u);
      return result;
    }
    v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v58._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0x49565F4552414853;
    v35._object = (void *)0xEB000000004F4544;
    v36.value._countAndFlagsBits = 0x65536C6C61436E49;
    v36.value._object = (void *)0xED00006563697672;
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v58._countAndFlagsBits = 0;
    v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v27, v37, v58);
    countAndFlagsBits = v38._countAndFlagsBits;
    object = v38._object;
    v34 = 1701079414;
  }

  AttributeContainer.init()();
  AttributedString.init(_:attributes:)(countAndFlagsBits, object, v9);
  v39 = type metadata accessor for AttributedString(0);
  sub_100108600((uint64_t)v13, 0, 1, v39);
  UIButton.Configuration.attributedTitle.setter(v13);
  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  sub_10017BD1C(v34 | 0x69662E6F00000000, 0xEA00000000006C6CLL);
  UIButton.Configuration.image.setter(v40);
  v41 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.attributedTitle.modify(v56);
  if (!sub_100109FF4(v42, 1, v39))
  {
    KeyPath = swift_getKeyPath(&unk_100243710);
    __chkstk_darwin(KeyPath, v44);
    v45 = swift_getKeyPath(&unk_100243740);
    v55 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 15.0, UIFontWeightBold);
    v46 = sub_10017106C();
    AttributedString.subscript.setter(&v55, v45, v46);
  }
  v41(v56, 0);
  v47 = v54;
  if (qword_1002D7338 != -1)
    swift_once(&qword_1002D7338, sub_10016FC20);
  UIButton.Configuration.contentInsets.setter(*(double *)&xmmword_1002E2E60, *((double *)&xmmword_1002E2E60 + 1), *(double *)&qword_1002E2E70, unk_1002E2E78);
  v48 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  LODWORD(v49) = 1144750080;
  objc_msgSend(v48, "setContentHuggingPriority:forAxis:", 1, v49);
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v5, v23, v19);
  sub_100108600((uint64_t)v5, 0, 1, v19);
  UIButton.configuration.setter(v5);
  objc_msgSend(v48, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v48, "addTarget:action:forControlEvents:", a1, "continueButtonTapped", 64);
  LODWORD(v50) = 1148846080;
  objc_msgSend(v48, "setContentCompressionResistancePriority:forAxis:", 1, v50);
  objc_msgSend(a1, "addSubview:", v48);
  if (!*(_QWORD *)&a1[v53])
    objc_msgSend(v48, "setUserInteractionEnabled:", 0);
  objc_msgSend(v48, "setOverrideUserInterfaceStyle:", 2);
  objc_msgSend(v48, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v23, v19);
  return (uint64_t)v48;
}

void sub_10016F3B0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView____lazy_storage___spinnerButton);
  if (!v2)
  {
    v3 = sub_10016F3FC();
    sub_1001367F0(v3);

    v2 = 0;
  }
  v4 = v2;
  sub_100109830();
}

id sub_10016F3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v25;
  Swift::String v26;

  v0 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  __chkstk_darwin(v0, v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter(v8);
  v15 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v15, "secondarySystemFillColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v15, "systemWhiteColor"));
  UIButton.Configuration.showsActivityIndicator.setter(1);
  v16 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v14, v9);
  sub_100108600((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter(v3);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "setOverrideUserInterfaceStyle:", 2);
  objc_msgSend(v16, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  v17 = (void *)objc_opt_self(NSBundle);
  v18 = v16;
  v19 = objc_msgSend(v17, "mainBundle");
  v26._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0x495443454E4E4F43;
  v20._object = (void *)0xEA0000000000474ELL;
  v21.value._countAndFlagsBits = 0x65536C6C61436E49;
  v21.value._object = (void *)0xED00006563697672;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v26._countAndFlagsBits = 0;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v26);

  sub_1001710E0(v23._countAndFlagsBits, (uint64_t)v23._object, v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return v18;
}

void sub_10016F6B0()
{
  sub_10016876C(&OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView____lazy_storage___cancelButton, (uint64_t (*)(uint64_t))sub_10016F6C4);
}

id sub_10016F6C4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  void (*v34)(_BYTE *, _QWORD);
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  double v41;
  uint64_t v43;
  id v44;
  _BYTE v45[32];
  Swift::String v46;

  v2 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1001085C0(&qword_1002DA800);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UIButton.Configuration(0);
  v20 = *(_QWORD *)(v19 - 8);
  v22 = __chkstk_darwin(v19, v21);
  v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v14);
  UIButton.Configuration.cornerStyle.setter(v18);
  v25 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v25, "secondarySystemFillColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v25, "systemWhiteColor"));
  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  sub_10017BD1C(0x6B72616D78, 0xE500000000000000);
  UIButton.Configuration.image.setter(v26);
  if (qword_1002D7328 != -1)
    swift_once(&qword_1002D7328, sub_10016FC00);
  UIButton.Configuration.imagePadding.setter(*(double *)&qword_1002E2E50);
  v27 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 2);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v27);
  v28 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v46._object = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 0x574F4E5F544F4ELL;
  v29._object = (void *)0xE700000000000000;
  v30.value._countAndFlagsBits = 0x65536C6C61436E49;
  v30.value._object = (void *)0xED00006563697672;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v46._countAndFlagsBits = 0;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v46);

  AttributeContainer.init()();
  AttributedString.init(_:attributes:)(v32._countAndFlagsBits, v32._object, v9);
  v33 = type metadata accessor for AttributedString(0);
  sub_100108600((uint64_t)v13, 0, 1, v33);
  UIButton.Configuration.attributedTitle.setter(v13);
  v34 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify(v45);
  if (!sub_100109FF4(v35, 1, v33))
  {
    KeyPath = swift_getKeyPath(&unk_100243710);
    __chkstk_darwin(KeyPath, v37);
    v38 = swift_getKeyPath(&unk_100243740);
    v44 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 15.0, UIFontWeightBold);
    v39 = sub_10017106C();
    AttributedString.subscript.setter(&v44, v38, v39);
  }
  v34(v45, 0);
  if (qword_1002D7338 != -1)
    swift_once(&qword_1002D7338, sub_10016FC20);
  UIButton.Configuration.contentInsets.setter(*(double *)&xmmword_1002E2E60, *((double *)&xmmword_1002E2E60 + 1), *(double *)&qword_1002E2E70, unk_1002E2E78);
  v40 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v5, v24, v19);
  sub_100108600((uint64_t)v5, 0, 1, v19);
  UIButton.configuration.setter(v5);
  objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v40, "addTarget:action:forControlEvents:", a1, "cancelButtonTapped", 64);
  objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v41) = 1148846080;
  objc_msgSend(v40, "setContentCompressionResistancePriority:forAxis:", 1, v41);
  objc_msgSend(a1, "addSubview:", v40);
  objc_msgSend(v40, "setOverrideUserInterfaceStyle:", 2);
  objc_msgSend(v40, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
  return v40;
}

void sub_10016FC00()
{
  qword_1002E2E50 = 0x4014000000000000;
}

void sub_10016FC10()
{
  qword_1002E2E58 = 0x4014000000000000;
}

__n128 sub_10016FC20()
{
  __n128 result;

  __asm { FMOV            V0.2D, #12.0 }
  xmmword_1002E2E60 = (__int128)result;
  *(__n128 *)&qword_1002E2E70 = result;
  return result;
}

void sub_10016FC34()
{
  qword_1002E2E80 = 0x4034000000000000;
}

id sub_10016FC44(uint64_t a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView____lazy_storage___continueButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView____lazy_storage___spinnerButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView____lazy_storage___cancelButton] = 0;
  sub_100153008(OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_delegate);
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_horizontalLayouts] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_verticalLayouts] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_type] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for EmergencyActionButtonsWaitingView();
  v3 = objc_msgSendSuper2(&v5, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10016FE00();

  return v3;
}

void sub_10016FD24()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView____lazy_storage___continueButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView____lazy_storage___spinnerButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView____lazy_storage___cancelButton] = 0;
  sub_100153008(OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_delegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_horizontalLayouts] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_verticalLayouts] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/EmergencyActionButtonsWaitingView.swift", 53, 2);
  __break(1u);
}

uint64_t sub_10016FDE8(uint64_t a1)
{
  return sub_10017115C(a1);
}

uint64_t sub_10016FDF4(uint64_t a1)
{
  return sub_10017115C(a1);
}

void sub_10016FE00()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t *v82;
  uint64_t v83;
  Class isa;

  v1 = v0;
  v2 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v3 = sub_100109754(v2, 88);
  *(_OWORD *)(v3 + 16) = xmmword_100243610;
  sub_10016F6B0();
  v5 = objc_msgSend(v4, "leadingAnchor");
  sub_10010E3B8();
  v7 = sub_10010E310(v6, "leadingAnchor");
  if (qword_1002D7340 != -1)
    swift_once(&qword_1002D7340, sub_10016FC34);
  v8 = sub_1001360B0(v0, "constraintEqualToAnchor:constant:");
  sub_100136680();

  *(_QWORD *)(v3 + 32) = &selRef_isUserInterfaceShowing;
  sub_10016F6B0();
  v10 = objc_msgSend(v9, "trailingAnchor");
  sub_10010E3B8();
  v12 = sub_10010E310(v11, "centerXAnchor");
  if (qword_1002D7330 != -1)
    swift_once(&qword_1002D7330, sub_10016FC10);
  v13 = sub_1001360B0(v0, "constraintEqualToAnchor:constant:");
  sub_100136680();

  *(_QWORD *)(v3 + 40) = &selRef_isUserInterfaceShowing;
  sub_10016F6B0();
  v15 = objc_msgSend(v14, "bottomAnchor");
  sub_10010E338();
  v17 = sub_10010E310(v16, "bottomAnchor");
  v18 = sub_100136274(v12, "constraintEqualToAnchor:");
  sub_10011B028();

  *(_QWORD *)(v3 + 48) = &selRef_isUserInterfaceShowing;
  sub_100171124();
  v20 = objc_msgSend(v19, "leadingAnchor");
  sub_10010E338();
  v22 = sub_10010E310(v21, "centerXAnchor");
  v23 = sub_10016780C((uint64_t)v22, "constraintEqualToAnchor:constant:");
  sub_10011B028();

  *(_QWORD *)(v3 + 56) = &selRef_isUserInterfaceShowing;
  sub_100171124();
  v25 = sub_1001711AC(v24);
  sub_10010E338();
  v27 = sub_10010E310(v26, "declineAnsweringFrontMostCallViaUserActionWithCompletionHandler:");
  v28 = sub_10016780C((uint64_t)v27, "constraintEqualToAnchor:constant:");
  sub_10011B028();

  *(_QWORD *)(v3 + 64) = &selRef_isUserInterfaceShowing;
  sub_100171124();
  v30 = objc_msgSend(v29, "bottomAnchor");
  sub_10010E338();
  v32 = sub_10010E310(v31, "bottomAnchor");
  v33 = sub_100136274(v12, "constraintEqualToAnchor:");
  sub_10011B028();

  *(_QWORD *)(v3 + 72) = &selRef_isUserInterfaceShowing;
  v35 = sub_10010E310(v34, "heightAnchor");
  sub_100171124();
  v37 = objc_msgSend(v36, "heightAnchor");
  sub_100136680();
  v38 = objc_msgSend(v35, "constraintEqualToAnchor:", &selRef_delegate);
  sub_10010E3B8();

  *(_QWORD *)(v3 + 80) = v32;
  specialized Array._endMutation()(v39, v40);
  sub_10016FDE8(v3);
  v41 = sub_100109754(v2, 88);
  *(_OWORD *)(v41 + 16) = xmmword_100243610;
  sub_10016F6B0();
  v43 = objc_msgSend(v42, "leadingAnchor");
  sub_10010E3D8();
  v45 = sub_10010E310(v44, "leadingAnchor");
  v46 = sub_10017113C();
  sub_100151298();

  *(_QWORD *)(v41 + 32) = v35;
  sub_10016F6B0();
  v48 = sub_100171174(v47);
  sub_10010E3D8();
  v50 = sub_10010E310(v49, "declineAnsweringFrontMostCallViaUserActionWithCompletionHandler:");
  v51 = sub_10017113C();
  sub_100151298();

  *(_QWORD *)(v41 + 40) = v35;
  sub_10016F6B0();
  v53 = objc_msgSend(v52, "bottomAnchor");
  sub_10010E3D8();
  v55 = sub_10010E310(v54, "bottomAnchor");
  v56 = sub_100136274((id)v3, "constraintEqualToAnchor:");
  sub_100151298();

  *(_QWORD *)(v41 + 48) = v35;
  sub_100171124();
  v58 = objc_msgSend(v57, "leadingAnchor");
  sub_10010E3D8();
  v60 = sub_10010E310(v59, "leadingAnchor");
  v61 = sub_10017113C();
  sub_100151298();

  *(_QWORD *)(v41 + 56) = v35;
  sub_10016ED48();
  v63 = sub_100171174(v62);
  sub_10010E3D8();
  v65 = sub_10010E310(v64, "declineAnsweringFrontMostCallViaUserActionWithCompletionHandler:");
  v66 = sub_10017113C();
  sub_100151298();

  *(_QWORD *)(v41 + 64) = v35;
  sub_100171124();
  v68 = objc_msgSend(v67, "bottomAnchor");
  sub_10010E3D8();
  sub_10016F6B0();
  v70 = objc_msgSend(v69, "topAnchor");
  sub_10010E338();
  v71 = sub_1001360B0((id)v3, "constraintEqualToAnchor:constant:");

  *(_QWORD *)(v41 + 72) = v71;
  v73 = sub_10010E310(v72, "topAnchor");
  sub_100171124();
  v75 = objc_msgSend(v74, "topAnchor");
  sub_10010E338();
  v76 = objc_msgSend(v73, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v41 + 80) = v76;
  specialized Array._endMutation()(v77, v78);
  v79 = sub_10016FDF4(v41);
  v80 = sub_10010E310(v79, "traitCollection");
  LODWORD(v41) = objc_msgSend(v80, "isPreferredContentSizeCategoryAccessible");

  v81 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
  v82 = &OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_verticalLayouts;
  if (!(_DWORD)v41)
    v82 = &OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_horizontalLayouts;
  v83 = *(_QWORD *)&v1[*v82];
  swift_bridgeObjectRetain(v83);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v83);
  objc_msgSend(v81, "activateConstraints:", isa);

}

void sub_100170478(uint64_t a1)
{
  char *v1;
  id v3;
  unsigned int v4;
  void *v5;
  BOOL v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  Class isa;
  Class v12;
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for EmergencyActionButtonsWaitingView();
  objc_msgSendSuper2(&v13, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "isPreferredContentSizeCategoryAccessible");

  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_1001632F8((uint64_t)v5, (unint64_t *)&qword_1002DB440);
  v6 = v4 == 0;
  if (v4)
    v7 = &OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_horizontalLayouts;
  else
    v7 = &OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_verticalLayouts;
  v8 = *v7;
  v9 = *(_QWORD *)&v1[v8];
  if (v6)
    v10 = &OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_horizontalLayouts;
  else
    v10 = &OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_verticalLayouts;
  swift_bridgeObjectRetain(*(_QWORD *)&v1[v8]);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v5, "deactivateConstraints:", isa);

  swift_bridgeObjectRetain(*(_QWORD *)&v1[*v10]);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  sub_1001094F4();
  objc_msgSend(v5, "activateConstraints:", v12);

}

void sub_100170604()
{
  char *v0;
  void *v1;
  uint64_t v2;
  id v3;
  os_log_type_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *Strong;
  id v17;
  uint64_t v18;
  uint64_t aBlock[5];
  uint64_t v20;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  sub_100108664(v2, (uint64_t)&unk_1002E2CC8);
  v3 = v1;
  sub_10014385C();
  v4 = sub_10011ADDC();
  if (sub_10010E390(v4))
  {
    v5 = (_DWORD *)sub_1001094C8(12);
    v6 = sub_1001094C8(32);
    *v5 = 136315138;
    aBlock[0] = v6;
    v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_type];
    v7 = String.init<A>(reflecting:)(&v18);
    v9 = v8;
    v18 = sub_100121E04(v7, v8, aBlock);
    sub_100143A9C((uint64_t)&v18, (uint64_t)aBlock);

    swift_bridgeObjectRelease(v9);
    sub_100171180((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: user chooses to continue request, request type: %s");
    sub_10017119C((uint64_t)&type metadata for Any);
    sub_100109440(v6);
    sub_100109440((uint64_t)v5);

  }
  else
  {

  }
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_type];
  if (v12 == 1)
  {
    v13 = objc_msgSend((id)objc_opt_self(PHInCallUtilities), "sharedInstance");
    if (v13)
    {
      v1 = v13;
      v14 = sub_100109754((uint64_t)&unk_10028BAF0, 24);
      swift_unknownObjectWeakInit(v14 + 16);
      aBlock[4] = (uint64_t)sub_100171044;
      v20 = v14;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100110294;
      aBlock[3] = (uint64_t)&unk_10028BB08;
      v15 = _Block_copy(aBlock);
      objc_msgSend(v1, "requestPasscodeUnlockWithCompletion:", v15, swift_release(v20).n128_f64[0]);
      _Block_release(v15);
LABEL_13:

      return;
    }
    __break(1u);
  }
  else if (!v12)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_delegate]);
    if (Strong)
    {
      v1 = Strong;
      objc_msgSend(Strong, "requestContinue");
      swift_unknownObjectRelease(v1);
    }
    sub_100171124();
    objc_msgSend(v17, "setUserInteractionEnabled:", 0);
    goto LABEL_13;
  }
  aBlock[0] = v12;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for PHEnhancedEmergencyRequestType, aBlock, &type metadata for PHEnhancedEmergencyRequestType);
  __break(1u);
}

void sub_100170894(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  void *Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  _BYTE v12[24];

  if ((a1 & 1) != 0
    && (v2 = a2 + 16, swift_beginAccess(a2 + 16, v12, 0, 0), (v3 = swift_unknownObjectWeakLoadStrong(v2)) != 0))
  {
    v4 = v3;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_delegate);
    if (Strong)
    {
      v6 = Strong;
      objc_msgSend(Strong, "requestContinue");

      swift_unknownObjectRelease(v6);
      return;
    }
  }
  else
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100108664(v7, (uint64_t)&unk_1002E2CC8);
    v4 = Logger.logObject.getter(v8, v9);
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v10, "EnhancedEmergency: passcode unlock failed or self doesn't exist", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }
  }

}

void *sub_1001709FC()
{
  char *v0;
  void *v1;
  uint64_t v2;
  id v3;
  os_log_type_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  sub_100108664(v2, (uint64_t)&unk_1002E2CC8);
  v3 = v1;
  sub_10014385C();
  v4 = sub_10011ADDC();
  if (sub_10010E390(v4))
  {
    v5 = (_DWORD *)sub_1001094C8(12);
    v6 = sub_1001094C8(32);
    *v5 = 136315138;
    v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_type];
    v15 = v6;
    v7 = String.init<A>(reflecting:)(&v14);
    v9 = v8;
    v14 = sub_100121E04(v7, v8, &v15);
    sub_100143A9C((uint64_t)&v14, (uint64_t)&v15);

    swift_bridgeObjectRelease(v9);
    sub_100171180((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: user chooses to cancel request, request type: %s");
    sub_10017119C((uint64_t)&type metadata for Any);
    sub_100109440(v6);
    sub_100109440((uint64_t)v5);

  }
  else
  {

  }
  result = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_delegate]);
  if (result)
  {
    v13 = result;
    objc_msgSend(result, "requestCancel");
    return (void *)swift_unknownObjectRelease(v13);
  }
  return result;
}

void sub_100170BB4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Class isa;
  void *v39;
  id v40;

  v1 = v0;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  v3 = sub_100108664(v2, (uint64_t)&unk_1002E2CC8);
  Logger.logObject.getter(v3, v4);
  v5 = sub_10011ADDC();
  if (os_log_type_enabled(v3, v5))
  {
    v6 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v5, "EnhancedEmergency: adding spinner on continue button", v6, 2u);
    sub_100109440((uint64_t)v6);
  }

  sub_10017116C();
  v8 = v7;
  objc_msgSend(v1, "addSubview:", v7);

  v9 = (void *)objc_opt_self(NSLayoutConstraint);
  v10 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v11 = sub_100109754(v10, 64);
  *(_OWORD *)(v11 + 16) = xmmword_100241800;
  sub_10017116C();
  v13 = v12;
  v14 = objc_msgSend(v12, "topAnchor");
  sub_100136680();
  sub_100171124();
  v16 = objc_msgSend(v15, "topAnchor");
  sub_100135FF8();
  v17 = sub_10017114C();
  sub_100171194();

  *(_QWORD *)(v11 + 32) = v13;
  sub_10017116C();
  v19 = v18;
  v20 = objc_msgSend(v18, "bottomAnchor");
  sub_100136680();
  sub_100171124();
  v22 = objc_msgSend(v21, "bottomAnchor");
  sub_100135FF8();
  v23 = sub_10017114C();
  sub_100171194();

  *(_QWORD *)(v11 + 40) = v19;
  sub_10017116C();
  v25 = v24;
  v26 = objc_msgSend(v24, "leadingAnchor");
  sub_100136680();
  sub_100171124();
  v28 = objc_msgSend(v27, "leadingAnchor");
  sub_100135FF8();
  v29 = sub_10017114C();
  sub_100171194();

  *(_QWORD *)(v11 + 48) = v25;
  sub_10017116C();
  v31 = sub_1001711AC(v30);
  sub_100136680();
  sub_10016ED48();
  v33 = sub_100171174(v32);
  sub_100135FF8();
  v34 = sub_10017114C();
  sub_100171194();

  *(_QWORD *)(v11 + 56) = v1;
  v37 = specialized Array._endMutation()(v35, v36);
  sub_1001632F8(v37, (unint64_t *)&qword_1002DB440);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_1001094F4();
  objc_msgSend(v9, "activateConstraints:", isa);

  sub_10016ED48();
  v40 = v39;
  objc_msgSend(v39, "setAlpha:", 0.0);

}

void sub_100170E84()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  sub_10016ED48();
  v1 = v0;
  objc_msgSend(v0, "setAlpha:", 1.0);

  sub_10016F3B0();
  v3 = v2;
  objc_msgSend(v2, "removeFromSuperview");
  sub_10014354C(v3);
}

void sub_100170ED0()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.EmergencyActionButtonsWaitingView", 47, "init(frame:)", 12, 0);
  __break(1u);
}

id sub_100170F08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmergencyActionButtonsWaitingView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EmergencyActionButtonsWaitingView()
{
  return objc_opt_self(_TtC13InCallService33EmergencyActionButtonsWaitingView);
}

ValueMetadata *type metadata accessor for PHEnhancedEmergencyRequestType()
{
  return &type metadata for PHEnhancedEmergencyRequestType;
}

unint64_t sub_100170FE4()
{
  unint64_t result;

  result = qword_1002DA7F8;
  if (!qword_1002DA7F8)
  {
    result = swift_getWitnessTable(&unk_1002436E8, &type metadata for PHEnhancedEmergencyRequestType);
    atomic_store(result, (unint64_t *)&qword_1002DA7F8);
  }
  return result;
}

uint64_t sub_100171020()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100171044(char a1)
{
  uint64_t v1;

  sub_100170894(a1, v1);
}

uint64_t sub_10017104C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10017105C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10017106C()
{
  unint64_t result;

  result = qword_1002DA808;
  if (!qword_1002DA808)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_1002DA808);
  }
  return result;
}

uint64_t sub_1001710AC()
{
  return 8;
}

uint64_t sub_1001710B8(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1001710C0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1001710D4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1001710E0(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4;

  v4 = String._bridgeToObjectiveC()();
  sub_1001094F4();
  objc_msgSend(a3, "setAccessibilityLabel:", v4);
  sub_10014354C(v4);
}

void sub_100171124()
{
  sub_10016ED48();
}

id sub_10017113C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, *(SEL *)(v2 + 2136), v0);
}

id sub_10017114C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2128), v1);
}

uint64_t sub_10017115C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + v1);
  *(_QWORD *)(v2 + v1) = a1;
  return swift_bridgeObjectRelease(v3);
}

void sub_10017116C()
{
  sub_10016F3B0();
}

id sub_100171174(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3864));
}

void sub_100171180(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_100171194()
{
  void *v0;

}

uint64_t sub_10017119C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_arrayDestroy(v1, 1, a1 + 8);
}

id sub_1001711AC(void *a1)
{
  return objc_msgSend(a1, "trailingAnchor");
}

void sub_1001711B8(void (*a1)(void))
{
  a1();
  sub_100109438();
}

void sub_1001711D4(uint64_t a1)
{
  (*(void (**)(void))(a1 + 32))();
  sub_100109438();
}

void sub_1001711F0()
{
  Hasher._combine(_:)(0);
  sub_100109438();
}

Swift::Int sub_100171210()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

Swift::Int sub_100171258(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

id sub_1001712B4()
{
  return sub_100149030(OBJC_IVAR___MPContactSearchResult_contact);
}

void sub_100171308(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___MPContactSearchResult_contact);
}

id sub_100171334()
{
  return sub_100149030(OBJC_IVAR___MPContactSearchResult_matchInfo);
}

void sub_100171388(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___MPContactSearchResult_matchInfo);
}

void *sub_1001713B4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___MPContactSearchResult_preferredPhoneNumber);
  v2 = v1;
  return v1;
}

void sub_100171428(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___MPContactSearchResult_preferredPhoneNumber);
}

void sub_100171434(void *a1, void *a2, void *a3)
{
  char *v3;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  objc_super v11;

  v6 = OBJC_IVAR___MPContactSearchResult_preferredPhoneNumber;
  *(_QWORD *)&v3[OBJC_IVAR___MPContactSearchResult_preferredPhoneNumber] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___MPContactSearchResult_contact] = a1;
  *(_QWORD *)&v3[OBJC_IVAR___MPContactSearchResult_matchInfo] = a2;
  v7 = *(void **)&v3[v6];
  *(_QWORD *)&v3[v6] = a3;
  v8 = a1;
  v9 = a2;
  v10 = a3;

  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for ContactSearchResult();
  objc_msgSendSuper2(&v11, "init");

  sub_10013621C();
}

void sub_100171524()
{
  sub_10011B030((uint64_t)"InCallService.ContactSearchResult", 33, (uint64_t)"init()");
  __break(1u);
}

id sub_100171554()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContactSearchResult();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContactSearchResult()
{
  return objc_opt_self(MPContactSearchResult);
}

id sub_1001715E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___MPContactSearchManager____lazy_storage___ranker;
  v2 = *(void **)(v0 + OBJC_IVAR___MPContactSearchManager____lazy_storage___ranker);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___MPContactSearchManager____lazy_storage___ranker);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)PHContactsSearchResultsRanker), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_100171658()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  v1 = *(NSObject **)(v0 + OBJC_IVAR___MPContactSearchManager_accessQueue);
  v2 = sub_100174764((uint64_t)&unk_10028BBE8);
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = sub_100174764((uint64_t)&unk_10028BC10);
  *(_QWORD *)(v3 + 16) = sub_10017412C;
  *(_QWORD *)(v3 + 24) = v2;
  sub_10010E350((uint64_t)sub_1001711D4, (uint64_t)_NSConcreteStackBlock, 1107296256, v6, v7);
  sub_1001747B4();
  swift_retain();
  sub_100174818();
  sub_100174810(v1);
  sub_100174808();
  sub_10017477C(v3, (uint64_t)"", 94, 53);
  result = sub_100174850();
  if ((v0 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = v8[0];
    sub_100110FF0();
    return v5;
  }
  return result;
}

uint64_t sub_100171758(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a2 + OBJC_IVAR___MPContactSearchManager__searchString + 8);
  v3 = a1[1];
  *a1 = *(_QWORD *)(a2 + OBJC_IVAR___MPContactSearchManager__searchString);
  a1[1] = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v3);
}

void sub_100171794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSObject *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(NSObject **)(v2 + OBJC_IVAR___MPContactSearchManager_accessQueue);
  v6 = (_QWORD *)sub_100109754((uint64_t)&unk_10028BE18, 40);
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  v7 = sub_100174764((uint64_t)&unk_10028BE40);
  *(_QWORD *)(v7 + 16) = sub_1001745AC;
  *(_QWORD *)(v7 + 24) = v6;
  sub_10010E350((uint64_t)sub_1001711D4, (uint64_t)_NSConcreteStackBlock, 1107296256, v8, v9);
  sub_1001747B4();
  swift_retain();
  sub_100174818();
  sub_100174810(v5);
  sub_100174808();
  sub_10017477C(v7, (uint64_t)"", 94, 59);
  sub_100174844();
  sub_100110FF0();
  if ((v2 & 1) != 0)
    __break(1u);
  else
    sub_1001747A0();
}

uint64_t sub_10017187C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a1 + OBJC_IVAR___MPContactSearchManager__searchString);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR___MPContactSearchManager__searchString + 8);
  *v3 = a2;
  v3[1] = a3;
  swift_bridgeObjectRetain(a3);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1001718B4()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  _QWORD *v6;
  _QWORD aBlock[6];
  _QWORD *v8;

  v8 = _swiftEmptyArrayStorage;
  v1 = *(NSObject **)&v0[OBJC_IVAR___MPContactSearchManager_accessQueue];
  v2 = sub_100174764((uint64_t)&unk_10028BD28);
  *(_QWORD *)(v2 + 16) = &v8;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = sub_100174764((uint64_t)&unk_10028BD50);
  *(_QWORD *)(v3 + 16) = sub_1001743AC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_10017472C;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001711D4;
  aBlock[3] = &unk_10028BD68;
  _Block_copy(aBlock);
  v4 = v0;
  swift_retain();
  sub_100174818();
  sub_100174810(v1);
  sub_100174808();
  sub_10017477C(v3, (uint64_t)"", 94, 69);
  result = sub_100174850();
  if ((v0 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = v8;
    sub_100110FF0();
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_1001719C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a2 + OBJC_IVAR___MPContactSearchManager__contactSearchResults);
  v3 = *a1;
  *a1 = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v3);
}

void sub_1001719FC(uint64_t a1)
{
  uint64_t v1;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(NSObject **)(v1 + OBJC_IVAR___MPContactSearchManager_accessQueue);
  v4 = sub_100174764((uint64_t)&unk_10028BDA0);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = sub_100174764((uint64_t)&unk_10028BDC8);
  *(_QWORD *)(v5 + 16) = sub_1001743E0;
  *(_QWORD *)(v5 + 24) = v4;
  sub_10010E350((uint64_t)sub_1001711D4, (uint64_t)_NSConcreteStackBlock, 1107296256, v6, v7);
  sub_1001747B4();
  swift_retain();
  sub_100174818();
  sub_100174810(v3);
  sub_100174808();
  sub_10017477C(v5, (uint64_t)"", 94, 75);
  sub_100174844();
  sub_100110FF0();
  if ((v1 & 1) != 0)
    __break(1u);
  else
    sub_1001747A0();
}

uint64_t sub_100171AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR___MPContactSearchManager__contactSearchResults);
  *(_QWORD *)(a1 + OBJC_IVAR___MPContactSearchManager__contactSearchResults) = a2;
  swift_bridgeObjectRetain(a2);
  return swift_bridgeObjectRelease(v2);
}

id sub_100171B0C(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  char **v27;
  id v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  objc_class *ObjectType;
  objc_super v36;
  _QWORD *v37;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v32 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32, v5);
  sub_10010BC88();
  v8 = v7 - v6;
  v9 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v9, v10);
  sub_10010BC88();
  v13 = v12 - v11;
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14, v15);
  sub_10010BC88();
  v18 = v17 - v16;
  v19 = OBJC_IVAR___MPContactSearchManager_featureFlags;
  v20 = objc_allocWithZone((Class)TUFeatureFlags);
  v21 = v3;
  *(_QWORD *)&v3[v19] = objc_msgSend(v20, "init");
  *(_QWORD *)&v21[OBJC_IVAR___MPContactSearchManager____lazy_storage___ranker] = 0;
  v31 = OBJC_IVAR___MPContactSearchManager_accessQueue;
  sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  v37 = _swiftEmptyArrayStorage;
  v22 = sub_1001745BC();
  v23 = sub_1001085C0((uint64_t *)&unk_1002DA920);
  v24 = sub_100110DE0((unint64_t *)&qword_1002D8CF0, (uint64_t *)&unk_1002DA920, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v37, v23, v24, v9, v22);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v32);
  *(_QWORD *)&v21[v31] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002ALL, 0x80000001001F50A0, v18, v13, v8, 0);
  v25 = &v21[OBJC_IVAR___MPContactSearchManager__searchString];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0xE000000000000000;
  *(_QWORD *)&v21[OBJC_IVAR___MPContactSearchManager__contactSearchResults] = _swiftEmptyArrayStorage;
  Logger.init(subsystem:category:)(0xD00000000000001BLL, 0x80000001001F01D0, 0xD000000000000014, 0x80000001002437B0);
  *(_QWORD *)&v21[OBJC_IVAR___MPContactSearchManager_contactSearchType] = a1;
  if (a2)
  {
    v26 = a2;
    v27 = &selRef_hideOrShowThirdPartyBackgroundImageWithImage_;
  }
  else
  {
    v27 = &selRef_hideOrShowThirdPartyBackgroundImageWithImage_;
    v26 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  }
  *(_QWORD *)&v21[OBJC_IVAR___MPContactSearchManager_contactStore] = v26;
  v28 = a2;

  v36.receiver = v21;
  v36.super_class = ObjectType;
  v29 = objc_msgSendSuper2(&v36, v27[87]);

  return v29;
}

_QWORD *sub_100171E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_1001718B4();
  v1 = v0;
  if ((unint64_t)v0 >> 62)
  {
    if (v0 >= 0)
      v0 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = _CocoaArrayWrapper.endIndex.getter(v0);
    if (!v2)
      goto LABEL_13;
  }
  else
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
    {
LABEL_13:
      sub_1001096DC();
      return _swiftEmptyArrayStorage;
    }
  }
  result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v5 = (char *)*(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = *(id *)&v5[OBJC_IVAR___MPContactSearchResult_contact];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
      specialized ContiguousArray._endMutation()(v10);
    }
    while (v2 != v4);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100171FB4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 200) = a2;
  *(_QWORD *)(v4 + 208) = v3;
  *(_BYTE *)(v4 + 264) = a3;
  *(_QWORD *)(v4 + 192) = a1;
  v5 = type metadata accessor for Date(0);
  *(_QWORD *)(v4 + 216) = v5;
  *(_QWORD *)(v4 + 224) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 232) = sub_100174800();
  *(_QWORD *)(v4 + 240) = sub_100174800();
  *(_QWORD *)(v4 + 248) = sub_100174800();
  *(_QWORD *)(v4 + 256) = sub_100174800();
  return swift_task_switch(sub_100172060, 0, 0);
}

uint64_t sub_100172060()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  void *v35;
  _QWORD *v36;
  NSObject *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  double v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  id v97;
  void *v98;
  uint64_t v99;
  unint64_t v100;
  void *v101;
  NSObject *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint8_t *v113;
  __n128 v114;
  uint64_t v115;
  double v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  NSObject *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  os_log_type_t v128;
  uint64_t v129;
  uint64_t v130;
  uint8_t *v131;
  __n128 v132;
  uint64_t v133;
  double v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t *v152;
  _QWORD *aBlock;
  uint64_t v154;
  uint64_t v155;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = _swiftEmptyArrayStorage;
  if (!v1)
    goto LABEL_53;
  v3 = *(_BYTE *)(v0 + 264);
  sub_100174788();
  v4 = v1;
  if ((v3 & 1) == 0)
  {
    v21 = *(_QWORD *)(v0 + 192);
    v22 = sub_100171658();
    if (v22 == v21 && v1 == v23)
    {
      sub_1001094F4();
    }
    else
    {
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, *(_QWORD *)(v0 + 192), v1, 0);
      sub_1001094F4();
      if ((v25 & 1) == 0)
      {
        v4 = *(_QWORD *)(v0 + 200);
        goto LABEL_3;
      }
    }
    sub_100174798();
    v2 = (_QWORD *)sub_1001718B4();
    goto LABEL_53;
  }
LABEL_3:
  v5 = *(_QWORD *)(v0 + 192);
  sub_100174788();
  sub_100171794(v5, v1);
  v6 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v6 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    sub_100174798();
    sub_1001719FC((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_53;
  }
  v151 = v0 + 160;
  v7 = swift_bridgeObjectRetain_n(v1, 2);
  v9 = Logger.logObject.getter(v7, v8);
  v10 = static os_log_type_t.default.getter();
  v149 = v0 + 144;
  v147 = v0 + 184;
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)sub_100174770();
    v154 = sub_1001094C8(32);
    *(_DWORD *)v11 = 136446210;
    v12 = sub_100174788();
    *(_QWORD *)(v0 + 184) = sub_1001747F0(v12, v13, v14, v15, v16, v17, v18, v19, v146, v147);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v11 + 4, v11 + 12);
    sub_100174820();
    sub_100109638((void *)&_mh_execute_header, v9, v10, "Searching for %{public}s", v11);
    sub_100109598(v154, v20, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v154);
    sub_100109440((uint64_t)v11);
  }
  else
  {
    sub_10017482C();
  }

  v26 = *(char **)(v0 + 208);
  v27 = *(_QWORD *)(v0 + 192);
  sub_10010BBE8(0, (unint64_t *)&unk_1002DA8E8, CNContactFetchRequest_ptr);
  v28 = sub_100172BF4();
  v29 = sub_100172DDC(v28);
  sub_100172E54();
  v31 = v30;
  objc_msgSend(v29, "setPredicate:", v30);

  Date.init()(objc_msgSend(v29, "setSortOrder:", 1));
  v32 = sub_100109754((uint64_t)&unk_10028BC88, 24);
  *(_QWORD *)(v32 + 16) = _swiftEmptyArrayStorage;
  v152 = (uint64_t *)(v32 + 16);
  v33 = sub_100109754((uint64_t)&unk_10028BCB0, 17);
  *(_BYTE *)(v33 + 16) = 0;
  v34 = (_BYTE *)(v33 + 16);
  v35 = *(void **)&v26[OBJC_IVAR___MPContactSearchManager_contactStore];
  v36 = (_QWORD *)sub_100109754((uint64_t)&unk_10028BCD8, 56);
  v36[2] = v26;
  v36[3] = v27;
  v36[4] = v1;
  v36[5] = v33;
  v36[6] = v32;
  *(_QWORD *)(v0 + 48) = sub_100174284;
  *(_QWORD *)(v0 + 56) = v36;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1001736A8;
  *(_QWORD *)(v0 + 40) = &unk_10028BCF0;
  v37 = _Block_copy((const void *)(v0 + 16));
  v38 = *(_QWORD *)(v0 + 56);
  sub_100174788();
  v39 = v26;
  v40 = v32;
  swift_retain();
  swift_retain();
  *(_QWORD *)&v41 = swift_release(v38).n128_u64[0];
  *(_QWORD *)(v0 + 160) = 0;
  v150 = v29;
  LODWORD(v35) = objc_msgSend(v35, "enumerateContactsAndMatchInfoWithFetchRequest:error:usingBlock:", v29, v151, v37, v41);
  _Block_release(v37);
  v42 = *(id *)(v0 + 160);
  if ((_DWORD)v35)
  {
    sub_100110F6C((uint64_t)v34, v0 + 112);
    if (*v34 == 1)
    {
      sub_100174788();
      v43 = sub_100174790();
      v44 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)sub_100174770();
        v155 = sub_1001094C8(32);
        *(_DWORD *)v45 = 136446210;
        v46 = sub_100174788();
        *(_QWORD *)(v0 + 176) = sub_1001747F0(v46, v47, v48, v49, v50, v51, v52, v53, v146, v147);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v148, v45 + 4, v45 + 12);
        sub_100174820();
        sub_100109638((void *)&_mh_execute_header, v43, v44, "Search was cancelled for %{public}s", v45);
        sub_100109598(v155, v54, (uint64_t)&type metadata for Any + 8);
        sub_100109440(v155);
        sub_100109440((uint64_t)v45);
      }
      else
      {
        sub_10017482C();
      }

      v65 = sub_100174370();
      v57 = swift_allocError(&type metadata for ContactSearchError, v65, 0, 0);
      v56 = v57;
      goto LABEL_29;
    }
    v58 = v0 + 88;
    sub_100174798();
    swift_retain();
    sub_100174790();
    v59 = (_QWORD *)v32;
    v60 = sub_10017485C();
    if (os_log_type_enabled(v37, v60))
    {
      aBlock = (_QWORD *)v32;
      v61 = (uint8_t *)sub_100174770();
      *(_DWORD *)v61 = 134349056;
      v62 = v32 + 16;
      sub_100110F6C((uint64_t)v152, v0 + 64);
      v63 = *v152;
      if ((unint64_t)*v152 >> 62)
      {
        if (v63 < 0)
          v145 = *v152;
        else
          v145 = v63 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v152);
        v64 = _CocoaArrayWrapper.endIndex.getter(v145);
        sub_1001096DC();
      }
      else
      {
        v64 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      *(_QWORD *)(v0 + 168) = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v61 + 4, v61 + 12);
      v59 = aBlock;
      sub_100110FF0();
      sub_100109638((void *)&_mh_execute_header, v37, v60, "Found %{public}ld contacts", v61);
      sub_100109440((uint64_t)v61);
      v58 = v0 + 88;
    }
    else
    {
      sub_100110FF0();
      v62 = v32 + 16;
    }

    sub_100110F6C(v62, v58);
    swift_bridgeObjectRetain(v59[2]);
    sub_1001719FC(v81);
    sub_100110FF0();
    swift_release(v33);
    v82 = sub_1001718B4();
    v83 = *(void **)(v0 + 208);
    if ((unint64_t)v82 >> 62)
      goto LABEL_55;
    v84 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10);
    v85 = v83;
    swift_bridgeObjectRetain(v82);
    for (; v84; v84 = _CocoaArrayWrapper.endIndex.getter(v143))
    {
      v86 = 0;
      while (1)
      {
        v87 = (v82 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v86, v82)
            : (char *)*(id *)(v82 + 8 * v86 + 32);
        v88 = v87;
        v89 = v86 + 1;
        if (__OFADD__(v86, 1))
          break;
        v90 = sub_1001742FC(*(id *)&v87[OBJC_IVAR___MPContactSearchResult_matchInfo]);
        if (v90)
        {
          v91 = v90;
          type metadata accessor for SearchUtilities();
          static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactPhoneNumbersKey);
          v92 = sub_1001747D8();
          sub_10017E3F4(v92, v93, v94);
          v96 = v95;
          sub_100174838();
          swift_bridgeObjectRelease(v91);
          if ((v96 & 1) != 0)
          {
            v97 = *(id *)&v88[OBJC_IVAR___MPContactSearchResult_contact];
            sub_100171658();
            v98 = (void *)sub_1001747D8();
            v101 = sub_10017E63C(v98, v99, v100);

            sub_100174838();
            sub_100171428((uint64_t)v101);
          }
        }

        ++v86;
        if (v89 == v84)
          goto LABEL_45;
      }
      __break(1u);
LABEL_55:
      if (v82 < 0)
        v143 = v82;
      else
        v143 = v82 & 0xFFFFFFFFFFFFFF8;
      v144 = v83;
      swift_bridgeObjectRetain(v82);
    }
LABEL_45:
    v102 = v82;

    v104 = *(_QWORD *)(v0 + 248);
    v103 = *(_QWORD *)(v0 + 256);
    v106 = *(_QWORD *)(v0 + 216);
    v105 = *(_QWORD *)(v0 + 224);
    swift_bridgeObjectRelease_n(v82, 2);
    v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16);
    v107(v104, v103, v106);
    sub_100174790();
    v108 = sub_10017485C();
    v109 = sub_1001747C8(v108);
    v110 = *(_QWORD *)(v0 + 248);
    if (v109)
    {
      v111 = *(_QWORD *)(v0 + 240);
      v112 = *(_QWORD *)(v0 + 224);
      v113 = (uint8_t *)sub_100174770();
      v114.n128_u64[0] = 134349056;
      *(_DWORD *)v113 = 134349056;
      v115 = static Date.now.getter(v114);
      v116 = Date.timeIntervalSinceReferenceDate.getter(v115);
      v117 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
      v118 = sub_1001747C0(v111);
      *(double *)(v0 + 152) = v116 - Date.timeIntervalSinceReferenceDate.getter(v118);
      v119 = v117;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v151, v113 + 4, v113 + 12);
      sub_1001747C0(v110);
      sub_100109638((void *)&_mh_execute_header, v102, (os_log_type_t)v104, "Contact search time: %{public}f", v113);
      sub_100109440((uint64_t)v113);

    }
    else
    {
      v121 = *(_QWORD *)(v0 + 216);
      v120 = *(_QWORD *)(v0 + 224);

      v119 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
      v119(v110, v121);
    }
    if (objc_msgSend(*(id *)(*(_QWORD *)(v0 + 208) + OBJC_IVAR___MPContactSearchManager_featureFlags), "smartDialerRankingEnabled"))
    {
      v122 = *(NSObject **)(v0 + 256);
      v123 = *(_QWORD *)(v0 + 232);
      v124 = *(_QWORD *)(v0 + 216);
      v125 = sub_1001718B4();
      sub_100173724(v125);
      v127 = v126;
      sub_100174798();
      sub_1001719FC(v127);
      v107(v123, (uint64_t)v122, v124);
      sub_100174790();
      v128 = sub_10017485C();
      if (sub_1001747C8(v128))
      {
        v130 = *(_QWORD *)(v0 + 232);
        v129 = *(_QWORD *)(v0 + 240);
        v131 = (uint8_t *)sub_100174770();
        v132.n128_u64[0] = 134349056;
        *(_DWORD *)v131 = 134349056;
        v133 = static Date.now.getter(v132);
        v134 = Date.timeIntervalSinceReferenceDate.getter(v133);
        v135 = sub_1001747C0(v129);
        *(double *)(v0 + 144) = v134 - Date.timeIntervalSinceReferenceDate.getter(v135);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v149, v0 + 152, v131 + 4, v131 + 12);
        sub_1001747C0(v130);
        sub_100109638((void *)&_mh_execute_header, v122, (os_log_type_t)v123, "Contact ranking time: %{public}f", v131);
        sub_100109440((uint64_t)v131);

      }
      else
      {
        v136 = *(_QWORD *)(v0 + 232);
        v137 = *(_QWORD *)(v0 + 216);

        v119(v136, v137);
      }
    }
    v138 = *(_QWORD *)(v0 + 256);
    v139 = *(_QWORD *)(v0 + 216);
    v2 = (_QWORD *)sub_1001718B4();

    v119(v138, v139);
LABEL_53:
    v140 = *(_QWORD *)(v0 + 248);
    v142 = *(_QWORD *)(v0 + 232);
    v141 = *(_QWORD *)(v0 + 240);
    swift_task_dealloc(*(_QWORD *)(v0 + 256));
    swift_task_dealloc(v140);
    swift_task_dealloc(v141);
    swift_task_dealloc(v142);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v2);
  }
  v55 = v42;
  sub_100174798();
  v56 = _convertNSErrorToError(_:)(v55);

LABEL_29:
  swift_willThrow(v57);
  swift_release(v40);
  swift_release(v33);
  sub_1001360B8();
  sub_1001360B8();
  v66 = sub_100174790();
  v67 = static os_log_type_t.error.getter(v66);
  if (os_log_type_enabled(v66, v67))
  {
    v68 = (uint8_t *)sub_100174770();
    v69 = (_QWORD *)sub_1001094C8(8);
    *(_DWORD *)v68 = 138412290;
    sub_1001360B8();
    v70 = _swift_stdlib_bridgeErrorToNSError(v56);
    *(_QWORD *)(v0 + 136) = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v149, v68 + 4, v68 + 12);
    *v69 = v70;
    sub_100135EB4();
    sub_100135EB4();
    sub_100109638((void *)&_mh_execute_header, v66, v67, "Error searching contacts %@", v68);
    v71 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v69, v72, v71);
    sub_100109440((uint64_t)v69);
    sub_100109440((uint64_t)v68);

  }
  else
  {

    sub_100135EB4();
    v73 = sub_100135EB4();
  }
  v75 = *(_QWORD *)(v0 + 248);
  v74 = *(_QWORD *)(v0 + 256);
  v77 = *(_QWORD *)(v0 + 232);
  v76 = *(_QWORD *)(v0 + 240);
  v78 = *(_QWORD *)(v0 + 216);
  v79 = *(_QWORD *)(v0 + 224);
  swift_willThrow(v73);

  (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v74, v78);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100172BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSString *v6;
  NSString *v7;
  NSString *v8;
  NSString *v9;
  NSString *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = v0;
  v2 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100243790;
  *(_QWORD *)(v3 + 32) = CNContactIdentifierKey;
  *(_QWORD *)(v3 + 40) = CNContactPhoneNumbersKey;
  *(_QWORD *)(v3 + 48) = CNContactEmailAddressesKey;
  *(_QWORD *)(v3 + 56) = CNContactNicknameKey;
  *(_QWORD *)(v3 + 64) = CNContactOrganizationNameKey;
  v23 = v3;
  specialized Array._endMutation()(v3, v4);
  v5 = (void *)objc_opt_self(CNContactFormatter);
  v6 = CNContactIdentifierKey;
  v7 = CNContactPhoneNumbersKey;
  v8 = CNContactEmailAddressesKey;
  v9 = CNContactNicknameKey;
  v10 = CNContactOrganizationNameKey;
  v11 = objc_msgSend(v5, "descriptorForRequiredKeysForStyle:", 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v13 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v12 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v13 >= v12 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1);
  v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
  specialized Array._endMutation()(v14, v15);
  v16 = objc_msgSend((id)objc_opt_self(CNGeminiManager), "descriptorForRequiredKeys");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v18 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v17 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
  specialized Array._endMutation()(v19, v20);
  if (!*(_QWORD *)(v1 + OBJC_IVAR___MPContactSearchManager_contactSearchType))
  {
    v21 = sub_100173D44();
    sub_100173E4C(v21);
  }
  return v23;
}

id sub_100172DDC(uint64_t a1)
{
  uint64_t v1;
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1));
  sub_1001085C0(&qword_1002D93E0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v5 = objc_msgSend(v3, "initWithKeysToFetch:", isa);

  return v5;
}

void sub_100172E54()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;

  v1 = (void *)objc_opt_self(NSPredicate);
  v2 = objc_msgSend(v1, "predicateWithValue:", 0);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___MPContactSearchManager_contactSearchType);
  if ((unint64_t)(v3 - 1) < 3)
  {
    v4 = (void *)objc_opt_self(CNContact);
    sub_100171658();
    v5 = String._bridgeToObjectiveC()();
    sub_1001094F4();
    v6 = objc_msgSend(v4, "predicateForContactsMatchingSmartDialerString:", v5);

    if (!v6)
      v7 = objc_msgSend(v1, "predicateWithValue:", 0);
    goto LABEL_6;
  }
  if (!v3)
  {
    v8 = (void *)objc_opt_self(CNContact);
    sub_100171658();
    v9 = String._bridgeToObjectiveC()();
    sub_1001094F4();
    v10 = objc_msgSend(v8, "predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:", v9, 0, 0);

LABEL_6:
    sub_10013621C();
    return;
  }
  v11 = *(_QWORD *)(v0 + OBJC_IVAR___MPContactSearchManager_contactSearchType);
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for ContactSearchType, &v11, &type metadata for ContactSearchType);
  __break(1u);
}

uint64_t sub_100172FA4(void *a1, void *a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  __n128 v21;
  uint64_t result;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];

  v16 = sub_100171658();
  if (v16 == a5 && v17 == a6)
  {
    swift_bridgeObjectRelease(a6);
  }
  else
  {
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, a5, a6, 0);
    swift_bridgeObjectRelease(v19);
    if ((v20 & 1) == 0)
      goto LABEL_9;
  }
  if ((static Task<>.isCancelled.getter(v21) & 1) != 0)
  {
LABEL_9:
    *a3 = 1;
    result = swift_beginAccess(a7 + 16, v36, 1, 0);
    *(_BYTE *)(a7 + 16) = 1;
    return result;
  }
  if (!*(_QWORD *)(a4 + OBJC_IVAR___MPContactSearchManager_contactSearchType))
    goto LABEL_15;
  v23 = objc_msgSend(a1, "phoneNumbers");
  v24 = sub_1001085C0(&qword_1002DA900);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  if ((unint64_t)v25 >> 62)
  {
    v35 = v25 < 0 ? v25 : v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v25);
    v26 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v25);
  }
  else
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = swift_bridgeObjectRelease(v25);
  if (v26)
  {
LABEL_15:
    result = sub_10017318C(a2);
    if ((result & 1) != 0)
    {
      v27 = (_QWORD *)(a8 + 16);
      v28 = objc_allocWithZone((Class)type metadata accessor for ContactSearchResult());
      sub_100171434(a1, a2, 0);
      v30 = v29;
      v31 = swift_beginAccess(v27, v36, 33, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v32 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_100181D7C(v32);
      v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
      specialized Array._endMutation()(v33, v34);
      return swift_endAccess(v36);
    }
  }
  return result;
}

uint64_t sub_10017318C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;

  v2 = sub_100174294(a1);
  v3 = *(_QWORD **)(v1 + OBJC_IVAR___MPContactSearchManager_contactSearchType);
  v4 = v2;
  switch((unint64_t)v3)
  {
    case 0uLL:
    case 1uLL:
      swift_bridgeObjectRelease(v2);
      v5 = 1;
      return v5 & 1;
    case 2uLL:
      if (!v2)
        goto LABEL_63;
      sub_10017EB74(v2, &v59);
      v6 = v59;
      v7 = v60;
      v8 = v62;
      v9 = v63;
      v10 = (unint64_t)(v61 + 64) >> 6;
      v48 = v4;
      swift_bridgeObjectRetain(v4);
      v11 = _swiftEmptyArrayStorage;
      while (2)
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v8 << 6);
LABEL_25:
          sub_10011D608(v6[6] + 40 * v13, (uint64_t)&v56);
          v53 = v56;
          v54 = v57;
          v55 = v58;
          sub_10011D608((uint64_t)&v53, (uint64_t)v50);
          if ((swift_dynamicCast(&v51, v50, &type metadata for AnyHashable, &type metadata for String, 6) & 1) == 0)
          {
            v51 = 0;
            v52 = 0;
          }
          sub_10011D238((uint64_t)&v53);
          v18 = v52;
          if (v52)
          {
            v19 = v51;
            if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
            {
              sub_10019BB24();
              v11 = v21;
            }
            v20 = v11[2];
            if (v20 >= v11[3] >> 1)
            {
              sub_10019BB24();
              v11 = v22;
            }
            v11[2] = v20 + 1;
            v3 = &v11[2 * v20];
            v3[4] = v19;
            v3[5] = v18;
          }
          continue;
        }
        break;
      }
      v14 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        v59 = v3;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for ContactSearchType, &v59, &type metadata for ContactSearchType);
        __break(1u);
        JUMPOUT(0x100173698);
      }
      if (v14 >= v10)
        goto LABEL_64;
      v15 = *(_QWORD *)(v7 + 8 * v14);
      v16 = v8 + 1;
      if (v15)
        goto LABEL_24;
      v16 = v8 + 2;
      if (v8 + 2 >= v10)
        goto LABEL_64;
      v15 = *(_QWORD *)(v7 + 8 * v16);
      if (v15)
        goto LABEL_24;
      v16 = v8 + 3;
      if (v8 + 3 >= v10)
        goto LABEL_64;
      v15 = *(_QWORD *)(v7 + 8 * v16);
      if (v15)
        goto LABEL_24;
      v16 = v8 + 4;
      if (v8 + 4 >= v10)
        goto LABEL_64;
      v15 = *(_QWORD *)(v7 + 8 * v16);
      if (v15)
        goto LABEL_24;
      v16 = v8 + 5;
      if (v8 + 5 >= v10)
        goto LABEL_64;
      v15 = *(_QWORD *)(v7 + 8 * v16);
      if (v15)
        goto LABEL_24;
      v16 = v8 + 6;
      if (v8 + 6 < v10)
      {
        v15 = *(_QWORD *)(v7 + 8 * v16);
        if (!v15)
        {
          v17 = v8 + 7;
          do
          {
            if (v17 >= v10)
              goto LABEL_64;
            v15 = *(_QWORD *)(v7 + 8 * v17++);
          }
          while (!v15);
          v16 = v17 - 1;
        }
LABEL_24:
        v9 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v16 << 6);
        v8 = v16;
        goto LABEL_25;
      }
LABEL_64:
      swift_bridgeObjectRelease(v48);
      swift_release(v6);
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactPhoneNumbersKey);
      v42 = v41;
      v5 = sub_100195068(v40, v41, v11);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v42);
      return v5 & 1;
    case 3uLL:
      if (!v2)
      {
LABEL_63:
        v5 = 0;
        return v5 & 1;
      }
      sub_10017EB74(v2, &v59);
      v23 = v59;
      v24 = v60;
      v25 = v62;
      v26 = v63;
      v27 = (unint64_t)(v61 + 64) >> 6;
      v49 = v4;
      swift_bridgeObjectRetain(v4);
      v28 = _swiftEmptyArrayStorage;
      while (2)
      {
        if (v26)
        {
          v29 = __clz(__rbit64(v26));
          v26 &= v26 - 1;
          v30 = v29 | (v25 << 6);
LABEL_55:
          sub_10011D608(v23[6] + 40 * v30, (uint64_t)&v56);
          v53 = v56;
          v54 = v57;
          v55 = v58;
          sub_10011D608((uint64_t)&v53, (uint64_t)v50);
          if ((swift_dynamicCast(&v51, v50, &type metadata for AnyHashable, &type metadata for String, 6) & 1) == 0)
          {
            v51 = 0;
            v52 = 0;
          }
          sub_10011D238((uint64_t)&v53);
          v35 = v52;
          if (v52)
          {
            v36 = v51;
            if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
            {
              sub_10019BB24();
              v28 = v38;
            }
            v37 = v28[2];
            if (v37 >= v28[3] >> 1)
            {
              sub_10019BB24();
              v28 = v39;
            }
            v28[2] = v37 + 1;
            v3 = &v28[2 * v37];
            v3[4] = v36;
            v3[5] = v35;
          }
          continue;
        }
        break;
      }
      v31 = v25 + 1;
      if (__OFADD__(v25, 1))
        goto LABEL_68;
      if (v31 >= v27)
        goto LABEL_65;
      v32 = *(_QWORD *)(v24 + 8 * v31);
      v33 = v25 + 1;
      if (v32)
        goto LABEL_54;
      v33 = v25 + 2;
      if (v25 + 2 >= v27)
        goto LABEL_65;
      v32 = *(_QWORD *)(v24 + 8 * v33);
      if (v32)
        goto LABEL_54;
      v33 = v25 + 3;
      if (v25 + 3 >= v27)
        goto LABEL_65;
      v32 = *(_QWORD *)(v24 + 8 * v33);
      if (v32)
        goto LABEL_54;
      v33 = v25 + 4;
      if (v25 + 4 >= v27)
        goto LABEL_65;
      v32 = *(_QWORD *)(v24 + 8 * v33);
      if (v32)
        goto LABEL_54;
      v33 = v25 + 5;
      if (v25 + 5 >= v27)
        goto LABEL_65;
      v32 = *(_QWORD *)(v24 + 8 * v33);
      if (v32)
        goto LABEL_54;
      v33 = v25 + 6;
      if (v25 + 6 < v27)
      {
        v32 = *(_QWORD *)(v24 + 8 * v33);
        if (!v32)
        {
          v34 = v25 + 7;
          do
          {
            if (v34 >= v27)
              goto LABEL_65;
            v32 = *(_QWORD *)(v24 + 8 * v34++);
          }
          while (!v32);
          v33 = v34 - 1;
        }
LABEL_54:
        v26 = (v32 - 1) & v32;
        v30 = __clz(__rbit64(v32)) + (v33 << 6);
        v25 = v33;
        goto LABEL_55;
      }
LABEL_65:
      swift_bridgeObjectRelease(v49);
      swift_release(v23);
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactPhoneNumbersKey);
      v45 = v44;
      v46 = sub_100195068(v43, v44, v28);
      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v45);
      v5 = v46 ^ 1;
      return v5 & 1;
    default:
      goto LABEL_69;
  }
}

void sub_1001736A8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  void (*v8)(id, id, uint64_t);
  id v9;
  id v10;

  v8 = *(void (**)(id, id, uint64_t))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v10 = a2;
  v9 = a3;
  v8(v10, v9, a4);
  swift_release(v7);

}

double sub_100173724(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  Class isa;
  id v5;
  double result;

  if (*(_QWORD *)(v1 + OBJC_IVAR___MPContactSearchManager_contactSearchType))
  {
    v2 = sub_1001715E8();
    v3 = type metadata accessor for ContactSearchResult();
    isa = Array._bridgeToObjectiveC()().super.isa;
    v5 = objc_msgSend(v2, "rankContactSearchResults:", isa);

    static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v3);
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRetain(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_100173844(uint64_t a1, char a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  if (a1)
  {
    a1 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v9 = v8;
  }
  else
  {
    v9 = 0;
  }
  v4[4] = v9;
  v10 = dword_1002DA8E4;
  a4;
  v11 = (_QWORD *)swift_task_alloc(v10);
  v4[5] = v11;
  *v11 = v4;
  v11[1] = sub_1001738F0;
  return sub_100171FB4(a1, v9, a2 & 1);
}

uint64_t sub_1001738F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  void *v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *(void **)(*v1 + 16);
  v4 = *v1;
  swift_task_dealloc(v2);

  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 32));
  if (v0)
  {
    v5 = _convertErrorToNSError(_:)(v0);
    sub_100135EB4();
    isa = 0;
    v7 = (void *)v5;
  }
  else
  {
    type metadata accessor for ContactSearchResult();
    isa = Array._bridgeToObjectiveC()().super.isa;
    sub_1001094F4();
    v5 = 0;
    v7 = isa;
  }
  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v4 + 24);
  ((void (**)(_QWORD, Class, uint64_t))v8)[2](v8, isa, v5);

  _Block_release(v8);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

void sub_1001739B8()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;

  v35 = v0;
  v2 = Logger.logObject.getter(v35, v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)sub_100174770();
    v5 = sub_1001094C8(32);
    v39 = v5;
    *(_DWORD *)v4 = 136446210;
    v6 = sub_100171658();
    v38 = sub_100121E04(v6, v7, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v4 + 4, v4 + 12);
    v8 = sub_1001094F4();
    sub_100109874(v8, v9, v10, v11, v12, v13, v14, v15, v33, v35);
    sub_100109874(v16, v17, v18, v19, v20, v21, v22, v23, v34, v36);
    sub_100109638((void *)&_mh_execute_header, v2, v3, "Search cancelled for %{public}s", v4);
    sub_100109598(v5, v24, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v5);
    sub_100109440((uint64_t)v4);

  }
  else
  {

    sub_100109874(v25, v26, v27, v28, v29, v30, v31, v32, v33, v35);
  }
}

void sub_100173B3C()
{
  sub_10011B030((uint64_t)"InCallService.ContactSearchManager", 34, (uint64_t)"init()");
  __break(1u);
}

uint64_t sub_100173C04()
{
  return type metadata accessor for ContactSearchManager(0);
}

uint64_t type metadata accessor for ContactSearchManager(uint64_t a1)
{
  uint64_t result;

  result = qword_1002DA8B8;
  if (!qword_1002DA8B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContactSearchManager);
  return result;
}

uint64_t sub_100173C44(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = "\b";
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = &unk_100243800;
  v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactSearchType()
{
  return &type metadata for ContactSearchType;
}

unint64_t sub_100173D08()
{
  unint64_t result;

  result = qword_1002DA8C8;
  if (!qword_1002DA8C8)
  {
    result = swift_getWitnessTable(&unk_1002438AC, &type metadata for ContactSearchType);
    atomic_store(result, (unint64_t *)&qword_1002DA8C8);
  }
  return result;
}

uint64_t sub_100173D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSString *v3;
  NSString *v4;
  NSString *v5;
  NSString *v6;
  NSString *v7;
  NSString *v8;
  NSString *v9;
  NSString *v10;
  uint64_t v12;

  v0 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v1 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100242310;
  *(_QWORD *)(v1 + 32) = CNContactDepartmentNameKey;
  *(_QWORD *)(v1 + 40) = CNContactJobTitleKey;
  *(_QWORD *)(v1 + 48) = CNContactNoteKey;
  *(_QWORD *)(v1 + 56) = CNContactPostalAddressesKey;
  *(_QWORD *)(v1 + 64) = CNContactUrlAddressesKey;
  *(_QWORD *)(v1 + 72) = CNContactRelationsKey;
  *(_QWORD *)(v1 + 80) = CNContactSocialProfilesKey;
  *(_QWORD *)(v1 + 88) = CNContactInstantMessageAddressesKey;
  v12 = v1;
  specialized Array._endMutation()(v1, v2);
  v3 = CNContactDepartmentNameKey;
  v4 = CNContactJobTitleKey;
  v5 = CNContactNoteKey;
  v6 = CNContactPostalAddressesKey;
  v7 = CNContactUrlAddressesKey;
  v8 = CNContactRelationsKey;
  v9 = CNContactSocialProfilesKey;
  v10 = CNContactInstantMessageAddressesKey;
  return v12;
}

uint64_t sub_100173E4C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v4 < 0)
      v18 = *v1;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_30;
  }
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    result = sub_1001743EC(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v19 = v4;
    else
      v19 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_20;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_20:
    v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15, v16);
  }
  __break(1u);
  return result;
}

uint64_t sub_100174000(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native(*v1);
  v7 = result;
  *v1 = v3;
  if (!(_DWORD)result || (v8 = *(_QWORD *)(v3 + 24) >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v4 += v2;
    swift_bridgeObjectRetain(v3);
    v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v4, 1, v3);
    result = swift_bridgeObjectRelease(*v1);
    *v1 = v3;
    v8 = *(_QWORD *)(v3 + 24) >> 1;
  }
  if (!*(_QWORD *)(v6 + 16))
  {
    if (!v2)
      goto LABEL_13;
    goto LABEL_15;
  }
  if (v8 - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  result = sub_10018709C(v6 + 32, v2);
  if (!v2)
  {
LABEL_13:
    v12 = sub_1001096DC();
    return specialized Array._endMutation()(v12, v13);
  }
  v9 = *(_QWORD *)(*v1 + 16);
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    *(_QWORD *)(*v1 + 16) = v11;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_100174108()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017412C()
{
  uint64_t v0;

  return sub_100171758(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100174138()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  sub_100109438();
}

uint64_t sub_100174154(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100174164(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10017416C()
{
  uint64_t v0;

  sub_100143A28();
  _Block_release(*(const void **)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10017419C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v4 = *(void **)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc(dword_1002DA8D4);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10010AC94;
  return ((uint64_t (*)(uint64_t, char, void *, void *))((char *)&dword_1002DA8D0 + dword_1002DA8D0))(v2, v3, v5, v4);
}

uint64_t sub_100174218()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10017423C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10017424C()
{
  _QWORD *v0;

  sub_100143A28();
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100174284(void *a1, void *a2, _BYTE *a3)
{
  uint64_t *v3;

  return sub_100172FA4(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_100174294(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, "matchedProperties");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  return v3;
}

uint64_t sub_1001742FC(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "matchedProperties");

  if (!v2)
    return 0;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  return v3;
}

unint64_t sub_100174370()
{
  unint64_t result;

  result = qword_1002DA8F8;
  if (!qword_1002DA8F8)
  {
    result = swift_getWitnessTable(&unk_10024395C, &type metadata for ContactSearchError);
    atomic_store(result, (unint64_t *)&qword_1002DA8F8);
  }
  return result;
}

uint64_t sub_1001743AC()
{
  uint64_t v0;

  return sub_1001719C4(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001743B8()
{
  uint64_t v0;

  sub_100143A28();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001743E0()
{
  uint64_t v0;

  return sub_100171AD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001743EC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void (*v11)(uint64_t **, _QWORD);
  void (*v12)(uint64_t **, _QWORD);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16[4];

  v5 = result;
  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v15 = a3;
    else
      v15 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    result = swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      if (a3 < 0)
        v8 = a3;
      else
        v8 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a3);
      v9 = _CocoaArrayWrapper.endIndex.getter(v8);
      result = swift_bridgeObjectRelease(a3);
      if (v9 <= a2)
      {
        if (v7 >= 1)
        {
          sub_100110DE0((unint64_t *)&unk_1002DA910, &qword_1002DA908, (uint64_t)&protocol conformance descriptor for [A]);
          swift_bridgeObjectRetain(a3);
          for (i = 0; i != v7; ++i)
          {
            sub_1001085C0(&qword_1002DA908);
            sub_10018765C(v16, i, a3);
            v12 = v11;
            v14 = *v13;
            swift_unknownObjectRetain(*v13);
            v12(v16, 0);
            *(_QWORD *)(v5 + 8 * i) = v14;
          }
          swift_bridgeObjectRelease(a3);
          return a3;
        }
        goto LABEL_22;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_100186E4C((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100174584()
{
  uint64_t v0;

  sub_100143A28();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001745AC()
{
  uint64_t *v0;

  return sub_10017187C(v0[2], v0[3], v0[4]);
}

unint64_t sub_1001745BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8CE8;
  if (!qword_1002D8CE8)
  {
    v1 = type metadata accessor for OS_dispatch_queue.Attributes(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_1002D8CE8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContactSearchError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ContactSearchError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100174690 + 4 * byte_1002437A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1001746B0 + 4 * byte_1002437A5[v4]))();
}

_BYTE *sub_100174690(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1001746B0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001746B8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001746C0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001746C8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001746D0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ContactSearchError()
{
  return &type metadata for ContactSearchError;
}

unint64_t sub_1001746F0()
{
  unint64_t result;

  result = qword_1002DA930;
  if (!qword_1002DA930)
  {
    result = swift_getWitnessTable(&unk_100243934, &type metadata for ContactSearchError);
    atomic_store(result, (unint64_t *)&qword_1002DA930);
  }
  return result;
}

uint64_t sub_100174754()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100174764(uint64_t a1)
{
  return swift_allocObject(a1, 32, 7);
}

uint64_t sub_100174770()
{
  return swift_slowAlloc(12, -1);
}

uint64_t sub_10017477C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_isEscapingClosureAtFileLocation(a1, a2, a3, a4, 30, 1);
}

uint64_t sub_100174788()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_100174790()
{
  return Logger.logObject.getter();
}

uint64_t sub_100174798()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

id sub_1001747B4()
{
  void *v0;

  return v0;
}

uint64_t sub_1001747C0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

BOOL sub_1001747C8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1001747D8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1001747F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  unint64_t v10;
  va_list va;

  va_start(va, a10);
  return sub_100121E04(a8, v10, (uint64_t *)va);
}

uint64_t sub_100174800()
{
  uint64_t v0;

  return swift_task_alloc(v0);
}

void sub_100174808()
{
  const void *v0;

  _Block_release(v0);
}

void sub_100174810(NSObject *a1)
{
  void *v1;

  dispatch_sync(a1, v1);
}

uint64_t sub_100174818()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100174820()
{
  uint64_t v0;

  return swift_bridgeObjectRelease_n(v0, 3);
}

uint64_t sub_10017482C()
{
  uint64_t v0;

  return swift_bridgeObjectRelease_n(v0, 2);
}

uint64_t sub_100174838()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100174844()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100174850()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_10017485C()
{
  return static os_log_type_t.default.getter();
}

void AudioCallServicesManager.__allocating_init(call:callCenter:presentingViewController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = sub_100109754(v3, 120);
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_OWORD *)(v7 + 104) = 0u;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  sub_100109830();
}

uint64_t sub_1001748B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  unint64_t *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  switch(a1)
  {
    case 1:
      AudioCallServicesManager.acceptControlService.getter();
      sub_100175748();
      type metadata accessor for AcceptControlService();
      sub_10012095C(&qword_1002DA6B8, (uint64_t (*)(uint64_t))type metadata accessor for AcceptControlService, (uint64_t)&protocol conformance descriptor for AcceptControlService);
      v15 = sub_100175788();
      v16 = type metadata accessor for AudioCallAcceptControlViewModel(v15);
      v10 = (uint64_t (*)(uint64_t))&type metadata accessor for AudioCallAcceptControlViewModel;
      sub_10010BC64(v16);
      sub_1001757E8();
      AudioCallAcceptControlViewModel.init(service:)();
      sub_10017577C();
      v11 = (unint64_t *)&unk_1002DABA0;
      v12 = &protocol conformance descriptor for AudioCallAcceptControlViewModel;
      goto LABEL_9;
    case 23:
      AudioCallServicesManager.voicemailControlService.getter();
      sub_100175748();
      type metadata accessor for VoicemailControlService();
      sub_10012095C(&qword_1002DABA8, (uint64_t (*)(uint64_t))type metadata accessor for VoicemailControlService, (uint64_t)&protocol conformance descriptor for VoicemailControlService);
      v13 = sub_100175788();
      v14 = type metadata accessor for AudioCallVoicemailControlViewModel(v13);
      v10 = (uint64_t (*)(uint64_t))&type metadata accessor for AudioCallVoicemailControlViewModel;
      sub_10010BC64(v14);
      sub_1001757E8();
      AudioCallVoicemailControlViewModel.init(service:)();
      sub_10017577C();
      v11 = (unint64_t *)&unk_1002DABB0;
      v12 = &protocol conformance descriptor for AudioCallVoicemailControlViewModel;
      goto LABEL_9;
    case 9:
      AudioCallServicesManager.messageControlService.getter();
      sub_100175748();
      type metadata accessor for MessageControlService();
      sub_10012095C(&qword_1002DAB90, (uint64_t (*)(uint64_t))type metadata accessor for MessageControlService, (uint64_t)&protocol conformance descriptor for MessageControlService);
      v8 = sub_100175788();
      v9 = type metadata accessor for AudioCallMessageControlViewModel(v8);
      v10 = (uint64_t (*)(uint64_t))&type metadata accessor for AudioCallMessageControlViewModel;
      sub_10010BC64(v9);
      sub_1001757E8();
      AudioCallMessageControlViewModel.init(service:)();
      sub_10017577C();
      v11 = (unint64_t *)&unk_1002DAB98;
      v12 = &protocol conformance descriptor for AudioCallMessageControlViewModel;
LABEL_9:
      result = sub_10012095C(v11, v10, (uint64_t)v12);
      a6[4] = result;
      *a6 = v6;
      return result;
    case 7:
      AudioCallServicesManager.declineControlService.getter();
      sub_100175748();
      type metadata accessor for DeclineControlService();
      sub_10012095C(&qword_1002DA6B0, (uint64_t (*)(uint64_t))type metadata accessor for DeclineControlService, (uint64_t)&protocol conformance descriptor for DeclineControlService);
      v17 = sub_100175788();
      v18 = type metadata accessor for AudioCallDeclineControlViewModel(v17);
      v10 = (uint64_t (*)(uint64_t))&type metadata accessor for AudioCallDeclineControlViewModel;
      sub_10010BC64(v18);
      sub_1001757E8();
      AudioCallDeclineControlViewModel.init(service:)();
      sub_10017577C();
      v11 = (unint64_t *)&unk_1002DABB8;
      v12 = &protocol conformance descriptor for AudioCallDeclineControlViewModel;
      goto LABEL_9;
  }
  result = sub_100175760((uint64_t)"Fatal error", a2, a3, a4, a5, (uint64_t)"InCallService/AudioCallServicesManager.swift");
  __break(1u);
  return result;
}

uint64_t sub_100174AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  unint64_t *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  switch(a1)
  {
    case 0:
      AudioCallServicesManager.muteControlService.getter();
      sub_100175748();
      v52 = type metadata accessor for MuteControlService();
      sub_10012095C(&qword_1002DAB80, (uint64_t (*)(uint64_t))type metadata accessor for MuteControlService, (uint64_t)&protocol conformance descriptor for MuteControlService);
      v13 = sub_100175738();
      v14 = type metadata accessor for AudioCallMuteControlViewModel(v13);
      v10 = (uint64_t (*)(uint64_t))&type metadata accessor for AudioCallMuteControlViewModel;
      sub_10010BC64(v14);
      sub_1001757AC();
      AudioCallMuteControlViewModel.init(service:)();
      sub_10017577C();
      v11 = (unint64_t *)&unk_1002DAB88;
      v12 = &protocol conformance descriptor for AudioCallMuteControlViewModel;
      goto LABEL_6;
    case 1:
      AudioCallServicesManager.keypadControlService.getter();
      sub_100175748();
      v52 = type metadata accessor for KeypadControlService();
      sub_10012095C(&qword_1002DAB40, (uint64_t (*)(uint64_t))type metadata accessor for KeypadControlService, (uint64_t)&protocol conformance descriptor for KeypadControlService);
      v21 = sub_100175738();
      v22 = type metadata accessor for AudioCallKeypadControlViewModel(v21);
      sub_10010BC64(v22);
      sub_1001757AC();
      v23 = AudioCallKeypadControlViewModel.init(service:)();
      sub_1001757C8(v23, v24);
      if (v52)
      {
        v25 = sub_10011ACB0(&v49, v52);
        v33 = sub_1001757B8((uint64_t)v25, v26, v27, v28, v29, v30, v31, v32, v47, v48, v49, v50, v51, v52, v53, v54, v55, *((uint64_t *)&v55 + 1), v56,
                *((uint64_t *)&v56 + 1),
                v57);
        sub_100175798((uint64_t)v33);
        sub_100110DC0(&v49);
      }
      else
      {
        sub_1001756F8((uint64_t)&v49);
        v55 = 0u;
        v56 = 0u;
        v57 = 0;
      }
      AudioCallKeypadControlViewModel.presentationDelegate.setter(&v55);
      a6[3] = v22;
      v11 = (unint64_t *)&unk_1002DAB48;
      v19 = (uint64_t (*)(uint64_t))&type metadata accessor for AudioCallKeypadControlViewModel;
      v12 = &protocol conformance descriptor for AudioCallKeypadControlViewModel;
      goto LABEL_7;
    case 2:
    case 3:
      AudioCallServicesManager.audioControlService.getter();
      sub_100175748();
      v52 = type metadata accessor for AudioControlService();
      sub_10012095C(&qword_1002DAB30, (uint64_t (*)(uint64_t))type metadata accessor for AudioControlService, (uint64_t)&protocol conformance descriptor for AudioControlService);
      v8 = sub_100175738();
      v9 = type metadata accessor for AudioCallAudioControlViewModel(v8);
      v10 = (uint64_t (*)(uint64_t))&type metadata accessor for AudioCallAudioControlViewModel;
      sub_10010BC64(v9);
      sub_1001757AC();
      AudioCallAudioControlViewModel.init(service:)();
      sub_10017577C();
      v11 = (unint64_t *)&unk_1002DAB38;
      v12 = &protocol conformance descriptor for AudioCallAudioControlViewModel;
      goto LABEL_6;
    case 4:
      AudioCallServicesManager.addCallControlService.getter();
      sub_100175748();
      v52 = type metadata accessor for AddCallControlService();
      sub_10012095C(&qword_1002DAB60, (uint64_t (*)(uint64_t))type metadata accessor for AddCallControlService, (uint64_t)&protocol conformance descriptor for AddCallControlService);
      v34 = sub_100175738();
      v35 = type metadata accessor for AudioCallAddCallControlViewModel(v34);
      sub_10010BC64(v35);
      sub_1001757AC();
      v36 = AudioCallAddCallControlViewModel.init(service:)();
      sub_1001757C8(v36, v37);
      if (v52)
      {
        v38 = sub_10011ACB0(&v49, v52);
        v46 = sub_1001757B8((uint64_t)v38, v39, v40, v41, v42, v43, v44, v45, v47, v48, v49, v50, v51, v52, v53, v54, v55, *((uint64_t *)&v55 + 1), v56,
                *((uint64_t *)&v56 + 1),
                v57);
        sub_100175798((uint64_t)v46);
        sub_100110DC0(&v49);
      }
      else
      {
        sub_1001756F8((uint64_t)&v49);
        v55 = 0u;
        v56 = 0u;
        v57 = 0;
      }
      AudioCallAddCallControlViewModel.presentationDelegate.setter(&v55);
      a6[3] = v35;
      v11 = (unint64_t *)&unk_1002DAB68;
      v19 = (uint64_t (*)(uint64_t))&type metadata accessor for AudioCallAddCallControlViewModel;
      v12 = &protocol conformance descriptor for AudioCallAddCallControlViewModel;
      goto LABEL_7;
    case 5:
      AudioCallServicesManager.faceTimeControlService.getter();
      sub_100175748();
      v52 = type metadata accessor for FaceTimeControlService();
      sub_10012095C(&qword_1002DAB50, (uint64_t (*)(uint64_t))type metadata accessor for FaceTimeControlService, (uint64_t)&protocol conformance descriptor for FaceTimeControlService);
      v15 = sub_100175738();
      v16 = type metadata accessor for AudioCallFaceTimeControlViewModel(v15);
      v10 = (uint64_t (*)(uint64_t))&type metadata accessor for AudioCallFaceTimeControlViewModel;
      sub_10010BC64(v16);
      sub_1001757AC();
      AudioCallFaceTimeControlViewModel.init(service:)();
      sub_10017577C();
      v11 = (unint64_t *)&unk_1002DAB58;
      v12 = &protocol conformance descriptor for AudioCallFaceTimeControlViewModel;
      goto LABEL_6;
    case 15:
      AudioCallServicesManager.endControlService.getter();
      sub_100175748();
      v52 = type metadata accessor for EndControlService();
      sub_10012095C(&qword_1002DAB70, (uint64_t (*)(uint64_t))type metadata accessor for EndControlService, (uint64_t)&protocol conformance descriptor for EndControlService);
      v17 = sub_100175738();
      v18 = type metadata accessor for AudioCallEndControlViewModel(v17);
      v10 = (uint64_t (*)(uint64_t))&type metadata accessor for AudioCallEndControlViewModel;
      sub_10010BC64(v18);
      sub_1001757AC();
      AudioCallEndControlViewModel.init(service:)();
      sub_10017577C();
      v11 = (unint64_t *)&unk_1002DAB78;
      v12 = &protocol conformance descriptor for AudioCallEndControlViewModel;
LABEL_6:
      v19 = v10;
LABEL_7:
      result = sub_10012095C(v11, v19, (uint64_t)v12);
      a6[4] = result;
      *a6 = v6;
      break;
    default:
      result = sub_100175760((uint64_t)"Fatal error", a2, a3, a4, a5, (uint64_t)"InCallService/AudioCallServicesManager.swift");
      __break(1u);
      break;
  }
  return result;
}

void *AudioCallServicesManager.presentingViewController.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void AudioCallServicesManager.muteControlService.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 40);
  if (!v1)
  {
    v2 = type metadata accessor for MuteControlService();
    sub_100109754(v2, 48);
    v3 = sub_1001365F8();
    v4 = MuteControlService.init(call:)(v3);
    *(_QWORD *)(v0 + 40) = v4;
    swift_retain(v4);
    sub_1001436CC();
    v1 = 0;
  }
  swift_retain(v1);
  sub_100109830();
}

uint64_t AudioCallServicesManager.muteControlService.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 40) = a1;
  return sub_10015C848(v2);
}

void AudioCallServicesManager.muteControlService.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_100175754(a1);
  AudioCallServicesManager.muteControlService.getter();
  *v1 = v2;
  sub_100109438();
}

uint64_t sub_100174EF8(uint64_t *a1, char a2)
{
  return sub_100175578(a1, a2, AudioCallServicesManager.muteControlService.setter);
}

void AudioCallServicesManager.endControlService.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 48);
  if (!v1)
  {
    v2 = *(void **)(v0 + 24);
    v3 = type metadata accessor for EndControlService();
    v4 = sub_100109754(v3, 24);
    *(_QWORD *)(v4 + 16) = v2;
    *(_QWORD *)(v0 + 48) = v4;
    v5 = v2;
    sub_1001757E0();
    v1 = 0;
  }
  swift_retain(v1);
  sub_100109830();
}

uint64_t AudioCallServicesManager.endControlService.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = a1;
  return sub_10015C848(v2);
}

void AudioCallServicesManager.endControlService.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_100175754(a1);
  AudioCallServicesManager.endControlService.getter();
  *v1 = v2;
  sub_100109438();
}

uint64_t sub_100174F94(uint64_t *a1, char a2)
{
  return sub_100175578(a1, a2, AudioCallServicesManager.endControlService.setter);
}

void AudioCallServicesManager.addCallControlService.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 56);
  if (!v1)
  {
    v2 = *(void **)(v0 + 16);
    v3 = type metadata accessor for AddCallControlService();
    sub_100109754(v3, 40);
    sub_1001365F8();
    v4 = sub_1001757D8();
    v5 = AddCallControlService.init(call:callCenter:)(v2, v4);
    *(_QWORD *)(v0 + 56) = v5;
    swift_retain(v5);
    sub_1001436CC();
    v1 = 0;
  }
  swift_retain(v1);
  sub_100109830();
}

uint64_t AudioCallServicesManager.addCallControlService.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = a1;
  return sub_10015C848(v2);
}

void AudioCallServicesManager.addCallControlService.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_100175754(a1);
  AudioCallServicesManager.addCallControlService.getter();
  *v1 = v2;
  sub_100109438();
}

uint64_t sub_100175048(uint64_t *a1, char a2)
{
  return sub_100175578(a1, a2, AudioCallServicesManager.addCallControlService.setter);
}

void AudioCallServicesManager.faceTimeControlService.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 64);
  if (!v1)
  {
    v2 = *(void **)(v0 + 16);
    v3 = type metadata accessor for FaceTimeControlService();
    sub_100109754(v3, 48);
    sub_1001365F8();
    v4 = sub_1001757D8();
    v5 = FaceTimeControlService.init(call:callCenter:)(v2, v4);
    *(_QWORD *)(v0 + 64) = v5;
    swift_retain(v5);
    sub_1001436CC();
    v1 = 0;
  }
  swift_retain(v1);
  sub_100109830();
}

uint64_t AudioCallServicesManager.faceTimeControlService.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 64) = a1;
  return sub_10015C848(v2);
}

void AudioCallServicesManager.faceTimeControlService.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_100175754(a1);
  AudioCallServicesManager.faceTimeControlService.getter();
  *v1 = v2;
  sub_100109438();
}

uint64_t sub_1001750FC(uint64_t *a1, char a2)
{
  return sub_100175578(a1, a2, AudioCallServicesManager.faceTimeControlService.setter);
}

void AudioCallServicesManager.keypadControlService.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 72);
  if (!v1)
  {
    v2 = type metadata accessor for KeypadControlService();
    sub_100109754(v2, 32);
    v3 = sub_1001365F8();
    v4 = KeypadControlService.init(call:)(v3);
    *(_QWORD *)(v0 + 72) = v4;
    swift_retain(v4);
    sub_1001436CC();
    v1 = 0;
  }
  swift_retain(v1);
  sub_100109830();
}

uint64_t AudioCallServicesManager.keypadControlService.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 72) = a1;
  return sub_10015C848(v2);
}

void AudioCallServicesManager.keypadControlService.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_100175754(a1);
  AudioCallServicesManager.keypadControlService.getter();
  *v1 = v2;
  sub_100109438();
}

uint64_t sub_1001751A4(uint64_t *a1, char a2)
{
  return sub_100175578(a1, a2, AudioCallServicesManager.keypadControlService.setter);
}

void AudioCallServicesManager.audioControlService.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v1 = *(void **)(v0 + 80);
  if (!v1)
  {
    v2 = v0;
    v3 = objc_allocWithZone((Class)type metadata accessor for AudioControlService());
    sub_1001365F8();
    AudioControlService.init(callCenter:)();
    v4 = *(void **)(v0 + 80);
    *(_QWORD *)(v2 + 80) = v5;
    v6 = v5;

    v1 = 0;
  }
  v7 = v1;
  sub_100109830();
}

void AudioCallServicesManager.audioControlService.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 80);
  *(_QWORD *)(v1 + 80) = a1;

}

void AudioCallServicesManager.audioControlService.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_100175754(a1);
  AudioCallServicesManager.audioControlService.getter();
  *v1 = v2;
  sub_100109438();
}

void sub_10017524C(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    AudioCallServicesManager.audioControlService.setter((uint64_t)v3);

  }
  else
  {
    AudioCallServicesManager.audioControlService.setter((uint64_t)v2);
  }
}

_QWORD *AudioCallServicesManager.messageControlService.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _BYTE v9[24];

  v1 = *(_QWORD *)(v0 + 88);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 88);
  }
  else
  {
    v3 = v0;
    v4 = *(void **)(v0 + 16);
    v5 = type metadata accessor for MessageControlService();
    sub_100109754(v5, 64);
    sub_1001365F8();
    v6 = sub_1001757D8();
    v2 = MessageControlService.init(call:callCenter:)(v4, v6);
    v7 = *(_QWORD *)(v3 + 32);
    swift_beginAccess(v2 + 5, v9, 1, 0);
    swift_unknownObjectWeakAssign(v2 + 5, v7);
    *(_QWORD *)(v3 + 88) = v2;
    swift_retain(v2);
    sub_1001436CC();
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t AudioCallServicesManager.messageControlService.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 88) = a1;
  return sub_10015C848(v2);
}

void AudioCallServicesManager.messageControlService.modify(uint64_t a1)
{
  _QWORD *v1;

  sub_100175754(a1);
  *v1 = AudioCallServicesManager.messageControlService.getter();
  sub_100109438();
}

uint64_t sub_100175384(uint64_t *a1, char a2)
{
  return sub_100175578(a1, a2, AudioCallServicesManager.messageControlService.setter);
}

void AudioCallServicesManager.acceptControlService.getter()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v1 = v0[12];
  if (!v1)
  {
    v2 = (void *)v0[2];
    v3 = (void *)v0[3];
    v4 = type metadata accessor for AcceptControlService();
    v5 = sub_100109754(v4, 32);
    *(_QWORD *)(v5 + 16) = v2;
    *(_QWORD *)(v5 + 24) = v3;
    v0[12] = v5;
    v6 = v2;
    v7 = v3;
    sub_1001757E0();
    v1 = 0;
  }
  swift_retain(v1);
  sub_100109830();
}

uint64_t AudioCallServicesManager.acceptControlService.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v1 + 96) = a1;
  return sub_10015C848(v2);
}

void AudioCallServicesManager.acceptControlService.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_100175754(a1);
  AudioCallServicesManager.acceptControlService.getter();
  *v1 = v2;
  sub_100109438();
}

uint64_t sub_100175424(uint64_t *a1, char a2)
{
  return sub_100175578(a1, a2, AudioCallServicesManager.acceptControlService.setter);
}

void AudioCallServicesManager.declineControlService.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 104);
  if (!v1)
  {
    v2 = type metadata accessor for DeclineControlService();
    sub_100109754(v2, 32);
    v3 = sub_1001365F8();
    v4 = DeclineControlService.init(callCenter:)(v3);
    *(_QWORD *)(v0 + 104) = v4;
    swift_retain(v4);
    sub_1001436CC();
    v1 = 0;
  }
  swift_retain(v1);
  sub_100109830();
}

uint64_t AudioCallServicesManager.declineControlService.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v1 + 104) = a1;
  return sub_10015C848(v2);
}

void AudioCallServicesManager.declineControlService.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_100175754(a1);
  AudioCallServicesManager.declineControlService.getter();
  *v1 = v2;
  sub_100109438();
}

uint64_t sub_1001754CC(uint64_t *a1, char a2)
{
  return sub_100175578(a1, a2, AudioCallServicesManager.declineControlService.setter);
}

void AudioCallServicesManager.voicemailControlService.getter()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v1 = v0[14];
  if (!v1)
  {
    v2 = (void *)v0[2];
    v3 = (void *)v0[3];
    v4 = type metadata accessor for VoicemailControlService();
    v5 = sub_100109754(v4, 32);
    *(_QWORD *)(v5 + 16) = v2;
    *(_QWORD *)(v5 + 24) = v3;
    v0[14] = v5;
    v6 = v2;
    v7 = v3;
    sub_1001757E0();
    v1 = 0;
  }
  swift_retain(v1);
  sub_100109830();
}

uint64_t AudioCallServicesManager.voicemailControlService.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = a1;
  return sub_10015C848(v2);
}

void AudioCallServicesManager.voicemailControlService.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_100175754(a1);
  AudioCallServicesManager.voicemailControlService.getter();
  *v1 = v2;
  sub_100109438();
}

uint64_t sub_10017556C(uint64_t *a1, char a2)
{
  return sub_100175578(a1, a2, AudioCallServicesManager.voicemailControlService.setter);
}

uint64_t sub_100175578(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  if ((a2 & 1) == 0)
    return a3(*a1);
  v5 = swift_retain(*a1);
  a3(v5);
  return swift_release(v4);
}

uint64_t AudioCallServicesManager.init(call:callCenter:presentingViewController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_OWORD *)(v3 + 104) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  return v3;
}

uint64_t AudioCallServicesManager.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 112));
  return v0;
}

uint64_t AudioCallServicesManager.__deallocating_deinit()
{
  uint64_t v0;

  AudioCallServicesManager.deinit();
  return swift_deallocClassInstance(v0, 120, 7);
}

uint64_t type metadata accessor for AudioCallServicesManager()
{
  return objc_opt_self(_TtC13InCallService24AudioCallServicesManager);
}

uint64_t sub_1001756B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0(&qword_1002DA648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001756F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001085C0(&qword_1002DA648);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100175738()
{
  return 0;
}

uint64_t sub_100175748()
{
  return 0;
}

uint64_t sub_100175754(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 8) = v1;
  return result;
}

uint64_t sub_100175760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return _assertionFailure(_:_:file:line:flags:)(a1, 11, 2, 0, 0xE000000000000000, a6, 44, 2);
}

void sub_10017577C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) = v1;
}

uint64_t sub_100175788()
{
  return 0;
}

uint64_t sub_100175798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(a1, v2, v1);
}

_QWORD *sub_1001757B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;

  a20 = v21;
  a21 = v22;
  return sub_100110D40(&a17);
}

uint64_t sub_1001757C8(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return sub_1001756B0(v2, (uint64_t)va);
}

id sub_1001757D8()
{
  void *v0;

  return v0;
}

uint64_t sub_1001757E0()
{
  uint64_t v0;

  return swift_retain(v0);
}

Class sub_1001757F4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSDictionary v6;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = v1(v3);
  swift_release(v2);
  if (v4)
  {
    sub_10011ADD4(v5, (unint64_t *)&qword_1002D7E50, NSObject_ptr);
    v6.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    sub_1001096DC();
  }
  else
  {
    v6.super.isa = 0;
  }
  return v6.super.isa;
}

id sub_100175870()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v1 = OBJC_IVAR___ICSCallAnalyticsLogger_incomingCallAnalyticsViews;
  v2 = sub_10010AE94();
  v3 = sub_1001773A4();
  v4 = v0;
  *(_QWORD *)&v0[v1] = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v2, &unk_10028C0D8, v3);
  v4[OBJC_IVAR___ICSCallAnalyticsLogger_answeredBannerAnalyticsView] = 2;

  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for CallAnalyticsLogger();
  v5 = objc_msgSendSuper2(&v16, "init");
  objc_opt_self(NSNotificationCenter);
  v6 = v5;
  v7 = sub_100177B5C();
  sub_100177B00(v7, v8, v9, v10, TUCallCenterCallStatusChangedNotification);

  v11 = sub_100177B5C();
  sub_100177B00(v11, v12, v13, v14, TUCallCenterVideoCallStatusChangedNotification);

  return v6;
}

void sub_1001759A8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  __int16 v14;
  id v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __int16 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_10010BC70();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_10010AE94();
  __chkstk_darwin(v8, v9);
  sub_1001097B0();
  if (v7)
  {
    v10 = v7;
    v11 = objc_msgSend(v10, "uniqueProxyIdentifierUUID");
    sub_100143940((uint64_t)v11);

    v12 = (uint64_t *)(v0 + OBJC_IVAR___ICSCallAnalyticsLogger_incomingCallAnalyticsViews);
    sub_100111F6C(v0 + OBJC_IVAR___ICSCallAnalyticsLogger_incomingCallAnalyticsViews, (uint64_t)&v32, 0);
    v13 = *v12;
    swift_bridgeObjectRetain(*v12);
    v14 = sub_10011B2C8(v1, v13);
    swift_bridgeObjectRelease(v13);
    sub_100177B14();
    if ((v14 & 0xFF00) == 0x200)
    {
      v15 = v10;
      v16 = sub_1001796E4(v15);
      if (v16 != 4)
      {
        v17 = v16;
        v29 = v3;
        v30 = v5;
        if (qword_1002D7278 != -1)
          swift_once(&qword_1002D7278, sub_10010BE40);
        v28 = qword_1002E2D40;
        v18 = sub_1001085C0(&qword_1002D8700);
        v19 = sub_100109754(v18, 72);
        *(_OWORD *)(v19 + 16) = xmmword_100241240;
        v20 = objc_msgSend(v15, "uniqueProxyIdentifierUUID");
        sub_100143940((uint64_t)v20);

        v22 = UUID.uuidString.getter(v21);
        v24 = v23;
        sub_100177B14();
        *(_QWORD *)(v19 + 56) = &type metadata for String;
        *(_QWORD *)(v19 + 64) = sub_100176E30();
        *(_QWORD *)(v19 + 32) = v22;
        *(_QWORD *)(v19 + 40) = v24;
        v25 = static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)("ICSCallAnalytics: creating a new incoming call analytics view for call: %@", 74, 2, &_mh_execute_header, v28, v25, v19);
        swift_bridgeObjectRelease(v19);
        v26 = objc_msgSend(v15, "uniqueProxyIdentifierUUID");
        sub_100143940((uint64_t)v26);

        sub_100111F6C((uint64_t)v12, (uint64_t)&v31, 33);
        if ((v29 & 1) != 0)
          v27 = 256;
        else
          v27 = 0;
        sub_100177318(v27 & 0xFF00 | v17, v30, v30, 11, v1);
        sub_100177B14();
        sub_100177B20();
      }
    }

  }
  sub_10010BC44();
}

uint64_t sub_100175C58(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  v3 = qword_1002E2D40;
  v4 = static os_log_type_t.default.getter();
  result = os_log(_:dso:log:type:_:)("ICSCallAnalytics: creating a new answered banner analytics view", 63, 2, &_mh_execute_header, v3, v4, _swiftEmptyArrayStorage);
  *(_BYTE *)(v1 + OBJC_IVAR___ICSCallAnalyticsLogger_answeredBannerAnalyticsView) = a1 & 1;
  return result;
}

void sub_100175D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  __int16 v19;
  uint64_t v20;
  int v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;

  sub_10010BC70();
  v4 = v3;
  sub_1001085C0(&qword_1002D7D78);
  sub_100120AA0();
  __chkstk_darwin(v5, v6);
  v7 = sub_100177ADC();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  sub_10014357C();
  v10 = sub_100179870(v4);
  sub_100177B7C();
  if (sub_100109FF4(v2, 1, v7) == 1)
  {
    sub_1001209C8(v2, &qword_1002D7D78);
  }
  else
  {
    v22 = v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v1, v2, v7);
    v11 = (uint64_t *)(v0 + OBJC_IVAR___ICSCallAnalyticsLogger_incomingCallAnalyticsViews);
    sub_100111F6C(v0 + OBJC_IVAR___ICSCallAnalyticsLogger_incomingCallAnalyticsViews, (uint64_t)&v24, 0);
    v12 = *v11;
    swift_bridgeObjectRetain(*v11);
    v13 = sub_10011B2C8(v1, v12);
    v15 = v14;
    v17 = v16;
    v19 = v18;
    swift_bridgeObjectRelease(v12);
    if ((v13 & 0xFF00) != 0x200)
    {
      sub_100111F6C((uint64_t)v11, (uint64_t)&v23, 33);
      sub_100177318(v13 & 0x1FF, v15, v17, v19 & 0x100 | v22, v1);
      sub_100177B20();
      sub_1001435F8(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
      goto LABEL_8;
    }
    sub_1001435F8(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    v10 = v22;
  }
  v20 = OBJC_IVAR___ICSCallAnalyticsLogger_answeredBannerAnalyticsView;
  v21 = *(unsigned __int8 *)(v0 + OBJC_IVAR___ICSCallAnalyticsLogger_answeredBannerAnalyticsView);
  if (v21 != 2)
  {
    sub_100176B28(v21 & 1, v10);
    *(_BYTE *)(v0 + v20) = 2;
  }
LABEL_8:
  sub_10010BC44();
}

void sub_100175F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_10010BC70();
  v6 = v5;
  sub_1001085C0(&qword_1002D7D78);
  sub_100120AA0();
  __chkstk_darwin(v7, v8);
  v9 = sub_100177ADC();
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  sub_1001097B0();
  sub_100177B7C();
  if (sub_100109FF4(v2, 1, v9) == 1)
  {
    sub_1001209C8(v2, &qword_1002D7D78);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v1, v2, v9);
    v12 = v0 + OBJC_IVAR___ICSCallAnalyticsLogger_incomingCallAnalyticsViews;
    sub_100111F6C(v12, (uint64_t)&v17, 0);
    sub_100177B94();
    v13 = sub_10011B2C8(v1, v4);
    v15 = v14;
    sub_100177B88();
    if ((v13 & 0xFF00) != 0x200)
    {
      sub_100111F6C(v12, (uint64_t)&v16, 33);
      sub_100177318(v13 & 0x1FF, v15, v6, v3 & 0x1FF, v1);
      sub_100177B20();
    }
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v9);
  }
  sub_10010BC44();
}

void sub_100176198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_10010BC70();
  v6 = v5;
  sub_1001085C0(&qword_1002D7D78);
  sub_100120AA0();
  __chkstk_darwin(v7, v8);
  sub_1001097B0();
  v9 = sub_10010AE94();
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  sub_10014357C();
  sub_1001773E4(v6, v2);
  if (sub_100109FF4(v2, 1, v9) == 1)
  {
    sub_1001209C8(v2, &qword_1002D7D78);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v1, v2, v9);
    v12 = v0 + OBJC_IVAR___ICSCallAnalyticsLogger_incomingCallAnalyticsViews;
    sub_100111F6C(v12, (uint64_t)&v19, 0);
    sub_100177B94();
    v13 = sub_10011B2C8(v1, v4);
    v15 = v14;
    v17 = v16;
    sub_100177B88();
    if ((v13 & 0xFF00) != 0x200)
    {
      sub_100111F6C(v12, (uint64_t)&v18, 33);
      sub_100177318(v13 & 0x1FF, v15, v17, v3 | 0x100, v1);
      sub_100177B20();
    }
    sub_1001435F8(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  }
  sub_10010BC44();
}

uint64_t sub_10017639C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t result;

  v1 = OBJC_IVAR___ICSCallAnalyticsLogger_answeredBannerAnalyticsView;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR___ICSCallAnalyticsLogger_answeredBannerAnalyticsView);
  if (v2 != 2)
  {
    result = sub_100176B28(v2 & 1, 0xAu);
    *(_BYTE *)(v0 + v1) = 2;
  }
  return result;
}

uint64_t sub_100176410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v4 = sub_10011ADD4(a1, (unint64_t *)&qword_1002D7E50, NSObject_ptr);
  result = static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8, &type metadata for String, v4, &protocol witness table for String);
  v6 = v8;
  if (v8)
  {
    v8 = 0;
    v9 = 0;
    static String._conditionallyBridgeFromObjectiveC(_:result:)(a2, &v8);
    v7 = v9;
    if (v9)
    {
      sub_100176C34(v8, v9, v6);
      swift_bridgeObjectRelease(v6);
      v6 = v7;
    }
    return swift_bridgeObjectRelease(v6);
  }
  return result;
}

void sub_100176528()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD v4[4];

  v0 = Notification.object.getter(v4);
  if (v4[3])
  {
    v1 = sub_10011ADD4((uint64_t)v0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
    if ((swift_dynamicCast(&v3, v4, (char *)&type metadata for Any + 8, v1, 6) & 1) != 0)
    {
      v2 = v3;
      sub_100176664();

    }
  }
  else
  {
    sub_1001209C8((uint64_t)v4, &qword_1002D84F0);
  }
}

void sub_100176664()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t *v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  __int16 v19;
  void (*v20)(char *, uint64_t);
  id v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  __n128 v31;
  uint64_t v32;
  char v33;
  unsigned __int8 v34;
  void *v35;
  id v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;

  sub_10010BC70();
  v2 = v1;
  v3 = sub_10010AE94();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = __chkstk_darwin(v3, v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  v11 = (char *)&v36 - v10;
  v12 = objc_msgSend(v2, "uniqueProxyIdentifierUUID");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v12);

  v41 = v0;
  v13 = (uint64_t *)&v0[OBJC_IVAR___ICSCallAnalyticsLogger_incomingCallAnalyticsViews];
  sub_100111F6C((uint64_t)&v0[OBJC_IVAR___ICSCallAnalyticsLogger_incomingCallAnalyticsViews], (uint64_t)&v43, 0);
  v14 = *v13;
  swift_bridgeObjectRetain(*v13);
  v15 = sub_10011B2C8((uint64_t)v11, v14);
  v39 = v17;
  v40 = v16;
  v19 = v18;
  swift_bridgeObjectRelease(v14);
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v11, v3);
  if ((v15 & 0xFF00) != 0x200)
  {
    v21 = v2;
    v22 = sub_100179C60(v21);
    if (v22 != 6)
    {
      v23 = v22;
      v38 = v20;
      if (qword_1002D7278 != -1)
        swift_once(&qword_1002D7278, sub_10010BE40);
      v37 = qword_1002E2D40;
      v24 = sub_1001085C0(&qword_1002D8700);
      v25 = sub_100109754(v24, 72);
      *(_OWORD *)(v25 + 16) = xmmword_100241240;
      sub_10014368C((uint64_t)objc_msgSend(v21, "uniqueProxyIdentifierUUID"));

      v27 = UUID.uuidString.getter(v26);
      v36 = v21;
      v29 = v28;
      v30 = v38;
      v38(v8, v3);
      *(_QWORD *)(v25 + 56) = &type metadata for String;
      *(_QWORD *)(v25 + 64) = sub_100176E30();
      *(_QWORD *)(v25 + 32) = v27;
      *(_QWORD *)(v25 + 40) = v29;
      v32 = static os_log_type_t.default.getter(v31);
      os_log(_:dso:log:type:_:)("ICSCallAnalytics: updating analytics logger with call %@", 56, 2, &_mh_execute_header, v37, v32, v25);
      swift_bridgeObjectRelease(v25);
      if (v19 == 11)
        v33 = 10;
      else
        v33 = v19;
      if (v23 == 3)
        v34 = v19;
      else
        v34 = v33;
      v35 = v41;
      sub_1001768F8(v15 & 0x1FF, v40, v39, v19 & 0x100 | v34, v23);
      sub_10014368C((uint64_t)objc_msgSend(v36, "uniqueProxyIdentifierUUID"));

      sub_100111F6C((uint64_t)v13, (uint64_t)&v42, 33);
      sub_1001770F8((uint64_t)v8);
      v30(v8, v3);
      sub_100177B20();
    }
  }
  sub_10010BC44();
}

uint64_t sub_1001768F8(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned __int8 a5)
{
  unsigned __int8 v6;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unsigned int v20;
  _BYTE v21[208];

  v6 = a4;
  v9 = a1;
  v10 = (a1 >> 8) & 1;
  v20 = (a4 >> 8) & 1;
  v11 = sub_1001085C0(&qword_1002DAC08);
  inited = swift_initStackObject(v11, v21);
  *(_OWORD *)(inited + 16) = xmmword_100243A40;
  sub_100177B38();
  *(_QWORD *)(v13 + 32) = 0xD000000000000015;
  *(_QWORD *)(v13 + 40) = v14;
  *(_QWORD *)(inited + 48) = objc_msgSend(sub_100177AF8(), "initWithInteger:", v6);
  strcpy((char *)(inited + 56), "BannersEnabled");
  *(_BYTE *)(inited + 71) = -18;
  *(_QWORD *)(inited + 72) = objc_msgSend(sub_100177AF8(), "initWithBool:", v10);
  *(_QWORD *)(inited + 80) = 0x657079546C6C6143;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = objc_msgSend(sub_100177AF8(), "initWithInteger:", v9);
  *(_QWORD *)(inited + 104) = 0xD00000000000001DLL;
  sub_100177B38();
  *(_QWORD *)(inited + 112) = v15;
  *(_QWORD *)(inited + 120) = objc_msgSend(sub_100177AF8(), "initWithInteger:", a3);
  *(_QWORD *)(inited + 128) = 0xD00000000000001FLL;
  sub_100177B38();
  *(_QWORD *)(inited + 136) = v16;
  *(_QWORD *)(inited + 144) = objc_msgSend(sub_100177AF8(), "initWithInteger:", a2);
  *(_QWORD *)(inited + 152) = 0x6974756C6F736552;
  *(_QWORD *)(inited + 160) = 0xEA00000000006E6FLL;
  *(_QWORD *)(inited + 168) = objc_msgSend(sub_100177AF8(), "initWithInteger:", a5);
  strcpy((char *)(inited + 176), "RingerWasMuted");
  *(_BYTE *)(inited + 191) = -18;
  v17 = objc_msgSend(sub_100177AF8(), "initWithBool:", v20);
  *(_QWORD *)(inited + 192) = v17;
  v18 = sub_10011ADD4((uint64_t)v17, (unint64_t *)&qword_1002D7E50, NSObject_ptr);
  Dictionary.init(dictionaryLiteral:)(inited, &type metadata for String, v18, &protocol witness table for String);
  sub_100177B28(0xD000000000000025, (uint64_t)"com.apple.InCallService.IncomingCalls");
  return sub_1001096DC();
}

uint64_t sub_100176B28(char a1, unsigned __int8 a2)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1001085C0(&qword_1002DAC08);
  inited = swift_initStackObject(v4, &v12);
  *(_OWORD *)(inited + 16) = xmmword_100241F90;
  sub_100177B38();
  *(_QWORD *)(v6 + 32) = 0xD000000000000015;
  *(_QWORD *)(v6 + 40) = v7;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a2);
  *(_QWORD *)(inited + 56) = 0xD000000000000015;
  sub_100177B38();
  *(_QWORD *)(inited + 64) = v8;
  v9 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", a1 & 1);
  *(_QWORD *)(inited + 72) = v9;
  v10 = sub_10011ADD4((uint64_t)v9, (unint64_t *)&qword_1002D7E50, NSObject_ptr);
  Dictionary.init(dictionaryLiteral:)(inited, &type metadata for String, v10, &protocol witness table for String);
  sub_100177B28(0xD000000000000026, (uint64_t)"com.apple.InCallService.AnsweredBanner");
  return sub_1001096DC();
}

void sub_100176C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __n128 v15;
  _QWORD v16[5];
  uint64_t v17;

  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  v6 = qword_1002E2D40;
  v7 = sub_1001085C0(&qword_1002D8700);
  v8 = sub_100109754(v7, 112);
  *(_OWORD *)(v8 + 16) = xmmword_100241F90;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  *(_QWORD *)(v8 + 64) = sub_100176E30();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 96) = sub_1001085C0(&qword_1002DABF8);
  *(_QWORD *)(v8 + 104) = sub_100176E6C();
  *(_QWORD *)(v8 + 72) = a3;
  swift_bridgeObjectRetain(a2);
  v9 = swift_bridgeObjectRetain(a3);
  v10 = static os_log_type_t.default.getter(v9);
  os_log(_:dso:log:type:_:)("ICSCallAnalytics: logging core analytics view %@ with dictionary %@", 67, 2, &_mh_execute_header, v6, v10, v8);
  swift_bridgeObjectRelease(v8);
  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100109754((uint64_t)&unk_10028BFA0, 24);
  *(_QWORD *)(v12 + 16) = a3;
  v16[4] = sub_100147EAC;
  v17 = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1001757F4;
  v16[3] = &unk_10028BFB8;
  v13 = _Block_copy(v16);
  v14 = v17;
  swift_bridgeObjectRetain(a3);
  v15 = swift_release(v14);
  AnalyticsSendEventLazy(v11, v13, v15);
  _Block_release(v13);

}

id sub_100176DD0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallAnalyticsLogger();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CallAnalyticsLogger()
{
  return objc_opt_self(ICSCallAnalyticsLogger);
}

unint64_t sub_100176E30()
{
  unint64_t result;

  result = qword_1002DC4B0;
  if (!qword_1002DC4B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1002DC4B0);
  }
  return result;
}

unint64_t sub_100176E6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DAC00;
  if (!qword_1002DAC00)
  {
    v1 = sub_10010AD84(&qword_1002DABF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1002DAC00);
  }
  return result;
}

uint64_t sub_100176EB0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100176ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100176EE4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_100176EEC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_10011D2A8(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    sub_100177B68();
    v13 = *(_QWORD *)(v12 + 24);
    sub_1001085C0(&qword_1002DAC18);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v13);
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v16 + 48) + 16 * v9 + 8));
    sub_10011AC74((_OWORD *)(*(_QWORD *)(v16 + 56) + 32 * v9), a3);
    _NativeDictionary._delete(at:)(v9, v16, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
    v14 = *v4;
    *v4 = v16;
    sub_100177AC8(v14);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_100176FF4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10011D2A8(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  sub_100177B68();
  v11 = *(_QWORD *)(v10 + 24);
  sub_1001085C0(&qword_1002DAC20);
  _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v11);
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v15 + 48) + 16 * v7 + 8));
  v12 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v7);
  _NativeDictionary._delete(at:)(v7, v15, &type metadata for String, &type metadata for PosterSnapshotService.Snapshot);
  v13 = *v3;
  *v3 = v15;
  swift_bridgeObjectRelease(v13);
  return v12;
}

uint64_t sub_1001770F8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_10011D378(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 512;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v18 = *v2;
  v8 = *v2;
  *v2 = 0x8000000000000000;
  v9 = *(_QWORD *)(v8 + 24);
  sub_1001085C0(&qword_1002DAC10);
  _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v9);
  v10 = *(_QWORD *)(v18 + 48);
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v5, v11);
  v12 = (unsigned __int8 *)(*(_QWORD *)(v18 + 56) + 32 * v5);
  v13 = *v12;
  v14 = v12[1];
  sub_1001773A4();
  _NativeDictionary._delete(at:)(v5, v18, v11, &unk_10028C0D8);
  v15 = *v2;
  *v2 = v18;
  swift_bridgeObjectRelease(v15);
  if (v14)
    v16 = 256;
  else
    v16 = 0;
  return v16 | v13;
}

uint64_t sub_100177258(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char v7;
  uint64_t v8;
  uint64_t v10;

  swift_isUniquelyReferenced_nonNull_native(*v3);
  sub_100177B44();
  sub_10017742C(a1, a2, a3, v7);
  v8 = *v3;
  *v3 = v10;
  return sub_100177AC8(v8);
}

uint64_t sub_1001772B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  char v9;
  uint64_t v10;
  uint64_t v12;

  swift_isUniquelyReferenced_nonNull_native(*v4);
  sub_100177B44();
  sub_10017765C(a1, a2, a3, a4, v9);
  v10 = *v4;
  *v4 = v12;
  return sub_100177AC8(v10);
}

uint64_t sub_100177318(__int16 a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v15;

  v6 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
  v15 = *v6;
  *v6 = 0x8000000000000000;
  sub_100177788(a1 & 0x1FF, a2, a3, a4 & 0x1FF, a5, isUniquelyReferenced_nonNull_native);
  v13 = *v6;
  *v6 = v15;
  return swift_bridgeObjectRelease(v13);
}

unint64_t sub_1001773A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D8510;
  if (!qword_1002D8510)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_1002D8510);
  }
  return result;
}

uint64_t sub_1001773E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0(&qword_1002D7D78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_10017742C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  Swift::Int v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  _QWORD *v21;
  _OWORD *result;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v11 = sub_10011D2A8(a2, a3);
  v13 = v10[2];
  v14 = (v12 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = v11;
  v17 = v12;
  sub_1001085C0(&qword_1002DAC18);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15))
    goto LABEL_5;
  v18 = sub_10011D2A8(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return result;
  }
  v16 = v18;
LABEL_5:
  v20 = *v5;
  if ((v17 & 1) != 0)
  {
    v21 = (_QWORD *)(v20[7] + 32 * v16);
    sub_100110DC0(v21);
    return sub_10011AC74(a1, v21);
  }
  else
  {
    sub_100177904(v16, a2, a3, a1, v20);
    return (_OWORD *)swift_bridgeObjectRetain(a3);
  }
}

void sub_100177548(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  Swift::Int v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v11 = sub_10011D2A8(a2, a3);
  v13 = v10[2];
  v14 = (v12 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = v11;
  v17 = v12;
  sub_1001085C0(&qword_1002D9188);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15))
    goto LABEL_5;
  v18 = sub_10011D2A8(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }
  v16 = v18;
LABEL_5:
  v20 = *v5;
  if ((v17 & 1) != 0)
  {
    v21 = v20[7];

    *(_QWORD *)(v21 + 8 * v16) = a1;
  }
  else
  {
    sub_10017796C(v16, a2, a3, a1, v20);
    swift_bridgeObjectRetain(a3);
  }
}

void sub_10017765C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  _BOOL8 v16;
  Swift::Int v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v13 = sub_10011D2A8(a3, a4);
  v15 = v12[2];
  v16 = (v14 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_9;
  }
  v18 = v13;
  v19 = v14;
  sub_1001085C0(&qword_1002DAC20);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a5 & 1, v17))
    goto LABEL_5;
  v20 = sub_10011D2A8(a3, a4);
  if ((v19 & 1) != (v21 & 1))
  {
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }
  v18 = v20;
LABEL_5:
  v22 = *v6;
  if ((v19 & 1) != 0)
  {
    v23 = v22[7] + 16 * v18;

    *(_QWORD *)v23 = a1;
    *(_QWORD *)(v23 + 8) = a2;
  }
  else
  {
    sub_1001779B4(v18, a3, a4, a1, a2, v22);
    swift_bridgeObjectRetain(a4);
  }
}

uint64_t sub_100177788(__int16 a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  _BOOL8 v20;
  Swift::Int v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v7 = (_QWORD **)v6;
  v30 = a4;
  v31 = a2;
  v32 = a3;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)*v6;
  v17 = sub_10011D378(a5);
  v19 = v16[2];
  v20 = (v18 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_10;
  }
  v22 = v17;
  v23 = v18;
  sub_1001085C0(&qword_1002DAC10);
  result = _NativeDictionary.ensureUnique(isUnique:capacity:)(a6 & 1, v21);
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_10011D378(a5);
  if ((v23 & 1) != (v25 & 1))
  {
LABEL_10:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v11);
    __break(1u);
    return result;
  }
  v22 = result;
LABEL_5:
  v26 = *v7;
  if ((v23 & 1) != 0)
  {
    v27 = v26[7] + 32 * v22;
    *(_BYTE *)v27 = a1;
    *(_BYTE *)(v27 + 1) = HIBYTE(a1) & 1;
    v28 = v32;
    *(_QWORD *)(v27 + 8) = v31;
    *(_QWORD *)(v27 + 16) = v28;
    BYTE1(v28) = BYTE1(v30);
    *(_BYTE *)(v27 + 24) = v30;
    *(_BYTE *)(v27 + 25) = BYTE1(v28) & 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a5, v11);
    return sub_100177A00(v22, (uint64_t)v15, a1 & 0x1FF, v31, v32, v30 & 0x1FF, v26);
  }
  return result;
}

_OWORD *sub_100177904(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_10011AC74(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_10017796C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1001779B4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_100177A00(unint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6, _QWORD *a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  a7[(a1 >> 6) + 8] |= 1 << a1;
  v14 = a7[6];
  v15 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * a1, a2, v15);
  v17 = a7[7] + 32 * a1;
  *(_BYTE *)v17 = a3;
  *(_BYTE *)(v17 + 1) = HIBYTE(a3) & 1;
  *(_QWORD *)(v17 + 8) = a4;
  *(_QWORD *)(v17 + 16) = a5;
  *(_BYTE *)(v17 + 24) = a6;
  *(_BYTE *)(v17 + 25) = HIBYTE(a6) & 1;
  v18 = a7[2];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    a7[2] = v20;
  return result;
}

uint64_t sub_100177AC8(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_100177ADC()
{
  return type metadata accessor for UUID(0);
}

id sub_100177AF8()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 680));
}

id sub_100177B00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return objc_msgSend(a1, *(SEL *)(v7 + 1328), v5, v6, a5, 0);
}

uint64_t sub_100177B14()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t sub_100177B20()
{
  uint64_t v0;

  return swift_endAccess(v0 - 128);
}

void sub_100177B28(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100176C34(a1, (a2 - 32) | 0x8000000000000000, v2);
}

void sub_100177B44()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

id sub_100177B5C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 3968));
}

void sub_100177B68()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_100177B7C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1001773E4(v1, v0);
}

uint64_t sub_100177B88()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100177B94()
{
  _QWORD *v0;

  return swift_bridgeObjectRetain(*v0);
}

Swift::Void __swiftcall AudioCallBackgroundGradientViewController.viewDidLoad()()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[5];
  objc_super v43;

  v43.receiver = v0;
  v43.super_class = (Class)sub_100137260();
  objc_msgSendSuper2(&v43, "viewDidLoad");
  v3 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 100.0);
  v42[0] = xmmword_100243A70;
  v42[1] = xmmword_100243A80;
  v42[2] = xmmword_100243A90;
  v42[3] = xmmword_100243AA0;
  v42[4] = xmmword_100241FE0;
  v4 = objc_msgSend((id)objc_opt_self(UIColorEffect), "_colorEffectCAMatrix:", v42);
  v5 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  if (v3)
  {
    if (v4)
    {
      v6 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
      v7 = swift_allocObject(v6, 48, 7);
      *(_OWORD *)(v7 + 16) = xmmword_100241810;
      *(_QWORD *)(v7 + 32) = v3;
      *(_QWORD *)(v7 + 40) = v4;
      *(_QWORD *)&v42[0] = v7;
      specialized Array._endMutation()(v7, v8);
      v1 = (void *)sub_10010BBE8(0, &qword_1002D8CF8, UIVisualEffect_ptr);
      v9 = v3;
      v10 = v4;
      v11 = v9;
      v2 = v10;
      Array._bridgeToObjectiveC()();
      sub_1001781C8();
      objc_msgSend(v5, "setBackgroundEffects:", v1);

    }
  }
  v12 = objc_msgSend(v0, "view");
  if (!v12)
  {
    __break(1u);
    goto LABEL_11;
  }
  v13 = v12;
  objc_msgSend(v12, "addSubview:", v5);

  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v15 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100241800;
  v16 = sub_10010A1B8(v15, "leadingAnchor");
  v17 = sub_1001781A8();
  if (!v17)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, "leadingAnchor");
  sub_1001781D4();
  v20 = sub_1001781B8();
  sub_100136678();

  *(_QWORD *)(v15 + 32) = v18;
  v22 = sub_10010A1B8(v21, "trailingAnchor");
  v23 = sub_1001781A8();
  if (!v23)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "trailingAnchor");
  sub_1001781D4();
  v26 = sub_1001781B8();
  sub_100136678();

  *(_QWORD *)(v15 + 40) = v24;
  v28 = sub_10010A1B8(v27, "topAnchor");
  v29 = sub_1001781A8();
  if (!v29)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, "topAnchor");
  sub_1001781D4();
  v32 = sub_1001781B8();
  sub_100136678();

  *(_QWORD *)(v15 + 48) = v30;
  v34 = sub_10010A1B8(v33, "bottomAnchor");
  v35 = sub_1001781A8();
  if (v35)
  {
    v36 = v35;
    v37 = (void *)objc_opt_self(NSLayoutConstraint);
    v38 = objc_msgSend(v36, "bottomAnchor");

    v39 = objc_msgSend(v1, "constraintEqualToAnchor:", v38);
    *(_QWORD *)(v15 + 56) = v39;
    *(_QWORD *)&v42[0] = v15;
    specialized Array._endMutation()(v40, v41);
    sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
    Array._bridgeToObjectiveC()();
    sub_1001781C8();
    objc_msgSend(v37, "activateConstraints:", v1);

    return;
  }
LABEL_14:
  __break(1u);
}

id AudioCallBackgroundGradientViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  objc_class *v6;
  NSString v7;
  id v8;
  objc_super v10;

  v6 = (objc_class *)sub_100137260();
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = v6;
  v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

id AudioCallBackgroundGradientViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

id AudioCallBackgroundGradientViewController.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)sub_100137260();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

uint64_t type metadata accessor for AudioCallBackgroundGradientViewController()
{
  return objc_opt_self(PHAudioCallBackgroundGradientViewController);
}

id sub_1001781A8()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1912));
}

id sub_1001781B8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2128), v1);
}

uint64_t sub_1001781C8()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

void sub_1001781D4()
{
  void *v0;

}

uint64_t sub_1001781DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_1001781E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100178270(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_DWORD *)(v6 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain(v16);
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v5);
  }
  return v4;
}

uint64_t sub_100178340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_100178398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_100178404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_100178470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1001784DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_100178548(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return sub_100109FF4(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_100178624 + 4 * byte_100243AE0[v21 - 1]))();
}

void sub_100178698(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = &dword_100000004;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t type metadata accessor for ClarityUITitleHeader(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ClarityUITitleHeader);
}

uint64_t sub_100178898(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_100266F3C, 1);
}

uint64_t sub_1001788CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_1001788E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
  }
  else
  {
    __chkstk_darwin();
    v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      v9 = v5;
      v10 = v8;
      v11 = a2;
      do
      {
        v12 = *v9++;
        *v10++ = v12;
        --v11;
      }
      while (v11);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata(0, a2);
  }
  __chkstk_darwin();
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v15 = (int *)(TupleTypeMetadata + 32);
    v16 = a2;
    do
    {
      if (a2 == 1)
        v17 = 0;
      else
        v17 = *v15;
      v19 = *v5++;
      v18 = v19;
      v20 = *a1++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(&v14[v17], v20);
      v15 += 4;
      --v16;
    }
    while (v16);
  }
  return TupleView.init(_:)(v14, TupleTypeMetadata);
}

uint64_t sub_100178A24(void (*a1)(void), uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD v14[4];

  a1();
  v14[0] = a5;
  v14[1] = a6;
  v14[2] = a7;
  v14[3] = a8;
  type metadata accessor for ClarityUITitleHeader(0, (uint64_t)v14);
  return a3();
}

uint64_t sub_100178AA4@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t WitnessTable;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char v76[16];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;

  v75 = a2;
  v3 = a1[2];
  v69 = a1[3];
  v68 = a1[4];
  v67 = a1[5];
  v90 = v3;
  v91 = v69;
  v92 = v68;
  v93 = v67;
  type metadata accessor for Label(255, &v90);
  v4 = sub_10017960C();
  v5 = sub_1001795F4((uint64_t)&protocol conformance descriptor for Label<A, B>);
  v6 = sub_1001793A0();
  v90 = v2;
  v91 = v4;
  v92 = v5;
  v93 = v6;
  v7 = sub_100179618(v6, (uint64_t)&v90, (uint64_t)&opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>);
  v8 = sub_1001795FC(v7, v7, (uint64_t)&type metadata for Spacer);
  v9 = sub_100179624(v8);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v9);
  v10 = type metadata accessor for HStack(0, v9, WitnessTable);
  v64 = *(_QWORD *)(v10 - 8);
  sub_1001795E4();
  __chkstk_darwin(v11, v12);
  v14 = (char *)&WitnessTable - v13;
  v15 = sub_10010AD84(&qword_1002D95F8);
  v16 = type metadata accessor for ModifiedContent(0, v10, v15);
  v66 = *(_QWORD *)(v16 - 8);
  sub_1001795E4();
  __chkstk_darwin(v17, v18);
  v20 = (char *)&WitnessTable - v19;
  v21 = sub_1001795DC(0, v16);
  v70 = *(_QWORD *)(v21 - 8);
  sub_1001795E4();
  __chkstk_darwin(v22, v23);
  v25 = (char *)&WitnessTable - v24;
  v26 = sub_1001795DC(0, v21);
  v74 = *(_QWORD *)(v26 - 8);
  sub_1001795E4();
  __chkstk_darwin(v27, v28);
  v63 = (char *)&WitnessTable - v29;
  v30 = sub_1001795DC(0, v26);
  v73 = *(_QWORD *)(v30 - 8);
  v32 = __chkstk_darwin(v30, v31);
  v65 = (char *)&WitnessTable - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v32, v34);
  v71 = (char *)&WitnessTable - v36;
  v77 = v3;
  v78 = v69;
  v79 = v68;
  v80 = v67;
  v81 = v72;
  v37 = static VerticalAlignment.center.getter(v35);
  v38 = HStack.init(alignment:spacing:content:)(v37, 0, 1, sub_1001793E0, v76, v9, WitnessTable);
  v39 = static Font.clarityUINavigationTitle.getter(v38);
  v40 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v10);
  View.font(_:)(v39, v10, v40);
  v41 = swift_release(v39);
  v42 = (*(uint64_t (**)(char *, uint64_t, __n128))(v64 + 8))(v14, v10, v41);
  v43 = static Edge.Set.top.getter(v42);
  v44 = static ClarityUIMetrics.titleTopPadding.getter();
  v45 = sub_1001793EC();
  v88 = v40;
  v89 = v45;
  v46 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  View.padding(_:_:)(v43, *(_QWORD *)&v44, 0, v16, v46);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v20, v16);
  v48 = static Edge.Set.bottom.getter(v47);
  v49 = static ClarityUIMetrics.titleBottomPadding.getter();
  v86 = v46;
  v87 = &protocol witness table for _PaddingLayout;
  v50 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  v51 = v63;
  View.padding(_:_:)(v48, *(_QWORD *)&v49, 0, v21, v50);
  v52 = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v25, v21);
  v53 = static Edge.Set.horizontal.getter(v52);
  v54 = static ClarityUIMetrics.titleHorizontalPadding.getter();
  v84 = v50;
  v85 = &protocol witness table for _PaddingLayout;
  v55 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v26);
  v56 = v65;
  View.padding(_:_:)(v53, *(_QWORD *)&v54, 0, v26, v55);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v51, v26);
  v82 = v55;
  v83 = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  v57 = v73;
  v58 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  v59 = v71;
  v58(v71, v56, v30);
  v60 = *(void (**)(char *, uint64_t))(v57 + 8);
  v60(v56, v30);
  v58(v75, v59, v30);
  return ((uint64_t (*)(char *, uint64_t))v60)(v59, v30);
}

uint64_t sub_100178F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  void (*v33)(char *, uint64_t);
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[16];
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49[16];
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  _QWORD v57[2];
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  unint64_t v63;

  v39 = a1;
  v42 = a6;
  v10 = type metadata accessor for MultimodalNavigationTitleLabelStyle(0);
  v41 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = (char *)a2;
  v61 = a3;
  v62 = a4;
  v63 = a5;
  v14 = type metadata accessor for Label(0, &v60);
  v40 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v35 - v16;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Label<A, B>, v14);
  v36 = WitnessTable;
  v35 = sub_1001793A0();
  v60 = (char *)v14;
  v61 = (uint64_t *)v10;
  v62 = WitnessTable;
  v63 = v35;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v60, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v38 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v21 = __chkstk_darwin(OpaqueTypeMetadata2, v20);
  v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v24);
  v37 = (char *)&v35 - v25;
  v50 = a2;
  v51 = a3;
  v52 = a4;
  v53 = a5;
  v54 = v39;
  v44 = a2;
  v45 = a3;
  v46 = a4;
  v47 = a5;
  v48 = v39;
  v26 = Label.init(title:icon:)(sub_100179430, v49, sub_10017943C, v43, a2, a3, a4, a5);
  MultimodalNavigationTitleLabelStyle.init()(v26);
  v27 = v36;
  v28 = v35;
  View.labelStyle<A>(_:)(v13, v14, v10, v36, v35);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v14);
  v60 = (char *)v14;
  v61 = (uint64_t *)v10;
  v62 = v27;
  v63 = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v60, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v30 = v38;
  v31 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v32 = v37;
  v31(v37, v23, OpaqueTypeMetadata2);
  v33 = *(void (**)(char *, uint64_t))(v30 + 8);
  v33(v23, OpaqueTypeMetadata2);
  v31(v23, v32, OpaqueTypeMetadata2);
  v58 = 0;
  v59 = 0;
  v60 = v23;
  v61 = &v58;
  v57[0] = OpaqueTypeMetadata2;
  v57[1] = &type metadata for Spacer;
  v55 = OpaqueTypeConformance2;
  v56 = &protocol witness table for Spacer;
  sub_1001788E4((uint64_t *)&v60, 2, (uint64_t)v57);
  v33(v32, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v33)(v23, OpaqueTypeMetadata2);
}

uint64_t sub_100179254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *);
  uint64_t v10;

  v5 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1, a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *))(v5 + 16);
  v8(v7);
  ((void (*)(uint64_t, char *, uint64_t))v8)(a3, v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

uint64_t sub_1001792E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  _QWORD v17[4];

  v7 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1, a2);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = v10;
  v17[1] = v11;
  v17[2] = v12;
  v17[3] = v13;
  v14 = a1 + *(int *)(type metadata accessor for ClarityUITitleHeader(0, (uint64_t)v17) + 52);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15(v9, v14, a3);
  v15(a4, (uint64_t)v9, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a3);
}

unint64_t sub_1001793A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DACD0;
  if (!qword_1002DACD0)
  {
    v1 = type metadata accessor for MultimodalNavigationTitleLabelStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MultimodalNavigationTitleLabelStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1002DACD0);
  }
  return result;
}

uint64_t sub_1001793E0()
{
  return sub_100179448((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100178F48);
}

unint64_t sub_1001793EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D95F0;
  if (!qword_1002D95F0)
  {
    v1 = sub_10010AD84(&qword_1002D95F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002D95F0);
  }
  return result;
}

uint64_t sub_100179430()
{
  return sub_100179448((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100179254);
}

uint64_t sub_10017943C()
{
  return sub_100179448((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001792E8);
}

uint64_t sub_100179448(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10017945C(__int128 *a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;

  v2 = a1[1];
  v17 = *a1;
  v18 = v2;
  type metadata accessor for Label(255, &v17);
  v3 = sub_10017960C();
  v4 = sub_1001795F4((uint64_t)&protocol conformance descriptor for Label<A, B>);
  v5 = sub_1001793A0();
  *(_QWORD *)&v17 = v1;
  *((_QWORD *)&v17 + 1) = v3;
  *(_QWORD *)&v18 = v4;
  *((_QWORD *)&v18 + 1) = v5;
  v6 = sub_100179618(v5, (uint64_t)&v17, (uint64_t)&opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>);
  v7 = sub_1001795FC(v6, v6, (uint64_t)&type metadata for Spacer);
  v8 = sub_100179624(v7);
  v9 = sub_1001795F4((uint64_t)&protocol conformance descriptor for TupleView<A>);
  v10 = type metadata accessor for HStack(255, v8, v9);
  v11 = sub_10010AD84(&qword_1002D95F8);
  v12 = type metadata accessor for ModifiedContent(255, v10, v11);
  v13 = sub_1001795DC(255, v12);
  v14 = sub_1001795DC(255, v13);
  v15 = sub_1001795DC(255, v14);
  sub_1001795F4((uint64_t)&protocol conformance descriptor for HStack<A>);
  sub_1001793EC();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
}

uint64_t sub_1001795DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return type metadata accessor for ModifiedContent(a1, a2, v2);
}

uint64_t sub_1001795F4(uint64_t a1)
{
  uint64_t v1;

  return swift_getWitnessTable(a1, v1);
}

uint64_t sub_1001795FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getTupleTypeMetadata2(255, a2, a3, 0, 0);
}

uint64_t sub_10017960C()
{
  return type metadata accessor for MultimodalNavigationTitleLabelStyle(255);
}

uint64_t sub_100179618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getOpaqueTypeMetadata2(255, a2, a3, 0);
}

uint64_t sub_100179624(uint64_t a1)
{
  return type metadata accessor for TupleView(255, a1);
}

__n128 sub_100179630(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_100179644(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 26))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 1);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100179690(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_BYTE *)(result + 1) = a2 + 1;
  }
  return result;
}

void type metadata accessor for IncomingCallCoreAnalyticsView()
{
  sub_10017A1B0();
}

uint64_t sub_1001796E4(void *a1)
{
  int v1;
  uint64_t v3;
  unsigned int v4;

  objc_msgSend(objc_msgSend(a1, "provider"), "isFaceTimeProvider");
  sub_100163238();
  if (v1)
  {
    v4 = sub_10010E310(v3, "isVideo");

    if (v4)
      return 2;
    else
      return 1;
  }
  else
  {
    objc_msgSend(sub_10017A1A4(), "isTelephonyProvider");
    sub_100163238();
    objc_msgSend(sub_10017A1A4(), "isSystemProvider");
    sub_100163238();

    return 3;
  }
}

uint64_t sub_100179870(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  id v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  id v44;
  NSString v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v52;
  id v53;
  NSString v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v61;

  static String._unconditionallyBridgeFromObjectiveC(_:)(SBSUIInCallTransitionAnalyticsSourceBannerDismissal);
  v4 = sub_10017A16C();
  if (v2 == v4 && v1 == v5)
  {
    sub_10017A17C();
    v7 = 0;
    goto LABEL_20;
  }
  sub_10017A150(v4, v5);
  sub_10017A188();
  sub_100109558();
  v7 = 0;
  if ((v2 & 1) == 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(SBSUIInCallTransitionAnalyticsSourceHomeButton);
    v8 = sub_10017A16C();
    if (v2 == v8 && v9 == 0)
    {
      sub_10017A17C();
    }
    else
    {
      sub_10017A150(v8, v9);
      sub_10017A188();
      sub_100109558();
      if ((v2 & 1) == 0)
      {
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(SBSUIInCallTransitionAnalyticsSourceSystemGesture);
        v13 = v12;
        v14 = sub_10017A194();
        if (v11 == v14 && v13 == v15)
        {
          v7 = 2;
          sub_10010970C(v13);
          goto LABEL_20;
        }
        v17 = v15;
        v18 = sub_10017A19C(v11, v13, v14, v15);
        sub_100109558();
        swift_bridgeObjectRelease(v17);
        if ((v18 & 1) != 0)
        {
          v7 = 2;
          goto LABEL_20;
        }
        static String._unconditionallyBridgeFromObjectiveC(_:)(SBSUIInCallTransitionAnalyticsSourceBannerSwipeToUnfurl);
        v20 = sub_10017A16C();
        if (v18 == v20 && v17 == v21)
        {
          sub_10017A17C();
        }
        else
        {
          sub_10017A150(v20, v21);
          sub_10017A188();
          sub_100109558();
          if ((v18 & 1) == 0)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(SBSUIInCallTransitionAnalyticsSourceBannerTap);
            v23 = sub_10017A16C();
            if (v18 == v23 && v17 == v24)
            {
              sub_10017A17C();
            }
            else
            {
              sub_10017A150(v23, v24);
              sub_10017A188();
              sub_100109558();
              if ((v18 & 1) == 0)
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)(SBSUIInCallTransitionAnalyticsSourceDeviceLock);
                v26 = sub_10017A16C();
                if (v18 == v26 && v17 == v27)
                {
                  sub_10017A17C();
                }
                else
                {
                  sub_10017A150(v26, v27);
                  sub_10017A188();
                  sub_100109558();
                  if ((v18 & 1) == 0)
                  {
                    static String._unconditionallyBridgeFromObjectiveC(_:)(SBSUIInCallTransitionAnalyticsSourceFullscreenOverlayDismissal);
                    v29 = sub_10017A16C();
                    if (v18 == v29 && v17 == v30)
                    {
                      sub_10017A17C();
                    }
                    else
                    {
                      sub_10017A150(v29, v30);
                      sub_10017A188();
                      sub_100109558();
                      if ((v18 & 1) == 0)
                      {
                        static String._unconditionallyBridgeFromObjectiveC(_:)(SBSUIInCallTransitionAnalyticsSourceSwitcherDismissal);
                        v32 = sub_10017A16C();
                        if (v18 == v32 && v17 == v33)
                        {
                          sub_10017A17C();
                        }
                        else
                        {
                          sub_10017A150(v32, v33);
                          sub_10017A188();
                          sub_100109558();
                          if ((v18 & 1) == 0)
                          {
                            v35 = a1;
                            v36 = sub_100136770();
                            v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
                            v39 = v38;
                            v40 = sub_10017A194();
                            if (v37 == v40 && v39 == v41)
                            {

                              sub_10010970C(v39);
                            }
                            else
                            {
                              v43 = sub_10017A19C(v37, v39, v40, v41);

                              swift_bridgeObjectRelease(v39);
                              sub_100109544();
                              if ((v43 & 1) == 0)
                              {
                                v44 = v35;
                                v45 = String._bridgeToObjectiveC()();
                                v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
                                v48 = v47;
                                v49 = sub_10017A194();
                                if (v46 == v49 && v48 == v50)
                                {

                                  sub_10010970C(v48);
                                }
                                else
                                {
                                  v52 = sub_10017A19C(v46, v48, v49, v50);

                                  swift_bridgeObjectRelease(v48);
                                  sub_100109544();
                                  if ((v52 & 1) == 0)
                                  {
                                    v53 = v44;
                                    v54 = sub_100136770();
                                    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
                                    v57 = v56;
                                    v58 = sub_10017A194();
                                    if (v55 == v58 && v57 == v59)
                                    {
                                      sub_10017A17C();
                                      v7 = 13;
                                    }
                                    else
                                    {
                                      v61 = sub_10017A19C(v55, v57, v58, v59);
                                      swift_bridgeObjectRelease(v57);
                                      sub_100109544();
                                      if ((v61 & 1) != 0)
                                        v7 = 13;
                                      else
                                        v7 = 11;
                                    }

                                    goto LABEL_20;
                                  }
                                }
                                v7 = 9;
                                goto LABEL_20;
                              }
                            }
                            v7 = 8;
                            goto LABEL_20;
                          }
                        }
                        v7 = 7;
                        goto LABEL_20;
                      }
                    }
                    v7 = 6;
                    goto LABEL_20;
                  }
                }
                v7 = 5;
                goto LABEL_20;
              }
            }
            v7 = 4;
            goto LABEL_20;
          }
        }
        v7 = 3;
        goto LABEL_20;
      }
    }
    v7 = 1;
  }
LABEL_20:

  return v7;
}

uint64_t sub_100179C60(void *a1)
{
  id v2;
  unsigned int v3;
  unsigned int v5;

  v2 = objc_msgSend(a1, "status");
  if ((_DWORD)v2 == 6)
  {
    v3 = sub_10010E310((uint64_t)v2, "disconnectedReason");

    if (v3 >= 7)
      return 0;
    else
      return (0x5000201010400uLL >> (8 * v3));
  }
  else
  {
    v5 = sub_10010E310((uint64_t)v2, "status");

    if (v5 == 1)
      return 3;
    else
      return 6;
  }
}

uint64_t sub_100179CE8(uint64_t result)
{
  return result;
}

unint64_t sub_100179CF0(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

unint64_t sub_100179D00(unint64_t result)
{
  if (result >= 0xE)
    return 14;
  return result;
}

uint64_t sub_100179D10()
{
  unsigned __int8 *v0;

  return sub_100107B2C(*v0);
}

void sub_100179D18(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_100107BFC(a1, *v1);
}

uint64_t sub_100179D20(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_100107C1C(a1, *v1);
}

unint64_t sub_100179D28@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100179CF0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100179D50@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = sub_100179CE8(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_100179D78(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1001093CC(a1, *v1);
}

unint64_t sub_100179D80@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100179D00(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100179DA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DACD8;
  if (!qword_1002DACD8)
  {
    v1 = objc_opt_self(TUCallProvider);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DACD8);
  }
  return result;
}

unint64_t sub_100179DE4()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1002DACE0;
  if (!qword_1002DACE0)
  {
    v1 = sub_100179DA8();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1002DACE0);
  }
  return result;
}

uint64_t sub_100179E24(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF3)
  {
    if (a2 + 13 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 13) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 14;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v5 = v6 - 14;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_100179EAC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_100179EF8 + 4 * byte_100243B75[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_100179F2C + 4 * byte_100243B70[v4]))();
}

uint64_t sub_100179F2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100179F34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100179F3CLL);
  return result;
}

uint64_t sub_100179F48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100179F50);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_100179F54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100179F5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for BannerDismissalReason()
{
  sub_10017A1B0();
}

uint64_t sub_100179F74(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_100179FFC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10017A048 + 4 * byte_100243B7F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10017A07C + 4 * byte_100243B7A[v4]))();
}

uint64_t sub_10017A07C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10017A084(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10017A08CLL);
  return result;
}

uint64_t sub_10017A098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10017A0A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10017A0A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10017A0AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for CallType()
{
  sub_10017A1B0();
}

unint64_t sub_10017A0C8()
{
  unint64_t result;

  result = qword_1002DACE8;
  if (!qword_1002DACE8)
  {
    result = swift_getWitnessTable(&unk_100243C48, &unk_10028C210);
    atomic_store(result, (unint64_t *)&qword_1002DACE8);
  }
  return result;
}

unint64_t sub_10017A108()
{
  unint64_t result;

  result = qword_1002DACF0;
  if (!qword_1002DACF0)
  {
    result = swift_getWitnessTable(&unk_100243CE8, &unk_10028C180);
    atomic_store(result, (unint64_t *)&qword_1002DACF0);
  }
  return result;
}

uint64_t sub_10017A150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, a1, a2, 0);
}

uint64_t sub_10017A16C()
{
  uint64_t v0;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_10017A17C()
{
  uint64_t v0;

  return swift_bridgeObjectRelease_n(v0, 2);
}

uint64_t sub_10017A188()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10017A194()
{
  uint64_t v0;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_10017A19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0);
}

id sub_10017A1A4()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 824));
}

uint64_t PHPTTFullScreenContainerViewController.pttViewController(bannnerPresentationManager:)()
{
  uint64_t result;
  uint64_t v1;
  id v2;

  result = CNKBannerPresentationManager.conversationControlsManager.getter();
  if (result)
  {
    v1 = result;
    v2 = objc_allocWithZone((Class)type metadata accessor for PushToTalkFullScreenViewController(0));
    return PushToTalkFullScreenViewController.init(conversationControlsManager:)(v1);
  }
  return result;
}

uint64_t sub_10017A244(char a1, uint64_t a2)
{
  return sub_10017B9AC(a1, *(uint64_t (**)(uint64_t, _QWORD))(a2 + 16), a2);
}

void sub_10017A250(void *a1, id a2, char a3, uint64_t a4, uint64_t a5)
{
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v9 = objc_msgSend(a2, "buttonsForAmbientTransition");
  if (v9)
  {
    v10 = v9;
    v11 = sub_1001085C0((uint64_t *)&unk_1002DAD30);
    v12 = sub_10017BA28(v11);

  }
  else
  {
    v12 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v13 = objc_msgSend(a1, "buttonsForAmbientTransition");
  if (v13)
  {
    v14 = v13;
    v15 = sub_1001085C0((uint64_t *)&unk_1002DAD30);
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  }
  else
  {
    v16 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    sub_10017BA14();
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    if (!v17)
      goto LABEL_15;
  }
  else
  {
    v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_10017BA14();
    if (!v17)
      goto LABEL_15;
  }
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  v18 = 0;
  do
  {
    if ((v12 & 0xC000000000000001) != 0)
      specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v12);
    else
      sub_10017B9B8(v12 + 8 * v18);
    ++v18;
    sub_100137260();
    sub_10017A564(1u, a3 & 1);
    sub_100136124();
  }
  while (v17 != v18);
LABEL_15:
  swift_bridgeObjectRelease(v12);
  if (!((unint64_t)v16 >> 62))
  {
    v19 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_100168028();
    if (v19)
      goto LABEL_17;
LABEL_23:
    swift_bridgeObjectRelease(v16);
    v21 = sub_100109754((uint64_t)&unk_10028C4B8, 25);
    *(_QWORD *)(v21 + 16) = v16;
    v22 = a3 & 1;
    *(_BYTE *)(v21 + 24) = a3 & 1;
    sub_100168028();
    sub_10017A964((uint64_t)sub_10017B8A4, v21, 0, 0, 0.0);
    swift_release(v21);
    v23 = sub_100109754((uint64_t)&unk_10028C4E0, 25);
    *(_QWORD *)(v23 + 16) = v12;
    *(_BYTE *)(v23 + 24) = v22;
    v24 = sub_100109754((uint64_t)&unk_10028C508, 32);
    *(_QWORD *)(v24 + 16) = a4;
    *(_QWORD *)(v24 + 24) = a5;
    sub_10017BA14();
    swift_retain();
    sub_10017A964((uint64_t)sub_10017B8C4, v23, (uint64_t)sub_100174138, v24, 0.171428571);
    swift_release(v23);
    swift_release(v24);
    v25 = sub_100109754((uint64_t)&unk_10028C530, 40);
    *(_QWORD *)(v25 + 16) = v12;
    *(_BYTE *)(v25 + 24) = v22;
    *(_QWORD *)(v25 + 32) = v16;
    sub_10017A964((uint64_t)sub_10017B934, v25, 0, 0, 0.0);
    swift_release(v25);
    return;
  }
  if (v16 < 0)
    v27 = v16;
  else
    v27 = v16 & 0xFFFFFFFFFFFFFF8;
  sub_100168028();
  v19 = _CocoaArrayWrapper.endIndex.getter(v27);
  if (!v19)
    goto LABEL_23;
LABEL_17:
  if (v19 >= 1)
  {
    v20 = 0;
    do
    {
      if ((v16 & 0xC000000000000001) != 0)
        specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v16);
      else
        sub_10017B9B8(v16 + 8 * v20);
      ++v20;
      sub_100137260();
      sub_10017A564(0, a3 & 1);
      sub_100136124();
    }
    while (v19 != v20);
    goto LABEL_23;
  }
LABEL_35:
  __break(1u);
}

id sub_10017A564(unsigned int a1, unsigned int a2)
{
  void *v2;
  id result;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t Scale;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void (*v20)(void);
  void (*v21)(void);
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  CGAffineTransform v32;

  result = objc_msgSend(v2, "ambientButtonParts");
  if (!result)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  v6 = result;
  v7 = sub_10017B788();
  v8 = sub_10017BA28(v7);

  v31 = v2;
  v30 = __PAIR64__(a1, a2);
  if ((unint64_t)v8 >> 62)
  {
LABEL_21:
    if (v8 < 0)
      v29 = v8;
    else
      v29 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v29);
    if (v9)
    {
LABEL_4:
      v10 = 4;
      while (1)
      {
        if ((v8 & 0xC000000000000001) != 0)
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v8);
        else
          v11 = *(id *)(v8 + 8 * v10);
        v12 = v11;
        v13 = v10 - 3;
        if (__OFADD__(v10 - 4, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        result = objc_msgSend(v11, "view", v30, v31);
        if (!result)
          break;
        v14 = result;
        objc_msgSend(result, "_removeAllAnimations:", 1);

        ++v10;
        if (v13 == v9)
          goto LABEL_11;
      }
      __break(1u);
      goto LABEL_27;
    }
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9)
      goto LABEL_4;
  }
LABEL_11:
  swift_bridgeObjectRelease_n(v8, 2);
  Scale = sub_10017B244(BYTE4(v30) & 1, v30 & 1);
  if ((v16 & 1) != 0)
  {
    if (Scale)
    {
      v20 = (void (*)(void))sub_10017B640;
      v21 = (void (*)(void))sub_10017B94C;
      v22 = 0;
    }
    else
    {
      v20 = (void (*)(void))sub_10017B51C;
      v21 = (void (*)(void))sub_10017B5B0;
      v22 = (void (*)(void))sub_10017B94C;
    }
    return sub_10017B9FC(v20, 0, v21, 0, v22, 0);
  }
  else
  {
    if ((v30 & 0x100000000) != 0)
    {
      Scale = (uint64_t)CGAffineTransformMakeScale(&v32, *(CGFloat *)&Scale, *(CGFloat *)&Scale);
      v17 = *(_OWORD *)&v32.a;
      v18 = *(_OWORD *)&v32.c;
      v19 = *(_OWORD *)&v32.tx;
    }
    else
    {
      v17 = *(_OWORD *)&CGAffineTransformIdentity.a;
      v18 = *(_OWORD *)&CGAffineTransformIdentity.c;
      v19 = *(_OWORD *)&CGAffineTransformIdentity.tx;
    }
    *(_OWORD *)&v32.a = v17;
    *(_OWORD *)&v32.c = v18;
    *(_OWORD *)&v32.tx = v19;
    v23 = __chkstk_darwin(Scale, v16);
    __chkstk_darwin(v23, v24);
    sub_10017BA40();
    *(_BYTE *)(sub_100109754((uint64_t)&unk_10028C3F0, 17) + 16) = BYTE4(v30) & 1;
    sub_10017B994((void (*)(void))sub_10017B948, v25, (void (*)(void))sub_10017B948, v26, v27, v28, (void (*)(void))sub_10017B7C8);
    return (id)sub_10017BA1C();
  }
}

void sub_10017A7FC(char a1, char a2)
{
  char v2;
  uint64_t Scale;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CGAffineTransform v15;

  Scale = sub_10017BA34(a1, a2);
  if ((v4 & 1) != 0)
  {
    if (Scale)
    {
      v8 = sub_100109754((uint64_t)&unk_10028C3A0, 17);
      *(_BYTE *)(v8 + 16) = v2 & 1;
      sub_10017B9FC((void (*)(void))FactoryOutcome.rawValue.getter, 0, (void (*)(void))FactoryOutcome.rawValue.getter, 0, (void (*)(void))sub_10017B970, v8);
      swift_release(v8);
    }
  }
  else
  {
    if ((v2 & 1) != 0)
    {
      v5 = *(_OWORD *)&CGAffineTransformIdentity.a;
      v6 = *(_OWORD *)&CGAffineTransformIdentity.c;
      v7 = *(_OWORD *)&CGAffineTransformIdentity.tx;
    }
    else
    {
      Scale = (uint64_t)CGAffineTransformMakeScale(&v15, *(CGFloat *)&Scale, *(CGFloat *)&Scale);
      v5 = *(_OWORD *)&v15.a;
      v6 = *(_OWORD *)&v15.c;
      v7 = *(_OWORD *)&v15.tx;
    }
    *(_OWORD *)&v15.a = v5;
    *(_OWORD *)&v15.c = v6;
    *(_OWORD *)&v15.tx = v7;
    v9 = __chkstk_darwin(Scale, v4);
    __chkstk_darwin(v9, v10);
    sub_10017BA40();
    *(_BYTE *)(sub_100109754((uint64_t)&unk_10028C3C8, 17) + 16) = v2 & 1;
    sub_10017B994((void (*)(void))sub_10017B948, v11, (void (*)(void))sub_10017B74C, v12, v13, v14, (void (*)(void))sub_10017B768);
    sub_10017BA1C();
  }
}

void sub_10017A964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void (*v21)();
  uint64_t v22;

  v10 = (void *)objc_opt_self(UIView);
  v11 = swift_allocObject(&unk_10028C300, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  v21 = sub_100174138;
  v22 = v11;
  v17 = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_100112054;
  v20 = &unk_10028C318;
  v12 = _Block_copy(&v17);
  v13 = v22;
  swift_retain();
  swift_release(v13);
  v14 = swift_allocObject(&unk_10028C350, 32, 7);
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  v21 = (void (*)())sub_10017B240;
  v22 = v14;
  v17 = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_100110294;
  v20 = &unk_10028C368;
  v15 = _Block_copy(&v17);
  v16 = v22;
  sub_100135B74(a3, a4);
  swift_release(v16);
  objc_msgSend(v10, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v12, v15, 0.36, a5, 1.0, 300.0, 50.0, 0.0);
  _Block_release(v15);
  _Block_release(v12);
}

void sub_10017AAEC(uint64_t a1, char a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v9 = a1;
  else
    v9 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v6)
    goto LABEL_9;
LABEL_3:
  if (v6 >= 1)
  {
    v7 = 0;
    v8 = a3 & 1;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        sub_10017B9B8(a1 + 8 * v7);
      ++v7;
      sub_100137260();
      sub_10017A7FC(v8, a2 & 1);
      sub_100136124();
    }
    while (v6 != v7);
    goto LABEL_9;
  }
  __break(1u);
}

void sub_10017ABD0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (!v6)
      goto LABEL_9;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v6)
      goto LABEL_9;
  }
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  v7 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
      swift_unknownObjectRetain(v8);
    }
    ++v7;
    swift_getObjectType(v8);
    sub_10017AD70(1, a2 & 1);
    swift_unknownObjectRelease(v8);
  }
  while (v6 != v7);
LABEL_9:
  swift_bridgeObjectRelease(a1);
  if (!((unint64_t)a3 >> 62))
  {
    v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a3);
    if (v9)
      goto LABEL_11;
LABEL_17:
    swift_bridgeObjectRelease(a3);
    return;
  }
  if (a3 < 0)
    v13 = a3;
  else
    v13 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  v9 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v9)
    goto LABEL_17;
LABEL_11:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a3);
      }
      else
      {
        v11 = *(_QWORD *)(a3 + 8 * v10 + 32);
        swift_unknownObjectRetain(v11);
      }
      ++v10;
      swift_getObjectType(v11);
      sub_10017AD70(0, a2 & 1);
      swift_unknownObjectRelease(v11);
    }
    while (v9 != v10);
    goto LABEL_17;
  }
LABEL_29:
  __break(1u);
}

double sub_10017AD70(char a1, char a2)
{
  char v2;
  uint64_t v3;
  double result;
  char v5;
  uint64_t v6;

  v3 = sub_10017BA34(a1, a2);
  if ((v5 & 1) != 0 && !v3)
  {
    v6 = sub_100109754((uint64_t)&unk_10028C558, 17);
    *(_BYTE *)(v6 + 16) = v2 & 1;
    sub_10017B318((void (*)(void))sub_10017B68C, 0, (void (*)(void))sub_10017B6EC, 0, 0, 0, (void (*)(void))sub_10017B970);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_10017AEB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10017B9C4(a1);
  sub_10017A564(1u, 0);
  v3 = sub_100109754((uint64_t)&unk_10028C440, 24);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = sub_100109754((uint64_t)&unk_10028C468, 32);
  sub_10017B9EC(v4);
  sub_10017BA08();
  sub_10017B9D8((uint64_t)sub_10017B820, v5, (uint64_t)sub_10017B240);
  swift_release(v3);
  return sub_10017B984(v2);
}

void sub_10017AF38(uint64_t a1)
{
  swift_getObjectType(a1);
  sub_10017A7FC(1, 0);
}

uint64_t sub_10017AFFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10017B9C4(a1);
  sub_10017A564(0, 0);
  v3 = sub_100109754((uint64_t)&unk_10028C2B0, 24);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = sub_100109754((uint64_t)&unk_10028C2D8, 32);
  sub_10017B9EC(v4);
  sub_10017BA08();
  sub_10017B9D8((uint64_t)sub_10017B234, v5, (uint64_t)sub_10017B240);
  swift_release(v3);
  return sub_10017B984(v2);
}

void sub_10017B07C(uint64_t a1)
{
  swift_getObjectType(a1);
  sub_10017A7FC(0, 0);
}

id sub_10017B140()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AmbientAnimationCoordinator();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10017B190()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AmbientAnimationCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AmbientAnimationCoordinator()
{
  return objc_opt_self(_TtC13InCallService27AmbientAnimationCoordinator);
}

uint64_t sub_10017B1E0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10017B204(char a1)
{
  uint64_t v1;

  return sub_10017B9AC(a1, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 16) + 16), *(_QWORD *)(v1 + 16));
}

uint64_t sub_10017B210()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10017B234()
{
  uint64_t v0;

  sub_10017B07C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10017B244(char a1, char a2)
{
  void *v2;
  void *v3;
  id v6;

  v3 = v2;
  v6 = objc_msgSend(v3, "ambientButtonType");
  if (v6 == (id)2)
  {
    if ((a1 & 1) != 0 && (a2 & 1) != 0)
      return 0;
  }
  else if (v6 == (id)1 && (a1 & 1) == 0)
  {
    return 1;
  }
  return 0x3FECCCCCCCCCCCCDLL;
}

id sub_10017B2B8(void *a1, char a2)
{
  double v4;

  sub_10017B7D0(0x7974696361706FLL, 0xE700000000000000, a1);
  v4 = 0.0;
  if ((a2 & 1) == 0)
    objc_msgSend(a1, "alpha", 0.0);
  return objc_msgSend(a1, "setAlpha:", v4);
}

id sub_10017B318(void (*a1)(void), uint64_t a2, void (*a3)(void), uint64_t a4, void (*a5)(void), uint64_t a6, void (*a7)(void))
{
  void *v7;
  id result;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  void (*v21)(void);
  uint64_t v22;

  result = objc_msgSend(v7, "ambientButtonParts");
  if (!result)
    goto LABEL_35;
  v10 = result;
  v11 = sub_10017B788();
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if ((unint64_t)v12 >> 62)
  {
LABEL_26:
    if (v12 < 0)
      v22 = v12;
    else
      v22 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v12);
    if (v13)
      goto LABEL_4;
    return (id)swift_bridgeObjectRelease(v12);
  }
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v13)
    return (id)swift_bridgeObjectRelease(v12);
LABEL_4:
  for (i = 4; ; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0)
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v12);
    else
      v15 = *(id *)(v12 + 8 * i);
    v16 = v15;
    v17 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (a7)
      break;
LABEL_12:
    v19 = objc_msgSend(v16, "type");
    if (v19 == (id)2)
    {
      if (a5)
      {
        result = objc_msgSend(v16, "view");
        if (!result)
          goto LABEL_34;
        v20 = result;
        v21 = a5;
LABEL_22:
        v21();

      }
    }
    else
    {
      if (v19 == (id)1)
      {
        result = objc_msgSend(v16, "view");
        if (!result)
          goto LABEL_33;
        v20 = result;
        v21 = a3;
        goto LABEL_22;
      }
      if (!v19)
      {
        result = objc_msgSend(v16, "view");
        if (!result)
          goto LABEL_32;
        v20 = result;
        v21 = a1;
        goto LABEL_22;
      }
    }

    if (v17 == v13)
      return (id)swift_bridgeObjectRelease(v12);
  }
  result = objc_msgSend(v15, "view");
  if (result)
  {
    v18 = result;
    a7();

    goto LABEL_12;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

id sub_10017B51C(void *a1)
{
  id v2;
  _QWORD v4[6];

  v4[0] = 0x3FF0000000000000;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = 0x3FF0000000000000;
  v4[4] = 0;
  v4[5] = 0;
  objc_msgSend(a1, "setTransform:", v4);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "systemGreenColor");
  objc_msgSend(a1, "setBackgroundColor:", v2);

  return objc_msgSend(a1, "setAlpha:", 1.0);
}

id sub_10017B5B0(void *a1)
{
  CGAffineTransform v3;
  CGAffineTransform v4;

  CGAffineTransformMakeTranslation(&v4, -2.0, 2.0);
  CGAffineTransformRotate(&v3, &v4, -2.43);
  v4 = v3;
  objc_msgSend(a1, "setTransform:", &v4);
  return objc_msgSend(a1, "setAlpha:", 1.0);
}

id sub_10017B640(void *a1)
{
  return objc_msgSend(a1, "setAlpha:", 0.0);
}

id sub_10017B650(void *a1, _OWORD *a2)
{
  __int128 v2;
  _OWORD v4[3];

  v2 = a2[1];
  v4[0] = *a2;
  v4[1] = v2;
  v4[2] = a2[2];
  return objc_msgSend(a1, "setTransform:", v4);
}

void sub_10017B68C(void *a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
  objc_msgSend(a1, "setBackgroundColor:", v2);

}

id sub_10017B6EC(void *a1)
{
  __int128 v1;
  _OWORD v3[3];

  v1 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v3[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v3[1] = v1;
  v3[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  return objc_msgSend(a1, "setTransform:", v3);
}

uint64_t sub_10017B72C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10017B73C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_10017B74C(void *a1)
{
  uint64_t v1;

  return sub_10017B650(a1, *(_OWORD **)(v1 + 16));
}

id sub_10017B768(void *a1)
{
  uint64_t v1;
  double v2;

  v2 = 0.0;
  if (*(_BYTE *)(v1 + 16))
    v2 = 1.0;
  return objc_msgSend(a1, "setAlpha:", v2);
}

unint64_t sub_10017B788()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DAD28;
  if (!qword_1002DAD28)
  {
    v1 = objc_opt_self(PHAmbientButtonPart);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DAD28);
  }
  return result;
}

id sub_10017B7C8(void *a1)
{
  uint64_t v1;

  return sub_10017B2B8(a1, *(_BYTE *)(v1 + 16));
}

void sub_10017B7D0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, "_removePropertyAnimationsForLayerKeyPath:", v5);

}

void sub_10017B820()
{
  uint64_t v0;

  sub_10017AF38(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10017B82C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10017B858(char a1)
{
  uint64_t v1;
  void (*v2)(_QWORD);

  v2 = *(void (**)(_QWORD))(v1 + 16);
  if (v2)
    v2(a1 & 1);
  sub_100109438();
}

uint64_t sub_10017B880()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10017B8A4()
{
  uint64_t v0;

  sub_10017AAEC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), 0);
}

void sub_10017B8C4()
{
  uint64_t v0;

  sub_10017AAEC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), 1);
}

uint64_t sub_10017B8E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017B908()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10017B934()
{
  uint64_t v0;

  sub_10017ABD0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10017B974()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10017B984(uint64_t a1)
{
  return swift_release(a1);
}

id sub_10017B994(void (*a1)(void), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  uint64_t v7;
  uint64_t v8;

  return sub_10017B318(a1, v7, a3, v8, 0, 0, a7);
}

uint64_t sub_10017B9AC@<X0>(char a1@<W0>, uint64_t (*a2)(uint64_t, _QWORD)@<X2>, uint64_t a3@<X8>)
{
  return a2(a3, a1 & 1);
}

uint64_t sub_10017B9B8@<X0>(uint64_t a1@<X8>)
{
  return swift_unknownObjectRetain(*(_QWORD *)(a1 + 32));
}

uint64_t sub_10017B9C4(uint64_t a1)
{
  return swift_getObjectType(a1);
}

void sub_10017B9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_10017A964(a1, v3, a3, v4, 0.0);
}

uint64_t sub_10017B9EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  return swift_unknownObjectRetain(v1);
}

id sub_10017B9FC(void (*a1)(void), uint64_t a2, void (*a3)(void), uint64_t a4, void (*a5)(void), uint64_t a6)
{
  return sub_10017B318(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10017BA08()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100135B74(v1, v0);
}

uint64_t sub_10017BA14()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10017BA1C()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_10017BA28(uint64_t a1)
{
  uint64_t v1;

  return static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, a1);
}

uint64_t sub_10017BA34(char a1, char a2)
{
  return sub_10017B244(a1, a2);
}

void sub_10017BA54(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  unsigned int v5;
  id v6;

  if (a1)
  {
    v3 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
    v6 = objc_msgSend(v3, "frontmostAudioOrVideoCall");

    if (v6)
    {
      v4 = objc_msgSend(v6, "provider");
      v5 = objc_msgSend(v4, "supportsDynamicSystemUI");

      if (v5)
        objc_msgSend(a2, "requestTransitionToPresentationMode:isUserInitiated:analyticsSource:", 0, 0, 0);

    }
  }
}

id sub_10017BB84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicSystemUIPresentationStyleHandler();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10017BBD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicSystemUIPresentationStyleHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DynamicSystemUIPresentationStyleHandler()
{
  return objc_opt_self(ICSDynamicSystemUIPresentationStyleHandler);
}

uint64_t sub_10017BC24(uint64_t a1)
{
  int v1;
  id v2;
  _BOOL4 v3;
  uint64_t v4;
  int v5;
  int v6;
  id v7;
  id v8;

  v1 = a1;
  v2 = sub_10010BC5C(a1, "callStatus");
  if ((_DWORD)v2 == 6)
  {
    v3 = 1;
  }
  else
  {
    v2 = sub_10010BC5C((uint64_t)v2, "callStatus");
    v3 = (_DWORD)v2 == 1;
  }
  v4 = (uint64_t)sub_10010BC5C((uint64_t)v2, "isEmergency");
  if (!(_DWORD)v4 || (v4 = (uint64_t)sub_10010BC5C(v4, "isFailureExpected"), v5 = v4 ^ 1 | v3, v6 = v1, v5 == 1))
    v6 = 0;
  v7 = sub_10010BC5C(v4, "status");
  if ((_DWORD)v7 != 6
    || (v8 = sub_10010BC5C((uint64_t)v7, "disconnectedReasonRequiresCallBackUI"), !(_DWORD)v8)
    || (sub_10010BC5C((uint64_t)v8, "isEmergency") & 1) == 0)
  {
    v1 = 0;
  }
  return (v6 | v1) & 1;
}

void sub_10017BD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "systemImageNamed:", v4);
  sub_1001367E8();
  sub_100109830();
}

uint64_t sub_10017BD70(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_1001085C0(&qword_1002DAE38);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_10017BDC8()
{
  uint64_t v0;

  v0 = sub_1001085C0(&qword_1002DAE38);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_10017BE0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_10017106C();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_10017BE30()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

void sub_10017BE48()
{
  qword_1002E2E90 = 0xC034000000000000;
}

double sub_10017BE58()
{
  double result;

  result = 0.0;
  __asm { FMOV            V1.2D, #20.0 }
  xmmword_1002E2EA0 = xmmword_100243D90;
  *(_OWORD *)&qword_1002E2EB0 = _Q1;
  return result;
}

__n128 sub_10017BE74()
{
  __n128 result;

  __asm { FMOV            V0.2D, #12.0 }
  xmmword_1002E2EC0 = (__int128)result;
  *(__n128 *)&qword_1002E2ED0 = result;
  return result;
}

void sub_10017BE88()
{
  qword_1002E2EE0 = 0x4020000000000000;
}

void sub_10017BE98()
{
  qword_1002E2EE8 = 0x4020000000000000;
}

void sub_10017BEA8()
{
  qword_1002E2EF0 = 0x4014000000000000;
}

void sub_10017BEB8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService16CarPlayAlertView____lazy_storage___soundButton);
  if (!v1)
  {
    v2 = sub_10017BFAC(0xD000000000000020, 0x80000001001F58D0, 0xD000000000000016, (void *)0x80000001001F5900);
    sub_1001367F0(v2);
    sub_1001367E8();
    v1 = 0;
  }
  v3 = v1;
  sub_100109830();
}

void sub_10017BF34()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService16CarPlayAlertView____lazy_storage___callAgainButton);
  if (!v1)
  {
    v2 = sub_10017BFAC(0x69662E656E6F6870, 0xEA00000000006C6CLL, 0xD00000000000001BLL, (void *)0x80000001001F5920);
    sub_1001367F0(v2);
    sub_1001367E8();
    v1 = 0;
  }
  v3 = v1;
  sub_100109830();
}

id sub_10017BFAC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, _QWORD);
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  _BYTE v54[32];

  v50 = a3;
  v51 = a4;
  sub_1001085C0((uint64_t *)&unk_1002D7F50);
  sub_100120AA0();
  __chkstk_darwin(v6, v7);
  sub_10010BC88();
  v10 = v9 - v8;
  type metadata accessor for AttributeContainer(0);
  sub_100120AA0();
  __chkstk_darwin(v11, v12);
  sub_10010BC88();
  v15 = v14 - v13;
  sub_1001085C0(&qword_1002DA800);
  sub_100120AA0();
  __chkstk_darwin(v16, v17);
  sub_10010BC88();
  v20 = v19 - v18;
  v21 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  sub_10010BC88();
  v26 = v25 - v24;
  v27 = sub_10017E394();
  v52 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27, v28);
  sub_10010BC88();
  v31 = v30 - v29;
  static UIButton.Configuration.filled()(v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v26, enum case for UIButton.Configuration.CornerStyle.large(_:), v21);
  UIButton.Configuration.cornerStyle.setter(v26);
  v33 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v33, "secondarySystemBackgroundColor"));
  v34 = UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v33, "systemBlueColor"));
  sub_10011ADD4(v34, &qword_1002DA660, UIImage_ptr);
  sub_10017BD1C(a1, a2);
  UIButton.Configuration.image.setter(v35);
  if (qword_1002D7370 != -1)
    swift_once(&qword_1002D7370, sub_10017BEA8);
  UIButton.Configuration.imagePadding.setter(*(double *)&qword_1002E2EF0);
  v36 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v36);
  v37 = sub_100153440(v50, v51);
  v39 = v38;
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)(v37, v39, v15);
  v40 = type metadata accessor for AttributedString(0);
  sub_100108600(v20, 0, 1, v40);
  UIButton.Configuration.attributedTitle.setter(v20);
  v41 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify(v54);
  if (!sub_10017E3C8(v42))
  {
    KeyPath = swift_getKeyPath(&unk_100243DF8);
    *(&v50 - 2) = __chkstk_darwin(KeyPath, v44);
    v45 = swift_getKeyPath(&unk_100243E28);
    v53 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 12.0, UIFontWeightBold);
    v46 = sub_10017106C();
    AttributedString.subscript.setter(&v53, v45, v46);
  }
  v41(v54, 0);
  if (qword_1002D7358 != -1)
    swift_once(&qword_1002D7358, sub_10017BE74);
  UIButton.Configuration.contentInsets.setter(*(double *)&xmmword_1002E2EC0, *((double *)&xmmword_1002E2EC0 + 1), *(double *)&qword_1002E2ED0, unk_1002E2ED8);
  v47 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v48 = v52;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v10, v31, v27);
  sub_100108600(v10, 0, 1, v27);
  UIButton.configuration.setter(v10);
  objc_msgSend(v47, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v31, v27);
  return v47;
}

void sub_10017C39C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService16CarPlayAlertView____lazy_storage___cancelButton);
  if (!v1)
  {
    v2 = sub_10017C3E4();
    sub_1001367F0(v2);
    sub_1001367E8();
    v1 = 0;
  }
  v3 = v1;
  sub_100109830();
}

id sub_10017C3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v38;
  id v39;
  _BYTE v40[32];

  v0 = sub_1001085C0((uint64_t *)&unk_1002D7F50);
  __chkstk_darwin(v0, v1);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001085C0(&qword_1002DA800);
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UIButton.Configuration(0);
  v18 = *(_QWORD *)(v17 - 8);
  v20 = __chkstk_darwin(v17, v19);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, enum case for UIButton.Configuration.CornerStyle.large(_:), v12);
  UIButton.Configuration.cornerStyle.setter(v16);
  v23 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v23, "clearColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v23, "systemBlueColor"));
  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  sub_10017BD1C(0xD000000000000011, 0x80000001001F58B0);
  UIButton.Configuration.image.setter(v24);
  if (qword_1002D7370 != -1)
    swift_once(&qword_1002D7370, sub_10017BEA8);
  UIButton.Configuration.imagePadding.setter(*(double *)&qword_1002E2EF0);
  v25 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v25);
  v26 = sub_100153440(0x5F5353494D534944, (void *)0xEE004E4F49544341);
  v28 = v27;
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)(v26, v28, v7);
  v29 = type metadata accessor for AttributedString(0);
  sub_100108600((uint64_t)v11, 0, 1, v29);
  UIButton.Configuration.attributedTitle.setter(v11);
  v30 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify(v40);
  if (!sub_100109FF4(v31, 1, v29))
  {
    KeyPath = swift_getKeyPath(&unk_100243DF8);
    *(&v38 - 2) = __chkstk_darwin(KeyPath, v33);
    v34 = swift_getKeyPath(&unk_100243E28);
    v39 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 12.0);
    v35 = sub_10017106C();
    AttributedString.subscript.setter(&v39, v34, v35);
  }
  v30(v40, 0);
  v36 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v3, v22, v17);
  sub_100108600((uint64_t)v3, 0, 1, v17);
  UIButton.configuration.setter(v3);
  objc_msgSend(v36, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
  return v36;
}

id sub_10017C7F0(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *v9;
  id v10;
  objc_super v12;

  v9 = (objc_class *)sub_100137260();
  *(_QWORD *)&v4[OBJC_IVAR____TtC13InCallService16CarPlayAlertView____lazy_storage___soundButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13InCallService16CarPlayAlertView____lazy_storage___callAgainButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13InCallService16CarPlayAlertView____lazy_storage___cancelButton] = 0;
  v12.receiver = v4;
  v12.super_class = v9;
  v10 = objc_msgSendSuper2(&v12, "initWithFrame:", a1, a2, a3, a4);
  sub_10017C890();

  return v10;
}

void sub_10017C890()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  double v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  double v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  id v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  void *v77;
  Class isa;

  sub_10017C39C();
  v2 = v1;
  objc_msgSend(v0, "addSubview:", v1);

  v3 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v3, "setAxis:", 1);
  if (qword_1002D7360 != -1)
    swift_once(&qword_1002D7360, sub_10017BE88);
  objc_msgSend(v3, "setSpacing:", *(double *)&qword_1002E2EE0);
  objc_msgSend(v0, "addSubview:", v3);
  objc_msgSend(v3, "setAlignment:", 3);
  objc_msgSend(v3, "setDistribution:", 0);
  objc_msgSend(v3, "setPreservesSuperviewLayoutMargins:", 1);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v3, "setContentHuggingPriority:forAxis:", 1, v4);
  v5 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = sub_100153440(0x52454C415F524143, (void *)0xEF454C5449545F54);
  sub_10017E2FC(v6, v7, v5);
  v8 = (void *)objc_opt_self(UIFont);
  v9 = objc_msgSend(v8, "systemFontOfSize:weight:", 20.0, UIFontWeightBold);
  objc_msgSend(v5, "setFont:", v9);

  objc_msgSend(v5, "setTextAlignment:", 1);
  objc_msgSend(v5, "setNumberOfLines:", 0);
  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "dynamicLabelColor");
  objc_msgSend(v5, "setTextColor:", v11);

  LODWORD(v12) = 1148846080;
  objc_msgSend(v5, "setContentHuggingPriority:forAxis:", 1, v12);
  objc_msgSend(v3, "addArrangedSubview:", v5);
  v13 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = sub_100153440(0xD000000000000012, (void *)0x80000001001F5970);
  sub_10017E2FC(v14, v15, v13);
  v16 = objc_msgSend(v8, "systemFontOfSize:", 12.0);
  objc_msgSend(v13, "setFont:", v16);

  objc_msgSend(v13, "setNumberOfLines:", 0);
  objc_msgSend(v13, "setTextAlignment:", 1);
  v17 = objc_msgSend(v10, "dynamicLabelColor");
  v77 = v5;
  objc_msgSend(v5, "setTextColor:", v17);

  LODWORD(v18) = 1148846080;
  objc_msgSend(v13, "setContentHuggingPriority:forAxis:", 1, v18);
  v76 = v13;
  objc_msgSend(v3, "addArrangedSubview:", v13);
  v19 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v19, "setAxis:", 0);
  if (qword_1002D7368 != -1)
    swift_once(&qword_1002D7368, sub_10017BE98);
  objc_msgSend(v19, "setSpacing:", *(double *)&qword_1002E2EE8);
  objc_msgSend(v19, "setAlignment:", 3);
  objc_msgSend(v19, "setDistribution:", 0);
  objc_msgSend(v0, "addSubview:", v19);
  sub_10017BEB8();
  v21 = v20;
  objc_msgSend(v19, "addArrangedSubview:", v20);

  sub_10017BF34();
  v23 = v22;
  objc_msgSend(v19, "addArrangedSubview:", v22);

  v75 = (id)objc_opt_self(NSLayoutConstraint);
  v24 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v25 = swift_allocObject(v24, 112, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100243DA0;
  v26 = objc_msgSend(v0, "layoutMarginsGuide");
  v27 = objc_msgSend(v26, "topAnchor");

  sub_10017C39C();
  v29 = v28;
  v30 = objc_msgSend(v28, "topAnchor");

  v31 = objc_msgSend(v27, "constraintEqualToAnchor:", v30);
  *(_QWORD *)(v25 + 32) = v31;
  v32 = objc_msgSend(v0, "layoutMarginsGuide");
  v33 = objc_msgSend(v32, "leadingAnchor");

  sub_10017C39C();
  v35 = v34;
  v36 = objc_msgSend(v34, "leadingAnchor");

  if (qword_1002D7358 != -1)
    swift_once(&qword_1002D7358, sub_10017BE74);
  v37 = objc_msgSend(v33, "constraintEqualToAnchor:constant:", v36, *((double *)&xmmword_1002E2EC0 + 1));

  *(_QWORD *)(v25 + 40) = v37;
  v38 = objc_msgSend(v3, "topAnchor");
  sub_10017C39C();
  v40 = v39;
  v41 = objc_msgSend(v39, "bottomAnchor");

  v42 = objc_msgSend(v38, "constraintEqualToAnchor:", v41);
  *(_QWORD *)(v25 + 48) = v42;
  v43 = objc_msgSend(v0, "layoutMarginsGuide");
  v44 = objc_msgSend(v43, "leadingAnchor");

  v45 = objc_msgSend(v3, "leadingAnchor");
  if (qword_1002D7350 != -1)
    swift_once(&qword_1002D7350, sub_10017BE58);
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, *((double *)&xmmword_1002E2EA0 + 1));

  *(_QWORD *)(v25 + 56) = v46;
  v47 = objc_msgSend(v0, "layoutMarginsGuide");
  v48 = objc_msgSend(v47, "trailingAnchor");

  v49 = objc_msgSend(v3, "trailingAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, *(double *)&qword_1002E2EB8);

  *(_QWORD *)(v25 + 64) = v50;
  v51 = objc_msgSend(v0, "layoutMarginsGuide");
  v52 = objc_msgSend(v51, "leadingAnchor");

  v53 = objc_msgSend(v19, "leadingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:constant:", v53, *((double *)&xmmword_1002E2EA0 + 1));

  *(_QWORD *)(v25 + 72) = v54;
  v55 = objc_msgSend(v0, "layoutMarginsGuide");
  v56 = objc_msgSend(v55, "trailingAnchor");

  v57 = objc_msgSend(v19, "trailingAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:constant:", v57, *(double *)&qword_1002E2EB8);

  *(_QWORD *)(v25 + 80) = v58;
  v59 = objc_msgSend(v0, "layoutMarginsGuide");
  v60 = objc_msgSend(v59, "bottomAnchor");

  v61 = objc_msgSend(v19, "bottomAnchor");
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:constant:", v61, *(double *)&qword_1002E2EB0);

  *(_QWORD *)(v25 + 88) = v62;
  v63 = objc_msgSend(v3, "bottomAnchor");
  v64 = objc_msgSend(v19, "topAnchor");
  if (qword_1002D7348 != -1)
    swift_once(&qword_1002D7348, sub_10017BE48);
  v65 = objc_msgSend(v63, "constraintEqualToAnchor:constant:", v64, *(double *)&qword_1002E2E90);

  *(_QWORD *)(v25 + 96) = v65;
  sub_10017BF34();
  v67 = v66;
  v68 = objc_msgSend(v66, "heightAnchor");

  sub_10017BEB8();
  v70 = v69;
  v71 = objc_msgSend(v69, "heightAnchor");

  v72 = objc_msgSend(v68, "constraintEqualToAnchor:", v71);
  *(_QWORD *)(v25 + 104) = v72;
  specialized Array._endMutation()(v73, v74);
  sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v25);
  objc_msgSend(v75, "activateConstraints:", isa);

}

void sub_10017D30C()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService16CarPlayAlertView____lazy_storage___soundButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService16CarPlayAlertView____lazy_storage___callAgainButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService16CarPlayAlertView____lazy_storage___cancelButton] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/CarPlayAlertViewController.swift", 46, 2);
  __break(1u);
}

uint64_t type metadata accessor for CarPlayAlertView()
{
  return objc_opt_self(_TtC13InCallService16CarPlayAlertView);
}

uint64_t sub_10017D430()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICSCarPlayAlertViewController_delegate);
}

uint64_t sub_10017D48C(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectWeakAssign(v1 + OBJC_IVAR___ICSCarPlayAlertViewController_delegate, a1);
  return sub_10010E348();
}

id sub_10017D4BC()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = type metadata accessor for CarPlayAlertView();
    result = (id)swift_dynamicCastClass(v2, v3);
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void sub_10017D510()
{
  void *v0;
  uint64_t v1;
  id v2;

  v1 = type metadata accessor for CarPlayAlertView();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "init");
  objc_msgSend(v0, "setView:", v2);

}

void sub_10017D590()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;

  v18.receiver = v0;
  v18.super_class = (Class)sub_100137260();
  objc_msgSendSuper2(&v18, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v2, "setBackgroundColor:", v3);

    v4 = sub_10017D4BC();
    if (v4)
    {
      v5 = v4;
      sub_10017BEB8();
      v7 = v6;
      sub_10017E39C(v6, v8, v9, (uint64_t)"playSound");

      sub_10017BF34();
      v11 = v10;
      sub_10017E39C(v10, v12, v13, (uint64_t)"callAgain");

      sub_10017C39C();
      v15 = v14;
      sub_10017E39C(v14, v16, v17, (uint64_t)"closeAlert");

    }
  }
  else
  {
    __break(1u);
  }
}

void *sub_10017D6CC(char a1)
{
  char *v1;
  void *result;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)sub_100137260();
  objc_msgSendSuper2(&v5, "viewWillDisappear:", a1 & 1);
  result = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR___ICSCarPlayAlertViewController_delegate]);
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "alertViewWillDismiss");
    return (void *)swift_unknownObjectRelease(v4);
  }
  return result;
}

void sub_10017D778(void *a1, uint64_t a2)
{
  void *v2;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  char v57;
  void *v58;
  void *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  int v65;
  _UNKNOWN **v66;
  id v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  void *v79;
  id v80;
  char v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  id v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  void *v94;
  id v95;
  void *v96;
  id v97;
  void *v98;
  void *v99;
  uint64_t v100;
  id v101;
  id v102;
  void *v103;
  void *v104;
  id v105;
  char v106;
  void *v107;
  void *v108;
  uint64_t v109;
  void *v110;
  void *v111;
  id v112;
  void *v113;
  void *v114;
  uint64_t v115;
  void *v116;
  id v117;
  void *v118;
  id v119;
  void *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  objc_super v131;

  v5 = (objc_class *)sub_100137260();
  sub_1001085C0((uint64_t *)&unk_1002D7F50);
  sub_100120AA0();
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  sub_100143764();
  v129 = v12;
  sub_10017E3B4();
  v15 = __chkstk_darwin(v13, v14);
  v17 = (char *)&v121 - v16;
  __chkstk_darwin(v15, v18);
  sub_100143764();
  v125 = v19;
  sub_10017E3B4();
  __chkstk_darwin(v20, v21);
  sub_100143764();
  v127 = v22;
  sub_10017E3B4();
  __chkstk_darwin(v23, v24);
  sub_100143764();
  v128 = v25;
  sub_10017E3B4();
  __chkstk_darwin(v26, v27);
  sub_100143764();
  v124 = v28;
  sub_10017E3B4();
  __chkstk_darwin(v29, v30);
  sub_100143764();
  v123 = v31;
  sub_10017E3B4();
  v34 = __chkstk_darwin(v32, v33);
  v36 = (char *)&v121 - v35;
  v38 = __chkstk_darwin(v34, v37);
  v40 = (char *)&v121 - v39;
  __chkstk_darwin(v38, v41);
  sub_100143764();
  v130 = v42;
  sub_10017E3B4();
  v45 = __chkstk_darwin(v43, v44);
  v47 = (char *)&v121 - v46;
  __chkstk_darwin(v45, v48);
  v50 = (char *)&v121 - v49;
  v131.receiver = v2;
  v131.super_class = v5;
  objc_msgSendSuper2(&v131, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  v51 = sub_10017D4BC();
  if (v51)
  {
    v52 = v51;
    v121 = v17;
    v126 = a1;
    v53 = objc_msgSend(a1, "nextFocusedView");
    sub_10017E3E4();
    v55 = v54;
    v122 = v10;
    if (v53)
    {
      sub_10011ADD4((uint64_t)v54, (unint64_t *)&qword_1002D7F90, UIView_ptr);
      v56 = v53;
      v57 = static NSObject.== infix(_:_:)(v56, v55);

      if ((v57 & 1) != 0)
      {
        sub_10017E3E4();
        v59 = v58;
        sub_10010E3E0();
        sub_10017E394();
        v60 = sub_10017E35C((uint64_t)v50);
        v61 = v128;
        if (v60)
        {
          v62 = v130;
          sub_10017E37C((uint64_t)v50);
          sub_10017E38C();

          sub_10010E0D4((uint64_t)v50);
        }
        else
        {
          v72 = (void *)objc_opt_self(UIColor);
          v73 = sub_10017E3AC(v72);
          UIButton.Configuration.baseBackgroundColor.setter(v73);
          sub_10017E38C();

          v62 = v130;
        }
        sub_10017E3E4();
        v69 = v74;
        sub_10017E368();
        if (sub_10017E34C())
        {
          sub_10017E37C((uint64_t)v47);
          sub_10017E38C();

          sub_10017E3C0();
          v66 = CNKTranscriptionViewComposerFactory_ptr;
          goto LABEL_18;
        }
        v66 = CNKTranscriptionViewComposerFactory_ptr;
        v75 = objc_msgSend((id)sub_10017E384(), "systemWhiteColor");
        UIButton.Configuration.baseForegroundColor.setter(v75);
LABEL_17:
        sub_10017E38C();

LABEL_18:
        v76 = v126;
        v77 = objc_msgSend(v126, "nextFocusedView");
        sub_10017E3DC();
        v79 = v78;
        if (v77)
        {
          sub_10011ADD4((uint64_t)v78, (unint64_t *)&qword_1002D7F90, UIView_ptr);
          v80 = v77;
          v81 = static NSObject.== infix(_:_:)(v80, v79);

          if ((v81 & 1) != 0)
          {
            sub_10017E3DC();
            v83 = v82;
            v84 = v123;
            sub_10017E368();
            sub_10017E394();
            if (sub_10017E34C())
            {
              sub_10017E37C(v84);
              sub_10017E374();

              sub_10017E3C0();
            }
            else
            {
              v96 = (void *)sub_10017E384();
              v97 = sub_10017E3AC(v96);
              sub_10017E3EC();
              sub_10017E374();

            }
            v93 = v129;
            sub_10017E3DC();
            v99 = v98;
            v100 = v124;
            sub_10010E3E0();
            if (sub_10017E35C(v100))
            {
              sub_10017E37C(v100);
              sub_10017E374();

              sub_10010E0D4(v100);
            }
            else
            {
              v101 = objc_msgSend((id)objc_opt_self(v66[222]), "systemWhiteColor");
              UIButton.Configuration.baseForegroundColor.setter(v101);
              sub_10017E374();

            }
            goto LABEL_33;
          }
        }
        else
        {

        }
        sub_10017E3DC();
        v86 = v85;
        sub_10010E3E0();
        sub_10017E394();
        if (sub_10017E35C(v61))
        {
          sub_10017E37C(v61);
          UIButton.configuration.setter(v62);

          sub_10010E0D4(v61);
        }
        else
        {
          v87 = objc_msgSend((id)sub_10017E384(), "secondarySystemBackgroundColor");
          UIButton.Configuration.baseBackgroundColor.setter(v87);
          UIButton.configuration.setter(v61);

        }
        sub_10017E3DC();
        v89 = v88;
        v90 = v127;
        sub_10017E368();
        v91 = v90;
        v92 = sub_10017E34C();
        v93 = v129;
        if (v92)
        {
          sub_10017E37C(v91);
          sub_10017E374();

          sub_10010E0D4(v91);
        }
        else
        {
          v94 = (void *)sub_10017E384();
          v95 = sub_10017E3AC(v94);
          UIButton.Configuration.baseForegroundColor.setter(v95);
          sub_10017E374();

        }
LABEL_33:
        v102 = objc_msgSend(v76, "nextFocusedView");
        sub_10017E3D4();
        v104 = v103;
        if (v102)
        {
          sub_10011ADD4((uint64_t)v103, (unint64_t *)&qword_1002D7F90, UIView_ptr);
          v105 = v102;
          v106 = static NSObject.== infix(_:_:)(v105, v104);

          if ((v106 & 1) != 0)
          {
            sub_10017E3D4();
            v108 = v107;
            v109 = v125;
            sub_10017E368();
            sub_10017E394();
            if (sub_10017E34C())
            {
              sub_10017E37C(v109);
              sub_10017E374();

              sub_10017E3C0();
            }
            else
            {
              v118 = (void *)sub_10017E384();
              v119 = sub_10017E3AC(v118);
              sub_10017E3EC();
              sub_10017E374();

            }
            v115 = (uint64_t)v121;
            sub_10017E3D4();
            v114 = v120;
            sub_10017E368();
            if (sub_10017E34C())
            {
LABEL_45:
              sub_10017E37C(v115);
              sub_10017E374();

              sub_10017E3C0();
              return;
            }
            v117 = objc_msgSend((id)sub_10017E384(), "systemWhiteColor");
            goto LABEL_47;
          }
        }
        else
        {

        }
        sub_10017E3D4();
        v111 = v110;
        sub_10017E368();
        sub_10017E394();
        if (sub_10017E34C())
        {
          sub_10017E37C(v93);
          sub_10017E374();

          sub_10017E3C0();
        }
        else
        {
          v112 = objc_msgSend((id)sub_10017E384(), "clearColor");
          sub_10017E3EC();
          sub_10017E374();

        }
        sub_10017E3D4();
        v114 = v113;
        v115 = (uint64_t)v122;
        sub_10017E368();
        if (sub_10017E34C())
          goto LABEL_45;
        v116 = (void *)sub_10017E384();
        v117 = sub_10017E3AC(v116);
LABEL_47:
        UIButton.Configuration.baseForegroundColor.setter(v117);
        sub_10017E374();

        return;
      }
    }
    else
    {

    }
    sub_10017E3E4();
    v64 = v63;
    sub_10010E3E0();
    sub_10017E394();
    v65 = sub_10017E3C8((uint64_t)v40);
    v61 = v128;
    if (v65)
    {
      v62 = v130;
      sub_10017E37C((uint64_t)v40);
      sub_10017E38C();

      sub_10010E0D4((uint64_t)v40);
      v66 = CNKTranscriptionViewComposerFactory_ptr;
    }
    else
    {
      v66 = CNKTranscriptionViewComposerFactory_ptr;
      v67 = objc_msgSend((id)sub_10017E384(), "secondarySystemBackgroundColor");
      UIButton.Configuration.baseBackgroundColor.setter(v67);
      sub_10017E38C();

      v62 = v130;
    }
    sub_10017E3E4();
    v69 = v68;
    sub_10010E3E0();
    if (sub_10017E3C8((uint64_t)v36))
    {
      sub_10017E37C((uint64_t)v36);
      sub_10017E38C();

      sub_10010E0D4((uint64_t)v36);
      goto LABEL_18;
    }
    v70 = (void *)sub_10017E384();
    v71 = sub_10017E3AC(v70);
    UIButton.Configuration.baseForegroundColor.setter(v71);
    goto LABEL_17;
  }
}

void *sub_10017E024(SEL *a1)
{
  uint64_t v1;
  void *result;

  result = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___ICSCarPlayAlertViewController_delegate);
  if (result)
  {
    objc_msgSend(result, *a1);
    return (void *)sub_10010E348();
  }
  return result;
}

id sub_10017E0AC()
{
  void *v0;

  return objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, 0);
}

id sub_10017E0F8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  objc_class *v6;
  NSString v7;
  id v8;
  objc_super v10;

  v6 = (objc_class *)sub_100137260();
  sub_100153008(OBJC_IVAR___ICSCarPlayAlertViewController_delegate);
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = v6;
  v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

id sub_10017E1F4(void *a1)
{
  void *v1;
  objc_class *v3;
  id v4;
  objc_super v6;

  v3 = (objc_class *)sub_100137260();
  sub_100153008(OBJC_IVAR___ICSCarPlayAlertViewController_delegate);
  v6.receiver = v1;
  v6.super_class = v3;
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

uint64_t type metadata accessor for CarPlayAlertViewController()
{
  return objc_opt_self(ICSCarPlayAlertViewController);
}

void sub_10017E2AC()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

uint64_t sub_10017E2C8()
{
  return 8;
}

uint64_t sub_10017E2D4(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10017E2DC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_10017E2F0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_10017E2FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, "setText:", v5);

}

uint64_t sub_10017E34C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100109FF4(v1, 1, v0);
}

uint64_t sub_10017E35C(uint64_t a1)
{
  uint64_t v1;

  return sub_100109FF4(a1, 1, v1);
}

uint64_t sub_10017E368()
{
  return UIButton.configuration.getter();
}

uint64_t sub_10017E374()
{
  return UIButton.configuration.setter();
}

uint64_t sub_10017E37C(uint64_t a1)
{
  uint64_t v1;

  return sub_10010E08C(a1, v1);
}

uint64_t sub_10017E384()
{
  uint64_t v0;

  return objc_opt_self(*(_QWORD *)(v0 + 1776));
}

uint64_t sub_10017E38C()
{
  return UIButton.configuration.setter();
}

uint64_t sub_10017E394()
{
  return type metadata accessor for UIButton.Configuration(0);
}

id sub_10017E39C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return objc_msgSend(a1, *(SEL *)(v5 + 1408), v4, a4, 64);
}

id sub_10017E3AC(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3136));
}

uint64_t sub_10017E3C0()
{
  uint64_t v0;

  return sub_10010E0D4(v0);
}

uint64_t sub_10017E3C8(uint64_t a1)
{
  uint64_t v1;

  return sub_100109FF4(a1, 1, v1);
}

void sub_10017E3D4()
{
  sub_10017C39C();
}

void sub_10017E3DC()
{
  sub_10017BEB8();
}

void sub_10017E3E4()
{
  sub_10017BF34();
}

uint64_t sub_10017E3EC()
{
  return UIButton.Configuration.baseBackgroundColor.setter();
}

void sub_10017E3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE v25[40];
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;
  _QWORD v32[6];

  sub_10017EB74(a1, v32);
  v4 = v32[0];
  v5 = v32[1];
  v6 = v32[3];
  v7 = v32[4];
  v8 = (unint64_t)(v32[2] + 64) >> 6;
  v22 = a1;
  swift_bridgeObjectRetain_n(a1, 2);
  v9 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_22;
    }
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v12 >= v8)
      goto LABEL_30;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    v14 = v6 + 1;
    if (!v13)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v8)
        goto LABEL_30;
      v13 = *(_QWORD *)(v5 + 8 * v14);
      if (!v13)
      {
        v14 = v6 + 3;
        if (v6 + 3 >= v8)
          goto LABEL_30;
        v13 = *(_QWORD *)(v5 + 8 * v14);
        if (!v13)
        {
          v14 = v6 + 4;
          if (v6 + 4 >= v8)
            goto LABEL_30;
          v13 = *(_QWORD *)(v5 + 8 * v14);
          if (!v13)
          {
            v14 = v6 + 5;
            if (v6 + 5 >= v8)
              goto LABEL_30;
            v13 = *(_QWORD *)(v5 + 8 * v14);
            if (!v13)
            {
              v14 = v6 + 6;
              if (v6 + 6 >= v8)
                goto LABEL_30;
              v13 = *(_QWORD *)(v5 + 8 * v14);
              if (!v13)
              {
                v15 = v6 + 7;
                while (v15 < v8)
                {
                  v13 = *(_QWORD *)(v5 + 8 * v15++);
                  if (v13)
                  {
                    v14 = v15 - 1;
                    goto LABEL_21;
                  }
                }
LABEL_30:
                swift_bridgeObjectRelease(v22);
                swift_release(v4);
                sub_100195068(a2, a3, v9);
                swift_bridgeObjectRelease(v9);
                return;
              }
            }
          }
        }
      }
    }
LABEL_21:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v6 = v14;
LABEL_22:
    sub_10011D608(*(_QWORD *)(v4 + 48) + 40 * v11, (uint64_t)v30);
    v28[0] = v30[0];
    v28[1] = v30[1];
    v29 = v31;
    sub_10011D608((uint64_t)v28, (uint64_t)v25);
    if ((swift_dynamicCast(&v26, v25, &type metadata for AnyHashable, &type metadata for String, 6) & 1) == 0)
    {
      v26 = 0;
      v27 = 0;
    }
    sub_10011D238((uint64_t)v28);
    v16 = v27;
    if (v27)
    {
      v17 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      {
        sub_10017EBF8();
        v9 = v20;
      }
      v18 = v9[2];
      if (v18 >= v9[3] >> 1)
      {
        sub_10017EBF8();
        v9 = v21;
      }
      v9[2] = v18 + 1;
      v19 = &v9[2 * v18];
      v19[4] = v17;
      v19[5] = v16;
    }
  }
  __break(1u);
}

void *sub_10017E63C(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  NSString v29;
  NSString v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v6 = type metadata accessor for IndexSet(0);
  v35 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1001085C0(&qword_1002DAE68);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = HIBYTE(a3) & 0xF;
  v38 = a2;
  v39 = a3;
  if ((a3 & 0x2000000000000000) == 0)
    v14 = a2 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    v15 = objc_msgSend(a1, "phoneNumbers");
    v16 = sub_1001085C0(&qword_1002DA900);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

    if ((unint64_t)v17 >> 62)
      goto LABEL_23;
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v18)
    {
      v36 = v18;
      v37 = v17 & 0xC000000000000001;
      v19 = 4;
      while (1)
      {
        v20 = v37
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 - 4, v17)
            : *(id *)(v17 + 8 * v19);
        v21 = v20;
        v22 = v19 - 3;
        if (__OFADD__(v19 - 4, 1))
          break;
        v23 = sub_10017EBEC();
        sub_10017EB08(v23);
        if (v24)
        {
          v25 = v24;
        }
        else
        {
          v26 = sub_10017EBEC();
          v27 = objc_msgSend(v26, "stringValue");

          static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
          v25 = v28;

        }
        v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v25);
        v30 = String._bridgeToObjectiveC()();
        v31 = objc_msgSend(v29, "indexSetToHighlightDigitsInText:", v30);

        if (v31)
        {
          static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v31);

          (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v13, v9, v6);
          sub_10017EC04((uint64_t)v13, 0);
          if (sub_100109FF4((uint64_t)v13, 1, v6) != 1)
          {
            sub_10017EBAC((uint64_t)v13);
            sub_10011AE68();
            return v21;
          }
        }
        else
        {
          sub_10017EC04((uint64_t)v13, 1);
        }

        sub_10017EBAC((uint64_t)v13);
        ++v19;
        if (v22 == v36)
          goto LABEL_19;
      }
      __break(1u);
LABEL_23:
      if (v17 < 0)
        v33 = v17;
      else
        v33 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v17);
      v18 = _CocoaArrayWrapper.endIndex.getter(v33);
      sub_10011AE68();
    }
LABEL_19:
    sub_10011AE68();
  }
  return 0;
}

id sub_10017E9F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for SearchUtilities()
{
  return objc_opt_self(PHSearchUtilities);
}

_QWORD *sub_10017EA70(uint64_t a1)
{
  _QWORD *result;

  if (a1 < 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else if (a1)
  {
    result = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, &type metadata for String);
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10017EB08(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "formattedInternationalStringValue");

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t sub_10017EB74@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_10017EBAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001085C0(&qword_1002DAE68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_10017EBEC()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, *(SEL *)(v0 + 1712));
}

void sub_10017EBF8()
{
  sub_10019BB24();
}

uint64_t sub_10017EC04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100108600(a1, a2, 1, v2);
}

void DisplayHandler<>.callDisplayStyleDidChange(from:to:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t j;
  void *v24;
  uint64_t v25;
  __objc2_prot *v26;
  uint64_t v27;

  v5 = objc_msgSend(v2, "view");
  if (!v5)
    goto LABEL_37;
  v6 = v5;
  v7 = objc_msgSend(v5, "subviews");

  v8 = sub_10017EE94();
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  v27 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    if (v10)
      goto LABEL_4;
LABEL_20:
    sub_100109898();
    v20 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  if (v9 < 0)
    v21 = v9;
  else
    v21 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v10 = _CocoaArrayWrapper.endIndex.getter(v21);
  if (!v10)
    goto LABEL_20;
LABEL_4:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      else
        v12 = *(id *)(v9 + 8 * i + 32);
      v13 = v12;
      v26 = &OBJC_PROTOCOL___ICSCallDisplayStyleHandler;
      v14 = swift_dynamicCastObjCProtocolConditional(v12, 1, &v26);
      if (v14)
      {
        v15 = v14;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v17 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v16 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1);
        v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
        specialized Array._endMutation()(v18, v19);
      }
      else
      {

      }
    }
    sub_100109898();
    v20 = v27;
LABEL_21:
    sub_100109898();
    if ((unint64_t)v20 >> 62)
    {
      if (v20 < 0)
        v25 = v20;
      else
        v25 = v20 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v20);
      v22 = _CocoaArrayWrapper.endIndex.getter(v25);
      if (v22)
      {
LABEL_23:
        if (v22 >= 1)
        {
          for (j = 0; j != v22; ++j)
          {
            if ((v20 & 0xC000000000000001) != 0)
            {
              v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v20);
            }
            else
            {
              v24 = *(void **)(v20 + 8 * j + 32);
              swift_unknownObjectRetain(v24);
            }
            objc_msgSend(v24, "callDisplayStyleDidChangeFromStyle:toStyle:", a1, a2);
            swift_unknownObjectRelease(v24);
          }
          goto LABEL_29;
        }
        goto LABEL_36;
      }
    }
    else
    {
      v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v20);
      if (v22)
        goto LABEL_23;
    }
LABEL_29:
    swift_bridgeObjectRelease_n(v20, 2);
    return;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

unint64_t sub_10017EE94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002D7F90;
  if (!qword_1002D7F90)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002D7F90);
  }
  return result;
}

uint64_t sub_10017EED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___ICSCoverViewController_layoutGuideConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR___ICSCoverViewController_layoutGuideConstraints) = a1;
  return swift_bridgeObjectRelease(v2);
}

id sub_10017EEE8(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  id v7;
  id v8;
  id result;
  id v10;
  objc_super v11;

  v3 = OBJC_IVAR___ICSCoverViewController_windowLayoutGuide;
  v4 = objc_allocWithZone((Class)UILayoutGuide);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR___ICSCoverViewController_layoutGuideConstraints] = _swiftEmptyArrayStorage;
  v6 = &v5[OBJC_IVAR___ICSCoverViewController_currentViewFrame];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v6[32] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___ICSCoverViewController_callDisplayStyleManager] = a1;
  v7 = objc_allocWithZone((Class)type metadata accessor for CallParticipantsViewController());
  v8 = a1;
  result = objc_msgSend(v7, "initWithCallDisplayStyleManager:", v8);
  if (result)
  {
    *(_QWORD *)&v5[OBJC_IVAR___ICSCoverViewController_callParticipantsViewController] = result;

    v11.receiver = v5;
    v11.super_class = (Class)type metadata accessor for CoverViewController();
    v10 = objc_msgSendSuper2(&v11, "initWithNibName:bundle:", 0, 0);

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10017F020()
{
  char *v0;
  uint64_t v1;
  char *v2;

  v1 = OBJC_IVAR___ICSCoverViewController_windowLayoutGuide;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  *(_QWORD *)&v0[OBJC_IVAR___ICSCoverViewController_layoutGuideConstraints] = _swiftEmptyArrayStorage;
  v2 = &v0[OBJC_IVAR___ICSCoverViewController_currentViewFrame];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v2[32] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/CoverViewController.swift", 39, 2);
  __break(1u);
}

void sub_10017F0F4()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  Class isa;
  id v35;
  void *v36;
  objc_super v37;

  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for CoverViewController();
  objc_msgSendSuper2(&v37, "viewDidLoad");
  v1 = sub_100149E80();
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  v2 = v1;
  objc_msgSend(v1, "addLayoutGuide:", *(_QWORD *)&v0[OBJC_IVAR___ICSCoverViewController_windowLayoutGuide]);

  sub_10017F4C8();
  v3 = *(void **)&v0[OBJC_IVAR___ICSCoverViewController_callParticipantsViewController];
  objc_msgSend(v0, "addChildViewController:", v3);
  v4 = sub_100149E80();
  if (!v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = v4;
  v6 = sub_10010E2F4();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v7 = v6;
  objc_msgSend(v5, "addSubview:", v6);

  v8 = sub_10010E2F4();
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v8;
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  objc_msgSend(v3, "didMoveToParentViewController:", v0);
  v10 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v11 = sub_10014CB0C(v10);
  *(_OWORD *)(v11 + 16) = xmmword_100241800;
  v12 = sub_10010E2F4();
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v13 = objc_msgSend(v12, "topAnchor");
  sub_100151298();
  v15 = sub_10010E3C8(v14, "topAnchor");
  v16 = sub_10017F9C0();
  sub_10011B028();

  *(_QWORD *)(v11 + 32) = &selRef_shouldRestrictJoinConversationRequest_performSynchronously_;
  v17 = sub_10010E2F4();
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18 = objc_msgSend(v17, "bottomAnchor");
  sub_100151298();
  v20 = sub_10010E3C8(v19, "bottomAnchor");
  v21 = sub_10017F9C0();
  sub_10011B028();

  *(_QWORD *)(v11 + 40) = &selRef__routeIsReceiver_;
  v22 = sub_10010E2F4();
  if (!v22)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v23 = objc_msgSend(v22, "leadingAnchor");
  sub_100151298();
  v25 = sub_10010E3C8(v24, "leadingAnchor");
  v26 = sub_10017F9C0();
  sub_10011B028();

  *(_QWORD *)(v11 + 48) = &selRef_isUserInterfaceShowing;
  if (!sub_10010E2F4())
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v27 = (void *)objc_opt_self(NSLayoutConstraint);
  v28 = sub_100136368((uint64_t)v27, "trailingAnchor");
  sub_10011B028();
  v30 = sub_10010E3C8(v29, "trailingAnchor");
  v31 = objc_msgSend(&selRef_isUserInterfaceShowing, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v11 + 56) = v31;
  specialized Array._endMutation()(v32, v33);
  sub_100149E44();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v27, "activateConstraints:", isa);

  v35 = sub_10010E2F4();
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, "layoutIfNeeded");

    return;
  }
LABEL_19:
  __break(1u);
}

void sub_10017F4C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  _BOOL8 v7;
  uint64_t v8;
  id v9;
  void *v10;
  double v11;
  double MaxX;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  SEL v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  SEL v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  SEL v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  double MinX;
  double MinY;
  Class v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;

  v2 = v0;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICSCoverViewController_callDisplayStyleManager), "miniWindowCutoutFrame");
  x = v55.origin.x;
  y = v55.origin.y;
  width = v55.size.width;
  height = v55.size.height;
  v63.origin.x = 0.0;
  v63.origin.y = 0.0;
  v63.size.width = 0.0;
  v63.size.height = 0.0;
  v7 = CGRectEqualToRect(v55, v63);
  if (v7
    || (v8 = v0 + OBJC_IVAR___ICSCoverViewController_currentViewFrame,
        (*(_BYTE *)(v2 + OBJC_IVAR___ICSCoverViewController_currentViewFrame + 32) & 1) == 0)
    && (v56.origin.x = sub_10017F9AC(), v7 = CGRectEqualToRect(v56, v64)))
  {
    sub_10017F9D0();
    return;
  }
  *(CGFloat *)v8 = x;
  *(CGFloat *)(v8 + 8) = y;
  *(CGFloat *)(v8 + 16) = width;
  *(CGFloat *)(v8 + 24) = height;
  *(_BYTE *)(v8 + 32) = 0;
  v9 = sub_10010E310(v7, "view");
  if (!v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  v10 = v9;
  objc_msgSend(v9, "frame");

  v57.origin.x = sub_10017F9AC();
  MinY = CGRectGetMinY(v57);
  v58.origin.x = sub_10017F9AC();
  MinX = CGRectGetMinX(v58);
  v59.origin.x = sub_10017FA0C();
  CGRectGetHeight(v59);
  v60.origin.x = sub_10017F9AC();
  CGRectGetMaxY(v60);
  v61.origin.x = sub_10017FA0C();
  v11 = CGRectGetWidth(v61);
  v62.origin.x = sub_10017F9AC();
  MaxX = CGRectGetMaxX(v62);
  v13 = (void *)objc_opt_self(NSLayoutConstraint);
  v14 = OBJC_IVAR___ICSCoverViewController_layoutGuideConstraints;
  v15 = *(_QWORD *)(v2 + OBJC_IVAR___ICSCoverViewController_layoutGuideConstraints);
  sub_100149E44();
  swift_bridgeObjectRetain(v15);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  objc_msgSend(v13, "deactivateConstraints:", isa);

  v17 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v18 = sub_10014CB0C(v17);
  *(_OWORD *)(v18 + 16) = xmmword_100241800;
  v19 = sub_100136368(v18, "topAnchor");
  v20 = sub_10010E310((uint64_t)v19, "view");
  if (!v20)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "topAnchor");
  sub_1001781D4();
  v23 = (void *)sub_10017F9FC();
  v25 = objc_msgSend(v23, v24, MinY);
  sub_100136678();

  *(_QWORD *)(v18 + 32) = v21;
  v27 = sub_100136368(v26, "bottomAnchor");
  v28 = sub_10010E310((uint64_t)v27, "view");
  if (!v28)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, "bottomAnchor");
  sub_1001781D4();
  v31 = (void *)sub_10017F9FC();
  v33 = objc_msgSend(v31, v32);
  sub_100136678();

  *(_QWORD *)(v18 + 40) = v29;
  v35 = sub_100136368(v34, "leadingAnchor");
  v36 = sub_10010E310((uint64_t)v35, "view");
  if (!v36)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v37 = v36;
  v38 = objc_msgSend(v36, "leadingAnchor");
  sub_1001781D4();
  v39 = (void *)sub_10017F9FC();
  v41 = objc_msgSend(v39, v40, MinX);
  sub_100136678();

  *(_QWORD *)(v18 + 48) = v37;
  v43 = sub_100136368(v42, "trailingAnchor");
  v44 = sub_10010E310((uint64_t)v43, "view");
  if (v44)
  {
    v45 = v44;
    v46 = objc_msgSend(v44, "trailingAnchor");
    sub_100136678();
    v47 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", &selRef_shouldRestrictJoinConversationRequest_performSynchronously_, -(v11 - MaxX));
    sub_10011B028();

    *(_QWORD *)(v18 + 56) = v45;
    specialized Array._endMutation()(v48, v49);
    sub_10017EED0(v18);
    v50 = *(_QWORD *)(v2 + v14);
    swift_bridgeObjectRetain(v50);
    v54 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v50);
    objc_msgSend(v13, "activateConstraints:", v54);
    sub_10017F9D0();

    return;
  }
LABEL_15:
  __break(1u);
}

void sub_10017F8B4()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.CoverViewController", 33, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_10017F904()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoverViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CoverViewController()
{
  return objc_opt_self(ICSCoverViewController);
}

double sub_10017F9AC()
{
  double v0;

  return v0;
}

id sub_10017F9C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, *(SEL *)(v2 + 2128), v0);
}

uint64_t sub_10017F9FC()
{
  uint64_t v0;

  return v0;
}

double sub_10017FA0C()
{
  double v0;

  return v0;
}

id sub_10017FA20()
{
  void *v0;
  char v1;
  id result;

  type metadata accessor for Features(0);
  v0 = (void *)static Features.shared.getter();
  v1 = dispatch thunk of Features.isEnhancedEmergencyEnabled.getter();

  result = 0;
  if ((v1 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EnhancedEmergencyCoordinator()), "init");
  return result;
}

void sub_10017FA78()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  objc_super v5;

  v1 = OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator_coordinator;
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_10017FA20();
  v2[OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__showsVideoStreamingButton] = 0;
  v2[OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__showsMediaUploadButton] = 0;
  v2[OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__isVideoStreamingOn] = 0;
  v2[OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__shouldHideVideoStreamingControls] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__viewControllers] = _swiftEmptyArrayStorage;
  ObservationRegistrar.init()();

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for ClarityUIEnhancedEmergencyCoordinator(0);
  v3 = (char *)objc_msgSendSuper2(&v5, "init");
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator_coordinator];
  if (v4)
    swift_unknownObjectWeakAssign(v4 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate, v3);
  sub_10011AEDC();
}

void sub_10017FB4C(char a1)
{
  sub_10017FB74(a1, (uint64_t)&unk_100243FE8, (uint64_t)sub_100181FCC);
}

void sub_10017FB60(char a1)
{
  sub_10017FB74(a1, (uint64_t)&unk_100243FC0, (uint64_t)sub_100181F7C);
}

void sub_10017FB74(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  char v9;

  KeyPath = swift_getKeyPath(a2);
  v8 = v3;
  v9 = a1;
  sub_100181A80(KeyPath, a3, (uint64_t)&v7);
  sub_1001438D8();
  sub_1001435C0();
}

void sub_10017FBC0(char a1)
{
  sub_10017FB74(a1, (uint64_t)&unk_100243F98, (uint64_t)sub_100181F2C);
}

void sub_10017FBD4(char a1)
{
  sub_10017FB74(a1, (uint64_t)&unk_100243F70, (uint64_t)sub_100181EB4);
}

void sub_10017FBE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100243F48);
  v5 = v1;
  v6 = a1;
  sub_100181A80(KeyPath, (uint64_t)sub_100181E60, (uint64_t)&v4);
  sub_1001438D8();
  swift_bridgeObjectRelease(a1);
  sub_1001435C0();
}

#error "10017FC88: call analysis failed (funcsize=22)"

uint64_t sub_10017FD38()
{
  return type metadata accessor for ClarityUIEnhancedEmergencyCoordinator(0);
}

uint64_t type metadata accessor for ClarityUIEnhancedEmergencyCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_1002DAF20;
  if (!qword_1002DAF20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClarityUIEnhancedEmergencyCoordinator);
  return result;
}

void sub_10017FD78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  char v4;
  double v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[2];

  sub_100180058();
  v1 = v0;
  v2 = sub_10017FDF8(v0);
  v4 = v3;
  swift_bridgeObjectRelease(v1);
  if (v2)
  {
    v5 = 1.0;
    if ((v4 & 1) == 0)
      v5 = -1.0;
    v8[0] = v2;
    *(double *)&v8[1] = v5;
    v6 = sub_1001085C0(&qword_1002DAF38);
    v7 = sub_100181FE0();
    AnyView.init<A>(_:)(v8, v6, v7);
  }
  sub_10011AEDC();
}

void *sub_10017FDF8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(void **)(a1 + 16 * v1 + 16);
  v3 = v2;
  return v2;
}

uint64_t sub_10017FE3C()
{
  return sub_10017FEFC((uint64_t)&unk_100243FE8, &OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__showsVideoStreamingButton);
}

uint64_t sub_10017FE50()
{
  return sub_10017FEFC((uint64_t)&unk_100243FC0, &OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__showsMediaUploadButton);
}

uint64_t sub_10017FE64()
{
  return sub_10017FEFC((uint64_t)&unk_100243F98, &OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__isVideoStreamingOn);
}

void sub_10017FE78()
{
  uint64_t v0;
  void *v1;
  _BYTE *v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator_coordinator);
  if (v1)
  {
    v2 = v1;
    v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls] = sub_10017FEE8() & 1;
    sub_100137E18();

  }
}

uint64_t sub_10017FEE8()
{
  return sub_10017FEFC((uint64_t)&unk_100243F70, &OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__shouldHideVideoStreamingControls);
}

uint64_t sub_10017FEFC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = v2;
  v5 = sub_100181E0C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  sub_1001438D8();
  return *(unsigned __int8 *)(v2 + *a2);
}

#error "10017FF94: call analysis failed (funcsize=24)"

void sub_10017FFC4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator_coordinator);
  if (v1)
  {
    v2 = v1;
    sub_10013A16C();
    sub_10014354C(v2);
  }
  else
  {
    sub_100064628();
  }
}

uint64_t sub_100180008(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__viewControllers);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

double sub_100180058()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  _QWORD *v3;
  double result;
  _QWORD v5[3];

  KeyPath = swift_getKeyPath(&unk_100243F48);
  v5[0] = v0;
  v2 = sub_100181E0C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(v5, KeyPath, v2);
  sub_1001436CC();
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__viewControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__viewControllers, v5, 0, 0);
  *(_QWORD *)&result = swift_bridgeObjectRetain(*v3).n128_u64[0];
  return result;
}

void sub_1001800E4(_QWORD *a1)
{
  uint64_t v1;

  swift_bridgeObjectRetain(*a1);
  sub_10017FBE8(v1);
}

uint64_t sub_10018010C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return sub_100180008(a2);
}

void sub_100180144()
{
  void *v0;
  NSObject *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  id v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  _DWORD *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD v34[3];

  sub_1001821E8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
LABEL_5:
    sub_100109898();
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v10 = sub_100109570();
    sub_100108664(v10, (uint64_t)&unk_1002E2D90);
    v11 = sub_1001365F8();
    sub_10018230C();
    v12 = sub_10011ADDC();
    if (sub_10011AF5C(v12))
    {
      v13 = (uint8_t *)sub_1001094C8(12);
      v14 = sub_1001094C8(8);
      v15 = sub_10018213C(5.7779e-34);
      sub_100182158((uint64_t)v15);
      sub_100182314();

      sub_100109638((void *)&_mh_execute_header, v1, (os_log_type_t)v3, "EnhancedEmergency: add web view controller: %@", v13);
      v16 = sub_1001085C0(&qword_1002D7880);
      sub_100109598(v14, v17, v16);
      sub_100109440(v14);
      sub_100109440((uint64_t)v13);

    }
    else
    {

    }
    sub_1001821A4();
    sub_100182300();
    v18 = sub_100182340();
    sub_100182224((uint64_t)v18);
    sub_100182210();
    v34[0] = v0;
    v19 = sub_1001821A4();
    sub_100182264(v19, v20);
    sub_100182210();
    sub_10015C868((uint64_t)v0 + OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__viewControllers, (uint64_t)v34);
    sub_100181D1C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10019BE10);
    v21 = sub_10018223C();
    sub_100182180(v21);
    v34[0] = v0;
    v22 = sub_1001821A4();
    sub_100182258((uint64_t)v34, v22);
    sub_100110FF0();
    goto LABEL_11;
  }
  v1 = sub_10010BBE8(0, (unint64_t *)&qword_1002D7E50, NSObject_ptr);
  v8 = 32;
  while (1)
  {
    v9 = sub_1001822EC((uint64_t)*(id *)(v6 + v8));

    if ((v9 & 1) != 0)
      break;
    v8 += 16;
    if (!--v7)
      goto LABEL_5;
  }
  sub_100109898();
  if (qword_1002D7298 != -1)
    swift_once(&qword_1002D7298, sub_10010C018);
  v23 = sub_100109570();
  sub_100108664(v23, (uint64_t)&unk_1002E2D90);
  v33 = sub_1001365F8();
  Logger.logObject.getter(v33, v24);
  v25 = sub_100182338();
  if (sub_100182170(v25))
  {
    v26 = (_DWORD *)sub_1001094C8(12);
    v27 = (_QWORD *)sub_1001094C8(8);
    *v26 = 138412290;
    v34[0] = v33;
    v28 = v33;
    sub_10018228C((uint64_t)v34);
    *v27 = v33;

    sub_1001821AC((void *)&_mh_execute_header, v29, v30, "EnhancedEmergency: tried to add web view controller that was already added: %@");
    v31 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v27, v32, v31);
    sub_100109440((uint64_t)v27);
    sub_100109440((uint64_t)v26);

LABEL_11:
    sub_1001821F4();
    return;
  }

}

void sub_1001804AC()
{
  uint64_t v0;
  NSObject *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  id v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];

  sub_1001821E8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    v1 = sub_10010BBE8(0, (unint64_t *)&qword_1002D7E50, NSObject_ptr);
    v8 = 32;
    while (1)
    {
      v9 = sub_1001822EC((uint64_t)*(id *)(v6 + v8));

      if ((v9 & 1) != 0)
        break;
      v8 += 16;
      if (!--v7)
        goto LABEL_5;
    }
    sub_100109898();
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v23 = sub_100109570();
    sub_100108664(v23, (uint64_t)&unk_1002E2D90);
    v24 = sub_1001365F8();
    v25 = sub_10018230C();
    v26 = static os_log_type_t.error.getter(v25);
    if (sub_10011AF5C(v26))
    {
      v27 = (uint8_t *)sub_1001094C8(12);
      v28 = sub_1001094C8(8);
      v29 = sub_10018213C(5.7779e-34);
      sub_100182158((uint64_t)v29);
      sub_100182314();

      sub_100109638((void *)&_mh_execute_header, v25, (os_log_type_t)v3, "EnhancedEmergency: tried to add media request view controller that was already added: %@", v27);
      v30 = sub_1001085C0(&qword_1002D7880);
      sub_100109598(v28, v31, v30);
      sub_100109440(v28);
      sub_100109440((uint64_t)v27);

    }
    else
    {

    }
  }
  else
  {
LABEL_5:
    sub_100109898();
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v10 = sub_100109570();
    sub_100108664(v10, (uint64_t)&unk_1002E2D90);
    v11 = sub_1001365F8();
    sub_10018230C();
    v12 = sub_10011ADDC();
    if (sub_10011AF5C(v12))
    {
      v13 = (uint8_t *)sub_1001094C8(12);
      v14 = sub_1001094C8(8);
      v15 = sub_10018213C(5.7779e-34);
      sub_100182158((uint64_t)v15);
      sub_100182314();

      sub_100109638((void *)&_mh_execute_header, v1, (os_log_type_t)v3, "EnhancedEmergency: add media request view controller: %@", v13);
      v16 = sub_1001085C0(&qword_1002D7880);
      sub_100109598(v14, v17, v16);
      sub_100109440(v14);
      sub_100109440((uint64_t)v13);

    }
    else
    {

    }
    sub_1001821A4();
    sub_100182300();
    v18 = sub_100182340();
    sub_100182224((uint64_t)v18);
    sub_100182210();
    v32[0] = v0;
    v19 = sub_1001821A4();
    sub_100182264(v19, v20);
    sub_100182210();
    sub_10015C868(v0 + OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__viewControllers, (uint64_t)v32);
    sub_100181D1C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10019BE10);
    v21 = sub_10018223C();
    sub_100182180(v21);
    v32[0] = v0;
    v22 = sub_1001821A4();
    sub_100182258((uint64_t)v32, v22);
    sub_1001436CC();
  }
  sub_100181430();
  sub_1001821F4();
}

uint64_t sub_1001807D8(uint64_t a1)
{
  return sub_100180D4C(a1, "EnhancedEmergency: remove media request view controller: %@", "EnhancedEmergency: tried to remove emergency media request view controller that was not added: %@");
}

uint64_t sub_1001807EC(uint64_t a1, void *a2)
{
  uint64_t v3;
  id *v4;
  uint64_t v5;
  id v6;
  char v7;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (id *)(a1 + 32);
    sub_10010BBE8(0, (unint64_t *)&qword_1002D7E50, NSObject_ptr);
    v5 = 0;
    while (1)
    {
      v6 = *v4;
      v7 = static NSObject.== infix(_:_:)(v6, a2);

      if ((v7 & 1) != 0)
        break;
      ++v5;
      v4 += 2;
      if (v3 == v5)
      {
        v5 = 0;
        break;
      }
    }
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_1001808A4(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
  {
    sub_100181E4C();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    sub_10019C2F0((char *)(v3 + 16 * a1 + 48), v4 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
}

#error "100180C84: call analysis failed (funcsize=203)"

uint64_t sub_100180D38(uint64_t a1)
{
  return sub_100180D4C(a1, "EnhancedEmergency: remove web view controller: %@", "EnhancedEmergency: tried to remove web view controller that was not added: %@");
}

#error "10018101C: call analysis failed (funcsize=185)"

#error "100181328: call analysis failed (funcsize=160)"

#error "100181384: call analysis failed (funcsize=21)"

void sub_1001813AC()
{
  sub_100182218("EnhancedEmergency: request to enable video streaming button");
}

void sub_1001813EC()
{
  sub_100182250("EnhancedEmergency: request to disable video streaming button", 0);
}

void sub_100181430()
{
  sub_100181484("EnhancedEmergency: request to enable media upload button", 1);
}

void sub_100181474()
{
  sub_100181484("EnhancedEmergency: request to disable media upload button", 0);
}

void sub_100181484(const char *a1, char a2)
{
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (qword_1002D7298 != -1)
    swift_once(&qword_1002D7298, sub_10010C018);
  v6 = sub_100109570();
  sub_100108664(v6, (uint64_t)&unk_1002E2D90);
  sub_100122838();
  v7 = sub_10011ADDC();
  if (sub_10011AF5C(v7))
  {
    v8 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v8 = 0;
    sub_10011AE18((void *)&_mh_execute_header, v2, v3, a1, v8);
    sub_100109440((uint64_t)v8);
  }

  sub_10017FB60(a2 & 1);
}

void sub_10018157C()
{
  uint64_t v0;
  NSObject *v1;
  __n128 v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;

  if (qword_1002D7298 != -1)
    swift_once(&qword_1002D7298, sub_10010C018);
  v0 = sub_100109570();
  sub_100108664(v0, (uint64_t)&unk_1002E2D90);
  v1 = sub_100122838();
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v1, v3))
  {
    v4 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v4 = 0;
    sub_10011AE18((void *)&_mh_execute_header, v1, v3, "EnhancedEmergency: request haptic", v4);
    sub_100109440((uint64_t)v4);
  }

  v5 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
  objc_msgSend(v5, "notificationOccurred:", 0);

}

void sub_100181698()
{
  sub_100182250("EnhancedEmergency: request to add resume camera label", 1);
}

void sub_1001816DC()
{
  sub_100182218("EnhancedEmergency: request to add live camera label");
}

void sub_1001816E8(const char *a1, char a2, char a3)
{
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;

  if (qword_1002D7298 != -1)
    swift_once(&qword_1002D7298, sub_10010C018);
  v8 = sub_100109570();
  sub_100108664(v8, (uint64_t)&unk_1002E2D90);
  sub_100122838();
  v9 = sub_10011ADDC();
  if (sub_100136000(v9))
  {
    v10 = (uint8_t *)sub_1001094C8(2);
    *(_WORD *)v10 = 0;
    sub_10011AE18((void *)&_mh_execute_header, v3, v4, a1, v10);
    sub_100109440((uint64_t)v10);
  }

  sub_10017FB4C(a2 & 1);
  sub_10017FBC0(a3 & 1);
}

id sub_1001817F4()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v1 = objc_msgSend(v0, "frontmostAudioOrVideoCall");

  return v1;
}

uint64_t sub_10018189C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "\b";
  v4[1] = &unk_100243EF0;
  v4[2] = &unk_100243EF0;
  v4[3] = &unk_100243EF0;
  v4[4] = &unk_100243EF0;
  v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ClarityUIEnhancedEmergencyCoordinator.ViewControllerWithModality(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

void destroy for ClarityUIEnhancedEmergencyCoordinator.ViewControllerWithModality(id *a1)
{

}

uint64_t assignWithCopy for ClarityUIEnhancedEmergencyCoordinator.ViewControllerWithModality(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for ClarityUIEnhancedEmergencyCoordinator.ViewControllerWithModality(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIEnhancedEmergencyCoordinator.ViewControllerWithModality(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIEnhancedEmergencyCoordinator.ViewControllerWithModality(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIEnhancedEmergencyCoordinator.ViewControllerWithModality()
{
  return &type metadata for ClarityUIEnhancedEmergencyCoordinator.ViewControllerWithModality;
}

uint64_t sub_100181A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v8;

  v6 = sub_100181E0C();
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, a1, a2, a3, (char *)&type metadata for () + 8, v6);
}

void sub_100181B0C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject *oslog;

  sub_10010BBE8(0, &qword_1002DC280, UIViewController_ptr);
  v5 = a3;
  LOBYTE(a1) = static NSObject.== infix(_:_:)(v5, a1);

  if ((a1 & 1) == 0)
  {
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100108664(v6, (uint64_t)&unk_1002E2D90);
    oslog = Logger.logObject.getter(v7, v8);
    v9 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "Attempted to update wrapped emergency view controller.", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

  }
}

id sub_100181C38()
{
  id *v0;

  return *v0;
}

void sub_100181C40(uint64_t a1, uint64_t a2)
{
  void **v2;

  sub_100181B0C(a1, a2, *v2);
}

uint64_t sub_100181C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1001820E0();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100181C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1001820E0();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100181CEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001820E0();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_100181D10()
{
  return sub_100181D1C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10019BD18);
}

uint64_t sub_100181D1C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native(*v1);
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_100181D70(uint64_t a1)
{
  return sub_100181DA8(a1, (uint64_t (*)(BOOL))sub_10019BD18);
}

uint64_t sub_100181D7C(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;

  v2 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18);
  if (result + 1 > (uint64_t)(v2 >> 1))
    return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v2 > 1);
  return result;
}

uint64_t sub_100181DA8(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

void sub_100181DE8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1001822D0();
  sub_100180058();
  *v0 = v1;
  sub_100109438();
}

unint64_t sub_100181E0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DAF30;
  if (!qword_1002DAF30)
  {
    v1 = type metadata accessor for ClarityUIEnhancedEmergencyCoordinator(255);
    result = swift_getWitnessTable(&unk_100243F2C, v1);
    atomic_store(result, (unint64_t *)&qword_1002DAF30);
  }
  return result;
}

void sub_100181E4C()
{
  sub_10019BE10();
}

uint64_t sub_100181E60()
{
  uint64_t v0;

  return sub_10018010C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100181E78()
{
  uint64_t v0;

  sub_1001822D0();
  v0 = sub_10017FEE8();
  sub_100182354(v0);
  sub_100109438();
}

void sub_100181E98(unsigned __int8 *a1)
{
  char v1;

  v1 = sub_100182348(a1);
  sub_10017FBD4(v1);
  sub_100109438();
}

void sub_100181EB4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16)
           + OBJC_IVAR____TtC13InCallService37ClarityUIEnhancedEmergencyCoordinator__shouldHideVideoStreamingControls) = *(_BYTE *)(v0 + 24);
  sub_10017FE78();
}

void sub_100181EF0()
{
  uint64_t v0;

  sub_1001822D0();
  v0 = sub_10017FE64();
  sub_100182354(v0);
  sub_100109438();
}

void sub_100181F10(unsigned __int8 *a1)
{
  char v1;

  v1 = sub_100182348(a1);
  sub_10017FBC0(v1);
  sub_100109438();
}

void sub_100181F2C()
{
  uint64_t v0;

  sub_10018231C(*(_QWORD *)(v0 + 16));
}

void sub_100181F40()
{
  uint64_t v0;

  sub_1001822D0();
  v0 = sub_10017FE50();
  sub_100182354(v0);
  sub_100109438();
}

void sub_100181F60(unsigned __int8 *a1)
{
  char v1;

  v1 = sub_100182348(a1);
  sub_10017FB60(v1);
  sub_100109438();
}

void sub_100181F7C()
{
  uint64_t v0;

  sub_10018231C(*(_QWORD *)(v0 + 16));
}

void sub_100181F90()
{
  uint64_t v0;

  sub_1001822D0();
  v0 = sub_10017FE3C();
  sub_100182354(v0);
  sub_100109438();
}

void sub_100181FB0(unsigned __int8 *a1)
{
  char v1;

  v1 = sub_100182348(a1);
  sub_10017FB4C(v1);
  sub_100109438();
}

void sub_100181FCC()
{
  uint64_t v0;

  sub_10018231C(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100181FE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DAF40;
  if (!qword_1002DAF40)
  {
    v1 = sub_10010AD84(&qword_1002DAF38);
    sub_10018204C();
    sub_100182088();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DAF40);
  }
  return result;
}

unint64_t sub_10018204C()
{
  unint64_t result;

  result = qword_1002DAF48;
  if (!qword_1002DAF48)
  {
    result = swift_getWitnessTable(&unk_1002440A8, &type metadata for WrappedEmergencyViewController);
    atomic_store(result, (unint64_t *)&qword_1002DAF48);
  }
  return result;
}

unint64_t sub_100182088()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DAF50;
  if (!qword_1002DAF50)
  {
    v1 = sub_10010AD84(&qword_1002DAF58);
    result = swift_getWitnessTable(&protocol conformance descriptor for _TraitWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DAF50);
  }
  return result;
}

ValueMetadata *type metadata accessor for WrappedEmergencyViewController()
{
  return &type metadata for WrappedEmergencyViewController;
}

unint64_t sub_1001820E0()
{
  unint64_t result;

  result = qword_1002DAF60;
  if (!qword_1002DAF60)
  {
    result = swift_getWitnessTable(&unk_100244030, &type metadata for WrappedEmergencyViewController);
    atomic_store(result, (unint64_t *)&qword_1002DAF60);
  }
  return result;
}

void sub_100182120(id a1)
{

}

id sub_10018213C(float a1)
{
  void *v1;
  float *v2;

  *v2 = a1;
  return v1;
}

uint64_t sub_100182158(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a1);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v3, v2, v1);
}

BOOL sub_100182170(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100182180(uint64_t a1, ...)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a1);
  v4 = *v1;
  *(_QWORD *)(v4 + 16) = v3 + 1;
  v5 = v4 + 16 * v3;
  *(_QWORD *)(v5 + 32) = v2;
  *(_BYTE *)(v5 + 40) = 1;
  return swift_endAccess(va);
}

uint64_t sub_1001821A4()
{
  uint64_t v0;

  return swift_getKeyPath(v0);
}

void sub_1001821AC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1001821C0()
{
  uint64_t v0;

  return swift_getKeyPath(v0);
}

id sub_1001821CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11)
{
  return a10;
}

double sub_1001821E8()
{
  return sub_100180058();
}

uint64_t sub_100182210()
{
  uint64_t v0;

  return swift_release(v0);
}

void sub_100182218(const char *a1)
{
  sub_1001816E8(a1, 1, 1);
}

uint64_t sub_100182224(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return ObservationRegistrar.access<A, B>(_:keyPath:)(va, v2, v1);
}

uint64_t sub_10018223C()
{
  uint64_t v0;
  uint64_t (*v1)(BOOL);

  return sub_100181DA8(*(_QWORD *)(*(_QWORD *)v0 + 16), v1);
}

void sub_100182250(const char *a1, char a2)
{
  sub_1001816E8(a1, a2, 0);
}

uint64_t sub_100182258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ObservationRegistrar.didSet<A, B>(_:keyPath:)(a1, a2, v2);
}

uint64_t sub_100182264(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)(va, a1, v2);
}

uint64_t sub_100182278(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  va_list va;

  va_start(va, a2);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v4, v3, v2);
}

uint64_t sub_10018228C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, v3, v2, v1);
}

char *sub_10018229C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

uint64_t sub_1001822AC(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return swift_endAccess(va);
}

uint64_t sub_1001822DC()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_1001822E4(uint64_t a1, void *a2)
{
  return sub_1001807EC(a1, a2);
}

uint64_t sub_1001822EC(uint64_t a1)
{
  uint64_t v1;

  return static NSObject.== infix(_:_:)(a1, v1);
}

unint64_t sub_1001822F8()
{
  return sub_100181E0C();
}

unint64_t sub_100182300()
{
  return sub_100181E0C();
}

uint64_t sub_10018230C()
{
  return Logger.logObject.getter();
}

void sub_100182314()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;

  *v1 = v0;

}

void sub_10018231C(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;

  *(_BYTE *)(a1 + v2) = v1;
}

uint64_t sub_100182338()
{
  return static os_log_type_t.error.getter();
}

id sub_100182340()
{
  void *v0;

  return v0;
}

uint64_t sub_100182348(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_100182354(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

uint64_t sub_100182360(uint64_t a1, uint64_t a2)
{
  return Logger.logObject.getter(a1, a2);
}

uint64_t sub_10018236C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_1001085C0(&qword_1002D84A0);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  sub_100108600((uint64_t)v7, 1, 1, v8);
  v9 = (_QWORD *)sub_100109754((uint64_t)&unk_10028C720, 48);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  v10 = (_QWORD *)sub_100109754((uint64_t)&unk_10028C748, 48);
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &unk_1002DB110;
  v10[5] = v9;
  v11 = sub_100183CB4((uint64_t)v7, (uint64_t)&unk_1002DB120, (uint64_t)v10);
  return swift_release(v11);
}

NSString sub_100182440()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1002DAF68 = (uint64_t)result;
  return result;
}

NSString sub_100182474()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1002DAF70 = (uint64_t)result;
  return result;
}

uint64_t sub_1001824A8(void *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for DeclineCallService();
  v3 = sub_100109754(v2, 112);
  sub_1001829C4((uint64_t)a1);
  return v3;
}

id sub_10018252C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeclineCallServiceFactory();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10018257C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeclineCallServiceFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DeclineCallServiceFactory()
{
  return objc_opt_self(PHDeclineCallServiceFactory);
}

uint64_t sub_1001825CC()
{
  return TUCallScreeningEnabledM3(0);
}

id sub_1001825E4()
{
  return objc_msgSend((id)objc_opt_self(PHInCallRootViewController), "setShouldForceDismiss");
}

id sub_100182608()
{
  return objc_msgSend((id)objc_opt_self(PHInCallRootViewController), "setShouldLockDeviceOnNextDismiss");
}

void sub_10018262C(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;

  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (v3)
  {
    v4 = objc_opt_self(ICSApplicationDelegate);
    v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (v5)
    {
      v6 = objc_msgSend(v5, "currentInCallScene");
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v6, "requestTransitionToPresentationMode:isUserInitiated:analyticsSource:", 0, 0, a1);

      }
    }
    swift_unknownObjectRelease(v3);
  }
}

uint64_t sub_1001826FC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[15] = a1;
  v2[16] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[17] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[18] = v4;
  v2[19] = v5;
  return swift_task_switch(sub_100182768, v4, v5);
}

uint64_t sub_100182768()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");
  *(_QWORD *)(v0 + 160) = v2;

  if (v2)
  {
    v3 = objc_opt_self(ICSApplicationDelegate);
    v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
    if (v4)
    {
      v5 = objc_msgSend(v4, "answeringMachine");
      *(_QWORD *)(v0 + 168) = v5;
      if (v5)
      {
        v6 = v5;
        v7 = v0 + 16;
        v8 = String._bridgeToObjectiveC()();
        *(_QWORD *)(v0 + 176) = v8;
        *(_QWORD *)(v0 + 56) = v0 + 184;
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_100182930;
        v9 = swift_continuation_init(v0 + 16, 0);
        *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
        v10 = (_QWORD *)(v0 + 80);
        v10[1] = 0x40000000;
        v10[2] = sub_1001829BC;
        v10[3] = &unk_10028C7D8;
        v10[4] = v9;
        objc_msgSend(v6, "screenCallWithUUID:manualScreening:completion:", v8, 0, v10);
        return swift_continuation_await(v7);
      }
    }
    swift_unknownObjectRelease(v2);
  }
  swift_release(*(_QWORD *)(v0 + 136));
  if (qword_1002D7260 != -1)
    swift_once(&qword_1002D7260, sub_10010BD38);
  v12 = sub_100109570();
  sub_10011ADC0(v12, (uint64_t)&unk_1002E2CF8);
  v13 = sub_10011ADDC();
  if (sub_100184078(v13))
  {
    v14 = (_WORD *)sub_10010E3FC();
    sub_100143680(v14);
    sub_100184064((void *)&_mh_execute_header, v15, v16, "AudioCallViewControllerCallManager: could not screen because there is no answering machine");
    sub_100184088();
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100182930()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1001095A8();
  *v1 = *v0;
  return sub_100110E68();
}

uint64_t sub_100182964()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 160));
  sub_100110FF0();
  swift_unknownObjectRelease(v1);
  v3 = *(unsigned __int8 *)(v0 + 184);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1001829BC(uint64_t a1, char a2)
{
  return sub_10014FCA4(*(_QWORD *)(a1 + 32), a2);
}

_QWORD *sub_1001829C4(uint64_t a1)
{
  _QWORD *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone((Class)CNKCoreAnalyticsReporter), "init");
  v1[4] = sub_1001825CC;
  v1[5] = 0;
  v1[6] = sub_1001825E4;
  v1[7] = 0;
  v1[8] = sub_100182608;
  v1[9] = 0;
  v1[10] = sub_10018262C;
  v1[11] = 0;
  v1[12] = &unk_1002DB168;
  v1[13] = 0;
  v1[2] = a1;
  v1[3] = v3;
  return v1;
}

uint64_t sub_100182A3C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_DWORD *)(v4 + 88) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  sub_10018413C();
  v5 = sub_1001840B4();
  *(_QWORD *)(v4 + 40) = v5;
  v6 = sub_100110EC8(v5, (uint64_t)&protocol witness table for MainActor);
  *(_QWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 56) = v7;
  return sub_100184098((uint64_t)sub_100182A94, v6, v7);
}

uint64_t sub_100182A94()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  __n128 v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  int *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, uint64_t);

  v1 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 32) + 32);
  v2 = sub_10014CB24();
  LOBYTE(v1) = v1(v2);
  sub_100110F0C();
  if ((v1 & 1) != 0)
  {
    if ((objc_msgSend(*(id *)(v0 + 16), "isScreening") & 1) == 0)
    {
      v19 = *(_QWORD *)(v0 + 32);
      v20 = *(int **)(v19 + 96);
      *(_QWORD *)(v0 + 64) = *(_QWORD *)(v19 + 104);
      v21 = swift_retain();
      v22 = sub_10010BC5C(v21, "callUUID");
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v25 = v24;

      *(_QWORD *)(v0 + 72) = v25;
      v32 = (uint64_t (*)(uint64_t, uint64_t))((char *)v20 + *v20);
      v26 = (_QWORD *)swift_task_alloc(v20[1]);
      *(_QWORD *)(v0 + 80) = v26;
      *v26 = v0;
      v26[1] = sub_100182CA4;
      return v32(v23, v25);
    }
    if ((objc_msgSend(*(id *)(v0 + 16), "isScreening", swift_release(*(_QWORD *)(v0 + 40)).n128_f64[0]) & 1) != 0)
    {
      if (qword_1002D7260 != -1)
        swift_once(&qword_1002D7260, sub_10010BD38);
      v3 = sub_100109570();
      v4 = (void *)sub_10011ADC0(v3, (uint64_t)&unk_1002E2CF8);
      v6 = static os_log_type_t.default.getter(v5);
      if (sub_100182170(v6))
      {
        v7 = (_WORD *)sub_10010E3FC();
        *v7 = 0;
        sub_1001840CC((void *)&_mh_execute_header, v8, v9, "DeclineCallService: Not disconnecting call because it is screening");
        sub_100109440((uint64_t)v7);
      }

      Logger.logObject.getter(v10, v11);
      v12 = sub_10011ADDC();
      if (sub_100184078(v12))
      {
        v13 = (_WORD *)sub_10010E3FC();
        sub_100143680(v13);
        sub_100184064((void *)&_mh_execute_header, v14, v15, "DeclineCallService: user declined to answer call, dismiss ICS for call screening");
        sub_100184088();
      }
      v16 = *(_QWORD *)(v0 + 24);
      v17 = *(_QWORD *)(v0 + 32);

      v18 = *(void (**)(uint64_t))(v17 + 80);
      sub_10014CB24();
      v18(v16);
      sub_100110F0C();
    }
    else
    {
      v28 = (void *)sub_100184110();
      objc_msgSend(v28, "disconnectCall:withReason:", v29, v30, v31);
    }
  }
  else
  {
    objc_msgSend(*(id *)(*(_QWORD *)(v0 + 32) + 16), "disconnectCall:withReason:", *(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 88), swift_release(*(_QWORD *)(v0 + 40)).n128_f64[0]);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100182CA4(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 72);
  v3 = *(_QWORD *)(*v1 + 80);
  *(_BYTE *)(*v1 + 92) = a1;
  swift_task_dealloc(v3);
  sub_100110FF0();
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_100182D14, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_100182D14()
{
  uint64_t v0;
  void *v1;
  double v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __n128 v10;
  os_log_type_t v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  _WORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);

  v1 = (void *)*(unsigned __int8 *)(v0 + 92);
  *(_QWORD *)&v2 = swift_release(*(_QWORD *)(v0 + 40)).n128_u64[0];
  if ((v1 & 1) == 0)
  {
    if (qword_1002D7260 != -1)
      swift_once(&qword_1002D7260, sub_10010BD38);
    v3 = sub_100109570();
    sub_10011ADC0(v3, (uint64_t)&unk_1002E2CF8);
    v4 = sub_10011ADDC();
    if (sub_100184078(v4))
    {
      v5 = (_WORD *)sub_10010E3FC();
      sub_100143680(v5);
      sub_100184064((void *)&_mh_execute_header, v6, v7, "DeclineCallService: Failed to send call to screening");
      sub_100184088();
    }

  }
  if ((objc_msgSend(*(id *)(v0 + 16), "isScreening", v2) & 1) != 0)
  {
    if (qword_1002D7260 != -1)
      swift_once(&qword_1002D7260, sub_10010BD38);
    v8 = sub_100109570();
    v9 = (void *)sub_10011ADC0(v8, (uint64_t)&unk_1002E2CF8);
    v11 = static os_log_type_t.default.getter(v10);
    if (sub_100182170(v11))
    {
      v12 = (_WORD *)sub_10010E3FC();
      *v12 = 0;
      sub_1001840CC((void *)&_mh_execute_header, v13, v14, "DeclineCallService: Not disconnecting call because it is screening");
      sub_100109440((uint64_t)v12);
    }

    Logger.logObject.getter(v15, v16);
    v17 = sub_10011ADDC();
    if (sub_100184078(v17))
    {
      v18 = (_WORD *)sub_10010E3FC();
      sub_100143680(v18);
      sub_100184064((void *)&_mh_execute_header, v19, v20, "DeclineCallService: user declined to answer call, dismiss ICS for call screening");
      sub_100184088();
    }
    v21 = *(_QWORD *)(v0 + 24);
    v22 = *(_QWORD *)(v0 + 32);

    v23 = *(void (**)(uint64_t))(v22 + 80);
    sub_10014CB24();
    v23(v21);
    sub_100110F0C();
  }
  else
  {
    objc_msgSend((id)sub_100184110(), "disconnectCall:withReason:");
  }
  return sub_100136110(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100182F20(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = a5;
  *(_DWORD *)(v5 + 72) = a3;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 48) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100182F94, v7, v8);
}

uint64_t sub_100182F94()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  *(_QWORD *)(v0 + 56) = sub_10018412C();
  v3 = v2;
  v4 = v1;
  sub_10014CB24();
  v5 = (_QWORD *)sub_10010971C();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_100183008;
  return sub_1001840A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_DWORD *)(v0 + 72));
}

uint64_t sub_100183008()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  sub_1001095A8();
  v3 = *(void **)(v1 + 16);
  v2 = *(void **)(v1 + 24);
  sub_100109528();
  sub_100110FF0();

  sub_1001840C0();
  sub_100143800();
  return sub_100136110(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10018305C()
{
  uint64_t v0;

  sub_100143A28();

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 104));
  return v0;
}

uint64_t sub_1001830A4()
{
  uint64_t v0;

  sub_10018305C();
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for DeclineCallService()
{
  return objc_opt_self(_TtC13InCallService18DeclineCallService);
}

uint64_t sub_1001830E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = v0;
  sub_10018413C();
  v2 = sub_1001840B4();
  v1[3] = v2;
  v3 = sub_100110EC8(v2, (uint64_t)&protocol witness table for MainActor);
  v1[4] = v3;
  v1[5] = v4;
  return sub_100184098((uint64_t)sub_100183134, v3, v4);
}

uint64_t sub_100183134()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  void *v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(*(_QWORD *)(v0 + 16) + 16);
  *(_QWORD *)(v0 + 48) = v1;
  v2 = objc_msgSend(v1, "frontmostCall");
  *(_QWORD *)(v0 + 56) = v2;
  if (v2)
  {
    v3 = (uint64_t)v2;
    if (qword_1002D7380 != -1)
      swift_once(&qword_1002D7380, sub_100182474);
    v4 = qword_1002DAF70;
    v5 = (_QWORD *)swift_task_alloc(dword_1002DAFCC);
    *(_QWORD *)(v0 + 64) = v5;
    *v5 = v0;
    v5[1] = sub_10018326C;
    return sub_100182A3C(v3, v4, 2);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 24));
    if (qword_1002D7260 != -1)
      swift_once(&qword_1002D7260, sub_10010BD38);
    v7 = sub_100109570();
    v8 = (void *)sub_10011ADC0(v7, (uint64_t)&unk_1002E2CF8);
    v9 = static os_log_type_t.error.getter(v8);
    if (sub_100184078(v9))
    {
      v10 = (_WORD *)sub_10010E3FC();
      sub_100143680(v10);
      sub_100184064((void *)&_mh_execute_header, v11, v12, "Was told to decline answering frontmost call but no frontmost call was found.");
      sub_100184088();
    }

    return sub_1001095E4(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_10018326C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1001840E0();
  sub_10011DB9C(*(_QWORD *)(v0 + 64), v1);
  return sub_100110E68();
}

uint64_t sub_1001832A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  swift_release(*(_QWORD *)(v0 + 24));
  if ((uint64_t)sub_10010BC5C(v1, "currentCallCount") < 2)
  {
    v2 = *(void **)(v0 + 56);
  }
  else
  {
    v2 = *(void **)(v0 + 56);
    objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 24), "reportMultipleCallsWaitingUIAction:", 5);
  }

  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10018336C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001833D8, v4, v5);
}

uint64_t sub_1001833D8()
{
  _QWORD *v0;
  _QWORD *v1;

  swift_release(v0[4]);
  v0[5] = sub_10018412C();
  sub_10014CB24();
  v1 = (_QWORD *)sub_10010971C();
  v0[6] = v1;
  *v1 = v0;
  v1[1] = sub_100183438;
  return sub_1001830E4();
}

uint64_t sub_100183438()
{
  uint64_t v0;

  sub_1001095A8();
  sub_100109528();
  sub_100110FF0();
  sub_1001840C0();
  sub_100143800();
  return sub_100136110(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100183478(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  sub_10018413C();
  v3 = sub_1001840B4();
  v2[4] = v3;
  v4 = sub_100110EC8(v3, (uint64_t)&protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return sub_100184098((uint64_t)sub_1001834C8, v4, v5);
}

uint64_t sub_1001834C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  unsigned int v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  os_log_type_t v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;

  if (qword_1002D7260 != -1)
    swift_once(&qword_1002D7260, sub_10010BD38);
  v2 = sub_100109570();
  v3 = sub_100108664(v2, (uint64_t)&unk_1002E2CF8);
  *(_QWORD *)(v1 + 56) = v3;
  Logger.logObject.getter(v3, v4);
  v5 = sub_100184100();
  if (sub_100184078(v5))
  {
    v6 = (_WORD *)sub_10010E3FC();
    sub_100143680(v6);
    sub_100184064((void *)&_mh_execute_header, v7, v8, "DeclineCallService: Disconnecting active call due to lock event or button press");
    sub_100184088();
  }
  sub_100184108();
  v9 = *(void **)(v0 + 16);
  v11 = sub_10010BC5C(v10, "incomingCall");
  *(_QWORD *)(v1 + 64) = v11;
  v12 = sub_10010BC5C((uint64_t)v11, "currentAudioAndVideoCallCount");
  *(_QWORD *)(v1 + 72) = v12;
  if (v11)
  {
    v13 = *(void **)(v1 + 16);
    v14 = v11;
    v15 = objc_msgSend(v13, "status");
    if (qword_1002D7378 != -1)
      swift_once(&qword_1002D7378, sub_100182440);
    v16 = qword_1002DAF68;
    v17 = (_QWORD *)swift_task_alloc(dword_1002DAFCC);
    *(_QWORD *)(v1 + 80) = v17;
    *v17 = v1;
    v17[1] = sub_100183708;
    return sub_1001840A4((uint64_t)v14, v16, 2 * (v15 == 4));
  }
  else if (v12 == (id)1)
  {
    if (qword_1002D7378 != -1)
      swift_once(&qword_1002D7378, sub_100182440);
    v19 = qword_1002DAF68;
    v20 = (_QWORD *)swift_task_alloc(dword_1002DAFCC);
    *(_QWORD *)(v1 + 88) = v20;
    *v20 = v1;
    v20[1] = sub_1001837D8;
    return sub_1001840A4(*(_QWORD *)(v1 + 16), v19, 0);
  }
  else
  {
    v21 = objc_msgSend(v9, "disconnectCurrentCallAndActivateHeld", swift_release(*(_QWORD *)(v1 + 32)).n128_f64[0]);
    if (*(uint64_t *)(v1 + 72) <= 1)
    {
      sub_100184124((uint64_t)v21, v22);
      v23 = sub_100184100();
      if (sub_100184078(v23))
      {
        v24 = (_WORD *)sub_10010E3FC();
        sub_100143680(v24);
        sub_100184064((void *)&_mh_execute_header, v25, v26, "... and requesting lock on next dismiss");
        sub_100184088();
      }
      sub_100184108();
      v27 = (void (*)(uint64_t))MEMORY[0x40];
      v28 = sub_10014CB24();
      v27(v28);
      sub_100110F0C();
    }
    sub_100184134();
    return sub_100136110(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_100183708()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1001840E0();
  sub_10011DB9C(*(_QWORD *)(v0 + 80), v1);
  return sub_100110E68();
}

uint64_t sub_100183740()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;

  v1 = *(_QWORD **)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 32));
  v3 = *(void (**)(uint64_t))(v2 + 48);
  v4 = sub_10014CB24();
  v3(v4);
  sub_100110F0C();

  if (*(uint64_t *)(v0 + 72) <= 1)
  {
    sub_100184124(v5, v6);
    v7 = sub_100184100();
    if (sub_100184078(v7))
    {
      v8 = (_WORD *)sub_10010E3FC();
      sub_100143680(v8);
      sub_100184064((void *)&_mh_execute_header, v9, v10, "... and requesting lock on next dismiss");
      sub_100184088();
    }
    sub_100184108();
    v11 = (void (*)(uint64_t))v1[8];
    v12 = sub_10014CB24();
    v11(v12);
    sub_100110F0C();
  }
  sub_100184134();
  return sub_1001095E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1001837D8()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1001840E0();
  sub_10011DB9C(*(_QWORD *)(v0 + 88), v1);
  return sub_100110E68();
}

uint64_t sub_100183810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  swift_release(*(_QWORD *)(v1 + 32));
  sub_100184124(v2, v3);
  v4 = sub_100184100();
  if (sub_100184078(v4))
  {
    v5 = (_WORD *)sub_10010E3FC();
    sub_100143680(v5);
    sub_100184064((void *)&_mh_execute_header, v6, v7, "... and requesting lock on next dismiss");
    sub_100184088();
  }
  sub_100184108();
  v8 = *(void (**)(uint64_t))(v0 + 64);
  v9 = sub_10014CB24();
  v8(v9);
  sub_100110F0C();
  sub_100184134();
  return sub_1001095E4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1001838F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100183960, v5, v6);
}

uint64_t sub_100183960()
{
  uint64_t *v0;
  void *v1;
  id v2;
  _QWORD *v3;

  v1 = (void *)v0[2];
  swift_release(v0[5]);
  v0[6] = (uint64_t)sub_10018412C();
  v2 = v1;
  sub_10014CB24();
  v3 = (_QWORD *)sub_10010971C();
  v0[7] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_1001839D4;
  return sub_100183478(v0[2]);
}

uint64_t sub_1001839D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  sub_1001095A8();
  v2 = *(void **)(v1 + 16);
  sub_100109528();
  sub_100110FF0();

  sub_1001840C0();
  sub_100143800();
  return sub_1001095E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100183A1C()
{
  uint64_t v0;

  sub_100143A28();
  _Block_release(*(const void **)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100183A4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc(dword_1002DB0FC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100183AB0;
  v2 = sub_1001840F0();
  return v3(v2);
}

uint64_t sub_100183AB0()
{
  uint64_t v0;

  sub_100109528();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100183AE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_100184060;
  return v6();
}

uint64_t sub_100183B3C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc(dword_1002DB10C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100184060;
  v2 = sub_1001840F0();
  return v3(v2);
}

uint64_t sub_100183BAC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_100184060;
  return v7();
}

uint64_t sub_100183C04()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100183C30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1002DB11C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100184060;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1002DB118 + dword_1002DB118))(a1, v4, v5, v6);
}

uint64_t sub_100183CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];

  v6 = type metadata accessor for TaskPriority(0);
  if (sub_100109FF4(a1, 1, v6) == 1)
  {
    sub_100111CDC(a1);
    v7 = 7168;
  }
  else
  {
    v8 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    v7 = v8 | 0x1C00;
  }
  v9 = *(_QWORD *)(a3 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType(*(_QWORD *)(a3 + 16));
    swift_unknownObjectRetain(v9);
    v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
    v14 = v13;
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v15 = swift_allocObject(&unk_10028C770, 32, 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  if (v14 | v12)
  {
    v18[0] = 0;
    v18[1] = 0;
    v16 = v18;
    v18[2] = v12;
    v18[3] = v14;
  }
  else
  {
    v16 = 0;
  }
  return swift_task_create(v7, v16, (char *)&type metadata for () + 8, &unk_1002DB130, v15);
}

uint64_t sub_100183DF0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100183E54;
  return v6(a1);
}

uint64_t sub_100183E54()
{
  uint64_t v0;

  sub_100109528();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100183E8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100183EB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1002DB12C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100183AB0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1002DB128 + dword_1002DB128))(a1, v4);
}

uint64_t sub_100183F20()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100183F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1002DB144);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_100184060;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1002DB140 + dword_1002DB140))(v2, v3);
}

uint64_t sub_100183FB0()
{
  uint64_t v0;

  sub_100143A28();

  _Block_release(*(const void **)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100183FE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc(dword_1002DB15C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100184060;
  v2 = sub_1001840F0();
  return v3(v2);
}

void sub_100184064(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

BOOL sub_100184078(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100184088()
{
  uint64_t v0;

  return swift_slowDealloc(v0, -1, -1);
}

uint64_t sub_100184098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

uint64_t sub_1001840A4(uint64_t a1, uint64_t a2, int a3)
{
  return sub_100182A3C(a1, a2, a3);
}

uint64_t sub_1001840B4()
{
  return static MainActor.shared.getter();
}

uint64_t sub_1001840C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0);
}

void sub_1001840CC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void sub_1001840E0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1001840F0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100184100()
{
  return static os_log_type_t.info.getter();
}

void sub_100184108()
{
  void *v0;

}

uint64_t sub_100184110()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16);
}

uint64_t sub_100184124(uint64_t a1, uint64_t a2)
{
  return Logger.logObject.getter(a1, a2);
}

void *sub_10018412C()
{
  const void *v0;

  return _Block_copy(v0);
}

void sub_100184134()
{
  uint64_t v0;

}

uint64_t sub_10018413C()
{
  return type metadata accessor for MainActor(0);
}

void sub_100184164()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC13InCallService27AmbientCompactSceneDelegate_window);
  sub_100109438();
}

void sub_1001841D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService27AmbientCompactSceneDelegate_window);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService27AmbientCompactSceneDelegate_window) = a1;

}

void sub_1001841E8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  char v33;
  uint64_t v34;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  sub_10010BC88();
  v9 = (_QWORD *)(v8 - v7);
  sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v4);
  v10 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v9, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v11 = type metadata accessor for ActivityScene(0);
  v12 = swift_dynamicCastClass(a1, v11);
  if (!v12)
    return;
  v13 = (void *)v12;
  v14 = objc_allocWithZone((Class)type metadata accessor for SecureWindow());
  v15 = a1;
  v16 = objc_msgSend(v14, "initWithWindowScene:", v13);
  v17 = *(void **)(v2 + OBJC_IVAR____TtC13InCallService27AmbientCompactSceneDelegate_window);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13InCallService27AmbientCompactSceneDelegate_window) = v16;
  v18 = v16;

  v19 = v18;
  v20 = objc_msgSend(v13, "coordinateSpace");
  objc_msgSend(v20, "bounds");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_unknownObjectRelease(v20);
  objc_msgSend(v19, "setFrame:", v22, v24, v26, v28);

  v33 = 0;
  State.init(wrappedValue:)(&v34, &v33);
  v29 = objc_allocWithZone((Class)sub_1001085C0(&qword_1002DB1A8));
  v30 = (void *)LockScreenHostingController.init(rootView:)(&v34);
  v31 = objc_msgSend(v30, "view");
  if (!v31)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v32 = v31;
  objc_msgSend(v31, "setBackgroundColor:", 0);

  objc_msgSend(v19, "setRootViewController:", v30);
  objc_msgSend(v19, "makeKeyAndVisible");

}

id sub_1001844BC()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService27AmbientCompactSceneDelegate_window] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t type metadata accessor for AmbientCompactSceneDelegate()
{
  return objc_opt_self(_TtC13InCallService27AmbientCompactSceneDelegate);
}

uint64_t initializeBufferWithCopyOfBuffer for AmbientCompactView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for AmbientCompactView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

uint64_t assignWithTake for AmbientCompactView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for AmbientCompactView(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AmbientCompactView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AmbientCompactView()
{
  return &type metadata for AmbientCompactView;
}

uint64_t sub_1001846AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10026751C, 1);
}

void sub_1001846BC(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void (**v26)(uint64_t);
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  void (**v29)();

  v5 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  sub_10010BC88();
  v10 = v9 - v8;
  v11 = sub_1001085C0(&qword_1002DB1B0);
  __chkstk_darwin(v11, v12);
  sub_10010BC88();
  v15 = (_QWORD *)(v14 - v13);
  v16 = sub_1001085C0(&qword_1002DB1B8);
  __chkstk_darwin(v16, v17);
  sub_10010BC88();
  v20 = v19 - v18;
  *v15 = static Alignment.center.getter(v21);
  v15[1] = v22;
  v23 = sub_1001085C0(&qword_1002DB1C0);
  sub_1001848EC(a1, a2, (_QWORD *)((char *)v15 + *(int *)(v23 + 44)));
  v24 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(TUCallRecordingStateChangedNotification, 0);

  v25 = sub_100174764((uint64_t)&unk_10028C880);
  *(_BYTE *)(v25 + 16) = a1;
  *(_QWORD *)(v25 + 24) = a2;
  sub_10014FC0C((uint64_t)v15, v20, &qword_1002DB1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v20 + *(int *)(v16 + 52), v10, v5);
  v26 = (void (**)(uint64_t))(v20 + *(int *)(v16 + 56));
  *v26 = sub_100184ECC;
  v26[1] = (void (*)(uint64_t))v25;
  v27 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  swift_retain();
  v27(v10, v5);
  sub_10011ABE4((uint64_t)v15, &qword_1002DB1B0);
  v28 = sub_100174764((uint64_t)&unk_10028C8A8);
  *(_BYTE *)(v28 + 16) = a1;
  *(_QWORD *)(v28 + 24) = a2;
  sub_10014FC0C(v20, a3, &qword_1002DB1B8);
  v29 = (void (**)())(a3 + *(int *)(sub_1001085C0(&qword_1002DB1C8) + 36));
  *v29 = sub_100184ED8;
  v29[1] = (void (*)())v28;
  v29[2] = 0;
  v29[3] = 0;
  swift_retain();
  sub_10011ABE4(v20, &qword_1002DB1B8);
}

void sub_1001848EC(char a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unsigned __int8 v60;

  v6 = sub_1001085C0(&qword_1002DB1D8);
  __chkstk_darwin(v6, v7);
  v9 = (uint64_t *)((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = type metadata accessor for _IndefiniteSymbolEffectModifier(0);
  __chkstk_darwin(v52, v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SymbolEffectOptions(0);
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PulseSymbolEffect(0);
  v53 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1001085C0(&qword_1002DB1E0);
  v22 = __chkstk_darwin(v57, v21);
  v24 = (uint64_t *)((char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22, v25);
  v56 = (uint64_t)&v47 - v26;
  v58 = a1;
  v59 = a2;
  v27 = sub_1001085C0(&qword_1002DB1D0);
  State.wrappedValue.getter(v27);
  LODWORD(a2) = v60;
  v28 = Image.init(systemName:)(0x69662E656E6F6870, 0xEA00000000006C6CLL);
  if ((_DWORD)a2 == 1)
  {
    v49 = static Color.red.getter();
    v50 = v6;
    KeyPath = swift_getKeyPath(&unk_100244218);
    v51 = a3;
    v30 = KeyPath;
    v31 = PulseSymbolEffect.init()();
    static SymbolEffectOptions.repeating.getter(v31);
    sub_10015C704(&qword_1002DB218, (uint64_t (*)(uint64_t))&type metadata accessor for PulseSymbolEffect);
    dispatch thunk of SymbolEffect.configuration.getter(v17, v32);
    v33 = v52;
    v34 = &v12[*(int *)(v52 + 20)];
    v48 = v17;
    v35 = v54;
    v36 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v34, v16, v55);
    v12[*(int *)(v33 + 24)] = 1;
    sub_100184FF4((uint64_t)v12, (uint64_t)v24 + *(int *)(v57 + 36));
    *v24 = v28;
    v24[1] = v30;
    v37 = v49;
    v24[2] = v49;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100185038((uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v36);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v20, v48);
    swift_release(v37);
    swift_release(v30);
    swift_release(v28);
    v38 = v56;
    sub_100185074((uint64_t)v24, v56);
    sub_10014FC0C(v38, (uint64_t)v9, &qword_1002DB1E0);
    swift_storeEnumTagMultiPayload(v9, v50, 0);
    v39 = sub_1001085C0(&qword_1002DB1E8);
    v40 = sub_100184EEC();
    v41 = sub_100184F70();
    _ConditionalContent<>.init(storage:)(v51, v9, v57, v39, v40, v41);
    sub_10011ABE4(v38, &qword_1002DB1E0);
  }
  else
  {
    v42 = static Color.green.getter();
    v43 = swift_getKeyPath(&unk_100244218);
    *v9 = v28;
    v9[1] = v43;
    v9[2] = v42;
    swift_storeEnumTagMultiPayload(v9, v6, 1);
    v44 = sub_1001085C0(&qword_1002DB1E8);
    v45 = sub_100184EEC();
    v46 = sub_100184F70();
    _ConditionalContent<>.init(storage:)(a3, v9, v57, v44, v45, v46);
  }
}

void sub_100184CB4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD v8[4];

  Notification.object.getter(v8);
  if (v8[3])
  {
    v5 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
    if ((swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
    {
      v6 = v7;
      sub_100184D60(v7, a2 & 1, a3);

    }
  }
  else
  {
    sub_10011ABE4((uint64_t)v8, &qword_1002D84F0);
  }
}

uint64_t sub_100184D60(void *a1, char a2, uint64_t a3)
{
  id v5;
  void *v6;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;
  _BYTE v11[9];
  uint64_t v12;

  v5 = objc_msgSend(a1, "recordingSession");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "recordingState");

    v8 = v7 == 3;
  }
  else
  {
    v8 = 0;
  }
  v11[1] = a2 & 1;
  v12 = a3;
  v11[0] = v8;
  v9 = sub_1001085C0(&qword_1002DB1D0);
  return State.wrappedValue.setter(v11, v9);
}

void sub_100184DFC(char a1, uint64_t a2)
{
  id v4;
  id v5;

  v4 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v5 = objc_msgSend(v4, "frontmostCall");

  if (v5)
  {
    sub_100184D60(v5, a1 & 1, a2);

  }
}

void sub_100184E9C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1001846BC(*(_BYTE *)v1, *(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_100184EA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100184ECC(uint64_t a1)
{
  uint64_t v1;

  sub_100184CB4(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100184ED8()
{
  uint64_t v0;

  sub_100184DFC(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_100184EEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB1F0;
  if (!qword_1002DB1F0)
  {
    v1 = sub_10010AD84(&qword_1002DB1E0);
    sub_100184F70();
    sub_10015C704(&qword_1002DB210, (uint64_t (*)(uint64_t))&type metadata accessor for _IndefiniteSymbolEffectModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB1F0);
  }
  return result;
}

unint64_t sub_100184F70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB1F8;
  if (!qword_1002DB1F8)
  {
    v1 = sub_10010AD84(&qword_1002DB1E8);
    sub_10010B56C((unint64_t *)&unk_1002DB200, &qword_1002D9600);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB1F8);
  }
  return result;
}

uint64_t sub_100184FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _IndefiniteSymbolEffectModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100185038(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _IndefiniteSymbolEffectModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100185074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1001085C0(&qword_1002DB1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001850C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB220;
  if (!qword_1002DB220)
  {
    v1 = sub_10010AD84(&qword_1002DB1C8);
    sub_10010B56C(&qword_1002DB228, &qword_1002DB1B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB220);
  }
  return result;
}

id sub_10018514C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v4;
  id v5;

  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "animationWithKeyPath:", v4);

  return v5;
}

void sub_1001851B8(void *a1)
{
  id v2;
  Class isa;
  Class v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  sub_10014ACC4();
  v2 = sub_10018514C(0x7974696361706FLL, 0xE700000000000000);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  sub_100163284((uint64_t)isa, "setFromValue:");

  v4 = Double._bridgeToObjectiveC()().super.super.isa;
  sub_100163284((uint64_t)v4, "setToValue:");

  v5 = (void *)objc_opt_self(CAMediaTimingFunction);
  v9 = v2;
  v6 = objc_msgSend(v5, "functionWithName:", kCAMediaTimingFunctionEaseIn);
  objc_msgSend(v9, "setTimingFunction:", v6);

  objc_msgSend(v9, "setDuration:", 0.5);
  v7 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v7, "begin");
  objc_msgSend(v7, "setDisableActions:", 1);
  objc_msgSend(a1, "setNeedsLayout");
  objc_msgSend(a1, "layoutIfNeeded");
  v8 = objc_msgSend(a1, "layer");
  sub_100185434((uint64_t)v9, 0x6E416E4965646166, 0xEF6E6F6974616D69, v8);

  objc_msgSend(v7, "commit");
}

id sub_100185394()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BannerTransitionAnimation();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1001853E4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BannerTransitionAnimation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BannerTransitionAnimation()
{
  return objc_opt_self(ICSBannerTransitionAnimation);
}

void sub_100185434(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  objc_msgSend(a4, "addAnimation:forKey:", a1, v7);

}

id sub_1001854A0(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  v6 = &v2[OBJC_IVAR___ICSInterruptCallAlert_callback];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, "init");
}

void sub_100185558()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_100185898();
  sub_100136764();
  sub_100185854(28, v1);
  sub_10018588C();
  sub_1001858B0();
  sub_10011AEDC();
}

void sub_1001855C0()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_100185898();
  sub_100136764();
  sub_100185854(30, v1);
  sub_10018588C();
  sub_1001858B0();
  sub_10011AEDC();
}

void sub_100185628()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_100185898();
  sub_100136764();
  sub_100185854(39, v1);
  sub_10018588C();
  sub_1001858B0();
  sub_10011AEDC();
}

id sub_100185690(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

void sub_1001856F4()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_100185898();
  sub_100136764();
  sub_100185854(55, v1);
  sub_10018588C();
  sub_1001858B0();
  sub_10011AEDC();
}

uint64_t sub_100185750()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(v0 + OBJC_IVAR___ICSInterruptCallAlert_callback);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___ICSInterruptCallAlert_callback + 8);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_1001857BC()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.InterruptCallAlert", 32, "init()", 6, 0);
  __break(1u);
}

uint64_t type metadata accessor for InterruptCallAlert()
{
  return objc_opt_self(ICSInterruptCallAlert);
}

uint64_t sub_100185828()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018584C()
{
  uint64_t v0;

  return sub_1001858A8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100185854(uint64_t a1, uint64_t a2)
{
  NSBundle v2;
  unint64_t v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v7;

  v3 = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  v4.value._countAndFlagsBits = 0x65536C6C61436E49;
  v4.value._object = (void *)0xED00006563697672;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)(&a2 - 1), v4, v2, v5, v7)._countAndFlagsBits;
}

void sub_10018588C()
{
  void *v0;

}

uint64_t sub_1001858A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1001858B0()
{
  uint64_t v0;

  return v0;
}

uint64_t EndControlService.__allocating_init(callCenter:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t EndControlService.init(callCenter:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

Swift::Void __swiftcall EndControlService.requestEndCall()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "disconnectCurrentCallAndActivateHeld");
}

uint64_t EndControlService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EndControlService.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 24, 7);
}

void sub_100185948()
{
  EndControlService.requestEndCall()();
}

uint64_t type metadata accessor for EndControlService()
{
  return objc_opt_self(_TtC13InCallService17EndControlService);
}

char *sub_100185988(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  char *result;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[2];
  _QWORD *v13;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (char *)v3;
  v13 = _swiftEmptyArrayStorage;
  result = sub_100187164(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v6 = swift_unknownObjectRetain(*(_QWORD *)(a1 + 8 * i + 32));
      v11 = v6;
      v7 = sub_1001085C0(&qword_1002D93E0);
      swift_dynamicCast(v12, &v11, v7, (char *)&type metadata for Any + 8, 7);
      v3 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      {
        sub_100187164(0, v3[2] + 1, 1);
        v3 = v13;
      }
      v9 = v3[2];
      v8 = v3[3];
      if (v9 >= v8 >> 1)
      {
        sub_100187164((char *)(v8 > 1), v9 + 1, 1);
        v3 = v13;
      }
      v3[2] = v9 + 1;
      sub_10011AC74(v12, &v3[4 * v9 + 4]);
    }
    return (char *)v3;
  }
  __break(1u);
  return result;
}

void sub_100185B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  NSString v5;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(v4, "initWithString:", v5);

  sub_100109830();
}

void sub_100185BB0()
{
  uint64_t v0;
  uint64_t v1;

  sub_100187748();
  sub_100185C30();
  sub_100185B18(v0, v1);
  sub_100109438();
}

void sub_100185C30()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualTranscriptionMessage_vmTranscript), "transcriptionString");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  sub_100109830();
}

id sub_100185CB4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualTranscriptionMessage_vmTranscript), "confidenceRating");
}

double sub_100185D04()
{
  uint64_t v0;
  float v1;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualTranscriptionMessage_vmTranscript), "confidence");
  return v1;
}

void sub_100185D64()
{
  sub_10011B030((uint64_t)"InCallService.VisualTranscriptionMessage", 40, (uint64_t)"init()");
  __break(1u);
}

id sub_100185D94()
{
  return sub_100112450(type metadata accessor for VisualTranscriptionMessage);
}

uint64_t type metadata accessor for VisualTranscriptionMessage()
{
  return objc_opt_self(MPVisualTranscriptionMessage);
}

id sub_100185DEC()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage);
}

void sub_100185E2C()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "identifier");
  v2 = objc_allocWithZone((Class)type metadata accessor for MessageID(0));
  sub_10011FE98((uint64_t)v1);
  sub_100109438();
}

void sub_100185EC8()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;

  v1 = objc_msgSend(objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance"), "providerManager");
  sub_10011AF04();
  v3 = sub_10010BC5C(v2, "telephonyProvider");

  v4 = objc_msgSend(v3, "identifier");
  sub_10011AF04();
  static String._unconditionallyBridgeFromObjectiveC(_:)(v0);

  sub_100109830();
}

uint64_t sub_100185F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for UUID(0);
  v0 = sub_100187810();
  return sub_10011AE8C(v0, v1, v2, v3);
}

void sub_100185FF0(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;

  if (sub_10010BC5C(a1, "senderDestinationID"))
  {
    v1 = (void *)objc_opt_self(TUHandle);
    v2 = sub_10010BC5C((uint64_t)v1, "senderISOCountryCode");
    v3 = sub_100187804(v1, "normalizedPhoneNumberHandleForValue:isoCountryCode:");
    sub_10011AF04();

  }
  sub_100109830();
}

void sub_100186090()
{
  sub_10018615C((SEL *)&selRef_senderDestinationID);
}

id sub_1001860A8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (!v6)
    return sub_100156D2C(0);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return sub_100156D2C(v7);
}

void sub_100186108()
{
  sub_10018615C((SEL *)&selRef_senderISOCountryCode);
}

void sub_100186120()
{
  sub_10018615C((SEL *)&selRef_receiverDestinationID);
}

void sub_100186138()
{
  sub_10018615C((SEL *)&selRef_receiverISOCountryCode);
}

void sub_100186150()
{
  sub_10018615C((SEL *)&selRef_callbackDestinationID);
}

void sub_10018615C(SEL *a1)
{
  uint64_t v1;
  id v2;

  v2 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___MPVisualMessage_vmMessage), *a1);
  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    sub_1001877F8();
  }
  sub_100109830();
}

void sub_1001861E8(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = (uint64_t)sub_10010E310(a1, "isDeleted");
  if ((v1 & 1) == 0)
  {
    v2 = sub_10010E310(v1, "isBlocked");
    sub_10010E310((uint64_t)v2, "isTrashed");
  }
  sub_100109438();
}

id sub_100186280()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "isRead");
}

void sub_100186344()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "date");
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

}

id sub_1001863C8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "isTranscriptionAvailable");
}

id sub_100186428()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "duration");
}

id sub_100186470()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "isTranscriptionRated");
}

BOOL sub_1001864C8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "transcriptionState") == (id)2;
}

BOOL sub_100186528()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "transcriptionState") == (id)3;
}

id sub_100186588()
{
  uint64_t v0;
  id result;
  id v2;
  objc_class *v3;
  char *v4;
  objc_super v5;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "transcript");
  if (result)
  {
    v2 = result;
    v3 = (objc_class *)type metadata accessor for VisualTranscriptionMessage();
    v4 = (char *)objc_allocWithZone(v3);
    *(_QWORD *)&v4[OBJC_IVAR___MPVisualTranscriptionMessage_vmTranscript] = v2;
    v5.receiver = v4;
    v5.super_class = v3;
    return objc_msgSendSuper2(&v5, "init");
  }
  return result;
}

id sub_10018662C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "isDeleted");
}

uint64_t sub_10018671C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___MPVisualMessage_vmMessage), "dataURL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v3);

  v4 = type metadata accessor for URL(0);
  return sub_10011AE8C(a1, 0, 1, v4);
}

id sub_1001867A0(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(_QWORD), uint64_t (*a6)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;

  v9 = sub_1001085C0(a3);
  v11 = __chkstk_darwin(v9, v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(v11);
  v14 = a5(0);
  v15 = 0;
  if (sub_100109FF4((uint64_t)v13, 1, v14) != 1)
  {
    v15 = (void *)a6();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  return sub_100156D2C(v15);
}

uint64_t sub_10018684C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for URL(0);
  v0 = sub_100187810();
  return sub_10011AE8C(v0, v1, v2, v3);
}

id sub_1001868A0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___MPVisualMessage_vmMessage), "isDataAvailable");
}

id sub_1001868C8(uint64_t a1, _QWORD *a2, uint64_t (*a3)(void))
{
  char *v3;
  objc_super v5;

  *(_QWORD *)&v3[*a2] = a1;
  v5.receiver = v3;
  v5.super_class = (Class)a3();
  return objc_msgSendSuper2(&v5, "init");
}

id sub_100186934(double a1)
{
  uint64_t v1;

  *(float *)&a1 = a1;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___MPVisualMessage_vmMessage), "shouldMarkAsReadForPlaybackCurrentTime:", a1);
}

void sub_1001869A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char *v4;
  Class isa;
  id v6;

  v3 = *(void **)(v2 + OBJC_IVAR___MPVisualMessage_vmMessage);
  v4 = sub_100185988(a2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  v6 = sub_100187804(v3, "contactUsingContactStore:withKeysToFetch:");

  sub_100109830();
}

void sub_100186A90(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v2 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___MPVisualMessage_vmMessage), "displayNameUsingContactStore:", a1);
  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    sub_1001877F8();
  }
  sub_100109830();
}

void sub_100186B68()
{
  sub_10011B030((uint64_t)"InCallService.VisualMessage", 27, (uint64_t)"init()");
  __break(1u);
}

id sub_100186B98()
{
  return sub_100112450(type metadata accessor for VisualMessage);
}

uint64_t type metadata accessor for VisualMessage()
{
  return objc_opt_self(MPVisualMessage);
}

uint64_t sub_100186BD0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  if (a2 < 0)
  {
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
  }
  else
  {
    v6 = type metadata accessor for AudioRoute(0);
    v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a2;
    v8 = a3 + v7;
    v9 = a1 + v7;
    if (v8 <= a1 || v9 <= a3)
      return swift_arrayInitWithCopy(a3, a1, a2, v6);
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_100186CC4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;

  if (a2 < 0)
  {
    sub_100187784();
    sub_1001877E8();
  }
  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3)
      return swift_arrayInitWithCopy(a3, a1, a2, &type metadata for String);
    sub_100187784();
    sub_1001877D8();
  }
  result = sub_1001877C4(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  __break(1u);
  return result;
}

uint64_t sub_100186D60(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7;
  uint64_t result;

  if (a2 < 0)
  {
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
  }
  else
  {
    if (a3 + 8 * a2 <= a1 || a1 + 8 * a2 <= a3)
    {
      v7 = sub_1001085C0((uint64_t *)&unk_1002DB3B0);
      return swift_arrayInitWithCopy(a3, a1, a2, v7);
    }
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_100186E4C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;

  if (a2 < 0)
  {
    sub_100187784();
    sub_1001877E8();
  }
  else
  {
    sub_1001877A8();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1001085C0(&qword_1002D93E0);
      v6 = sub_100187824();
      return sub_100187798(v6, v7, v8, v9);
    }
    sub_100187784();
    sub_1001877D8();
  }
  result = sub_1001877C4(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  __break(1u);
  return result;
}

uint64_t sub_100186EDC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
  }
  else
  {
    if (a3 + 32 * a2 <= a1 || a1 + 32 * a2 <= a3)
      return swift_arrayInitWithCopy(a3, a1, a2, (char *)&type metadata for Any + 8);
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_100186FAC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7;
  uint64_t result;

  if (a2 < 0)
  {
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
  }
  else
  {
    if (a3 + 48 * a2 <= a1 || a1 + 48 * a2 <= a3)
    {
      v7 = sub_1001085C0(&qword_1002DB3D0);
      return swift_arrayInitWithCopy(a3, a1, a2, v7);
    }
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_10018709C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;

  if (a2 < 0)
  {
    sub_100187784();
    sub_1001877E8();
  }
  else
  {
    sub_1001877A8();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1001085C0(&qword_1002DB3D8);
      v6 = sub_100187824();
      return sub_100187798(v6, v7, v8, v9);
    }
    sub_100187784();
    sub_1001877D8();
  }
  result = sub_1001877C4(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  __break(1u);
  return result;
}

size_t sub_10018712C(size_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  size_t result;

  result = sub_10018719C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_100187148(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1001873B4(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_100187164(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_100187494(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_100187180(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_100187574(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

size_t sub_10018719C(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_1001085C0(&qword_1002DB3C0);
  v11 = *(_QWORD *)(type metadata accessor for AudioRoute(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_24;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AudioRoute(0) - 8) + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = (unint64_t)v15 + v18;
  v20 = a4 + v18;
  if ((v5 & 1) != 0)
  {
    sub_10019C2E4(v20, v8, v19);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100186BD0(v20, v8, v19);
  }
  swift_release(a4);
  return (size_t)v15;
}

void sub_1001872DC(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1001085C0(&qword_1002DBFB0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    sub_10019C2F0(v14, v8, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100186CC4((unint64_t)v14, v8, (unint64_t)v13);
  }
  swift_release(a4);
  sub_100109830();
}

char *sub_1001873B4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1001085C0(&qword_1002DB3A8);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 8);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_10019C48C(v14, v8, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100186D60((unint64_t)v14, v8, (unint64_t)v13);
  }
  swift_release(a4);
  return v11;
}

char *sub_100187494(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1001085C0(&qword_1002D9660);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 32);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_10019C4E0(v14, v8, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100186EDC((unint64_t)v14, v8, (unint64_t)v13);
  }
  swift_release(a4);
  return v11;
}

char *sub_100187574(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1001085C0(&qword_1002DB3C8);
    v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_10019C534(v14, v8, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100186FAC((unint64_t)v14, v8, (unint64_t)v13);
  }
  swift_release();
  return v11;
}

void sub_10018765C(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_1001876D4(v6, a2, a3);
  sub_100109830();
}

void sub_1001876A8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1001876D4(uint64_t *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  unint64_t v6;
  uint64_t v7;

  v6 = a3 & 0xC000000000000001;
  sub_100119E3C(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
  else
    v7 = swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
  *a1 = v7;
  return sub_100187740;
}

uint64_t sub_100187740(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

unint64_t sub_100187748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB3A0;
  if (!qword_1002DB3A0)
  {
    v1 = objc_opt_self(NSAttributedString);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DB3A0);
  }
  return result;
}

uint64_t sub_100187798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_arrayInitWithCopy(a1, a2, a3, a4);
}

uint64_t sub_1001877C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11)
{
  return _fatalErrorMessage(_:_:file:line:flags:)(a1, a2, a3, a4, a5, 2, a7, 25, a9, a10, a11);
}

void sub_1001877D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{

}

void sub_1001877F8()
{
  void *v0;

}

id sub_100187804(id a1, SEL a2)
{
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(a1, a2, v2, v3);
}

uint64_t sub_100187810()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100187824()
{
  uint64_t v0;

  return v0;
}

void sub_100187858()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController);
  sub_100109438();
}

void sub_1001878C8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController);
  *(_QWORD *)(v1 + OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController) = a1;

}

id sub_10018790C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_containerViewController), "supportedInterfaceOrientations");
}

char *sub_100187924(void *a1)
{
  char *v1;
  id v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v17[3];
  objc_super v18;

  *(_QWORD *)&v1[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v1[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_callDisplayStyleManager] = a1;
  v3 = objc_allocWithZone((Class)type metadata accessor for ScreenSharingSpectatorViewController(0));
  v4 = a1;
  v5 = v1;
  v6 = objc_msgSend(v3, "init");
  *(_QWORD *)&v5[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_containerViewController] = v6;

  v18.receiver = v5;
  v18.super_class = (Class)type metadata accessor for ScreenSharingSpectatorRootViewController();
  v7 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
  v8 = (void *)objc_opt_self(NSNotificationCenter);
  v9 = (char *)v7;
  v10 = objc_msgSend(v8, "defaultCenter");
  objc_msgSend(v10, "addObserver:selector:name:object:", v9, "pipStateDidChangeNotification:", CFSTR("PHPIPControllerStateDidChangeNotification"), 0);

  v17[0] = ScreenSharingSpectatorViewController.screenInfoDidChangeSubject.getter();
  v11 = swift_allocObject(&unk_10028C948, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  v12 = sub_1001085C0(&qword_1002DB448);
  v13 = sub_100188548();
  v14 = Publisher<>.sink(receiveValue:)(sub_100188540, v11, v12, v13);
  swift_release(v11);
  swift_release(v17[0]);
  v15 = &v9[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_cancellables];
  swift_beginAccess(&v9[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_cancellables], v17, 33, 0);
  AnyCancellable.store(in:)(v15);
  swift_endAccess(v17);
  swift_release(v14);

  return v9;
}

void sub_100187B04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  id v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController), "updatePIPSize");
    v6 = *(id *)&v4[v5];
    objc_msgSend(v6, "updatePIPFrame");

  }
}

void sub_100187BB0()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v0[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/ScreenSharingSpectatorRootViewController.swift", 60, 2);
  __break(1u);
}

void sub_100187C4C()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Class isa;
  objc_super v40;

  v40.receiver = v0;
  v40.super_class = (Class)type metadata accessor for ScreenSharingSpectatorRootViewController();
  objc_msgSendSuper2(&v40, "loadView");
  objc_msgSend(v0, "setOverrideUserInterfaceStyle:", 2);
  v1 = *(void **)&v0[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_containerViewController];
  v2 = sub_10010E2F4();
  if (!v2)
  {
    __break(1u);
    goto LABEL_14;
  }
  v3 = v2;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v4 = sub_100149E80();
  if (!v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v5 = v4;
  v6 = sub_10010E2F4();
  if (!v6)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = v6;
  objc_msgSend(v5, "addSubview:", v6);

  objc_msgSend(v0, "addChildViewController:", v1);
  objc_msgSend(v1, "didMoveToParentViewController:", v0);
  v8 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100241800;
  v10 = sub_10010E2F4();
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = objc_msgSend(v10, "leadingAnchor");
  sub_100149EAC();
  v12 = sub_100149E80();
  if (!v12)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "leadingAnchor");
  sub_10011B028();
  v15 = sub_100151288();
  sub_100151298();

  *(_QWORD *)(v9 + 32) = v13;
  v16 = sub_10010E2F4();
  if (!v16)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v17 = objc_msgSend(v16, "trailingAnchor");
  sub_100149EAC();
  v18 = sub_100149E80();
  if (!v18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, "trailingAnchor");
  sub_10011B028();
  v21 = sub_100151288();
  sub_100151298();

  *(_QWORD *)(v9 + 40) = v19;
  v22 = sub_10010E2F4();
  if (!v22)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v23 = objc_msgSend(v22, "topAnchor");
  sub_100149EAC();
  v24 = sub_100149E80();
  if (!v24)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, "topAnchor");
  sub_10011B028();
  v27 = sub_100151288();
  sub_100151298();

  *(_QWORD *)(v9 + 48) = v25;
  v28 = sub_10010E2F4();
  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, "bottomAnchor");

  v31 = sub_100149E80();
  if (v31)
  {
    v32 = v31;
    v33 = (void *)objc_opt_self(NSLayoutConstraint);
    v34 = objc_msgSend(v32, "bottomAnchor");

    v35 = sub_100151288();
    *(_QWORD *)(v9 + 56) = v35;
    specialized Array._endMutation()(v36, v37);
    v38 = v9;
    sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v38);
    objc_msgSend(v33, "activateConstraints:", isa);

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_100188008()
{
  char *v0;
  uint64_t v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenSharingSpectatorRootViewController();
  objc_msgSendSuper2(&v2, "viewDidLoad");
  v1 = OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController;
  objc_msgSend(*(id *)&v0[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController], "updatePIPSize");
  objc_msgSend(*(id *)&v0[v1], "updatePIPFrame");
  objc_msgSend(v0, "setNeedsStatusBarAppearanceUpdate");
  sub_100064628();
}

void sub_1001880A4(char a1)
{
  char *v1;
  uint64_t v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ScreenSharingSpectatorRootViewController();
  objc_msgSendSuper2(&v4, "viewDidAppear:", a1 & 1);
  v3 = OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController;
  objc_msgSend(*(id *)&v1[OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController], "updatePIPSize");
  objc_msgSend(*(id *)&v1[v3], "updatePIPFrame");
  sub_100064628();
}

void sub_100188144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;
  char v10;
  id v11;
  _QWORD v12[4];

  v1 = v0;
  Notification.object.getter(v12);
  if (!v12[3])
  {
    sub_100137118((uint64_t)v12);
    goto LABEL_9;
  }
  v2 = sub_10010BBE8(0, (unint64_t *)&unk_1002DB430, &off_1002833A8);
  if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_9:
    v5 = *(void **)(v0 + OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController);
    goto LABEL_10;
  }
  v3 = v11;
  v4 = OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController;
  v5 = *(void **)(v0 + OBJC_IVAR___ICSScreenSharingSpectatorRootViewController_pipController);
  if (!v11)
  {
LABEL_10:
    if (v5)
      return;
    v9 = 0;
    goto LABEL_12;
  }
  if (!v5)
  {

    return;
  }
  v6 = v5;
  v7 = v3;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  if ((v8 & 1) != 0)
  {
    v9 = *(id *)(v1 + v4);
    if (v9)
      v9 = objc_msgSend(v9, "pipState");
LABEL_12:
    v10 = sub_100194FF8((uint64_t)v9, (uint64_t)&off_1002880F0);
    dispatch thunk of ScreenSharingSpectatorViewController.isPipped.setter(v10 & 1);
  }
}

void sub_100188308()
{
  dispatch thunk of ScreenSharingSpectatorViewController.pipSourceProvider()();
  sub_100109438();
}

void sub_10018835C()
{
  dispatch thunk of ScreenSharingSpectatorViewController.parentViewControllerForRestoringPiP()();
  sub_100109438();
}

uint64_t sub_1001883B0()
{
  return dispatch thunk of ScreenSharingSpectatorViewController.handlePictureInPictureRestored()();
}

void sub_100188424()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.ScreenSharingSpectatorRootViewController", 54, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_100188474()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenSharingSpectatorRootViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ScreenSharingSpectatorRootViewController()
{
  return objc_opt_self(ICSScreenSharingSpectatorRootViewController);
}

uint64_t sub_10018851C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100188540(uint64_t a1)
{
  uint64_t v1;

  sub_100187B04(a1, v1);
}

unint64_t sub_100188548()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB450;
  if (!qword_1002DB450)
  {
    v1 = sub_10010AD84(&qword_1002DB448);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB450);
  }
  return result;
}

id sub_1001885B4()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(TUFeatureFlags), "civicBlurAvatarsEnabled");
  if ((_DWORD)result)
    return (id)(sub_1001885E8() & 1);
  return result;
}

uint64_t sub_1001885E8()
{
  void *v0;
  NSString v1;
  unsigned __int8 v2;

  v0 = (void *)objc_opt_self(USSensitivityAnalyzer);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "isNudityDetectionEnabledForService:", v1);

  if ((v2 & 1) != 0)
    return 1;
  else
    return (uint64_t)objc_msgSend(v0, "isCommunicationSafetyEnabled");
}

id sub_10018869C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(TUFeatureFlags), "civicBlurPosterEnabled");
  if ((_DWORD)result)
    return objc_msgSend((id)objc_opt_self(USSensitivityAnalyzer), "isCommunicationSafetyEnabled");
  return result;
}

uint64_t type metadata accessor for SensitivityFeatureFlags()
{
  return objc_opt_self(_TtC13InCallService23SensitivityFeatureFlags);
}

_QWORD *sub_100188720(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t *i;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v25 = _swiftEmptyArrayStorage;
    sub_100187180(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    for (i = (uint64_t *)(a3 + 32); ; ++i)
    {
      v20 = *i;
      swift_retain();
      a1(&v21, &v20);
      if (v4)
        break;
      v4 = 0;
      swift_release();
      v10 = v21;
      v11 = v22;
      v12 = v23;
      v13 = v24;
      v25 = v6;
      v15 = v6[2];
      v14 = v6[3];
      if (v15 >= v14 >> 1)
      {
        v18 = v23;
        v19 = v22;
        sub_100187180((char *)(v14 > 1), v15 + 1, 1);
        v12 = v18;
        v11 = v19;
        v6 = v25;
      }
      v6[2] = v15 + 1;
      v16 = &v6[6 * v15];
      v16[4] = v10;
      *(_OWORD *)(v16 + 5) = v11;
      *(_OWORD *)(v16 + 7) = v12;
      v16[9] = v13;
      if (!--v5)
        return v6;
    }
    swift_release();
    swift_release();
  }
  return v6;
}

uint64_t sub_10018886C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for ClarityUIContact(0);
  v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)), v5);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  return sub_100108600(a2, v7, 1, v6);
}

double sub_1001888E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  double result;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[7];

  sub_1001085C0(&qword_1002D9588);
  sub_100120AA0();
  __chkstk_darwin(v11, v12);
  sub_10010BC88();
  v15 = v14 - v13;
  sub_1001929A0();
  v16 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v17 = objc_msgSend(v16, "userInterfaceIdiom");

  sub_1001085C0(&qword_1002DB488);
  sub_1001929A0();
  v18 = type metadata accessor for Font.Design(0);
  sub_100108600(v15, 1, 1, v18);
  v19 = static Font.system(size:weight:design:)(0, 1, v15, 100.0);
  sub_10011ABE4(v15, &qword_1002D9588);
  v20 = static ClarityUIMetrics.standardSpacing.getter();
  type metadata accessor for ClarityUIPreferences(0);
  v21 = static ClarityUIPreferences.shared.getter();
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_BYTE *)(a7 + 32) = a5;
  *(_DWORD *)(a7 + 33) = v28;
  *(_DWORD *)(a7 + 36) = *(_DWORD *)((char *)&v28 + 3);
  *(double *)(a7 + 40) = a8;
  *(_QWORD *)(a7 + 48) = a6;
  *(_BYTE *)(a7 + 56) = v28;
  *(_DWORD *)(a7 + 57) = 0;
  *(_DWORD *)(a7 + 60) = 0;
  *(_QWORD *)(a7 + 64) = v29;
  *(_BYTE *)(a7 + 72) = v17 == (id)1;
  *(_DWORD *)(a7 + 76) = *(_DWORD *)&v30[3];
  *(_DWORD *)(a7 + 73) = *(_DWORD *)v30;
  *(_QWORD *)(a7 + 80) = v28;
  *(_QWORD *)(a7 + 88) = v29;
  *(_QWORD *)(a7 + 96) = v19;
  *(int64x2_t *)(a7 + 104) = vdupq_n_s64(0x4069000000000000uLL);
  result = 0.5;
  *(_OWORD *)(a7 + 120) = xmmword_100244370;
  *(_QWORD *)(a7 + 136) = 0x3FE999999999999ALL;
  *(_QWORD *)(a7 + 144) = 3000000000;
  *(double *)(a7 + 152) = v20;
  *(_QWORD *)(a7 + 160) = v21;
  return result;
}

void sub_100188AE8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t KeyPath;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  __int128 v95;
  unint64_t v96;
  uint64_t v97;

  v3 = v1;
  v4 = type metadata accessor for ColorScheme(0);
  v91 = *(_QWORD *)(v4 - 8);
  v92 = v4;
  __chkstk_darwin(v4, v5);
  sub_10011ADE4();
  v90 = v6;
  sub_1001085C0(&qword_1002DB490);
  sub_100120AA0();
  __chkstk_darwin(v7, v8);
  sub_10010BC88();
  v11 = (_QWORD *)(v10 - v9);
  v12 = sub_1001085C0(&qword_1002DB498);
  sub_100120AA0();
  __chkstk_darwin(v13, v14);
  sub_10010BC88();
  v17 = v16 - v15;
  v79 = sub_1001085C0(&qword_1002DB4A0);
  v84 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79, v18);
  sub_100192928();
  v83 = sub_1001085C0(&qword_1002DB4A8);
  v80 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83, v19);
  sub_10011ADE4();
  v76 = v20;
  v78 = sub_1001085C0(&qword_1002DB4B0);
  sub_100120AA0();
  __chkstk_darwin(v21, v22);
  sub_10010BC88();
  v25 = v24 - v23;
  v81 = sub_1001085C0(&qword_1002DB4B8);
  sub_100120AA0();
  __chkstk_darwin(v26, v27);
  sub_10011ADE4();
  v77 = v28;
  v85 = sub_1001085C0(&qword_1002DB4C0);
  sub_100120AA0();
  __chkstk_darwin(v29, v30);
  sub_10011ADE4();
  v82 = v31;
  v87 = sub_1001085C0(&qword_1002DB4C8);
  sub_100120AA0();
  __chkstk_darwin(v32, v33);
  sub_10011ADE4();
  v86 = v34;
  v89 = sub_1001085C0(&qword_1002DB4D0);
  sub_100120AA0();
  __chkstk_darwin(v35, v36);
  sub_10011ADE4();
  v88 = v37;
  *v11 = static Alignment.center.getter(v38);
  v11[1] = v39;
  v40 = sub_1001085C0(&qword_1002DB4D8);
  sub_100189118(v3, (uint64_t)v11 + *(int *)(v40 + 44));
  v41 = sub_100192958((uint64_t)&unk_10028CA28);
  sub_100192940(v41);
  v42 = sub_10019297C();
  v43 = static Alignment.center.getter(v42);
  v45 = v44;
  sub_1001569D0((uint64_t)v11, v17, &qword_1002DB490);
  v46 = (_QWORD *)(v17 + *(int *)(v12 + 36));
  *v46 = sub_10018F134;
  v46[1] = v41;
  v46[2] = v43;
  v46[3] = v45;
  sub_10011ABE4((uint64_t)v11, &qword_1002DB490);
  sub_10019AA44();
  LODWORD(v95) = v47;
  v48 = sub_100192958((uint64_t)&unk_10028CA50);
  sub_100192940(v48);
  sub_10019297C();
  type metadata accessor for TUCallStatus(0);
  v50 = v49;
  v51 = sub_10018F148();
  sub_100192488((uint64_t)&qword_1002D7698);
  v53 = v52;
  View.onChange<A>(of:initial:_:)(&v95, 0, sub_10018F140, v48, v12, v50, v51, v52);
  swift_release();
  sub_10011ABE4(v17, &qword_1002DB498);
  v95 = *(_OWORD *)(v3 + 56);
  v54 = sub_1001085C0(&qword_1002DB1D0);
  sub_100192994(v54);
  v55 = sub_100192958((uint64_t)&unk_10028CA78);
  sub_100192940(v55);
  sub_10019297C();
  *(_QWORD *)&v95 = v12;
  *((_QWORD *)&v95 + 1) = v50;
  v96 = v51;
  v97 = v53;
  v56 = sub_100192984((uint64_t)&v95, (uint64_t)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>);
  View.onChange<A>(of:initial:_:)(&v94, 0, sub_10018F1E8, v55, v79, &type metadata for Bool, v56, &protocol witness table for Bool);
  v57 = swift_release();
  v58 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v84 + 8))(v2, v79, v57);
  LOBYTE(v53) = static Edge.Set.bottom.getter(v58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16))(v25, v76, v83);
  *(_BYTE *)(v25 + *(int *)(v78 + 36)) = v53;
  v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v80 + 8))(v76, v83);
  v60 = static Alignment.center.getter(v59);
  v62 = v61;
  sub_10018B384((uint64_t)&v95);
  v63 = v95;
  LOBYTE(v51) = BYTE8(v95);
  LOBYTE(v55) = BYTE9(v95);
  sub_1001569D0(v25, v77, &qword_1002DB4B0);
  v64 = v77 + *(int *)(v81 + 36);
  *(_QWORD *)v64 = v63;
  *(_BYTE *)(v64 + 8) = v51;
  *(_BYTE *)(v64 + 9) = v55;
  *(_QWORD *)(v64 + 16) = v60;
  *(_QWORD *)(v64 + 24) = v62;
  sub_10011ABE4(v25, &qword_1002DB4B0);
  KeyPath = swift_getKeyPath(&unk_100244408);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v91 + 104))(v90, enum case for ColorScheme.dark(_:), v92);
  v66 = (uint64_t *)(v82 + *(int *)(v85 + 36));
  v67 = sub_1001085C0(&qword_1002DB500);
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))((char *)v66 + *(int *)(v67 + 28), v90, v92);
  *v66 = KeyPath;
  sub_1001569D0(v77, v82, &qword_1002DB4B8);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v92);
  sub_10011ABE4(v77, &qword_1002DB4B8);
  v68 = static Animation.default.getter();
  sub_10019AA44();
  LODWORD(v66) = v69;
  sub_1001569D0(v82, v86, &qword_1002DB4C0);
  v70 = v86 + *(int *)(v87 + 36);
  *(_QWORD *)v70 = v68;
  *(_DWORD *)(v70 + 8) = (_DWORD)v66;
  sub_10011ABE4(v82, &qword_1002DB4C0);
  v71 = static Animation.default.getter();
  v95 = *(_OWORD *)(v3 + 80);
  v72 = sub_1001085C0(&qword_1002DB508);
  sub_100192994(v72);
  v73 = v94;
  sub_1001569D0(v86, v88, &qword_1002DB4C8);
  v74 = (uint64_t *)(v88 + *(int *)(v89 + 36));
  *v74 = v71;
  v74[1] = v73;
  sub_10011ABE4(v86, &qword_1002DB4C8);
  sub_1001569D0(v88, a1, &qword_1002DB4D0);
  v75 = (_QWORD *)(a1 + *(int *)(sub_1001085C0(&qword_1002DB510) + 36));
  *v75 = 0;
  v75[1] = 0;
  v75[2] = sub_10018B518;
  v75[3] = 0;
  sub_10011ABE4(v88, &qword_1002DB4D0);
  sub_10010BC44();
}

void sub_100189118(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_1001085C0(&qword_1002D9678);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001085C0(&qword_1002D9680);
  v10 = __chkstk_darwin(v8, v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v10, v13);
  v16 = (char *)&v21 - v15;
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v14);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v17 = sub_1001085C0(&qword_1002DB560);
  sub_1001892E0(a1, (uint64_t)&v7[*(int *)(v17 + 44)]);
  static Alignment.center.getter(v18);
  sub_10014D0E8(0, (uint64_t)v12);
  sub_10011ABE4((uint64_t)v7, &qword_1002D9678);
  sub_100156A28((uint64_t)v12, (uint64_t)v16, &qword_1002D9680);
  sub_10017FD78();
  v20 = v19;
  sub_1001569D0((uint64_t)v16, (uint64_t)v12, &qword_1002D9680);
  sub_1001569D0((uint64_t)v12, a2, &qword_1002D9680);
  *(_QWORD *)(a2 + *(int *)(sub_1001085C0(&qword_1002DB568) + 48)) = v20;
  swift_retain();
  sub_10011ABE4((uint64_t)v16, &qword_1002D9680);
  swift_release();
  sub_10011ABE4((uint64_t)v12, &qword_1002D9680);
}

void sub_1001892E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  char v92;

  v89 = a2;
  v3 = sub_1001085C0(&qword_1002DB570);
  v5 = __chkstk_darwin(v3, v4);
  v90 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  v88 = (uint64_t *)((char *)&v75 - v8);
  v9 = type metadata accessor for MoveTransition(0);
  v82 = *(_QWORD *)(v9 - 8);
  v83 = v9;
  v11 = __chkstk_darwin(v9, v10);
  v80 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  v78 = (char *)&v75 - v14;
  v15 = (int *)sub_1001085C0(&qword_1002DB578);
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1001085C0(&qword_1002DB580);
  __chkstk_darwin(v79, v19);
  v77 = (uint64_t)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1001085C0(&qword_1002DB588);
  __chkstk_darwin(v81, v21);
  v76 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1001085C0(&qword_1002DB590);
  v24 = __chkstk_darwin(v85, v23);
  v87 = (uint64_t)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v24, v26);
  v84 = (uint64_t)&v75 - v28;
  __chkstk_darwin(v27, v29);
  v86 = (uint64_t)&v75 - v30;
  v31 = sub_1001897E8();
  v33 = v32;
  v35 = v34;
  v75 = v36;
  sub_1001899EC(&v18[v15[9]]);
  v37 = sub_100189F70();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v44 = sub_10018A198();
  *(_QWORD *)v18 = v31;
  *((_QWORD *)v18 + 1) = v33;
  v18[16] = v35 & 1;
  v45 = (uint64_t)v76;
  *((_QWORD *)v18 + 3) = v75;
  v46 = &v18[v15[10]];
  *(_QWORD *)v46 = v37;
  *((_QWORD *)v46 + 1) = v39;
  v46[16] = v41 & 1;
  *((_QWORD *)v46 + 3) = v43;
  v47 = a1;
  v18[v15[11]] = v44;
  v48 = v15[12];
  *(_QWORD *)&v18[v48] = static Font.body.getter();
  v49 = v78;
  MoveTransition.init(edge:)(0);
  v51 = v82;
  v50 = v83;
  v52 = v80;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v80, v49, v83);
  sub_100192488((uint64_t)&unk_1002DB598);
  v54 = v53;
  v55 = v52;
  v56 = v50;
  v57 = AnyTransition.init<A>(_:)(v55, v50, v54);
  v58 = v77;
  sub_1001569D0((uint64_t)v18, v77, &qword_1002DB578);
  *(_QWORD *)(v58 + *(int *)(v79 + 36)) = v57;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v56);
  sub_10011ABE4((uint64_t)v18, &qword_1002DB578);
  v60 = static Color.black.getter(v59);
  LOBYTE(v56) = static Edge.Set.all.getter(v60);
  sub_1001569D0(v58, v45, &qword_1002DB580);
  v61 = v45 + *(int *)(v81 + 36);
  *(_QWORD *)v61 = v60;
  *(_BYTE *)(v61 + 8) = v56;
  sub_10011ABE4(v58, &qword_1002DB580);
  sub_10017FD78();
  v63 = v62;
  swift_release();
  if (!v63
    || (v91 = *(_OWORD *)(v47 + 56),
        v64 = sub_1001085C0(&qword_1002DB1D0),
        State.wrappedValue.getter(v64),
        v65 = 0.0,
        v92 == 1))
  {
    v65 = 1.0;
  }
  v66 = v84;
  sub_1001569D0(v45, v84, &qword_1002DB588);
  *(double *)(v66 + *(int *)(v85 + 36)) = v65;
  sub_10011ABE4(v45, &qword_1002DB588);
  v67 = v86;
  sub_100156A28(v66, v86, &qword_1002DB590);
  v68 = static HorizontalAlignment.center.getter();
  v69 = (uint64_t)v88;
  *v88 = v68;
  *(_QWORD *)(v69 + 8) = 0;
  *(_BYTE *)(v69 + 16) = 0;
  v70 = sub_1001085C0(&qword_1002DB5A0);
  sub_10018A21C((char *)v47, v69 + *(int *)(v70 + 44));
  v71 = v87;
  sub_1001569D0(v67, v87, &qword_1002DB590);
  v72 = v90;
  sub_1001569D0(v69, v90, &qword_1002DB570);
  v73 = v89;
  sub_1001569D0(v71, v89, &qword_1002DB590);
  v74 = sub_1001085C0(&qword_1002DB5A8);
  sub_1001569D0(v72, v73 + *(int *)(v74 + 48), &qword_1002DB570);
  sub_10011ABE4(v69, &qword_1002DB570);
  sub_10011ABE4(v67, &qword_1002DB590);
  sub_10011ABE4(v72, &qword_1002DB570);
  sub_10011ABE4(v71, &qword_1002DB590);
}

uint64_t sub_1001897E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE v24[16];
  __int128 v25;
  char v26;

  v1 = sub_1001085C0(&qword_1002DB518);
  __chkstk_darwin(v1, v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for ClarityUIContact(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10019AA44();
  if (v10 == 3)
  {
    v11 = 0x80000001001F63A0;
    v12 = 0xD000000000000018;
LABEL_5:
    v14 = LocalizedStringKey.init(stringLiteral:)(v12, v11);
    return Text.init(_:tableName:bundle:comment:)(v14);
  }
  v25 = *(_OWORD *)(v0 + 56);
  v13 = sub_1001085C0(&qword_1002DB1D0);
  State.wrappedValue.getter(v13);
  if (v26 == 1)
  {
    v12 = 0xD000000000000019;
    v11 = 0x80000001001F6380;
    goto LABEL_5;
  }
  sub_10019AA8C();
  v17 = v16;
  sub_10018886C(v16, (uint64_t)v4);
  swift_bridgeObjectRelease(v17);
  if (sub_100109FF4((uint64_t)v4, 1, v5) == 1)
  {
    sub_10011ABE4((uint64_t)v4, &qword_1002DB518);
    v18 = sub_10019AAF8();
    v20 = v19;
  }
  else
  {
    v21 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v9, v4, v5);
    v18 = ClarityUIContact.displayName.getter(v21);
    v20 = v22;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  }
  *(_QWORD *)&v25 = v18;
  *((_QWORD *)&v25 + 1) = v20;
  v23 = sub_10010C378();
  return Text.init<A>(_:)(&v25, &type metadata for String, v23);
}

void sub_1001899EC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  __int128 v57;
  char v58;

  v56 = a1;
  v2 = type metadata accessor for ClarityUIContactAvatar(0);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  __chkstk_darwin(v2, v3);
  v51 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1001085C0(&qword_1002DB518);
  __chkstk_darwin(v5, v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ClarityUIContact(0);
  v52 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  v50 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1001085C0(&qword_1002DB638);
  __chkstk_darwin(v55, v12);
  v14 = (uint64_t *)((char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_1001085C0(&qword_1002DB640);
  __chkstk_darwin(v15, v16);
  v18 = (uint64_t *)((char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_1001085C0(&qword_1002DB648);
  __chkstk_darwin(v19, v20);
  v22 = (uint64_t *)((char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_1001085C0(&qword_1002DB650);
  __chkstk_darwin(v23, v24);
  v26 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = *(_OWORD *)(v1 + 56);
  v27 = sub_1001085C0(&qword_1002DB1D0);
  State.wrappedValue.getter(v27);
  if (v58 == 1)
  {
    v28 = Image.init(systemName:)(0xD000000000000016, 0x80000001001F6360);
    v29 = enum case for Image.TemplateRenderingMode.original(_:);
    v30 = type metadata accessor for Image.TemplateRenderingMode(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v26, v29, v30);
    sub_100108600((uint64_t)v26, 0, 1, v30);
    v31 = Image.renderingMode(_:)(v26, v28);
    swift_release(v28);
    sub_10011ABE4((uint64_t)v26, &qword_1002DB650);
    v32 = static Color.red.getter();
    KeyPath = swift_getKeyPath(&unk_100244438);
    *v18 = v31;
    v18[1] = KeyPath;
    v18[2] = v32;
    swift_storeEnumTagMultiPayload(v18, v15, 0);
    swift_retain();
    swift_retain();
    swift_retain();
    v34 = sub_1001085C0(&qword_1002DB1E8);
    v35 = sub_100184F70();
    sub_100192488((uint64_t)&unk_1002DB660);
    _ConditionalContent<>.init(storage:)(v22, v18, v34, v54, v35, v36);
    sub_1001569D0((uint64_t)v22, (uint64_t)v14, &qword_1002DB648);
    swift_storeEnumTagMultiPayload(v14, v55, 0);
    v37 = sub_10018F588();
    _ConditionalContent<>.init(storage:)(v56, v14, v19, &type metadata for Image, v37, &protocol witness table for Image);
    sub_10011ABE4((uint64_t)v22, &qword_1002DB648);
    swift_release(v32);
    swift_release(KeyPath);
    swift_release(v31);
  }
  else
  {
    v49 = v19;
    v38 = v54;
    sub_10019AA8C();
    v40 = v39;
    sub_10018886C(v39, (uint64_t)v8);
    swift_bridgeObjectRelease(v40);
    if (sub_100109FF4((uint64_t)v8, 1, v9) == 1)
    {
      sub_10011ABE4((uint64_t)v8, &qword_1002DB518);
      *v14 = Image.init(systemName:)(0xD000000000000012, 0x80000001001F6340);
      swift_storeEnumTagMultiPayload(v14, v55, 1);
      v41 = sub_10018F588();
      _ConditionalContent<>.init(storage:)(v56, v14, v49, &type metadata for Image, v41, &protocol witness table for Image);
    }
    else
    {
      v42 = v50;
      v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v52 + 32))(v50, v8, v9);
      v44 = v51;
      ClarityUIContact.avatar.getter(v43);
      (*(void (**)(uint64_t *, char *, uint64_t))(v53 + 16))(v18, v44, v38);
      swift_storeEnumTagMultiPayload(v18, v15, 1);
      v45 = sub_1001085C0(&qword_1002DB1E8);
      v46 = sub_100184F70();
      sub_100192488((uint64_t)&unk_1002DB660);
      _ConditionalContent<>.init(storage:)(v22, v18, v45, v38, v46, v47);
      sub_1001569D0((uint64_t)v22, (uint64_t)v14, &qword_1002DB648);
      swift_storeEnumTagMultiPayload(v14, v55, 0);
      v48 = sub_10018F588();
      _ConditionalContent<>.init(storage:)(v56, v14, v49, &type metadata for Image, v48, &protocol witness table for Image);
      sub_10011ABE4((uint64_t)v22, &qword_1002DB648);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v38);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v42, v9);
    }
  }
}

uint64_t sub_100189F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  _BYTE v25[16];
  __int128 v26;
  char v27;

  v1 = sub_1001085C0(&qword_1002DB518);
  __chkstk_darwin(v1, v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for ClarityUIContact(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = *(_OWORD *)(v0 + 56);
  v10 = sub_1001085C0(&qword_1002DB1D0);
  State.wrappedValue.getter(v10);
  if (v27 == 1)
  {
    v11 = 0xD000000000000026;
    v12 = "ASSISTIVE_ACCESS_END_CALL_CONFIRMATION";
LABEL_3:
    v13 = (unint64_t)(v12 - 32) | 0x8000000000000000;
LABEL_14:
    v24 = LocalizedStringKey.init(stringLiteral:)(v11, v13);
    return Text.init(_:tableName:bundle:comment:)(v24);
  }
  sub_10019AA44();
  if (v14 == 4)
  {
    v13 = 0x80000001001F62F0;
    v11 = 0xD000000000000018;
    goto LABEL_14;
  }
  if (v14 != 3)
  {
    if ((sub_10018B5E4() & 1) == 0)
    {
      v11 = 0;
      v13 = 0xE000000000000000;
      goto LABEL_14;
    }
    v11 = 0xD000000000000019;
    v12 = "ASSISTIVE_ACCESS_ANSWERED";
    goto LABEL_3;
  }
  sub_10019AA8C();
  v16 = v15;
  sub_10018886C(v15, (uint64_t)v4);
  swift_bridgeObjectRelease(v16);
  if (sub_100109FF4((uint64_t)v4, 1, v5) == 1)
  {
    sub_10011ABE4((uint64_t)v4, &qword_1002DB518);
    v17 = sub_10019AAF8();
    v19 = v18;
  }
  else
  {
    v20 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v9, v4, v5);
    v17 = ClarityUIContact.displayName.getter(v20);
    v19 = v21;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  }
  *(_QWORD *)&v26 = v17;
  *((_QWORD *)&v26 + 1) = v19;
  v22 = sub_10010C378();
  return Text.init<A>(_:)(&v26, &type metadata for String, v22);
}

BOOL sub_10018A198()
{
  uint64_t v0;
  int v1;
  char v4;

  v0 = sub_1001085C0(&qword_1002DB1D0);
  State.wrappedValue.getter(v0);
  if ((v4 & 1) != 0)
    return 1;
  sub_10019AA44();
  return (v1 - 3) < 2 || v1 == 1 && sub_10018B58C();
}

void sub_10018A21C(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  id v19;
  unsigned int v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  __int128 v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  char v67;
  __int128 v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;

  v62 = a2;
  v60 = sub_1001085C0(&qword_1002DB5B0);
  __chkstk_darwin(v60, v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1001085C0(&qword_1002DB5B8);
  v7 = __chkstk_darwin(v59, v6);
  v63 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7, v9);
  v12 = (char *)&v52 - v11;
  __chkstk_darwin(v10, v13);
  v64 = (uint64_t)&v52 - v14;
  v16 = *(_QWORD *)a1;
  v15 = *((_QWORD *)a1 + 1);
  swift_retain();
  v58 = v15;
  swift_retain();
  sub_10019AA44();
  LODWORD(v57) = v17;
  v18 = a1[72];
  v73 = *(_OWORD *)(a1 + 56);
  v68 = *(_OWORD *)(a1 + 56);
  v61 = sub_1001085C0(&qword_1002DB1D0);
  State.wrappedValue.getter(v61);
  v56 = v66;
  LODWORD(v55) = sub_10018A198();
  LODWORD(v54) = (ClarityUIPreferences.inCallKeypadEnabled.getter() & 1) != 0 && sub_10019AB58();
  if ((ClarityUIPreferences.speakerOptionEnabled.getter() & 1) != 0)
  {
    v19 = sub_10019A684();
    v20 = objc_msgSend(v19, "isVideo");

    v53 = v20 ^ 1;
  }
  else
  {
    v53 = 0;
  }
  if ((v18 & 1) != 0)
    v21 = 0.25;
  else
    v21 = 0.0;
  v22 = *((_QWORD *)a1 + 5);
  v23 = *((_QWORD *)a1 + 19);
  v66 = *((_OWORD *)a1 + 1);
  v67 = a1[32];
  v24 = sub_1001085C0(&qword_1002DB5C0);
  Binding.projectedValue.getter(&v68, v24);
  v25 = v68;
  v52 = v69;
  v26 = (void *)*((_QWORD *)a1 + 6);
  v27 = swift_allocObject(&unk_10028CAF0, 184, 7);
  memcpy((void *)(v27 + 16), a1, 0xA8uLL);
  v28 = v26;
  v29 = sub_10016EA78((uint64_t *)a1);
  v30 = static Alignment.center.getter(v29);
  v32 = v31;
  sub_10018A828((uint64_t)v5);
  v33 = (uint64_t *)&v5[*(int *)(v60 + 36)];
  *v33 = v30;
  v33[1] = v32;
  sub_1001569D0((uint64_t)v5, (uint64_t)&v12[*(int *)(v59 + 36)], &qword_1002DB5B0);
  v34 = v58;
  *(_QWORD *)v12 = v16;
  *((_QWORD *)v12 + 1) = v34;
  *((_DWORD *)v12 + 4) = v57;
  *((_QWORD *)v12 + 3) = v22;
  *((double *)v12 + 4) = v21;
  *((_QWORD *)v12 + 5) = v23;
  v12[48] = v56;
  v12[49] = v55 & 1;
  v12[50] = v54 & 1;
  v12[51] = v53;
  *(_OWORD *)(v12 + 56) = v25;
  v12[72] = v52;
  *((_QWORD *)v12 + 10) = v28;
  *((_QWORD *)v12 + 11) = sub_10018F414;
  *((_QWORD *)v12 + 12) = v27;
  sub_10011ABE4((uint64_t)v5, &qword_1002DB5B0);
  v35 = v64;
  sub_100156A28((uint64_t)v12, v64, &qword_1002DB5B8);
  v60 = static Color.clear.getter(v36);
  v37 = static Alignment.center.getter(v60);
  v39 = _FrameLayout.init(width:height:alignment:)(&v68, 0, 1, 0, 0, v37, v38);
  v59 = v68;
  LODWORD(v58) = BYTE8(v68);
  v57 = v69;
  v56 = v70;
  v55 = v71;
  v54 = v72;
  v40 = static Anchor.Source<A>.bounds.getter(v39);
  v65 = v73;
  State.projectedValue.getter(&v66);
  v41 = v66;
  v42 = v67;
  v43 = swift_allocObject(&unk_10028CB18, 184, 7);
  memcpy((void *)(v43 + 16), a1, 0xA8uLL);
  v44 = v35;
  v45 = v63;
  sub_1001569D0(v44, v63, &qword_1002DB5B8);
  v46 = v62;
  sub_1001569D0(v45, v62, &qword_1002DB5B8);
  v47 = sub_1001085C0(&qword_1002DB5C8);
  v48 = v46 + *(int *)(v47 + 48);
  v49 = v59;
  *(_QWORD *)v48 = v60;
  *(_QWORD *)(v48 + 8) = v49;
  *(_BYTE *)(v48 + 16) = v58;
  *(_QWORD *)(v48 + 24) = v57;
  *(_BYTE *)(v48 + 32) = v56;
  v50 = v54;
  *(_QWORD *)(v48 + 40) = v55;
  *(_QWORD *)(v48 + 48) = v50;
  *(_QWORD *)(v48 + 56) = v40;
  *(_QWORD *)(v48 + 64) = sub_10018AC60;
  *(_QWORD *)(v48 + 72) = 0;
  v51 = v46 + *(int *)(v47 + 64);
  *(_OWORD *)v51 = v41;
  *(_BYTE *)(v51 + 16) = v42;
  *(_QWORD *)(v51 + 24) = v22;
  *(double *)(v51 + 32) = v21;
  *(_QWORD *)(v51 + 40) = v16;
  *(_QWORD *)(v51 + 48) = sub_10018F478;
  *(_QWORD *)(v51 + 56) = v43;
  swift_retain();
  sub_10016EA78((uint64_t *)a1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10011ABE4(v64, &qword_1002DB5B8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10011ABE4(v45, &qword_1002DB5B8);
}

void sub_10018A7BC()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v1 = sub_10019A684();
  objc_msgSend(v0, "disconnectCall:", v1);

}

void sub_10018A828(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v11;

  v2 = sub_1001085C0(&qword_1002DB5D8);
  __chkstk_darwin(v2, v3);
  v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1001085C0(&qword_1002DB5E0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018A938(v5);
  if (sub_10018A198())
    v10 = 1.0;
  else
    v10 = 0.0;
  sub_1001569D0((uint64_t)v5, (uint64_t)v9, &qword_1002DB5D8);
  *(double *)&v9[*(int *)(v6 + 36)] = v10;
  sub_10011ABE4((uint64_t)v5, &qword_1002DB5D8);
  sub_100156A28((uint64_t)v9, a1, &qword_1002DB5E0);
}

void sub_10018A938(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _OWORD v43[3];

  v2 = v1;
  v42 = a1;
  v40 = sub_1001085C0(&qword_1002DB5E8);
  __chkstk_darwin(v40, v3);
  v41 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Material(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1001085C0(&qword_1002DB5F0);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1001085C0(&qword_1002DB5F8);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1001085C0(&qword_1002DB600);
  __chkstk_darwin(v39, v18);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019AA44();
  if ((sub_10018B5E4() & 1) != 0)
  {
    static Material.thin.getter();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v9, v5);
    *(_WORD *)&v13[*(int *)(v10 + 56)] = 256;
    v21 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v22 = *(_QWORD *)(v1 + 104);
    v23 = *(_QWORD *)(v2 + 112);
    v24 = static Alignment.center.getter(v21);
    _FrameLayout.init(width:height:alignment:)(v43, v22, 0, v23, 0, v24, v25);
    sub_1001569D0((uint64_t)v13, (uint64_t)v17, &qword_1002DB5F0);
    v26 = &v17[*(int *)(v14 + 36)];
    v27 = v43[1];
    *(_OWORD *)v26 = v43[0];
    *((_OWORD *)v26 + 1) = v27;
    *((_OWORD *)v26 + 2) = v43[2];
    sub_10011ABE4((uint64_t)v13, &qword_1002DB5F0);
    v29 = static Alignment.center.getter(v28);
    v31 = v30;
    v32 = v39;
    v33 = (uint64_t)&v20[*(int *)(v39 + 36)];
    sub_10018B690(0xD000000000000017, 0x80000001001F62B0, v2, v33);
    v34 = (uint64_t *)(v33 + *(int *)(sub_1001085C0(&qword_1002DB628) + 36));
    *v34 = v29;
    v34[1] = v31;
    sub_100156A28((uint64_t)v17, (uint64_t)v20, &qword_1002DB5F8);
    v35 = v41;
    sub_1001569D0((uint64_t)v20, v41, &qword_1002DB600);
    swift_storeEnumTagMultiPayload(v35, v40, 0);
    v36 = sub_10018F480();
    _ConditionalContent<>.init(storage:)(v42, v35, v32, &type metadata for EmptyView, v36, &protocol witness table for EmptyView);
    sub_10011ABE4((uint64_t)v20, &qword_1002DB600);
  }
  else
  {
    v37 = v41;
    swift_storeEnumTagMultiPayload(v41, v40, 1);
    v38 = sub_10018F480();
    _ConditionalContent<>.init(storage:)(v42, v37, v39, &type metadata for EmptyView, v38, &protocol witness table for EmptyView);
  }
}

void sub_10018AC64(uint64_t a1)
{
  int v2;
  id v3;
  uint64_t v4;
  id v5;
  char v6;
  __int128 v7;

  sub_10019AA44();
  if (v2 == 3)
  {
    v3 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
    v5 = sub_10019A684();
    objc_msgSend(v3, "disconnectCall:", v5);

  }
  else
  {
    v7 = *(_OWORD *)(a1 + 56);
    v6 = 1;
    v4 = sub_1001085C0(&qword_1002DB1D0);
    State.wrappedValue.setter(&v6, v4);
  }
}

_QWORD *sub_10018AD1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double (**v13)@<D0>(uint64_t@<X0>, __n128 *@<X8>);
  uint64_t v14;
  uint64_t v15;
  id v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = (int *)type metadata accessor for ContactBackground(0);
  __chkstk_darwin(v6, v7);
  v9 = (uint64_t *)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1001085C0(&qword_1002DB540);
  __chkstk_darwin(v10, v11);
  v13 = (double (**)@<D0>(uint64_t@<X0>, __n128 *@<X8>))((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *a1;
  v15 = *a2;
  v16 = sub_10019A684();
  v17 = objc_msgSend(v16, "isVideo");

  if (v17)
  {
    v18 = swift_allocObject(&unk_10028CAC8, 192, 7);
    *(_QWORD *)(v18 + 16) = v14;
    memcpy((void *)(v18 + 24), a2, 0xA8uLL);
    *v13 = sub_10018F3E8;
    v13[1] = (double (*)@<D0>(uint64_t@<X0>, __n128 *@<X8>))v18;
    swift_storeEnumTagMultiPayload(v13, v10, 0);
    swift_bridgeObjectRetain(v14);
    sub_10016EA78(a2);
    v19 = sub_1001085C0(&qword_1002DB548);
    sub_1001926D4((uint64_t)&unk_1002DB550);
    v21 = v20;
    sub_100192488((uint64_t)&unk_1002DB558);
    return _ConditionalContent<>.init(storage:)(a3, v13, v19, v6, v21, v22);
  }
  else
  {
    swift_retain();
    sub_10019AA8C();
    v25 = v24;
    sub_10018886C(v24, (uint64_t)v9 + v6[5]);
    v26 = swift_bridgeObjectRelease(v25);
    *v9 = v15;
    *(_QWORD *)((char *)v9 + v6[6]) = 0x404E000000000000;
    v27 = v6[7];
    v28 = static Color.black.getter(v26);
    *(_QWORD *)((char *)v9 + v27) = v28;
    v29 = v6[8];
    static Color.black.getter(v28);
    v30 = Color.opacity(_:)(0.4);
    swift_release();
    *(_QWORD *)((char *)v9 + v29) = v30;
    sub_10018F304((uint64_t)v9, (uint64_t)v13);
    swift_storeEnumTagMultiPayload(v13, v10, 1);
    v31 = sub_1001085C0(&qword_1002DB548);
    sub_1001926D4((uint64_t)&unk_1002DB550);
    v33 = v32;
    sub_100192488((uint64_t)&unk_1002DB558);
    _ConditionalContent<>.init(storage:)(a3, v13, v31, v6, v33, v34);
    return (_QWORD *)sub_10018F348((uint64_t)v9);
  }
}

__n128 sub_10018AFB8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 result;
  __n128 v14;
  char v15[16];
  uint64_t v16;
  uint64_t v17;

  v16 = a3;
  v17 = a1;
  v5 = sub_100188720((void (*)(uint64_t *__return_ptr, uint64_t *))sub_10018F3F4, (uint64_t)v15, a2);
  v6 = v5;
  v7 = v5[2];
  if (v7)
  {
    v8 = (__n128 *)&v5[6 * v7];
    v9 = v8[-1].n128_u64[0];
    v10 = v8[-1].n128_u64[1];
    v11 = v8->n128_u64[0];
    v12 = v8->n128_u64[1];
    v14 = v8[1];
    swift_retain();
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v14 = 0u;
  }
  swift_bridgeObjectRelease(v6);
  a4->n128_u64[0] = v9;
  a4->n128_u64[1] = v10;
  a4[1].n128_u64[0] = v11;
  a4[1].n128_u64[1] = v12;
  result = v14;
  a4[2] = v14;
  return result;
}

uint64_t sub_10018B070@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CGFloat Height;
  CGFloat v10;
  uint64_t v11;
  uint64_t result;
  BOOL v13;
  double v14;
  CGRect v15;
  CGRect v16;

  v5 = *a1;
  v6 = *a2;
  type metadata accessor for CGRect(0);
  v8 = v7;
  swift_retain();
  GeometryProxy.subscript.getter(&v16, v5, v8);
  Height = CGRectGetHeight(v16);
  GeometryProxy.subscript.getter(&v15, v5, v8);
  v10 = CGRectGetHeight(v15);
  v16.origin = *(CGPoint *)(a2 + 7);
  v11 = sub_1001085C0(&qword_1002DB1D0);
  result = State.wrappedValue.getter(v11);
  v13 = LOBYTE(v15.origin.x) == 0;
  v14 = 1.0;
  *(_QWORD *)a3 = v6;
  if (!v13)
    v14 = 0.5;
  *(CGFloat *)(a3 + 8) = Height;
  *(_QWORD *)(a3 + 16) = 0;
  *(CGFloat *)(a3 + 24) = v10;
  *(_QWORD *)(a3 + 32) = 0;
  *(double *)(a3 + 40) = v14;
  return result;
}

uint64_t sub_10018B16C(int *a1, int *a2)
{
  return sub_10018B194(*a1, *a2);
}

uint64_t sub_10018B194(int a1, int a2)
{
  _OWORD *v2;
  const void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;

  v3 = v2;
  v6 = sub_1001085C0(&qword_1002D84A0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2[5];
  v18 = v2[5];
  v10 = sub_1001085C0(&qword_1002DB508);
  State.wrappedValue.getter(v10);
  if (v19)
  {
    sub_1001085C0(&qword_1002D8520);
    Task.cancel()();
    swift_release();
  }
  v11 = a1 == 3 && a2 == 1;
  if (v11 && (sub_10018B5E4() & 1) != 0)
  {
    v12 = type metadata accessor for TaskPriority(0);
    sub_100108600((uint64_t)v9, 1, 1, v12);
    type metadata accessor for MainActor(0);
    v13 = sub_10016EA78((uint64_t *)v2);
    v14 = static MainActor.shared.getter(v13);
    v15 = (_QWORD *)swift_allocObject(&unk_10028CAA0, 200, 7);
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    memcpy(v15 + 4, v3, 0xA8uLL);
    v16 = sub_10011B0B8((uint64_t)v9, (uint64_t)&unk_1002DB538, (uint64_t)v15);
    v18 = v20;
    v19 = v16;
  }
  else
  {
    v18 = v20;
    v19 = 0;
  }
  return State.wrappedValue.setter(&v19, v10);
}

void sub_10018B334()
{
  uint64_t v0;
  char v1;

  v0 = sub_1001085C0(&qword_1002DB1D0);
  State.wrappedValue.getter(v0);
  sub_10017FBD4(v1);
}

_QWORD *sub_10018B384@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *result;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;

  v2 = sub_1001085C0(&qword_1002DB518);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019AA8C();
  v7 = v6;
  sub_10018886C(v6, (uint64_t)v5);
  swift_bridgeObjectRelease(v7);
  v8 = type metadata accessor for ClarityUIContact(0);
  LODWORD(v7) = sub_100109FF4((uint64_t)v5, 1, v8);
  sub_10011ABE4((uint64_t)v5, &qword_1002DB518);
  if ((_DWORD)v7 != 1
    || (v10 = sub_10019A684(), v11 = objc_msgSend(v10, "isVideo"), v10, (v11 & 1) != 0)
    || (sub_10017FD78(), v13 = v12, v14 = swift_release(), v13))
  {
    v15 = static Color.black.getter(v9);
    v16 = static Edge.Set.all.getter(v15);
    v24 = v15;
    v25 = v16;
    v26 = 0;
  }
  else
  {
    v22 = static Color.gray.getter(v14);
    v23 = static Edge.Set.all.getter(v22);
    v24 = v22;
    v25 = v23;
    v26 = 1;
  }
  v17 = sub_1001085C0(&qword_1002DB520);
  v18 = sub_100191198((uint64_t)&unk_1002DB528);
  result = _ConditionalContent<>.init(storage:)(&v27, &v24, v17, v17, v18, v18);
  v20 = v28;
  v21 = v29;
  *(_QWORD *)a1 = v27;
  *(_BYTE *)(a1 + 8) = v20;
  *(_BYTE *)(a1 + 9) = v21;
  return result;
}

void sub_10018B518()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v1 = objc_msgSend(v0, "videoDeviceController");

  objc_msgSend(v1, "stopPreview");
}

BOOL sub_10018B58C()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_1001085C0(&qword_1002DB508);
  State.wrappedValue.getter(v0);
  if (v2)
    swift_release();
  return v2 != 0;
}

uint64_t sub_10018B5E4()
{
  id v0;
  unsigned __int8 v1;
  id v2;
  id v3;

  v0 = sub_10019A684();
  v1 = objc_msgSend(v0, "isVideo");

  if ((v1 & 1) != 0 || (ClarityUIPreferences.inCallKeypadEnabled.getter() & 1) != 0 && sub_10019AB58())
    return 0;
  if ((ClarityUIPreferences.speakerOptionEnabled.getter() & 1) == 0)
    return 1;
  v3 = sub_10019A684();
  v2 = objc_msgSend(v3, "isVideo");

  return (uint64_t)v2;
}

uint64_t sub_10018B690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  int v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v38 = a4;
  v7 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1001085C0(&qword_1002DB630);
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  __chkstk_darwin(v11, v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v15);
  swift_bridgeObjectRetain(a2);
  Image.init(systemName:)(a1, a2);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v16);
  v17 = LocalizedStringKey.init(stringInterpolation:)(v10);
  v18 = Text.init(_:tableName:bundle:comment:)(v17);
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  v25 = Text.font(_:)(*(_QWORD *)(a3 + 96), v18, v19, v24, v21);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_10014F058(v18, v20, v24);
  swift_bridgeObjectRelease(v22);
  v39 = v25;
  v40 = v27;
  v41 = v29 & 1;
  v42 = v31;
  v32 = *(double *)(a3 + 128);
  sub_10019AA44();
  v33 = v32;
  if (v34 == 3)
    v33 = *(double *)(a3 + 120);
  static Animation.linear(duration:)(*(double *)(a3 + 136));
  View.repeatingOpacity(from:to:animation:)(v32, v33);
  swift_release();
  sub_10014F058(v25, v27, v29 & 1);
  swift_bridgeObjectRelease(v31);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v38, v14, v37);
}

uint64_t sub_10018B8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4[5] = a4;
  v6 = type metadata accessor for MainActor(0);
  v4[6] = v6;
  v4[7] = static MainActor.shared.getter(v6);
  v7 = *(_QWORD *)(a4 + 144);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
  v4[8] = v8;
  *v8 = v4;
  v8[1] = sub_10018B928;
  return static Task<>.sleep(nanoseconds:)(v7);
}

uint64_t sub_10018B928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10018BA14;
  else
    v6 = sub_10018B9B0;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10018B9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 32) = 0;
  v2 = sub_1001085C0(&qword_1002DB508);
  State.wrappedValue.setter(v0 + 32, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018BA14()
{
  uint64_t v0;

  swift_release();
  return sub_100110E88(*(uint64_t (**)(void))(v0 + 8));
}

void sub_10018BA40(uint64_t a1@<X8>)
{
  const void *v1;
  _BYTE __dst[168];

  memcpy(__dst, v1, sizeof(__dst));
  sub_100188AE8(a1);
}

uint64_t sub_10018BA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t WitnessTable;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[16];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];

  v3 = v2;
  v30 = a2;
  v28 = sub_10010AD84(&qword_1002DB910);
  v5 = *(_QWORD *)(a1 + 16);
  sub_1001926D4((uint64_t)&unk_1002DB918);
  v7 = v6;
  v8 = *(_QWORD *)(a1 + 24);
  v41[0] = v28;
  v41[1] = v5;
  v41[2] = v6;
  v41[3] = v8;
  v9 = type metadata accessor for ClarityUITitleHeader(0, (uint64_t)v41);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v13 = (char *)&v27 - v12;
  v14 = sub_10010AD84(&qword_1002DAF58);
  v15 = type metadata accessor for ModifiedContent(0, v9, v14);
  v29 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15, v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v20);
  v22 = (char *)&v27 - v21;
  v36 = v5;
  v37 = v8;
  v38 = v3;
  v32 = v5;
  v33 = v8;
  v34 = v3;
  sub_100178A24((void (*)(void))sub_100191B44, (uint64_t)v35, (uint64_t (*)(void))sub_100191B50, (uint64_t)v31, v28, v5, v7, v8);
  WitnessTable = swift_getWitnessTable(&unk_100243B18, v9);
  View.zIndex(_:)(v9, WitnessTable, 1.0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  sub_1001926D4((uint64_t)&qword_1002DAF50);
  v39 = WitnessTable;
  v40 = v24;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  sub_1001795D8((uint64_t)v19, v15, (uint64_t)v22);
  v25 = *(void (**)(char *, uint64_t))(v29 + 8);
  v25(v19, v15);
  sub_1001788CC((uint64_t)v22, v15, v30);
  return ((uint64_t (*)(char *, uint64_t))v25)(v22, v15);
}

double sub_10018BCAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double result;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  char v21;
  uint64_t v22;
  double v23;

  v8 = static HorizontalAlignment.leading.getter();
  sub_10018BD4C(a1, a2, a3, v9, (uint64_t)&v17);
  v10 = v18;
  v11 = v19;
  v12 = v21;
  v13 = v22;
  result = v23;
  v15 = v17;
  v16 = v20;
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  *(_OWORD *)(a4 + 24) = v15;
  *(_BYTE *)(a4 + 40) = v10;
  *(_QWORD *)(a4 + 48) = v11;
  *(_OWORD *)(a4 + 56) = v16;
  *(_BYTE *)(a4 + 72) = v12;
  *(_QWORD *)(a4 + 80) = v13;
  *(double *)(a4 + 88) = result;
  return result;
}

uint64_t sub_10018BD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  int v23;
  double v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v7 = *(_QWORD *)a1;
  v27 = *(_QWORD *)(a1 + 8);
  v28 = *(_QWORD *)a1;
  v8 = *(_BYTE *)(a1 + 16);
  v29 = v8;
  v9 = *(_QWORD *)(a1 + 24);
  v10 = (int *)type metadata accessor for CallTitleHeader(0, a2, a3, a4);
  v11 = (uint64_t *)(a1 + v10[10]);
  v12 = *v11;
  v13 = v11[1];
  v14 = *((unsigned __int8 *)v11 + 16);
  v26 = v11[3];
  v15 = *(_QWORD *)(a1 + v10[12]);
  sub_10014F068(v7, v27, v8);
  swift_bridgeObjectRetain(v9);
  v18 = Text.font(_:)(v15, v12, v13, v14, v26);
  v19 = v16;
  v20 = v17;
  v22 = v21 & 1;
  v23 = *(unsigned __int8 *)(a1 + v10[11]);
  v24 = 0.0;
  *(_QWORD *)a5 = v28;
  *(_QWORD *)(a5 + 8) = v27;
  *(_BYTE *)(a5 + 16) = v29;
  if (v23)
    v24 = 1.0;
  *(_QWORD *)(a5 + 24) = v9;
  *(_QWORD *)(a5 + 32) = v18;
  *(_QWORD *)(a5 + 40) = v16;
  *(_BYTE *)(a5 + 48) = v22;
  *(_QWORD *)(a5 + 56) = v17;
  *(double *)(a5 + 64) = v24;
  sub_10014F068(v28, v27, v29);
  swift_bridgeObjectRetain(v9);
  sub_10014F068(v18, v19, v22);
  swift_bridgeObjectRetain(v20);
  sub_10014F058(v18, v19, v22);
  swift_bridgeObjectRelease(v20);
  sub_10014F058(v28, v27, v29);
  return swift_bridgeObjectRelease(v9);
}

uint64_t sub_10018BEB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1, a2);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CallTitleHeader(0, v9, v10, v11);
  sub_1001795D8(a1 + *(int *)(v12 + 36), a2, (uint64_t)v8);
  sub_1001788CC((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_10018BF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  char v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE v24[199];
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _BYTE __src[184];
  _BYTE v31[200];

  v2 = *(_QWORD *)(v1 + 40);
  v3 = static HorizontalAlignment.center.getter(a1);
  sub_10018C090(v1, (uint64_t)__src);
  v31[184] = 0;
  v4 = memcpy(&v31[7], __src, 0xB1uLL);
  v5 = static ClarityUIMetrics.componentHorizontalPadding.getter(v4);
  v7 = v6;
  v8 = static Edge.Set.all.getter(v5);
  v9 = EdgeInsets.init(_all:)(v7);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v31[192] = 0;
  v21 = v3;
  v22 = v2;
  v23 = 0;
  memcpy(v24, v31, 0xB8uLL);
  v24[191] = v8;
  v25 = v9;
  v26 = v11;
  v27 = v13;
  v28 = v15;
  v29 = 0;
  v20 = 0;
  v16 = sub_1001085C0(&qword_1002DB8C0);
  v17 = sub_100191518();
  v18 = sub_10019159C();
  View.buttonStyle<A>(_:)(&v20, v16, &type metadata for InCallButtonStyle, v17, v18);
  return sub_1001915D8((uint64_t)__src);
}

uint64_t sub_10018C090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)@<X0>(_QWORD *@<X8>);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)@<X0>(uint64_t@<X8>);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *(*v25)@<X0>(uint64_t@<X8>);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)@<X0>(uint64_t@<X8>);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)@<X0>(_QWORD *@<X8>);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id (*v49)@<X0>(_QWORD *@<X8>);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id (*v54)@<X0>(_QWORD *@<X8>);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[17];
  _QWORD __src[16];
  _BYTE __dst[128];
  _QWORD v64[17];
  _QWORD v65[18];

  if (*(_DWORD *)(a1 + 16) == 4)
  {
    v4 = *(_QWORD *)(a1 + 24);
    v5 = *(_QWORD *)(a1 + 32);
    v6 = swift_allocObject(&unk_10028CE38, 120, 7);
    memcpy((void *)(v6 + 16), (const void *)a1, 0x68uLL);
    sub_100191A5C((uint64_t *)a1);
    v7 = sub_100191B3C;
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v7 = 0;
    v6 = 0;
  }
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v8 = *(_QWORD *)(a1 + 24);
    v9 = *(_QWORD *)(a1 + 32);
    v10 = swift_allocObject(&unk_10028CE10, 120, 7);
    memcpy((void *)(v10 + 16), (const void *)a1, 0x68uLL);
    v64[0] = v8;
    v64[1] = v9;
    v64[2] = sub_100191AE8;
    v64[3] = v10;
    sub_100191AF0((uint64_t)v64);
    sub_100156A28((uint64_t)v64, (uint64_t)v61, &qword_1002DB8E8);
    sub_100191A5C((uint64_t *)a1);
    v11 = sub_1001085C0(&qword_1002DB8F0);
    v12 = sub_1001085C0(&qword_1002DB8F8);
    sub_1001926D4((uint64_t)&unk_1002DB900);
    v14 = v13;
    sub_1001926D4((uint64_t)&unk_1002DB908);
    _ConditionalContent<>.init(storage:)(v65, v61, v11, v12, v14, v15);
  }
  else
  {
    v39 = a2;
    if ((sub_10017FE3C() & 1) != 0)
    {
      v48 = *(_QWORD *)(a1 + 24);
      v53 = *(_QWORD *)(a1 + 32);
      v55 = swift_allocObject(&unk_10028CDE8, 120, 7);
      memcpy((void *)(v55 + 16), (const void *)a1, 0x68uLL);
      sub_100191A5C((uint64_t *)a1);
      v54 = sub_100191ADC;
    }
    else
    {
      v48 = 0;
      v53 = 0;
      v54 = 0;
      v55 = 0;
    }
    v41 = v5;
    v42 = v4;
    v40 = v7;
    if ((sub_10017FE64() & 1) != 0)
    {
      v16 = 0;
      v17 = 0;
      v18 = 0;
      v19 = 0;
      v57 = 0;
      v58 = 0;
      v20 = 0;
      v43 = 0;
      v46 = 0;
      v21 = 0;
      v56 = 0;
      v22 = 1;
    }
    else
    {
      if ((sub_10017FE50() & 1) != 0)
      {
        v24 = *(_QWORD *)(a1 + 24);
        v23 = *(_QWORD *)(a1 + 32);
        v51 = swift_allocObject(&unk_10028CDC0, 120, 7);
        memcpy((void *)(v51 + 16), (const void *)a1, 0x68uLL);
        sub_100191A5C((uint64_t *)a1);
        v49 = sub_100192924;
      }
      else
      {
        v24 = 0;
        v23 = 0;
        v49 = 0;
        v51 = 0;
      }
      if ((*(_BYTE *)(a1 + 50) & 1) != 0)
      {
        v58 = *(_QWORD *)(a1 + 32);
        v59 = *(_QWORD *)(a1 + 24);
        v26 = swift_allocObject(&unk_10028CD98, 120, 7);
        memcpy((void *)(v26 + 16), (const void *)a1, 0x68uLL);
        sub_100191A5C((uint64_t *)a1);
        v25 = sub_100191ACC;
      }
      else
      {
        v58 = 0;
        v59 = 0;
        v25 = 0;
        v26 = 0;
      }
      v47 = (uint64_t)v25;
      if ((*(_BYTE *)(a1 + 51) & 1) != 0)
      {
        v27 = *(_QWORD *)(a1 + 24);
        v57 = *(_QWORD *)(a1 + 32);
        v56 = swift_allocObject(&unk_10028CD70, 120, 7);
        memcpy((void *)(v56 + 16), (const void *)a1, 0x68uLL);
        sub_100191A5C((uint64_t *)a1);
        v28 = sub_100191A54;
      }
      else
      {
        v27 = 0;
        v56 = 0;
        v57 = 0;
        v28 = 0;
      }
      sub_100191790(v24, v23, (uint64_t)v49, v51);
      sub_100191790(v59, v58, v47, v26);
      sub_100191790(v27, v57, (uint64_t)v28, v56);
      v46 = v27;
      sub_100191780(v27, v57, (uint64_t)v28, v56);
      v19 = v59;
      v43 = v26;
      sub_100191780(v59, v58, v47, v26);
      v22 = (uint64_t)v49;
      v18 = v51;
      sub_100191780(v24, v23, (uint64_t)v49, v51);
      v21 = v28;
      v20 = v47;
      v16 = v24;
      v17 = v23;
    }
    __src[0] = v48;
    __src[1] = v53;
    __src[2] = v54;
    __src[3] = v55;
    __src[4] = v16;
    __src[5] = v17;
    v50 = v22;
    v52 = v18;
    __src[6] = v22;
    __src[7] = v18;
    v60 = v19;
    __src[8] = v19;
    __src[9] = v58;
    __src[10] = v20;
    __src[11] = v43;
    __src[12] = v46;
    __src[13] = v57;
    __src[14] = v21;
    __src[15] = v56;
    v29 = (uint64_t)v21;
    v30 = v16;
    v44 = v16;
    v45 = v17;
    v31 = v17;
    memcpy(__dst, __src, sizeof(__dst));
    sub_100191790(v48, v53, (uint64_t)v54, v55);
    sub_1001917A0(v30, v31, v50, v52, v60, v58, v20, v43, v46, v57, v29, v56, (void (*)(void))sub_100192920, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100191790, sub_100192920);
    sub_100191790(v48, v53, (uint64_t)v54, v55);
    v38 = v29;
    sub_1001917A0(v44, v45, v50, v52, v60, v58, v20, v43, v46, v57, v29, v56, (void (*)(void))sub_100192920, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100191790, sub_100192920);
    sub_1001917A0(v44, v45, v50, v52, v60, v58, v20, v43, v46, v57, v29, v56, (void (*)(void))sub_10019291C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100191780, sub_10019291C);
    sub_100191780(v48, v53, (uint64_t)v54, v55);
    memcpy(v64, __src, 0x80uLL);
    sub_10019183C((uint64_t)v64);
    sub_100156A28((uint64_t)v64, (uint64_t)v65, &qword_1002DB8E8);
    sub_100191848((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_100192920, (void (*)(void))sub_100192920, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100191790, sub_100192920);
    v32 = sub_1001085C0(&qword_1002DB8F0);
    v33 = sub_1001085C0(&qword_1002DB8F8);
    sub_1001926D4((uint64_t)&unk_1002DB900);
    v35 = v34;
    sub_1001926D4((uint64_t)&unk_1002DB908);
    _ConditionalContent<>.init(storage:)(v61, v65, v32, v33, v35, v36);
    sub_1001917A0(v44, v45, v50, v52, v60, v58, v20, v43, v46, v57, v38, v56, (void (*)(void))sub_10019291C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100191780, sub_10019291C);
    sub_100191780(v48, v53, (uint64_t)v54, v55);
    sub_100191848((uint64_t)__src, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_10019291C, (void (*)(void))sub_10019291C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100191780, sub_10019291C);
    memcpy(v65, v61, 0x81uLL);
    v5 = v41;
    v4 = v42;
    v7 = v40;
    a2 = v39;
  }
  memcpy(v64, v65, 0x81uLL);
  memcpy(v61, v65, 0x81uLL);
  memcpy((void *)(a2 + 32), v65, 0x81uLL);
  __dst[0] = 1;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 168) = 0;
  *(_BYTE *)(a2 + 176) = 1;
  sub_100191790(v4, v5, (uint64_t)v7, v6);
  sub_1001919F0((uint64_t)v61);
  sub_1001919F0((uint64_t)v64);
  return sub_100191780(v4, v5, (uint64_t)v7, v6);
}

uint64_t sub_10018C878@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_10018C884@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[11];
  v4 = a1[12];
  *a2 = *a1;
  a2[1] = v3;
  a2[2] = v4;
  swift_retain(v2);
  return swift_retain(v4);
}

id sub_10018C8B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(a1 + 80);
  *a2 = v2;
  return v2;
}

_QWORD *sub_10018C8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  char v7;
  double v8;
  _QWORD v9[2];
  char v10;

  v4 = sub_1001085C0(&qword_1002DB5C0);
  result = Binding.projectedValue.getter(v9, v4);
  v6 = v9[1];
  v7 = v10;
  v8 = 0.0;
  if ((*(_BYTE *)(a1 + 49) & 1) == 0)
    v8 = 1.0;
  *(_QWORD *)a2 = v9[0];
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7;
  *(double *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_10018C944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  double v3;
  uint64_t v4;

  v2 = *(_BYTE *)(a1 + 49);
  v3 = 0.0;
  v4 = *(_QWORD *)(a1 + 8);
  if ((v2 & 1) == 0)
    v3 = 1.0;
  *(_QWORD *)a2 = v4;
  *(double *)(a2 + 8) = v3;
  return swift_retain(v4);
}

uint64_t sub_10018C968()
{
  const void *v0;
  void *v1;
  _BYTE __dst[104];

  v1 = memcpy(__dst, v0, sizeof(__dst));
  return sub_10018BF68((uint64_t)v1);
}

uint64_t sub_10018C9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t TupleTypeMetadata3;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[16];
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;

  v29 = a5;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, a3, &type metadata for Spacer, 0, 0);
  v14 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v14);
  v16 = type metadata accessor for HStack(0, v14, WitnessTable);
  v17 = *(_QWORD *)(v16 - 8);
  v19 = __chkstk_darwin(v16, v18);
  v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  v24 = (char *)&v28 - v23;
  v31 = a3;
  v32 = a4;
  v33 = a6;
  v34 = a7;
  v35 = a1;
  v36 = a2;
  v25 = j___s7SwiftUI17VerticalAlignmentV6centerACvgZ(v14);
  HStack.init(alignment:spacing:content:)(v25, 0, 1, sub_10019229C, v30, v14, WitnessTable);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v16);
  sub_1001795D8((uint64_t)v21, v16, (uint64_t)v24);
  v26 = *(void (**)(char *, uint64_t))(v17 + 8);
  v26(v21, v16);
  sub_1001788CC((uint64_t)v24, v16, v29);
  return ((uint64_t (*)(char *, uint64_t))v26)(v24, v16);
}

uint64_t sub_10018CB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  double v16;
  void (*v17)(char *, uint64_t);
  _QWORD v19[4];
  _QWORD v20[3];
  double v21;
  char v22;
  double v23;
  char v24;
  uint64_t v25[3];

  v6 = *(_QWORD *)(a3 - 8);
  v7 = __chkstk_darwin(a1, a2);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void (*)(void))__chkstk_darwin(v7, v10);
  v13 = (char *)v19 - v12;
  v16 = v14 * v15;
  v11();
  sub_1001795D8((uint64_t)v9, a3, (uint64_t)v13);
  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v9, a3);
  v23 = v16;
  v24 = 0;
  v25[0] = (uint64_t)&v23;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v13, a3);
  v21 = v16;
  v22 = 0;
  v25[1] = (uint64_t)v9;
  v25[2] = (uint64_t)&v21;
  v20[0] = &type metadata for Spacer;
  v20[1] = a3;
  v20[2] = &type metadata for Spacer;
  v19[1] = &protocol witness table for Spacer;
  v19[2] = a4;
  v19[3] = &protocol witness table for Spacer;
  sub_1001788E4(v25, 3, (uint64_t)v20);
  v17(v13, a3);
  return ((uint64_t (*)(char *, uint64_t))v17)(v9, a3);
}

uint64_t sub_10018CC88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10018C9A8(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2, *(double *)v2, *(double *)(v2 + 8));
}

double sub_10018CC9C@<D0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char v46;

  v2 = v1;
  v41 = *v1;
  LOBYTE(v42) = *((_BYTE *)v1 + 16);
  v4 = sub_1001085C0(&qword_1002DB5C0);
  Binding.wrappedValue.getter(&v31, v4);
  v6 = *((_QWORD *)v1 + 3);
  v5 = *((_QWORD *)v1 + 4);
  if (v31 == 1)
  {
    v7 = (_OWORD *)swift_allocObject(&unk_10028CD20, 80, 7);
    v8 = v2[1];
    v7[1] = *v2;
    v7[2] = v8;
    v9 = v2[3];
    v7[3] = v2[2];
    v7[4] = v9;
    v10 = sub_1001911FC(v2);
    v11 = static Anchor.Source<A>.bounds.getter(v10);
    v12 = static Color.black.getter(v11);
    v13 = static Edge.Set.all.getter(v12);
    v31 = v6;
    v32 = v5;
    v33 = sub_100191494;
    v34 = v7;
    v35 = v11;
    v36 = sub_10018AC60;
    v37 = 0;
    v38 = v12;
    v39 = v13;
    v40 = 0;
  }
  else
  {
    v14 = (_OWORD *)swift_allocObject(&unk_10028CCF8, 80, 7);
    v15 = v2[1];
    v14[1] = *v2;
    v14[2] = v15;
    v16 = v2[3];
    v14[3] = v2[2];
    v14[4] = v16;
    v17 = sub_1001911FC(v2);
    v18 = static Anchor.Source<A>.bounds.getter(v17);
    v19 = static Color.black.getter(v18);
    v20 = static Edge.Set.all.getter(v19);
    v31 = v6;
    v32 = v5;
    v33 = sub_1001911F4;
    v34 = v14;
    v35 = v18;
    v36 = sub_10018AC60;
    v37 = 0;
    v38 = v19;
    v39 = v20;
    v40 = 1;
  }
  v21 = sub_1001085C0(&qword_1002DB808);
  v22 = sub_1001085C0(&qword_1002DB810);
  v23 = sub_100191250();
  v24 = sub_100191370();
  _ConditionalContent<>.init(storage:)(&v41, &v31, v21, v22, v23, v24);
  result = *(double *)&v41;
  v26 = v42;
  v27 = v43;
  v28 = v44;
  v29 = v45;
  v30 = v46;
  *(_OWORD *)a1 = v41;
  *(_OWORD *)(a1 + 16) = v26;
  *(_OWORD *)(a1 + 32) = v27;
  *(_OWORD *)(a1 + 48) = v28;
  *(_BYTE *)(a1 + 64) = v29;
  *(_BYTE *)(a1 + 65) = v30;
  return result;
}

uint64_t sub_10018CE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];

  v41 = a2;
  v3 = sub_1001085C0(&qword_1002DB878);
  v39 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1001085C0(&qword_1002DB880);
  v7 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40, v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_OWORD *)swift_allocObject(&unk_10028CD48, 80, 7);
  v12 = *(_OWORD *)(a1 + 16);
  v11[1] = *(_OWORD *)a1;
  v11[2] = v12;
  v13 = *(_OWORD *)(a1 + 48);
  v11[3] = *(_OWORD *)(a1 + 32);
  v11[4] = v13;
  sub_1001911FC((_QWORD *)a1);
  v14 = sub_1001085C0(&qword_1002DB888);
  v15 = sub_10010AD84(&qword_1002DB890);
  v16 = type metadata accessor for MultimodalNavigationBackButtonLabelStyle(255);
  sub_1001926D4((uint64_t)&unk_1002DB898);
  v18 = v17;
  sub_100192488((uint64_t)&unk_1002DB8A0);
  v42[0] = v15;
  v42[1] = v16;
  v42[2] = v18;
  v42[3] = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v42, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  Button.init(action:label:)(sub_1001914D4, v11, sub_10018D120, 0, v14, OpaqueTypeConformance2);
  sub_1001926D4((uint64_t)&unk_1002DB8A8);
  v22 = v21;
  v23 = sub_1001914DC();
  View.buttonStyle<A>(_:)(v23, v3, &type metadata for BackButtonStyle, v22, v23);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v6, v3);
  v25 = static ClarityUIMetrics.backButtonPadding.getter(v24);
  LOBYTE(v22) = static Edge.Set.all.getter(v26);
  v27 = EdgeInsets.init(_all:)(v25);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v40;
  v34 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v41, v10, v40);
  v36 = v34 + *(int *)(sub_1001085C0(&qword_1002DB8B8) + 36);
  *(_BYTE *)v36 = v22;
  *(double *)(v36 + 8) = v27;
  *(_QWORD *)(v36 + 16) = v29;
  *(_QWORD *)(v36 + 24) = v31;
  *(_QWORD *)(v36 + 32) = v33;
  *(_BYTE *)(v36 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v35);
}

uint64_t sub_10018D0D0(__int128 *a1)
{
  uint64_t v1;
  char v3;
  __int128 v4;
  char v5;

  v4 = *a1;
  v5 = *((_BYTE *)a1 + 16);
  v3 = 0;
  v1 = sub_1001085C0(&qword_1002DB5C0);
  return Binding.wrappedValue.setter(&v3, v1);
}

void sub_10018D120()
{
  sub_10018D5E4((uint64_t)sub_10018D134, (uint64_t)sub_10018D150);
}

uint64_t sub_10018D134@<X0>(uint64_t a1@<X8>)
{
  return sub_10018DF5C(a1);
}

uint64_t sub_10018D150@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0xD000000000000018, 0x80000001001F63C0);
  *a1 = result;
  return result;
}

void sub_10018D18C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  char v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v3 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 40);
  swift_retain(*(_QWORD *)(a1 + 40));
  v4 = swift_retain(v3);
  v5 = static ClarityUIMetrics.backButtonPadding.getter(v4);
  v7 = v6;
  v8 = static Edge.Set.all.getter(v5);
  v9 = EdgeInsets.init(_all:)(v7);
  *(_OWORD *)a2 = v13;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v8;
  *(double *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v11;
  *(_QWORD *)(a2 + 56) = v12;
  *(_BYTE *)(a2 + 64) = 0;
}

uint64_t sub_10018D210@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v4 = sub_1001085C0(&qword_1002DB5D0);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100241240;
  *(_QWORD *)(v5 + 32) = a1;
  v8 = v5;
  specialized Array._endMutation()(v5, v6);
  *a2 = v8;
  return swift_retain();
}

double sub_10018D280@<D0>(uint64_t a1@<X8>)
{
  return sub_10018CC9C(a1);
}

uint64_t sub_10018D2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[4];

  v38 = a2;
  v33 = type metadata accessor for BorderedProminentButtonStyle(0);
  v37 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33, v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001085C0(&qword_1002DB878);
  v35 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1001085C0(&qword_1002DB9F0);
  v34 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36, v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v13 = sub_1001085C0(&qword_1002DB888);
  v14 = sub_10010AD84(&qword_1002DB890);
  v15 = type metadata accessor for MultimodalNavigationBackButtonLabelStyle(255);
  sub_1001926D4((uint64_t)&unk_1002DB898);
  v17 = v16;
  sub_100192488((uint64_t)&unk_1002DB8A0);
  v39[0] = v14;
  v39[1] = v15;
  v39[2] = v17;
  v39[3] = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v39, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v20 = Button.init(action:label:)(sub_100192480, a1, sub_10018D5D0, 0, v13, OpaqueTypeConformance2);
  BorderedProminentButtonStyle.init()(v20);
  sub_1001926D4((uint64_t)&unk_1002DB8A8);
  v22 = v21;
  sub_100192488((uint64_t)&unk_1002DB9F8);
  v23 = v33;
  View.buttonStyle<A>(_:)(v5, v6, v33, v22, v24);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v23);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v9, v6);
  v26 = static Color.green.getter(v25);
  KeyPath = swift_getKeyPath(&unk_100244A60);
  v28 = v34;
  v29 = v38;
  v30 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v38, v12, v36);
  v31 = (uint64_t *)(v29 + *(int *)(sub_1001085C0(&qword_1002DBA00) + 36));
  *v31 = KeyPath;
  v31[1] = v26;
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v12, v30);
}

void sub_10018D564()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v1 = sub_10019A684();
  objc_msgSend(v0, "answerCall:", v1);

}

void sub_10018D5D0()
{
  sub_10018D5E4((uint64_t)sub_10018D730, (uint64_t)sub_10018D74C);
}

void sub_10018D5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = type metadata accessor for MultimodalNavigationBackButtonLabelStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  sub_10010BC88();
  v10 = v9 - v8;
  v11 = sub_1001085C0(&qword_1002DB890);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  sub_100192928();
  v14 = Label.init(title:icon:)(a1, 0, a2, 0, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
  MultimodalNavigationBackButtonLabelStyle.init()(v14);
  sub_1001926D4((uint64_t)&unk_1002DB898);
  v16 = v15;
  sub_100192488((uint64_t)&unk_1002DB8A0);
  View.labelStyle<A>(_:)(v10, v11, v5, v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v11);
  sub_10010BC44();
}

uint64_t sub_10018D730@<X0>(uint64_t a1@<X8>)
{
  return sub_10018DF5C(a1);
}

uint64_t sub_10018D74C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0x69662E656E6F6870, 0xEA00000000006C6CLL);
  *a1 = result;
  return result;
}

uint64_t sub_10018D788@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10018D2B8(*v1, a1);
}

uint64_t sub_10018D790(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = swift_allocObject(&unk_10028D0F8, 33, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_BYTE *)(v6 + 32) = a3;
  swift_retain();
  swift_retain();
  v7 = sub_1001085C0(&qword_1002DB890);
  sub_1001926D4((uint64_t)&unk_1002DB898);
  return Button.init(action:label:)(sub_100192374, v6, sub_10018D894, 0, v7, v8);
}

uint64_t sub_10018D848(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v6 = a1;
  v7 = a2;
  v8 = a3;
  v5 = 1;
  v3 = sub_1001085C0(&qword_1002DB5C0);
  return Binding.wrappedValue.setter(&v5, v3);
}

uint64_t sub_10018D894()
{
  return Label.init(title:icon:)(sub_10018D8D0, 0, sub_10018D8EC, 0, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
}

uint64_t sub_10018D8D0@<X0>(uint64_t a1@<X8>)
{
  return sub_10018DF5C(a1);
}

uint64_t sub_10018D8EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0xD000000000000014, 0x80000001001F6460);
  *a1 = result;
  return result;
}

uint64_t sub_10018D928()
{
  uint64_t v0;

  return sub_10018D790(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_10018D934(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  char v14;

  v2 = sub_1001085C0(&qword_1002DB9D8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v7 = sub_1001085C0(&qword_1002DB890);
  sub_1001926D4((uint64_t)&unk_1002DB898);
  Button.init(action:label:)(sub_100192338, a1, sub_100192340, a1, v7, v8);
  v14 = sub_1001A41AC() & 1;
  sub_1001926D4((uint64_t)&unk_1002DB9E0);
  v10 = v9;
  v11 = sub_10019159C();
  View.buttonStyle<A>(_:)(&v14, v2, &type metadata for InCallButtonStyle, v10, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_10018DA70()
{
  sub_1001A41AC();
  sub_1001A4204();
}

uint64_t sub_10018DA9C(uint64_t a1)
{
  return Label.init(title:icon:)(sub_100192348, a1, sub_10018DB80, 0, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
}

uint64_t sub_10018DAD8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  if ((sub_1001A41AC() & 1) != 0)
  {
    v2 = 0xD000000000000021;
    v3 = 0x80000001001F6430;
  }
  else
  {
    v3 = 0x80000001001F6400;
    v2 = 0xD000000000000020;
  }
  v4 = LocalizedStringKey.init(stringLiteral:)(v2, v3);
  result = Text.init(_:tableName:bundle:comment:)(v4);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7 & 1;
  *(_QWORD *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_10018DB80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0xD000000000000013, 0x80000001001F0430);
  *a1 = result;
  return result;
}

uint64_t sub_10018DBBC()
{
  uint64_t *v0;

  return sub_10018D934(*v0);
}

uint64_t sub_10018DBC4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE v15[16];
  void *v16;
  char v17;

  v2 = sub_1001085C0(&qword_1002DB9D8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = swift_allocObject(&unk_10028D148, 24, 7);
  *(_QWORD *)(v7 + 16) = a1;
  v16 = a1;
  v8 = a1;
  v9 = sub_1001085C0(&qword_1002DB890);
  sub_1001926D4((uint64_t)&unk_1002DB898);
  Button.init(action:label:)(sub_1001923C0, v7, sub_1001923DC, v15, v9, v10);
  v17 = sub_10017FE64() & 1;
  sub_1001926D4((uint64_t)&unk_1002DB9E0);
  v12 = v11;
  v13 = sub_10019159C();
  View.buttonStyle<A>(_:)(&v17, v2, &type metadata for InCallButtonStyle, v12, v13);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_10018DD28(uint64_t a1)
{
  _QWORD v2[4];

  v2[2] = a1;
  return Label.init(title:icon:)(sub_1001923E4, v2, sub_10018DE28, 0, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
}

uint64_t sub_10018DD80@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  if ((sub_10017FE64() & 1) != 0)
  {
    v2 = 0x80000001001F6510;
    v3 = 0xD000000000000029;
  }
  else
  {
    v3 = 0xD00000000000002ALL;
    v2 = 0x80000001001F64E0;
  }
  v4 = LocalizedStringKey.init(stringLiteral:)(v3, v2);
  result = Text.init(_:tableName:bundle:comment:)(v4);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7 & 1;
  *(_QWORD *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_10018DE28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0x69662E6F65646976, 0xEA00000000006C6CLL);
  *a1 = result;
  return result;
}

uint64_t sub_10018DE64()
{
  void **v0;

  return sub_10018DBC4(*v0);
}

uint64_t sub_10018DE6C(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject(&unk_10028D120, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = a1;
  v4 = sub_1001085C0(&qword_1002DB890);
  sub_1001926D4((uint64_t)&unk_1002DB898);
  return Button.init(action:label:)(sub_1001923A4, v2, sub_10018DF04, 0, v4, v5);
}

uint64_t sub_10018DF04()
{
  return Label.init(title:icon:)(sub_10018DF40, 0, sub_10018DFB8, 0, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
}

uint64_t sub_10018DF40@<X0>(uint64_t a1@<X8>)
{
  return sub_10018DF5C(a1);
}

uint64_t sub_10018DF5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = LocalizedStringKey.init(stringLiteral:)();
  result = Text.init(_:tableName:bundle:comment:)(v2);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_10018DFB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0xD00000000000001CLL, 0x80000001001F64A0);
  *a1 = result;
  return result;
}

uint64_t sub_10018DFF4()
{
  void **v0;

  return sub_10018DE6C(*v0);
}

uint64_t sub_10018DFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];

  v6 = sub_1001085C0(&qword_1002DB878);
  v23 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_allocObject(&unk_10028D170, 40, 7);
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v25 = a1;
  v26 = a2;
  v27 = a3;
  swift_retain();
  swift_retain();
  v11 = sub_1001085C0(&qword_1002DB888);
  v12 = sub_10010AD84(&qword_1002DB890);
  v13 = type metadata accessor for MultimodalNavigationBackButtonLabelStyle(255);
  sub_1001926D4((uint64_t)&unk_1002DB898);
  v15 = v14;
  sub_100192488((uint64_t)&unk_1002DB8A0);
  v28[0] = v12;
  v28[1] = v13;
  v28[2] = v15;
  v28[3] = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v28, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  Button.init(action:label:)(sub_100192410, v10, sub_10019242C, v24, v11, OpaqueTypeConformance2);
  sub_1001926D4((uint64_t)&unk_1002DB8A8);
  v19 = v18;
  v20 = sub_100192438();
  View.buttonStyle<A>(_:)(v20, v6, &type metadata for EndCallButtonStyle, v19, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v6);
}

uint64_t sub_10018E1CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v22[1] = a4;
  v7 = type metadata accessor for MultimodalNavigationBackButtonLabelStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1001085C0(&qword_1002DB890);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  v25 = a2;
  v26 = a3;
  v17 = Label.init(title:icon:)(sub_100192474, v23, sub_10018E408, 0, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
  MultimodalNavigationBackButtonLabelStyle.init()(v17);
  sub_1001926D4((uint64_t)&unk_1002DB898);
  v19 = v18;
  sub_100192488((uint64_t)&unk_1002DB8A0);
  View.labelStyle<A>(_:)(v11, v12, v7, v19, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_10018E35C@<X0>(uint64_t a1@<X8>)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  sub_10019AA44();
  if (v2 == 4)
  {
    v3 = 0xD00000000000001CLL;
    v4 = 0x80000001001F6540;
  }
  else
  {
    v4 = 0x80000001001F6380;
    v3 = 0xD000000000000019;
  }
  v5 = LocalizedStringKey.init(stringLiteral:)(v3, v4);
  result = Text.init(_:tableName:bundle:comment:)(v5);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

uint64_t sub_10018E408@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0x6F642E656E6F6870, 0xEF6C6C69662E6E77);
  *a1 = result;
  return result;
}

uint64_t sub_10018E44C()
{
  uint64_t *v0;

  return sub_10018DFFC(*v0, v0[1], v0[2]);
}

void sub_10018E458(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v31 = a1;
  v34 = a3;
  v4 = type metadata accessor for PlatterButtonType(0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ButtonStyleConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1001085C0(&qword_1002DB9C0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1001085C0(&qword_1002DB9C8);
  __chkstk_darwin(v18, v19);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v31, v8);
  v35 = a2;
  if ((a2 & 1) != 0)
    v23 = static Color.black.getter(v22);
  else
    v23 = static Color.white.getter(v22);
  v24 = v23;
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v7, enum case for PlatterButtonType.roundedRectangle(_:), v33);
  v25 = sub_1001922AC();
  v26 = PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)(v12, &v35, v24, v7, 1, &type metadata for InCallButtonStyle.Background, v25);
  v27 = static Color.clear.getter(v26);
  KeyPath = swift_getKeyPath(&unk_100244A60);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v17, v13);
  v29 = (uint64_t *)&v21[*(int *)(v18 + 36)];
  *v29 = KeyPath;
  v29[1] = v27;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  sub_100156A28((uint64_t)v21, v34, &qword_1002DB9C8);
}

uint64_t sub_10018E65C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for Material(0);
  v5 = *(_QWORD *)(v4 - 8);
  v7 = __chkstk_darwin(v4, v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v10 = static Color.white.getter(v7);
    Color._apply(to:)(a1, v10);
    return swift_release(v10);
  }
  else
  {
    static Material.ultraThin.getter(v7);
    Material._apply(to:)(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
}

uint64_t sub_10018E71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static ShapeStyle._makeView<A>(view:inputs:)(a1, a2, a5, a3, a6, a4);
}

uint64_t sub_10018E734(uint64_t a1)
{
  char *v1;

  return sub_10018E65C(a1, *v1);
}

void sub_10018E740()
{
  ShapeStyle<>.resolve(in:)();
  __break(1u);
}

void sub_10018E750(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;

  sub_10018E458(a1, *v2, a2);
}

uint64_t sub_10018E758(uint64_t a1)
{
  return sub_10018E774(a1, (uint64_t (*)(uint64_t))&static Color.red.getter);
}

uint64_t sub_10018E774(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = type metadata accessor for PlatterButtonType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  sub_10010BC88();
  v10 = v9 - v8;
  v11 = type metadata accessor for ButtonStyleConfiguration(0);
  __chkstk_darwin(v11, v12);
  sub_100192928();
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v2, a1);
  v17 = a2(v14);
  v15 = static Color.white.getter(v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v10, enum case for PlatterButtonType.ultraRoundedRectangle(_:), v5);
  return PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)(v2, &v17, v15, v10, 1, &type metadata for Color, &protocol witness table for Color);
}

uint64_t sub_10018E878(uint64_t a1)
{
  return sub_10018E774(a1, (uint64_t (*)(uint64_t))&static Color.clarityUIButtonBackground.getter);
}

double sub_10018E894@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unsigned __int8 v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  unint64_t v41;
  double result;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  _BYTE v54[26];
  _OWORD v55[4];
  char v56;
  char v57;

  v2 = v1;
  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1001085C0(&qword_1002DB518);
  __chkstk_darwin(v9, v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ClarityUIContact(0);
  v50 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10019A684();
  v18 = objc_msgSend(v17, "isVideo");

  if ((v18 & 1) != 0)
    goto LABEL_9;
  v20 = type metadata accessor for ContactBackground(0);
  sub_1001569D0(v2 + *(int *)(v20 + 20), (uint64_t)v12, &qword_1002DB518);
  if (sub_100109FF4((uint64_t)v12, 1, v13) == 1)
  {
    sub_10011ABE4((uint64_t)v12, &qword_1002DB518);
LABEL_9:
    v51 = static Color.clear.getter(v19);
    v52 = 0u;
    v53 = 0u;
    memset(v54, 0, 25);
    v54[25] = 1;
    v40 = sub_1001085C0(&qword_1002DB7F8);
    v41 = sub_10019110C();
    _ConditionalContent<>.init(storage:)(v55, &v51, v40, &type metadata for Color, v41, &protocol witness table for Color);
    goto LABEL_10;
  }
  v49 = v20;
  v21 = v50;
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v50 + 32))(v16, v12, v13);
  v23 = ClarityUIContact.fullImage.getter(v22);
  if (!v23)
  {
    v19 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v16, v13);
    goto LABEL_9;
  }
  v24 = v23;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v4);
  v25 = 0.0;
  v26 = Image.resizable(capInsets:resizingMode:)(v8, v24, 0.0, 0.0, 0.0, 0.0);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v28 = ClarityUIContact.preferredContentMode.getter(v27);
  v29 = v28 & 1;
  v30 = ClarityUIContact.preferredContentMode.getter(v28);
  v31 = static ContentMode.== infix(_:_:)(v30 & 1, 0);
  if ((v31 & 1) != 0)
    v25 = *(double *)(v2 + *(int *)(v49 + 24));
  v32 = static Edge.Set.all.getter(v31);
  v33 = EdgeInsets.init(_all:)(v25);
  v51 = v26;
  *(_QWORD *)&v52 = 0;
  *((_QWORD *)&v52 + 1) = (v29 << 8) | 1;
  *(_QWORD *)&v53 = v32;
  *((double *)&v53 + 1) = v33;
  *(_QWORD *)v54 = v34;
  *(_QWORD *)&v54[8] = v35;
  *(_QWORD *)&v54[16] = v36;
  *(_WORD *)&v54[24] = 0;
  swift_retain_n(v26, 2);
  v37 = sub_1001085C0(&qword_1002DB7F8);
  v38 = sub_10019110C();
  _ConditionalContent<>.init(storage:)(v55, &v51, v37, &type metadata for Color, v38, &protocol witness table for Color);
  swift_release_n(v26, 2);
  v39 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v16, v13, v39);
LABEL_10:
  result = *(double *)v55;
  v43 = v55[1];
  v44 = v55[2];
  v45 = v55[3];
  v46 = v56;
  v47 = v57;
  *(_OWORD *)a1 = v55[0];
  *(_OWORD *)(a1 + 16) = v43;
  *(_OWORD *)(a1 + 32) = v44;
  *(_OWORD *)(a1 + 48) = v45;
  *(_BYTE *)(a1 + 64) = v46;
  *(_BYTE *)(a1 + 65) = v47;
  return result;
}

void sub_10018EBE0()
{
  qword_1002DB480 = (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t *sub_10018EBF4()
{
  if (qword_1002D7388 != -1)
    swift_once(&qword_1002D7388, sub_10018EBE0);
  return &qword_1002DB480;
}

uint64_t sub_10018EC34(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;

  a2(&v3);
  return sub_100174000(v3);
}

double sub_10018EC70@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *sub_10018EBF4();
  *a1 = v2;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v2).n128_u64[0];
  return result;
}

uint64_t destroy for ClarityUICallView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 24));

  swift_release(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 88));
  swift_release(*(_QWORD *)(a1 + 96));
  return swift_release(*(_QWORD *)(a1 + 160));
}

uint64_t initializeWithCopy for ClarityUICallView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  v7 = (void *)a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  v8 = a2[8];
  *(_QWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  v9 = a2[10];
  v10 = a2[11];
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  v11 = a2[12];
  *(_QWORD *)(a1 + 96) = v11;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
  v12 = a2[20];
  *(_QWORD *)(a1 + 152) = a2[19];
  *(_QWORD *)(a1 + 160) = v12;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  v13 = v7;
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  return a1;
}

uint64_t *assignWithCopy for ClarityUICallView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a1[2];
  v9 = a2[2];
  a1[2] = v9;
  swift_retain(v9);
  swift_release(v8);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  a1[5] = a2[5];
  v12 = (void *)a2[6];
  v13 = (void *)a1[6];
  a1[6] = (uint64_t)v12;
  v14 = v12;

  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  v15 = a1[8];
  v16 = a2[8];
  a1[8] = v16;
  swift_retain(v16);
  swift_release(v15);
  *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
  v17 = a1[10];
  v18 = a2[10];
  a1[10] = v18;
  swift_retain(v18);
  swift_release(v17);
  v19 = a1[11];
  v20 = a2[11];
  a1[11] = v20;
  swift_retain(v20);
  swift_release(v19);
  v21 = a2[12];
  v22 = a1[12];
  a1[12] = v21;
  swift_retain(v21);
  swift_release(v22);
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  v23 = a2[20];
  v24 = a1[20];
  a1[20] = v23;
  swift_retain(v23);
  swift_release(v24);
  return a1;
}

void *initializeWithTake for ClarityUICallView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA8uLL);
}

uint64_t assignWithTake for ClarityUICallView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release(v7);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_release(*(_QWORD *)(a1 + 80));
  v8 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release(v8);
  v9 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release(v9);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v10 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_release(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUICallView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 168))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUICallView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUICallView()
{
  return &type metadata for ClarityUICallView;
}

uint64_t sub_10018F120(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267934, 1);
}

_QWORD *sub_10018F134@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_10018AD1C(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_10018F140(int *a1, int *a2)
{
  return sub_10018B16C(a1, a2);
}

unint64_t sub_10018F148()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB4E0;
  if (!qword_1002DB4E0)
  {
    v1 = sub_10010AD84(&qword_1002DB498);
    sub_1001926D4((uint64_t)&unk_1002DB4E8);
    sub_1001926D4((uint64_t)&unk_1002DB4F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB4E0);
  }
  return result;
}

void sub_10018F1E8()
{
  sub_10018B334();
}

uint64_t sub_10018F1F8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100192974();
  sub_1001929AC();
  swift_release();
  swift_release();

  swift_release();
  sub_10019296C();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 200, 7);
}

uint64_t sub_10018F260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1002DB534);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100135A94;
  return sub_10018B8B8(a1, v4, v5, v1 + 32);
}

uint64_t type metadata accessor for ContactBackground(uint64_t a1)
{
  uint64_t result;

  result = qword_1002DB6C0;
  if (!qword_1002DB6C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContactBackground);
  return result;
}

uint64_t sub_10018F304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContactBackground(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018F348(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContactBackground(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10018F384()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100192964();
  sub_100192974();
  sub_1001929AC();
  swift_release();

  swift_release();
  swift_release();
  sub_10019296C();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 192, 7);
}

double sub_10018F3E8@<D0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = sub_10018AFB8(a1, *(_QWORD *)(v2 + 16), v2 + 24, a2).n128_u64[0];
  return result;
}

uint64_t sub_10018F3F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10018B070(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_10018F414()
{
  sub_10018A7BC();
}

uint64_t sub_10018F420()
{
  uint64_t v0;

  sub_100192950();
  sub_100192964();
  sub_100192974();
  sub_1001929AC();

  swift_release();
  swift_release();
  swift_release();
  sub_10019296C();
  swift_release();
  return swift_deallocObject(v0, 184, 7);
}

void sub_10018F478()
{
  uint64_t v0;

  sub_10018AC64(v0 + 16);
}

unint64_t sub_10018F480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB608;
  if (!qword_1002DB608)
  {
    v1 = sub_10010AD84(&qword_1002DB600);
    sub_10018F504();
    sub_1001926D4((uint64_t)&unk_1002DB620);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB608);
  }
  return result;
}

unint64_t sub_10018F504()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB610;
  if (!qword_1002DB610)
  {
    v1 = sub_10010AD84(&qword_1002DB5F8);
    sub_1001926D4((uint64_t)&unk_1002DB618);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB610);
  }
  return result;
}

unint64_t sub_10018F588()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB658;
  if (!qword_1002DB658)
  {
    v1 = sub_10010AD84(&qword_1002DB648);
    sub_100184F70();
    sub_100192488((uint64_t)&unk_1002DB660);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB658);
  }
  return result;
}

uint64_t *sub_10018F614(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ClarityUIContact(0);
    swift_retain();
    if (sub_100109FF4((uint64_t)v10, 1, v11))
    {
      v12 = sub_1001085C0(&qword_1002DB518);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      sub_100108600((uint64_t)v9, 0, 1, v11);
    }
    v13 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_retain();
  }
  swift_retain();
  return v7;
}

double sub_10018F72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ClarityUIContact(0);
  if (!sub_100109FF4(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_10018F7AC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ClarityUIContact(0);
  swift_retain();
  if (sub_100109FF4((uint64_t)v8, 1, v9))
  {
    v10 = sub_1001085C0(&qword_1002DB518);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    sub_100108600((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_10018F8A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ClarityUIContact(0);
  v10 = sub_100109FF4((uint64_t)v7, 1, v9);
  v11 = sub_100109FF4((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_1001085C0(&qword_1002DB518);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  sub_100108600((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_10018FA04(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ClarityUIContact(0);
  if (sub_100109FF4((uint64_t)v8, 1, v9))
  {
    v10 = sub_1001085C0(&qword_1002DB518);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    sub_100108600((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_10018FAE0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ClarityUIContact(0);
  v10 = sub_100109FF4((uint64_t)v7, 1, v9);
  v11 = sub_100109FF4((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_1001085C0(&qword_1002DB518);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  sub_100108600((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_10018FC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018FC30);
}

uint64_t sub_10018FC30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1001085C0(&qword_1002DB518);
    return sub_100109FF4((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_10018FCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018FCB4);
}

_QWORD *sub_10018FCB4(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = sub_1001085C0(&qword_1002DB518);
    return (_QWORD *)sub_100108600((uint64_t)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_10018FD24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_10018FDAC(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_10018FDAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1002DB6D0)
  {
    v2 = type metadata accessor for ClarityUIContact(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1002DB6D0);
  }
}

uint64_t destroy for BottomButtonView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t initializeWithCopy for BottomButtonView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  v5 = a2[7];
  v7 = *(_OWORD *)(a2 + 5);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v7);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for BottomButtonView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[3] = a2[3];
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[7];
  a1[6] = v11;
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

__n128 initializeWithTake for BottomButtonView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BottomButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(*(_QWORD *)(a1 + 40));
  v5 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BottomButtonView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BottomButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BottomButtonView()
{
  return &type metadata for BottomButtonView;
}

ValueMetadata *type metadata accessor for EndCallButtonBoundsPreferenceKey()
{
  return &type metadata for EndCallButtonBoundsPreferenceKey;
}

uint64_t destroy for InnerControlsView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 56));
  swift_release(*(_QWORD *)(a1 + 64));

  return swift_release(*(_QWORD *)(a1 + 96));
}

uint64_t initializeWithCopy for InnerControlsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v10;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  v5 = a2[7];
  v6 = a2[8];
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  v7 = a2[12];
  v10 = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 96) = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  v8 = (id)v10;
  swift_retain(v7);
  return a1;
}

uint64_t *assignWithCopy for InnerControlsView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
  *((_BYTE *)a1 + 49) = *((_BYTE *)a2 + 49);
  *((_BYTE *)a1 + 50) = *((_BYTE *)a2 + 50);
  *((_BYTE *)a1 + 51) = *((_BYTE *)a2 + 51);
  v8 = a1[7];
  v9 = a2[7];
  a1[7] = v9;
  swift_retain(v9);
  swift_release(v8);
  v10 = a2[8];
  v11 = a1[8];
  a1[8] = v10;
  swift_retain(v10);
  swift_release(v11);
  *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
  v12 = (void *)a2[10];
  v13 = (void *)a1[10];
  a1[10] = (uint64_t)v12;
  v14 = v12;

  v16 = a2[11];
  v15 = a2[12];
  v17 = a1[12];
  a1[11] = v16;
  a1[12] = v15;
  swift_retain(v15);
  swift_release(v17);
  return a1;
}

void *initializeWithTake for InnerControlsView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for InnerControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  swift_release(*(_QWORD *)(a1 + 56));
  v5 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v5);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);

  v6 = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v6;
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for InnerControlsView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InnerControlsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InnerControlsView()
{
  return &type metadata for InnerControlsView;
}

uint64_t sub_1001903E8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = " ";
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = " ";
    v4[3] = &unk_100244520;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_100190478(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + ((v7 + 32) & ~v7) + 47) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v11 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    v4 = (uint64_t *)(v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
  }
  else
  {
    v12 = *(_QWORD *)a2;
    v13 = *(_QWORD *)(a2 + 8);
    v14 = *(_BYTE *)(a2 + 16);
    sub_10014F068(*(_QWORD *)a2, v13, v14);
    *v4 = v12;
    v4[1] = v13;
    *((_BYTE *)v4 + 16) = v14;
    v15 = *(_QWORD *)(a2 + 24);
    v4[3] = v15;
    v16 = (a2 + v7 + 32) & ~v7;
    v17 = *(void (**)(unint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
    v18 = swift_bridgeObjectRetain(v15);
    v17(((unint64_t)v4 + v7 + 32) & ~v7, v16, v5, v18);
    v19 = (((unint64_t)v4 + v7 + 32) & ~v7) + v8;
    v20 = v16 + v8;
    v21 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    v24 = *(_QWORD *)(v22 + 8);
    LOBYTE(v16) = *(_BYTE *)(v22 + 16);
    sub_10014F068(*(_QWORD *)v22, v24, v16);
    *(_QWORD *)v21 = v23;
    *(_QWORD *)(v21 + 8) = v24;
    *(_BYTE *)(v21 + 16) = v16;
    v25 = *(_QWORD *)(v22 + 24);
    *(_QWORD *)(v21 + 24) = v25;
    *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
    *(_QWORD *)((v19 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v20 + 47) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v25);
  }
  swift_retain();
  return v4;
}

double sub_1001905E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  double result;

  sub_10014F058(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (v5 + *(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10014F058(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_BYTE *)(v6 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + 24));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100190678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_10014F068(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 32 + a1) & ~v12;
  v14 = (v12 + 32 + a2) & ~v12;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 16);
  v16 = swift_bridgeObjectRetain(v9);
  v15(v13, v14, v10, v16);
  v17 = *(_QWORD *)(v11 + 64);
  v18 = v13 + v17;
  v19 = v14 + v17;
  v20 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  LOBYTE(v13) = *(_BYTE *)(v21 + 16);
  sub_10014F068(*(_QWORD *)v21, v23, v13);
  *(_QWORD *)v20 = v22;
  *(_QWORD *)(v20 + 8) = v23;
  *(_BYTE *)(v20 + 16) = v13;
  v24 = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v20 + 24) = v24;
  *(_BYTE *)(v20 + 32) = *(_BYTE *)(v21 + 32);
  *(_QWORD *)((v18 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v19 + 47) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(v24);
  swift_retain();
  return a1;
}

uint64_t sub_100190788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_10014F068(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_10014F058(v9, v10, v11);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 32 + a1) & ~v15;
  v17 = (v15 + 32 + a2) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v16, v17);
  v18 = *(_QWORD *)(v14 + 64);
  v19 = v16 + v18;
  v20 = v17 + v18;
  v21 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v17 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  LOBYTE(v14) = *(_BYTE *)(v22 + 16);
  sub_10014F068(*(_QWORD *)v22, v24, v14);
  v25 = *(_QWORD *)v21;
  v26 = *(_QWORD *)(v21 + 8);
  v27 = *(_BYTE *)(v21 + 16);
  *(_QWORD *)v21 = v23;
  *(_QWORD *)(v21 + 8) = v24;
  *(_BYTE *)(v21 + 16) = v14;
  sub_10014F058(v25, v26, v27);
  v28 = *(_QWORD *)(v22 + 24);
  v29 = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v21 + 24) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
  *(_QWORD *)((v19 + 47) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v20 + 47) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1001908CC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 32) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 32) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = v7 + v9;
  v11 = v8 + v9;
  v12 = (v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)((v10 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v11 + 47) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100190970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_10014F058(v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 32 + a1) & ~v12;
  v14 = (v12 + 32 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64);
  v16 = v13 + v15;
  v17 = v14 + v15;
  v18 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v15) = *(_BYTE *)(v19 + 16);
  v20 = *(_QWORD *)v18;
  v21 = *(_QWORD *)(v18 + 8);
  v22 = *(_BYTE *)(v18 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_BYTE *)(v18 + 16) = v15;
  sub_10014F058(v20, v21, v22);
  v23 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  swift_bridgeObjectRelease(v23);
  *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
  *(_QWORD *)((v16 + 47) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v17 + 47) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_100190A78(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if ((v6 & 0x80000000) != 0)
    {
      return sub_100109FF4((a1 + v8 + 32) & ~v8, v6, v4);
    }
    else
    {
      v13 = *(_QWORD *)(a1 + 24);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v5 + 64) + ((v8 + 32) & ~v8) + 47) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100190B04 + 4 * byte_100244380[v11]))();
  }
}

void sub_100190B80(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64)
       + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
       + 47) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~*(unsigned __int8 *)(v5 + 80)) + 47) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v6)
  {
    if ((_DWORD)v7)
    {
      v11 = ~v6 + a2;
      bzero(a1, v7);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_100190C80@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;

  *((_BYTE *)v5 + v6) = 0;
  if ((_DWORD)a1)
  {
    if ((a2 & 0x80000000) != 0)
    {
      return sub_100108600(((unint64_t)v5 + v4 + 32) & a4, a1, a2, a3);
    }
    else if ((a1 & 0x80000000) != 0)
    {
      v5[2] = 0;
      v5[3] = 0;
      *v5 = a1 ^ 0x80000000;
      v5[1] = 0;
    }
    else
    {
      v5[3] = (a1 - 1);
    }
  }
  return result;
}

uint64_t type metadata accessor for CallTitleHeader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100124670(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CallTitleHeader);
}

unint64_t sub_100190D18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB790;
  if (!qword_1002DB790)
  {
    v1 = sub_10010AD84(&qword_1002DB510);
    sub_100190D84();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB790);
  }
  return result;
}

unint64_t sub_100190D84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB798;
  if (!qword_1002DB798)
  {
    v1 = sub_10010AD84(&qword_1002DB4D0);
    sub_100190E08();
    sub_1001926D4((uint64_t)&unk_1002DB7E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB798);
  }
  return result;
}

unint64_t sub_100190E08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB7A0;
  if (!qword_1002DB7A0)
  {
    v1 = sub_10010AD84(&qword_1002DB4C8);
    sub_100190E8C();
    sub_1001926D4((uint64_t)&unk_1002DB7D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB7A0);
  }
  return result;
}

unint64_t sub_100190E8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB7A8;
  if (!qword_1002DB7A8)
  {
    v1 = sub_10010AD84(&qword_1002DB4C0);
    sub_100190F10();
    sub_1001926D4((uint64_t)&unk_1002DB7D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB7A8);
  }
  return result;
}

unint64_t sub_100190F10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB7B0;
  if (!qword_1002DB7B0)
  {
    v1 = sub_10010AD84(&qword_1002DB4B8);
    sub_100190F94();
    sub_1001926D4((uint64_t)&unk_1002DB7C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB7B0);
  }
  return result;
}

unint64_t sub_100190F94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  unint64_t v6;
  void *v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  void *v12;

  result = qword_1002DB7B8;
  if (!qword_1002DB7B8)
  {
    v1 = sub_10010AD84(&qword_1002DB4B0);
    v2 = sub_10010AD84(&qword_1002DB4A0);
    v3 = sub_10010AD84(&qword_1002DB498);
    type metadata accessor for TUCallStatus(255);
    v5 = v4;
    v6 = sub_10018F148();
    sub_100192488((uint64_t)&qword_1002D7698);
    v9 = v3;
    v10 = v5;
    v11 = v6;
    v12 = v7;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v9 = v2;
    v10 = &type metadata for Bool;
    v11 = OpaqueTypeConformance2;
    v12 = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB7B8);
  }
  return result;
}

uint64_t sub_1001910A8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100267B50, 1);
}

uint64_t sub_1001910DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267B28, 1);
}

uint64_t sub_1001910EC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267B00, 1);
}

uint64_t sub_1001910FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267AD8, 1);
}

unint64_t sub_10019110C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB800;
  if (!qword_1002DB800)
  {
    v1 = sub_10010AD84(&qword_1002DB7F8);
    sub_100191198((uint64_t)&unk_1002D89D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB800);
  }
  return result;
}

unint64_t sub_100191198(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t *v3;
  uint64_t v4;

  result = sub_100128130(a1);
  if (!result)
  {
    v4 = sub_10019298C(0, v3);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, v1);
  }
  return result;
}

void sub_1001911F4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10018D18C(v1 + 16, a1);
}

_QWORD *sub_1001911FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[5];
  v4 = a1[7];
  swift_retain(*a1);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

unint64_t sub_100191250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB818;
  if (!qword_1002DB818)
  {
    v1 = sub_10010AD84(&qword_1002DB808);
    sub_1001912D4();
    sub_1001926D4((uint64_t)&qword_1002D9608);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB818);
  }
  return result;
}

unint64_t sub_1001912D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB820;
  if (!qword_1002DB820)
  {
    v1 = sub_10010AD84(&qword_1002DB828);
    sub_1001926D4((uint64_t)&unk_1002DB830);
    sub_1001926D4((uint64_t)&unk_1002DB840);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB820);
  }
  return result;
}

unint64_t sub_100191370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB850;
  if (!qword_1002DB850)
  {
    v1 = sub_10010AD84(&qword_1002DB810);
    sub_1001913F4();
    sub_1001926D4((uint64_t)&qword_1002D9608);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB850);
  }
  return result;
}

unint64_t sub_1001913F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB858;
  if (!qword_1002DB858)
  {
    v1 = sub_10010AD84(&qword_1002DB860);
    sub_1001926D4((uint64_t)&unk_1002DB868);
    sub_1001926D4((uint64_t)&unk_1002DB840);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB858);
  }
  return result;
}

uint64_t sub_100191494@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10018CE54(v1 + 16, a1);
}

uint64_t sub_1001914A0()
{
  uint64_t v0;

  sub_100192950();
  sub_100192964();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001914D4()
{
  uint64_t v0;

  return sub_10018D0D0((__int128 *)(v0 + 16));
}

unint64_t sub_1001914DC()
{
  unint64_t result;

  result = qword_1002DB8B0;
  if (!qword_1002DB8B0)
  {
    result = swift_getWitnessTable(&unk_1002449D8, &type metadata for BackButtonStyle);
    atomic_store(result, (unint64_t *)&qword_1002DB8B0);
  }
  return result;
}

unint64_t sub_100191518()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB8C8;
  if (!qword_1002DB8C8)
  {
    v1 = sub_10010AD84(&qword_1002DB8C0);
    sub_1001926D4((uint64_t)&unk_1002DB8D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB8C8);
  }
  return result;
}

unint64_t sub_10019159C()
{
  unint64_t result;

  result = qword_1002DB8E0;
  if (!qword_1002DB8E0)
  {
    result = swift_getWitnessTable(&unk_1002449A0, &type metadata for InCallButtonStyle);
    atomic_store(result, (unint64_t *)&qword_1002DB8E0);
  }
  return result;
}

uint64_t sub_1001915D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v13 = *(_OWORD *)(a1 + 112);
  v14 = *(_OWORD *)(a1 + 96);
  v12 = *(_OWORD *)(a1 + 128);
  v9 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v10 = *(_BYTE *)(a1 + 160);
  sub_100191780(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  sub_10019169C(v16, v15, v2, v3, v4, v5, v6, v7, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v8, v10);
  return a1;
}

double sub_10019169C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  double result;

  if ((a17 & 1) != 0)
  {
    sub_100191780(a1, a2, a3, a4);
    sub_1001917A0(a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (void (*)(void))sub_10019291C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100191780, sub_10019291C);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100191780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a3)
    return swift_release(a4);
  return result;
}

uint64_t sub_100191790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a3)
    return swift_retain(a4);
  return result;
}

uint64_t sub_1001917A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(void), void (*a14)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a15)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t result;

  if (a3 != 1)
  {
    a13();
    a14(a5, a6, a7, a8);
    return a15(a9, a10, a11, a12);
  }
  return result;
}

uint64_t sub_10019183C(uint64_t result)
{
  *(_BYTE *)(result + 128) = 1;
  return result;
}

uint64_t sub_100191848(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD), void (*a3)(void), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v17 = *(_QWORD *)(a1 + 80);
  v12 = *(_QWORD *)(a1 + 88);
  v16 = *(_OWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 112);
  v13 = *(_QWORD *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  sub_1001917A0(v6, v7, v8, v9, v10, v11, v17, v12, v16, *((uint64_t *)&v16 + 1), v14, v13, a3, a4, a5);
  return a1;
}

uint64_t sub_10019190C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if ((a17 & 1) == 0)
    return swift_retain();
  sub_100191790(a1, a2, a3, a4);
  return sub_1001917A0(a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (void (*)(void))sub_100192920, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100191790, sub_100192920);
}

uint64_t sub_1001919F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);
  char v5;

  v2 = sub_100128130(a1);
  v5 = *(_BYTE *)(v1 + 128);
  v3(v2, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), v5);
  return v1;
}

uint64_t sub_100191A54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10018C944(v1 + 16, a1);
}

uint64_t *sub_100191A5C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[8];
  v5 = (void *)a1[10];
  v6 = a1[12];
  swift_retain(a1[7]);
  swift_retain(v4);
  v7 = v5;
  swift_retain(v6);
  swift_retain(v2);
  swift_retain(v3);
  return a1;
}

_QWORD *sub_100191ACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10018C8C4(v1 + 16, a1);
}

id sub_100191ADC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_10018C8B8(v1 + 16, a1);
}

uint64_t sub_100191AE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10018C884((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_100191AF0(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

uint64_t sub_100191AFC()
{
  uint64_t v0;

  sub_100192950();
  sub_100192964();
  swift_release();
  swift_release();

  sub_10019296C();
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100191B3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_10018C878((uint64_t *)(v1 + 16), a1);
}

double sub_100191B44@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10018BCAC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100191B50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10018BEB8(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for BackButtonStyle()
{
  return &type metadata for BackButtonStyle;
}

ValueMetadata *type metadata accessor for InCallButtonStyle()
{
  return &type metadata for InCallButtonStyle;
}

ValueMetadata *type metadata accessor for SpeakerButton()
{
  return &type metadata for SpeakerButton;
}

uint64_t destroy for KeypadButton(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

void _s13InCallService12KeypadButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain();
  swift_retain();
  sub_100109438();
}

uint64_t *assignWithCopy for KeypadButton(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

__n128 initializeWithTake for KeypadButton(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for KeypadButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for KeypadButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeypadButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeypadButton()
{
  return &type metadata for KeypadButton;
}

ValueMetadata *type metadata accessor for MediaUploadButton()
{
  return &type metadata for MediaUploadButton;
}

ValueMetadata *type metadata accessor for VideoStreamingButton()
{
  return &type metadata for VideoStreamingButton;
}

uint64_t destroy for EndCallButton(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[2]);
}

void _s13InCallService13EndCallButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v2;
  swift_retain();
  swift_retain();
  sub_100109438();
}

uint64_t *assignWithCopy for EndCallButton(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v7 = a2[1];
  v6 = a2[2];
  v8 = a1[2];
  a1[1] = v7;
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

_QWORD *assignWithTake for EndCallButton(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = a1[2];
  a1[2] = v4;
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for EndCallButton(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EndCallButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EndCallButton()
{
  return &type metadata for EndCallButton;
}

ValueMetadata *type metadata accessor for AnswerCallButton()
{
  return &type metadata for AnswerCallButton;
}

uint64_t sub_100191F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_100191F14(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t sub_100191F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain(v3);
  return a1;
}

_QWORD *sub_100191F50(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a2[3];
  v4 = a1[3];
  a1[2] = a2[2];
  a1[3] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t sub_100191F98(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  swift_release(v3);
  return a1;
}

uint64_t type metadata accessor for ButtonWithSpacers(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100124670(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ButtonWithSpacers);
}

unint64_t sub_100191FD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB9A0;
  if (!qword_1002DB9A0)
  {
    v1 = sub_10010AD84(&qword_1002DB9A8);
    sub_10019110C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB9A0);
  }
  return result;
}

unint64_t sub_100192048()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DB9B0;
  if (!qword_1002DB9B0)
  {
    v1 = sub_10010AD84(&qword_1002DB9B8);
    sub_100191250();
    sub_100191370();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DB9B0);
  }
  return result;
}

uint64_t sub_1001920B4()
{
  _QWORD v1[4];

  v1[0] = sub_10010AD84(&qword_1002DB8C0);
  v1[1] = &type metadata for InCallButtonStyle;
  v1[2] = sub_100191518();
  v1[3] = sub_10019159C();
  return sub_100192984((uint64_t)v1, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
}

uint64_t sub_100192110(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_10010AD84(&qword_1002DB910);
  sub_1001926D4((uint64_t)&unk_1002DB918);
  v9[0] = v3;
  v9[1] = v1;
  v9[2] = v4;
  v9[3] = v2;
  v5 = type metadata accessor for ClarityUITitleHeader(255, (uint64_t)v9);
  v6 = sub_10010AD84(&qword_1002DAF58);
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  swift_getWitnessTable(&unk_100243B18, v5);
  sub_1001926D4((uint64_t)&qword_1002DAF50);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
}

uint64_t sub_1001921E8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267D10, 1);
}

uint64_t sub_1001921F8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267CE8, 1);
}

uint64_t sub_100192208(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267CC0, 1);
}

uint64_t sub_100192218(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267C98, 1);
}

uint64_t sub_100192228(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267C70, 1);
}

uint64_t sub_100192238(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267C48, 1);
}

uint64_t sub_100192248(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267C20, 1);
}

uint64_t sub_100192258(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267BF8, 1);
}

uint64_t sub_100192268(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100267BC4, 1);
}

uint64_t sub_10019229C()
{
  uint64_t *v0;

  return sub_10018CB3C(v0[6], v0[7], v0[2], v0[3]);
}

unint64_t sub_1001922AC()
{
  unint64_t result;

  result = qword_1002DB9D0;
  if (!qword_1002DB9D0)
  {
    result = swift_getWitnessTable(&unk_100244AEC, &type metadata for InCallButtonStyle.Background);
    atomic_store(result, (unint64_t *)&qword_1002DB9D0);
  }
  return result;
}

void sub_1001922E8(_QWORD *a1@<X8>)
{
  *a1 = EnvironmentValues.tintColor.getter();
  sub_100109438();
}

uint64_t sub_10019230C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

void sub_100192338()
{
  sub_10018DA70();
}

uint64_t sub_100192340()
{
  uint64_t v0;

  return sub_10018DA9C(v0);
}

uint64_t sub_100192348@<X0>(uint64_t a1@<X8>)
{
  return sub_10018DAD8(a1);
}

uint64_t sub_100192350()
{
  uint64_t v0;

  sub_100192950();
  sub_100192964();
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100192374()
{
  uint64_t v0;

  return sub_10018D848(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_100192380()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001923A4()
{
  sub_10017FFC4();
  sub_100109438();
}

void sub_1001923C0()
{
  sub_10017FF64();
  sub_100109438();
}

uint64_t sub_1001923DC()
{
  uint64_t v0;

  return sub_10018DD28(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001923E4@<X0>(uint64_t a1@<X8>)
{
  return sub_10018DD80(a1);
}

uint64_t sub_1001923EC()
{
  uint64_t v0;

  sub_100192950();
  sub_100192974();
  return swift_deallocObject(v0, 40, 7);
}

void sub_100192410()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 24))();
  sub_100109438();
}

uint64_t sub_10019242C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10018E1CC(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_100192438()
{
  unint64_t result;

  result = qword_1002DB9E8;
  if (!qword_1002DB9E8)
  {
    result = swift_getWitnessTable(&unk_100244AB4, &type metadata for EndCallButtonStyle);
    atomic_store(result, (unint64_t *)&qword_1002DB9E8);
  }
  return result;
}

uint64_t sub_100192474@<X0>(uint64_t a1@<X8>)
{
  return sub_10018E35C(a1);
}

void sub_100192480()
{
  sub_10018D564();
}

void sub_100192488(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  if (!sub_100128130(a1))
  {
    v3 = v2(255);
    atomic_store(sub_10010BCA0(v3), v1);
  }
  sub_100109438();
}

uint64_t _s13InCallService17InCallButtonStyleVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100192504 + 4 * byte_100244394[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100192538 + 4 * byte_10024438F[v4]))();
}

uint64_t sub_100192538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100192540(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100192548);
  return result;
}

uint64_t sub_100192554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10019255CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100192560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100192568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InCallButtonStyle.Background()
{
  return &type metadata for InCallButtonStyle.Background;
}

ValueMetadata *type metadata accessor for EndCallButtonStyle()
{
  return &type metadata for EndCallButtonStyle;
}

uint64_t sub_100192594(_QWORD *a1)
{
  uint64_t TupleTypeMetadata3;
  uint64_t v2;
  uint64_t WitnessTable;
  uint64_t v4;

  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, &type metadata for Spacer, *a1, &type metadata for Spacer, 0, 0);
  v2 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v2);
  v4 = type metadata accessor for HStack(255, v2, WitnessTable);
  return swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v4);
}

void sub_100192608()
{
  sub_1001926D4((uint64_t)&unk_1002DBA08);
}

unint64_t sub_100192638()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBA18;
  if (!qword_1002DBA18)
  {
    v1 = sub_10010AD84(&qword_1002DB9C8);
    sub_1001926D4((uint64_t)&unk_1002DBA20);
    sub_1001926D4((uint64_t)&unk_1002DB200);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBA18);
  }
  return result;
}

void sub_1001926D4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t v3;

  if (!sub_100128130(a1))
  {
    v3 = sub_10019298C(0, v2);
    atomic_store(sub_10010BCA0(v3), v1);
  }
  sub_100109438();
}

uint64_t sub_100192700(uint64_t a1)
{
  return sub_100192724(a1, &qword_1002DB9D8, (uint64_t)&unk_1002DB9E0, (uint64_t (*)(void))sub_10019159C, (uint64_t)&type metadata for InCallButtonStyle);
}

uint64_t sub_100192724(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v8 = sub_10019298C(a1, a2);
  sub_1001926D4(a3);
  v11[0] = v8;
  v11[1] = a5;
  v11[2] = v9;
  v11[3] = a4();
  return sub_100192984((uint64_t)v11, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
}

void sub_1001927A0()
{
  sub_1001926D4((uint64_t)&unk_1002DB9E0);
}

uint64_t sub_1001927CC(uint64_t a1)
{
  return sub_100192724(a1, &qword_1002DB878, (uint64_t)&unk_1002DB8A8, (uint64_t (*)(void))sub_100192438, (uint64_t)&type metadata for EndCallButtonStyle);
}

unint64_t sub_1001927F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  result = qword_1002DBA28;
  if (!qword_1002DBA28)
  {
    v1 = sub_10010AD84(&qword_1002DBA00);
    v2 = sub_10010AD84(&qword_1002DB878);
    v3 = type metadata accessor for BorderedProminentButtonStyle(255);
    sub_1001926D4((uint64_t)&unk_1002DB8A8);
    v5 = v4;
    sub_100192488((uint64_t)&unk_1002DB9F8);
    v7[0] = v2;
    v7[1] = v3;
    v7[2] = v5;
    v7[3] = v6;
    swift_getOpaqueTypeConformance2(v7, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_1001926D4((uint64_t)&unk_1002DB200);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBA28);
  }
  return result;
}

uint64_t sub_1001928FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267D38, 1);
}

void *sub_10019290C()
{
  return &protocol witness table for Never;
}

void *sub_100192940(uint64_t a1)
{
  const void *v1;

  return memcpy((void *)(a1 + 16), v1, 0xA8uLL);
}

uint64_t sub_100192950()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100192958(uint64_t a1)
{
  return swift_allocObject(a1, 184, 7);
}

uint64_t sub_100192964()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 24));
}

uint64_t sub_10019296C()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 112));
}

uint64_t sub_100192974()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 32));
}

uint64_t *sub_10019297C()
{
  uint64_t *v0;

  return sub_10016EA78(v0);
}

uint64_t sub_100192984(uint64_t a1, uint64_t a2)
{
  return swift_getOpaqueTypeConformance2(a1, a2, 1);
}

uint64_t sub_10019298C(uint64_t a1, uint64_t *a2)
{
  return sub_10010AD84(a2);
}

uint64_t sub_100192994(uint64_t a1)
{
  return State.wrappedValue.getter(a1);
}

_QWORD *sub_1001929A0()
{
  uint64_t v0;

  return State.init(wrappedValue:)((_QWORD *)(v0 - 120), v0 - 128);
}

uint64_t sub_1001929AC()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 40));
}

uint64_t sub_1001929B4(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  type metadata accessor for NameAndPhotoUtilities(0);
  v2 = (void *)static NameAndPhotoUtilities.shared.getter();
  v3 = NameAndPhotoUtilities.currentIMNickname(matching:)(a1);

  return v3;
}

id PHScreenSharingContainerViewController.makeScreenShareViewController()()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SharedContentViewController(0)), "init");
  v2 = sub_100192ACC();
  v3 = swift_unknownObjectRetain(v0);
  dispatch thunk of SharedContentViewController.delegate.setter(v3, v2);
  type metadata accessor for ScreenSharingStateMonitor(0);
  v4 = (void *)static ScreenSharingStateMonitor.sharedMonitor.getter();
  v5 = v1;
  dispatch thunk of ScreenSharingStateMonitor.addObserver(_:)();

  return v5;
}

unint64_t sub_100192ACC()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1002DBA30;
  if (!qword_1002DBA30)
  {
    v1 = sub_100192B0C();
    result = swift_getWitnessTable(&protocol conformance descriptor for PHScreenSharingContainerViewController, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBA30);
  }
  return result;
}

unint64_t sub_100192B0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBA38;
  if (!qword_1002DBA38)
  {
    v1 = objc_opt_self(PHScreenSharingContainerViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DBA38);
  }
  return result;
}

void PHScreenSharingContainerViewController.sharedContentViewControllerDidUpdateScreenInfo(_:)()
{
  void *v0;
  id v1;
  id v2;

  objc_msgSend(v0, "updatePresenterNameAndAvatar");
  v1 = sub_100192BF8();
  objc_msgSend(v1, "updatePIPSize");

  v2 = sub_100192BF8();
  objc_msgSend(v2, "updatePIPFrame");

}

id sub_100192BF8()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 3760));
}

uint64_t ScoreController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___ScoreController_delegate;
  sub_100111F6C(v0 + OBJC_IVAR___ScoreController_delegate, (uint64_t)v3, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

double ScoreController.delegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR___ScoreController_delegate;
  sub_100111F6C(v3, (uint64_t)v5, 1);
  swift_unknownObjectWeakAssign(v3, a1);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*ScoreController.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___ScoreController_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  sub_100111F6C(v1 + v4, (uint64_t)v3, 33);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_100192D74;
}

void sub_100192D74(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

id ScoreController.init()()
{
  char *v0;
  objc_super v2;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___ScoreController_delegate]);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScoreController();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for ScoreController()
{
  return objc_opt_self(ScoreController);
}

void *sub_100192E64(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  void *result;
  void *v7;
  _BYTE v8[24];

  v5 = v2 + OBJC_IVAR___ScoreController_delegate;
  sub_100111F6C(v5, (uint64_t)v8, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    if (a1 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (a1 <= 0x7FFFFFFF)
    {
      v7 = result;
      objc_msgSend(result, "sendUserRating:dontShowPromptAgain:", a1, a2 & 1);
      return (void *)swift_unknownObjectRelease(v7);
    }
    __break(1u);
  }
  return result;
}

id ScoreController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScoreController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void *sub_100192F2C()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100192F48@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for ScoreController();
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

void sub_100192F80(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHBackgroundGradientBlurView_metalView);
}

void sub_100192F8C(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHBackgroundGradientBlurView_renderer);
}

id sub_100192FB8()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PHBackgroundGradientBlurView_image);
}

void sub_100193010(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR___PHBackgroundGradientBlurView_image);
  *(_QWORD *)(v1 + OBJC_IVAR___PHBackgroundGradientBlurView_image) = a1;
  v3 = a1;

  sub_100193054();
}

void sub_100193054()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___PHBackgroundGradientBlurView_image);
  v2 = v1;
  sub_1001931F4((uint64_t)v1);

}

void sub_100193094()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR___PHBackgroundGradientBlurView_metalView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___PHBackgroundGradientBlurView_renderer] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/BackgroundGradientBlurView.swift", 46, 2);
  __break(1u);
}

id sub_100193120(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR___PHBackgroundGradientBlurView_metalView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___PHBackgroundGradientBlurView_renderer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___PHBackgroundGradientBlurView_image] = a1;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for BackgroundGradientBlurView();
  v3 = a1;
  v4 = objc_msgSendSuper2(&v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100193270();
  v5 = v3;
  sub_1001931F4((uint64_t)v3);

  return v4;
}

id sub_1001931F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v5;
  id result;

  v2 = v1;
  v3 = *(void **)(v1 + OBJC_IVAR___PHBackgroundGradientBlurView_renderer);
  if (v3)
  {
    v5 = v3;
    dispatch thunk of Backdrop.CompositeRenderer.setImage(_:animated:)(a1, 0);

  }
  result = *(id *)(v2 + OBJC_IVAR___PHBackgroundGradientBlurView_metalView);
  if (result)
    return objc_msgSend(result, "setNeedsDisplay");
  return result;
}

uint64_t sub_100193270()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;

  v1 = v0;
  v2 = sub_1001085C0(&qword_1002DBAB0);
  __chkstk_darwin(v2, v3);
  sub_10010BC88();
  v6 = v5 - v4;
  v7 = sub_1001085C0(&qword_1002DBAB8);
  __chkstk_darwin(v7, v8);
  sub_10010BC88();
  v11 = v10 - v9;
  v12 = type metadata accessor for MetalContext(0);
  v13 = *(_QWORD *)(v12 - 8);
  v15 = __chkstk_darwin(v12, v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v15, v18);
  v21 = (char *)&v46 - v20;
  if (!*(_QWORD *)&v1[OBJC_IVAR___PHBackgroundGradientBlurView_metalView])
  {
    static MetalContext.shared.getter(result);
    if (sub_100109FF4(v11, 1, v12) == 1)
    {
      return sub_100193880(v11);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v21, v11, v12);
      v22 = objc_msgSend(v1, "bounds");
      v24 = v23;
      v26 = v25;
      v28 = v27;
      v30 = v29;
      v31 = MetalContext.device.getter(v22);
      v32 = objc_msgSend(objc_allocWithZone((Class)MTKView), "initWithFrame:device:", v31, v24, v26, v28, v30);
      objc_msgSend(v32, "setAutoresizingMask:", 18, swift_unknownObjectRelease(v31).n128_f64[0]);
      v33 = sub_100193938();
      objc_msgSend(v33, "setAllowsDisplayCompositing:", 0);

      if ((MetalContext.supportsBGRA10.getter(objc_msgSend(v32, "setEnableSetNeedsDisplay:", 1)) & 1) != 0)
        objc_msgSend(v32, "setColorPixelFormat:", 552);
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v21, v12);
      v34 = type metadata accessor for Backdrop.ViewConfiguration(0);
      sub_100108600(v6, 1, 1, v34);
      v35 = objc_allocWithZone((Class)type metadata accessor for Backdrop.CompositeRenderer(0));
      v36 = (void *)Backdrop.CompositeRenderer.init(context:configuration:)(v17, v6);
      v37 = sub_1001938C0();
      v38 = swift_unknownObjectRetain(v1);
      dispatch thunk of Backdrop.CompositeRenderer.observer.setter(v38, v37);
      v39 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
      dispatch thunk of Backdrop.CompositeRenderer.setPlaceholderColor(_:animated:)();

      dispatch thunk of Backdrop.CompositeRenderer.framebufferPixelFormat.setter(objc_msgSend(v32, "colorPixelFormat"));
      dispatch thunk of Backdrop.CompositeRenderer.isBehindLyrics.setter(1);
      objc_msgSend(v32, "setDelegate:", v36);
      v40 = sub_100193938();
      sub_1001938FC();
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterVibrantLight);
      v43 = sub_100193604(v41, v42);
      objc_msgSend(v40, "setCompositingFilter:", v43);

      v44 = v32;
      sub_100192F80((uint64_t)v32);
      v45 = v36;
      sub_100192F8C((uint64_t)v36);
      objc_msgSend(v1, "addSubview:", v44);

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v21, v12);
    }
  }
  return result;
}

id sub_100193604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  NSString v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend(v4, "initWithType:", v5);

  return v6;
}

void sub_100193674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;

  v1 = type metadata accessor for Backdrop.State(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  sub_10010BC88();
  v6 = v5 - v4;
  dispatch thunk of Backdrop.CompositeRenderer.state.getter();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v6, v1);
  if (v7 == enum case for Backdrop.State.none(_:))
  {
    v8 = *(void **)(v0 + OBJC_IVAR___PHBackgroundGradientBlurView_metalView);
    if (!v8)
      return;
    v9 = v8;
    v10 = static Backdrop.PerformanceConcessions.getter();
LABEL_7:
    objc_msgSend(v9, "setPreferredFramesPerSecond:", v10);

    return;
  }
  v11 = *(void **)(v0 + OBJC_IVAR___PHBackgroundGradientBlurView_metalView);
  if (v7 == enum case for Backdrop.State.transitioning(_:))
  {
    if (!v11)
      return;
    v9 = v11;
    static Backdrop.PerformanceConcessions.getter();
    v10 = v12;
    goto LABEL_7;
  }
  if (v11)
  {
    v13 = v11;
    objc_msgSend(v13, "setPreferredFramesPerSecond:", static Backdrop.PerformanceConcessions.getter());

  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
}

void sub_1001937AC()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.BackgroundGradientBlurView", 40, "init(frame:)", 12, 0);
  __break(1u);
}

id sub_1001937E4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundGradientBlurView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BackgroundGradientBlurView()
{
  return objc_opt_self(PHBackgroundGradientBlurView);
}

uint64_t sub_100193880(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1001085C0(&qword_1002DBAB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001938C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBAC0;
  if (!qword_1002DBAC0)
  {
    v1 = type metadata accessor for BackgroundGradientBlurView();
    result = swift_getWitnessTable(&unk_100244C1C, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBAC0);
  }
  return result;
}

unint64_t sub_1001938FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBAC8;
  if (!qword_1002DBAC8)
  {
    v1 = objc_opt_self(CAFilter);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002DBAC8);
  }
  return result;
}

id sub_100193938()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 560));
}

uint64_t destroy for ClarityUIInCallKeypadView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_release(a1[6]);
}

uint64_t initializeWithCopy for ClarityUIInCallKeypadView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  v6 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v6;
  v7 = a2[6];
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t *assignWithCopy for ClarityUIInCallKeypadView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a1[1];
  v7 = a2[1];
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  a1[4] = a2[4];
  v10 = a2[5];
  v11 = a1[5];
  a1[5] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a1[6];
  v13 = a2[6];
  a1[6] = v13;
  swift_retain(v13);
  swift_release(v12);
  return a1;
}

__n128 initializeWithTake for ClarityUIInCallKeypadView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClarityUIInCallKeypadView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIInCallKeypadView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIInCallKeypadView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIInCallKeypadView()
{
  return &type metadata for ClarityUIInCallKeypadView;
}

uint64_t sub_100193BE0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267E90, 1);
}

uint64_t sub_100193BF0()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100193C10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for ColorScheme(0);
  __chkstk_darwin(v2, v3);
  sub_10010BC88();
  v6 = v5 - v4;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v5 - v4, a1);
  return EnvironmentValues.colorScheme.setter(v6);
}

void sub_100193C84(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = v1;
  v61 = a1;
  v3 = type metadata accessor for MoveTransition(0);
  v59 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  v5 = __chkstk_darwin(v3, v4);
  v58 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  v57 = (char *)&v54 - v8;
  v9 = type metadata accessor for ColorScheme(0);
  v55 = *(_QWORD *)(v9 - 8);
  v56 = v9;
  __chkstk_darwin(v9, v10);
  sub_10010BC88();
  v13 = v12 - v11;
  sub_1001085C0(&qword_1002DBAD0);
  sub_100120AA0();
  __chkstk_darwin(v14, v15);
  sub_10010BC88();
  v18 = v17 - v16;
  v19 = sub_1001085C0(&qword_1002DBAD8);
  sub_100120AA0();
  __chkstk_darwin(v20, v21);
  sub_10010BC88();
  v24 = v23 - v22;
  v25 = sub_1001085C0(&qword_1002DBAE0);
  sub_100120AA0();
  __chkstk_darwin(v26, v27);
  sub_10010BC88();
  v30 = v29 - v28;
  v31 = sub_1001085C0(&qword_1002DBAE8);
  sub_100120AA0();
  __chkstk_darwin(v32, v33);
  sub_10010BC88();
  v36 = v35 - v34;
  *(_QWORD *)v18 = static HorizontalAlignment.center.getter(v37);
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 0;
  v38 = sub_1001085C0(&qword_1002DBAF0);
  v39 = sub_100193FDC(v2, (uint64_t *)(v18 + *(int *)(v38 + 44)));
  LOBYTE(v2) = static Edge.Set.bottom.getter(v39);
  sub_1001569D0(v18, v24, &qword_1002DBAD0);
  *(_BYTE *)(v24 + *(int *)(v19 + 36)) = v2;
  sub_10011ABE4(v18, &qword_1002DBAD0);
  v40 = static Color.clarityUIContentBackground.getter();
  LOBYTE(v19) = static Edge.Set.all.getter(v40);
  sub_1001569D0(v24, v30, &qword_1002DBAD8);
  v41 = v30 + *(int *)(v25 + 36);
  *(_QWORD *)v41 = v40;
  *(_BYTE *)(v41 + 8) = v19;
  sub_10011ABE4(v24, &qword_1002DBAD8);
  KeyPath = swift_getKeyPath(&unk_100244CC0);
  v44 = v55;
  v43 = v56;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v13, enum case for ColorScheme.dark(_:), v56);
  v45 = (uint64_t *)(v36 + *(int *)(v31 + 36));
  v46 = sub_1001085C0(&qword_1002DB500);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))((char *)v45 + *(int *)(v46 + 28), v13, v43);
  *v45 = KeyPath;
  sub_1001569D0(v30, v36, &qword_1002DBAE0);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v13, v43);
  sub_10011ABE4(v30, &qword_1002DBAE0);
  v47 = v57;
  MoveTransition.init(edge:)(3);
  v48 = v58;
  v49 = v59;
  v50 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, v47, v60);
  sub_10015C704(&qword_1002DB598, (uint64_t (*)(uint64_t))&type metadata accessor for MoveTransition);
  v52 = AnyTransition.init<A>(_:)(v48, v50, v51);
  v53 = v61;
  sub_1001569D0(v36, v61, &qword_1002DBAE8);
  *(_QWORD *)(v53 + *(int *)(sub_1001085C0(&qword_1002DBAF8) + 36)) = v52;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v50);
  sub_10011ABE4(v36, &qword_1002DBAE8);
}

uint64_t sub_100193FDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t OpaqueTypeConformance2;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  char *v81;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  _QWORD v99[6];

  v89 = a2;
  v92 = sub_1001085C0(&qword_1002DB878);
  v94 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92, v3);
  v90 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1001085C0(&qword_1002DBB00);
  v95 = *(_QWORD *)(v5 - 8);
  v96 = v5;
  __chkstk_darwin(v5, v6);
  v91 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1001085C0(&qword_1002DBB08);
  v9 = __chkstk_darwin(v93, v8);
  v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  v98 = (uint64_t)&v83 - v13;
  v14 = type metadata accessor for ClarityUIKeypadView(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1001085C0(&qword_1002DBB10);
  v21 = __chkstk_darwin(v19, v20);
  v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v24);
  v26 = (char *)&v83 - v25;
  v27 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000017, 0x80000001001F6480);
  v87 = Text.init(_:tableName:bundle:comment:)(v27);
  v86 = v28;
  v88 = v29;
  v31 = v30 & 1;
  v85 = Image.init(systemName:)(0xD000000000000014, 0x80000001001F6460);
  v32 = swift_allocObject(&unk_10028D3D8, 72, 7);
  v33 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v32 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v32 + 32) = v33;
  *(_OWORD *)(v32 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v32 + 64) = *(_QWORD *)(a1 + 48);
  sub_100194B48((uint64_t *)a1);
  v34 = ClarityUIKeypadView.init(didEnterNumberAction:)(sub_100194B40, v32);
  v35 = static ClarityUIMetrics.componentHorizontalPadding.getter(v34);
  LOBYTE(v32) = static Edge.Set.all.getter(v36);
  v37 = EdgeInsets.init(_all:)(v35);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v23, v18, v14);
  v44 = &v23[*(int *)(v19 + 36)];
  v97 = v23;
  *v44 = v32;
  *((double *)v44 + 1) = v37;
  *((_QWORD *)v44 + 2) = v39;
  *((_QWORD *)v44 + 3) = v41;
  *((_QWORD *)v44 + 4) = v43;
  v44[40] = 0;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  sub_100156A28((uint64_t)v23, (uint64_t)v26, &qword_1002DBB10);
  v45 = swift_allocObject(&unk_10028D400, 72, 7);
  v46 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v45 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v45 + 32) = v46;
  *(_OWORD *)(v45 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v45 + 64) = *(_QWORD *)(a1 + 48);
  sub_100194B48((uint64_t *)a1);
  v47 = sub_1001085C0(&qword_1002DB888);
  v48 = sub_10010AD84(&qword_1002DB890);
  v49 = type metadata accessor for MultimodalNavigationBackButtonLabelStyle(255);
  sub_10010B56C(&qword_1002DB898, &qword_1002DB890);
  v51 = v50;
  sub_10015C704(&qword_1002DB8A0, (uint64_t (*)(uint64_t))&type metadata accessor for MultimodalNavigationBackButtonLabelStyle);
  v99[0] = v48;
  v99[1] = v49;
  v99[2] = v51;
  v99[3] = v52;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v99, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v54 = v90;
  Button.init(action:label:)(sub_100194BF0, v45, sub_1001948E8, 0, v47, OpaqueTypeConformance2);
  sub_10010B56C(&qword_1002DB8A8, &qword_1002DB878);
  v56 = v55;
  v57 = sub_100194BF8();
  v59 = v91;
  v58 = v92;
  View.buttonStyle<A>(_:)(v57, v92, &_s13InCallService15BackButtonStyleVN_0, v56, v57);
  v60 = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v54, v58);
  v61 = static ClarityUIMetrics.backButtonPadding.getter(v60);
  LOBYTE(v56) = static Edge.Set.all.getter(v62);
  v63 = EdgeInsets.init(_all:)(v61);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v70 = v95;
  v71 = v96;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v11, v59, v96);
  v72 = &v11[*(int *)(v93 + 36)];
  *v72 = v56;
  *((double *)v72 + 1) = v63;
  *((_QWORD *)v72 + 2) = v65;
  *((_QWORD *)v72 + 3) = v67;
  *((_QWORD *)v72 + 4) = v69;
  v72[40] = 0;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v71);
  v73 = v98;
  sub_100156A28((uint64_t)v11, v98, &qword_1002DBB08);
  LOBYTE(v56) = v31;
  LOBYTE(v99[0]) = v31;
  v84 = v26;
  v74 = (uint64_t)v97;
  sub_1001569D0((uint64_t)v26, (uint64_t)v97, &qword_1002DBB10);
  sub_1001569D0(v73, (uint64_t)v11, &qword_1002DBB08);
  v76 = v87;
  v75 = v88;
  v77 = v89;
  v78 = v86;
  *v89 = v87;
  v77[1] = v78;
  *((_BYTE *)v77 + 16) = v56;
  LOBYTE(v70) = v56;
  v79 = v85;
  v77[3] = v75;
  v77[4] = v79;
  v77[5] = 0;
  *((_BYTE *)v77 + 48) = 0;
  v80 = (int *)sub_1001085C0(&qword_1002DBB20);
  sub_1001569D0(v74, (uint64_t)v77 + v80[16], &qword_1002DBB10);
  v81 = (char *)v77 + v80[20];
  *(_QWORD *)v81 = 0;
  v81[8] = 0;
  sub_1001569D0((uint64_t)v11, (uint64_t)v77 + v80[24], &qword_1002DBB08);
  sub_10014F068(v76, v78, v70);
  swift_bridgeObjectRetain(v75);
  swift_retain();
  sub_10014F068(v76, v78, v70);
  swift_bridgeObjectRetain(v75);
  swift_retain();
  sub_10011ABE4(v98, &qword_1002DBB08);
  sub_10011ABE4((uint64_t)v84, &qword_1002DBB10);
  sub_10014F058(v76, v78, v70);
  swift_release();
  swift_bridgeObjectRelease(v75);
  sub_10011ABE4((uint64_t)v11, &qword_1002DBB08);
  sub_10011ABE4((uint64_t)v97, &qword_1002DBB10);
  sub_10014F058(v76, v78, v99[0]);
  swift_release();
  return swift_bridgeObjectRelease(v75);
}

void sub_100194634(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  Swift::String v6;
  id v7;
  NSString v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD v16[2];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v21 = *(_OWORD *)(a3 + 32);
  v22 = *(_QWORD *)(a3 + 48);
  sub_100156A28((uint64_t)&v22, (uint64_t)&v24, &qword_1002DBB28);
  v23 = v21;
  sub_100194C34((uint64_t)&v23);
  sub_10011D0E8(&v24);
  v5 = sub_1001085C0(&qword_1002DBB30);
  State.wrappedValue.getter(v5);
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  v17 = v21;
  v18 = v22;
  v16[0] = v19;
  v16[1] = v20;
  State.wrappedValue.setter(v16, v5);
  sub_100194C5C((uint64_t)&v23);
  sub_10011D210(&v24);
  v7 = sub_10019A684();
  if (!objc_msgSend(v7, "shouldPlayDTMFTone"))
  {
    v8 = v7;
LABEL_12:

    return;
  }
  v8 = String._bridgeToObjectiveC()();
  if ((uint64_t)objc_msgSend(v8, "length") < 1)
  {
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100108664(v10, (uint64_t)&unk_1002E2D90);
    v13 = Logger.logObject.getter(v11, v12);
    v14 = static os_log_type_t.error.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unexpectedly missing number string for keypad button.", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    goto LABEL_11;
  }
  v9 = objc_msgSend(v8, "characterAtIndex:", 0);
  if (v9 < 0x100)
  {
    objc_msgSend(v7, "playDTMFToneForKey:", v9);
LABEL_11:

    goto LABEL_12;
  }
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  __break(1u);
}

uint64_t sub_100194898(uint64_t a1)
{
  uint64_t v1;
  char v3;
  __int128 v4;
  char v5;

  v4 = *(_OWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 24);
  v3 = 0;
  v1 = sub_1001085C0(&qword_1002DB5C0);
  return Binding.wrappedValue.setter(&v3, v1);
}

uint64_t sub_1001948E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = type metadata accessor for MultimodalNavigationBackButtonLabelStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1001085C0(&qword_1002DB890);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Label.init(title:icon:)(sub_100194A64, 0, sub_10018D150, 0, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
  MultimodalNavigationBackButtonLabelStyle.init()(v10);
  sub_10010B56C(&qword_1002DB898, &qword_1002DB890);
  v12 = v11;
  sub_10015C704(&qword_1002DB8A0, (uint64_t (*)(uint64_t))&type metadata accessor for MultimodalNavigationBackButtonLabelStyle);
  View.labelStyle<A>(_:)(v4, v5, v0, v12, v13);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100194A64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x80000001001F63E0);
  result = Text.init(_:tableName:bundle:comment:)(v2);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

void sub_100194AD8(uint64_t a1@<X8>)
{
  sub_100193C84(a1);
}

uint64_t sub_100194B18()
{
  return EnvironmentValues.colorScheme.getter();
}

void sub_100194B40(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_100194634(a1, a2, v2 + 16);
}

uint64_t *sub_100194B48(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[5];
  swift_retain(a1[6]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t sub_100194BAC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100194BF0()
{
  uint64_t v0;

  return sub_100194898(v0 + 16);
}

unint64_t sub_100194BF8()
{
  unint64_t result;

  result = qword_1002DBB18;
  if (!qword_1002DBB18)
  {
    result = swift_getWitnessTable(&unk_100244D00, &_s13InCallService15BackButtonStyleVN_0);
    atomic_store(result, (unint64_t *)&qword_1002DBB18);
  }
  return result;
}

uint64_t sub_100194C34(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100194C5C(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100194C84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for PlatterButtonType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ButtonStyleConfiguration(0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v11 + 16))(v10, a1);
  v16 = static Color.clarityUIButtonBackground.getter(v12);
  v13 = static Color.white.getter(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for PlatterButtonType.ultraRoundedRectangle(_:), v2);
  return PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)(v10, &v16, v13, v6, 1, &type metadata for Color, &protocol witness table for Color);
}

ValueMetadata *_s13InCallService15BackButtonStyleVMa_0()
{
  return &_s13InCallService15BackButtonStyleVN_0;
}

unint64_t sub_100194DAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBB38;
  if (!qword_1002DBB38)
  {
    v1 = sub_10010AD84(&qword_1002DBAF8);
    sub_100194E30();
    sub_10010B56C(&qword_1002DBB60, &qword_1002DBB68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBB38);
  }
  return result;
}

unint64_t sub_100194E30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBB40;
  if (!qword_1002DBB40)
  {
    v1 = sub_10010AD84(&qword_1002DBAE8);
    sub_100194EB4();
    sub_10010B56C(&qword_1002DB7D0, &qword_1002DB500);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBB40);
  }
  return result;
}

unint64_t sub_100194EB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBB48;
  if (!qword_1002DBB48)
  {
    v1 = sub_10010AD84(&qword_1002DBAE0);
    sub_100194F38();
    sub_10010B56C(&qword_1002D9608, &qword_1002D9610);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBB48);
  }
  return result;
}

unint64_t sub_100194F38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBB50;
  if (!qword_1002DBB50)
  {
    v1 = sub_10010AD84(&qword_1002DBAD8);
    sub_10010B56C(&qword_1002DBB58, &qword_1002DBAD0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBB50);
  }
  return result;
}

uint64_t sub_100194FBC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100267EB8, 1);
}

void sub_100194FCC()
{
  sub_10010B56C(&qword_1002DBA08, &qword_1002DBA10);
}

uint64_t sub_100194FFC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return v2 & 1;
  if (*(_BYTE *)(a2 + 32) == (result & 1))
  {
    LOBYTE(v2) = 1;
    return v2 & 1;
  }
  if (v2 == 1)
  {
    LOBYTE(v2) = 0;
    return v2 & 1;
  }
  v3 = 33;
  while (1)
  {
    v4 = v3 - 31;
    if (__OFADD__(v3 - 32, 1))
      break;
    v5 = *(_BYTE *)(a2 + v3) ^ result;
    if ((v5 & 1) != 0)
    {
      ++v3;
      if (v4 != v2)
        continue;
    }
    LOBYTE(v2) = v5 ^ 1;
    return v2 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100195068(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = sub_100150C28(v7, v8);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (sub_100150C28(v14, v15) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100195114(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 v3;
  uint64_t i;
  uint64_t v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v5 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v3 = v6;
    v6 = v6 || v5 == v2;
    if (v6)
      return v3;
  }
  __break(1u);
  return result;
}

void sub_100195174(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_10014CB24();
  v1(v2);
  sub_100110F0C();
  sub_100109438();
}

uint64_t sub_1001951A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_1001951B8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x80000001001F68F0, "InCallService/PillStateMonitor.swift", 36, 2);
  __break(1u);
}

void sub_100195210()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000044, 0x80000001001F68A0, "InCallService/PillStateMonitor.swift", 36, 2);
  __break(1u);
}

void sub_100195268()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000043, 0x80000001001F6850, "InCallService/PillStateMonitor.swift", 36, 2);
  __break(1u);
}

void sub_1001952C0()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x80000001001F6810, "InCallService/PillStateMonitor.swift", 36, 2);
  __break(1u);
}

void sub_10019532C()
{
  sub_100198374(OBJC_IVAR___ICSPillStateMonitor_hasCurrentCalls);
  sub_10015C874();
  sub_100109438();
}

char *sub_10019536C()
{
  _QWORD *v0;
  _QWORD *v1;
  objc_class *ObjectType;
  void *v3;
  id v4;
  char *v5;
  uint64_t v6;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  sub_100156AB4(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v3 = (void *)static OS_dispatch_queue.main.getter();
  v4 = objc_allocWithZone(ObjectType);
  v5 = sub_100195430(v3);
  v6 = swift_getObjectType(v1);
  swift_deallocPartialClassInstance(v1, v6, *(unsigned int *)((swift_isaMask & *v1) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v1) + 0x34));
  return v5;
}

char *sub_100195430(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (**v31)();
  void (**v32)();
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  char *v65;
  char *v67;
  id v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[3];
  objc_super v79;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  sub_1001085C0(&qword_1002D9F18);
  sub_10011AE0C();
  __chkstk_darwin(v5, v6);
  sub_10011ADE4();
  v73 = v7;
  v8 = sub_1001085C0(&qword_1002DBCF0);
  v9 = *(_QWORD *)(v8 - 8);
  v74 = v8;
  v75 = v9;
  sub_10011AE0C();
  __chkstk_darwin(v10, v11);
  sub_10011ADE4();
  v71 = v12;
  v13 = sub_1001085C0(&qword_1002DBCF8);
  v14 = *(_QWORD *)(v13 - 8);
  v76 = v13;
  v77 = v14;
  sub_10011AE0C();
  __chkstk_darwin(v15, v16);
  sub_10011ADE4();
  v72 = v17;
  v18 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v19 = *(_QWORD *)(v18 - 8);
  v21 = __chkstk_darwin(v18, v20);
  v23 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v21, v24);
  v27 = (char *)&v67 - v26;
  __chkstk_darwin(v25, v28);
  v30 = (char *)&v67 - v29;
  v31 = (void (**)())&v2[OBJC_IVAR___ICSPillStateMonitor_viewState];
  *v31 = sub_1001951B8;
  v31[1] = 0;
  v31[2] = sub_100195210;
  v31[3] = 0;
  v31[4] = sub_100195268;
  v31[5] = 0;
  v32 = (void (**)())&v2[OBJC_IVAR___ICSPillStateMonitor_hasCurrentCalls];
  *v32 = sub_1001952C0;
  v32[1] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___ICSPillStateMonitor_subscriptions] = &_swiftEmptySetSingleton;
  v33 = &v2[OBJC_IVAR___ICSPillStateMonitor_timerState];
  *(_OWORD *)v33 = 0u;
  *((_OWORD *)v33 + 1) = 0u;
  *((_QWORD *)v33 + 4) = 0;
  v34 = (uint64_t)&v2[OBJC_IVAR___ICSPillStateMonitor_state];
  v35 = type metadata accessor for PillStateMonitor.Snapshot(0);
  sub_100108600(v34, 1, 2, v35);
  *(_QWORD *)&v2[OBJC_IVAR___ICSPillStateMonitor_queue] = a1;
  v79.receiver = v2;
  v79.super_class = ObjectType;
  v68 = a1;
  v36 = objc_msgSendSuper2(&v79, "init");
  objc_opt_self(NSNotificationCenter);
  v37 = (char *)v36;
  v38 = sub_10019839C();
  v70 = v30;
  sub_10015C8B4(TUCallCenterCallStatusChangedNotification);

  v39 = sub_10019839C();
  v69 = v27;
  sub_10015C8B4(TUCallCenterVideoCallStatusChangedNotification);

  v40 = sub_10019839C();
  v67 = v23;
  sub_10015C8B4((uint64_t)CFSTR("PHPIPControllerStateDidChangeNotification"));

  v41 = sub_1001085C0(&qword_1002DBD00);
  v42 = *(_QWORD *)(v19 + 72);
  v43 = *(unsigned __int8 *)(v19 + 80);
  v44 = (v43 + 32) & ~v43;
  v45 = swift_allocObject(v41, v44 + 3 * v42, v43 | 7);
  *(_OWORD *)(v45 + 16) = xmmword_100244D40;
  v46 = v45 + v44;
  sub_100198400(v46, (uint64_t)v30);
  sub_100198400(v46 + v42, (uint64_t)v27);
  sub_100198400(v46 + 2 * v42, (uint64_t)v23);
  sub_10015C704((unint64_t *)&qword_1002DC4E0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  v47 = v71;
  v49.n128_f64[0] = Publishers.MergeMany.init(_:)(v45, v18, v48);
  v50 = v68;
  v78[0] = v68;
  v51 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0, v49);
  v52 = v73;
  sub_100108600(v73, 1, 1, v51);
  sub_100156AB4(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v54 = v53;
  sub_10010B56C(&qword_1002DBD08, &qword_1002DBCF0);
  v56 = v55;
  v57 = sub_10015AD40();
  v58 = v72;
  v59 = v74;
  Publisher.receive<A>(on:options:)(v78, v52, v74, v54, v56, v57);
  sub_10010A03C(v52, &qword_1002D9F18);
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v47, v59);
  v60 = swift_allocObject(&unk_10028D6D0, 24, 7);
  swift_unknownObjectWeakInit(v60 + 16);
  sub_10010B56C(&qword_1002DBD10, &qword_1002DBCF8);
  v61 = v76;
  Publisher<>.sink(receiveValue:)(sub_100196F44, v60, v76, v62);
  v63 = swift_release();
  v64 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v77 + 8))(v58, v61, v63);
  v65 = &v37[OBJC_IVAR___ICSPillStateMonitor_subscriptions];
  sub_1001983E4(v64, (uint64_t)v78);
  AnyCancellable.store(in:)(v65);
  swift_endAccess(v78);

  sub_100110F0C();
  sub_100143BF8((uint64_t)v67);
  sub_100143BF8((uint64_t)v69);
  sub_100143BF8((uint64_t)v70);
  return v37;
}

void sub_100195920()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  int v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  __n128 v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  __n128 v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint8_t *v85;
  uint8_t *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  void *v94;
  uint64_t v95;
  _QWORD v96[4];
  char v97;
  char v98[32];

  v1 = v0;
  v2 = type metadata accessor for PillStateMonitor.State(0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001085C0(&qword_1002D9F18);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1001085C0(&qword_1002D9F58);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1001085C0(&qword_1002D9F60);
  v89 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchPredicate(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  v22 = (uint8_t **)((char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(void **)&v1[OBJC_IVAR___ICSPillStateMonitor_queue];
  *v22 = v23;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v18);
  v88 = v23;
  v24 = _dispatchPreconditionTest(_:)(v22);
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v22, v18);
  if ((v24 & 1) == 0)
  {
    __break(1u);
LABEL_25:
    swift_once(&qword_1002D7288, sub_10010BF6C);
LABEL_12:
    v60 = type metadata accessor for Logger(0);
    sub_100108664(v60, (uint64_t)&unk_1002E2D60);
    v61 = v1;
    v63 = Logger.logObject.getter(v61, v62);
    v64 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc(22, -1);
      v66 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v92 = v66;
      *(_DWORD *)v65 = 136315394;
      v67 = 28516;
      if (!v24)
        v67 = 0x746F6E206F64;
      v68 = 0xE600000000000000;
      if (v24)
        v68 = 0xE200000000000000;
      v95 = v67;
      v96[0] = v68;
      v69 = String.init<A>(reflecting:)(&v95);
      v71 = v70;
      v95 = sub_100121E04(v69, v70, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v65 + 4, v65 + 12);
      swift_bridgeObjectRelease(v71);
      *(_WORD *)(v65 + 12) = 2080;
      sub_1001981FC(v18, (uint64_t)&v95);
      sub_10019C9E0((uint64_t)&v95);
      v73 = v72;
      v75 = v74;
      sub_10010A03C((uint64_t)&v95, &qword_1002DBD18);
      v95 = sub_100121E04(v73, v75, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v65 + 14, v65 + 22);

      swift_bridgeObjectRelease(v75);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "We %s have current calls, but timer state does not need to be changed (timerState: %s).", (uint8_t *)v65, 0x16u);
      swift_arrayDestroy(v66, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v66, -1, -1);
      swift_slowDealloc(v65, -1, -1);

    }
    else
    {

    }
    return;
  }
  v25 = *(uint64_t (**)(uint64_t))&v1[OBJC_IVAR___ICSPillStateMonitor_hasCurrentCalls];
  v26 = swift_retain();
  v27 = v25(v26);
  swift_release();
  v18 = (uint64_t)&v1[OBJC_IVAR___ICSPillStateMonitor_timerState];
  swift_beginAccess(&v1[OBJC_IVAR___ICSPillStateMonitor_timerState], v98, 0, 0);
  sub_1001981FC(v18, (uint64_t)&v95);
  v24 = v27 & 1;
  v97 = v24;
  if (v96[2])
  {
    if ((v24 & 1) != 0)
    {
      sub_100110DC0(&v95);
      goto LABEL_11;
    }
    if (qword_1002D7288 != -1)
      swift_once(&qword_1002D7288, sub_10010BF6C);
    v76 = type metadata accessor for Logger(0);
    v77 = sub_100108664(v76, (uint64_t)&unk_1002E2D60);
    v79 = Logger.logObject.getter(v77, v78);
    v81 = static os_log_type_t.default.getter(v80);
    if (os_log_type_enabled(v79, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v82 = 0;
      _os_log_impl((void *)&_mh_execute_header, v79, v81, "No longer have current calls, unsubscribing from pill state changes.", v82, 2u);
      swift_slowDealloc(v82, -1, -1);
    }

    v83 = type metadata accessor for PillStateMonitor.Snapshot(0);
    sub_100108600((uint64_t)v5, 1, 2, v83);
    v84 = (uint64_t)&v1[OBJC_IVAR___ICSPillStateMonitor_state];
    swift_beginAccess(&v1[OBJC_IVAR___ICSPillStateMonitor_state], &v92, 33, 0);
    sub_100198230((uint64_t)v5, v84);
    swift_endAccess(&v92);
    v94 = 0;
    v92 = 0u;
    v93 = 0u;
    swift_beginAccess(v18, &v90, 33, 0);
    sub_100198274((uint64_t)&v92, v18);
    swift_endAccess(&v90);
    sub_100110DC0(&v95);
  }
  else
  {
    if (!v24)
    {
LABEL_11:
      if (qword_1002D7288 == -1)
        goto LABEL_12;
      goto LABEL_25;
    }
    if (qword_1002D7288 != -1)
      swift_once(&qword_1002D7288, sub_10010BF6C);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100108664(v28, (uint64_t)&unk_1002E2D60);
    v31 = Logger.logObject.getter(v29, v30);
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v31, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v87 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v92 = v87;
      v86 = v34;
      *(_DWORD *)v34 = 136315138;
      v85 = v34 + 4;
      LOBYTE(v90) = v24;
      v35 = String.init<A>(reflecting:)(&v90);
      v37 = v36;
      v90 = (id)sub_100121E04(v35, v36, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v85, v34 + 12);
      swift_bridgeObjectRelease(v37);
      v38 = v86;
      _os_log_impl((void *)&_mh_execute_header, v31, v33, "Have current calls: %s, starting timer to poll for pill state changes.", v86, 0xCu);
      v39 = v87;
      swift_arrayDestroy(v87, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }

    sub_100156AB4(0, &qword_1002D9F78, NSTimer_ptr);
    v40 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v41 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    sub_100108600((uint64_t)v13, 1, 1, v41);
    v42 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v40, NSDefaultRunLoopMode, v13, 1.0);

    sub_10010A03C((uint64_t)v13, &qword_1002D9F58);
    *(_QWORD *)&v92 = v42;
    v43 = type metadata accessor for NSTimer.TimerPublisher(0);
    sub_10015C704(&qword_1002D9F80, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
    v45 = ConnectablePublisher.autoconnect()(v43, v44);
    v46 = swift_release();
    *(_QWORD *)&v92 = v45;
    v47 = v88;
    v90 = v88;
    v48 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0, v46);
    sub_100108600((uint64_t)v9, 1, 1, v48);
    v49 = v47;
    v50 = sub_1001085C0(&qword_1002D9F88);
    sub_100156AB4(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
    v52 = v51;
    sub_10010B56C(&qword_1002D9F90, &qword_1002D9F88);
    v54 = v53;
    v55 = sub_10015AD40();
    Publisher.receive<A>(on:options:)(&v90, v9, v50, v52, v54, v55);
    sub_10010A03C((uint64_t)v9, &qword_1002D9F18);

    swift_release();
    v56 = swift_allocObject(&unk_10028D6D0, 24, 7);
    swift_unknownObjectWeakInit(v56 + 16);
    sub_10010B56C(&qword_1002D9F98, &qword_1002D9F60);
    v58 = Publisher<>.sink(receiveValue:)(sub_1001982A8, v56, v14, v57);
    v59 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v89 + 8))(v17, v14, v59);
    *((_QWORD *)&v93 + 1) = type metadata accessor for AnyCancellable(0);
    v94 = &protocol witness table for AnyCancellable;
    *(_QWORD *)&v92 = v58;
    swift_beginAccess(v18, &v90, 33, 0);
    sub_100198274((uint64_t)&v92, v18);
    swift_endAccess(&v90);
  }
}

uint64_t sub_1001962DC()
{
  return type metadata accessor for PillStateMonitor(0);
}

uint64_t type metadata accessor for PillStateMonitor(uint64_t a1)
{
  return sub_100120158(a1, (uint64_t *)&unk_1002DBBC8, (uint64_t)&nominal type descriptor for PillStateMonitor);
}

uint64_t sub_1001962F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "0";
  v4[1] = (char *)&value witness table for () + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = &unk_100244D90;
  result = type metadata accessor for PillStateMonitor.State(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for PillStateMonitor.State(uint64_t a1)
{
  return sub_100120158(a1, (uint64_t *)&unk_1002DBC48, (uint64_t)&nominal type descriptor for PillStateMonitor.State);
}

void sub_1001963C8()
{
  sub_100198374(OBJC_IVAR___ICSPillStateMonitor_viewState);
  sub_10015C874();
  sub_100109438();
}

void sub_100196408(int a1, int a2, void *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  sub_100198384(a1, a2, a3);
  v4 = sub_1001983A8();
  sub_1001983F4(v4);
  v5 = sub_1001983CC();
  sub_100196444(v5, v6, v3);
  sub_1001362BC(v7);
}

uint64_t sub_100196444(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(v3 + *a3);
  v5 = v4[1];
  *v4 = a1;
  v4[1] = a2;
  return sub_10015C848(v5);
}

void sub_10019646C()
{
  sub_10014CB24();
  sub_10015C874();
  sub_100109438();
}

void sub_1001964B4(int a1, int a2, void *a3)
{
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  void *v6;

  sub_100198384(a1, a2, a3);
  v4 = sub_1001983A8();
  sub_1001983F4(v4);
  v5 = sub_1001983CC();
  v3(v5);
  sub_1001362BC(v6);
}

uint64_t sub_1001964EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + OBJC_IVAR___ICSPillStateMonitor_viewState;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR___ICSPillStateMonitor_viewState + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  return sub_10015C848(v4);
}

void sub_100196518()
{
  sub_10014CB24();
  sub_10015C874();
  sub_100109438();
}

ValueMetadata *type metadata accessor for PillStateMonitor.TimerState()
{
  return &type metadata for PillStateMonitor.TimerState;
}

uint64_t destroy for PillStateMonitor.ViewState(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  return swift_release(a1[5]);
}

uint64_t initializeWithCopy for PillStateMonitor.ViewState(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for PillStateMonitor.ViewState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v9 = a2[4];
  v8 = a2[5];
  v10 = a1[5];
  a1[4] = v9;
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t assignWithTake for PillStateMonitor.ViewState(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for PillStateMonitor.ViewState()
{
  return &type metadata for PillStateMonitor.ViewState;
}

uint64_t *sub_1001966E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for PillStateMonitor.Snapshot(0);
    if (sub_100109FF4((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      *((_BYTE *)a1 + *(int *)(v7 + 20)) = *((_BYTE *)a2 + *(int *)(v7 + 20));
      *((_BYTE *)a1 + *(int *)(v7 + 24)) = *((_BYTE *)a2 + *(int *)(v7 + 24));
      sub_100108600((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for PillStateMonitor.Snapshot(uint64_t a1)
{
  return sub_100120158(a1, qword_1002DBCB0, (uint64_t)&nominal type descriptor for PillStateMonitor.Snapshot);
}

uint64_t sub_1001967CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for PillStateMonitor.Snapshot(0);
  result = sub_100109FF4(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_100196828(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for PillStateMonitor.Snapshot(0);
  if (sub_100109FF4((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
    sub_100108600((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

_BYTE *sub_1001968DC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for PillStateMonitor.Snapshot(0);
  v7 = sub_100109FF4((uint64_t)a1, 2, v6);
  v8 = sub_100109FF4((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(a1, a2, v11);
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
      return a1;
    }
    sub_10015C804((uint64_t)a1, type metadata accessor for PillStateMonitor.Snapshot);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
  sub_100108600((uint64_t)a1, 0, 2, v6);
  return a1;
}

void *sub_100196A00(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for PillStateMonitor.Snapshot(0);
  if (sub_100109FF4((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
    sub_100108600((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

_BYTE *sub_100196AB4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for PillStateMonitor.Snapshot(0);
  v7 = sub_100109FF4((uint64_t)a1, 2, v6);
  v8 = sub_100109FF4((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(a1, a2, v11);
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
      return a1;
    }
    sub_10015C804((uint64_t)a1, type metadata accessor for PillStateMonitor.Snapshot);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
  sub_100108600((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_100196BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100196BE4);
}

void sub_100196BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PillStateMonitor.Snapshot(0);
  sub_100109FF4(a1, a2, v4);
  sub_100109438();
}

uint64_t sub_100196C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100196C30);
}

uint64_t sub_100196C30(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for PillStateMonitor.Snapshot(0);
  return sub_10015C850(a1, v5, a3, v6);
}

uint64_t sub_100196C74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PillStateMonitor.Snapshot(0);
  return sub_100109FF4(a1, 2, v2);
}

uint64_t sub_100196CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PillStateMonitor.Snapshot(0);
  return sub_100108600(a1, a2, 2, v4);
}

uint64_t sub_100196CDC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for PillStateMonitor.Snapshot(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 2);
    return 0;
  }
  return result;
}

uint64_t sub_100196D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100196D3C);
}

uint64_t sub_100196D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = type metadata accessor for Date(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_100109FF4(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 2)
    return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_100196DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100196DD0);
}

uint64_t sub_100196DD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for Date(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_10015C850(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_100196E3C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100244DD0;
    v4[2] = &unk_100244DD0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100196EB0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100196ED4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_100196EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + OBJC_IVAR___ICSPillStateMonitor_viewState;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR___ICSPillStateMonitor_viewState + 40);
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  return sub_10015C848(v4);
}

uint64_t sub_100196F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100196F18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100196F20()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100196F44(uint64_t a1)
{
  uint64_t v1;

  sub_10015ADF4(a1, v1, sub_100195920);
}

void sub_100196F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t (**v58)(uint64_t);
  uint64_t (*v59)(uint64_t);
  uint64_t (*v60)(void);
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  int v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182[4];

  v1 = v0;
  v2 = sub_1001085C0((uint64_t *)&unk_1002DC300);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v159 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_1001085C0(&qword_1002DBD20);
  __chkstk_darwin(v174, v6);
  v175 = (char *)&v159 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PillStateMonitor.State(0);
  v10 = __chkstk_darwin(v8, v9);
  v171 = (uint64_t)&v159 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  v178 = (uint64_t)&v159 - v13;
  v14 = type metadata accessor for PillStateMonitor.Snapshot(0);
  v16 = __chkstk_darwin(v14, v15);
  v166 = (uint64_t)&v159 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16, v18);
  v160 = (uint64_t)&v159 - v20;
  v22 = __chkstk_darwin(v19, v21);
  v161 = (uint64_t)&v159 - v23;
  v25 = __chkstk_darwin(v22, v24);
  v164 = (uint64_t)&v159 - v26;
  v28 = __chkstk_darwin(v25, v27);
  v168 = (uint64_t)&v159 - v29;
  v31 = __chkstk_darwin(v28, v30);
  v33 = (char *)&v159 - v32;
  v35 = __chkstk_darwin(v31, v34);
  v165 = (uint64_t)&v159 - v36;
  v38 = __chkstk_darwin(v35, v37);
  v40 = (char *)&v159 - v39;
  v42 = __chkstk_darwin(v38, v41);
  v167 = (uint64_t)&v159 - v43;
  v45 = __chkstk_darwin(v42, v44);
  v173 = (uint64_t)&v159 - v46;
  __chkstk_darwin(v45, v47);
  v49 = (char *)&v159 - v48;
  v50 = type metadata accessor for DispatchPredicate(0);
  v51 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50, v52);
  v54 = (uint64_t *)((char *)&v159 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = *(void **)(v1 + OBJC_IVAR___ICSPillStateMonitor_queue);
  *v54 = v55;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v51 + 104))(v54, enum case for DispatchPredicate.onQueue(_:), v50);
  v56 = v55;
  v57 = _dispatchPreconditionTest(_:)(v54);
  (*(void (**)(_QWORD *, uint64_t))(v51 + 8))(v54, v50);
  if ((v57 & 1) != 0)
  {
    v162 = v33;
    v163 = v40;
    v169 = v5;
    v176 = v14;
    v177 = v49;
    v172 = v1;
    v58 = (uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___ICSPillStateMonitor_viewState);
    v59 = *(uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___ICSPillStateMonitor_viewState + 16);
    v60 = *(uint64_t (**)(void))(v1 + OBJC_IVAR___ICSPillStateMonitor_viewState + 32);
    v61 = sub_1001085C0(&qword_1002D9FA0);
    v57 = swift_allocObject(v61, 34, 7);
    *(_OWORD *)(v57 + 16) = xmmword_100241F90;
    swift_retain();
    swift_retain();
    v62 = swift_retain();
    *(_BYTE *)(v57 + 32) = v59(v62) & 1;
    *(_BYTE *)(v57 + 33) = v60() & 1;
    swift_release();
    swift_release();
    swift_release();
    LOBYTE(v14) = sub_100194FFC(1, v57);
    v63 = *v58;
    v64 = swift_retain();
    LOBYTE(v1) = v63(v64);
    swift_release();
    if (qword_1002D7288 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1002D7288, sub_10010BF6C);
LABEL_3:
  v65 = type metadata accessor for Logger(0);
  v66 = sub_100108664(v65, (uint64_t)&unk_1002E2D60);
  swift_bridgeObjectRetain(v57);
  v170 = v66;
  v69 = Logger.logObject.getter(v67, v68);
  v70 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = swift_slowAlloc(24, -1);
    v72 = swift_slowAlloc(32, -1);
    v182[0] = v72;
    *(_DWORD *)v71 = 136315650;
    v180 = v57;
    swift_bridgeObjectRetain(v57);
    sub_1001085C0(&qword_1002D9FA8);
    v73 = String.init<A>(reflecting:)(&v180);
    v75 = v74;
    v180 = sub_100121E04(v73, v74, v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v71 + 4, v71 + 12);
    swift_bridgeObjectRelease_n(v57, 2);
    swift_bridgeObjectRelease(v75);
    *(_WORD *)(v71 + 12) = 1024;
    LODWORD(v180) = v14 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, (char *)&v180 + 4, v71 + 14, v71 + 18);
    *(_WORD *)(v71 + 18) = 1024;
    LODWORD(v180) = v1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, (char *)&v180 + 4, v71 + 20, v71 + 24);
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "Pill state timer fired. Calculated pill view state to be: %s (shouldBeShowingPill: %{BOOL}d) isSuppressingPill: %{BOOL}d", (uint8_t *)v71, 0x18u);
    swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v71, -1, -1);

  }
  else
  {

    v76 = swift_bridgeObjectRelease_n(v57, 2);
  }
  v77 = (uint64_t)v177;
  v78 = v172;
  v79 = (uint64_t)v175;
  Date.init()(v76);
  v80 = v176;
  *(_BYTE *)(v77 + *(int *)(v176 + 20)) = v1 & 1;
  *(_BYTE *)(v77 + *(int *)(v80 + 24)) = v14 & 1;
  v81 = v78 + OBJC_IVAR___ICSPillStateMonitor_state;
  swift_beginAccess(v78 + OBJC_IVAR___ICSPillStateMonitor_state, v182, 0, 0);
  sub_1001982C8(v81, v178, type metadata accessor for PillStateMonitor.State);
  v82 = v173;
  sub_1001982C8(v77, v173, type metadata accessor for PillStateMonitor.Snapshot);
  if ((v14 & 1) != 0)
    v83 = *(unsigned __int8 *)(v82 + *(int *)(v80 + 20));
  else
    v83 = 0;
  sub_10015C804(v82, type metadata accessor for PillStateMonitor.Snapshot);
  v84 = *(int *)(v174 + 48);
  sub_1001982F4(v178, v79, type metadata accessor for PillStateMonitor.State);
  *(_BYTE *)(v79 + v84) = v83;
  v85 = sub_100109FF4(v79, 2, v80);
  if (!v85)
  {
    if ((v83 & 1) != 0)
    {
      v101 = v168;
      sub_1001982F4(v79, v168, type metadata accessor for PillStateMonitor.Snapshot);
      v102 = *(int *)(v80 + 24);
      v103 = *(unsigned __int8 *)(v101 + v102);
      v104 = v101;
      v105 = v164;
      sub_1001982C8(v104, v164, type metadata accessor for PillStateMonitor.Snapshot);
      if (v103 == 1)
      {
        v106 = *(_BYTE *)(v105 + *(int *)(v80 + 20));
        sub_10015C804(v105, type metadata accessor for PillStateMonitor.Snapshot);
        if ((v106 & 1) != 0)
        {
          v107 = *(unsigned __int8 *)(v168 + v102);
          v108 = v160;
          sub_1001982C8(v168, v160, type metadata accessor for PillStateMonitor.Snapshot);
          if (v107 == 1)
          {
            v109 = *(_BYTE *)(v108 + *(int *)(v80 + 20));
            sub_10015C804(v108, type metadata accessor for PillStateMonitor.Snapshot);
            if ((v109 & 1) != 0 && Date.timeIntervalSince(_:)(v168) > 3.0)
              sub_100197E74();
          }
          else
          {
            sub_10015C804(v108, type metadata accessor for PillStateMonitor.Snapshot);
          }
          sub_10015C804(v168, type metadata accessor for PillStateMonitor.Snapshot);
          v143 = v77;
          goto LABEL_40;
        }
      }
      else
      {
        sub_10015C804(v105, type metadata accessor for PillStateMonitor.Snapshot);
      }
      v144 = v161;
      sub_1001982C8(v77, v161, type metadata accessor for PillStateMonitor.Snapshot);
      v147 = Logger.logObject.getter(v145, v146);
      v148 = static os_log_type_t.error.getter(v147);
      if (os_log_type_enabled(v147, v148))
      {
        v149 = swift_slowAlloc(22, -1);
        v150 = swift_slowAlloc(32, -1);
        v178 = v81;
        v151 = v150;
        v180 = v150;
        *(_DWORD *)v149 = 136315394;
        v177 = (char *)(v149 + 4);
        v152 = (uint64_t)v169;
        sub_1001982C8(v144, (uint64_t)v169, type metadata accessor for PillStateMonitor.Snapshot);
        sub_100108600(v152, 0, 1, v80);
        sub_10019CA5C(v152);
        v154 = v153;
        v156 = v155;
        sub_10010A03C(v152, (uint64_t *)&unk_1002DC300);
        v179 = sub_100121E04(v154, v156, &v180);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, &v180, v177, v149 + 12);
        swift_bridgeObjectRelease(v156);
        sub_10015C804(v144, type metadata accessor for PillStateMonitor.Snapshot);
        *(_WORD *)(v149 + 12) = 2048;
        v179 = 0x4008000000000000;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, &v180, v149 + 14, v149 + 22);
        _os_log_impl((void *)&_mh_execute_header, v147, v148, "We detected an inconsistent pill state %s -> inconsistent state. Will hold for %f seconds before we take action.", (uint8_t *)v149, 0x16u);
        swift_arrayDestroy(v151, 1, (char *)&type metadata for Any + 8);
        v157 = v151;
        v81 = v178;
        swift_slowDealloc(v157, -1, -1);
        swift_slowDealloc(v149, -1, -1);

      }
      else
      {

        sub_10015C804(v144, type metadata accessor for PillStateMonitor.Snapshot);
      }
      v142 = v168;
    }
    else
    {
      v119 = (uint64_t)v163;
      sub_1001982F4(v79, (uint64_t)v163, type metadata accessor for PillStateMonitor.Snapshot);
      v120 = v165;
      sub_1001982C8(v119, v165, type metadata accessor for PillStateMonitor.Snapshot);
      v121 = (uint64_t)v162;
      sub_1001982C8(v77, (uint64_t)v162, type metadata accessor for PillStateMonitor.Snapshot);
      v124 = Logger.logObject.getter(v122, v123);
      v125 = static os_log_type_t.debug.getter();
      v126 = v125;
      if (os_log_type_enabled(v124, v125))
      {
        v127 = swift_slowAlloc(22, -1);
        LODWORD(v175) = v126;
        v128 = v127;
        v174 = swift_slowAlloc(64, -1);
        v180 = v174;
        *(_DWORD *)v128 = 136315394;
        v178 = v81;
        v129 = (uint64_t)v169;
        sub_1001982C8(v120, (uint64_t)v169, type metadata accessor for PillStateMonitor.Snapshot);
        sub_100108600(v129, 0, 1, v80);
        sub_10019CA5C(v129);
        v131 = v130;
        v132 = v120;
        v134 = v133;
        sub_10010A03C(v129, (uint64_t *)&unk_1002DC300);
        v179 = sub_100121E04(v131, v134, &v180);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, &v180, v128 + 4, v128 + 12);
        swift_bridgeObjectRelease(v134);
        sub_10015C804(v132, type metadata accessor for PillStateMonitor.Snapshot);
        *(_WORD *)(v128 + 12) = 2080;
        sub_1001982C8(v121, v129, type metadata accessor for PillStateMonitor.Snapshot);
        sub_100108600(v129, 0, 1, v80);
        sub_10019CA5C(v129);
        v136 = v135;
        v138 = v137;
        v139 = v129;
        v77 = (uint64_t)v177;
        v81 = v178;
        sub_10010A03C(v139, (uint64_t *)&unk_1002DC300);
        v179 = sub_100121E04(v136, v138, &v180);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, &v180, v128 + 14, v128 + 22);
        v140 = v138;
        v80 = v176;
        swift_bridgeObjectRelease(v140);
        sub_10015C804(v121, type metadata accessor for PillStateMonitor.Snapshot);
        _os_log_impl((void *)&_mh_execute_header, v124, (os_log_type_t)v175, "Pill state changed from %s -> %s.", (uint8_t *)v128, 0x16u);
        v141 = v174;
        swift_arrayDestroy(v174, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v141, -1, -1);
        swift_slowDealloc(v128, -1, -1);

      }
      else
      {

        sub_10015C804(v121, type metadata accessor for PillStateMonitor.Snapshot);
        sub_10015C804(v120, type metadata accessor for PillStateMonitor.Snapshot);
      }
      v142 = v119;
    }
    sub_10015C804(v142, type metadata accessor for PillStateMonitor.Snapshot);
    goto LABEL_37;
  }
  if (v85 == 1)
  {
    v86 = v167;
    sub_1001982C8(v77, v167, type metadata accessor for PillStateMonitor.Snapshot);
    v89 = Logger.logObject.getter(v87, v88);
    v90 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v89, v90))
    {
      v91 = (uint8_t *)swift_slowAlloc(12, -1);
      v92 = swift_slowAlloc(32, -1);
      v180 = v92;
      v178 = v81;
      *(_DWORD *)v91 = 136315138;
      v175 = (char *)(v91 + 4);
      v93 = (uint64_t)v169;
      sub_1001982C8(v86, (uint64_t)v169, type metadata accessor for PillStateMonitor.Snapshot);
      sub_100108600(v93, 0, 1, v80);
      sub_10019CA5C(v93);
      v94 = v86;
      v96 = v95;
      v98 = v97;
      sub_10010A03C(v93, (uint64_t *)&unk_1002DC300);
      v179 = sub_100121E04(v96, v98, &v180);
      v81 = v178;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, &v180, v175, v91 + 12);
      v99 = v98;
      v77 = (uint64_t)v177;
      swift_bridgeObjectRelease(v99);
      sub_10015C804(v94, type metadata accessor for PillStateMonitor.Snapshot);
      v100 = "Changing state from unknown to %s.";
LABEL_23:
      _os_log_impl((void *)&_mh_execute_header, v89, v90, v100, v91, 0xCu);
      swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v92, -1, -1);
      swift_slowDealloc(v91, -1, -1);
LABEL_25:

LABEL_37:
      v158 = v171;
      sub_1001982F4(v77, v171, type metadata accessor for PillStateMonitor.Snapshot);
      sub_100108600(v158, 0, 2, v80);
      swift_beginAccess(v81, &v180, 33, 0);
      sub_100198230(v158, v81);
      swift_endAccess(&v180);
      return;
    }
    goto LABEL_24;
  }
  if (v83)
  {
    v86 = v166;
    sub_1001982C8(v77, v166, type metadata accessor for PillStateMonitor.Snapshot);
    v89 = Logger.logObject.getter(v110, v111);
    v90 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v89, v90))
    {
      v91 = (uint8_t *)swift_slowAlloc(12, -1);
      v92 = swift_slowAlloc(32, -1);
      v180 = v92;
      v178 = v81;
      *(_DWORD *)v91 = 136315138;
      v175 = (char *)(v91 + 4);
      v112 = (uint64_t)v169;
      sub_1001982C8(v86, (uint64_t)v169, type metadata accessor for PillStateMonitor.Snapshot);
      sub_100108600(v112, 0, 1, v80);
      sub_10019CA5C(v112);
      v113 = v86;
      v115 = v114;
      v117 = v116;
      sub_10010A03C(v112, (uint64_t *)&unk_1002DC300);
      v179 = sub_100121E04(v115, v117, &v180);
      v81 = v178;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, &v180, v175, v91 + 12);
      v118 = v117;
      v77 = (uint64_t)v177;
      swift_bridgeObjectRelease(v118);
      sub_10015C804(v113, type metadata accessor for PillStateMonitor.Snapshot);
      v100 = "Pill state changed from inconsistent state -> %s.";
      goto LABEL_23;
    }
LABEL_24:
    sub_10015C804(v86, type metadata accessor for PillStateMonitor.Snapshot);
    goto LABEL_25;
  }
  v143 = v77;
LABEL_40:
  sub_10015C804(v143, type metadata accessor for PillStateMonitor.Snapshot);
}

void sub_100197E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  void *v25;
  Swift::String v26;
  Swift::String v27;
  unint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  type metadata accessor for PillStateMonitor.State(0);
  sub_10011AE0C();
  __chkstk_darwin(v1, v2);
  v4 = (uint64_t (*)(uint64_t))((char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (uint64_t *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v0 + OBJC_IVAR___ICSPillStateMonitor_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v5);
  v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v12 = type metadata accessor for PillStateMonitor.Snapshot(0);
  v13 = sub_100108600((uint64_t)v4, 2, 2, v12);
  v14 = v0 + OBJC_IVAR___ICSPillStateMonitor_state;
  sub_1001983E4(v13, (uint64_t)&v37);
  sub_100198230((uint64_t)v4, v14);
  swift_endAccess(&v37);
  v15 = sub_100198374(OBJC_IVAR___ICSPillStateMonitor_hasCurrentCalls);
  v16 = v4(v15);
  sub_100110F0C();
  if ((v16 & 1) != 0)
  {
    if (qword_1002D7288 == -1)
    {
LABEL_4:
      v17 = type metadata accessor for Logger(0);
      v18 = sub_100108664(v17, (uint64_t)&unk_1002E2D60);
      v19 = v18;
      v21 = Logger.logObject.getter(v18, v20);
      v22 = static os_log_type_t.error.getter(v21);
      if (sub_100123A54(v22))
      {
        v23 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v23 = 134217984;
        v37 = 0x4008000000000000;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v23 + 4, v23 + 12);
        _os_log_impl((void *)&_mh_execute_header, v21, v19, "Pill state was inconsistent for %f seconds. Updating pill state...", v23, 0xCu);
        sub_100184088();
      }

      v24 = objc_msgSend((id)objc_opt_self(PHInCallUtilities), "sharedInstance");
      objc_msgSend(v24, "stopSuppressingInCallStatusBar");

      v25 = (void *)objc_opt_self(ICSCrashReporter);
      v37 = 0;
      v38 = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      v26._object = (void *)0x80000001001F67B0;
      v26._countAndFlagsBits = 0xD000000000000020;
      String.append(_:)(v26);
      Double.write<A>(to:)(&v37, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v27._countAndFlagsBits = 0x73646E6F63657320;
      v27._object = (void *)0xE90000000000002ELL;
      String.append(_:)(v27);
      v28 = v38;
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
      objc_msgSend(v25, "simulateCrashReportWithReason:pid:code:", v29, getpid(), 3735933201);
      goto LABEL_11;
    }
LABEL_13:
    swift_once(&qword_1002D7288, sub_10010BF6C);
    goto LABEL_4;
  }
  if (qword_1002D7288 != -1)
    swift_once(&qword_1002D7288, sub_10010BF6C);
  v30 = type metadata accessor for Logger(0);
  v31 = sub_100108664(v30, (uint64_t)&unk_1002E2D60);
  v32 = v31;
  v29 = Logger.logObject.getter(v31, v33);
  v34 = static os_log_type_t.error.getter(v29);
  if (sub_100123A54(v34))
  {
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v32, "Not updating pill state on monitor because we have no current calls.", v35, 2u);
    sub_100184088();
  }
LABEL_11:

}

uint64_t sub_1001981FC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CameraStateMonitor.TimerState(a2, a1);
  return a2;
}

uint64_t sub_100198230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PillStateMonitor.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100198274(uint64_t a1, uint64_t a2)
{
  assignWithTake for CameraStateMonitor.TimerState(a2, a1);
  return a2;
}

void sub_1001982A8(uint64_t a1)
{
  uint64_t v1;

  sub_10015ADF4(a1, v1, sub_100196F64);
}

void sub_1001982C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1001983BC(a1, a2, a3);
  sub_100156D38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_100109438();
}

void sub_1001982F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1001983BC(a1, a2, a3);
  sub_100156D38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_100109438();
}

_QWORD *sub_100198320(_QWORD *a1)
{
  destroy for CameraStateMonitor.TimerState(a1);
  return a1;
}

uint64_t sub_100198374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_retain(*(_QWORD *)(v1 + a1 + 8));
}

void *sub_100198384(int a1, int a2, void *aBlock)
{
  return _Block_copy(aBlock);
}

id sub_10019839C()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, *(SEL *)(v0 + 3968));
}

uint64_t sub_1001983A8()
{
  uint64_t v0;

  return swift_allocObject(v0, 24, 7);
}

uint64_t sub_1001983BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_1001983CC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1001983E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return swift_beginAccess(v2, a2, 33, 0);
}

id sub_1001983F4(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = v2;
  return v1;
}

uint64_t sub_100198400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t KeypadControlService.__allocating_init(call:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 32, 7);
  KeypadControlService.init(call:)(a1);
  return v3;
}

uint64_t KeypadControlService.init(call:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  v2 = v1;
  *(_QWORD *)(v2 + 24) = a1;
  v14 = 1;
  v4 = sub_1001085C0(&qword_1002D7E20);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = a1;
  *(_QWORD *)(v2 + 16) = CurrentValueSubject.init(_:)(&v14);
  v6 = (void *)objc_opt_self(NSNotificationCenter);
  v7 = objc_msgSend(v6, "defaultCenter");
  sub_10019875C(v7, v8, v9, (uint64_t)"callModelDidChange:", TUCallModelChangedNotification);

  v10 = objc_msgSend(v6, "defaultCenter");
  sub_10019875C(v10, v11, v12, (uint64_t)"callIsOnHoldDidChange:", TUCallIsOnHoldChangedNotification);

  sub_10019860C();
  return v2;
}

void sub_100198564()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  id v3;
  unsigned __int8 v4;
  id v5;
  _QWORD v6[4];

  v1 = *(_QWORD *)(v0 + 24);
  Notification.object.getter(v6);
  if (v6[3])
  {
    v2 = sub_10014971C();
    if ((swift_dynamicCast(&v5, v6, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
    {
      v3 = v5;
      v4 = objc_msgSend(v5, "isEqualToCall:", v1);

      if ((v4 & 1) != 0)
        sub_10019860C();
    }
  }
  else
  {
    sub_100137118((uint64_t)v6);
  }
}

uint64_t sub_10019860C()
{
  char v1;

  v1 = sub_100198648() & 1;
  return CurrentValueSubject.send(_:)(&v1);
}

id sub_100198648()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + 24);
  if ((objc_msgSend(v1, "isOnHold") & 1) != 0)
    return 0;
  v3 = objc_msgSend(v1, "model");
  v2 = objc_msgSend(v3, "supportsDTMF");

  return v2;
}

uint64_t KeypadControlService.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return v0;
}

uint64_t KeypadControlService.__deallocating_deinit()
{
  uint64_t v0;

  KeypadControlService.deinit();
  return swift_deallocClassInstance(v0, 32, 7);
}

unint64_t sub_1001986FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBD28;
  if (!qword_1002DBD28)
  {
    v1 = type metadata accessor for KeypadControlService();
    result = swift_getWitnessTable(&protocol conformance descriptor for KeypadControlService, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBD28);
  }
  return result;
}

uint64_t type metadata accessor for KeypadControlService()
{
  return objc_opt_self(_TtC13InCallService20KeypadControlService);
}

id sub_10019875C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return objc_msgSend(a1, *(SEL *)(v6 + 1328), v5, a4, a5, 0);
}

void sub_10019876C()
{
  qword_1002E2EF8 = 0x4030000000000000;
}

void sub_10019877C()
{
  qword_1002E2F00 = 0x4034000000000000;
}

void sub_10019878C(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEmergencyMediaRequestViewController_actionButtonsWaitingView);
}

id sub_100198798()
{
  id v0;
  id v1;
  id v2;

  sub_10010BBE8(0, &qword_1002DA660, UIImage_ptr);
  v0 = sub_10019883C(0xD000000000000018, 0x80000001001F6AD0);
  v1 = objc_allocWithZone((Class)UIImageView);
  if (!v0)
    return objc_msgSend(v1, "init");
  v2 = objc_msgSend(v1, "initWithImage:", v0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  return v2;
}

id sub_10019883C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "imageNamed:", v4);

  return v5;
}

char *sub_10019889C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  objc_class *v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void *v50;
  unint64_t v51;
  char *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  Class isa;
  void *v61;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  objc_super v69;
  Swift::String v70;

  v1 = v0;
  v2 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode(0);
  v66 = *(_QWORD *)(v2 - 8);
  v67 = v2;
  __chkstk_darwin(v2, v3);
  sub_10011ADE4();
  v65 = v4;
  v5 = sub_1001085C0(&qword_1002DBEA0);
  __chkstk_darwin(v5, v6);
  sub_10011ADE4();
  v63 = v7;
  v8 = type metadata accessor for PHPickerConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  v11 = __chkstk_darwin(v8, v10);
  v64 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v63 - v14;
  sub_10019A644(OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate);
  *(_QWORD *)&v0[OBJC_IVAR___PHEmergencyMediaRequestViewController_toolBarViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___PHEmergencyMediaRequestViewController_actionButtonsWaitingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___PHEmergencyMediaRequestViewController_photoPickerViewController] = 0;
  v16 = OBJC_IVAR___PHEmergencyMediaRequestViewController_waitingStateTitlelabel;
  v17 = (void *)objc_opt_self(NSBundle);
  v18 = v0;
  v19 = objc_msgSend(v17, "mainBundle");
  v20 = sub_100135FC4(0xD000000000000011, 0x80000001001F6A50);
  v22 = v21;

  v23 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateTitleLabel(0));
  *(_QWORD *)&v1[v16] = EEWaitingStateTitleLabel.init(titleString:)(v20, v22);
  v24 = OBJC_IVAR___PHEmergencyMediaRequestViewController_waitingStateSubtitlelabel;
  v25 = objc_msgSend(v17, "mainBundle");
  v26._countAndFlagsBits = 0xD000000000000014;
  v70._object = (void *)0xE000000000000000;
  v26._object = (void *)0x80000001001F6A70;
  v27.value._countAndFlagsBits = 0x65536C6C61436E49;
  v27.value._object = (void *)0xED00006563697672;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v70._countAndFlagsBits = 0;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v70);

  v30 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateSubtitleLabel(0));
  *(_QWORD *)&v18[v24] = EEWaitingStateSubtitleLabel.init(titleString:)(v29._countAndFlagsBits, v29._object);
  v31 = OBJC_IVAR___PHEmergencyMediaRequestViewController_photoImageView;
  *(_QWORD *)&v18[v31] = sub_100198798();
  v32 = OBJC_IVAR___PHEmergencyMediaRequestViewController_titleLabelScrollView;
  v33 = sub_100136444(objc_allocWithZone((Class)UIScrollView), "initWithFrame:");
  sub_10019A62C(v33);
  *(_QWORD *)&v18[v32] = v33;
  v34 = OBJC_IVAR___PHEmergencyMediaRequestViewController_titleLabelScrollViewContentView;
  v35 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  sub_10019A62C(v35);
  *(_QWORD *)&v18[v34] = v35;
  *(_QWORD *)&v18[OBJC_IVAR___PHEmergencyMediaRequestViewController_viewControllerWaitingStateHeightConstraint] = 0;

  v36 = (objc_class *)type metadata accessor for EmergencyMediaRequestViewController();
  v69.receiver = v18;
  v69.super_class = v36;
  v37 = objc_msgSendSuper2(&v69, "initWithNibName:bundle:", 0, 0);
  v38 = objc_allocWithZone((Class)type metadata accessor for EmergencyActionButtonsWaitingView());
  v39 = (char *)v37;
  v40 = sub_10016FC44(1);
  v41 = *(void **)&v39[OBJC_IVAR___PHEmergencyMediaRequestViewController_actionButtonsWaitingView];
  *(_QWORD *)&v39[OBJC_IVAR___PHEmergencyMediaRequestViewController_actionButtonsWaitingView] = v40;

  sub_10019921C();
  v42 = objc_msgSend((id)objc_opt_self(PHPhotoLibrary), "sharedPhotoLibrary");
  PHPickerConfiguration.init(photoLibrary:)(v42);
  v43 = sub_1001085C0(&qword_1002DBEA8);
  v44 = type metadata accessor for PHPickerFilter(0);
  v45 = swift_allocObject(v43, ((*(unsigned __int8 *)(*(_QWORD *)(v44 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v44 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v44 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v44 - 8) + 80) | 7);
  *(_OWORD *)(v45 + 16) = xmmword_100241F90;
  v46 = static PHPickerFilter.images.getter();
  static PHPickerFilter.videos.getter(v46);
  v47 = v63;
  static PHPickerFilter.any(of:)(v45);
  swift_bridgeObjectRelease(v45);
  sub_100108600(v47, 0, 1, v44);
  PHPickerConfiguration.filter.setter(v47);
  PHPickerConfiguration.selectionLimit.setter(20);
  v48 = v65;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 104))(v65, enum case for PHPickerConfiguration.AssetRepresentationMode.compatible(_:), v67);
  PHPickerConfiguration.preferredAssetRepresentationMode.setter(v48);
  sub_10010BBE8(0, &qword_1002DBEB0, PHPickerViewController_ptr);
  v49 = v64;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v64, v15, v8);
  v50 = (void *)PHPickerViewController.init(configuration:)(v49);
  v51 = sub_10019A5C8();
  v52 = v39;
  PHPickerViewController.delegate.setter(v39, v51);
  v53 = sub_10010A1B8((uint64_t)objc_msgSend(v50, "setOverrideUserInterfaceStyle:", 2), "sheetPresentationController");
  if (v53)
  {
    v54 = v53;
    v55 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
    v56 = swift_allocObject(v55, 40, 7);
    *(_OWORD *)(v56 + 16) = xmmword_1002420C0;
    v57 = objc_msgSend((id)objc_opt_self(UISheetPresentationControllerDetent), "largeDetent");
    *(_QWORD *)(v56 + 32) = v57;
    v68 = v56;
    specialized Array._endMutation()(v57, v58);
    v59 = v68;
    sub_10010BBE8(0, (unint64_t *)&qword_1002D8E30, UISheetPresentationControllerDetent_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v59);
    objc_msgSend(v54, "setDetents:", isa);

    sub_10019A65C();
  }
  else
  {
    sub_10019A65C();

  }
  v61 = *(void **)&v52[OBJC_IVAR___PHEmergencyMediaRequestViewController_photoPickerViewController];
  *(_QWORD *)&v52[OBJC_IVAR___PHEmergencyMediaRequestViewController_photoPickerViewController] = v50;

  return v52;
}

void sub_100198E64()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;

  v1 = v0;
  sub_10019A644(OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate);
  *(_QWORD *)&v0[OBJC_IVAR___PHEmergencyMediaRequestViewController_toolBarViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___PHEmergencyMediaRequestViewController_actionButtonsWaitingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___PHEmergencyMediaRequestViewController_photoPickerViewController] = 0;
  v2 = OBJC_IVAR___PHEmergencyMediaRequestViewController_waitingStateTitlelabel;
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v5 = sub_100135FC4(0xD000000000000011, 0x80000001001F6A50);
  v7 = v6;

  v8 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateTitleLabel(0));
  *(_QWORD *)&v1[v2] = EEWaitingStateTitleLabel.init(titleString:)(v5, v7);
  v9 = OBJC_IVAR___PHEmergencyMediaRequestViewController_waitingStateSubtitlelabel;
  v10 = objc_msgSend(v3, "mainBundle", 0xE000000000000000);
  v11 = sub_100135FC4(0xD000000000000014, 0x80000001001F6A70);
  v13 = v12;

  v14 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateSubtitleLabel(0));
  *(_QWORD *)&v1[v9] = EEWaitingStateSubtitleLabel.init(titleString:)(v11, v13);
  v15 = OBJC_IVAR___PHEmergencyMediaRequestViewController_photoImageView;
  *(_QWORD *)&v1[v15] = sub_100198798();
  v16 = OBJC_IVAR___PHEmergencyMediaRequestViewController_titleLabelScrollView;
  v17 = sub_100136444(objc_allocWithZone((Class)UIScrollView), "initWithFrame:");
  sub_10019A62C(v17);
  *(_QWORD *)&v1[v16] = v17;
  v18 = OBJC_IVAR___PHEmergencyMediaRequestViewController_titleLabelScrollViewContentView;
  v19 = objc_msgSend(objc_allocWithZone((Class)UIView), "init", 0xE000000000000000);
  sub_10019A62C(v19);
  *(_QWORD *)&v1[v18] = v19;
  *(_QWORD *)&v1[OBJC_IVAR___PHEmergencyMediaRequestViewController_viewControllerWaitingStateHeightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001F1490, "InCallService/EmergencyMediaRequestViewController.swift", 55, 2);
  __break(1u);
}

void sub_100199084()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;
  _QWORD aBlock[6];

  v1 = *(void **)&v0[OBJC_IVAR___PHEmergencyMediaRequestViewController_photoPickerViewController];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "presentationController");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "setDelegate:", v0);

    }
    aBlock[4] = sub_100199204;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100112054;
    aBlock[3] = &unk_10028D780;
    v5 = _Block_copy(aBlock);
    objc_msgSend(v0, "presentViewController:animated:completion:", v2, 1, v5);
    _Block_release(v5);

  }
  else
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v6 = sub_100109570();
    oslog = sub_10011ADC0(v6, (uint64_t)&unk_1002E2CC8);
    v7 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)sub_10010E3FC();
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "EnhancedEmergency: can't find photo picker to present", v8, 2u);
      sub_100109440((uint64_t)v8);
    }

  }
}

void sub_100199204()
{
  sub_10019A380("EnhancedEmergency: photo picker presented");
}

void sub_100199210(uint64_t a1)
{
  sub_100135EEC(a1, OBJC_IVAR___PHEmergencyMediaRequestViewController_viewControllerWaitingStateHeightConstraint);
}

void sub_10019921C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  double v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  id v106;
  uint64_t v107;
  id v108;
  id v109;
  void *v110;
  void *v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  Class isa;
  void *v120;
  id v121;
  id v122;
  void *v123;
  char *v124;
  id v125;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR___PHEmergencyMediaRequestViewController_actionButtonsWaitingView);
  if (!v2)
  {
LABEL_21:
    v122 = sub_10019A620();
    if (v122)
    {
      v123 = v122;
      v125 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
      objc_msgSend(v123, "setBackgroundColor:", v125);

      return;
    }
    __break(1u);
    goto LABEL_24;
  }
  v3 = v2;
  v4 = sub_10019A620();
  if (!v4)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  sub_10010E3C0(v5, "setBackgroundColor:");

  v7 = sub_10019A620();
  if (!v7)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v8 = v7;
  v9 = *(void **)(v1 + OBJC_IVAR___PHEmergencyMediaRequestViewController_titleLabelScrollView);
  sub_10010E3C0(v7, "addSubview:");

  objc_msgSend(v9, "addSubview:", *(_QWORD *)(v1 + OBJC_IVAR___PHEmergencyMediaRequestViewController_titleLabelScrollViewContentView));
  v10 = OBJC_IVAR___PHEmergencyMediaRequestViewController_waitingStateTitlelabel;
  sub_10019A66C();
  v11 = OBJC_IVAR___PHEmergencyMediaRequestViewController_waitingStateSubtitlelabel;
  sub_10019A66C();
  v12 = sub_10019A620();
  if (!v12)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v13 = v12;
  v14 = OBJC_IVAR___PHEmergencyMediaRequestViewController_photoImageView;
  objc_msgSend(v12, "addSubview:", *(_QWORD *)(v1 + OBJC_IVAR___PHEmergencyMediaRequestViewController_photoImageView));

  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  swift_unknownObjectWeakAssign(&v3[OBJC_IVAR____TtC13InCallService33EmergencyActionButtonsWaitingView_delegate], v1);
  v15 = sub_10019A620();
  if (!v15)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v16 = v15;
  objc_msgSend(v15, "addSubview:", v3);

  if (qword_1002D7398 != -1)
    swift_once(&qword_1002D7398, sub_10019877C);
  v124 = v3;
  v17 = *(double *)&qword_1002E2F00;
  v18 = sub_10019A620();
  if (!v18)
    goto LABEL_28;
  v19 = v18;
  v20 = sub_10019A654(v18);

  v21 = sub_10019A654(*(void **)(v1 + v14));
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);
  sub_100136678();

  sub_100199210((uint64_t)v3);
  v23 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v24 = swift_allocObject(v23, 216, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100244E80;
  v25 = objc_msgSend(*(id *)(v1 + v14), "centerXAnchor");
  v26 = sub_10019A620();
  if (!v26)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "centerXAnchor");
  sub_1001781D4();
  v29 = objc_msgSend(v25, "constraintEqualToAnchor:", &selRef_buttonsForAmbientTransition);
  sub_100136678();

  *(_QWORD *)(v24 + 32) = v27;
  v30 = sub_10019A654(*(void **)(v1 + v14));
  v31 = sub_10019A620();
  if (!v31)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v32 = v31;
  v33 = sub_10019A654(v31);
  sub_1001781D4();
  v35 = sub_10019A678(v34, "constraintEqualToAnchor:constant:");
  sub_100136678();

  *(_QWORD *)(v24 + 40) = v32;
  v36 = objc_msgSend(objc_msgSend(*(id *)(v1 + v14), "widthAnchor"), "constraintEqualToConstant:", 110.0);
  sub_100136678();
  *(_QWORD *)(v24 + 48) = v32;
  v37 = objc_msgSend(objc_msgSend(*(id *)(v1 + v14), "heightAnchor"), "constraintEqualToConstant:", 110.0);
  sub_100136678();
  *(_QWORD *)(v24 + 56) = v32;
  v39 = sub_10010A1B8(v38, "topAnchor");
  v40 = objc_msgSend(*(id *)(v1 + v14), "bottomAnchor");
  v41 = sub_1001246A8((uint64_t)v40, "constraintEqualToAnchor:constant:");
  sub_100149038();

  *(_QWORD *)(v24 + 64) = &selRef_buttonsForAmbientTransition;
  v43 = sub_10010A1B8(v42, "leadingAnchor");
  v44 = sub_10010E310((uint64_t)v43, "view");
  if (!v44)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v45 = v44;
  v46 = objc_msgSend(v44, "leadingAnchor");
  sub_1001781D4();
  v47 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", &selRef_buttonsForAmbientTransition, v17);
  sub_100136678();

  *(_QWORD *)(v24 + 72) = v45;
  v49 = sub_10010A1B8(v48, "trailingAnchor");
  v50 = sub_10010E310((uint64_t)v49, "view");
  if (!v50)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v51 = v50;
  v52 = objc_msgSend(v50, "trailingAnchor");
  sub_1001781D4();
  v54 = sub_10019A678(v53, "constraintEqualToAnchor:constant:");
  sub_100136678();

  *(_QWORD *)(v24 + 80) = v51;
  v56 = sub_100136368(v55, "topAnchor");
  v57 = sub_10010A1B8((uint64_t)v56, "contentLayoutGuide");
  v58 = objc_msgSend(v57, "topAnchor");
  sub_1001781D4();
  v59 = sub_1001781B8();
  sub_100136678();

  *(_QWORD *)(v24 + 88) = v57;
  v61 = sub_100136368(v60, "leadingAnchor");
  v62 = sub_10010A1B8((uint64_t)v61, "contentLayoutGuide");
  v63 = objc_msgSend(v62, "leadingAnchor");
  sub_1001781D4();
  v64 = sub_1001781B8();
  sub_100136678();

  *(_QWORD *)(v24 + 96) = v62;
  v66 = sub_100136368(v65, "trailingAnchor");
  v67 = sub_10010A1B8((uint64_t)v66, "contentLayoutGuide");
  v68 = objc_msgSend(v67, "trailingAnchor");
  sub_1001781D4();
  v69 = sub_1001781B8();
  sub_100136678();

  *(_QWORD *)(v24 + 104) = v67;
  v71 = sub_100136368(v70, "bottomAnchor");
  v72 = sub_10010A1B8((uint64_t)v71, "contentLayoutGuide");
  v73 = objc_msgSend(v72, "bottomAnchor");
  sub_1001781D4();
  v74 = sub_1001781B8();
  sub_100136678();

  *(_QWORD *)(v24 + 112) = v72;
  v76 = sub_100136368(v75, "widthAnchor");
  v77 = sub_10010A1B8((uint64_t)v76, "frameLayoutGuide");
  v78 = objc_msgSend(v77, "widthAnchor");
  sub_1001781D4();
  v79 = sub_1001781B8();
  sub_100136678();

  *(_QWORD *)(v24 + 120) = v77;
  v80 = sub_100136368((uint64_t)objc_msgSend(*(id *)(v1 + v10), "topAnchor"), "topAnchor");
  v81 = sub_10019A60C((uint64_t)v80);
  sub_100149038();

  *(_QWORD *)(v24 + 128) = &selRef__routeIsReceiver_;
  v82 = sub_100136368((uint64_t)objc_msgSend(*(id *)(v1 + v10), "leadingAnchor"), "leadingAnchor");
  v83 = sub_10019A60C((uint64_t)v82);
  sub_100149038();

  *(_QWORD *)(v24 + 136) = &selRef__routeIsReceiver_;
  v84 = sub_100136368((uint64_t)objc_msgSend(*(id *)(v1 + v10), "trailingAnchor"), "trailingAnchor");
  v85 = sub_10019A60C((uint64_t)v84);
  sub_100149038();

  *(_QWORD *)(v24 + 144) = &selRef__routeIsReceiver_;
  v86 = objc_msgSend(*(id *)(v1 + v11), "topAnchor");
  v87 = objc_msgSend(*(id *)(v1 + v10), "bottomAnchor");
  v88 = sub_1001246A8((uint64_t)v87, "constraintEqualToAnchor:constant:");
  sub_100149038();

  *(_QWORD *)(v24 + 152) = &selRef__routeIsReceiver_;
  v89 = sub_100136368((uint64_t)objc_msgSend(*(id *)(v1 + v11), "leadingAnchor"), "leadingAnchor");
  v90 = sub_10019A60C((uint64_t)v89);
  sub_100149038();

  *(_QWORD *)(v24 + 160) = &selRef__routeIsReceiver_;
  v91 = sub_100136368((uint64_t)objc_msgSend(*(id *)(v1 + v11), "trailingAnchor"), "trailingAnchor");
  v92 = sub_10019A60C((uint64_t)v91);
  sub_100149038();

  *(_QWORD *)(v24 + 168) = &selRef__routeIsReceiver_;
  v93 = objc_msgSend(*(id *)(v1 + v11), "bottomAnchor");
  v94 = sub_100136368((uint64_t)v93, "bottomAnchor");
  v95 = objc_msgSend(v93, "constraintEqualToAnchor:", v94);
  sub_100136678();

  *(_QWORD *)(v24 + 176) = &selRef_shouldRestrictJoinConversationRequest_performSynchronously_;
  v97 = sub_100163050(v96, "bottomAnchor");
  v98 = sub_10010E310((uint64_t)v97, "view");
  if (!v98)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v99 = objc_msgSend(v98, "safeAreaLayoutGuide");
  sub_100136678();
  v100 = objc_msgSend(&selRef_shouldRestrictJoinConversationRequest_performSynchronously_, "bottomAnchor");

  if (qword_1002D7390 != -1)
    swift_once(&qword_1002D7390, sub_10019876C);
  v101 = objc_msgSend(v97, "constraintEqualToAnchor:constant:", v100, -*(double *)&qword_1002E2EF8);

  *(_QWORD *)(v24 + 184) = v101;
  v103 = sub_100163050(v102, "leadingAnchor");
  v104 = sub_10010E310((uint64_t)v103, "view");
  if (!v104)
    goto LABEL_34;
  v105 = objc_msgSend(v104, "leadingAnchor");
  sub_100136678();
  v106 = objc_msgSend(v103, "constraintEqualToAnchor:", &selRef_isUserInterfaceShowing);

  *(_QWORD *)(v24 + 192) = v106;
  v108 = sub_100163050(v107, "trailingAnchor");
  v109 = sub_10010E310((uint64_t)v108, "view");
  if (v109)
  {
    v110 = v109;
    v111 = (void *)objc_opt_self(NSLayoutConstraint);
    v112 = sub_100163050((uint64_t)v111, "trailingAnchor");

    v113 = objc_msgSend(v108, "constraintEqualToAnchor:", v112);
    sub_1001781D4();

    *(_QWORD *)(v24 + 200) = v110;
    v114 = objc_msgSend(v124, "topAnchor");
    v115 = objc_msgSend(v9, "bottomAnchor");
    v116 = objc_msgSend(v114, "constraintEqualToAnchor:constant:", v115, 12.0);
    sub_1001781D4();

    *(_QWORD *)(v24 + 208) = v110;
    specialized Array._endMutation()(v117, v118);
    sub_10010BBE8(0, (unint64_t *)&qword_1002DB440, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    sub_10010E3C0(v111, "activateConstraints:");

    v120 = *(void **)(v1 + OBJC_IVAR___PHEmergencyMediaRequestViewController_viewControllerWaitingStateHeightConstraint);
    if (v120)
    {
      v121 = v120;
      objc_msgSend(v121, "setActive:", 1);

    }
    goto LABEL_21;
  }
LABEL_35:
  __break(1u);
}

id sub_100199E04()
{
  uint64_t v0;
  void *v1;
  id result;

  v1 = *(void **)(v0 + OBJC_IVAR___PHEmergencyMediaRequestViewController_actionButtonsWaitingView);
  if (v1)
    objc_msgSend(v1, "removeFromSuperview");
  sub_10019878C(0);
  sub_10019A638(OBJC_IVAR___PHEmergencyMediaRequestViewController_photoImageView);
  sub_10019A638(OBJC_IVAR___PHEmergencyMediaRequestViewController_waitingStateTitlelabel);
  sub_10019A638(OBJC_IVAR___PHEmergencyMediaRequestViewController_waitingStateSubtitlelabel);
  result = *(id *)(v0 + OBJC_IVAR___PHEmergencyMediaRequestViewController_viewControllerWaitingStateHeightConstraint);
  if (result)
    return objc_msgSend(result, "setActive:", 0);
  return result;
}

double sub_100199E8C()
{
  uint64_t v0;
  uint64_t Strong;
  double result;
  uint64_t v3;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate);
  if (Strong)
  {
    v3 = Strong;
    sub_10013FF48();
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

void sub_100199EE0()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.EmergencyMediaRequestViewController", 49, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_100199F30()
{
  return sub_100112450(type metadata accessor for EmergencyMediaRequestViewController);
}

uint64_t type metadata accessor for EmergencyMediaRequestViewController()
{
  return objc_opt_self(PHEmergencyMediaRequestViewController);
}

void sub_100199FF4()
{
  void *v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v1 = sub_100109570();
  sub_10011ADC0(v1, (uint64_t)&unk_1002E2CC8);
  v2 = sub_10011ADDC();
  if (sub_100109560(v2))
  {
    v3 = (_WORD *)sub_10010E3FC();
    *v3 = 0;
    sub_100123A2C((void *)&_mh_execute_header, v4, v5, "EnhancedEmergency: media upload request cancelled, request to remove media requestView");
    sub_100109440((uint64_t)v3);
  }

  v6 = sub_100136790(OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate);
  if (v6)
  {
    v7 = v6;
    sub_100138D80();
    sub_100143770(v7);
  }
  else
  {
    sub_100109830();
  }
}

void sub_10019A0D8()
{
  void *v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_100199E04();
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v1 = sub_100109570();
  sub_10011ADC0(v1, (uint64_t)&unk_1002E2CC8);
  v2 = sub_10011ADDC();
  if (sub_100109560(v2))
  {
    v3 = (_WORD *)sub_10010E3FC();
    *v3 = 0;
    sub_100123A2C((void *)&_mh_execute_header, v4, v5, "EnhancedEmergency: media upload request continued, request to present photo picker");
    sub_100109440((uint64_t)v3);
  }

  v6 = sub_100136790(OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate);
  if (v6)
  {
    v7 = v6;
    sub_10013FCB4();
    sub_100143770(v7);
  }
  else
  {
    sub_100109830();
  }
}

void sub_10019A1C0()
{
  void *v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v1 = sub_100109570();
  sub_10011ADC0(v1, (uint64_t)&unk_1002E2CC8);
  v2 = sub_10011ADDC();
  if (sub_100109560(v2))
  {
    v3 = (_WORD *)sub_10010E3FC();
    *v3 = 0;
    sub_100123A2C((void *)&_mh_execute_header, v4, v5, "EnhancedEmergency: user swipe down to dismiss photo picker");
    sub_100109440((uint64_t)v3);
  }

  v6 = sub_100136790(OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate);
  if (v6)
  {
    v7 = v6;
    sub_100141840();
    sub_100143770(v7);
  }
  else
  {
    sub_100109830();
  }
}

double sub_10019A2BC(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _QWORD v7[6];

  if (*(_QWORD *)(a2 + 16))
    sub_100199E8C();
  v7[4] = sub_10019A374;
  v7[5] = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100112054;
  v7[3] = &unk_10028D758;
  v3 = _Block_copy(v7);
  objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v3);
  _Block_release(v3);
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate]);
  if (Strong)
  {
    v6 = Strong;
    sub_100141840();
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

void sub_10019A374()
{
  sub_10019A380("EnhancedEmergency: dismissed photo picker");
}

void sub_10019A380(const char *a1)
{
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100109570();
  oslog = sub_10011ADC0(v2, (uint64_t)&unk_1002E2CC8);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)sub_10010E3FC();
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, a1, v4, 2u);
    sub_100109440((uint64_t)v4);
  }

}

id sub_10019A43C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  NSString v6;
  id v7;
  objc_super v9;

  if (a2)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for PHToolBarViewController();
  v7 = objc_msgSendSuper2(&v9, "initWithNibName:bundle:", v6, a3);

  return v7;
}

id sub_10019A514(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PHToolBarViewController();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_10019A584()
{
  return sub_100112450(type metadata accessor for PHToolBarViewController);
}

uint64_t type metadata accessor for PHToolBarViewController()
{
  return objc_opt_self(_TtC13InCallService23PHToolBarViewController);
}

uint64_t sub_10019A5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10019A5C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10019A5C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBEB8;
  if (!qword_1002DBEB8)
  {
    v1 = type metadata accessor for EmergencyMediaRequestViewController();
    result = swift_getWitnessTable(&unk_100244F28, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBEB8);
  }
  return result;
}

id sub_10019A60C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  return objc_msgSend(v2, *(SEL *)(v1 + 2128), a1);
}

id sub_10019A620()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1912));
}

id sub_10019A62C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2672), 0);
}

id sub_10019A638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 + a1), *(SEL *)(v1 + 1664));
}

uint64_t sub_10019A644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + a1 + 8) = 0;
  return swift_unknownObjectWeakInit(v1 + a1, 0);
}

id sub_10019A654(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3656));
}

uint64_t sub_10019A65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

id sub_10019A66C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1400));
}

id sub_10019A678(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id sub_10019A684()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  swift_getKeyPath(&unk_100245010);
  v1 = sub_10019C870();
  sub_10019C81C(v1, v2);
  sub_1001436CC();
  return *(id *)(v0 + 16);
}

uint64_t sub_10019A6D8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t *__return_ptr);
  void (*v6)(uint64_t *__return_ptr);
  uint64_t v7;
  __n128 v8;
  uint64_t MainExecutor;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;

  sub_10019C894();
  v4 = v3;
  v6 = v5;
  v7 = static MainActor.shared.getter(v5);
  v8 = swift_release(v7);
  MainExecutor = swift_task_getMainExecutor(v8);
  if ((swift_task_isCurrentExecutor(MainExecutor) & 1) != 0)
  {
    v10 = sub_100174764((uint64_t)&unk_10028D7C8);
    *(_QWORD *)(v10 + 16) = v6;
    *(_QWORD *)(v10 + 24) = v4;
    v6(&v17);
    if (v2)
    {
      swift_release(v10);
      return v0 & 1;
    }
    v0 = v17;
    v11 = sub_10019C840(v10, (uint64_t)"");
    swift_release(v10);
    if ((v11 & 1) == 0)
      return v0 & 1;
    __break(1u);
  }
  sub_10019C82C();
  sub_10019C804((uint64_t)"Incorrect actor executor assumption; Expected same executor as ");
  v18._countAndFlagsBits = sub_100109890(v1);
  sub_10019C8F0(v18);
  sub_100174798();
  sub_10019C860();
  sub_10019C8C4();
  result = sub_10019C87C((uint64_t)"Fatal error", v13, v14, v15, v16);
  __break(1u);
  return result;
}

uint64_t sub_10019A7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t MainExecutor;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;

  sub_10019C894();
  v3 = v2;
  v5 = v4;
  v6 = static MainActor.shared.getter(v4);
  v7 = swift_release(v6);
  MainExecutor = swift_task_getMainExecutor(v7);
  if ((swift_task_isCurrentExecutor(MainExecutor) & 1) != 0)
  {
    v9 = sub_100174764((uint64_t)&unk_10028D7F0);
    *(_QWORD *)(v9 + 16) = v5;
    *(_QWORD *)(v9 + 24) = v3;
    v10 = sub_10019BAA8((_QWORD *(*)(uint64_t *__return_ptr))sub_10019C6B0);
    if (v1)
    {
      swift_release(v9);
      return (uint64_t)v10;
    }
    v11 = sub_10019C840(v9, (uint64_t)"");
    swift_release(v9);
    if ((v11 & 1) == 0)
      return (uint64_t)v10;
    __break(1u);
  }
  sub_10019C82C();
  sub_10019C804((uint64_t)"Incorrect actor executor assumption; Expected same executor as ");
  v17._countAndFlagsBits = sub_100109890(v0);
  sub_10019C8F0(v17);
  sub_100174798();
  sub_10019C860();
  sub_10019C8C4();
  result = sub_10019C87C((uint64_t)"Fatal error", v13, v14, v15, v16);
  __break(1u);
  return result;
}

void sub_10019A8F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned int a5@<W4>, _OWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  __n128 v15;
  uint64_t MainExecutor;
  uint64_t v17;
  __int128 v18;
  Swift::String v19;
  void *object;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[3];
  unsigned int v24;

  v8 = v6;
  v24 = a5;
  v14 = static MainActor.shared.getter(a1);
  v15 = swift_release(v14);
  MainExecutor = swift_task_getMainExecutor(v15);
  if ((swift_task_isCurrentExecutor(MainExecutor) & 1) == 0)
    goto LABEL_8;
  v17 = sub_100174764((uint64_t)&unk_10028D818);
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  sub_10019BAE0((void (*)(_OWORD *__return_ptr))sub_10019C7AC, (uint64_t)v23);
  if (v7)
  {
    swift_release(v17);
    return;
  }
  a4 = sub_10019C840(v17, (uint64_t)"");
  swift_release(v17);
  if ((a4 & 1) != 0)
  {
    __break(1u);
LABEL_8:
    sub_10019C82C();
    sub_10019C804((uint64_t)"Incorrect actor executor assumption; Expected same executor as ");
    v19._countAndFlagsBits = sub_100109890(v8);
    object = v19._object;
    String.append(_:)(v19);
    swift_bridgeObjectRelease(object);
    sub_10019C860();
    sub_10019C8C4();
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v21, v22, a3, a4, v24);
    __break(1u);
    return;
  }
  v18 = v23[1];
  *a6 = v23[0];
  a6[1] = v18;
  a6[2] = v23[2];
}

void sub_10019AA44()
{
  unint64_t v0;
  uint64_t v1;

  swift_getKeyPath(&unk_100245088);
  v0 = sub_10019C870();
  sub_10019C81C(v0, v1);
  sub_1001436CC();
  sub_10011AEDC();
}

double sub_10019AA8C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double result;
  _BYTE v4[24];

  swift_getKeyPath(&unk_100245038);
  v1 = sub_10019C870();
  sub_10019C81C(v1, v2);
  sub_1001436CC();
  swift_beginAccess(v0 + 32, v4, 0, 0);
  *(_QWORD *)&result = swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32)).n128_u64[0];
  return result;
}

uint64_t sub_10019AAF8()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = sub_10019A684();
  v1 = objc_msgSend(v0, "displayName");

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  return v2;
}

BOOL sub_10019AB58()
{
  id v0;
  unsigned int v1;

  v0 = sub_10019A684();
  v1 = objc_msgSend(v0, "service");

  return v1 == 1;
}

void sub_10019AB94(id *a1)
{
  sub_10019ABBC(*a1);
}

void sub_10019ABBC(void *a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100245010);
  sub_10019C854(KeyPath, (uint64_t)sub_10019C658, v3, v4, v5, v6, v7, v8, v9);
  sub_1001438D8();

  sub_1001435C0();
}

void sub_10019AC04(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2;
  v3 = a2;

}

uint64_t sub_10019AC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v8;

  v6 = sub_10019C618();
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, a1, a2, a3, (char *)&type metadata for () + 8, v6);
}

void sub_10019ACBC()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_100245088);
  sub_10019C854(KeyPath, (uint64_t)sub_10019C798, v1, v2, v3, v4, v5, v6, v7);
  sub_1001438D8();
  sub_1001435C0();
}

void sub_10019AD04(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  sub_10019AD2C();
}

void sub_10019AD2C()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_100245038);
  sub_10019C854(KeyPath, (uint64_t)sub_10019C6EC, v1, v2, v3, v4, v5, v6, v7);
  sub_1001438D8();
  sub_1001096DC();
  sub_1001435C0();
}

uint64_t sub_10019AD74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(a1 + 32, v6, 1, 0);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2;
  swift_bridgeObjectRetain(a2);
  return swift_bridgeObjectRelease(v4);
}

void sub_10019ADD8()
{
  unint64_t v0;
  uint64_t v1;

  swift_getKeyPath(&unk_100245060);
  v0 = sub_10019C870();
  sub_10019C81C(v0, v1);
  sub_1001436CC();
  sub_10011AEDC();
}

void sub_10019AE20()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_100245060);
  sub_10019C854(KeyPath, (uint64_t)sub_10019C748, v1, v2, v3, v4, v5, v6, v7);
  sub_1001438D8();
  sub_1001435C0();
}

uint64_t sub_10019AE68(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  *(_QWORD *)(v1 + 32) = _swiftEmptyArrayStorage;
  ObservationRegistrar.init()();
  *(_QWORD *)(v1 + 16) = a1;
  v3 = a1;
  *(_DWORD *)(v1 + 24) = objc_msgSend(v3, "status");
  *(_BYTE *)(v1 + 40) = objc_msgSend(v3, "isEmergency");
  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  sub_10019C8B0(v4, v5, v6, v7, TUCallCenterCallStatusChangedNotification);

  v8 = sub_10019C908();
  sub_10019C8B0(v8, v9, v10, v11, TUCallCenterVideoCallStatusChangedNotification);

  v12 = sub_10019C908();
  objc_msgSend(v12, "addObserver:selector:name:object:", v1, "updateIsEmergencyWithNotification:", TUCallCenterIsEmergencyChangedNotification, v3);

  sub_10019AF98();
  return v1;
}

uint64_t sub_10019AF98()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  NSString v15;
  uint64_t v16;
  Class isa;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t KeyPath;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __int128 v52;
  os_log_t v53;
  _QWORD *v54;
  void *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  _QWORD v63[3];
  char v64[16];
  id v65[3];

  v1 = v0;
  v2 = type metadata accessor for ClarityUIContact(0);
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  __chkstk_darwin(v2, v3);
  v62 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10019A684();
  result = sub_10019C590(v5);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(result + 16);
    if (v8)
    {
      v59 = (id)objc_opt_self(TUCallCenter);
      v61 = (char *)v1 + OBJC_IVAR____TtC13InCallService13ClarityUICall___observationRegistrar;
      v56 = v1 + 4;
      v50 = v7;
      v9 = (unint64_t *)(v7 + 40);
      *(_QWORD *)&v10 = 138412802;
      v52 = v10;
      v51 = (char *)&type metadata for Any + 8;
      v60 = v1;
      do
      {
        v11 = *(v9 - 1);
        v12 = *v9;
        swift_bridgeObjectRetain(*v9);
        v13 = objc_msgSend(v59, "sharedInstance");
        v14 = objc_msgSend(v13, "contactStore");

        v15 = String._bridgeToObjectiveC()();
        v16 = static ClarityUIContact.requiredDescriptors(for:)(v14);
        sub_1001085C0(&qword_1002D93E0);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v16);
        v65[0] = 0;
        v18 = objc_msgSend(v14, "unifiedContactWithIdentifier:keysToFetch:error:", v15, isa, v65);

        v19 = v65[0];
        if (v18)
        {
          v20 = v65[0];
          swift_bridgeObjectRelease(v12);
          v21 = v18;
          v22 = v14;
          ClarityUIContact.init(cnContact:contactStore:)(v21, v22);
          KeyPath = swift_getKeyPath(&unk_100245038);
          v65[0] = v1;
          v24 = sub_10019C618();
          ObservationRegistrar.access<A, B>(_:keyPath:)(v65, KeyPath, v24);
          swift_release(KeyPath);
          v65[0] = v1;
          v25 = swift_getKeyPath(&unk_100245038);
          ObservationRegistrar.willSet<A, B>(_:keyPath:)(v65, v25, v24);
          swift_release(v25);
          swift_beginAccess(v56, v65, 33, 0);
          v26 = v1[4];
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v26);
          v1[4] = v26;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v26 = sub_10019BB40(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
            *v56 = v26;
          }
          v29 = *(_QWORD *)(v26 + 16);
          v28 = *(_QWORD *)(v26 + 24);
          if (v29 >= v28 >> 1)
          {
            v26 = sub_10019BB40(v28 > 1, v29 + 1, 1, v26);
            *v56 = v26;
          }
          *(_QWORD *)(v26 + 16) = v29 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v26+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(_QWORD *)(v57 + 72) * v29, v62, v58);
          swift_endAccess(v65);
          v1 = v60;
          v65[0] = v60;
          v30 = swift_getKeyPath(&unk_100245038);
          ObservationRegistrar.didSet<A, B>(_:keyPath:)(v65, v30, v24);

          swift_release(v30);
        }
        else
        {
          v31 = v65[0];
          v32 = _convertNSErrorToError(_:)(v19);

          swift_willThrow(v33);
          if (qword_1002D7298 != -1)
            swift_once(&qword_1002D7298, sub_10010C018);
          v34 = type metadata accessor for Logger(0);
          sub_100108664(v34, (uint64_t)&unk_1002E2D90);
          swift_retain(v1);
          swift_errorRetain(v32);
          swift_bridgeObjectRetain(v12);
          swift_retain(v1);
          v35 = swift_errorRetain(v32);
          v37 = Logger.logObject.getter(v35, v36);
          v38 = static os_log_type_t.error.getter(v37);
          if (os_log_type_enabled(v37, v38))
          {
            v39 = swift_slowAlloc(32, -1);
            v40 = (_QWORD *)swift_slowAlloc(8, -1);
            v54 = v40;
            v55 = (void *)swift_slowAlloc(64, -1);
            v65[0] = v55;
            *(_DWORD *)v39 = v52;
            v53 = v37;
            v41 = sub_10019A684();
            *(_QWORD *)(v39 + 4) = v41;
            *v40 = v41;
            swift_release_n(v60, 2);
            *(_WORD *)(v39 + 12) = 2080;
            swift_bridgeObjectRetain(v12);
            *(_QWORD *)(v39 + 14) = sub_100121E04(v11, v12, (uint64_t *)v65);
            swift_bridgeObjectRelease_n(v12, 3);
            *(_WORD *)(v39 + 22) = 2080;
            swift_getErrorValue(v32, v64, v63);
            v42 = Error.localizedDescription.getter(v63[1], v63[2]);
            v44 = v43;
            *(_QWORD *)(v39 + 24) = sub_100121E04(v42, v43, (uint64_t *)v65);
            swift_bridgeObjectRelease(v44);
            swift_errorRelease(v32);
            swift_errorRelease(v32);
            v45 = v53;
            _os_log_impl((void *)&_mh_execute_header, v53, v38, "Unable to find contact for call: %@, identifier: %s, error: %s", (uint8_t *)v39, 0x20u);
            v46 = sub_1001085C0(&qword_1002D7880);
            v47 = v54;
            swift_arrayDestroy(v54, 1, v46);
            swift_slowDealloc(v47, -1, -1);
            v48 = v55;
            swift_arrayDestroy(v55, 2, v51);
            swift_slowDealloc(v48, -1, -1);
            v49 = v39;
            v1 = v60;
            swift_slowDealloc(v49, -1, -1);

            swift_errorRelease(v32);
          }
          else
          {

            swift_errorRelease(v32);
            swift_bridgeObjectRelease_n(v12, 2);
            swift_release_n(v1, 2);
            swift_errorRelease(v32);
            swift_errorRelease(v32);

          }
        }
        v9 += 2;
        --v8;
      }
      while (v8);
      return swift_bridgeObjectRelease(v50);
    }
    else
    {
      return swift_bridgeObjectRelease(result);
    }
  }
  return result;
}

void sub_10019B5B8()
{
  id v0;

  v0 = sub_10019A684();
  objc_msgSend(v0, "status");

  sub_10019ACBC();
}

void sub_10019B604()
{
  id v0;

  v0 = sub_10019A684();
  objc_msgSend(v0, "isEmergency");

  sub_10019AE20();
}

uint64_t sub_10019B650(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v6 = type metadata accessor for Notification(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  swift_retain();
  a4(v10);
  sub_1001436CC();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_10019B6F4()
{
  type metadata accessor for MainActor(0);
  return sub_10019A6D8() & 1;
}

void sub_10019B764(unsigned __int8 *a1@<X8>)
{
  id v2;
  id v3;
  unsigned __int8 v4;

  v2 = sub_10019A684();
  v3 = sub_10019A684();
  v4 = objc_msgSend(v2, "isEqualToCall:", v3);

  *a1 = v4;
}

uint64_t sub_10019B7D8()
{
  type metadata accessor for MainActor(0);
  return sub_10019A7E0();
}

uint64_t sub_10019B838@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  uint64_t result;

  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = sub_10019A684();
  v3 = objc_msgSend(v2, "description");

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  result = sub_100174798();
  *a1 = 0x5579746972616C43;
  a1[1] = 0xEF203A6C6C614349;
  return result;
}

uint64_t sub_10019B910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v1 = v0 + OBJC_IVAR____TtC13InCallService13ClarityUICall___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_10019B964()
{
  uint64_t v0;

  sub_10019B910();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10019B988()
{
  return type metadata accessor for ClarityUICall(0);
}

uint64_t type metadata accessor for ClarityUICall(uint64_t a1)
{
  uint64_t result;

  result = qword_1002DBEF0;
  if (!qword_1002DBEF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClarityUICall);
  return result;
}

uint64_t sub_10019B9C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = &unk_100244F88;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10019BA68()
{
  return sub_10019B6F4() & 1;
}

uint64_t sub_10019BA88()
{
  return sub_10019B7D8();
}

_QWORD *sub_10019BAA8(_QWORD *(*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;

  result = a1(&v3);
  if (!v1)
    return (_QWORD *)v3;
  return result;
}

__n128 sub_10019BAE0@<Q0>(void (*a1)(_OWORD *__return_ptr)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  uint64_t v5;
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;
  uint64_t v9;

  a1(v7);
  if (!v2)
  {
    v5 = v8;
    v6 = v9;
    result = (__n128)v7[1];
    *(_OWORD *)a2 = v7[0];
    *(__n128 *)(a2 + 16) = result;
    *(_QWORD *)(a2 + 32) = v5;
    *(_QWORD *)(a2 + 40) = v6;
  }
  return result;
}

void sub_10019BB24()
{
  sub_10019BE2C();
}

uint64_t sub_10019BB40(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_24:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_26:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_1001085C0(&qword_1002DBFA0);
  v11 = *(_QWORD *)(type metadata accessor for ClarityUIContact(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_24;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_26;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClarityUIContact(0) - 8) + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = (unint64_t)v15 + v19;
  if ((a1 & 1) != 0)
  {
    sub_10019C344(a4 + v19, v8, v20, (void (*)(_QWORD))&type metadata accessor for ClarityUIContact);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease(a4);
  }
  else
  {
    sub_10019BFE0(0, v8, v20, a4);
  }
  return (uint64_t)v15;
}

void sub_10019BD18()
{
  sub_10019BD50();
}

void sub_10019BD34()
{
  sub_10019BD50();
}

void sub_10019BD50()
{
  uint64_t v0;
  char v1;
  size_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  sub_10019C914();
  if ((v5 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < v3)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= v3)
        v7 = v3;
    }
  }
  else
  {
    v7 = v3;
  }
  v8 = *(_QWORD *)(v0 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(v0 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1001085C0(v4);
    v11 = (_QWORD *)sub_10019C8FC(v10, 8 * v9);
    v2 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v2 - 32) / 8);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v1 & 1) != 0)
  {
    sub_10019C8E4();
    *(_QWORD *)(v0 + 16) = 0;
    sub_1001096DC();
  }
  else
  {
    sub_10019C8D4(v2, v3, (uint64_t)(v11 + 4));
  }
  sub_1001360E4();
}

void sub_10019BE10()
{
  sub_10019BE2C();
}

void sub_10019BE2C()
{
  uint64_t v0;
  char v1;
  size_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  sub_10019C914();
  if ((v5 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < v3)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= v3)
        v7 = v3;
    }
  }
  else
  {
    v7 = v3;
  }
  v8 = *(_QWORD *)(v0 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(v0 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1001085C0(v4);
    v11 = (_QWORD *)sub_10019C8FC(v10, 16 * v9);
    v2 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v2 - 32) / 16);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v1 & 1) != 0)
  {
    sub_10019C8E4();
    *(_QWORD *)(v0 + 16) = 0;
    sub_1001096DC();
  }
  else
  {
    sub_10019C8D4(v2, v3, (uint64_t)(v11 + 4));
  }
  sub_1001360E4();
}

uint64_t sub_10019BEEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 16 * a1 + 32;
  v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3, v6, v4, &type metadata for String);
    swift_bridgeObjectRelease(a4);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10019BFE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = type metadata accessor for ClarityUIContact(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v4;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3, v12, v4, v8);
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_10019C100(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = (char *)(a4 + 8 * a1 + 32);
  v7 = &__dst[8 * v4];
  if (v6 >= v7 || &v6[8 * v4] <= __dst)
  {
    memcpy(__dst, v6, 8 * v4);
    swift_bridgeObjectRelease(a4);
    return v7;
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10019C1F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 16 * a1 + 32;
  v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3, v6, v4, &type metadata for ClarityUIEnhancedEmergencyCoordinator.ViewControllerWithModality);
    swift_bridgeObjectRelease(a4);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10019C2E4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10019C344(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for AudioRoute);
}

char *sub_10019C2F0(char *result, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;

  if (a2 < 0)
  {
    sub_10019C7EC();
    result = (char *)sub_10019C7C4((uint64_t)"Fatal error", v4, v5, (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count", v6, v7, (uint64_t)"Swift/UnsafePointer.swift", v8, v9, v10, v11);
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_10019C7DC(a3, result);
  }
  return result;
}

uint64_t sub_10019C344(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD))
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;

  if (a2 < 0)
  {
    sub_10019C7EC();
    result = sub_10019C7C4((uint64_t)"Fatal error", v11, v12, (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count", v13, v14, (uint64_t)"Swift/UnsafePointer.swift", v15, v16, v17, v18);
    __break(1u);
  }
  else if (a3 < a1
         || (result = ((uint64_t (*)(_QWORD))a4)(0),
             a1 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * a2 <= a3))
  {
    a4(0);
    v10 = sub_10019C928();
    return swift_arrayInitWithTakeFrontToBack(v10);
  }
  else if (a3 != a1)
  {
    v9 = sub_10019C928();
    return swift_arrayInitWithTakeBackToFront(v9);
  }
  return result;
}

char *sub_10019C408(char *__src, uint64_t a2, char *__dst)
{
  char v4;

  if (a2 < 0)
  {
    v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v4, 1046, 0);
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_10019C48C(char *result, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;

  if (a2 < 0)
  {
    sub_10019C7EC();
    result = (char *)sub_10019C7C4((uint64_t)"Fatal error", v4, v5, (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count", v6, v7, (uint64_t)"Swift/UnsafePointer.swift", v8, v9, v10, v11);
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_10019C7DC(a3, result);
  }
  return result;
}

char *sub_10019C4E0(char *result, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;

  if (a2 < 0)
  {
    sub_10019C7EC();
    result = (char *)sub_10019C7C4((uint64_t)"Fatal error", v4, v5, (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count", v6, v7, (uint64_t)"Swift/UnsafePointer.swift", v8, v9, v10, v11);
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_10019C7DC(a3, result);
  }
  return result;
}

char *sub_10019C534(char *result, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;

  if (a2 < 0)
  {
    sub_10019C7EC();
    result = (char *)sub_10019C7C4((uint64_t)"Fatal error", v4, v5, (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count", v6, v7, (uint64_t)"Swift/UnsafePointer.swift", v8, v9, v10, v11);
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)sub_10019C7DC(a3, result);
  }
  return result;
}

uint64_t sub_10019C590(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "contactIdentifiers");

  if (!v2)
    return 0;
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String);

  return v3;
}

void sub_10019C5F4()
{
  id *v0;

  sub_1001822D0();
  *v0 = sub_10019A684();
  sub_100109438();
}

unint64_t sub_10019C618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DBF98;
  if (!qword_1002DBF98)
  {
    v1 = type metadata accessor for ClarityUICall(255);
    result = swift_getWitnessTable(&unk_100244FA0, v1);
    atomic_store(result, (unint64_t *)&qword_1002DBF98);
  }
  return result;
}

void sub_10019C658()
{
  uint64_t v0;

  sub_10019AC04(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

_QWORD *sub_10019C670@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  _QWORD v6[2];

  result = a1(v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

_QWORD *sub_10019C6B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_10019C670(*(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

void sub_10019C6C8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1001822D0();
  sub_10019AA8C();
  *v0 = v1;
  sub_100109438();
}

uint64_t sub_10019C6EC()
{
  uint64_t v0;

  return sub_10019AD74(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10019C704()
{
  _BYTE *v0;
  char v1;

  sub_1001822D0();
  sub_10019ADD8();
  *v0 = v1 & 1;
  sub_100109438();
}

void sub_10019C728()
{
  sub_10019AE20();
  sub_100109438();
}

void sub_10019C748()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 40) = *(_BYTE *)(v0 + 24);
}

void sub_10019C758()
{
  _DWORD *v0;
  int v1;

  sub_1001822D0();
  sub_10019AA44();
  *v0 = v1;
  sub_100109438();
}

void sub_10019C778()
{
  sub_10019ACBC();
  sub_100109438();
}

void sub_10019C798()
{
  uint64_t v0;

  *(_DWORD *)(*(_QWORD *)(v0 + 16) + 24) = *(_DWORD *)(v0 + 24);
}

double sub_10019C7AC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_10019BAE0((void (*)(_OWORD *__return_ptr))*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_10019C7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11)
{
  return _fatalErrorMessage(_:_:file:line:flags:)(a1, 11, 2, a4, 55, 2, a7, 25, a9, a10, a11);
}

void *sub_10019C7DC@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

void sub_10019C804(uint64_t a1@<X8>)
{
  Swift::String v1;

  v1._object = (void *)((a1 - 32) | 0x8000000000000000);
  v1._countAndFlagsBits = 0xD00000000000003FLL;
  String.append(_:)(v1);
}

uint64_t sub_10019C81C(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return ObservationRegistrar.access<A, B>(_:keyPath:)(va, v2, a1);
}

void sub_10019C82C()
{
  _StringGuts.grow(_:)(66);
}

uint64_t sub_10019C840(uint64_t a1, uint64_t a2)
{
  return swift_isEscapingClosureAtFileLocation(a1, a2, 0, 0, 0, 0);
}

uint64_t sub_10019C854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10019AC34(a1, a2, (uint64_t)&a9);
}

void sub_10019C860()
{
  Swift::String v0;

  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
}

unint64_t sub_10019C870()
{
  return sub_10019C618();
}

uint64_t sub_10019C87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return _assertionFailure(_:_:file:line:flags:)(a1, 11, 2, a4, a5, v7, v6, v5);
}

id sub_10019C8B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return objc_msgSend(a1, *(SEL *)(v8 + 1328), v6, v7, a5, v5);
}

uint64_t sub_10019C8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  return v4(0, v5, a3, v3);
}

uint64_t sub_10019C8E4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

void sub_10019C8F0(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t sub_10019C8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return swift_allocObject(a1, a2 + 32, 7);
}

id sub_10019C908()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 3968));
}

uint64_t sub_10019C928()
{
  uint64_t v0;

  return v0;
}

void sub_10019C93C(uint64_t a1)
{
  sub_10019CB7C(a1, (uint64_t *)&unk_1002DB390, (void (*)(uint64_t))&type metadata accessor for URL);
}

void sub_10019C950(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9[5];
  _BYTE v10[40];

  sub_1001569D0(a1, (uint64_t)v9, &qword_1002D9F68);
  if (v9[3] == 1)
  {
    sub_1001A3CD8((uint64_t)v9, &qword_1002D9F68);
    sub_1001A3F3C();
  }
  else
  {
    sub_1001A3C9C((uint64_t)v9, (uint64_t)v10);
    v1 = sub_10015C658((uint64_t)v10, (uint64_t)v9);
    sub_1001A3F4C(v1, (uint64_t)&type metadata for CameraStateMonitor.TimerState, v2, v3, v4, v5, v6, v7, v9[0]);
    sub_1001A3F0C();
    sub_10015C7D8(v8);
  }
  sub_1001A3E78();
  sub_100109578();
}

void sub_10019C9CC(uint64_t a1)
{
  sub_10019CA70(a1, &qword_1002DC310, type metadata accessor for CameraStateMonitor.Snapshot);
}

void sub_10019C9E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9[5];
  _BYTE v10[40];

  sub_1001569D0(a1, (uint64_t)v9, &qword_1002DBD18);
  if (v9[3] == 1)
  {
    sub_1001A3CD8((uint64_t)v9, &qword_1002DBD18);
    sub_1001A3F3C();
  }
  else
  {
    sub_1001A3C60((uint64_t)v9, (uint64_t)v10);
    v1 = sub_1001981FC((uint64_t)v10, (uint64_t)v9);
    sub_1001A3F4C(v1, (uint64_t)&type metadata for PillStateMonitor.TimerState, v2, v3, v4, v5, v6, v7, v9[0]);
    sub_1001A3F0C();
    sub_100198320(v8);
  }
  sub_1001A3E78();
  sub_100109578();
}

void sub_10019CA5C(uint64_t a1)
{
  sub_10019CA70(a1, (uint64_t *)&unk_1002DC300, type metadata accessor for PillStateMonitor.Snapshot);
}

void sub_10019CA70(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  sub_1001A3F94(a1, a2);
  sub_100120AA0();
  __chkstk_darwin(v6, v7);
  v8 = sub_1001A3E40();
  v9 = a3(v8);
  sub_100120AA0();
  __chkstk_darwin(v10, v11);
  sub_100120B0C();
  v14 = v12 - v13;
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v19 - v17;
  sub_1001A3E38(a1, v3);
  if (sub_100109FF4(v3, 1, v9) == 1)
  {
    sub_1001A3EAC(v3);
  }
  else
  {
    sub_1001982F4(v3, (uint64_t)v18, a3);
    sub_1001982C8((uint64_t)v18, v14, a3);
    String.init<A>(reflecting:)(v14);
    sub_10015C804((uint64_t)v18, a3);
  }
  sub_100143558();
}

void sub_10019CB7C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  sub_1001A3F94(a1, a2);
  sub_100120AA0();
  __chkstk_darwin(v7, v8);
  v9 = sub_100143840();
  a3(v9);
  sub_100143C00();
  __chkstk_darwin(v10, v11);
  sub_100120B0C();
  v14 = v12 - v13;
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v19 - v17;
  sub_1001A3E38(a1, v3);
  if (sub_1001A3F5C(v3) == 1)
  {
    sub_1001A3EAC(v3);
  }
  else
  {
    sub_100120B40((uint64_t)v18, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    sub_100120B40(v14, (uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    String.init<A>(reflecting:)(v14);
    sub_1001A3E2C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  sub_100143558();
}

uint64_t sub_10019CC78(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t *, _BYTE *), uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16[5];
  _BYTE v17[40];

  sub_1001569D0(a1, (uint64_t)v16, a2);
  if (v16[3])
  {
    a3(v16, v17);
    sub_1001A3AC4((uint64_t)v17, (uint64_t)v16);
    v7 = sub_1001085C0(a4);
    sub_1001A3F4C(v7, v7, v8, v9, v10, v11, v12, v13, v16[0]);
    sub_1001A3F0C();
    sub_100110DC0(v14);
  }
  else
  {
    sub_1001A3CD8((uint64_t)v16, a2);
    sub_1001A3F3C();
  }
  return sub_1001A3E78();
}

uint64_t sub_10019CD08(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = sub_10014CB24();
  v1(v3);
  return sub_1001A3D50(v2);
}

void TUCallCenter.activeVideoCall.getter()
{
  unint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  v3 = sub_10011ADD4((uint64_t)objc_msgSend(v1, "currentVideoCalls"), (unint64_t *)&qword_1002DA680, TUCall_ptr);
  sub_10010954C(v3);
  sub_10010973C();
  if (v0 >> 62)
    goto LABEL_13;
  sub_1001A3EFC();
  for (; v2; v2 = sub_10011B090())
  {
    v4 = 4;
    while (1)
    {
      v5 = (v0 & 0xC000000000000001) != 0 ? (id)sub_1001A3F68() : *(id *)(v0 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      if (objc_msgSend(v5, "status") == 1)
      {
        sub_1001A3D78();
        sub_1001A3D2C(&qword_1002D8420);
        sub_1001A3D2C(&qword_1002DBFE8);
        sub_1001A3D2C(&qword_1002DBFF0);
        goto LABEL_15;
      }

      ++v4;
      if (v7 == v2)
        goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    sub_1001A3DA8();
  }
LABEL_14:
  sub_1001A3D78();
LABEL_15:
  sub_100143558();
}

uint64_t sub_10019CE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10010BED4(v0, qword_1002DBFD0);
  v1 = sub_100108664(v0, (uint64_t)qword_1002DBFD0);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v2 = sub_100108664(v0, (uint64_t)&unk_1002E2CC8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10019CF1C(uint64_t a1)
{
  id *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[24];

  v1 = (id *)(a1 + direct field offset for CNKBannerPresentationManager.value);
  sub_100111F6C(a1 + direct field offset for CNKBannerPresentationManager.value, (uint64_t)v5, 0);
  v2 = *v1;
  v3 = sub_1001A3FEC();

  if (v3)
  {
    v4 = sub_1001A3E78();
    makeConversationHUDDetailsNavigationController(for:delegate:shouldSetControlsManagerInCallDetailsDelegate:)(v4);
    sub_10010973C();
  }
  sub_1001A3DC4();
}

void sub_10019D004(void *a1, uint64_t a2)
{
  id *v4;
  _BYTE v5[24];

  type metadata accessor for MultiwayViewController(0);
  v4 = (id *)(a2 + direct field offset for CNKBannerPresentationManager.value);
  sub_100111F6C((uint64_t)v4, (uint64_t)v5, 0);
  MultiwayViewController.__allocating_init(activeCall:bannerPresentationManager:)(a1, *v4);
  sub_1001A3DC4();
}

void sub_10019D0D4(uint64_t a1)
{
  void *v1;
  id *v2;
  id v3;
  _BYTE v4[24];

  v2 = (id *)(a1 + direct field offset for CNKBannerPresentationManager.value);
  sub_100111F6C(a1 + direct field offset for CNKBannerPresentationManager.value, (uint64_t)v4, 0);
  v3 = *v2;
  sub_1001A3FEC();
  sub_10011AF04();
  if (v1)
  {
    if ((dispatch thunk of ConversationControlsManager.isConfirmLeavePTTChannelAlertPresented.getter() & 1) != 0)
      objc_msgSend(v1, "dismissConfirmLeavePTTChannelAlert");

  }
}

double sub_10019D18C(char a1)
{
  id v2;
  id v3;
  double result;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  id v17;

  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (v3)
  {
    v5 = objc_opt_self(ICSApplicationDelegate);
    v6 = (void *)swift_dynamicCastObjCClass(v3, v5);
    if (v6)
    {
      v7 = objc_msgSend(v6, "sceneManager");
      v17 = objc_msgSend(v7, "ambientScene");

      if (v17)
      {
        v8 = type metadata accessor for ActivityScene(0);
        if (swift_dynamicCastClass(v17, v8))
        {
          dispatch thunk of ActivityScene.idleTimerDisabled.setter(a1 & 1);
          swift_unknownObjectRelease(v3);
          sub_10013633C(v17);
          return result;
        }
        sub_100109874(0, v9, v10, v11, v12, v13, v14, v15, v16, v17);
      }
    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

void sub_10019D2E0(void *a1)
{
  uint64_t v1;
  void *v3;

  v3 = (void *)static NSNotificationName.cnk_acceptCallButtonTapped.getter();
  objc_msgSend(a1, "addObserver:selector:name:object:", v1, "handleAcceptCallButtonTapped:", v3, 0);
  sub_10013633C(v3);
}

void sub_10019D388()
{
  void *v0;
  NSObject *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  os_log_t oslog;
  uint64_t v22;
  uint64_t v23;

  sub_1001A3180();
  if (v1)
  {
    oslog = v1;
    if ((ConversationControlsManager.wantsCallWaitingInSystemAperture.getter() & 1) != 0)
      objc_msgSend(v0, "_obtainThenReleaseTransitionAssertion");
LABEL_9:

    return;
  }
  if (qword_1002D73A0 != -1)
    swift_once(&qword_1002D73A0, sub_10019CE8C);
  v2 = sub_100109570();
  oslog = (os_log_t)sub_10011ADC0(v2, (uint64_t)qword_1002DBFD0);
  v3 = static os_log_type_t.fault.getter();
  if (!os_log_type_enabled(oslog, v3))
    goto LABEL_9;
  v4 = (uint8_t *)sub_1001094C8(12);
  v5 = sub_1001094C8(32);
  v23 = v5;
  *(_DWORD *)v4 = 136315138;
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v7 = objc_msgSend(v6, "delegate");

  if (v7)
  {
    v22 = (uint64_t)v7;
    sub_1001085C0(&qword_1002DC2F8);
    v8 = String.init<A>(reflecting:)(&v22);
    v10 = v9;
  }
  else
  {
    v10 = 0xE300000000000000;
    v8 = 7104878;
  }
  v22 = sub_100121E04(v8, v10, &v23);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v4 + 4, v4 + 12);
  swift_bridgeObjectRelease(v10);
  sub_100109638((void *)&_mh_execute_header, oslog, v3, "Unable to find controlsManager from %s", v4);
  sub_100109598(v5, v11, (uint64_t)&type metadata for Any + 8);
  sub_100109440(v5);
  v12 = sub_100109440((uint64_t)v4);
  sub_100109874(v12, v13, v14, v15, v16, v17, v18, v19, v20, oslog);
}

void sub_10019D634()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD v53[6];

  sub_10010BC70();
  v44 = sub_100137260();
  v1 = sub_10011AFC8();
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  sub_10011AE0C();
  __chkstk_darwin(v2, v3);
  sub_10011ADE4();
  v49 = v4;
  v5 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  sub_10011AE0C();
  __chkstk_darwin(v6, v7);
  sub_10011ADE4();
  v46 = v8;
  v9 = type metadata accessor for DispatchTimeInterval(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v12 = sub_1001A3E40();
  v45 = type metadata accessor for DispatchTime(v12);
  v13 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45, v14);
  sub_100120B0C();
  v17 = v15 - v16;
  __chkstk_darwin(v18, v19);
  v21 = (char *)&v43 - v20;
  v22 = type metadata accessor for DispatchPredicate(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  sub_10010BC88();
  v27 = (uint64_t *)(v26 - v25);
  sub_10011ADD4(v28, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v29 = sub_100143B58();
  *v27 = v29;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v23 + 104))(v27, enum case for DispatchPredicate.onQueue(_:), v22);
  v43 = (id)v29;
  LOBYTE(v29) = _dispatchPreconditionTest(_:)(v27);
  (*(void (**)(uint64_t *, uint64_t))(v23 + 8))(v27, v22);
  if ((v29 & 1) != 0)
  {
    v30 = v44;
    sub_10019D998((uint64_t)CFSTR("PHTransitioningBetweenViewControllersAssertionReason"), (SEL *)&selRef_obtainDismissalAssertionForReason_);
    static DispatchTime.now()();
    *v0 = 500;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v0, enum case for DispatchTimeInterval.milliseconds(_:), v9);
    v31 = v17;
    DispatchTime.advanced(by:)(v0);
    (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v0, v9);
    v32 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v33 = v45;
    v32(v17, v45);
    v34 = swift_allocObject(&unk_10028D930, 24, 7);
    *(_QWORD *)(v34 + 16) = v30;
    v53[4] = sub_1001A3C58;
    v53[5] = v34;
    v53[0] = _NSConcreteStackBlock;
    v53[1] = 1107296256;
    v53[2] = sub_10019CD08;
    v53[3] = &unk_10028D948;
    v35 = _Block_copy(v53);
    v36 = v46;
    static DispatchQoS.unspecified.getter(v35);
    v52 = _swiftEmptyArrayStorage;
    sub_10015C704((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    v38 = v37;
    sub_1001085C0((uint64_t *)&unk_1002D7F80);
    v39 = sub_10011B048();
    v40 = v49;
    v41 = v51;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v52, v31, v39, v51, v38);
    v42 = v43;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v21, v36, v40, v35);
    _Block_release(v35);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v40, v41);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v36, v48);
    v32((uint64_t)v21, v33);
    swift_release();
    sub_10010BC44();
  }
  else
  {
    __break(1u);
  }
}

void sub_10019D964()
{
  sub_10019D998((uint64_t)CFSTR("PHTransitioningBetweenViewControllersAssertionReason"), (SEL *)&selRef_releaseDismissalAssertionForReason_);
}

void sub_10019D998(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  void *ObjCClassFromMetadata;
  NSString v6;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v2);
  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = String._bridgeToObjectiveC()();
  sub_100109558();
  objc_msgSend(ObjCClassFromMetadata, *a2, v6);
  sub_10013633C(v6);
}

BOOL sub_10019DA28()
{
  return TUCall.isBlocked()();
}

void sub_10019DA98(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;

  v2 = objc_msgSend(a1, "type");
  if (v2 == (id)1)
    goto LABEL_18;
  if (v2 != (id)2)
  {
    if (v2 == (id)3)
    {
      v40 = objc_msgSend((id)objc_opt_self(TUPrivacyManager), "sharedPrivacyManager");
      if (v40)
      {
        v3 = objc_msgSend(a1, "value");
        v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
        v6 = v5;

        sub_1001A3B04(1, v4, v6, v40);
LABEL_17:
        sub_1001A3D8C(v40);
        return;
      }
      __break(1u);
      goto LABEL_20;
    }
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v16 = sub_100109570();
    sub_100108664(v16, (uint64_t)&unk_1002E2CC8);
    v41 = a1;
    v18 = Logger.logObject.getter(v41, v17);
    v19 = static os_log_type_t.error.getter(v18);
    if (!os_log_type_enabled(v18, v19))
    {

      sub_100109874(v27, v28, v29, v30, v31, v32, v33, v34, v39, v41);
      goto LABEL_17;
    }
    v20 = (uint8_t *)sub_1001094C8(12);
    v21 = sub_1001094C8(32);
    v43 = v21;
    *(_DWORD *)v20 = 136315138;
    v42 = (uint64_t)v41;
    sub_10011ADD4((uint64_t)v41, &qword_1002D8290, TUHandle_ptr);
    v22 = v41;
    v23 = String.init<A>(reflecting:)(&v42);
    v25 = v24;
    v42 = sub_100121E04(v23, v24, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v20 + 4, v20 + 12);

    swift_bridgeObjectRelease(v25);
    sub_100109638((void *)&_mh_execute_header, v18, v19, "Unknown handle type: %s", v20);
    sub_100109598(v21, v26, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v21);
    sub_100109440((uint64_t)v20);

LABEL_18:
    sub_1001821F4();
    return;
  }
  v7 = objc_msgSend(a1, "value");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = (id)TUHomeCountryCode();
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v35 = objc_allocWithZone((Class)TUPhoneNumber);
  v36 = sub_1001A36CC(v8, v10, v13, v15);
  if (!v36)
    goto LABEL_18;
  v37 = v36;
  v38 = objc_msgSend((id)objc_opt_self(TUPrivacyManager), "sharedPrivacyManager");
  if (v38)
  {
    v40 = v38;
    objc_msgSend(v38, "setBlockIncomingCommunication:forPhoneNumber:", 1, v37);

    goto LABEL_17;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_10019DDDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = type metadata accessor for ReportSpamManager.IDSServiceType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v6 = sub_100143840();
  type metadata accessor for ReportSpamManager(v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, enum case for ReportSpamManager.IDSServiceType.facetimeCall(_:), v3);
  v7 = ReportSpamManager.__allocating_init(idsServiceType:)(v1);
  v10 = a1;
  v8 = sub_10011ADD4(v7, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  ReportSpamManager.reportFaceTimeCallSpam<A>(call:)(&v10, v8, &protocol witness table for TUCall);
  objc_msgSend((id)objc_opt_self(PHInCallRootViewController), "releaseDismissalAssertionForReason:", CFSTR("PHCallEndedBlockAndReportInProgressAssertionReason"));
  return sub_100110F0C();
}

id sub_10019DF04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  NSObject *v6;
  NSObject *v7;
  NSObject *v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  __n128 v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  char v30;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  NSObject *v34;
  uint8_t *v35;
  _QWORD *v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  uint64_t v42;
  os_log_type_t v43;
  uint64_t v44;
  _QWORD *v45;
  NSObject *v46;
  uint64_t v47;
  NSObject *v48;
  NSObject *v49;
  uint64_t v50;
  id v52;
  NSObject *v53;
  NSObject *v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;

  sub_10019E418(a1, a2, a3, a4, a5, a6);
  v8 = v7;
  v9 = objc_msgSend(objc_allocWithZone((Class)CHManager), "init");
  v10 = -[NSObject latestCallMatchingPredicate:](v9, "latestCallMatchingPredicate:", v8);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v11 = sub_100109570();
  v12 = sub_100108664(v11, (uint64_t)&unk_1002E2CC8);
  v13 = v10;
  v15 = sub_1001A3F2C((uint64_t)v13, v14);
  v17 = static os_log_type_t.default.getter(v16);
  v52 = v10;
  if (os_log_type_enabled(v15, v17))
  {
    v18 = (uint8_t *)sub_1001094C8(12);
    v19 = sub_1001094C8(32);
    v56 = v19;
    *(_DWORD *)v18 = 136315138;
    v20 = sub_1001085C0((uint64_t *)&unk_1002DC2E0);
    v21 = Optional.debugDescription.getter(v20);
    v55 = sub_100121E04(v21, v22, (uint64_t *)&v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v18 + 4, v18 + 12);

    sub_1001094F4();
    sub_100109638((void *)&_mh_execute_header, v15, v17, "recentCall: %s", v18);
    sub_100109598(v19, v23, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v19);
    sub_100109440((uint64_t)v18);

    if (v6)
      goto LABEL_5;
LABEL_10:
    v31 = v8;
    sub_1001A3F2C((uint64_t)v31, v32);
    v33 = sub_10011ADDC();
    if (os_log_type_enabled(v12, v33))
    {
      v34 = v9;
      v35 = (uint8_t *)sub_1001094C8(12);
      v36 = (_QWORD *)sub_1001094C8(8);
      *(_DWORD *)v35 = 138412290;
      v56 = v6;
      v37 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v35 + 4, v35 + 12);
      *v36 = v6;

      sub_100109638((void *)&_mh_execute_header, v12, v33, "No call matching predicate %@ was found", v35);
      v38 = sub_1001085C0(&qword_1002D7880);
      sub_100109598((uint64_t)v36, v39, v38);
      sub_100109440((uint64_t)v36);
      sub_100109440((uint64_t)v35);
      v40 = 0;
      v6 = v37;
      v9 = v34;
    }
    else
    {

      v40 = 0;
      v12 = v6;
    }
    goto LABEL_23;
  }

  if (!v6)
    goto LABEL_10;
LABEL_5:
  v24 = v6;
  v25 = -[NSObject filteredOutReason](v24, "filteredOutReason");
  v26 = sub_1001A3FD4(objc_allocWithZone((Class)NSNumber));
  v6 = v26;
  if (!v25)
  {
    if (!v26)
      goto LABEL_13;
LABEL_16:

    goto LABEL_17;
  }
  if (!v26)
  {
    v6 = v25;
    goto LABEL_16;
  }
  sub_10011ADD4((uint64_t)v26, (unint64_t *)&qword_1002D84F8, NSNumber_ptr);
  v27 = v25;
  v28 = v8;
  v29 = v27;
  v30 = static NSObject.== infix(_:_:)(v27, v6);

  v8 = v28;
  if ((v30 & 1) != 0)
  {
LABEL_13:
    v6 = v8;
    v12 = v9;
    v9 = v24;
    v40 = v52;
    goto LABEL_23;
  }
LABEL_17:
  v41 = v24;
  sub_1001A3F2C((uint64_t)v41, v42);
  v43 = sub_10011ADDC();
  if (os_log_type_enabled(v12, v43))
  {
    v53 = v9;
    v54 = v8;
    v44 = sub_1001094C8(22);
    v45 = (_QWORD *)sub_1001094C8(16);
    *(_DWORD *)v44 = 138412546;
    v46 = sub_1001A3FD4(objc_allocWithZone((Class)NSNumber));
    v56 = v46;
    v47 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v44 + 4, v44 + 12);
    *v45 = v46;
    *(_WORD *)(v44 + 12) = 2112;
    v48 = sub_100136368(v47, "filteredOutReason");
    v49 = v48;
    if (v48)
      v56 = v48;
    else
      v56 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v44 + 14, v44 + 22);
    v45[1] = v49;

    _os_log_impl((void *)&_mh_execute_header, v12, v43, "The call we found had the wrong filteredOutReason (expected: %@ actual: %@)", (uint8_t *)v44, 0x16u);
    v50 = sub_1001085C0(&qword_1002D7880);
    swift_arrayDestroy(v45, 2, v50);
    sub_100109440((uint64_t)v45);
    sub_100109440(v44);

    v40 = 0;
    v9 = v53;
  }
  else
  {

    v40 = 0;
    v12 = v8;
  }
LABEL_23:

  return v40;
}

void sub_10019E418(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Class isa;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;

  v8 = sub_1001085C0((uint64_t *)&unk_1002D7F60);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100241810;
  v10 = (void *)objc_opt_self(CHRecentCall);
  v11 = sub_1001085C0(&qword_1002DBFB0);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100241F90;
  *(_QWORD *)(v12 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kCHServiceProviderFaceTime);
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(kCHServiceProviderTelephony);
  *(_QWORD *)(v12 + 56) = v14;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  v16 = objc_msgSend(v10, "predicateForCallsWithAnyServiceProviders:", isa);

  *(_QWORD *)(v9 + 32) = v16;
  v17 = objc_msgSend(v10, "predicateForCallsWithRemoteParticipantCount:", 1);
  *(_QWORD *)(v9 + 40) = v17;
  v59 = v9;
  specialized Array._endMutation()(v17, v18);
  v19 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1002420C0;
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v10, "predicateForCallsWithRemoteParticipantHandleValue:", v20);

  *(_QWORD *)(v19 + 32) = v21;
  v58 = v19;
  specialized Array._endMutation()(v22, v23);
  v24 = v19;
  if (a6)
  {
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v10, "predicateForCallsWithUniqueID:", v25);

    v27 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "notPredicateWithSubpredicate:", v26);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
    v30 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v29 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v30 >= v29 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1);
    v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
    specialized Array._endMutation()(v31, v32);
  }
  if (a4)
  {
    v33 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0)
      v33 = a3 & 0xFFFFFFFFFFFFLL;
    if (v33)
    {
      v34 = String._bridgeToObjectiveC()();
      v35 = objc_msgSend(v10, "predicateForCallsWithRemoteParticipantHandleNormalizedValue:", v34);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
      v38 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v37 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v38 >= v37 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1);
      v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v35);
      specialized Array._endMutation()(v39, v40);
      v24 = v58;
    }
  }
  if ((unint64_t)v24 >> 62)
  {
    if (v24 < 0)
      v48 = v24;
    else
      v48 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v24);
    v49 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(v24);
    if (v49 >= 2)
    {
LABEL_14:
      sub_10010BBE8(0, &qword_1002DC2C8, NSCompoundPredicate_ptr);
      sub_10019EBE8(v24, (SEL *)&selRef_orPredicateWithSubpredicates_);
      v43 = v42;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
      v45 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v44 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v45 >= v44 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1);
      v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
      specialized Array._endMutation()(v46, v47);
      goto LABEL_29;
    }
    swift_bridgeObjectRetain(v24);
    v41 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(v24);
  }
  else
  {
    v41 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v41 > 1)
      goto LABEL_14;
  }
  if (v41)
  {
    sub_100119E3C(0, (v24 & 0xC000000000000001) == 0, v24);
    if ((v24 & 0xC000000000000001) != 0)
      v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v24);
    else
      v50 = *(id *)(v24 + 32);
    v51 = v50;
    swift_bridgeObjectRelease(v24);
    v52 = v51;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
    v54 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v53 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v54 >= v53 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1);
    v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
    specialized Array._endMutation()(v55, v56);

  }
  else
  {
    swift_bridgeObjectRelease(v24);
  }
LABEL_29:
  sub_10010BBE8(0, &qword_1002DC2C8, NSCompoundPredicate_ptr);
  sub_10019EBE8(v59, (SEL *)&selRef_andPredicateWithSubpredicates_);
}

BOOL sub_10019E9B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  NSObject *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  sub_10019E418(a1, a2, a3, a4, 0, 0);
  v6 = v5;
  v7 = objc_msgSend(objc_allocWithZone((Class)CHManager), "init");
  v8 = objc_msgSend(v7, "callCountWithPredicate:", v6);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v9 = sub_100109570();
  sub_10011ADC0(v9, (uint64_t)&unk_1002E2CC8);
  v10 = sub_10011ADDC();
  if (os_log_type_enabled(v4, v10))
  {
    v11 = (uint8_t *)sub_1001094C8(12);
    v12 = sub_1001094C8(32);
    v23 = (uint64_t)v8;
    v24 = v12;
    *(_DWORD *)v11 = 136315138;
    v19 = sub_1001A3F4C(v12, (uint64_t)&type metadata for Int, v13, v14, v15, v16, v17, v18, v23);
    v23 = sub_100121E04(v19, v20, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v11 + 4, v11 + 12);
    sub_10011AF80();
    sub_100109638((void *)&_mh_execute_header, v4, v10, "matching calls in call history count: %s", v11);
    sub_100109598(v12, v21, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v12);
    sub_100109440((uint64_t)v11);

  }
  else
  {

  }
  return (unint64_t)v8 < 2;
}

void sub_10019EBE8(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  Class isa;
  id v5;

  sub_10011ADD4(a1, (unint64_t *)&unk_1002DC2D0, NSPredicate_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_100109558();
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), *a2, isa);

  sub_100109830();
}

Swift::Void __swiftcall PHInCallRootViewController.contactViewController(_:didCompleteWith:)(CNContactViewController _, CNContact_optional didCompleteWith)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  _QWORD v6[6];

  v3 = objc_msgSend(v2, "presentedViewController", *(_QWORD *)&didCompleteWith.is_nil);
  if (v3)
  {
    v4 = v3;
    v6[4] = sub_10019ED00;
    v6[5] = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    v6[2] = sub_100112054;
    v6[3] = &unk_10028D858;
    v5 = _Block_copy(v6);
    objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, v5);
    _Block_release(v5);

  }
}

id sub_10019ED00()
{
  void *v0;

  v0 = (void *)objc_opt_self(PHInCallRootViewController);
  objc_msgSend(v0, "releaseDismissalAssertionForReason:", CFSTR("PHCallEndedBlockAndReportInProgressAssertionReason"));
  return objc_msgSend(v0, "releaseDismissalAssertionForReason:", CFSTR("PHMulitwayCallAssertionReason"));
}

void *sub_10019EDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  swift_getKeyPath(&unk_100245328);
  sub_10015C704(&qword_1002DC218, type metadata accessor for CallManagerBridge.Calls);
  sub_10019C81C(v1, v2);
  sub_1001436CC();
  v3 = *(void **)(v0 + 16);
  v4 = v3;
  return v3;
}

void sub_10019EE2C(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_10019EE58(v1);
}

void sub_10019EE58(void *a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100245328);
  sub_1001A3FC8(KeyPath, (uint64_t)sub_10019C658, v3, v4, v5, v6, v7, v8, v9);
  swift_release();

}

uint64_t sub_10019EEB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  swift_getKeyPath(&unk_100245300);
  sub_10015C704(&qword_1002DC218, type metadata accessor for CallManagerBridge.Calls);
  sub_10019C81C(v0, v1);
  sub_1001436CC();
  v2 = (void *)sub_1001A3E78();
  sub_1001A3A58(v2, v3);
  return sub_1001A3E78();
}

double sub_10019EF30(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = *(id *)a1;
  v2 = *(void **)(a1 + 8);
  sub_1001A3A58(*(id *)a1, v2);
  return sub_10019EF70(v1, v2);
}

double sub_10019EF70(void *a1, void *a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  KeyPath = swift_getKeyPath(&unk_100245300);
  sub_1001A3FC8(KeyPath, (uint64_t)sub_1001A3A10, v5, v6, v7, v8, v9, v10, v12);
  sub_1001A3A2C(a1, a2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10019EFE0(uint64_t a1, void *a2, void *a3)
{
  void *v3;
  void *v4;

  v3 = *(void **)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 24) = a2;
  *(_QWORD *)(a1 + 32) = a3;
  sub_1001A3A58(a2, a3);
  sub_1001A3A2C(v3, v4);
}

uint64_t sub_10019F028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  sub_10015C704(&qword_1002DC218, type metadata accessor for CallManagerBridge.Calls);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, a1, a2, a3, (char *)&type metadata for () + 8, v6);
}

void sub_10019F0C8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1001A3A2C(*(void **)(v0 + 24), *(void **)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  v1 = type metadata accessor for ObservationRegistrar(0);
  sub_10010A198(v1);
  sub_100109438();
}

uint64_t sub_10019F110()
{
  uint64_t v0;

  sub_10019F0C8();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

_QWORD *sub_10019F134()
{
  _QWORD *v0;

  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  v0[5] = _swiftEmptyArrayStorage;
  ObservationRegistrar.init()();
  return v0;
}

uint64_t sub_10019F168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___ICSCallManagerBridge_jindoActivity);
  *(_QWORD *)(v1 + OBJC_IVAR___ICSCallManagerBridge_jindoActivity) = a1;
  return swift_release(v2);
}

void sub_10019F1B0()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  swift_retain();
  v0 = (void *)sub_10019EEB0();
  v2 = v1;
  sub_1001436CC();
  if (v0)
  {
    v3 = v0;
    sub_1001A3A2C(v0, v2);
  }
  sub_100109830();
}

uint64_t sub_10019F208()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall);
  swift_beginAccess(v1, v3, 0, 0);
  return HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.setter(*v1);
}

uint64_t sub_10019F260()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall);
  sub_100111F6C(v0 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall, (uint64_t)v3, 0);
  return *v1;
}

void sub_10019F2A0(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall);
  sub_100111F6C(v1 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall, (uint64_t)v4, 1);
  *v3 = a1;
  sub_10019F208();
  sub_1001A3DC4();
}

uint64_t sub_10019F308()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___ICSCallManagerBridge_ignoreUpdates);
}

uint64_t sub_10019F33C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___ICSCallManagerBridge_ignoreUpdates) = result;
  return result;
}

void sub_10019F37C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + OBJC_IVAR___ICSCallManagerBridge_callManager))
  {
    v1 = sub_10014CB24();
    dispatch thunk of AudioCallManager.isICSInBackground.getter(v1);
    sub_100110F0C();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10019F3FC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___ICSCallManagerBridge_callManager);
  if (v2)
  {
    v3 = result;
    sub_10014CB24();
    dispatch thunk of AudioCallManager.isICSInBackground.setter(v3 & 1);
    return sub_1001A3D50(v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10019F468()
{
  uint64_t v0;
  id *v1;
  id *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  sub_10019F56C();
  if (!v1)
    goto LABEL_10;
  v2 = v1;
  v3 = objc_msgSend(v1, "viewControllers");
  sub_10011AF04();
  v5 = sub_10011ADD4(v4, &qword_1002DC280, UIViewController_ptr);
  sub_10010954C(v5);
  sub_10010973C();
  if ((unint64_t)v2 >> 62)
  {
    sub_1001A3DA8();
    sub_10011B090();
    sub_1001A3FE0();
    if (v0)
      goto LABEL_4;
LABEL_9:
    swift_bridgeObjectRelease(v2);
    goto LABEL_10;
  }
  if (!*(_QWORD *)(((unint64_t)v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_9;
LABEL_4:
  sub_100119E3C(0, ((unint64_t)v2 & 0xC000000000000001) == 0, v2);
  if (((unint64_t)v2 & 0xC000000000000001) != 0)
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
  else
    v6 = v2[4];
  sub_1001A3FE0();
  v7 = objc_opt_self(PHAudioCallViewController);
  if (!sub_100163178(v7))

LABEL_10:
  sub_100109438();
}

void sub_10019F56C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  v1 = v0;
  sub_10014CB24();
  v2 = (void *)sub_10019EEB0();
  v4 = v3;
  sub_100110F0C();
  if (!v2)
    goto LABEL_4;
  v5 = v4;
  sub_1001A3A2C(v2, v4);
  v6 = objc_opt_self(UINavigationController);
  if (!sub_100163178(v6))
  {

LABEL_4:
    swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___ICSCallManagerBridge_warmedAudioCallNavController);
  }
  sub_100109830();
}

uint64_t sub_10019F5E8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  void (*v7)(void);
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  objc_class *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  __n128 v72;
  void *v73;
  char *v74;
  id v75;
  void (*v76)(void);
  uint64_t v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(void);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[24];
  objc_super v90;
  uint64_t v91;
  uint64_t v92;

  sub_10010BC70();
  v91 = v2;
  v92 = v3;
  v4 = v0;
  v6 = v5;
  v83 = v7;
  v9 = v8;
  sub_1001085C0(&qword_1002DC268);
  sub_100120AA0();
  __chkstk_darwin(v10, v11);
  sub_10011ADE4();
  v87 = v12;
  sub_1001085C0(&qword_1002DC288);
  sub_100120AA0();
  __chkstk_darwin(v13, v14);
  sub_1001437C0();
  v86 = v15;
  __chkstk_darwin(v16, v17);
  v85 = (char *)&v75 - v18;
  v84 = sub_1001085C0(&qword_1002DC290);
  v19 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84, v20);
  sub_1001097B0();
  v81 = sub_1001085C0(&qword_1002DC298);
  sub_100120AA0();
  __chkstk_darwin(v21, v22);
  sub_1001437C0();
  v82 = v23;
  __chkstk_darwin(v24, v25);
  v88 = (uint64_t)&v75 - v26;
  v27 = OBJC_IVAR___ICSCallManagerBridge_activityManager;
  v28 = ((uint64_t (*)(_QWORD))type metadata accessor for HUDActivityManager)(0);
  v29 = v4;
  v77 = v28;
  *(_QWORD *)&v4[v27] = ((uint64_t (*)(void))static HUDActivityManager.shared.getter)();
  v30 = &v29[OBJC_IVAR___ICSCallManagerBridge_inCallRootViewController];
  swift_unknownObjectWeakInit(&v29[OBJC_IVAR___ICSCallManagerBridge_inCallRootViewController]);
  v31 = (uint64_t)&v29[OBJC_IVAR___ICSCallManagerBridge_stream];
  v32 = sub_1001085C0(&qword_1002DC090);
  sub_100108600(v31, 1, 1, v32);
  v33 = (uint64_t)&v29[OBJC_IVAR___ICSCallManagerBridge_continuation];
  v34 = sub_1001085C0(&qword_1002DC0A0);
  sub_100108600(v33, 1, 1, v34);
  *(_QWORD *)&v29[OBJC_IVAR___ICSCallManagerBridge_callManager] = 0;
  v35 = OBJC_IVAR___ICSCallManagerBridge_calls;
  v36 = type metadata accessor for CallManagerBridge.Calls(0);
  v37 = sub_10010BC64(v36);
  sub_10019F134();
  *(_QWORD *)&v29[v35] = v37;
  *(_QWORD *)&v29[OBJC_IVAR___ICSCallManagerBridge_jindoActivity] = 0;
  v29[OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall] = 0;
  v29[OBJC_IVAR___ICSCallManagerBridge_ignoreUpdates] = 0;
  swift_unknownObjectWeakInit(&v29[OBJC_IVAR___ICSCallManagerBridge_warmedAudioCallNavController]);
  v78 = v9;
  swift_unknownObjectWeakAssign(v30, v9);
  v38 = v83;
  *(_QWORD *)&v29[OBJC_IVAR___ICSCallManagerBridge_callDisplayStyleManager] = v83;
  *(_QWORD *)&v29[OBJC_IVAR___ICSCallManagerBridge_flags] = v6;
  v76 = v38;
  v75 = v6;

  v39 = (objc_class *)type metadata accessor for CallManagerBridge(0);
  v90.receiver = v29;
  v90.super_class = v39;
  v40 = objc_msgSendSuper2(&v90, "init");
  v41 = v81;
  v42 = v88;
  v43 = v88 + *(int *)(v81 + 48);
  v44 = sub_10011ADD4((uint64_t)v40, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  v45 = v84;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v1, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v84);
  v79 = v40;
  v80 = v43;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))static AsyncStream.makeStream(of:bufferingPolicy:))(v42, v43, v44, v1, v44);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v1, v45);
  v46 = v82 + *(int *)(v41 + 48);
  v47 = v32;
  v48 = *(_QWORD *)(v32 - 8);
  v83 = *(void (**)(void))(v48 + 16);
  v84 = v48;
  v49 = v48;
  v50 = v82;
  v83();
  v51 = v34;
  v52 = *(_QWORD *)(v34 - 8);
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
  v53(v46, v43, v51);
  v54 = (uint64_t)v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v85, v50, v47);
  sub_100108600(v54, 0, 1, v47);
  v55 = v79;
  v56 = (uint64_t)v79 + OBJC_IVAR___ICSCallManagerBridge_stream;
  sub_100111F6C((uint64_t)v79 + OBJC_IVAR___ICSCallManagerBridge_stream, (uint64_t)v89, 33);
  sub_1001569FC(v54, v56, &qword_1002DC288);
  swift_endAccess(v89);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v46, v51);
  v57 = v50 + *(int *)(v41 + 48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v83)(v50, v88, v47);
  v53(v57, v80, v51);
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32);
  v59 = v86;
  v60 = v87;
  v58(v87, v57, v51);
  sub_100108600(v60, 0, 1, v51);
  v61 = (uint64_t)v55 + OBJC_IVAR___ICSCallManagerBridge_continuation;
  sub_100111F6C((uint64_t)v55 + OBJC_IVAR___ICSCallManagerBridge_continuation, (uint64_t)v89, 33);
  sub_1001569FC(v60, v61, &qword_1002DC268);
  swift_endAccess(v89);
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v50, v47);
  v62 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  sub_1001569D0(v56, v59, &qword_1002DC288);
  result = sub_100109FF4(v59, 1, v47);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_10015C704(&qword_1002DC2A0, type metadata accessor for CallManagerBridge);
    v65 = v64;
    sub_10015C704(&qword_1002DC2A8, type metadata accessor for CallManagerBridge);
    v67 = v66;
    sub_1001A3760(&qword_1002DC2B0, &qword_1002DC2B8, TUCallCenter_ptr);
    v69 = v68;
    v70 = sub_1001085C0(&qword_1002DC2C0);
    sub_10010BC64(v70);
    v71 = v55;
    *(_QWORD *)&v71[OBJC_IVAR___ICSCallManagerBridge_callManager] = ((uint64_t (*)(id, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t))AudioCallManager.init(withCallCoordinator:andStream:resolvingCallsWith:presentingCallsWith:))(v62, v69, v59, v71, v65, v71, v67);
    v72 = swift_release();
    v73 = (void *)((uint64_t (*)(__n128))static HUDActivityManager.shared.getter)(v72);
    v74 = v71;
    ((void (*)(char *, uint64_t))dispatch thunk of HUDActivityManager.displayResolver.setter)(v71, v65);

    sub_1001A3CD8(v88, &qword_1002DC298);
    return (uint64_t)v74;
  }
  return result;
}

void sub_10019FC1C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  _BYTE v20[24];

  sub_1001085C0(&qword_1002DC0A0);
  sub_100143C00();
  __chkstk_darwin(v7, v8);
  sub_1001097B0();
  sub_1001085C0(&qword_1002DC268);
  sub_100120AA0();
  __chkstk_darwin(v9, v10);
  sub_1001436EC();
  sub_1001085C0(&qword_1002DC270);
  sub_100120AA0();
  __chkstk_darwin(v11, v12);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((*(_BYTE *)(v2 + OBJC_IVAR___ICSCallManagerBridge_ignoreUpdates) & 1) == 0)
  {
    v15 = v2 + OBJC_IVAR___ICSCallManagerBridge_continuation;
    sub_100111F6C(v15, (uint64_t)v20, 0);
    sub_1001569D0(v15, v4, &qword_1002DC268);
    if (sub_1001A3F5C(v4))
    {
      sub_1001A3CD8(v4, &qword_1002DC268);
      v16 = 1;
    }
    else
    {
      sub_100120B40(v3, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
      sub_1001A3CD8(v4, &qword_1002DC268);
      v19 = a1;
      v17 = a1;
      AsyncStream.Continuation.yield(_:)(&v19, v1);
      sub_1001A3E2C(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      v16 = 0;
    }
    v18 = sub_1001085C0(&qword_1002DC278);
    sub_100108600((uint64_t)v14, v16, 1, v18);
    sub_1001A3CD8((uint64_t)v14, &qword_1002DC270);
  }
}

void sub_10019FDF8(void *a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  if ((*(_BYTE *)(v1 + OBJC_IVAR___ICSCallManagerBridge_ignoreUpdates) & 1) == 0)
  {
    v3 = (_BYTE *)(v1 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall);
    sub_100111F6C(v1 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall, (uint64_t)v4, 1);
    *v3 = 1;
    sub_10019F208();
    sub_10019FC1C(a1);
  }
  sub_1001A3DC4();
}

void sub_10019FEAC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  _BYTE v4[24];

  v1 = v0;
  sub_1001A136C();
  sub_10014CB24();
  sub_1001A3F88();
  sub_100110F0C();
  sub_10014CB24();
  sub_10019EE58(0);
  sub_100110F0C();
  v2 = (_BYTE *)(v0 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall);
  sub_100111F6C((uint64_t)v2, (uint64_t)v4, 1);
  *v2 = 0;
  sub_10019F208();
  if (*(_QWORD *)(v1 + OBJC_IVAR___ICSCallManagerBridge_jindoActivity))
  {
    v3 = sub_10014CB24();
    dispatch thunk of HUDActivity.end()(v3);
    sub_100110F0C();
  }
  sub_1001A3DC4();
}

void sub_10019FF74()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v25[6];
  _BYTE v26[40];
  _QWORD v27[5];

  sub_10010BC70();
  v4 = v3;
  v5 = sub_10011AFC8();
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  sub_100143748();
  sub_1001A3F74();
  __chkstk_darwin(v8, v9);
  sub_1001436EC();
  sub_10014CB24();
  v10 = (unint64_t)sub_10019EDB0();
  sub_100110F0C();

  sub_1001A3E38(v4, (uint64_t)v27);
  v11 = v10 | v27[3];
  sub_1001A3EAC((uint64_t)v27);
  if (v11)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v12 = sub_100109570();
    sub_10011ADC0(v12, (uint64_t)&unk_1002E2CC8);
    v13 = sub_10011ADDC();
    if (os_log_type_enabled((os_log_t)&qword_1002DC230, v13))
    {
      v14 = v6;
      v15 = (uint8_t *)sub_1001094C8(2);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&qword_1002DC230, v13, "CallManagerBridge presentInCompactDisplay ", v15, 2u);
      v16 = (uint64_t)v15;
      v6 = v14;
      sub_100109440(v16);
    }

    sub_10011ADD4(v17, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
    v18 = (void *)sub_100143B58();
    sub_1001A3E38(v4, (uint64_t)v26);
    v19 = sub_10014CB0C((uint64_t)&unk_10028D8E0);
    sub_100156A28((uint64_t)v26, v19 + 16, &qword_1002DC230);
    *(_QWORD *)(v19 + 56) = v0;
    v25[4] = sub_1001A3C3C;
    v25[5] = v19;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 1107296256;
    v25[2] = sub_100112054;
    v25[3] = &unk_10028D8F8;
    v20 = _Block_copy(v25);
    v21 = v0;
    v22 = sub_100110F0C();
    static DispatchQoS.unspecified.getter(v22);
    v25[0] = _swiftEmptyArrayStorage;
    sub_10015C704((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1001085C0((uint64_t *)&unk_1002D7F80);
    v23 = sub_10011B048();
    sub_1001A3DF4((uint64_t)v25, v24, v23);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v2, v1, v20);
    _Block_release(v20);

    sub_1001435F8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    sub_1001A3F1C();
  }
  sub_10010BC44();
}

void sub_1001A01F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  double v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  __n128 v48;
  os_log_type_t v49;
  uint8_t *v50;
  id v51;
  uint64_t v52;
  void *v53;
  void *v54;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  char *v77;
  char *v78;
  char *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  NSObject *v88;
  __n128 v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  __n128 v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  __n128 v109;
  os_log_type_t v110;
  void (*v111)(char *, uint64_t);
  uint8_t *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  void *v139;
  uint64_t v140[6];

  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4, v5);
  v136 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HUDActivityManager.RelevanceScore(0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1001085C0((uint64_t *)&unk_1002D8280);
  __chkstk_darwin(v11, v12);
  v134 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = __chkstk_darwin(v14, v16);
  v138 = (char *)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17, v19);
  v22 = (char *)&v124 - v21;
  __chkstk_darwin(v20, v23);
  v135 = (char *)&v124 - v24;
  v25 = type metadata accessor for ConversationControlsType(0);
  v137 = *(_QWORD *)(v25 - 8);
  v27 = __chkstk_darwin(v25, v26);
  v29 = (char *)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v27, v30);
  v33 = (char *)&v124 - v32;
  __chkstk_darwin(v31, v34);
  v36 = (char *)&v124 - v35;
  sub_1001569D0(a1, (uint64_t)v140, &qword_1002DC230);
  if (!v140[3])
  {
    sub_1001A3CD8((uint64_t)v140, &qword_1002DC230);
LABEL_6:
    swift_retain();
    v43 = sub_10019EDB0();
    swift_release();

    if (v43)
    {
      if (qword_1002D7250 != -1)
        swift_once(&qword_1002D7250, sub_10010BCAC);
      v44 = type metadata accessor for Logger(0);
      v45 = sub_100108664(v44, (uint64_t)&unk_1002E2CC8);
      v47 = Logger.logObject.getter(v45, v46);
      v49 = static os_log_type_t.default.getter(v48);
      if (os_log_type_enabled(v47, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v50 = 0;
        _os_log_impl((void *)&_mh_execute_header, v47, v49, "CallManagerBridge removing current activity", v50, 2u);
        swift_slowDealloc(v50, -1, -1);
      }

      sub_1001A136C();
    }
    return;
  }
  v37 = sub_1001085C0(&qword_1002DC248);
  v129 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  if ((swift_dynamicCast(&v139, v140, v37, v129, 6) & 1) == 0)
    goto LABEL_6;
  v128 = v14;
  v130 = v25;
  v132 = v139;
  sub_1001A2A24();
  v127 = OBJC_IVAR___ICSCallManagerBridge_calls;
  swift_retain();
  v38 = sub_10019EDB0();
  *(_QWORD *)&v39 = swift_release().n128_u64[0];
  v133 = v36;
  v131 = v15;
  if (v38)
  {
    v40 = objc_msgSend(v38, "callUUID", v39);

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v38 = v42;

  }
  else
  {
    v41 = 0;
  }
  v51 = objc_msgSend(v132, "callUUID");
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
  v54 = v53;

  if (!v38)
  {
    swift_bridgeObjectRelease(v54);
    v57 = v130;
    goto LABEL_27;
  }
  if (v41 == v52 && v38 == v54)
  {
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v54);
    v57 = v130;
  }
  else
  {
    v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v38, v52, v54, 0);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v54);
    v57 = v130;
    if ((v56 & 1) == 0)
    {
LABEL_27:
      v70 = sub_1001A136C();
      static HUDActivityManager.RelevanceScore.userInput.getter(v70);
      v71 = v137;
      v72 = v57;
      (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v33, v133, v57);
      sub_1001A3760(&qword_1002D8420, (unint64_t *)&qword_1002DA680, TUCall_ptr);
      v74 = v73;
      v75 = v132;
      v76 = v132;
      v77 = v136;
      UUID.init()(v76);
      v78 = v138;
      v79 = v10;
      v80 = v75;
      HUDActivityManager.BannerUpdate.init(score:type:requestedSizeClass:temporary:associatedCall:uuid:controlsManager:)(v79, v33, 0, 1, 0, v75, v74, v77, 0);
      v81 = dispatch thunk of HUDActivityManager.activityWith(_:)(v78);
      v82 = v131;
      if (v81)
      {
        v83 = v76;
        swift_retain();
        sub_10019EE58(v80);
        swift_release();
        v84 = swift_retain();
        sub_10019F168(v84);
        if (qword_1002D7250 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v85 = type metadata accessor for Logger(0);
        sub_100108664(v85, (uint64_t)&unk_1002E2CC8);
        v86 = v83;
        v88 = Logger.logObject.getter(v86, v87);
        v90 = static os_log_type_t.default.getter(v89);
        if (os_log_type_enabled(v88, v90))
        {
          v91 = (uint8_t *)swift_slowAlloc(12, -1);
          v92 = swift_slowAlloc(32, -1);
          v139 = v86;
          v140[0] = v92;
          *(_DWORD *)v91 = 136315138;
          v93 = v86;
          v94 = String.init<A>(reflecting:)(&v139);
          v96 = v95;
          v139 = (void *)sub_100121E04(v94, v95, v140);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, v140, v91 + 4, v91 + 12);

          swift_bridgeObjectRelease(v96);
          _os_log_impl((void *)&_mh_execute_header, v88, v90, "CallManagerBridge presenting a compact call: %s", v91, 0xCu);
          swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v92, -1, -1);
          swift_slowDealloc(v91, -1, -1);

          swift_release();
          (*(void (**)(char *, uint64_t))(v131 + 8))(v138, v128);
          (*(void (**)(char *, uint64_t))(v137 + 8))(v133, v130);
        }
        else
        {
          swift_release();

          (*(void (**)(char *, uint64_t))(v82 + 8))(v138, v128);
          (*(void (**)(char *, uint64_t))(v137 + 8))(v133, v72);
        }
      }
      else
      {
        if (qword_1002D7250 != -1)
          swift_once(&qword_1002D7250, sub_10010BCAC);
        v97 = type metadata accessor for Logger(0);
        v98 = sub_100108664(v97, (uint64_t)&unk_1002E2CC8);
        v100 = Logger.logObject.getter(v98, v99);
        v102 = static os_log_type_t.default.getter(v101);
        if (os_log_type_enabled(v100, v102))
        {
          v103 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v103 = 0;
          _os_log_impl((void *)&_mh_execute_header, v100, v102, "CallManagerBridge could not present activity", v103, 2u);
          swift_slowDealloc(v103, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v82 + 8))(v138, v128);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v133, v72);
      }
      return;
    }
  }
  v58 = *(_QWORD *)(a2 + OBJC_IVAR___ICSCallManagerBridge_jindoActivity);
  if (!v58)
    goto LABEL_27;
  v59 = swift_retain();
  v60 = v135;
  v61 = dispatch thunk of HUDActivity.relatedUpdate.getter(v59);
  HUDActivityManager.BannerUpdate.type.getter(v61);
  v62 = *(void (**)(char *, uint64_t))(v131 + 8);
  v63 = v60;
  v64 = v128;
  v62(v63, v128);
  v65 = static ConversationControlsType.== infix(_:_:)(v33, v133);
  v126 = v58;
  v66 = v137;
  v125 = *(uint64_t (**)(char *, uint64_t))(v137 + 8);
  v67 = v125(v33, v57);
  if ((v65 & 1) == 0)
  {
    swift_release();
    goto LABEL_27;
  }
  v68 = dispatch thunk of HUDActivity.relatedUpdate.getter(v67);
  HUDActivityManager.BannerUpdate.type.getter(v68);
  v62(v22, v64);
  if ((*(unsigned int (**)(char *, uint64_t))(v66 + 88))(v29, v57) == enum case for ConversationControlsType.swap(_:))
  {
    v69 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v66 + 96))(v29, v57, v69);
    swift_unknownObjectRelease(*(_QWORD *)v29);
    goto LABEL_27;
  }
  v104 = v126;
  v125(v29, v57);
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v105 = type metadata accessor for Logger(0);
  sub_100108664(v105, (uint64_t)&unk_1002E2CC8);
  v106 = swift_retain_n(v104, 2);
  v108 = Logger.logObject.getter(v106, v107);
  v110 = static os_log_type_t.default.getter(v109);
  if (os_log_type_enabled(v108, v110))
  {
    v111 = v62;
    v112 = (uint8_t *)swift_slowAlloc(12, -1);
    v113 = swift_slowAlloc(32, -1);
    v140[0] = v113;
    *(_DWORD *)v112 = 136315138;
    v138 = (char *)(v112 + 4);
    v114 = v135;
    v115 = dispatch thunk of HUDActivity.relatedUpdate.getter(v113);
    v116 = (uint64_t)v134;
    HUDActivityManager.BannerUpdate.type.getter(v115);
    v111(v114, v128);
    v117 = v130;
    sub_100108600(v116, 0, 1, v130);
    sub_10019CB7C(v116, (uint64_t *)&unk_1002D8280, (void (*)(uint64_t))&type metadata accessor for ConversationControlsType);
    v119 = v118;
    v121 = v120;
    sub_1001A3CD8(v116, (uint64_t *)&unk_1002D8280);
    v139 = (void *)sub_100121E04(v119, v121, v140);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, v140, v138, v112 + 12);
    swift_release_n(v126, 2);
    swift_bridgeObjectRelease(v121);
    _os_log_impl((void *)&_mh_execute_header, v108, v110, "CallManagerBridge same call, same type, skipping update %s", v112, 0xCu);
    swift_arrayDestroy(v113, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v113, -1, -1);
    swift_slowDealloc(v112, -1, -1);

    swift_release();
    v122 = v133;
    v123 = v117;
  }
  else
  {

    swift_release_n(v104, 3);
    v122 = v133;
    v123 = v130;
  }
  v125(v122, v123);
}

void sub_1001A0CE0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;

  if (*(_QWORD *)(v1 + OBJC_IVAR___ICSCallManagerBridge_callManager))
  {
    v3 = swift_retain();
    v4 = dispatch thunk of AudioCallManager.callCoordinator.getter(v3);
    v6 = v5;
    swift_release();
    if (v4)
    {
      v7 = sub_100137260();
      v8 = dispatch thunk of CallCoordinator.prioritizedCall.getter(v7, v6);
      sub_100136124();
      if (v8)
      {
        v9 = objc_opt_self(TUCall);
        if (swift_dynamicCastObjCClass(v8, v9))
        {
          sub_1001A2A24();
          swift_unknownObjectRelease(v8);
          v10 = 0;
LABEL_12:
          v14 = type metadata accessor for ConversationControlsType(0);
          sub_100108600(a1, v10, 1, v14);
          return;
        }
        swift_unknownObjectRelease(v8);
      }
    }
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v11 = sub_100109570();
    sub_10011ADC0(v11, (uint64_t)&unk_1002E2CC8);
    v12 = sub_10011ADDC();
    if (os_log_type_enabled(v4, v12))
    {
      v13 = (uint8_t *)sub_1001094C8(2);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v12, "CallManagerBridge: No presented call, so not returning an activity to present", v13, 2u);
      sub_100109440((uint64_t)v13);
    }

    v10 = 1;
    goto LABEL_12;
  }
  __break(1u);
}

void sub_1001A0E4C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];
  _BYTE v19[40];

  sub_10010BC70();
  v4 = v3;
  v17 = *(_QWORD *)(sub_10011AFC8() - 8);
  sub_10011AE0C();
  __chkstk_darwin(v5, v6);
  sub_100143748();
  sub_1001A3F74();
  __chkstk_darwin(v7, v8);
  sub_1001436EC();
  sub_10011ADD4(v9, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v10 = (void *)sub_100143B58();
  sub_1001A3E38(v4, (uint64_t)v19);
  v11 = sub_10014CB0C((uint64_t)&unk_10028D890);
  sub_100156A28((uint64_t)v19, v11 + 16, &qword_1002DC238);
  *(_QWORD *)(v11 + 56) = v0;
  v18[4] = sub_1001A3BF8;
  v18[5] = v11;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100112054;
  v18[3] = &unk_10028D8A8;
  v12 = _Block_copy(v18);
  v13 = v0;
  v14 = sub_100110F0C();
  static DispatchQoS.unspecified.getter(v14);
  v18[0] = _swiftEmptyArrayStorage;
  sub_10015C704((unint64_t *)&qword_1002D83B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001085C0((uint64_t *)&unk_1002D7F80);
  v15 = sub_10011B048();
  sub_1001A3DF4((uint64_t)v18, v16, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v2, v1, v12);
  _Block_release(v12);

  sub_1001435F8(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  sub_1001A3F1C();
  sub_10010BC44();
}

void sub_1001A0FDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  __n128 v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  char v29;
  uint64_t v30;
  uint64_t v31[5];

  sub_1001569D0(a1, (uint64_t)v31, &qword_1002DC238);
  if (!v31[3])
  {
    sub_1001A3CD8((uint64_t)v31, &qword_1002DC238);
    return;
  }
  v1 = sub_1001085C0(&qword_1002DC240);
  v2 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  if ((swift_dynamicCast(&v30, v31, v1, v2, 6) & 1) == 0)
    return;
  v3 = (void *)v30;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v4 = type metadata accessor for Logger(0);
  sub_100108664(v4, (uint64_t)&unk_1002E2CC8);
  v5 = v3;
  v7 = Logger.logObject.getter(v5, v6);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v30 = (uint64_t)v5;
    v31[0] = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = v5;
    v13 = String.init<A>(reflecting:)(&v30);
    v15 = v14;
    v30 = sub_100121E04(v13, v14, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31, v10 + 4, v10 + 12);

    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "CallManagerBridge presenting a full call: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  swift_retain();
  v16 = sub_10019EDB0();
  swift_release();

  if (v16)
  {
    swift_retain();
    v17 = (void *)sub_10019EEB0();
    v19 = v18;
    swift_release();
    if (v17)
    {
      v20 = v17;
      sub_1001A3A2C(v17, v19);
      v21 = objc_msgSend(v20, "callUUID");

      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v17 = v23;

    }
    else
    {
      v22 = 0;
    }
    v24 = objc_msgSend(v5, "callUUID");
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    if (v17)
    {
      if (v22 == v25 && v17 == v27)
      {
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v27);
LABEL_23:
        sub_1001A1340();
        goto LABEL_24;
      }
      v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v17, v25, v27, 0);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v27);
      if ((v29 & 1) != 0)
        goto LABEL_23;
    }
    else
    {
      swift_bridgeObjectRelease(v27);
    }
  }
  sub_1001A13BC(v5);
LABEL_24:

}

uint64_t sub_1001A1340()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ICSCallManagerBridge_calls);
  sub_10014CB24();
  sub_1001A3F88();
  return sub_1001A3D50(v1);
}

uint64_t sub_1001A136C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + OBJC_IVAR___ICSCallManagerBridge_jindoActivity))
  {
    v1 = sub_10014CB24();
    dispatch thunk of HUDActivity.end()(v1);
    sub_100110F0C();
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___ICSCallManagerBridge_calls);
  sub_10014CB24();
  sub_10019EE58(0);
  return sub_1001A3D50(v2);
}

void sub_1001A13BC(void *a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  os_log_type_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  _WORD *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  _QWORD *v37;
  NSObject *v38;
  NSObject *oslog;
  void *v40;
  uint64_t v41;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___ICSCallManagerBridge_inCallRootViewController);
  if (!Strong)
  {
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v17 = sub_100109570();
    oslog = sub_10011ADC0(v17, (uint64_t)&unk_1002E2CC8);
    v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(oslog, v19))
    {
      v20 = (_WORD *)sub_1001094C8(2);
      *v20 = 0;
      sub_1001A3EB4((void *)&_mh_execute_header, oslog, v21, "CallManagerBridge could not load a new audio call view controller, no inCallRootViewController");
      sub_100109440((uint64_t)v20);
    }
LABEL_18:
    sub_1001A3D8C(oslog);
    return;
  }
  oslog = Strong;
  sub_1001A1718();
  sub_10019F468();
  if (!v4)
  {
LABEL_13:
    if (qword_1002D7250 != -1)
      swift_once(&qword_1002D7250, sub_10010BCAC);
    v22 = sub_100109570();
    v38 = sub_10011ADC0(v22, (uint64_t)&unk_1002E2CC8);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v38, v24))
    {
      v32 = (_WORD *)sub_1001094C8(2);
      *v32 = 0;
      sub_1001A3EB4((void *)&_mh_execute_header, v38, v33, "CallManagerBridge could not load a new audio call view controller");
      sub_100109440((uint64_t)v32);

      sub_1001A3D8C(v38);
      return;
    }
    sub_100109874(0, v25, v26, v27, v28, v29, v30, v31, (uint64_t)v37, v38);
    goto LABEL_18;
  }
  v5 = v4;
  v6 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___ICSCallManagerBridge_warmedAudioCallNavController);
  if (!v6)
  {

    goto LABEL_13;
  }
  v7 = (void *)v6;
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v8 = sub_100109570();
  v9 = sub_100108664(v8, (uint64_t)&unk_1002E2CC8);
  v10 = a1;
  sub_1001A3F2C((uint64_t)v10, v11);
  v12 = sub_10011ADDC();
  if (os_log_type_enabled(v9, v12))
  {
    v13 = (uint8_t *)sub_1001094C8(12);
    v37 = (_QWORD *)sub_1001094C8(8);
    *(_DWORD *)v13 = 138412290;
    v40 = a1;
    v14 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v13 + 4, v13 + 12);
    *v37 = a1;

    sub_100109638((void *)&_mh_execute_header, v9, v12, "CallManagerBridge Setting prioritizedCall: %@", v13);
    v15 = sub_1001085C0(&qword_1002D7880);
    sub_100109598((uint64_t)v37, v16, v15);
    sub_100109440((uint64_t)v37);
    sub_100109440((uint64_t)v13);

  }
  else
  {

  }
  objc_msgSend(v5, "setPrioritizedCall:", a1, v37);
  v34 = a1;
  sub_10014CB24();
  v35 = v7;
  sub_10019EF70(a1, v7);
  sub_100110F0C();
  v36 = objc_msgSend(v35, "parentViewController");

  if (!v36)
    -[NSObject presentViewControllerFullScreen:](oslog, "presentViewControllerFullScreen:", v35);

  sub_1001821F4();
}

void sub_1001A1718()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t inited;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  _BYTE v49[72];

  v1 = v0 + OBJC_IVAR___ICSCallManagerBridge_warmedAudioCallNavController;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICSCallManagerBridge_warmedAudioCallNavController);

  if (Strong)
    return;
  v3 = *(void **)(v0 + OBJC_IVAR___ICSCallManagerBridge_callDisplayStyleManager);
  v4 = (void *)objc_opt_self(TUCallCenter);
  v5 = v3;
  v6 = objc_msgSend(v4, "sharedInstance");
  v7 = objc_msgSend(objc_allocWithZone((Class)PHAudioCallViewController), "initWithCallDisplayStyleManager:callCenter:featureFlags:", v5, v6, *(_QWORD *)(v0 + OBJC_IVAR___ICSCallManagerBridge_flags));

  v8 = (void *)sub_10010E340();
  v9 = v7;
  objc_msgSend(v9, "setInCallRootViewController:", v8);

  v10 = objc_msgSend(v9, "parentViewController");
  if (v10)
  {
    v11 = v10;
    v12 = objc_opt_self(UINavigationController);
    v13 = (id)swift_dynamicCastObjCClass(v11, v12);
    if (v13)
      goto LABEL_6;

  }
  v13 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v9);
LABEL_6:
  v14 = sub_10010A1B8((uint64_t)objc_msgSend(v13, "setOverrideUserInterfaceStyle:", 2), "view");
  if (!v14)
  {
    __break(1u);
    goto LABEL_18;
  }
  v15 = v14;
  v16 = (void *)sub_10010E340();
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "view");

    if (!v18)
    {
LABEL_19:
      __break(1u);
      return;
    }
    objc_msgSend(v18, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

  }
  else
  {
    v24 = 0.0;
    v26 = 0.0;
    v20 = 0.0;
    v22 = 0.0;
  }
  objc_msgSend(v15, "setFrame:", v20, v22, v24, v26);

  v28 = sub_10010A1B8(v27, "view");
  if (!v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v29 = v28;
  objc_msgSend(v28, "setAutoresizingMask:", 18);

  objc_msgSend(v13, "setNavigationBarHidden:", 1);
  v30 = (void *)sub_10010E340();
  objc_msgSend(v13, "setDelegate:", v30);

  v31 = sub_10010A1B8((uint64_t)objc_msgSend(v13, "_setBuiltinTransitionStyle:", 1), "navigationBar");
  objc_opt_self(UIColor);
  v32 = v31;
  v33 = sub_10011AF6C((uint64_t)v32, "clearColor");
  sub_1001A3E14((uint64_t)v33, "setBackgroundColor:");

  objc_msgSend(v32, "setTranslucent:", 1);
  v34 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v32, "setBackgroundImage:forBarMetrics:", v34, 0);

  v35 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  sub_1001A3E14((uint64_t)v35, "setShadowImage:");

  v37 = sub_10011AF6C(v36, "whiteColor");
  sub_1001A3E14((uint64_t)v37, "setTintColor:");

  v38 = sub_1001085C0((uint64_t *)&unk_1002DC250);
  inited = swift_initStackObject(v38, v49);
  *(_OWORD *)(inited + 16) = xmmword_100241240;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v40 = sub_10011AF6C((uint64_t)NSForegroundColorAttributeName, "whiteColor");
  *(_QWORD *)(inited + 64) = sub_10010BBE8(0, &qword_1002D8DD8, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v40;
  type metadata accessor for Key(0);
  v42 = v41;
  sub_10015C704(&qword_1002DC260, (uint64_t (*)(uint64_t))type metadata accessor for Key);
  v44 = Dictionary.init(dictionaryLiteral:)(inited, v42, (char *)&type metadata for Any + 8, v43);
  sub_1001A3B5C(v44, v32);
  v45 = swift_unknownObjectWeakAssign(v1, v13);
  v46 = sub_10010A1B8(v45, "parentViewController");

  if (!v46)
  {
    v47 = (void *)sub_10010E340();
    if (v47)
    {
      v48 = v47;
      objc_msgSend(v47, "presentViewControllerFullScreen:", v13);

      v13 = v48;
    }
  }

}

void sub_1001A1C08()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t ObjectType;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  __n128 v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  __n128 v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE v123[24];
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE v136[32];
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  sub_10010BC70();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v118 = v10;
  v117 = *(_QWORD *)(type metadata accessor for CallsPresentation(0) - 8);
  sub_10011AE0C();
  __chkstk_darwin(v11, v12);
  sub_10011ADE4();
  v128 = 0;
  v127 = 0u;
  v126 = 0u;
  v137 = 0;
  memset(v136, 0, sizeof(v136));
  v122 = v13;
  CallsPresentation.init(compact:full:)(&v126, v136);
  sub_1001A26B4(v9, v7, v5, (uint64_t *)&v126);
  v14 = v127;
  v16 = v132;
  v15 = v133;
  v17 = v134;
  v18 = &unk_1002E2000;
  v19 = v135;
  v120 = v128;
  v121 = v126;
  v119 = v134;
  if (v128)
  {
    v21 = v129;
    v20 = v130;
    v22 = v126;
    if ((_QWORD)v126)
    {
      if (v131)
      {
        v23 = v131;
        *((_QWORD *)&v127 + 1) = sub_1001A3DEC();
        v128 = v14;
        *(_QWORD *)&v126 = v22;
        sub_1001A3DBC();
        sub_1001A3E0C();
        swift_unknownObjectRetain(v120);
        sub_1001A3D18();
        *((_QWORD *)&v127 + 1) = swift_getObjectType(v120);
        v128 = v20;
        *(_QWORD *)&v126 = v120;
        sub_1001A3DE4();
        v24 = v23;
LABEL_16:
        swift_unknownObjectRelease(v24);
        v32 = v1;
LABEL_43:
        v18 = &unk_1002E2000;
        goto LABEL_44;
      }
      v32 = v1;
      v33 = (_BYTE *)(v1 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall);
      sub_100111F6C(v1 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall, (uint64_t)v136, 0);
      v19 = v122;
      if (*v33 != 1)
      {
        sub_1001A3D38();
        sub_1001A3DBC();
        sub_1001A3E0C();
        sub_1001A3D70((uint64_t)&v126);
        *((_QWORD *)&v127 + 1) = sub_10015C8AC();
        v128 = v20;
        sub_1001A3DD4();
        sub_1001A3F34();
        goto LABEL_43;
      }
      *((_QWORD *)&v127 + 1) = sub_10015C8AC();
      v128 = v21;
      sub_1001A3F9C();
      sub_1001A3DBC();
      sub_1001A3E0C();
      sub_1001A3D70((uint64_t)&v126);
      v34 = sub_1001A3DEC();
      sub_1001A3D58(v34);
    }
    else
    {
      if (v131)
      {
        if ((v3 & 1) != 0)
        {
          v20 = v133;
          v27 = v128;
        }
        else
        {
          v27 = v131;
        }
        if ((v3 & 1) == 0)
          v21 = v132;
        v28 = v131;
        v29 = v128;
        v30 = sub_1001A3E70();
        *((_QWORD *)&v127 + 1) = swift_getObjectType(v30);
        v128 = v21;
        *(_QWORD *)&v126 = v27;
        sub_1001A3EF4(v28);
        swift_unknownObjectRetain(v29);
        sub_1001A3D18();
        v31 = sub_1001A3DBC();
        *((_QWORD *)&v127 + 1) = swift_getObjectType(v31);
        v128 = v20;
        sub_1001A3DD4();
        swift_unknownObjectRelease_n(v28, 2);
        v24 = v29;
        goto LABEL_16;
      }
      v32 = v1;
      if (v134)
      {
        v52 = v128;
        *((_QWORD *)&v127 + 1) = swift_getObjectType(v128);
        v128 = v21;
        *(_QWORD *)&v126 = v52;
        sub_1001A3E70();
        sub_1001A3DBC();
        sub_1001A3E5C();
        *((_QWORD *)&v127 + 1) = sub_10015C8AC();
        v128 = v19;
        v19 = v17;
        sub_1001A3F9C();
      }
      else
      {
        v56 = v128;
        ObjectType = swift_getObjectType(v128);
        *((_QWORD *)&v127 + 1) = ObjectType;
        v128 = v21;
        *(_QWORD *)&v126 = v56;
        sub_1001A3EF4(v56);
        sub_1001A3D18();
        *((_QWORD *)&v127 + 1) = ObjectType;
        v128 = v20;
        *(_QWORD *)&v126 = v56;
      }
    }
    sub_1001A3DE4();
    goto LABEL_43;
  }
  if (v131)
  {
    v22 = v126;
    if ((_QWORD)v126)
    {
      v25 = (_BYTE *)(v1 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall);
      sub_100111F6C(v1 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall, (uint64_t)v136, 0);
      if ((*v25 & 1) == 0)
      {
        sub_1001A3D38();
        sub_1001A3E0C();
        sub_1001A3DBC();
        sub_1001A3D18();
        *((_QWORD *)&v127 + 1) = sub_10015C8AC();
        v128 = v15;
        sub_1001A3DD4();
        sub_1001A3F34();
LABEL_40:
        v32 = v1;
        goto LABEL_44;
      }
      *((_QWORD *)&v127 + 1) = sub_10015C8AC();
      v128 = v16;
      sub_1001A3F9C();
      sub_1001A3E0C();
      sub_1001A3DBC();
      sub_1001A3D18();
      v26 = sub_1001A3DEC();
      sub_1001A3D58(v26);
    }
    else if (v134)
    {
      v51 = v131;
      *((_QWORD *)&v127 + 1) = swift_getObjectType(v131);
      v128 = v16;
      *(_QWORD *)&v126 = v51;
      sub_1001A3E70();
      sub_1001A3DBC();
      sub_1001A3E5C();
      *((_QWORD *)&v127 + 1) = sub_10015C8AC();
      v128 = v19;
      v19 = v17;
      sub_1001A3F9C();
    }
    else
    {
      v54 = v131;
      v55 = swift_getObjectType(v131);
      *((_QWORD *)&v127 + 1) = v55;
      v128 = v16;
      *(_QWORD *)&v126 = v54;
      sub_1001A3EF4(v54);
      sub_1001A3D18();
      *((_QWORD *)&v127 + 1) = v55;
      v128 = v15;
      *(_QWORD *)&v126 = v54;
      v18 = &unk_1002E2000;
    }
    sub_1001A3DE4();
    goto LABEL_40;
  }
  v35 = swift_getObjectType(v7);
  sub_1001A3E70();
  sub_1001A3EF4(v121);
  v116 = v35;
  v36 = dispatch thunk of CallCoordinator.prioritizedCall.getter(v35, v5);
  v19 = v122;
  v32 = v1;
  if (v36)
  {
    v39 = v36;
    v40 = v38;
    v115 = v37;
    v41 = swift_getObjectType(v36);
    *(_QWORD *)&v126 = v39;
    v114 = v41;
    v42 = dispatch thunk of FullPresentable.callUUID.getter(v41, v40);
    v44 = v43;
    if (v121)
    {
      v45 = v42;
      v46 = sub_100137260();
      *(_QWORD *)&v126 = v121;
      v47 = sub_1001A3E84(v46);
      if (v45 == v47 && v44 == v48)
      {
        sub_1001A3EA4();
        swift_bridgeObjectRelease_n(v44, 2);
        goto LABEL_69;
      }
      v50 = sub_1001A3E94(v45, v48, v47);
      sub_100109558();
      sub_1001094F4();
      if ((v50 & 1) != 0)
        goto LABEL_37;
    }
    else
    {
      sub_100109558();
    }
    if ((dispatch thunk of Call.isVideo.getter(v114, v115) & 1) != 0)
    {
      v128 = 0;
      v127 = 0u;
      v126 = 0u;
      sub_1001A3D70((uint64_t)&v126);
      v22 = v121;
      if (v121)
      {
        v53 = sub_1001A3DEC();
        sub_1001A3D58(v53);
      }
      else
      {
        sub_1001A3D38();
      }
      v18 = (_QWORD *)&unk_1002E2000;
      sub_1001A3FB4();
      sub_1001A3F34();
      sub_1001A3D84((uint64_t)&v137);
      v113 = v39;
      goto LABEL_82;
    }
LABEL_37:
    sub_1001A3EA4();
  }
LABEL_69:
  v18 = &unk_1002E2000;
  v110 = (_BYTE *)(v32 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall);
  sub_100111F6C(v32 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall, (uint64_t)v136, 0);
  if ((*v110 & 1) != 0
    || (v3 & 1) == 0
    && (v112 = dispatch thunk of CallCoordinator.activeVideoCall.getter(v116, v5),
        swift_unknownObjectRelease(v112),
        !v112))
  {
    v128 = 0;
    v127 = 0u;
    v126 = 0u;
    sub_1001A3D70((uint64_t)&v126);
    v22 = v121;
    if (v121)
    {
      v111 = sub_1001A3DEC();
      sub_1001A3D58(v111);
    }
    else
    {
      sub_1001A3D38();
    }
    sub_1001A3FB4();
    sub_1001A3F34();
    v113 = v119;
LABEL_82:
    swift_unknownObjectRelease(v113);
    goto LABEL_44;
  }
  v22 = v121;
  if (v121)
  {
    *((_QWORD *)&v127 + 1) = sub_1001A3DEC();
    v128 = v14;
    *(_QWORD *)&v126 = v121;
  }
  else
  {
    sub_1001A3D38();
  }
  sub_1001A3E0C();
  sub_1001A3D70((uint64_t)&v126);
  v128 = 0;
  v127 = 0u;
  v126 = 0u;
  sub_1001A3DE4();
  sub_1001A3D84((uint64_t)&v137);
  swift_unknownObjectRelease_n(v121, 2);
LABEL_44:
  v58 = (_BYTE *)(v32 + v18[481]);
  sub_100111F6C((uint64_t)v58, (uint64_t)&v125, 1);
  if (*v58 != 1)
    goto LABEL_60;
  if (!v22)
  {
LABEL_59:
    *v58 = 0;
    sub_10019F208();
    goto LABEL_60;
  }
  v59 = sub_1001A3FA8();
  v60 = *((_QWORD *)&v127 + 1);
  if (*((_QWORD *)&v127 + 1))
  {
    v61 = v128;
    v62 = sub_10011ACB0(&v126, *((uint64_t *)&v127 + 1));
    v63 = *(_QWORD *)(v60 - 8);
    __chkstk_darwin(v62, v62);
    sub_10010BC88();
    v66 = v65 - v64;
    v67 = (*(uint64_t (**)(uint64_t))(v63 + 16))(v65 - v64);
    sub_1001A3FC0(v67, &qword_1002DC238);
    v68 = dispatch thunk of FullPresentable.callUUID.getter(v60, v61);
    v70 = v69;
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v66, v60);
  }
  else
  {
    sub_1001A3FC0(v59, &qword_1002DC238);
    v68 = 0;
    v70 = 0;
  }
  v71 = sub_1001A3DEC();
  *(_QWORD *)&v126 = v22;
  v72 = sub_1001A3E84(v71);
  if (!v70)
  {
    sub_1001094F4();
    goto LABEL_60;
  }
  if (v68 == v72 && v70 == v73)
  {
    sub_100109558();
    v76 = sub_1001094F4();
LABEL_58:
    v77 = CallsPresentation.compact.getter(&v126, v76);
    v78 = *((_QWORD *)&v127 + 1);
    sub_1001A3FC0((uint64_t)v77, &qword_1002DC230);
    if (!v78)
      goto LABEL_60;
    goto LABEL_59;
  }
  v75 = sub_1001A3E94(v68, v73, v72);
  sub_100109558();
  v76 = sub_1001094F4();
  if ((v75 & 1) != 0)
    goto LABEL_58;
LABEL_60:
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v79 = sub_100109570();
  v80 = sub_100108664(v79, (uint64_t)&unk_1002E2CC8);
  v82 = Logger.logObject.getter(v80, v81);
  v84 = static os_log_type_t.default.getter(v83);
  if (os_log_type_enabled(v82, v84))
  {
    v85 = (uint8_t *)sub_1001094C8(12);
    v86 = sub_1001094C8(32);
    v124 = v86;
    *(_DWORD *)v85 = 136315138;
    sub_100111F6C(v19, (uint64_t)v123, 32);
    sub_1001A3FA8();
    swift_endAccess(v123);
    v87 = sub_10019CC78((uint64_t)&v126, &qword_1002DC238, (void (*)(uint64_t *, _BYTE *))sub_1001A3AAC, &qword_1002DC240);
    v89 = v88;
    sub_1001A3EAC((uint64_t)&v126);
    v90 = sub_100121E04(v87, v89, &v124);
    v91 = sub_1001A3EDC(v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v91, v92, v85 + 4, v85 + 12);
    swift_bridgeObjectRelease(v89);
    sub_100109638((void *)&_mh_execute_header, v82, v84, "CallManagerBridge proposedPresentation - full: %s", v85);
    sub_100109598(v86, v93, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v86);
    sub_100109440((uint64_t)v85);
  }

  v96 = Logger.logObject.getter(v94, v95);
  v98 = static os_log_type_t.default.getter(v97);
  if (os_log_type_enabled(v96, v98))
  {
    v99 = (uint8_t *)sub_1001094C8(12);
    v100 = sub_1001094C8(32);
    v124 = v100;
    *(_DWORD *)v99 = 136315138;
    v101 = sub_100111F6C(v122, (uint64_t)v123, 32);
    CallsPresentation.compact.getter(&v126, v101);
    swift_endAccess(v123);
    v102 = sub_10019CC78((uint64_t)&v126, &qword_1002DC230, (void (*)(uint64_t *, _BYTE *))sub_1001A3AAC, &qword_1002DC248);
    v104 = v103;
    sub_1001A3CD8((uint64_t)&v126, &qword_1002DC230);
    v105 = sub_100121E04(v102, v104, &v124);
    v106 = sub_1001A3EDC(v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, v107, v99 + 4, v99 + 12);
    v108 = v122;
    swift_bridgeObjectRelease(v104);
    sub_100109638((void *)&_mh_execute_header, v96, v98, "CallManagerBridge proposedPresentation - compact: %s", v99);
    sub_100109598(v100, v109, (uint64_t)&type metadata for Any + 8);
    sub_100109440(v100);
    sub_100109440((uint64_t)v99);

    sub_1001A3D84((uint64_t)&v140);
    sub_1001A3D84((uint64_t)&v139);
    sub_1001A3D84((uint64_t)&v138);
    sub_1001A3D84((uint64_t)&v137);
  }
  else
  {

    sub_1001A3D84((uint64_t)&v140);
    sub_1001A3D84((uint64_t)&v139);
    sub_1001A3D84((uint64_t)&v138);
    sub_1001A3D84((uint64_t)&v137);
    v108 = v122;
  }
  sub_100111F6C(v108, (uint64_t)&v126, 0);
  sub_100120B40(v118, v108, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 16));
  sub_1001A3E2C(*(uint64_t (**)(uint64_t, uint64_t))(v117 + 8));
  sub_10010BC44();
}

void sub_1001A26B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  ObjectType = swift_getObjectType(a2);
  v10 = dispatch thunk of CallCoordinator.incomingAudioCall.getter(ObjectType, a3);
  v11 = v10;
  v54 = v13;
  v55 = v12;
  v53 = v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v43 = ObjectType;
    v44 = a3;
    v45 = a4;
    v16 = v10;
    swift_bridgeObjectRetain(a1);
    v58 = 0;
    v51 = 0;
    v52 = 0;
    v46 = 0;
    v47 = 0;
    sub_1001A3EC4();
    v42 = a1;
    v17 = (uint64_t *)(a1 + 56);
    do
    {
      v18 = *(v17 - 3);
      v19 = *(v17 - 2);
      v21 = *(v17 - 1);
      v20 = *v17;
      v22 = sub_100137260();
      sub_1001A3E70();
      switch(dispatch thunk of Call.status.getter(v22, v19))
      {
        case 1u:
          sub_1001A3EA4();
          v5 = v18;
          v56 = v21;
          v57 = v19;
          v48 = v20;
          break;
        case 2u:
          swift_unknownObjectRelease(v4);
          v4 = v18;
          v50 = v21;
          v51 = v19;
          v49 = v20;
          break;
        case 3u:
          swift_unknownObjectRelease(v58);
          v58 = v18;
          v52 = v19;
          v46 = v20;
          v47 = v21;
          break;
        case 4u:
          sub_1001437DC();
          v16 = v18;
          v54 = v21;
          v55 = v19;
          v53 = v20;
          break;
        default:
          sub_100136124();
          break;
      }
      v17 += 4;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease(v42);
    v23 = v58;
    v15 = v46;
    v24 = v47;
    v11 = v16;
    a3 = v44;
    a4 = v45;
    ObjectType = v43;
  }
  else
  {
    v23 = 0;
    v51 = 0;
    v52 = 0;
    v24 = 0;
    sub_1001A3EC4();
  }
  v25 = dispatch thunk of CallCoordinator.prioritizedCall.getter(ObjectType, a3);
  if (!v25)
    goto LABEL_16;
  v26 = v25;
  v27 = objc_opt_self(TUCall);
  v28 = (void *)swift_dynamicCastObjCClass(v26, v27);
  if (!v28 || (v29 = (uint64_t)v28, (objc_msgSend(v28, "isVideo") & 1) != 0))
  {
    swift_unknownObjectRelease(v26);
LABEL_16:
    v30 = v48;
    goto LABEL_17;
  }
  v59 = v23;
  v31 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v32 = (void *)TUCall.associatedCallGroup(in:)();

  if (!v32)
    goto LABEL_23;
  v33 = objc_msgSend(v32, "calls");

  v35 = sub_10011ADD4(v34, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v35);

  if ((unint64_t)v36 >> 62)
  {
    v41 = v36 < 0 ? v36 : v36 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    v37 = _CocoaArrayWrapper.endIndex.getter(v41);
    sub_10011AF80();
  }
  else
  {
    v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_10011AF80();
  if (v37 > 1)
  {
    sub_1001A3E20(&qword_1002D8420);
    v57 = v38;
    sub_1001A3E20(&qword_1002DBFE8);
    v56 = v39;
    sub_1001A3760(&qword_1002DBFF0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
    v30 = v40;
    sub_1001A3EA4();
    v5 = v29;
  }
  else
  {
LABEL_23:
    swift_unknownObjectRelease(v26);
    v30 = v48;
  }
  v23 = v59;
LABEL_17:
  *a4 = v11;
  a4[1] = v55;
  a4[2] = v54;
  a4[3] = v53;
  a4[4] = v5;
  a4[5] = v57;
  a4[6] = v56;
  a4[7] = v30;
  a4[8] = v4;
  a4[9] = v51;
  a4[10] = v50;
  a4[11] = v49;
  a4[12] = v23;
  a4[13] = v52;
  a4[14] = v24;
  a4[15] = v15;
}

void sub_1001A2A24()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  id v24;
  unsigned int v25;
  unsigned int *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  _QWORD *v29;
  char v30;
  unsigned int *v31;
  uint64_t v32;
  id v33;
  unsigned __int8 v34;
  int v35;
  _QWORD *v36;
  unsigned int v37;

  sub_10010BC70();
  v2 = v1;
  v4 = v3;
  v5 = type metadata accessor for ConversationControlsType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  sub_10010BC88();
  v10 = (_QWORD *)(v9 - v8);
  v12 = sub_100136368(v11, "provider");
  v37 = objc_msgSend(v12, "isSystemProvider");

  v14 = sub_100136368(v13, "status");
  v35 = (int)v14;
  v15 = sub_100136368((uint64_t)v14, "provider");
  v34 = objc_msgSend(v15, "isTelephonyProvider");

  if (*(_QWORD *)(v0 + OBJC_IVAR___ICSCallManagerBridge_callManager))
  {
    v36 = v10;
    v16 = swift_retain();
    v17 = ((uint64_t (*)(uint64_t))dispatch thunk of AudioCallManager.callCoordinator.getter)(v16);
    v19 = v18;
    swift_release();
    if (v17)
    {
      v21 = sub_100137260();
      v22 = ((uint64_t (*)(uint64_t, uint64_t))dispatch thunk of CallCoordinator.callCount.getter)(v21, v19);
      v20 = sub_100136124();
      v23 = v22 < 2;
    }
    else
    {
      v23 = 1;
    }
    v24 = sub_100136368(v20, "isScreening");
    v25 = sub_100136368((uint64_t)v24, "status");
    if (sub_1001A2CA8((uint64_t)v2))
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, enum case for ConversationControlsType.incomingScreenSharingRequest(_:), v5);
      return;
    }
    if (v37)
    {
      if (v25 == 4)
      {
        v26 = (unsigned int *)&enum case for ConversationControlsType.incomingCall(_:);
        goto LABEL_14;
      }
    }
    else if (v25 == 4)
    {
      v26 = (unsigned int *)&enum case for ConversationControlsType.incomingThirdPartyVoIPCall(_:);
      goto LABEL_14;
    }
    if (!(_DWORD)v24)
    {
      v30 = v35 != 2 || v23;
      if ((v30 & 1) == 0)
      {
        sub_1001A3760(&qword_1002D8420, (unint64_t *)&qword_1002DA680, TUCall_ptr);
        v29 = v36;
        *v36 = v2;
        v36[1] = v32;
        sub_1001A3FF4(enum case for ConversationControlsType.swap(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 104));
        v33 = v2;
        goto LABEL_16;
      }
      v29 = v36;
      if ((v37 & 1) != 0)
      {
        v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 104);
        if ((v34 & 1) != 0)
          v31 = (unsigned int *)&enum case for ConversationControlsType.ongoingTelephonyCall(_:);
        else
          v31 = (unsigned int *)&enum case for ConversationControlsType.defaultHUD(_:);
        v27 = *v31;
      }
      else
      {
        v27 = enum case for ConversationControlsType.ongoingThirdPartyVoIPCall(_:);
        v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 104);
      }
LABEL_15:
      sub_1001A3FF4(v27, v28);
LABEL_16:
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v6 + 32))(v4, v29, v5);
      sub_10010BC44();
      return;
    }
    v26 = (unsigned int *)&enum case for ConversationControlsType.liveVoicemailOngoing(_:);
LABEL_14:
    v27 = *v26;
    v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 104);
    v29 = v36;
    goto LABEL_15;
  }
  __break(1u);
}

BOOL sub_1001A2CA8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  _BOOL8 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;

  v2 = sub_1001A317C();
  if (!v2)
    return 0;
  v3 = (void *)v2;
  v4 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v5 = objc_msgSend(v4, "activeConversationForCall:", a1);

  v7 = v5 != 0;
  if (!v5)
    goto LABEL_4;
  v8 = sub_10010A1B8(v6, "screenSharingRequests");
  v9 = sub_10010BBE8(0, &qword_1002DC220, TUScreenSharingRequest_ptr);
  sub_1001A3E20(&qword_1002DC228);
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

  v12 = v3;
  sub_1001A2DE8(v11, v12);
  v3 = v13;

  swift_bridgeObjectRelease(v11);
  if (!v3)
    return 0;
LABEL_4:

  return v7;
}

void sub_1001A2DE8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id i;
  double v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  id v31;
  _QWORD v32[2];
  uint64_t v33;
  char *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  _QWORD v42[5];
  void *v43;

  v40 = a2;
  v4 = type metadata accessor for UUID(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4, v5);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = __CocoaSet.makeIterator()(v8);
    v10 = sub_10010BBE8(0, &qword_1002DC220, TUScreenSharingRequest_ptr);
    sub_1001A3760(&qword_1002DC228, &qword_1002DC220, TUScreenSharingRequest_ptr);
    v12 = Set.Iterator.init(_cocoa:)(v42, v9, v10, v11);
    a1 = v42[0];
    v37 = v42[1];
    v13 = v42[2];
    v14 = v42[3];
    v15 = v42[4];
  }
  else
  {
    v16 = -1 << *(_BYTE *)(a1 + 32);
    v17 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v13 = ~v16;
    v18 = -v16;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v15 = v19 & v17;
    swift_bridgeObjectRetain(a1);
    v14 = 0;
  }
  v32[1] = v13;
  v35 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v36 = (unint64_t)(v13 + 64) >> 6;
  v34 = (char *)&type metadata for Swift.AnyObject + 8;
  if (a1 < 0)
    goto LABEL_13;
LABEL_11:
  if (v15)
  {
    v20 = (v15 - 1) & v15;
    v21 = __clz(__rbit64(v15)) | (v14 << 6);
    v22 = v14;
    goto LABEL_32;
  }
  v28 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v28 < v36)
    {
      v29 = *(_QWORD *)(v37 + 8 * v28);
      v22 = v14 + 1;
      if (v29)
        goto LABEL_31;
      v22 = v14 + 2;
      if (v14 + 2 >= v36)
        goto LABEL_37;
      v29 = *(_QWORD *)(v37 + 8 * v22);
      if (v29)
        goto LABEL_31;
      v22 = v14 + 3;
      if (v14 + 3 >= v36)
        goto LABEL_37;
      v29 = *(_QWORD *)(v37 + 8 * v22);
      if (v29)
        goto LABEL_31;
      v22 = v14 + 4;
      if (v14 + 4 >= v36)
        goto LABEL_37;
      v29 = *(_QWORD *)(v37 + 8 * v22);
      if (v29)
      {
LABEL_31:
        v20 = (v29 - 1) & v29;
        v21 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_32:
        for (i = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v21); i; v20 = v15)
        {
          if (objc_msgSend(i, "type", v27) == (id)4)
          {
            v31 = objc_msgSend(i, "UUID");
            static UUID._unconditionallyBridgeFromObjectiveC(_:)(v31);

            LOBYTE(v31) = ConversationControlsManager.isIgnoredScreenSharingRequestUUID(_:)(v7);
            (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v39);
            if ((v31 & 1) == 0)
              break;
          }

          v14 = v22;
          v15 = v20;
          if ((a1 & 0x8000000000000000) == 0)
            goto LABEL_11;
LABEL_13:
          v23 = __CocoaSet.Iterator.next()(v12);
          if (!v23)
            break;
          v24 = v23;
          v41 = v23;
          v25 = sub_10010BBE8(0, &qword_1002DC220, TUScreenSharingRequest_ptr);
          swift_unknownObjectRetain(v24);
          swift_dynamicCast(&v43, &v41, v34, v25, 7);
          i = v43;
          *(_QWORD *)&v27 = swift_unknownObjectRelease(v24).n128_u64[0];
          v22 = v14;
        }
        goto LABEL_37;
      }
      v22 = v14 + 5;
      if (v14 + 5 < v36)
      {
        v29 = *(_QWORD *)(v37 + 8 * v22);
        if (!v29)
        {
          v30 = v14 + 6;
          while (v30 < v36)
          {
            v29 = *(_QWORD *)(v37 + 8 * v30++);
            if (v29)
            {
              v22 = v30 - 1;
              goto LABEL_31;
            }
          }
          goto LABEL_37;
        }
        goto LABEL_31;
      }
    }
LABEL_37:
    sub_10011ACD4(a1);

    return;
  }
  __break(1u);
}

void sub_1001A3180()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = objc_msgSend(objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication"), "delegate");
  sub_10010973C();
  if (v0)
  {
    v2 = objc_opt_self(ICSApplicationDelegate);
    v3 = swift_dynamicCastObjCClass(v0, v2);
    if (v3)
    {
      v4 = (void *)v3;
      ICSApplicationDelegate.bannerPresentationManager.getter();
      sub_1001A3FEC();
      sub_1001437DC();

    }
    else
    {
      sub_1001437DC();
    }
  }
  sub_100109830();
}

void sub_1001A321C()
{
  _swift_stdlib_reportUnimplementedInitializer("InCallService.CallManagerBridge", 31, "init()", 6, 0);
  __break(1u);
}

id sub_1001A3254()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallManagerBridge(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void (*sub_1001A3354(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR___ICSCallManagerBridge_foregroundRingingCall, a1, 33, 0);
  return sub_1001A339C;
}

void sub_1001A339C(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_10019F208();
  sub_100109438();
}

void TUCallCenter.incomingAudioCall.getter()
{
  unint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  v3 = sub_10011ADD4((uint64_t)objc_msgSend(v1, "incomingCalls"), (unint64_t *)&qword_1002DA680, TUCall_ptr);
  sub_10010954C(v3);
  sub_10010973C();
  if (v0 >> 62)
    goto LABEL_13;
  sub_1001A3EFC();
  for (; v2; v2 = sub_10011B090())
  {
    v4 = 4;
    while (1)
    {
      v5 = (v0 & 0xC000000000000001) != 0 ? (id)sub_1001A3F68() : *(id *)(v0 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      if ((objc_msgSend(v5, "isVideo") & 1) == 0)
      {
        sub_1001A3D78();
        sub_1001A3D2C(&qword_1002D8420);
        sub_1001A3D2C(&qword_1002DBFE8);
        sub_1001A3D2C(&qword_1002DBFF0);
        goto LABEL_15;
      }

      ++v4;
      if (v7 == v2)
        goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    sub_1001A3DA8();
  }
LABEL_14:
  sub_1001A3D78();
LABEL_15:
  sub_100143558();
}

id TUCallCenter.prioritizedCall.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "frontmostCall");
  if (v1)
  {
    sub_1001A3D2C(&qword_1002D8420);
    sub_1001A3D2C(&qword_1002DBFE8);
    sub_1001A3D2C(&qword_1002DBFF0);
  }
  return v1;
}

id TUCallCenter.callCount.getter()
{
  void *v0;

  return objc_msgSend(v0, "currentAudioAndVideoCallCount");
}

uint64_t sub_1001A3608()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, "callUUID");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

uint64_t sub_1001A365C()
{
  return sub_1001A3608();
}

uint64_t sub_1001A367C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
  result = Identifiable<>.id.getter(v4, a1);
  *a2 = result;
  return result;
}

void *sub_1001A36CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  NSString v7;
  NSString v8;

  if (!a2)
  {
    v7 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v8 = String._bridgeToObjectiveC()();
  sub_100109558();
LABEL_6:
  objc_msgSend(v4, "initWithDigits:countryCode:", v7, v8);
  sub_10011AF04();

  return v4;
}

void sub_1001A3760(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_10010BBE8(255, a2, a3);
    atomic_store(sub_10010BCA0(v4), a1);
  }
  sub_100109438();
}

uint64_t sub_1001A3794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001A37A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1001A37AC()
{
  sub_1001A3760(&qword_1002DBFF8, (unint64_t *)&qword_1002DA680, TUCall_ptr);
}

void *sub_1001A37E0()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_1001A37EC()
{
  return type metadata accessor for CallManagerBridge(0);
}

uint64_t type metadata accessor for CallManagerBridge(uint64_t a1)
{
  return sub_100120158(a1, (uint64_t *)&unk_1002DC078, (uint64_t)&nominal type descriptor for CallManagerBridge);
}

void sub_1001A3808(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[3] = "\b";
  sub_1001A38F0(319, &qword_1002DC088, &qword_1002DC090);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001A38F0(319, &qword_1002DC098, &qword_1002DC0A0);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_1002451F0;
      v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[8] = &unk_1002451F0;
      v6[9] = &unk_100245208;
      v6[10] = &unk_100245208;
      v6[11] = "\b";
      swift_updateClassMetadata2(a1, 256, 12, v6, a1 + 80);
    }
  }
}

void sub_1001A38F0(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_10010AD84(a3);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1001A393C()
{
  return type metadata accessor for CallManagerBridge.Calls(0);
}

uint64_t type metadata accessor for CallManagerBridge.Calls(uint64_t a1)
{
  return sub_100120158(a1, qword_1002DC0D8, (uint64_t)&nominal type descriptor for CallManagerBridge.Calls);
}

uint64_t sub_1001A3958(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1002451F0;
  v4[1] = &unk_100245250;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1001A39E8(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_10019EEB0();
  a1[1] = v2;
  sub_100109438();
}

void sub_1001A3A10()
{
  uint64_t v0;

  sub_10019EFE0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1001A3A2C(void *a1, void *a2)
{
  if (a1)
  {

  }
}

id sub_1001A3A58(id result, void *a2)
{
  id v2;

  if (result)
  {
    v2 = result;
    return a2;
  }
  return result;
}

void sub_1001A3A84(void **a1@<X8>)
{
  *a1 = sub_10019EDB0();
  sub_100109438();
}

uint64_t sub_1001A3AAC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_1001A3AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_100109438();
}

void sub_1001A3B04(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6;

  v6 = String._bridgeToObjectiveC()();
  sub_1001094F4();
  objc_msgSend(a4, "setBlockIncomingCommunication:forEmailAddress:", a1 & 1, v6);
  sub_10013633C(v6);
}

void sub_1001A3B5C(uint64_t a1, void *a2)
{
  Class isa;

  type metadata accessor for Key(0);
  sub_10015C704(&qword_1002DC260, (uint64_t (*)(uint64_t))type metadata accessor for Key);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  objc_msgSend(a2, "setTitleTextAttributes:", isa);

}

void sub_1001A3BF8()
{
  uint64_t v0;

  sub_1001A0FDC(v0 + 16);
}

uint64_t sub_1001A3C08()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    sub_100110DC0((_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 64, 7);
}

void sub_1001A3C3C()
{
  uint64_t v0;

  sub_1001A01F4(v0 + 16, *(_QWORD *)(v0 + 56));
}

uint64_t sub_1001A3C48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001A3C58()
{
  sub_10019D964();
}

uint64_t sub_1001A3C60(uint64_t a1, uint64_t a2)
{
  initializeWithTake for VideoCallView(a2, a1);
  return a2;
}

uint64_t sub_1001A3C9C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for VideoCallView(a2, a1);
  return a2;
}

void sub_1001A3CD8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_1001A3F94(a1, a2);
  sub_10010A198(v2);
  sub_100109438();
}

uint64_t sub_1001A3D18()
{
  uint64_t v0;

  return CallsPresentation.compact.setter(v0 - 272);
}

void sub_1001A3D2C(unint64_t *a1)
{
  unint64_t *v1;
  _QWORD *v2;

  sub_1001A3760(a1, v1, v2);
}

double sub_1001A3D38()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 - 240) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 256) = 0u;
  *(_OWORD *)(v0 - 272) = 0u;
  return result;
}

uint64_t sub_1001A3D50(uint64_t a1)
{
  return swift_release(a1);
}

uint64_t sub_1001A3D58(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 - 400);
  *(_QWORD *)(v2 - 248) = result;
  *(_QWORD *)(v2 - 240) = v3;
  *(_QWORD *)(v2 - 272) = v1;
  return result;
}

uint64_t sub_1001A3D70(uint64_t a1)
{
  return CallsPresentation.compact.setter(a1);
}

uint64_t sub_1001A3D78()
{
  uint64_t v0;

  return swift_bridgeObjectRelease_n(v0, 2);
}

uint64_t sub_1001A3D84@<X0>(uint64_t a1@<X8>)
{
  return swift_unknownObjectRelease(*(_QWORD *)(a1 - 256));
}

void sub_1001A3D8C(id a1)
{

}

uint64_t sub_1001A3DA8()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_1001A3DBC()
{
  uint64_t v0;

  return swift_unknownObjectRetain(v0);
}

uint64_t sub_1001A3DD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = v0;
  return CallsPresentation.full.setter(v1 - 272);
}

uint64_t sub_1001A3DE4()
{
  uint64_t v0;

  return CallsPresentation.full.setter(v0 - 272);
}

uint64_t sub_1001A3DEC()
{
  uint64_t v0;

  return swift_getObjectType(v0);
}

uint64_t sub_1001A3DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return dispatch thunk of SetAlgebra.init<A>(_:)(a1, v4, a3, v3, v5);
}

uint64_t sub_1001A3E0C()
{
  uint64_t v0;

  return swift_unknownObjectRetain(v0);
}

id sub_1001A3E14(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void sub_1001A3E20(unint64_t *a1)
{
  unint64_t *v1;
  _QWORD *v2;

  sub_1001A3760(a1, v1, v2);
}

uint64_t sub_1001A3E2C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_1001A3E38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1001569D0(a1, a2, v2);
}

uint64_t sub_1001A3E40()
{
  return 0;
}

uint64_t sub_1001A3E5C()
{
  uint64_t v0;

  return CallsPresentation.compact.setter(v0 - 272);
}

uint64_t sub_1001A3E70()
{
  uint64_t v0;

  return swift_unknownObjectRetain(v0);
}

uint64_t sub_1001A3E78()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1001A3E84(uint64_t a1)
{
  uint64_t v1;

  return dispatch thunk of FullPresentable.callUUID.getter(a1, *(_QWORD *)(v1 - 400));
}

uint64_t sub_1001A3E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, v4, a3, v3, 0);
}

uint64_t sub_1001A3EA4()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

void sub_1001A3EAC(uint64_t a1)
{
  uint64_t *v1;

  sub_1001A3CD8(a1, v1);
}

void sub_1001A3EB4(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

void sub_1001A3EC4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = 0;
  *(_QWORD *)(v0 - 96) = 0;
}

uint64_t sub_1001A3EDC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = a1;
  return v1 - 272;
}

uint64_t sub_1001A3EF4(uint64_t a1)
{
  return swift_unknownObjectRetain_n(a1, 2);
}

uint64_t sub_1001A3EFC()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_1001A3F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1001A3F2C(uint64_t a1, uint64_t a2)
{
  return Logger.logObject.getter(a1, a2);
}

uint64_t sub_1001A3F34()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

uint64_t sub_1001A3F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return String.init<A>(reflecting:)(&a9);
}

uint64_t sub_1001A3F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_release(*(_QWORD *)(v1 + a1));
}

uint64_t sub_1001A3F5C(uint64_t a1)
{
  uint64_t v1;

  return sub_100109FF4(a1, 1, v1);
}

uint64_t sub_1001A3F68()
{
  uint64_t v0;
  uint64_t v1;

  return specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v0);
}

double sub_1001A3F88()
{
  return sub_10019EF70(0, 0);
}

uint64_t sub_1001A3F94(uint64_t a1, uint64_t *a2)
{
  return sub_1001085C0(a2);
}

void sub_1001A3F9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = v0;
}

uint64_t sub_1001A3FA8()
{
  return CallsPresentation.full.getter();
}

uint64_t sub_1001A3FB4()
{
  uint64_t v0;

  return CallsPresentation.full.setter(v0 - 272);
}

void sub_1001A3FC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1001A3CD8(v2 - 272, a2);
}

uint64_t sub_1001A3FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10019F028(a1, a2, (uint64_t)&a9);
}

id sub_1001A3FD4(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 472), 2);
}

uint64_t sub_1001A3FE0()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1001A3FEC()
{
  return dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();
}

uint64_t sub_1001A3FF4@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

unint64_t sub_1001A403C()
{
  return 0xD000000000000012;
}

id sub_1001A409C()
{
  _BYTE *v0;
  objc_super v2;

  v0[OBJC_IVAR____TtC13InCallService13FTPreferences____lazy_storage___enableInterstitialLinkSharingFlow] = 2;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FTPreferences();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1001A40FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FTPreferences();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FTPreferences()
{
  return objc_opt_self(_TtC13InCallService13FTPreferences);
}

uint64_t sub_1001A4150()
{
  uint64_t KeyPath;
  unint64_t v1;
  uint64_t v2;

  KeyPath = swift_getKeyPath(&unk_1002453E8);
  v1 = sub_1001A4BBC();
  sub_10019C81C(v1, v2);
  swift_release(KeyPath);
  return swift_retain();
}

uint64_t sub_1001A41AC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  swift_getKeyPath(&unk_100245410);
  v1 = sub_1001A4BBC();
  sub_10019C81C(v1, v2);
  swift_release();
  return *(unsigned __int8 *)(v0 + 24);
}

void sub_1001A4204()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_100245410);
  sub_1001A4BB0(KeyPath, (uint64_t)sub_1001A4B7C, v1, v2, v3, v4, v5, v6, v7);
  swift_release();
  sub_1001435C0();
}

void sub_1001A4250()
{
  uint64_t v0;

  v0 = swift_retain();
  sub_1001A4278(v0);
}

void sub_1001A4278(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_1002453E8);
  sub_1001A4BB0(KeyPath, (uint64_t)sub_1001A4ADC, v3, v4, v5, v6, v7, v8, v9);
  swift_release(KeyPath);
  swift_release(a1);
  sub_1001435C0();
}

uint64_t sub_1001A42C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2;
  swift_retain(a2);
  return swift_release(v2);
}

uint64_t sub_1001A4300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v8;

  v6 = sub_1001A4AF4();
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, a1, a2, a3, (char *)&type metadata for () + 8, v6);
}

void sub_1001A4388()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  char v3;
  char **v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v18 = objc_msgSend(v2, "routeController");

  v3 = sub_1001A41AC();
  v4 = &selRef_routeForSpeakerEnable;
  if ((v3 & 1) == 0)
    v4 = &selRef_routeForSpeakerDisable;
  v5 = objc_msgSend(v18, *v4);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v18, "pickRoute:", v5);

LABEL_16:
    return;
  }
  if (qword_1002D7298 != -1)
    swift_once(&qword_1002D7298, sub_10010C018);
  v7 = type metadata accessor for Logger(0);
  sub_100108664(v7, (uint64_t)&unk_1002E2D90);
  v8 = swift_retain_n(v1, 2);
  v10 = Logger.logObject.getter(v8, v9);
  v11 = static os_log_type_t.error.getter(v10);
  if (!os_log_type_enabled(v10, v11))
  {

    swift_release_n(v1, 2);
    goto LABEL_16;
  }
  v12 = (uint8_t *)swift_slowAlloc(12, -1);
  v13 = swift_slowAlloc(32, -1);
  v20 = v13;
  *(_DWORD *)v12 = 136315138;
  v14 = sub_1001A41AC();
  v15 = (v14 & 1) == 0;
  if ((v14 & 1) != 0)
    v16 = 0x656C62616E65;
  else
    v16 = 0x656C6261736964;
  if (v15)
    v17 = 0xE700000000000000;
  else
    v17 = 0xE600000000000000;
  v19 = sub_100121E04(v16, v17, &v20);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v12 + 4, v12 + 12);
  swift_release_n(v1, 2);
  swift_bridgeObjectRelease(v17);
  _os_log_impl((void *)&_mh_execute_header, v10, v11, "Unable to %s speaker.", v12, 0xCu);
  swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v13, -1, -1);
  swift_slowDealloc(v12, -1, -1);

}

uint64_t sub_1001A4610()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  *(_QWORD *)(v0 + 16) = 0;
  ObservationRegistrar.init()();
  v2 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v3 = objc_msgSend(v2, "routeController");

  v4 = objc_msgSend(v3, "pickedRoute");
  if (v4)
  {
    v5 = objc_msgSend(v4, "isSpeaker");

    *(_BYTE *)(v1 + 24) = v5;
  }
  else
  {
    if (qword_1002D7298 != -1)
      swift_once(&qword_1002D7298, sub_10010C018);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100108664(v6, (uint64_t)&unk_1002E2D90);
    v9 = Logger.logObject.getter(v7, v8);
    v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unable to find currently picked route.", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    *(_BYTE *)(v1 + 24) = 0;
  }
  v12 = sub_1001A4808();
  sub_1001A4278(v12);
  v13 = (void *)objc_opt_self(NSNotificationCenter);
  v14 = objc_msgSend(v13, "defaultCenter");
  sub_100177B00(v14, v15, v16, v17, TUCallCenterCallStatusChangedNotification);

  v18 = objc_msgSend(v13, "defaultCenter");
  sub_100177B00(v18, v19, v20, v21, TUCallCenterVideoCallStatusChangedNotification);

  return v1;
}

uint64_t sub_1001A4808()
{
  id v0;
  id v1;
  uint64_t result;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v1 = objc_msgSend(v0, "frontmostAudioOrVideoCall");

  result = 0;
  if (v1)
  {
    v3 = type metadata accessor for ClarityUICall(0);
    swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
    return sub_10019AE68(v1);
  }
  return result;
}

void sub_1001A4884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v0 = sub_1001A4808();
  if (sub_1001A4150())
  {
    if (v0)
    {
      v1 = type metadata accessor for MainActor(0);
      __chkstk_darwin(v1, v2);
      swift_retain();
      v3 = sub_10019A6D8();
      swift_release();
      swift_release();
      if ((v3 & 1) != 0)
      {
        swift_release();
        return;
      }
    }
    else
    {
      swift_release();
    }
    goto LABEL_8;
  }
  if (v0)
LABEL_8:
    sub_1001A4278(v0);
}

uint64_t sub_1001A499C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  v1 = (char *)v0 + OBJC_IVAR____TtC13InCallService19ClarityUICallCenter___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1001A49F4()
{
  return type metadata accessor for ClarityUICallCenter(0);
}

uint64_t type metadata accessor for ClarityUICallCenter(uint64_t a1)
{
  uint64_t result;

  result = qword_1002DC378;
  if (!qword_1002DC378)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClarityUICallCenter);
  return result;
}

uint64_t sub_1001A4A34(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\b";
  v4[1] = &unk_1002453B0;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1001A4AB4(uint64_t *a1@<X8>)
{
  *a1 = sub_1001A4150();
  sub_100109438();
}

uint64_t sub_1001A4ADC()
{
  uint64_t v0;

  return sub_1001A42C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1001A4AF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DC410;
  if (!qword_1002DC410)
  {
    v1 = type metadata accessor for ClarityUICallCenter(255);
    result = swift_getWitnessTable(&unk_1002453C8, v1);
    atomic_store(result, (unint64_t *)&qword_1002DC410);
  }
  return result;
}

void sub_1001A4B34(_BYTE *a1@<X8>)
{
  *a1 = sub_1001A41AC() & 1;
  sub_100109438();
}

void sub_1001A4B5C()
{
  sub_1001A4204();
  sub_100109438();
}

void sub_1001A4B7C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 24) = *(_BYTE *)(v0 + 24);
  sub_1001A4388();
}

uint64_t sub_1001A4BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1001A4300(a1, a2, (uint64_t)&a9);
}

unint64_t sub_1001A4BBC()
{
  return sub_1001A4AF4();
}

void sub_1001A4BC8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

NSString sub_1001A4C1C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1002E2F18 = (uint64_t)result;
  return result;
}

uint64_t static NSNotification.PHAlertInvoked.getter()
{
  if (qword_1002D73A8 != -1)
    swift_once(&qword_1002D73A8, sub_1001A4C1C);
  return static String._unconditionallyBridgeFromObjectiveC(_:)(qword_1002E2F18);
}

unint64_t sub_1001A4CCC()
{
  return 0xD000000000000017;
}

uint64_t sub_1001A4D44()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_delegate);
}

uint64_t sub_1001A4DA0(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectWeakAssign(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_delegate, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_1001A4DF8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_isAlertRequestPending);
}

uint64_t sub_1001A4E2C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_isAlertRequestPending) = result;
  return result;
}

void sub_1001A4E3C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_failedEmergencyCall);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_failedEmergencyCall) = a1;

}

id sub_1001A4E80(__n128 a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  id v12;
  __n128 v13;
  void *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_stateMonitor);
  if (!v2)
  {
    if (qword_1002D7278 != -1)
      swift_once(&qword_1002D7278, sub_10010BE40);
    static os_log_type_t.default.getter(a1);
    sub_100137268((uint64_t)"AlertCoordinator: self.stateMonitor doesn't exist, isAvailable is returning false", 81, v9, (uint64_t)&_mh_execute_header);
    return 0;
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_failedEmergencyCall))
  {
    v3 = qword_1002D7278;
    sub_1001A3DBC();
    if (v3 != -1)
      swift_once(&qword_1002D7278, sub_10010BE40);
    static os_log_type_t.default.getter(v4);
    sub_1001A7EC8((uint64_t)"AlertCoordinator: we have a failed emergency call, will continue to determine whether show alert UI", 99, v5, (uint64_t)&_mh_execute_header);
    goto LABEL_6;
  }
  v11 = sub_1001A3DBC();
  v12 = sub_10010BC5C(v11, "emergencyCall");
  if (!v12)
  {
    if (qword_1002D7278 != -1)
      swift_once(&qword_1002D7278, sub_10010BE40);
    static os_log_type_t.default.getter(v13);
    sub_1001A7EC8((uint64_t)"AlertCoordinator: callCenter.emergencyCall doesn't exist, isAvailable is returning false", 88, v16, (uint64_t)&_mh_execute_header);
    sub_1001437DC();
    return 0;
  }
  v14 = v12;
  if (!objc_msgSend(v12, "isFailureExpected"))
  {
    if (qword_1002D7278 != -1)
      swift_once(&qword_1002D7278, sub_10010BE40);
    static os_log_type_t.default.getter(v15);
    sub_1001A7ED4((uint64_t)"AlertCoordinator: callCenter.emergencyCall.isFailureExpected is false, isAvailable is returning false", 101, v17, (uint64_t)&_mh_execute_header);
    sub_1001437DC();

    return 0;
  }

LABEL_6:
  v6 = objc_msgSend(v2, "isAlertTriggerAllowedAndNotActive");
  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  v7 = sub_1001085C0(&qword_1002D8700);
  v8 = sub_1001A7EBC(v7);
  *(_OWORD *)(v8 + 16) = xmmword_100241240;
  *(_QWORD *)(v8 + 56) = &type metadata for Bool;
  *(_QWORD *)(v8 + 64) = &protocol witness table for Bool;
  *(_BYTE *)(v8 + 32) = (_BYTE)v6;
  static os_log_type_t.default.getter((__n128)xmmword_100241240);
  os_log(_:dso:log:type:_:)("AlertCoordinator: isAvailable is returning stateMonitor.isAlertTriggerAllowedAndNotActive, which is %d", v18);
  sub_1001437DC();
  swift_bridgeObjectRelease(v8);
  return v6;
}

void sub_1001A5124()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  void *v3;
  uint64_t v4;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC13InCallService16AlertCoordinator_callCenter), "emergencyCall"));
  if (v1)
  {
    v3 = v1;
    if (objc_msgSend(v1, "supportsEmergencyFallback"))
    {
      objc_msgSend(v3, "originatingUIType");

      goto LABEL_8;
    }

  }
  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  static os_log_type_t.default.getter(v2);
  sub_100137268((uint64_t)"AlertCoordinator: callCenter.emergencyCall doesn't exist or emergencyCall.supportsEmergencyFallback is false, isAutoCountdownAvailable is returning false", 153, v4, (uint64_t)&_mh_execute_header);
LABEL_8:
  sub_100109438();
}

void sub_1001A5200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  void *Strong;
  void *v9;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v6);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) != 0)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_delegate);
    if (Strong)
    {
      v9 = Strong;
      if ((objc_msgSend(Strong, "respondsToSelector:", "demoAvailabilityChangedWithIsDemoAvailable:") & 1) != 0)
        objc_msgSend(v9, "demoAvailabilityChangedWithIsDemoAvailable:", *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_isDemoAvailable));
      swift_unknownObjectRelease(v9);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001A531C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_stateMonitor);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_stateMonitor) = a1;
  return swift_unknownObjectRelease(v2);
}

void sub_1001A5334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;

  v3 = OBJC_IVAR____TtC13InCallService16AlertCoordinator_backgroundCountdownTimer;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_backgroundCountdownTimer);
  if (v4)
  {
    objc_msgSend(v4, "invalidate");
    v3 = OBJC_IVAR____TtC13InCallService16AlertCoordinator_backgroundCountdownTimer;
    v4 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_backgroundCountdownTimer);
  }
  *(_QWORD *)(v1 + v3) = a1;

}

char *sub_1001A5380()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  _BYTE *v6;
  char *v7;
  uint64_t ObjectType;

  sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v1 = v0;
  v2 = (void *)static OS_dispatch_queue.main.getter();
  v3 = objc_msgSend(objc_allocWithZone((Class)CoreTelephonyClient), "initWithQueue:", v2);

  objc_opt_self(TUCallCenter);
  v4 = v3;
  v5 = sub_10010BC5C((uint64_t)v4, "sharedInstance");
  v6 = objc_allocWithZone((Class)type metadata accessor for AlertCoordinator());
  v7 = sub_1001A7A38((uint64_t)sub_1001A5480, 0, (uint64_t)sub_100158298, 0, v4, v5, v6);

  ObjectType = swift_getObjectType(v1);
  swift_deallocPartialClassInstance(v1, ObjectType, 120, 7);
  return v7;
}

id sub_1001A5480(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;

  sub_10010BBE8(0, (unint64_t *)&qword_1002D7F70, OS_dispatch_queue_ptr);
  v2 = (void *)static OS_dispatch_queue.main.getter();
  v3 = objc_allocWithZone((Class)CTStewieStateMonitor);
  v4 = a1;
  v5 = objc_msgSend(v3, "initWithDelegate:queue:", v4, v2);

  return v5;
}

void sub_1001A5528(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  __n128 v11;
  void *v12;
  id v13;
  _QWORD v14[4];
  _BYTE v15[24];

  v3 = a3 + 16;
  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  v4 = qword_1002E2D40;
  v5 = static os_log_type_t.default.getter(a1);
  os_log(_:dso:log:type:_:)("AlertCoordinator: Did receive failureExpected notification", 58, 2, &_mh_execute_header, v4, v5, _swiftEmptyArrayStorage);
  swift_beginAccess(v3, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_1001A5688();

  }
  Notification.object.getter(v14);
  if (v14[3])
  {
    v8 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
    if ((swift_dynamicCast(&v13, v14, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {
      v9 = v13;
      if (objc_msgSend(v13, "supportsEmergencyFallback"))
      {
        swift_beginAccess(v3, v14, 0, 0);
        v10 = swift_unknownObjectWeakLoadStrong(v3);
        if (v10)
        {
          v12 = (void *)v10;
          sub_1001A57B8(v11);

        }
      }

    }
  }
  else
  {
    sub_100137118((uint64_t)v14);
  }
}

double sub_1001A5688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  void *Strong;
  __n128 v10;
  void *v11;
  char v13;

  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  v1 = qword_1002E2D40;
  v2 = sub_1001085C0(&qword_1002D8700);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100241240;
  v13 = sub_1001A4E80((__n128)xmmword_100241240) & 1;
  v4 = String.init<A>(reflecting:)(&v13);
  v6 = v5;
  *(_QWORD *)(v3 + 56) = &type metadata for String;
  *(_QWORD *)(v3 + 64) = sub_100176E30();
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v6;
  v8 = static os_log_type_t.default.getter(v7);
  os_log(_:dso:log:type:_:)("AlertCoordinator: notify delegates isStewieAllowed = %@", 55, 2, &_mh_execute_header, v1, v8, v3);
  swift_bridgeObjectRelease(v3);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_delegate);
  if (Strong)
  {
    v11 = Strong;
    objc_msgSend(Strong, "updatePresentationStateWithAllowed:", (unint64_t)sub_1001A4E80(v10) & 1);
    v10.n128_u64[0] = swift_unknownObjectRelease(v11).n128_u64[0];
  }
  return v10.n128_f64[0];
}

void sub_1001A57B8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = (uint64_t)sub_1001A4E80(a1);
  if ((v2 & 1) != 0)
  {
    sub_1001A5124();
    if ((v3 & 1) != 0)
    {
      if (qword_1002D7278 != -1)
        swift_once(&qword_1002D7278, sub_10010BE40);
      v4 = qword_1002E2D40;
      v5 = sub_1001085C0(&qword_1002D8700);
      v6 = swift_allocObject(v5, 72, 7);
      *(_OWORD *)(v6 + 16) = xmmword_100241240;
      v7 = v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_delegate;
      Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_delegate);
      if (Strong)
      {
        v24 = Strong;
        sub_1001085C0((uint64_t *)&unk_1002DC4B8);
        v9 = String.init<A>(reflecting:)(&v24);
        v11 = v10;
      }
      else
      {
        v11 = 0xE300000000000000;
        v9 = 7104878;
      }
      *(_QWORD *)(v6 + 56) = &type metadata for String;
      *(_QWORD *)(v6 + 64) = sub_100176E30();
      *(_QWORD *)(v6 + 32) = v9;
      *(_QWORD *)(v6 + 40) = v11;
      v17 = static os_log_type_t.default.getter(v16);
      os_log(_:dso:log:type:_:)("AlertCoordinator: Calling delegate to start auto-countdown %@", 61, 2, &_mh_execute_header, v4, v17, v6);
      swift_bridgeObjectRelease(v6);
      v18 = (void *)swift_unknownObjectWeakLoadStrong(v7);
      if (v18)
      {
        v19 = v18;
        objc_msgSend(v18, "startAutoCountdownAlert");
        swift_unknownObjectRelease(v19);
      }
      v20 = swift_unknownObjectWeakLoadStrong(v7);
      v21 = swift_unknownObjectRelease(v20);
      if (!v20)
      {
        v22 = qword_1002E2D40;
        v23 = static os_log_type_t.default.getter(v21);
        os_log(_:dso:log:type:_:)("AlertCoordinator: no delegate to present countdown UI, starting countdown in background", 87, 2, &_mh_execute_header, v22, v23, _swiftEmptyArrayStorage);
        sub_1001A7050();
      }
    }
    else
    {
      if (qword_1002D7278 != -1)
        v3 = swift_once(&qword_1002D7278, sub_10010BE40);
      v14 = qword_1002E2D40;
      v15 = static os_log_type_t.error.getter(v3);
      os_log(_:dso:log:type:_:)("AlertCoordinator: Auto-countdown state is unavailable to notifyDelegateOfAutoCountdownAlertAvailability", 103, 2, &_mh_execute_header, v14, v15, _swiftEmptyArrayStorage);
    }
  }
  else
  {
    if (qword_1002D7278 != -1)
      v2 = swift_once(&qword_1002D7278, sub_10010BE40);
    v12 = qword_1002E2D40;
    v13 = static os_log_type_t.error.getter(v2);
    os_log(_:dso:log:type:_:)("AlertCoordinator: State is unavailable to notifyDelegateOfAutoCountdownAlertAvailability", 88, 2, &_mh_execute_header, v12, v13, _swiftEmptyArrayStorage);
  }
}

void sub_1001A5A24(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t Strong;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  __n128 v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  __n128 v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  id v26;
  _BYTE v27[24];
  id v28[3];
  _QWORD v29[3];
  uint64_t v30;

  v3 = a3 + 16;
  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  v4 = qword_1002E2D40;
  v5 = static os_log_type_t.default.getter(a1);
  os_log(_:dso:log:type:_:)("AlertCoordinator: Did receive TUCallCenterCallStatusChanged notification", 72, 2, &_mh_execute_header, v4, v5, _swiftEmptyArrayStorage);
  Notification.object.getter(v29);
  if (v30)
  {
    v6 = sub_10010BBE8(0, (unint64_t *)&qword_1002DA680, TUCall_ptr);
    if ((swift_dynamicCast(v28, v29, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
    {
      v7 = v28[0];
      if (objc_msgSend(v28[0], "status") == 6
        && objc_msgSend(v7, "isEmergency")
        && objc_msgSend(v7, "disconnectedReasonRequiresCallBackUI"))
      {
        swift_beginAccess(v3, v28, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v3);
        if (Strong)
        {
          v9 = (void *)Strong;
          v10 = v7;
          sub_1001A4E3C((uint64_t)v7);

        }
        swift_beginAccess(v3, v27, 0, 0);
        v11 = swift_unknownObjectWeakLoadStrong(v3);
        if (v11)
        {
          v12 = (void *)v11;
          sub_1001A5688();

        }
        Notification.object.getter(v29);
        if (v30)
        {
          if ((swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
          {
            v13 = v26;
            if (objc_msgSend(v26, "supportsEmergencyFallback"))
            {
              swift_beginAccess(v3, v29, 0, 0);
              v14 = swift_unknownObjectWeakLoadStrong(v3);
              if (v14)
              {
                v16 = (void *)v14;
                sub_1001A57B8(v15);

              }
            }

          }
        }
        else
        {

          sub_100137118((uint64_t)v29);
        }
        return;
      }

    }
  }
  else
  {
    sub_100137118((uint64_t)v29);
  }
  if (qword_1002D7250 != -1)
    swift_once(&qword_1002D7250, sub_10010BCAC);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100108664(v17, (uint64_t)&unk_1002E2CC8);
  v20 = Logger.logObject.getter(v18, v19);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v20, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v22, "AlertCoordinator: call status is not disconnected or is not emergency or doesn't need callbackUI so we skip notifying stewie", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  swift_beginAccess(v3, v29, 0, 0);
  v24 = swift_unknownObjectWeakLoadStrong(v3);
  if (v24)
  {
    v25 = (void *)v24;
    sub_1001A4E3C(0);

  }
}

void sub_1001A5D30(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  __n128 v7;
  void *v8;
  _BYTE v9[24];

  v3 = a3 + 16;
  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  v4 = qword_1002E2D40;
  v5 = static os_log_type_t.default.getter(a1);
  os_log(_:dso:log:type:_:)("AlertCoordinator: Did receive supportsEmergencyFallback notification", 68, 2, &_mh_execute_header, v4, v5, _swiftEmptyArrayStorage);
  swift_beginAccess(v3, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_1001A57B8(v7);

  }
}

id sub_1001A5DE0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlertCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AlertCoordinator()
{
  return objc_opt_self(_TtC13InCallService16AlertCoordinator);
}

BOOL sub_1001A5EE8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_stateMonitor) != 0;
}

uint64_t sub_1001A5F40(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;

  if (*(_QWORD *)&v1[OBJC_IVAR____TtC13InCallService16AlertCoordinator_stateMonitor])
  {
    if (qword_1002D7278 != -1)
      a1 = swift_once(&qword_1002D7278, sub_10010BE40);
    v2 = qword_1002E2D40;
    v3 = static os_log_type_t.error.getter(a1);
    v4 = "AlertCoordinator: State monitor already exists";
    v5 = 46;
    return os_log(_:dso:log:type:_:)(v4, v5, 2, &_mh_execute_header, v2, v3, _swiftEmptyArrayStorage);
  }
  v6 = (void *)(*(uint64_t (**)(char *))&v1[OBJC_IVAR____TtC13InCallService16AlertCoordinator_stateMonitorProvider])(v1);
  if (!v6)
  {
LABEL_11:
    if (qword_1002D7278 != -1)
      v6 = (void *)swift_once(&qword_1002D7278, sub_10010BE40);
    v2 = qword_1002E2D40;
    v3 = static os_log_type_t.error.getter(v6);
    v4 = "AlertCoordinator: Unable to create and start state monitor";
    v5 = 58;
    return os_log(_:dso:log:type:_:)(v4, v5, 2, &_mh_execute_header, v2, v3, _swiftEmptyArrayStorage);
  }
  v7 = (uint64_t)v6;
  if (!objc_msgSend(v6, "start"))
  {
    swift_unknownObjectRelease(v7);
    goto LABEL_11;
  }
  v8 = swift_unknownObjectRetain(v7);
  sub_1001A531C(v8);
  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  static os_log_type_t.default.getter(v9);
  sub_1001A7EC8((uint64_t)"AlertCoordinator: Starting state monitor", 40, v10, (uint64_t)&_mh_execute_header);
  objc_msgSend(v1, "refreshDelegateWithState");
  return sub_100143770(v7);
}

uint64_t sub_1001A6118(__n128 a1)
{
  uint64_t v1;

  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  static os_log_type_t.default.getter(a1);
  sub_100137268((uint64_t)"AlertCoordinator: Stopping monitoring alert state", 49, v1, (uint64_t)&_mh_execute_header);
  return sub_1001A531C(0);
}

void sub_1001A61C0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;

  v1 = *(void **)&v0[OBJC_IVAR____TtC13InCallService16AlertCoordinator_stateMonitor];
  if (v1)
  {
    v2 = qword_1002D7278;
    sub_1001A3DBC();
    if (v2 != -1)
      swift_once(&qword_1002D7278, sub_10010BE40);
    static os_log_type_t.default.getter(v3);
    sub_1001A7ED4((uint64_t)"AlertCoordinator: Refreshing alert state", 40, v4, (uint64_t)&_mh_execute_header);
    objc_msgSend(v0, "statusChanged:", objc_msgSend(v1, "getStatus"));
    sub_100143770((uint64_t)v1);
  }
}

id sub_1001A62B0(char a1, char a2, __n128 a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;

  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  v6 = qword_1002E2D40;
  v7 = static os_log_type_t.default.getter(a3);
  os_log(_:dso:log:type:_:)("AlertCoordinator: Performing alert request", 42, 2, &_mh_execute_header, v6, v7, _swiftEmptyArrayStorage);
  return objc_msgSend(v3, "performAlertRequestWithRequestUnlock:automaticallyInvoked:", a1 & 1, a2 & 1);
}

double sub_1001A63B4()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC13InCallService16AlertCoordinator__currentBackgroundCountdownDuration);
}

id sub_1001A6404(_QWORD *a1, SEL *a2)
{
  uint64_t v2;
  id result;

  result = *(id *)(v2 + *a1);
  if (result)
    return objc_msgSend(result, *a2);
  return result;
}

void sub_1001A6428()
{
  sub_1001A5334(0);
}

void sub_1001A6464(char a1, char a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[6];

  v5 = (uint64_t)sub_1001A4E80(a3);
  if ((v5 & 1) != 0)
  {
    v6 = swift_allocObject(&unk_10028DA78, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    v7 = swift_allocObject(&unk_10028DAC8, 25, 7);
    *(_QWORD *)(v7 + 16) = v6;
    *(_BYTE *)(v7 + 24) = a2 & 1;
    if ((a1 & 1) != 0)
    {
      v8 = objc_msgSend((id)objc_opt_self(PHInCallUtilities), "sharedInstance");
      if (v8)
      {
        v9 = v8;
        v10 = swift_allocObject(&unk_10028DAF0, 32, 7);
        *(_QWORD *)(v10 + 16) = sub_1001A7948;
        *(_QWORD *)(v10 + 24) = v7;
        v15[4] = sub_1001A7978;
        v15[5] = v10;
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 1107296256;
        v15[2] = sub_100110294;
        v15[3] = &unk_10028DB08;
        v11 = _Block_copy(v15);
        swift_retain();
        objc_msgSend(v9, "requestPasscodeUnlockWithCompletion:", v11, swift_release().n128_f64[0]);
        swift_release();
        _Block_release(v11);

      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      v14 = swift_retain();
      sub_1001A6664(v14, a2 & 1);
      swift_release();
      swift_release();
    }
  }
  else
  {
    if (qword_1002D7278 != -1)
      v5 = swift_once(&qword_1002D7278, sub_10010BE40);
    v12 = qword_1002E2D40;
    v13 = static os_log_type_t.error.getter(v5);
    os_log(_:dso:log:type:_:)("AlertCoordinator: State is unavailable to performAlertRequest", 61, 2, &_mh_execute_header, v12, v13, _swiftEmptyArrayStorage);
  }
}

double sub_1001A6664(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  _BYTE *v6;
  id v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  double v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD aBlock[6];
  _BYTE v23[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (_BYTE *)Strong;
    v7 = objc_msgSend(objc_allocWithZone((Class)CTStewieRequestContext), "init");
    objc_msgSend(v7, "setReason:", 1);
    v8 = OBJC_IVAR____TtC13InCallService16AlertCoordinator_callCenter;
    v9 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC13InCallService16AlertCoordinator_callCenter], "emergencyCall");
    if (v9)
    {
      v11 = v9;
      if ((a2 & 1) != 0)
      {
        v12 = objc_msgSend(v9, "originatingUIType") - 6;
        if (v12 <= 7 && ((0xD1u >> v12) & 1) != 0)
          objc_msgSend(v7, "setReason:", qword_100245490[v12]);
      }

    }
    if (qword_1002D7278 != -1)
      swift_once(&qword_1002D7278, sub_10010BE40);
    v13 = qword_1002E2D40;
    v14 = static os_log_type_t.default.getter(v10);
    os_log(_:dso:log:type:_:)("AlertCoordinator: Will invoke alert", 35, 2, &_mh_execute_header, v13, v14, _swiftEmptyArrayStorage);
    v6[OBJC_IVAR____TtC13InCallService16AlertCoordinator_isAlertRequestPending] = 1;
    v15 = (void *)swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC13InCallService16AlertCoordinator_delegate]);
    if (v15)
    {
      v17 = v15;
      objc_msgSend(v15, "alertWillInvoke");
      *(_QWORD *)&v16 = swift_unknownObjectRelease(v17).n128_u64[0];
    }
    objc_msgSend(*(id *)&v6[v8], "disconnectAllCallsWithNoPreflight", v16);
    v18 = *(void **)&v6[OBJC_IVAR____TtC13InCallService16AlertCoordinator_telephonyClient];
    v19 = swift_allocObject(&unk_10028DA78, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16);
    v20 = swift_allocObject(&unk_10028DB40, 25, 7);
    *(_QWORD *)(v20 + 16) = v19;
    *(_BYTE *)(v20 + 24) = a2 & 1;
    aBlock[4] = sub_1001A79A4;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001A4BC8;
    aBlock[3] = &unk_10028DB58;
    v21 = _Block_copy(aBlock);
    swift_unknownObjectRetain(v18);
    objc_msgSend(v18, "requestStewieWithContext:completion:", v7, v21, swift_release().n128_f64[0]);
    _Block_release(v21);

    *(_QWORD *)&result = swift_unknownObjectRelease(v18).n128_u64[0];
  }
  return result;
}

void sub_1001A68E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t Strong;
  __n128 v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  _BYTE v28[56];
  _BYTE v29[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = (char *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC13InCallService16AlertCoordinator_isAlertRequestPending) = 0;
    if (a1)
    {
      v9 = swift_errorRetain(a1);
      if (qword_1002D7278 != -1)
        v9 = swift_once(&qword_1002D7278, sub_10010BE40);
      v10 = qword_1002E2D40;
      v11 = static os_log_type_t.error.getter(v9);
      v12 = sub_1001085C0(&qword_1002D8700);
      v13 = swift_allocObject(v12, 72, 7);
      *(_OWORD *)(v13 + 16) = xmmword_100241240;
      v27 = a1;
      swift_errorRetain(a1);
      sub_1001085C0(&qword_1002D8520);
      v14 = String.init<A>(reflecting:)(&v27);
      v16 = v15;
      *(_QWORD *)(v13 + 56) = &type metadata for String;
      *(_QWORD *)(v13 + 64) = sub_100176E30();
      *(_QWORD *)(v13 + 32) = v14;
      *(_QWORD *)(v13 + 40) = v16;
      os_log(_:dso:log:type:_:)("AlertCoordinator: Request failed: %@", 36, 2, &_mh_execute_header, v10, v11, v13);
      swift_bridgeObjectRelease(v13);

      swift_errorRelease(a1);
    }
    else
    {
      if (qword_1002D7278 != -1)
        swift_once(&qword_1002D7278, sub_10010BE40);
      v17 = qword_1002E2D40;
      v18 = static os_log_type_t.default.getter(v7);
      os_log(_:dso:log:type:_:)("AlertCoordinator: Did invoke alert", 34, 2, &_mh_execute_header, v17, v18, _swiftEmptyArrayStorage);
      v19 = sub_1001085C0((uint64_t *)&unk_1002DC4C8);
      inited = swift_initStackObject(v19, v28);
      *(_OWORD *)(inited + 16) = xmmword_100241240;
      *(_QWORD *)(inited + 32) = 0xD000000000000017;
      *(_QWORD *)(inited + 40) = 0x80000001001F6F80;
      *(_BYTE *)(inited + 48) = a3 & 1;
      v21 = Dictionary.init(dictionaryLiteral:)(inited, &type metadata for String, &type metadata for Bool, &protocol witness table for String);
      v22 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1002D73A8 != -1)
        swift_once(&qword_1002D73A8, sub_1001A4C1C);
      v23 = qword_1002E2F18;
      v24 = sub_1001A6BD8(v21);
      swift_bridgeObjectRelease(v21);
      sub_1001A79B0(v23, 0, v24, v22);

      v25 = (void *)swift_unknownObjectWeakLoadStrong(&v8[OBJC_IVAR____TtC13InCallService16AlertCoordinator_delegate]);
      if (v25)
      {
        v26 = v25;
        if ((objc_msgSend(v25, "respondsToSelector:", "alertDidInvoke") & 1) != 0)
          objc_msgSend(v26, "alertDidInvoke");

        swift_unknownObjectRelease(v26);
      }
      else
      {

      }
    }
  }
}

uint64_t sub_1001A6BD8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_1001085C0(&qword_1002DC4D8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain();
  v9 = 0;
  if (!v6)
    goto LABEL_9;
LABEL_8:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v16 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v17 = v16[1];
    v18 = *(_BYTE *)(*(_QWORD *)(a1 + 56) + v11);
    *(_QWORD *)&v39[0] = *v16;
    *((_QWORD *)&v39[0] + 1) = v17;
    swift_bridgeObjectRetain(v17);
    swift_dynamicCast(&v31, v39, &type metadata for String, &type metadata for AnyHashable, 7);
    v30 = v18;
    swift_dynamicCast(v34, &v30, &type metadata for Bool, (char *)&type metadata for Any + 8, 7);
    v35 = v31;
    v36 = v32;
    v37 = v33;
    sub_10011AC74(v34, v38);
    v31 = v35;
    v32 = v36;
    v33 = v37;
    sub_10011AC74(v38, v39);
    sub_10011AC74(v39, &v35);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v19 = -1 << *((_BYTE *)v3 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)&v7[8 * (v20 >> 6)]) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)&v7[8 * v21];
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)&v7[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)&v7[(v22 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v22;
    v27 = v3[6] + 40 * v22;
    *(_OWORD *)v27 = v31;
    *(_OWORD *)(v27 + 16) = v32;
    *(_QWORD *)(v27 + 32) = v33;
    result = (uint64_t)sub_10011AC74(&v35, (_OWORD *)(v3[7] + 32 * v22));
    ++v3[2];
    if (v6)
      goto LABEL_8;
LABEL_9:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_38;
    if (v12 >= v28)
      goto LABEL_36;
    v13 = *(_QWORD *)(v29 + 8 * v12);
    v14 = v9 + 1;
    if (!v13)
    {
      v14 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_36;
      v13 = *(_QWORD *)(v29 + 8 * v14);
      if (!v13)
      {
        v14 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_36;
        v13 = *(_QWORD *)(v29 + 8 * v14);
        if (!v13)
        {
          v14 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_36;
          v13 = *(_QWORD *)(v29 + 8 * v14);
          if (!v13)
            break;
        }
      }
    }
LABEL_24:
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v9 = v14;
  }
  v15 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_36:
    swift_release();
    sub_10011ACD4(a1);
    return (uint64_t)v3;
  }
  v13 = *(_QWORD *)(v29 + 8 * v15);
  if (v13)
  {
    v14 = v9 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= v28)
      goto LABEL_36;
    v13 = *(_QWORD *)(v29 + 8 * v14);
    ++v15;
    if (v13)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1001A6F7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;

  if ((a1 & 1) != 0)
    return a2();
  if (qword_1002D7278 != -1)
    a1 = swift_once(&qword_1002D7278, sub_10010BE40);
  v3 = qword_1002E2D40;
  v4 = static os_log_type_t.error.getter(a1);
  return os_log(_:dso:log:type:_:)("AlertCoordinator: Unable to proceed with request.", 49, 2, &_mh_execute_header, v3, v4, _swiftEmptyArrayStorage);
}

void sub_1001A7050()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v5[6];

  if ((objc_msgSend(v0, "isBackgroundCountdownRunning") & 1) == 0)
  {
    *(_QWORD *)&v0[OBJC_IVAR____TtC13InCallService16AlertCoordinator__currentBackgroundCountdownDuration] = 0x4024000000000000;
    v1 = (void *)objc_opt_self(NSTimer);
    v2 = swift_allocObject(&unk_10028DA78, 24, 7);
    swift_unknownObjectWeakInit(v2 + 16);
    v5[4] = sub_1001A7940;
    v5[5] = v2;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 1107296256;
    v5[2] = sub_1001A7250;
    v5[3] = &unk_10028DA90;
    v3 = _Block_copy(v5);
    swift_release();
    v4 = objc_msgSend(v1, "scheduledTimerWithTimeInterval:repeats:block:", 1, v3, 1.0);
    _Block_release(v3);
    sub_1001A5334((uint64_t)v4);
  }
}

void sub_1001A7154(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  __n128 v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (char *)Strong;
    v4.n128_f64[0] = *(double *)(Strong
                               + OBJC_IVAR____TtC13InCallService16AlertCoordinator__currentBackgroundCountdownDuration)
                   + -1.0;
    *(_QWORD *)(Strong + OBJC_IVAR____TtC13InCallService16AlertCoordinator__currentBackgroundCountdownDuration) = v4.n128_u64[0];
    if (v4.n128_f64[0] <= 0.0)
    {
      if (qword_1002D7278 != -1)
        swift_once(&qword_1002D7278, sub_10010BE40);
      v6 = qword_1002E2D40;
      v7 = static os_log_type_t.default.getter(v4);
      os_log(_:dso:log:type:_:)("AlertCoordinator: background auto-countdown finished, invoking alert", 68, 2, &_mh_execute_header, v6, v7, _swiftEmptyArrayStorage);
      objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC13InCallService16AlertCoordinator_backgroundCountdownTimer], "invalidate");
      objc_msgSend(v5, "invokeAlertWithRequestUnlock:automaticallyInvoked:", 0, 1);
    }

  }
}

void sub_1001A7250(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

double sub_1001A72A0()
{
  char *v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  void *Strong;
  void *v6;

  if ((objc_msgSend(v0, "isStewieActive") & 1) != 0)
  {
    if (qword_1002D7278 != -1)
      swift_once(&qword_1002D7278, sub_10010BE40);
    v2 = qword_1002E2D40;
    v3 = static os_log_type_t.default.getter(v1);
    os_log(_:dso:log:type:_:)("AlertCoordinator: stewie is active, no need to notify delegates", 63, 2, &_mh_execute_header, v2, v3, _swiftEmptyArrayStorage);
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC13InCallService16AlertCoordinator_delegate]);
    if (Strong)
    {
      v6 = Strong;
      if ((objc_msgSend(Strong, "respondsToSelector:", "cleanAlertUIInCarPlay") & 1) != 0)
        objc_msgSend(v6, "cleanAlertUIInCarPlay");
      *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1001A7380(void *a1)
{
  void *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v8;

  sub_1001A7480((uint64_t)objc_msgSend(v1, "statusChanged:", objc_msgSend(a1, "status")));
  v2 = OBJC_IVAR____TtC13InCallService16AlertCoordinator_isDemoAvailable;
  *((_BYTE *)v1 + OBJC_IVAR____TtC13InCallService16AlertCoordinator_isDemoAvailable) = v3 & 1;
  sub_1001A5200();
  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  v4 = sub_1001085C0(&qword_1002D8700);
  v5 = sub_1001A7EBC(v4);
  v6 = *((_BYTE *)v1 + v2);
  *(_OWORD *)(v5 + 16) = xmmword_100241240;
  *(_QWORD *)(v5 + 56) = &type metadata for Bool;
  *(_QWORD *)(v5 + 64) = &protocol witness table for Bool;
  *(_BYTE *)(v5 + 32) = v6;
  static os_log_type_t.default.getter((__n128)xmmword_100241240);
  os_log(_:dso:log:type:_:)("AlertCoordinator: State changed.  Demo available: %d", v8);
  return swift_bridgeObjectRelease(v5);
}

void sub_1001A7480(uint64_t a1)
{
  id v1;

  v1 = sub_10010BC5C(a1, "allowedServices");
  sub_10010BC5C((uint64_t)v1, "activeServices");
  sub_100109438();
}

double sub_1001A7510()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  __n128 v3;
  __n128 v4;
  int v6;

  if (qword_1002D7278 != -1)
    swift_once(&qword_1002D7278, sub_10010BE40);
  v0 = sub_1001085C0(&qword_1002D8700);
  v1 = sub_1001A7EBC(v0);
  *(_OWORD *)(v1 + 16) = xmmword_100241240;
  v2 = sub_1001A4E80((__n128)xmmword_100241240);
  *(_QWORD *)(v1 + 56) = &type metadata for Bool;
  *(_QWORD *)(v1 + 64) = &protocol witness table for Bool;
  *(_BYTE *)(v1 + 32) = v2 & 1;
  static os_log_type_t.default.getter(v3);
  os_log(_:dso:log:type:_:)("AlertCoordinator: Status changed.  Service available: %d", v6);
  swift_bridgeObjectRelease(v1);
  v4.n128_f64[0] = sub_1001A5688();
  sub_1001A57B8(v4);
  return sub_1001A72A0();
}

id sub_1001A7610()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "getState");
  v2 = objc_msgSend(v1, "status");

  return v2;
}

void sub_1001A76BC()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "getState");
  sub_1001A76FC((uint64_t)v1);

  sub_100109438();
}

void sub_1001A76FC(uint64_t a1)
{
  id v1;

  v1 = sub_10010BC5C(a1, "allowedServices");
  sub_10010BC5C((uint64_t)v1, "activeServices");
  sub_100109438();
}

void sub_1001A7768()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "getState");
  objc_msgSend(v1, "activeServices");

  sub_100109438();
}

uint64_t sub_1001A77E0()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t result;
  _QWORD v4[6];

  v4[4] = sub_1001A78C4;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_1001A78C8;
  v4[3] = &unk_10028DA40;
  v1 = _Block_copy(v4);
  v2 = objc_msgSend(v0, "callPassingTest:", v1, swift_release().n128_f64[0]);
  _Block_release(v1);
  result = swift_isEscapingClosureAtFileLocation(0, "", 86, 472, 26, 1);
  if ((result & 1) == 0)
    return (uint64_t)v2;
  __break(1u);
  return result;
}

id sub_1001A78A8(void *a1)
{
  return objc_msgSend(a1, "isEmergency");
}

uint64_t sub_1001A78C8(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  char v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = v2();

  return v4 & 1;
}

uint64_t sub_1001A7904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001A7914(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001A791C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001A7940(uint64_t a1)
{
  uint64_t v1;

  sub_1001A7154(a1, v1);
}

double sub_1001A7948()
{
  uint64_t v0;

  return sub_1001A6664(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1001A7954()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A7978(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A6F7C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1001A7980()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1001A79A4(uint64_t a1)
{
  uint64_t v1;

  sub_1001A68E0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_1001A79B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Class isa;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a3);
  objc_msgSend(a4, "postNotificationName:object:userInfo:", a1, a2, isa);

}

char *sub_1001A7A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, _BYTE *a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  objc_class *v21;
  id v22;
  void *v23;
  char *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  void (*v29)(char *, uint64_t, __n128);
  char *v30;
  id v31;
  uint64_t v32;
  __n128 v33;
  id v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];
  objc_super v44;

  v42 = a4;
  v14 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(&a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_delegate]);
  a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_isAlertRequestPending] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_failedEmergencyCall] = 0;
  a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_isDemoAvailable] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator__currentBackgroundCountdownDuration] = 0x4024000000000000;
  *(_QWORD *)&a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_stateMonitor] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_backgroundCountdownTimer] = 0;
  v19 = &a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_stateMonitorProvider];
  *v19 = a1;
  v19[1] = a2;
  v41 = a2;
  v20 = &a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_carPlayProvider];
  *v20 = a3;
  v20[1] = a4;
  *(_QWORD *)&a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_telephonyClient] = a5;
  *(_QWORD *)&a7[OBJC_IVAR____TtC13InCallService16AlertCoordinator_callCenter] = a6;
  v21 = (objc_class *)type metadata accessor for AlertCoordinator();
  v44.receiver = a7;
  v44.super_class = v21;
  swift_retain();
  swift_retain();
  v40 = a5;
  v39 = a6;
  v22 = objc_msgSendSuper2(&v44, "init");
  v23 = (void *)objc_opt_self(NSNotificationCenter);
  v24 = (char *)v22;
  v25 = objc_msgSend(v23, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(TUCallCenterIsFailureExpectedChangedNotification, 0);

  v26 = swift_allocObject(&unk_10028DA78, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16);
  v27 = sub_1001A7E50();
  Publisher<>.sink(receiveValue:)(sub_1001A7E48, v26, v14, v27);
  v28 = swift_release();
  v29 = *(void (**)(char *, uint64_t, __n128))(v15 + 8);
  v29(v18, v14, v28);
  v30 = &v24[OBJC_IVAR____TtC13InCallService16AlertCoordinator_cancellables];
  swift_beginAccess(&v24[OBJC_IVAR____TtC13InCallService16AlertCoordinator_cancellables], v43, 33, 0);
  AnyCancellable.store(in:)(v30);
  swift_endAccess(v43);
  v31 = objc_msgSend(v23, "defaultCenter", swift_release().n128_f64[0]);
  NSNotificationCenter.publisher(for:object:)(TUCallCenterCallStatusChangedNotification, 0);

  v32 = swift_allocObject(&unk_10028DA78, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16);
  Publisher<>.sink(receiveValue:)(sub_1001A7E90, v32, v14, v27);
  v33 = swift_release();
  v29(v18, v14, v33);
  swift_beginAccess(v30, v43, 33, 0);
  AnyCancellable.store(in:)(v30);
  swift_endAccess(v43);
  v34 = objc_msgSend(v23, "defaultCenter", swift_release().n128_f64[0]);
  NSNotificationCenter.publisher(for:object:)(TUCallCenterSupportsEmergencyFallbackChangedNotification, 0);

  v35 = swift_allocObject(&unk_10028DA78, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16);
  Publisher<>.sink(receiveValue:)(sub_1001A7E98, v35, v14, v27);
  v36 = swift_release();
  v29(v18, v14, v36);
  swift_beginAccess(v30, v43, 33, 0);
  AnyCancellable.store(in:)(v30);
  swift_endAccess(v43);
  swift_release();

  swift_release();
  swift_release();

  return v24;
}

void sub_1001A7E48(uint64_t a1, __n128 a2)
{
  uint64_t v2;

  sub_1001A5528(a2, a1, v2);
}

unint64_t sub_1001A7E50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1002DC4E0;
  if (!qword_1002DC4E0)
  {
    v1 = type metadata accessor for NSNotificationCenter.Publisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSNotificationCenter.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1002DC4E0);
  }
  return result;
}

void sub_1001A7E90(uint64_t a1, __n128 a2)
{
  uint64_t v2;

  sub_1001A5A24(a2, a1, v2);
}

void sub_1001A7E98(uint64_t a1, __n128 a2)
{
  uint64_t v2;

  sub_1001A5D30(a2, a1, v2);
}

uint64_t sub_1001A7EBC(uint64_t a1)
{
  return swift_allocObject(a1, 72, 7);
}

uint64_t sub_1001A7EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return os_log(_:dso:log:type:_:)(a1, a2, 2, a4, v4);
}

uint64_t sub_1001A7ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return os_log(_:dso:log:type:_:)(a1, a2, 2, a4, v4);
}

uint64_t sub_1001A7EE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_unknownObjectRelease(*(_QWORD *)(v1 + a1));
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC13InCallServiceP33_E275464753A42E1B899C193A7D1EEA8F19ResourceBundleClass);
}

void sub_1001A7F08(void *a1, NSObject *a2)
{
  int v3;
  id v4;

  v3 = 134217984;
  v4 = objc_msgSend(a1, "deviceType");
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to determine glyph for %ld. Defaulting to speaker", (uint8_t *)&v3, 0xCu);
}

void sub_1001A7F90(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Failed to look up scene type for configuration identifier %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001A8004(uint64_t a1, uint64_t a2, os_log_t log)
{
  const __CFString *v3;
  int v4;
  const __CFString *v5;
  __int16 v6;
  uint64_t v7;

  if ((unint64_t)(a1 - 1) > 5)
    v3 = CFSTR("call");
  else
    v3 = *(&off_100284C00 + a1 - 1);
  v4 = 138543618;
  v5 = v3;
  v6 = 2114;
  v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "There's no previously registered scene of type %{public}@; ignoring scene %{public}@",
    (uint8_t *)&v4,
    0x16u);
}

void sub_1001A80AC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "SNAP: updateContactAndNicknamesForAutoUpdateWithError returned error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001A8120(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "SNAP: calling updateContactAndNicknamesForAutoUpdateWithError for avatar", v1, 2u);
}

void sub_1001A8160(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%{public}@: PiP Proxy doesn't implement selector, won't set title and avatar", (uint8_t *)&v2, 0xCu);
}

void sub_1001A81D4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Invalid state detected: PIP is starting while shouldPIPWhenEnteringBackground is NO. Attempting to recover by immediately stopping PIP.", v1, 2u);
}

void sub_1001A8214(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138543618;
  v4 = a1;
  v5 = 2048;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%{public}@: Received unknown PIP FaceTime action %ld", (uint8_t *)&v3, 0x16u);
}

void sub_1001A8298()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "%@", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A82F8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Unable to punch out for call %@ because it has no bundle identifier", a5, a6, a7, a8, 2u);
}

void sub_1001A8360(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Unable to punch out for call %@ because it has no bundle identifier", a5, a6, a7, a8, 2u);
}

void sub_1001A83CC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v2, 0xCu);
}

void sub_1001A8440(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to find bundle identifier for request: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001A84B4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Call image URL is not provided - removing view", v1, 2u);
}

void sub_1001A84F4(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Setting attribute failed with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001A8568(int a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not obtain audio session for identifier %d", (uint8_t *)v2, 8u);
}

void sub_1001A85DC(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Could not obtain application record with bundle identifier %@; attempt failed with error %@",
    (uint8_t *)&v3,
    0x16u);
}

uint64_t sub_1001A8660()
{
  char *v0;
  uint64_t v1;

  v0 = dlerror();
  v1 = abort_report_np("%s", v0);
  return sub_1001A8680(v1);
}

void sub_1001A8680()
{
  uint64_t v0;
  os_log_t v1;

  sub_100059A38();
  sub_100059A10((void *)&_mh_execute_header, v0, v1, "Aborting join request; launch options dictionary contains unexpected type %@ for key %@.");
  sub_10002003C();
}

void sub_1001A86E0()
{
  uint64_t v0;
  os_log_t v1;

  sub_100059A38();
  sub_100059A10((void *)&_mh_execute_header, v0, v1, "Aborting the dial request; launch options dictionary contains unexpected type %@ for key %@.");
  sub_10002003C();
}

void sub_1001A8740()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Could not find sender identity for contact handle %@", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A87A0()
{
  uint64_t v0;
  os_log_t v1;

  sub_100059A38();
  sub_100059A10((void *)&_mh_execute_header, v0, v1, "Contact retrieval failed for identifier %@: %@");
  sub_10002003C();
}

void sub_1001A8800()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Could not find sender identity for contact %@", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A8860()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Failed to unarchive join request with error: %@", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A88C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Received user activity with URL %@ to invoke universal link support; URL not recognized as supported TUConversationL"
    "ink; diverting user back to browser.",
    v2,
    v3,
    v4,
    v5,
    v6);
  sub_10002003C();
}

void sub_1001A8920(void *a1, uint64_t a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(_QWORD *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(_QWORD *)(buf + 14) = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempt to retrieve application record for bundle identifier %@ failed with error: %@", buf, 0x16u);

}

void sub_1001A8984()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Cannot open FaceTime link since Group FaceTime is not supported (GreenTea device or doesn't support multiway)", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A89B0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Cannot open FaceTime link since FaceTime is not supported", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A89DC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "cannot dial call, received nil dial request", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A8A08()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Could not retrieve a call from notification %@", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A8A68()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Failed to get call scene with error: %@. Invalidating.", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A8AC8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Already requested presentation from ICSTypeSceneScreenSharingBroadcaster, so skipping new request. with error: %@", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A8B28()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Ignoring request to activate InCallService user interface for Screen Sharing since the feature is disabled", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A8B54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Attempted to dismiss Sharing Broadcasing scene, but none was showing.", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A8B80()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Error destroying Sharing Broadcasing scene: %@", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A8BE0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "No account can initiate calls when attempting to open dial request; showing alert",
    v2,
    v3,
    v4,
    v5,
    v6);
  sub_100059A24();
}

void sub_1001A8C0C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Failed to initiate a call, all supported networks are unavailable.", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A8C38()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "No account can initiate calls when attempting to join conversation; showing alert",
    v2,
    v3,
    v4,
    v5,
    v6);
  sub_100059A24();
}

void sub_1001A8C64(void *a1)
{
  NSObject *v1;
  void *v2;
  void *v3;
  int v4;
  uint8_t v5[12];
  __int16 v6;
  int v7;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](TUCallCenter, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "currentCalls"));
  sub_100020044();
  v6 = 1024;
  v7 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Received show in-call UI URL but still could not find any calls, after requerying for current calls: %@ or should activate SpringBoard alert %d", v5, 0x12u);

}

void sub_1001A8D34()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Failed to parse UUID from video message url", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A8D60()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Attempted to open video message URL while feature flag is disabled", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A8D8C(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = 138412290;
  v4 = v2;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Unable to open video message with UUID %@", (uint8_t *)&v3, 0xCu);
  sub_10002003C();
}

void sub_1001A8E00(void *a1, NSObject *a2)
{
  void *v3;
  uint8_t v4[24];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "processAssertion"));
  sub_100020044();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to acquire temporary prevent suspension assertion: %@", v4, 0xCu);

}

void sub_1001A8E90()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Can't present system call controls because there's no scene and no known call", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A8EBC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Ignoring request to show Screen Sharing full screen since the feature is disabled", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A8EE8()
{
  uint64_t v0;
  os_log_t v1;

  sub_100059A38();
  sub_100059A10((void *)&_mh_execute_header, v0, v1, "Aborting headset button press request for url options dictionary %@ with source process %@");
  sub_10002003C();
}

void sub_1001A8F48()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_100059A2C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Not requesting new screen sharing scene since one already exists", v1, 2u);
  sub_100059A24();
}

void sub_1001A8F80(uint64_t a1, uint64_t a2, NSObject *a3)
{
  _BYTE v3[24];

  *(_DWORD *)v3 = 138412546;
  *(_QWORD *)&v3[4] = *(_QWORD *)(a1 + 32);
  *(_WORD *)&v3[12] = 2112;
  *(_QWORD *)&v3[14] = a2;
  sub_100059A10((void *)&_mh_execute_header, a2, a3, "Error pushing call to %@ -- %@", *(_QWORD *)v3, *(_QWORD *)&v3[8], *(_QWORD *)&v3[16]);
  sub_10002003C();
}

void sub_1001A8FF4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Attempted to transition from ambient scene, but none was showing.", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A9020()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Asked to handle redial %@ without a screening call", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A9080(uint64_t *a1, NSObject *a2)
{
  uint64_t v2;
  _DWORD v3[2];

  v2 = *a1;
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "PHSOSViewController,launched with unhandled SOSTriggerMechanism,%d", (uint8_t *)v3, 8u);
  sub_100059A24();
}

void sub_1001A90F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,launched with mostRecentlyUsedSOSTriggerMechanism = SOSTriggerMechanismNone", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A9120()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,launched without an SOS assertion", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A914C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,speaker route didn't get picked", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A9178()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,speaker route is not available", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A91A4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,unexpected non-emergency call observed during SOS flow", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A91D0(void *a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_100064634(a1, a2);
  sub_100064648();
  sub_100064614((void *)&_mh_execute_header, v2, v3, "PHSOSViewController,unhandled trigger type at call disconnect,%d", v4, v5, v6, v7, v8);
  sub_100064628();
}

void sub_1001A9238()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,ambulance handle not found so defaulting to the first handle", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A9264(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7;

  objc_msgSend(a1, "sosTrigger");
  sub_100064648();
  sub_100064614((void *)&_mh_execute_header, v1, v2, "PHSOSViewController,call dial attempted with unhandled SOSTriggerMechanism,%d", v3, v4, v5, v6, v7);
  sub_100064628();
}

void sub_1001A92D4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,failed to set volume to max", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A9300()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,failed to get current volume", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A932C(void *a1, NSObject *a2)
{
  float v3;
  uint64_t v4;
  int v5;
  double v6;

  objc_msgSend(a1, "priorSystemVolume");
  v5 = 134217984;
  v6 = v3;
  sub_10006463C((void *)&_mh_execute_header, a2, v4, "PHSOSViewController,failed to set volume back to %f", (uint8_t *)&v5);
}

void sub_1001A93B0(void *a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_100064634(a1, a2);
  sub_100064648();
  sub_100064614((void *)&_mh_execute_header, v2, v3, "PHSOSViewController,show dial countdown called with unhandled SOSTriggerMechanism,%d", v4, v5, v6, v7, v8);
  sub_100064628();
}

void sub_1001A9418()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,dial countdown view requested for unexpected trigger,SOSTriggerMechanismVolumeLockHold", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A9444()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,heartbeat timer fired unexpectedly", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A9470(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 138412290;
  v4 = a1;
  sub_10006463C((void *)&_mh_execute_header, a2, a3, "PHSOSViewController,failed to open messages with error,%@", (uint8_t *)&v3);
}

void sub_1001A94DC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "data is not available or lost mode is active", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A9508()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHSOSViewController,unexpectedly registered for alert state changes", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001A9534(void *a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_100064634(a1, a2);
  sub_100064648();
  sub_100064614((void *)&_mh_execute_header, v2, v3, "PHSOSViewController,submitting resolution metric with unhandled SOSTriggerMechanism,%d", v4, v5, v6, v7, v8);
  sub_100064628();
}

void sub_1001A959C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "PHSlidingView,volumeButtonDimension,empty CGRect for kMGQVolumeDownButtonNormalizedCGRect", a5, a6, a7, a8, 0);
}

void sub_1001A95D0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "PHSlidingView,volumeButtonDimension,empty CGRect for kMGQVolumeUpButtonNormalizedCGRect", a5, a6, a7, a8, 0);
}

void sub_1001A9604(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100071D10((void *)&_mh_execute_header, a2, a3, "System aperture element provider %@ doesn't conform to SBUISystemApertureElementProviding protocol", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001A9668(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "SpringBoard asked the InCallService scene delegate to provide a system aperture element on a device that doesn't support the system aperture", v1, 2u);
}

void sub_1001A96A8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100071D10((void *)&_mh_execute_header, a2, a3, "Disconnect called for zombie scene %@", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001A970C(char a1, char a2, os_log_t log)
{
  _DWORD v3[2];
  __int16 v4;
  int v5;

  v3[0] = 67109376;
  v3[1] = a1 & 1;
  v4 = 1024;
  v5 = a2 & 1;
  sub_10002003C();
}

void sub_1001A9794(const char *a1, NSObject *a2)
{
  NSString *v3;
  void *v4;
  int v5;
  void *v6;

  v3 = NSStringFromSelector(a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v5 = 138412290;
  v6 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "=> %@ called in superclass. Should be implemented in subclass if", (uint8_t *)&v5, 0xCu);

}

void sub_1001A9828(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "Could not perform dial request, the telephony call provider is nil.", a5, a6, a7, a8, 0);
}

void sub_1001A985C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "Could not perform dial request, the voicemail call provider is nil.", a5, a6, a7, a8, 0);
}

void sub_1001A9890(uint64_t a1, NSObject *a2)
{
  void *v4;
  uint64_t v5;
  int v6;
  void *v7;
  __int16 v8;
  uint64_t v9;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "URL"));
  v5 = *(_QWORD *)(a1 + 32);
  v6 = 138412546;
  v7 = v4;
  v8 = 2112;
  v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not open URL: %@ for DialRequest: %@", (uint8_t *)&v6, 0x16u);

}

void sub_1001A9944(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "PHAudioDeviceController: Error picking new route: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001A99B8(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "DEBUG: CALayer -setNeedsLayout called off main thread", v1, 2u);
}

void sub_1001A99F8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Error retrieving extensions: %@", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A9A58()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Received subscriptionInfo: %@ with no subscriptions", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A9AB8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "Received error: %@ while querying -getSubscriptionInfoWithError", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A9B18()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "ShowExplicitCallTransferButton: received subscriptionInfo: %@ with no subscriptions", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A9B78()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020044();
  sub_10002002C((void *)&_mh_execute_header, v0, v1, "ShowExplicitCallTransferButton: received error: %@ while querying -getSubscriptionInfoWithError", v2, v3, v4, v5, v6);
  sub_10002003C();
}

void sub_1001A9BD8(void *a1, uint64_t a2, NSObject *a3)
{
  void *v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  void *v11;
  __int16 v12;
  void *v13;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "localizedName"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "supportedHandleTypes"));
  v8 = 134218498;
  v9 = a2;
  v10 = 2112;
  v11 = v6;
  v12 = 2112;
  v13 = v7;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Could not create a dial request due to an invalid handle type (%zd). For call provider %@, the supported handle types are (%@).", (uint8_t *)&v8, 0x20u);

}

void sub_1001A9CA4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "User activity does not contains a user info dictionary.", a5, a6, a7, a8, 0);
}

void sub_1001A9CD8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "User activity is missing the required key TUCallUserActivityProviderIdentifierKey.", a5, a6, a7, a8, 0);
}

void sub_1001A9D0C(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not retrieve a call provider for the specified identifier %@.", (uint8_t *)&v2, 0xCu);
}

void sub_1001A9D80(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "Unable to present Decline with Reminder menu since the presenter has been deallocated.", a5, a6, a7, a8, 0);
}

void sub_1001A9DB4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Reminder failure: %@", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001A9E18(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "Failed to create reminder before background task expired", a5, a6, a7, a8, 0);
}

void sub_1001A9E4C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Could not retreive Dual SIM activation policy", v1, 2u);
}

void sub_1001A9E8C(int *a1, NSObject *a2)
{
  int v2;
  _DWORD v3[2];

  v2 = *a1;
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not retreive Dual SIM activation policy, mobileGestaltErrorCode: %d", (uint8_t *)v3, 8u);
}

void sub_1001A9F04(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FBSSystemService could not be weak linked and so we could not launch the field test app", v1, 2u);
}

void sub_1001A9F44(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Geocode returned no error and no placemarks", v1, 2u);
}

void sub_1001A9F84(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Geocode error: %@", a5, a6, a7, a8, 2u);
}

void sub_1001A9FEC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Cannot archive addresses, error: %@", a5, a6, a7, a8, 2u);
}

void sub_1001AA054(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not dial an emergency call, call provider manager (%@) returned an emergency call provider that is nil,.", (uint8_t *)&v2, 0xCu);
}

void sub_1001AA0C8(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to initiate a call, all supported networks are unavailable.", v1, 2u);
}

void sub_1001AA108(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Simulated a crash report for reason: %@", a5, a6, a7, a8, 2u);
}

void sub_1001AA174(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Wanted to file a simulated crash report for reason: %@", a5, a6, a7, a8, 2u);
}

void sub_1001AA1E0()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_100059A2C();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "InCallRootViewController: Staging Area is only supported on macOS, ignoring request and showing multiway if needed.", v1, 2u);
  sub_100059A24();
}

void sub_1001AA218()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Attempted to show multiway VC in a banner, going full-screen to avoid broken UI.", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AA244(void *a1, void *a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(_QWORD *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(_QWORD *)(buf + 14) = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Showing failure alert with title: %@ message: %@", buf, 0x16u);

}

void sub_1001AA2B0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "The SOS UI was dismissed even though there were no active calls. Trying to recover by deactivating SOS.", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AA2DC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to request Add Call presentation: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001AA350(uint64_t a1, void *a2, NSObject *a3)
{
  objc_class *v5;
  NSString *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  unsigned int v11;

  v5 = (objc_class *)objc_opt_class(a1, a2);
  v6 = NSStringFromClass(v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = 138412546;
  v9 = v7;
  v10 = 1024;
  v11 = objc_msgSend(a2, "isDisplayStyleMiniWindow");
  _os_log_fault_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_FAULT, "updateVideoState: viewController of class (%@) missing selector for isDisplayStyleMiniWindow %d", (uint8_t *)&v8, 0x12u);

}

void sub_1001AA408()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Could not find most recently disconnected video call to use for redial", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AA434()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "SpamReport: currentCall == nil, disconnectedCall == nil", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AA460()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Cannot add a recipient to MFMessageComposeViewController, expected a destination ID but none was provided.", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AA48C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "InCallService unexpectedly appeared without a root view controller while PIP is active. Attempting to recover by waiting for PIP to stop before creating the root view controller.", a5, a6, a7, a8, 0);
  sub_100059A24();
}

void sub_1001AA4BC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "Failed to look up video message URL for playback UI", a5, a6, a7, a8, 0);
  sub_100059A24();
}

void sub_1001AA4EC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Failure fetching user activity: %@", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001AA554(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Failed to complete handoff request for %@", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001AA5BC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100059A00((void *)&_mh_execute_header, a1, a3, "PiP will cancel called before existing cancellation block was run; ignoring new cancellation",
    a5,
    a6,
    a7,
    a8,
    0);
  sub_100059A24();
}

void sub_1001AA5EC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "This PHInCallRemoteAlertShellViewController<%@> doesn't have a window matching the PIP transition window", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001AA650(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Could not decline with message because recipientHandle=%@ and response=%@", (uint8_t *)&v3, 0x16u);
  sub_10002003C();
}

void sub_1001AA6D0(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = 138412802;
  v6 = v3;
  v7 = 2112;
  v8 = v4;
  v9 = 2112;
  v10 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to open user activity %@ for application %@: %@", (uint8_t *)&v5, 0x20u);
}

void sub_1001AA760(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Error beginning extension request: %@", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001AA7C4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Error using INExtensionContextVending remote object proxy: %@", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001AA828(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = 138412290;
  v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Updating avatar image in screen sharing and PiP: %@", (uint8_t *)&v3, 0xCu);
}

void sub_1001AA8A0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "CNContactStore fetch failed with the following error: %@", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001AA904(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Could not retrieve a CNContact predicate for call with destination identifier (%@).", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001AA968()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "SNAP: croppedImageRef for snapshot is nil, can't invert the color", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AA994()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "PHAudioCallViewController: Could not find available route to pick for speaker enable", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AA9C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "SNAP: Could not find layer to insert renderingViewController", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AA9EC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "SNAP: PosterSource - We should be transitioning posters, but cannot find an appropriate PosterSource to transition to", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AAA18()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Could not find most recently disconnected audio call to use for redial", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AAA44()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100059A2C();
  sub_100059A00((void *)&_mh_execute_header, v0, v1, "Cannot present Compose Message view, expected a destination ID but none was provided.", v2, v3, v4, v5, v6);
  sub_100059A24();
}

void sub_1001AAA70(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 134217984;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to initialize PHBottomBarSupplementalButton; unsupported action type: %ld",
    (uint8_t *)&v2,
    0xCu);
}

void sub_1001AAAE4(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to find active conversation for call: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001AAB58(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a1, a3, "%@", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001AABC8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10002002C((void *)&_mh_execute_header, a2, a3, "Contact fetch failed with the following error: %@", a5, a6, a7, a8, 2u);
  sub_10002003C();
}

void sub_1001AAC2C(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint8_t v3[16];

  *(_WORD *)v3 = 0;
  sub_100104838((void *)&_mh_execute_header, a1, a3, "Tried to weak link MFMessageComposeViewController to discover capabilities, and the linking failed.", v3);
}

void sub_1001AAC64(uint8_t *a1, _BYTE *a2, NSObject *a3)
{
  *a1 = 0;
  *a2 = 0;
  sub_100104838((void *)&_mh_execute_header, a3, (uint64_t)a3, "-- CarPlay: Could not find available route to pick for speaker enable", a1);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGColor");
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImage");
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGPath");
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGRectValue");
}

id objc_msgSend_FTUserScore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "FTUserScore");
}

id objc_msgSend_HIDEventMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "HIDEventMonitor");
}

id objc_msgSend_HIDEventSystemClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "HIDEventSystemClient");
}

id objc_msgSend_PHAlertInvoked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "PHAlertInvoked");
}

id objc_msgSend_SBSUI_requestInCallSceneSessionDestruction_withReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SBSUI_requestInCallSceneSessionDestruction:withReason:completion:");
}

id objc_msgSend_TTRBannerEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "TTRBannerEnabled");
}

id objc_msgSend_TTRBannerViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "TTRBannerViewController");
}

id objc_msgSend_UID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UID");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URL");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDForLocallyDisconnectedCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDForLocallyDisconnectedCall");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDString");
}

id objc_msgSend___imArrayByFilteringWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imArrayByFilteringWithBlock:");
}

id objc_msgSend___imForEach_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imForEach:");
}

id objc_msgSend___sanitizedPrimaryPhoneCallOrdering_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__sanitizedPrimaryPhoneCallOrdering:");
}

id objc_msgSend__acquireLock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acquireLock");
}

id objc_msgSend__addActionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addActionWithTitle:style:handler:");
}

id objc_msgSend__alertControllerWithTitle_message_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alertControllerWithTitle:message:");
}

id objc_msgSend__animateCallButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateCallButton");
}

id objc_msgSend__animatePowerDown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animatePowerDown");
}

id objc_msgSend__animateUsingDefaultDampedSpringWithDelay_initialSpringVelocity_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:");
}

id objc_msgSend__animateUsingDefaultTimingWithOptions_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingDefaultTimingWithOptions:animations:completion:");
}

id objc_msgSend__animateUsingSpringWithDuration_delay_options_mass_stiffness_damping_initialVelocity_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:");
}

id objc_msgSend__appearState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appearState");
}

id objc_msgSend__applicationIconImageForBundleIdentifier_format_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForBundleIdentifier:format:scale:");
}

id objc_msgSend__applicationKeyWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationKeyWindow");
}

id objc_msgSend__applyLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyLayoutConstraints");
}

id objc_msgSend__auxiliaryConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_auxiliaryConnection");
}

id objc_msgSend__backlightLuminance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backlightLuminance");
}

id objc_msgSend__baselineOffsetFromBottom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_baselineOffsetFromBottom");
}

id objc_msgSend__bezierPathWithPillRect_cornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bezierPathWithPillRect:cornerRadius:");
}

id objc_msgSend__bottomBarBottomMarginForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bottomBarBottomMarginForView:");
}

id objc_msgSend__buttonSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonSize");
}

id objc_msgSend__callButtonPressedActionWithCallProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callButtonPressedActionWithCallProvider:");
}

id objc_msgSend__capabilityForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_capabilityForKey:");
}

id objc_msgSend__carScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_carScreen");
}

id objc_msgSend__childViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_childViewController");
}

id objc_msgSend__clearDisplayIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearDisplayIfNecessary");
}

id objc_msgSend__cn_flatMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cn_flatMap:");
}

id objc_msgSend__constructCurrentValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constructCurrentValues");
}

id objc_msgSend__createPowerDownSlider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPowerDownSlider");
}

id objc_msgSend__createRingImageWithSize_strokeWidth_color_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRingImageWithSize:strokeWidth:color:");
}

id objc_msgSend__createTimerIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createTimerIfNecessary");
}

id objc_msgSend__currentAnimationDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentAnimationDuration");
}

id objc_msgSend__currentScreenScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentScreenScale");
}

id objc_msgSend__currentUserInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentUserInterfaceIdiom");
}

id objc_msgSend__dateOfOldestAddress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dateOfOldestAddress");
}

id objc_msgSend__debugSetNeedsLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugSetNeedsLayout");
}

id objc_msgSend__defaultTrackSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultTrackSize");
}

id objc_msgSend__deviceSpecificImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceSpecificImageNamed:");
}

id objc_msgSend__dialWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dialWithRequest:");
}

id objc_msgSend__doWork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doWork");
}

id objc_msgSend__emergencyDialerFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emergencyDialerFontSize");
}

id objc_msgSend__encodedDialerStringSkippingUnmappedCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_encodedDialerStringSkippingUnmappedCharacters:");
}

id objc_msgSend__extensionBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extensionBundle");
}

id objc_msgSend__extensionContextForUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extensionContextForUUID:");
}

id objc_msgSend__externalSystemDarkGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_externalSystemDarkGrayColor");
}

id objc_msgSend__externalSystemSuperDarkGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_externalSystemSuperDarkGrayColor");
}

id objc_msgSend__fadeSubviewsOf_excludingViews_toValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fadeSubviewsOf:excludingViews:toValue:");
}

id objc_msgSend__fetchUserActivityWithUUID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUserActivityWithUUID:completionHandler:");
}

id objc_msgSend__flatImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flatImageWithColor:");
}

id objc_msgSend__font(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_font");
}

id objc_msgSend__forceResumed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceResumed");
}

id objc_msgSend__forceSuspended(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceSuspended");
}

id objc_msgSend__graphicsQuality(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_graphicsQuality");
}

id objc_msgSend__gridViewRubberBandValueForValue_target_timeInterval_velocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_gridViewRubberBandValueForValue:target:timeInterval:velocity:");
}

id objc_msgSend__handleAlertButtonPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAlertButtonPressed");
}

id objc_msgSend__handlePiPEndedAndShouldBePresentedFullScreen_transitionIsComplete_viewControllerToSteal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePiPEndedAndShouldBePresentedFullScreen:transitionIsComplete:viewControllerToSteal:");
}

id objc_msgSend__horizontalSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_horizontalSpacing");
}

id objc_msgSend__imageThatSuppressesAccessibilityHairlineThickening(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageThatSuppressesAccessibilityHairlineThickening");
}

id objc_msgSend__intents_extensionMatchingAttributesForIntents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intents_extensionMatchingAttributesForIntents:");
}

id objc_msgSend__ios_meContactWithKeysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ios_meContactWithKeysToFetch:error:");
}

id objc_msgSend__isActivePreferredOutputPort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isActivePreferredOutputPort:");
}

id objc_msgSend__isEmergencyDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEmergencyDialRequest:");
}

id objc_msgSend__isNetworkAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isNetworkAvailable");
}

id objc_msgSend__isScreeningAnyCallGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isScreeningAnyCallGroup:");
}

id objc_msgSend__isScreeningCallGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isScreeningCallGroup:");
}

id objc_msgSend__keypadImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keypadImage");
}

id objc_msgSend__keypadToCallButtonYSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keypadToCallButtonYSpacing");
}

id objc_msgSend__knobAvailableX(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_knobAvailableX");
}

id objc_msgSend__knobHorizontalPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_knobHorizontalPosition");
}

id objc_msgSend__knobMaxX(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_knobMaxX");
}

id objc_msgSend__knobMaxXInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_knobMaxXInset");
}

id objc_msgSend__knobMinX(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_knobMinX");
}

id objc_msgSend__knobMinXInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_knobMinXInset");
}

id objc_msgSend__knobVerticalInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_knobVerticalInset");
}

id objc_msgSend__knobWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_knobWidth");
}

id objc_msgSend__layoutWrappedSubview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutWrappedSubview");
}

id objc_msgSend__leaveMessage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_leaveMessage");
}

id objc_msgSend__lightSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lightSystemFontOfSize:");
}

id objc_msgSend__loadAudioCallViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadAudioCallViewController");
}

id objc_msgSend__loadMultiwayViewControllerForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadMultiwayViewControllerForCall:");
}

id objc_msgSend__loadPTTFullScreenContainerViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadPTTFullScreenContainerViewController");
}

id objc_msgSend__loadSOSViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadSOSViewController");
}

id objc_msgSend__loadUserFeedbackViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadUserFeedbackViewController");
}

id objc_msgSend__makeCalloutVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeCalloutVisible:");
}

id objc_msgSend__makeTrackLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeTrackLabel");
}

id objc_msgSend__obtainThenReleaseTransitionAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_obtainThenReleaseTransitionAssertion");
}

id objc_msgSend__performPosterTransformationsIfNecessaryToState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performPosterTransformationsIfNecessaryToState:");
}

id objc_msgSend__performSetEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performSetEnabled:");
}

id objc_msgSend__performSetSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performSetSelected:");
}

id objc_msgSend__phImageNamed_inBundle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_phImageNamed:inBundle:compatibleWithTraitCollection:");
}

id objc_msgSend__phonePad_appendString_suppressClearingDialedNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_phonePad:appendString:suppressClearingDialedNumber:");
}

id objc_msgSend__pickRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pickRoute:");
}

id objc_msgSend__pickableRoutes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pickableRoutes");
}

id objc_msgSend__pickableRoutesForCategory_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pickableRoutesForCategory:mode:");
}

id objc_msgSend__pickableRoutesUsingAttribute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pickableRoutesUsingAttribute");
}

id objc_msgSend__pickableRoutesUsingBackgroundQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pickableRoutesUsingBackgroundQueue:");
}

id objc_msgSend__pickedRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pickedRoute");
}

id objc_msgSend__playAnnouncementForIncomingCallIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playAnnouncementForIncomingCallIfNecessary");
}

id objc_msgSend__presentAlertForEmergencyCallFailure(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentAlertForEmergencyCallFailure");
}

id objc_msgSend__presentMenuAtLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentMenuAtLocation:");
}

id objc_msgSend__readIODeviceSupportsFindMy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readIODeviceSupportsFindMy");
}

id objc_msgSend__readShouldPowerDownViewShowFindMyAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readShouldPowerDownViewShowFindMyAlert");
}

id objc_msgSend__rebuildAddressArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rebuildAddressArray");
}

id objc_msgSend__referenceBounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_referenceBounds");
}

id objc_msgSend__releaseLock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_releaseLock");
}

id objc_msgSend__reloadQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadQueue");
}

id objc_msgSend__reloadSOSHandles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadSOSHandles");
}

id objc_msgSend__remoteViewControllerDialerOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteViewControllerDialerOffset");
}

id objc_msgSend__remoteViewControllerProxy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteViewControllerProxy");
}

id objc_msgSend__replaceControlsOfType_withControlOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replaceControlsOfType:withControlOfType:");
}

id objc_msgSend__requestMakeCutCopyPasteCalloutVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestMakeCutCopyPasteCalloutVisible:");
}

id objc_msgSend__resetButtonAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetButtonAnimation");
}

id objc_msgSend__rootSheetPresentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rootSheetPresentationController");
}

id objc_msgSend__routeIsAirTunes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_routeIsAirTunes:");
}

id objc_msgSend__routeIsDefault_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_routeIsDefault:");
}

id objc_msgSend__routeIsHandset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_routeIsHandset:");
}

id objc_msgSend__routeIsReceiver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_routeIsReceiver:");
}

id objc_msgSend__routeIsSpeaker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_routeIsSpeaker:");
}

id objc_msgSend__saveGeoCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveGeoCache");
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scaledValueForValue:");
}

id objc_msgSend__scheduleLongTermRebuild(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleLongTermRebuild");
}

id objc_msgSend__scheduleNextGeocode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleNextGeocode");
}

id objc_msgSend__schedulePerformGeocodesTaskWithStartWakeTime_dropDeadDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_schedulePerformGeocodesTaskWithStartWakeTime:dropDeadDelay:");
}

id objc_msgSend__screen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_screen");
}

id objc_msgSend__sendMessageResponse_toCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessageResponse:toCall:");
}

id objc_msgSend__setBackgroundStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBackgroundStyle:");
}

id objc_msgSend__setBlocksConnectionAtResume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBlocksConnectionAtResume:");
}

id objc_msgSend__setBuiltinTransitionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBuiltinTransitionStyle:");
}

id objc_msgSend__setCanEditRecipients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCanEditRecipients:");
}

id objc_msgSend__setCanPanHorizontally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCanPanHorizontally:");
}

id objc_msgSend__setCanPanVertically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCanPanVertically:");
}

id objc_msgSend__setCaptureView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCaptureView:");
}

id objc_msgSend__setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCornerRadius:");
}

id objc_msgSend__setExtremeSizingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setExtremeSizingEnabled:");
}

id objc_msgSend__setGroupName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setGroupName:");
}

id objc_msgSend__setHysteresis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHysteresis:");
}

id objc_msgSend__setImageColor_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setImageColor:forState:");
}

id objc_msgSend__setInteraction_donate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setInteraction:donate:");
}

id objc_msgSend__setMenuProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setMenuProvider:");
}

id objc_msgSend__setShouldScaleDownBehindDescendantSheets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShouldScaleDownBehindDescendantSheets:");
}

id objc_msgSend__setSystemVolumeHUDEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSystemVolumeHUDEnabled:");
}

id objc_msgSend__setupSceneIfNeeded_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupSceneIfNeeded:session:");
}

id objc_msgSend__shouldAnnounceCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldAnnounceCalls");
}

id objc_msgSend__shouldAutoAnswer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldAutoAnswer");
}

id objc_msgSend__shouldPresentAlertUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldPresentAlertUI");
}

id objc_msgSend__shouldReverseLayoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldReverseLayoutDirection");
}

id objc_msgSend__slideCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_slideCompleted:");
}

id objc_msgSend__startMonitoringDisplayLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startMonitoringDisplayLayout");
}

id objc_msgSend__statusLabelStringWillFit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_statusLabelStringWillFit:");
}

id objc_msgSend__statusLabelStringWillFit_attributes_padding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_statusLabelStringWillFit:attributes:padding:");
}

id objc_msgSend__stealViewControllerFromPIP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stealViewControllerFromPIP");
}

id objc_msgSend__stopDeleteTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopDeleteTimer");
}

id objc_msgSend__stopLookupTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopLookupTimer");
}

id objc_msgSend__stretchKnobWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stretchKnobWidth");
}

id objc_msgSend__stretchKnobX(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stretchKnobX");
}

id objc_msgSend__supplementalBottomLeftButtonLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_supplementalBottomLeftButtonLayoutConstraints");
}

id objc_msgSend__supplementalBottomRightButtonLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_supplementalBottomRightButtonLayoutConstraints");
}

id objc_msgSend__systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:withConfiguration:");
}

id objc_msgSend__testing_didTransitionToActiveCallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testing_didTransitionToActiveCallState:");
}

id objc_msgSend__testing_didTransitionToEndingCallState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testing_didTransitionToEndingCallState");
}

id objc_msgSend__testing_didTransitionToIncomingRingingCallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testing_didTransitionToIncomingRingingCallState:");
}

id objc_msgSend__testing_finishedAnimatingIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testing_finishedAnimatingIn");
}

id objc_msgSend__testing_finishedAnimatingToActiveCallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testing_finishedAnimatingToActiveCallState:");
}

id objc_msgSend__testing_viewDidAppear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testing_viewDidAppear");
}

id objc_msgSend__testing_viewWillAppear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testing_viewWillAppear");
}

id objc_msgSend__thinSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_thinSystemFontOfSize:");
}

id objc_msgSend__titleOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_titleOffset");
}

id objc_msgSend__topMargin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_topMargin");
}

id objc_msgSend__trackFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trackFrame");
}

id objc_msgSend__transitionFromViewController_toViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionFromViewController:toViewController:");
}

id objc_msgSend__transitionFromViewController_toViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionFromViewController:toViewController:completion:");
}

id objc_msgSend__unformattedPickableRoutesForAudioSessionCategory_usingBackgroundQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unformattedPickableRoutesForAudioSessionCategory:usingBackgroundQueue:");
}

id objc_msgSend__unscheduleLongTermRebuild(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unscheduleLongTermRebuild");
}

id objc_msgSend__unschedulePerformGeocodesWakeTaskIfEarlierThan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unschedulePerformGeocodesWakeTaskIfEarlierThan:");
}

id objc_msgSend__updateAudioInterruptionsForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAudioInterruptionsForCall:");
}

id objc_msgSend__updateBadgeViewForLocalizedSenderIdentityTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBadgeViewForLocalizedSenderIdentityTitle:");
}

id objc_msgSend__updateCachedOrientationValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCachedOrientationValues");
}

id objc_msgSend__updateCallButtonEnabledState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCallButtonEnabledState:");
}

id objc_msgSend__updateCallButtonEnabledState_updateNameNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCallButtonEnabledState:updateNameNow:");
}

id objc_msgSend__updateCallGroups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCallGroups");
}

id objc_msgSend__updateEmergencyLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateEmergencyLabel");
}

id objc_msgSend__updateName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateName");
}

id objc_msgSend__updatePosterNameAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePosterNameAlpha");
}

id objc_msgSend__updatePosterStatusLabelForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePosterStatusLabelForState:");
}

id objc_msgSend__updatePowerOffSliderExclusionPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePowerOffSliderExclusionPath");
}

id objc_msgSend__updateStatusLabelVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStatusLabelVisibility");
}

id objc_msgSend__userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_userInterfaceIdiom");
}

id objc_msgSend__verticalSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_verticalSpacing");
}

id objc_msgSend__willAppearInRemoteViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_willAppearInRemoteViewController:");
}

id objc_msgSend__yOffsetForAddContactButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_yOffsetForAddContactButton");
}

id objc_msgSend__yOffsetForKeypadView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_yOffsetForKeypadView");
}

id objc_msgSend__yOffsetForLoweredButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_yOffsetForLoweredButtons");
}

id objc_msgSend_abUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "abUID");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteString");
}

id objc_msgSend_acceptButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptButton");
}

id objc_msgSend_accessibilityIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityIdentifier");
}

id objc_msgSend_accidentalCallNotificationBody(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accidentalCallNotificationBody");
}

id objc_msgSend_accidentalCallNotificationTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accidentalCallNotificationTitle");
}

id objc_msgSend_accountManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountManager");
}

id objc_msgSend_accountUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountUUID");
}

id objc_msgSend_accounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accounts");
}

id objc_msgSend_accountsForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountsForService:");
}

id objc_msgSend_acquire(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquire");
}

id objc_msgSend_acquireAssertionWithActivation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireAssertionWithActivation:");
}

id objc_msgSend_acquireLongPreventSuspensionAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireLongPreventSuspensionAssertion");
}

id objc_msgSend_acquirePreventSuspensionAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquirePreventSuspensionAssertion");
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "action");
}

id objc_msgSend_actionSlider_didUpdateSlideWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionSlider:didUpdateSlideWithValue:");
}

id objc_msgSend_actionSliderDidBeginSlide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionSliderDidBeginSlide:");
}

id objc_msgSend_actionSliderDidCancelSlide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionSliderDidCancelSlide:");
}

id objc_msgSend_actionSliderDidCompleteSlide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionSliderDidCompleteSlide:");
}

id objc_msgSend_actionType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionType");
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:image:identifier:handler:");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_actions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actions");
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activate");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activateProviderInBackgroundForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateProviderInBackgroundForCall:");
}

id objc_msgSend_activateProviderInBackgroundWithBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateProviderInBackgroundWithBundleID:");
}

id objc_msgSend_activateSceneSessionForRequest_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateSceneSessionForRequest:errorHandler:");
}

id objc_msgSend_activateSpringBoardRemoteAlertForSOSCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateSpringBoardRemoteAlertForSOSCall");
}

id objc_msgSend_activateVoicemailAudioSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateVoicemailAudioSession");
}

id objc_msgSend_activationContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activationContext");
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activationState");
}

id objc_msgSend_activeCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeCall");
}

id objc_msgSend_activeConversationForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeConversationForCall:");
}

id objc_msgSend_activeConversationWithRemoteMembers_andLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeConversationWithRemoteMembers:andLink:");
}

id objc_msgSend_activeConversations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeConversations");
}

id objc_msgSend_activeInterfaceMechanismIsHardware(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeInterfaceMechanismIsHardware");
}

id objc_msgSend_activeInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeInterfaceOrientation");
}

id objc_msgSend_activePhoneCallExists(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activePhoneCallExists");
}

id objc_msgSend_activeRemoteParticipants(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeRemoteParticipants");
}

id objc_msgSend_activeServices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeServices");
}

id objc_msgSend_activeUsagePeriodLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeUsagePeriodLength");
}

id objc_msgSend_activeVideoCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeVideoCall");
}

id objc_msgSend_activity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activity");
}

id objc_msgSend_activityIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityIdentifier");
}

id objc_msgSend_activityIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityIndicator");
}

id objc_msgSend_activityIndicatorViewStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityIndicatorViewStyle");
}

id objc_msgSend_activitySessions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySessions");
}

id objc_msgSend_activityState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityState");
}

id objc_msgSend_activityStateForParticipantAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityStateForParticipantAtIndex:inParticipantsView:");
}

id objc_msgSend_activityType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityType");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArrangedSubview:");
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttribute:value:range:");
}

id objc_msgSend_addBottomBarSubView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBottomBarSubView");
}

id objc_msgSend_addCallParticipantsSubView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCallParticipantsSubView");
}

id objc_msgSend_addCallerNameView_toContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCallerNameView:toContainerView:");
}

id objc_msgSend_addCallerNameView_toViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCallerNameView:toViewController:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCompletion:");
}

id objc_msgSend_addConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraint:");
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraints:");
}

id objc_msgSend_addConstraintsForNewCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraintsForNewCell:");
}

id objc_msgSend_addContactButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContactButton");
}

id objc_msgSend_addContactButtonTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContactButtonTopConstraint");
}

id objc_msgSend_addContactButtonTopConstraintConstant(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContactButtonTopConstraintConstant");
}

id objc_msgSend_addDefaultBackgroundGradientView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDefaultBackgroundGradientView");
}

id objc_msgSend_addDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:");
}

id objc_msgSend_addDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:queue:");
}

id objc_msgSend_addDismissalAssertionReleasedObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDismissalAssertionReleasedObserver");
}

id objc_msgSend_addEnhancedEmergencyIntermittentStateLabelWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEnhancedEmergencyIntermittentStateLabelWithState:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIndex:");
}

id objc_msgSend_addKeyCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addKeyCommand:");
}

id objc_msgSend_addKeyframeWithRelativeStartTime_relativeDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addKeyframeWithRelativeStartTime:relativeDuration:animations:");
}

id objc_msgSend_addLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLayoutGuide:");
}

id objc_msgSend_addListenerID_capabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addListenerID:capabilities:");
}

id objc_msgSend_addListenerID_forService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addListenerID:forService:");
}

id objc_msgSend_addNotificationObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNotificationObservers");
}

id objc_msgSend_addNotificationRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNotificationRequest:withCompletionHandler:");
}

id objc_msgSend_addNumberFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNumberFontSize");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObservers");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addPosterBlurToPosterVC_nameLabelWrapper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPosterBlurToPosterVC:nameLabelWrapper:");
}

id objc_msgSend_addPrimaryPhoneCall_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPrimaryPhoneCall:animated:");
}

id objc_msgSend_addRelationForLeftOfCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRelationForLeftOfCell:");
}

id objc_msgSend_addRelationForRightOfCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRelationForRightOfCell:");
}

id objc_msgSend_addRelationForWidthOfCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRelationForWidthOfCell:");
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSublayer:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addTarget_action_forEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forEvents:");
}

id objc_msgSend_addToRunLoop_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addToRunLoop:forMode:");
}

id objc_msgSend_addUserNotification_listener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUserNotification:listener:");
}

id objc_msgSend_addUserNotification_listener_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUserNotification:listener:completionHandler:");
}

id objc_msgSend_addWiFiAutoAssociationClientToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addWiFiAutoAssociationClientToken:");
}

id objc_msgSend_addressBookIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addressBookIdentifier");
}

id objc_msgSend_adjustImageColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustImageColors");
}

id objc_msgSend_airplaneMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airplaneMode");
}

id objc_msgSend_alarmWithAbsoluteDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alarmWithAbsoluteDate:");
}

id objc_msgSend_alarmWithRelativeOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alarmWithRelativeOffset:");
}

id objc_msgSend_alert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alert");
}

id objc_msgSend_alertActivationAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertActivationAssertion");
}

id objc_msgSend_alertActivationCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertActivationCall");
}

id objc_msgSend_alertActivationReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertActivationReason");
}

id objc_msgSend_alertCompletion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertCompletion");
}

id objc_msgSend_alertConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertConfiguration");
}

id objc_msgSend_alertController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertController");
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_alertControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllers");
}

id objc_msgSend_alertCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertCoordinator");
}

id objc_msgSend_alertCountDownTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertCountDownTimer");
}

id objc_msgSend_alertFeedbackGenerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertFeedbackGenerator");
}

id objc_msgSend_alertRestingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertRestingView");
}

id objc_msgSend_alertTriggeredByAutoCountdown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertTriggeredByAutoCountdown");
}

id objc_msgSend_alertWithCallProvider_dialType_senderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertWithCallProvider:dialType:senderIdentityUUID:");
}

id objc_msgSend_alertWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertWithConfiguration:");
}

id objc_msgSend_alertWithDialRequest_dialAction_title_buttonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertWithDialRequest:dialAction:title:buttonTitle:");
}

id objc_msgSend_alignment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alignment");
}

id objc_msgSend_alignmentForKeyPadButtonType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alignmentForKeyPadButtonType:");
}

id objc_msgSend_allCallsPassTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allCallsPassTest:");
}

id objc_msgSend_allChildViewControllersOfViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allChildViewControllersOfViewController:");
}

id objc_msgSend_allConferenceParticipantCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allConferenceParticipantCalls");
}

id objc_msgSend_allInCallScenes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allInCallScenes");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeys");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allSubviewsAndChildViewControllersForRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allSubviewsAndChildViewControllersForRootViewController:");
}

id objc_msgSend_allSubviewsOfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allSubviewsOfView:");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allValues");
}

id objc_msgSend_allowHomeOutDismissal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowHomeOutDismissal");
}

id objc_msgSend_allowsBanners(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsBanners");
}

id objc_msgSend_allowsFieldModeSendButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsFieldModeSendButton");
}

id objc_msgSend_allowsMenuButtonDismissal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsMenuButtonDismissal");
}

id objc_msgSend_allowsOrientationChangeEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsOrientationChangeEvents");
}

id objc_msgSend_allowsOtherAlertsToStackOnTop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsOtherAlertsToStackOnTop");
}

id objc_msgSend_allowsVideo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsVideo");
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alpha");
}

id objc_msgSend_alreadyVisitedRestingScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alreadyVisitedRestingScreen");
}

id objc_msgSend_alwaysOnDisplayDimmingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alwaysOnDisplayDimmingView");
}

id objc_msgSend_alwaysOnDisplayPosterNameViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alwaysOnDisplayPosterNameViewModel");
}

id objc_msgSend_ambientActivityController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientActivityController");
}

id objc_msgSend_ambientAnimateFromIncomingCallStateToCallScreeningStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientAnimateFromIncomingCallStateToCallScreeningStateWithCompletion:");
}

id objc_msgSend_ambientAudioRoutesButtonSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientAudioRoutesButtonSize");
}

id objc_msgSend_ambientAudioRoutesControlView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientAudioRoutesControlView");
}

id objc_msgSend_ambientAudioRoutesInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientAudioRoutesInset");
}

id objc_msgSend_ambientAudioRoutesSymbolInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientAudioRoutesSymbolInset");
}

id objc_msgSend_ambientButtonType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientButtonType");
}

id objc_msgSend_ambientHorizontalPadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientHorizontalPadding");
}

id objc_msgSend_ambientHorizontalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientHorizontalSizeClass");
}

id objc_msgSend_ambientInCallControlSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientInCallControlSize");
}

id objc_msgSend_ambientInCallControlSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientInCallControlSpacing");
}

id objc_msgSend_ambientLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientLayout");
}

id objc_msgSend_ambientParticipantsViewConstraintsForView_largeAvatar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientParticipantsViewConstraintsForView:largeAvatar:");
}

id objc_msgSend_ambientScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientScene");
}

id objc_msgSend_ambientSetIdleTimerDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientSetIdleTimerDisabled:");
}

id objc_msgSend_ambientVerticalPadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientVerticalPadding");
}

id objc_msgSend_ambientVerticalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientVerticalSizeClass");
}

id objc_msgSend_ambientWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ambientWidth");
}

id objc_msgSend_analyticsReporter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsReporter");
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_animateFromFaceTimeOutgoingStateToFaceTimeInCallState_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateFromFaceTimeOutgoingStateToFaceTimeInCallState:withCompletion:");
}

id objc_msgSend_animateFromIncomingCallStateToFaceTimeInCallState_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateFromIncomingCallStateToFaceTimeInCallState:withCompletion:");
}

id objc_msgSend_animateFromIncomingCallStateToInCallState_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateFromIncomingCallStateToInCallState:withCompletion:");
}

id objc_msgSend_animateFromOutgoingStateToCallbackAndMessageUIToState_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateFromOutgoingStateToCallbackAndMessageUIToState:withCompletion:");
}

id objc_msgSend_animateFromOutgoingStateToInCallStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateFromOutgoingStateToInCallStateWithCompletion:");
}

id objc_msgSend_animateFromState_toState_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateFromState:toState:completion:");
}

id objc_msgSend_animateInSupplementalBottomRightButton_WithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateInSupplementalBottomRightButton:WithCompletion:");
}

id objc_msgSend_animateInfoButtonCoinFlipIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateInfoButtonCoinFlipIfNeeded");
}

id objc_msgSend_animateKeyframesWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateKeyframesWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animateLayoutOfViewWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateLayoutOfViewWithCompletionBlock:");
}

id objc_msgSend_animateOutIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateOutIfNecessary");
}

id objc_msgSend_animateOutSupplementalBottomLeftButtonToState_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateOutSupplementalBottomLeftButtonToState:withCompletion:");
}

id objc_msgSend_animateToFirstLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateToFirstLabel");
}

id objc_msgSend_animateToNextLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateToNextLabel");
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:");
}

id objc_msgSend_animatedSliderTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatedSliderTopConstraint");
}

id objc_msgSend_animatedSliderTopConstraintConstant(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatedSliderTopConstraintConstant");
}

id objc_msgSend_animatedSlidingButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatedSlidingButton");
}

id objc_msgSend_animatedSlidingButtonCompletionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatedSlidingButtonCompletionBlock");
}

id objc_msgSend_animating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animating");
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animation");
}

id objc_msgSend_animationForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationForKey:");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_announceCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceCalls");
}

id objc_msgSend_announceProviderIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceProviderIdentifier");
}

id objc_msgSend_announcementDidContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announcementDidContinue:");
}

id objc_msgSend_announcementDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announcementDidFinish:");
}

id objc_msgSend_announcementDidPause_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announcementDidPause:");
}

id objc_msgSend_announcementDidStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announcementDidStart:");
}

id objc_msgSend_announcementWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announcementWithCall:");
}

id objc_msgSend_answerCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerCall:");
}

id objc_msgSend_answerIncomingCallWithBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerIncomingCallWithBehavior:");
}

id objc_msgSend_answerIncomingConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerIncomingConversation:");
}

id objc_msgSend_answerRequestForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerRequestForCall:");
}

id objc_msgSend_answerRequestSourceIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerRequestSourceIdentifier");
}

id objc_msgSend_answerWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerWithRequest:");
}

id objc_msgSend_answeringMachine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answeringMachine");
}

id objc_msgSend_anyCallPassesTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyCallPassesTest:");
}

id objc_msgSend_anyLabelDescriptorIsDynamic(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyLabelDescriptorIsDynamic");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyObject");
}

id objc_msgSend_appIconHeightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIconHeightConstraint");
}

id objc_msgSend_appIconLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIconLayoutGuide");
}

id objc_msgSend_appIconLayoutGuideHorizontalAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIconLayoutGuideHorizontalAnchor");
}

id objc_msgSend_appIconViewLeadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIconViewLeadingAnchor");
}

id objc_msgSend_appIconWidthConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIconWidthConstraint");
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendAttributedString:");
}

id objc_msgSend_appendBezierPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBezierPath:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendPath:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appleAccountRebrandEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appleAccountRebrandEnabled");
}

id objc_msgSend_application_openJoinConversationRequestForConversationLink_webpageURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "application:openJoinConversationRequestForConversationLink:webpageURL:");
}

id objc_msgSend_applicationProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationProxyForIdentifier:");
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationState");
}

id objc_msgSend_applicationsForUserActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationsForUserActivityType:");
}

id objc_msgSend_applyCallDetailsViewButtonPositionAndSizeCapToElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyCallDetailsViewButtonPositionAndSizeCapToElement:");
}

id objc_msgSend_applyCallWaitingConstraintsForAmbient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyCallWaitingConstraintsForAmbient");
}

id objc_msgSend_applyHorizontalPositioningConstraintWithFraction_forButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyHorizontalPositioningConstraintWithFraction:forButton:");
}

id objc_msgSend_applyHorizontalPositioningConstraintWithFraction_forDividerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyHorizontalPositioningConstraintWithFraction:forDividerView:");
}

id objc_msgSend_applyLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyLayoutConstraints");
}

id objc_msgSend_applyParticipantsViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyParticipantsViewConstraints");
}

id objc_msgSend_applySizeToElement_usingThisElementAsGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applySizeToElement:usingThisElementAsGuide:");
}

id objc_msgSend_applyTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyTransform:");
}

id objc_msgSend_applyWallpaperTitleStyleAttributesToTextViewWrapper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyWallpaperTitleStyleAttributesToTextViewWrapper:");
}

id objc_msgSend_appropriateCallerNameViewForContact_callStatus_callIsActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appropriateCallerNameViewForContact:callStatus:callIsActive:");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_areAuxiliaryRoutesAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areAuxiliaryRoutesAvailable");
}

id objc_msgSend_areLocationsAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areLocationsAllowed");
}

id objc_msgSend_areLocationsAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areLocationsAvailable");
}

id objc_msgSend_areNonRelayAuxiliaryRoutesAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areNonRelayAuxiliaryRoutesAvailable");
}

id objc_msgSend_arrangedSubviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrangedSubviews");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayByExcludingObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByExcludingObjectsInArray:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_assertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assertion");
}

id objc_msgSend_assignControlType_toButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assignControlType:toButton:");
}

id objc_msgSend_associatedCallGroupForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "associatedCallGroupForCall:");
}

id objc_msgSend_association(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "association");
}

id objc_msgSend_attemptGeocodeWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptGeocodeWithCompletionBlock:");
}

id objc_msgSend_attemptToDialEmergencyCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptToDialEmergencyCall");
}

id objc_msgSend_attemptToPlayKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptToPlayKey:");
}

id objc_msgSend_attributeForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeForKey:");
}

id objc_msgSend_attributedStringForName_label_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedStringForName:label:");
}

id objc_msgSend_attributedStringToHighlightText_primaryColour_secondaryColour_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedStringToHighlightText:primaryColour:secondaryColour:");
}

id objc_msgSend_attributedStringToHighlightText_primaryColour_secondaryColour_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedStringToHighlightText:primaryColour:secondaryColour:style:");
}

id objc_msgSend_attributedStringWithAttachment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedStringWithAttachment:");
}

id objc_msgSend_audioCallControlTypeDependsUponImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlTypeDependsUponImage:");
}

id objc_msgSend_audioCallControlsViewControllerDidTapEndButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerDidTapEndButton:");
}

id objc_msgSend_audioCallControlsViewControllerDidTapRTTButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerDidTapRTTButton");
}

id objc_msgSend_audioCallControlsViewControllerDidTapVideoStreamingButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerDidTapVideoStreamingButton");
}

id objc_msgSend_audioCallControlsViewControllerDidToggleMuteButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerDidToggleMuteButton:");
}

id objc_msgSend_audioCallControlsViewControllerRequestedAddCallPresentation_forView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerRequestedAddCallPresentation:forView:");
}

id objc_msgSend_audioCallControlsViewControllerRequestedAudioRoutesPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerRequestedAudioRoutesPresentation:");
}

id objc_msgSend_audioCallControlsViewControllerRequestedContactsPresentation_forView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerRequestedContactsPresentation:forView:");
}

id objc_msgSend_audioCallControlsViewControllerRequestedInvokeAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerRequestedInvokeAlert");
}

id objc_msgSend_audioCallControlsViewControllerRequestedKeypadPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerRequestedKeypadPresentation:");
}

id objc_msgSend_audioCallControlsViewControllerRequestedKeypadPresentationForFieldMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerRequestedKeypadPresentationForFieldMode:");
}

id objc_msgSend_audioCallControlsViewControllerRequestedPunchOutPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerRequestedPunchOutPresentation:");
}

id objc_msgSend_audioCallControlsViewControllerRequestedShareCardFromSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerRequestedShareCardFromSourceView:");
}

id objc_msgSend_audioCallControlsViewControllerRequestedShareMedia(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerRequestedShareMedia");
}

id objc_msgSend_audioCallControlsViewControllerRequestedVideoPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallControlsViewControllerRequestedVideoPresentation:");
}

id objc_msgSend_audioCallMutedTalkerIsSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallMutedTalkerIsSupported");
}

id objc_msgSend_audioCallNavController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallNavController");
}

id objc_msgSend_audioCallNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallNavigationController");
}

id objc_msgSend_audioCallUIModernizationEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallUIModernizationEnabled");
}

id objc_msgSend_audioCallViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallViewController");
}

id objc_msgSend_audioCallViewControllerIfLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallViewControllerIfLoaded");
}

id objc_msgSend_audioCallViewControllerWrapper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallViewControllerWrapper");
}

id objc_msgSend_audioCallVoiceLoopViewControllerRequestedButtonPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCallVoiceLoopViewControllerRequestedButtonPresentation");
}

id objc_msgSend_audioCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioCategory");
}

id objc_msgSend_audioControlsShouldPresentAlertButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioControlsShouldPresentAlertButton");
}

id objc_msgSend_audioDeviceController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioDeviceController");
}

id objc_msgSend_audioMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioMode");
}

id objc_msgSend_audioOrVideoCallWithStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioOrVideoCallWithStatus:");
}

id objc_msgSend_audioRouteButtonImageColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteButtonImageColor");
}

id objc_msgSend_audioRouteGlyph(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteGlyph");
}

id objc_msgSend_audioRouteGlyphForDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteGlyphForDisplayStyle:");
}

id objc_msgSend_audioRouteGlyphForRoutePicker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteGlyphForRoutePicker");
}

id objc_msgSend_audioRouteGlyphForRoutePickerWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteGlyphForRoutePickerWithColor:");
}

id objc_msgSend_audioRouteGlyphImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteGlyphImage");
}

id objc_msgSend_audioRouteImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteImageWithColor:");
}

id objc_msgSend_audioRouteIsHandsfree_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteIsHandsfree:");
}

id objc_msgSend_audioRouteMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteMenu");
}

id objc_msgSend_audioRouteVibrancyView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteVibrancyView");
}

id objc_msgSend_audioRoutingMenuController_didSelectLagunaActionForHandle_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRoutingMenuController:didSelectLagunaActionForHandle:conversation:");
}

id objc_msgSend_audioRoutingMenuController_didSelectRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRoutingMenuController:didSelectRoute:");
}

id objc_msgSend_audioRoutingMenuController_didToggleMute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRoutingMenuController:didToggleMute:");
}

id objc_msgSend_audioSessionIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioSessionIdentifier");
}

id objc_msgSend_audioSessionIdentifierForSessionDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioSessionIdentifierForSessionDescriptors:");
}

id objc_msgSend_audioSourceIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioSourceIdentifier");
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auditToken");
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationStatus");
}

id objc_msgSend_authorizationStatusForBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationStatusForBundle:");
}

id objc_msgSend_autoPunchOutBehaviorRequiredForCurrentCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoPunchOutBehaviorRequiredForCurrentCalls");
}

id objc_msgSend_autocompleteSuggestionForContact_phoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autocompleteSuggestionForContact:phoneNumber:");
}

id objc_msgSend_automaticallyInvokedKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "automaticallyInvokedKey");
}

id objc_msgSend_autoresizingMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoresizingMask");
}

id objc_msgSend_avCaptureDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avCaptureDevice");
}

id objc_msgSend_avCaptureDispatchQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avCaptureDispatchQueue");
}

id objc_msgSend_avLessConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avLessConversation");
}

id objc_msgSend_avLessSharePlayEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avLessSharePlayEnabled");
}

id objc_msgSend_avMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avMode");
}

id objc_msgSend_avSystemControllerQueryQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avSystemControllerQueryQueue");
}

id objc_msgSend_avUpgradedCallUUIDForDismissedScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avUpgradedCallUUIDForDismissedScene");
}

id objc_msgSend_availabilityForListenerID_forService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availabilityForListenerID:forService:");
}

id objc_msgSend_avatar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avatar");
}

id objc_msgSend_avatarContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avatarContentView");
}

id objc_msgSend_avatarView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avatarView");
}

id objc_msgSend_avatarViewAnimationTypeForEffectiveState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avatarViewAnimationTypeForEffectiveState");
}

id objc_msgSend_avatarViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avatarViewConstraints");
}

id objc_msgSend_avatarViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avatarViewController");
}

id objc_msgSend_backButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backButton");
}

id objc_msgSend_backDropVisualEffectView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backDropVisualEffectView");
}

id objc_msgSend_backdropEffectView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backdropEffectView");
}

id objc_msgSend_backdropView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backdropView");
}

id objc_msgSend_backgroundActivities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundActivities");
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColor");
}

id objc_msgSend_backgroundColorAnimationFromColor_toColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColorAnimationFromColor:toColor:");
}

id objc_msgSend_backgroundColorDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColorDescription");
}

id objc_msgSend_backgroundColorsPreferWhiteForegroundText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColorsPreferWhiteForegroundText:");
}

id objc_msgSend_backgroundImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundImageView");
}

id objc_msgSend_backgroundMaterial(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundMaterial");
}

id objc_msgSend_backgroundPIPAuthorizationForSceneType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundPIPAuthorizationForSceneType");
}

id objc_msgSend_backgroundStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundStyle");
}

id objc_msgSend_backgroundStyleDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundStyleDelegate");
}

id objc_msgSend_badgeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeView");
}

id objc_msgSend_badgeViewHiddenLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeViewHiddenLayoutConstraints");
}

id objc_msgSend_badgeViewVisibleLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeViewVisibleLayoutConstraints");
}

id objc_msgSend_bannerButtonsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerButtonsView");
}

id objc_msgSend_bannerButtonsView_didPerformActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerButtonsView:didPerformActionType:");
}

id objc_msgSend_bannerDidDisconnect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerDidDisconnect");
}

id objc_msgSend_bannerDismissedBySpringBoard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerDismissedBySpringBoard");
}

id objc_msgSend_bannerPresentationManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerPresentationManager");
}

id objc_msgSend_bannerPresentationRequestTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerPresentationRequestTimer");
}

id objc_msgSend_bannerTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerTapGestureRecognizer");
}

id objc_msgSend_bargeCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bargeCalls");
}

id objc_msgSend_baselineOffsetFromBottomWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baselineOffsetFromBottomWithSize:");
}

id objc_msgSend_beaconManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beaconManager");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeFirstResponder");
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "begin");
}

id objc_msgSend_beginBackgroundTaskWithExpirationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginBackgroundTaskWithExpirationHandler:");
}

id objc_msgSend_beginExtensionRequestWithOptions_inputItems_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginExtensionRequestWithOptions:inputItems:completion:");
}

id objc_msgSend_beginningOfDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginningOfDocument");
}

id objc_msgSend_bestGuessPickableRoutesForAnyCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestGuessPickableRoutesForAnyCall");
}

id objc_msgSend_bestSenderIdentityForContact_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestSenderIdentityForContact:error:");
}

id objc_msgSend_bestSenderIdentityForHandle_contactStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestSenderIdentityForHandle:contactStore:error:");
}

id objc_msgSend_bezierPathWithOvalInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithOvalInRect:");
}

id objc_msgSend_bezierPathWithRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRect:");
}

id objc_msgSend_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:");
}

id objc_msgSend_bezierPathWithRoundedRect_cornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRoundedRect:cornerRadius:");
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blackColor");
}

id objc_msgSend_blockWithHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockWithHandle:");
}

id objc_msgSend_blueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blueColor");
}

id objc_msgSend_bluetoothAudioRouteGlyphForDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothAudioRouteGlyphForDisplayStyle:");
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldSystemFontOfSize:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:defaultValue:");
}

id objc_msgSend_BOOLOverrideForDefaultsKey_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLOverrideForDefaultsKey:defaultValue:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_bottomBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBar");
}

id objc_msgSend_bottomBarActionPerformed_withCompletionState_fromBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBarActionPerformed:withCompletionState:fromBar:");
}

id objc_msgSend_bottomBarBottomConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBarBottomConstraint");
}

id objc_msgSend_bottomBarBottomConstraintToUse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBarBottomConstraintToUse");
}

id objc_msgSend_bottomBarCallState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBarCallState");
}

id objc_msgSend_bottomBarCallStateInBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBarCallStateInBar:");
}

id objc_msgSend_bottomBarGlyphWithSymbolType_sizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBarGlyphWithSymbolType:sizeCategory:");
}

id objc_msgSend_bottomBarImageWithName_color_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBarImageWithName:color:");
}

id objc_msgSend_bottomBarStateForCallWaitingCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBarStateForCallWaitingCall");
}

id objc_msgSend_bottomControlsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomControlsView");
}

id objc_msgSend_bottomMargin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomMargin");
}

id objc_msgSend_bottomMultipleCallLabelView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomMultipleCallLabelView");
}

id objc_msgSend_bottomToCancelBaselineOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomToCancelBaselineOffset");
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:attributes:context:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bringSubviewToFront:");
}

id objc_msgSend_bufferSingleCallLabelView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bufferSingleCallLabelView");
}

id objc_msgSend_buildTTRMessageBubbleRecipientsListWithGroupMessageUUID_with_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildTTRMessageBubbleRecipientsListWithGroupMessageUUID:with:");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_bundleIdentifierForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifierForCall:");
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleURL");
}

id objc_msgSend_bundleWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithPath:");
}

id objc_msgSend_businessLogoCornerRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "businessLogoCornerRadius");
}

id objc_msgSend_businessLogoEdge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "businessLogoEdge");
}

id objc_msgSend_businessLogoHeightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "businessLogoHeightConstraint");
}

id objc_msgSend_businessLogoLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "businessLogoLayoutGuide");
}

id objc_msgSend_businessLogoLayoutGuideHorizontalAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "businessLogoLayoutGuideHorizontalAnchor");
}

id objc_msgSend_businessLogoMarginH(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "businessLogoMarginH");
}

id objc_msgSend_businessLogoView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "businessLogoView");
}

id objc_msgSend_businessLogoViewLeadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "businessLogoViewLeadingAnchor");
}

id objc_msgSend_businessLogoWidthConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "businessLogoWidthConstraint");
}

id objc_msgSend_button(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "button");
}

id objc_msgSend_buttonColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonColor");
}

id objc_msgSend_buttonConfigurationWithActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonConfigurationWithActionType:");
}

id objc_msgSend_buttonDistributionScalingFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonDistributionScalingFactor");
}

id objc_msgSend_buttonDividerViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonDividerViews");
}

id objc_msgSend_buttonEventType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonEventType");
}

id objc_msgSend_buttonForButtonType_createIfNecessary_createWithHorizontalPositionFraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonForButtonType:createIfNecessary:createWithHorizontalPositionFraction:");
}

id objc_msgSend_buttonForControlType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonForControlType:");
}

id objc_msgSend_buttonLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonLabel");
}

id objc_msgSend_buttonLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonLayoutConstraints");
}

id objc_msgSend_buttonUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonUpdates");
}

id objc_msgSend_buttonWithActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithActionType:");
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_buttonWithType_primaryAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:primaryAction:");
}

id objc_msgSend_buttons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttons");
}

id objc_msgSend_buttonsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonsArray");
}

id objc_msgSend_buttonsDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonsDictionary");
}

id objc_msgSend_buttonsEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonsEnabled");
}

id objc_msgSend_buttonsForAmbientTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonsForAmbientTransition");
}

id objc_msgSend_buttonsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonsView");
}

id objc_msgSend_buttonsViewBottomConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonsViewBottomConstraint");
}

id objc_msgSend_buttonsViewBottomConstraintToUse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonsViewBottomConstraintToUse");
}

id objc_msgSend_buttonsViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonsViewController");
}

id objc_msgSend_cachedBannerParticipantLabelWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedBannerParticipantLabelWidth");
}

id objc_msgSend_cachedTrackMaskWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedTrackMaskWidth");
}

id objc_msgSend_calendar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calendar");
}

id objc_msgSend_call(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "call");
}

id objc_msgSend_callAnalyticsLogger(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callAnalyticsLogger");
}

id objc_msgSend_callAnnouncement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callAnnouncement");
}

id objc_msgSend_callAutoDialled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callAutoDialled");
}

id objc_msgSend_callBufferTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callBufferTimer");
}

id objc_msgSend_callButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callButton");
}

id objc_msgSend_callButtonDiameter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callButtonDiameter");
}

id objc_msgSend_callButtonKeypadOffsetConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callButtonKeypadOffsetConstraint");
}

id objc_msgSend_callCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callCenter");
}

id objc_msgSend_callConnectTimeSinceSessionStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callConnectTimeSinceSessionStart");
}

id objc_msgSend_callConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callConnected:");
}

id objc_msgSend_callContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callContainer");
}

id objc_msgSend_callDestinationID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDestinationID");
}

id objc_msgSend_callDetailsButtonMaxSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDetailsButtonMaxSize");
}

id objc_msgSend_callDetailsButtonPaddingTop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDetailsButtonPaddingTop");
}

id objc_msgSend_callDetailsButtonPaddingTop_PERCENT(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDetailsButtonPaddingTop_PERCENT");
}

id objc_msgSend_callDetailsButtonPaddingTrailing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDetailsButtonPaddingTrailing");
}

id objc_msgSend_callDetailsButtonPaddingTrailing_PERCENT(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDetailsButtonPaddingTrailing_PERCENT");
}

id objc_msgSend_callDetailsCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDetailsCoordinator");
}

id objc_msgSend_callDetailsGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDetailsGestureRecognizer");
}

id objc_msgSend_callDetailsNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDetailsNavigationController");
}

id objc_msgSend_callDetailsViewButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDetailsViewButton");
}

id objc_msgSend_callDialStartTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDialStartTime");
}

id objc_msgSend_callDirectoryIdentityType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDirectoryIdentityType");
}

id objc_msgSend_callDirectoryName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDirectoryName");
}

id objc_msgSend_callDisconnectReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDisconnectReason");
}

id objc_msgSend_callDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDisplayName");
}

id objc_msgSend_callDisplayStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDisplayStyle");
}

id objc_msgSend_callDisplayStyleDidChangeFromStyle_toStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDisplayStyleDidChangeFromStyle:toStyle:");
}

id objc_msgSend_callDisplayStyleForScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDisplayStyleForScene:");
}

id objc_msgSend_callDisplayStyleManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDisplayStyleManager");
}

id objc_msgSend_callDisplayStyleToRequestForCurrentState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDisplayStyleToRequestForCurrentState");
}

id objc_msgSend_callDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDuration");
}

id objc_msgSend_callDurationString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDurationString");
}

id objc_msgSend_callDurationTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDurationTimer");
}

id objc_msgSend_callDurationTimerForParticipantsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDurationTimerForParticipantsView");
}

id objc_msgSend_callEndStewieControllerWithDialRequest_dialAction_title_buttonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callEndStewieControllerWithDialRequest:dialAction:title:buttonTitle:");
}

id objc_msgSend_callFilterController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callFilterController");
}

id objc_msgSend_callForBackgroundImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForBackgroundImage");
}

id objc_msgSend_callForHardPauseState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForHardPauseState");
}

id objc_msgSend_callForParticipantAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForParticipantAtIndex:inParticipantsView:");
}

id objc_msgSend_callForPickableRoutes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForPickableRoutes");
}

id objc_msgSend_callForPickableRoutesUsingBackgroundQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForPickableRoutesUsingBackgroundQueue:");
}

id objc_msgSend_callForVideoCallBasedViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForVideoCallBasedViewController:");
}

id objc_msgSend_callGroupUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callGroupUUID");
}

id objc_msgSend_callGroups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callGroups");
}

id objc_msgSend_callHasContactPosterWithHorizontalName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callHasContactPosterWithHorizontalName");
}

id objc_msgSend_callHasContactPosterWithVerticalName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callHasContactPosterWithVerticalName");
}

id objc_msgSend_callHasNoContactPoster(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callHasNoContactPoster");
}

id objc_msgSend_callISOCountryCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callISOCountryCode");
}

id objc_msgSend_callIsAboutToEndForStewie(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callIsAboutToEndForStewie");
}

id objc_msgSend_callIsActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callIsActive");
}

id objc_msgSend_callLabelDetailsGestureRecognizerTappedForLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callLabelDetailsGestureRecognizerTappedForLabel:");
}

id objc_msgSend_callLabelInfoLabelWasTappedForLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callLabelInfoLabelWasTappedForLabel:");
}

id objc_msgSend_callManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callManager");
}

id objc_msgSend_callManagerEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callManagerEnabled");
}

id objc_msgSend_callMatchingConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callMatchingConversationRequest:");
}

id objc_msgSend_callParticipantLabelsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callParticipantLabelsView");
}

id objc_msgSend_callParticipantsViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callParticipantsViewController");
}

id objc_msgSend_callParticipantsViewController_didPerformActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callParticipantsViewController:didPerformActionType:");
}

id objc_msgSend_callParticipantsViewController_didShowMultipleLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callParticipantsViewController:didShowMultipleLabel:");
}

id objc_msgSend_callParticipantsViewController_willShowMultipleLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callParticipantsViewController:willShowMultipleLabel:");
}

id objc_msgSend_callParticipantsViewControllerDidTapCallDetailsGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callParticipantsViewControllerDidTapCallDetailsGestureRecognizer:");
}

id objc_msgSend_callParticipantsViewControllerShouldShowLargeAvatar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callParticipantsViewControllerShouldShowLargeAvatar:");
}

id objc_msgSend_callPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callPassingTest:");
}

id objc_msgSend_callProviderIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callProviderIdentifier");
}

id objc_msgSend_callProviderManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callProviderManager");
}

id objc_msgSend_callScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callScene");
}

id objc_msgSend_callSceneHasPresentedFullScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callSceneHasPresentedFullScreen");
}

id objc_msgSend_callScreeningAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callScreeningAvailable");
}

id objc_msgSend_callService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callService");
}

id objc_msgSend_callServiceName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callServiceName");
}

id objc_msgSend_callServiceNameForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callServiceNameForCall:");
}

id objc_msgSend_callServicesClientCapabilities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callServicesClientCapabilities");
}

id objc_msgSend_callState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callState");
}

id objc_msgSend_callStateCanShowNewPoster_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callStateCanShowNewPoster:");
}

id objc_msgSend_callStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callStatus");
}

id objc_msgSend_callStatusChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callStatusChanged:");
}

id objc_msgSend_callToDecline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callToDecline");
}

id objc_msgSend_callToUseForWallpaper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callToUseForWallpaper");
}

id objc_msgSend_callTransferButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callTransferButton");
}

id objc_msgSend_callUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callUUID");
}

id objc_msgSend_callUUIDWaitingToPresentBanner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callUUIDWaitingToPresentBanner");
}

id objc_msgSend_callWaitingAnimationDelay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callWaitingAnimationDelay");
}

id objc_msgSend_callWaitingLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callWaitingLayoutConstraints");
}

id objc_msgSend_callWaitingParticipantsViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callWaitingParticipantsViewController");
}

id objc_msgSend_callWithCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callWithCallUUID:");
}

id objc_msgSend_callWithStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callWithStatus:");
}

id objc_msgSend_callWithUniqueProxyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callWithUniqueProxyIdentifier:");
}

id objc_msgSend_callerName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callerName");
}

id objc_msgSend_callerNameForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callerNameForCall:");
}

id objc_msgSend_callerNameFromNetwork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callerNameFromNetwork");
}

id objc_msgSend_callerNameType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callerNameType");
}

id objc_msgSend_callerNameTypeForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callerNameTypeForCall:");
}

id objc_msgSend_callingSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callingSupported");
}

id objc_msgSend_calls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calls");
}

id objc_msgSend_callsOnDefaultPairedDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callsOnDefaultPairedDevice");
}

id objc_msgSend_callsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callsPassingTest:");
}

id objc_msgSend_cameraStateMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cameraStateMonitor");
}

id objc_msgSend_canAttemptEmergencyCallsWithoutCellularConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAttemptEmergencyCallsWithoutCellularConnection");
}

id objc_msgSend_canAttemptEmergencyCallsWithoutCellularConnectionWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAttemptEmergencyCallsWithoutCellularConnectionWithUUID:");
}

id objc_msgSend_canAttemptTelephonyCallsWithoutCellularConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAttemptTelephonyCallsWithoutCellularConnection");
}

id objc_msgSend_canAutoRotateInCallUIForFaceTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAutoRotateInCallUIForFaceTime");
}

id objc_msgSend_canAutoRotateInCallUIForFaceTimeAudio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAutoRotateInCallUIForFaceTimeAudio");
}

id objc_msgSend_canBeEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canBeEnabled");
}

id objc_msgSend_canBecomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canBecomeFirstResponder");
}

id objc_msgSend_canDisplayAlertUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDisplayAlertUI:");
}

id objc_msgSend_canDoInfoButtonCoinFlipWith_contactStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDoInfoButtonCoinFlipWith:contactStore:");
}

id objc_msgSend_canDumpHierarchy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDumpHierarchy");
}

id objc_msgSend_canGroupCall_withCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canGroupCall:withCall:");
}

id objc_msgSend_canMakeEmergencyCallForSenderIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canMakeEmergencyCallForSenderIdentity:");
}

id objc_msgSend_canModifyCallsForProcessHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canModifyCallsForProcessHandle:");
}

id objc_msgSend_canSendMessage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSendMessage");
}

id objc_msgSend_canSendMessageToCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSendMessageToCall:");
}

id objc_msgSend_canSendMessages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSendMessages");
}

id objc_msgSend_canSendText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSendText");
}

id objc_msgSend_canShowBackgroundImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canShowBackgroundImage");
}

id objc_msgSend_canShowPosterBadgeInAudioCallView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canShowPosterBadgeInAudioCallView:");
}

id objc_msgSend_canShowPosterImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canShowPosterImage");
}

id objc_msgSend_cancelAutoAnswer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAutoAnswer");
}

id objc_msgSend_cancelButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelButton");
}

id objc_msgSend_cancelCallPromptDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelCallPromptDisplay");
}

id objc_msgSend_cancelGeocode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelGeocode");
}

id objc_msgSend_cancelPIPIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPIPIfNeeded");
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreviousPerformRequestsWithTarget:");
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreviousPerformRequestsWithTarget:selector:object:");
}

id objc_msgSend_cancelTouchTracking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelTouchTracking");
}

id objc_msgSend_cancelVideoRecordingWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelVideoRecordingWithCompletion:");
}

id objc_msgSend_cannedRepliesForSending(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cannedRepliesForSending");
}

id objc_msgSend_cannedReplyActionSheetOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cannedReplyActionSheetOptions");
}

id objc_msgSend_capInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "capInsets");
}

id objc_msgSend_captureGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "captureGroup");
}

id objc_msgSend_captureView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "captureView");
}

id objc_msgSend_carKitSessionStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "carKitSessionStatus");
}

id objc_msgSend_carPlayExternalDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "carPlayExternalDevice");
}

id objc_msgSend_carPlayInCallImageForSymbolType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "carPlayInCallImageForSymbolType:");
}

id objc_msgSend_carPlayServicesController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "carPlayServicesController");
}

id objc_msgSend_carSessionStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "carSessionStatus");
}

id objc_msgSend_carplayRouteGlyphForDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "carplayRouteGlyphForDisplayStyle:");
}

id objc_msgSend_category(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "category");
}

id objc_msgSend_categoryWithIdentifier_actions_intentIdentifiers_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "categoryWithIdentifier:actions:intentIdentifiers:options:");
}

id objc_msgSend_cellForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForItemAtIndexPath:");
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "center");
}

id objc_msgSend_centerPointForCurrentVideoGroupCorner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerPointForCurrentVideoGroupCorner");
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerXAnchor");
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerYAnchor");
}

id objc_msgSend_changeVideoStreamingButtonTitleWithIsSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeVideoStreamingButtonTitleWithIsSharing:");
}

id objc_msgSend_character(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "character");
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_characterForNumberPadCharacter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterForNumberPadCharacter:");
}

id objc_msgSend_characterIsMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterIsMember:");
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterSetWithCharactersInString:");
}

id objc_msgSend_charge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "charge");
}

id objc_msgSend_checkGeocodeAfterDateForSanity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkGeocodeAfterDateForSanity");
}

id objc_msgSend_checkInTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkInTimer");
}

id objc_msgSend_checkInView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkInView");
}

id objc_msgSend_checkInViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkInViewModel");
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childViewControllers");
}

id objc_msgSend_circleBounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "circleBounds");
}

id objc_msgSend_circleDistanceFromTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "circleDistanceFromTitle");
}

id objc_msgSend_circleView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "circleView");
}

id objc_msgSend_clarityUIScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clarityUIScene");
}

id objc_msgSend_clawButtonPressGapWithinThreshold(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clawButtonPressGapWithinThreshold");
}

id objc_msgSend_clawHoldInitialTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clawHoldInitialTimer");
}

id objc_msgSend_clawReleaseToCallSupport(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clawReleaseToCallSupport");
}

id objc_msgSend_clawResolution(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clawResolution");
}

id objc_msgSend_clawSwipeAfterRTCTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clawSwipeAfterRTCTimeout");
}

id objc_msgSend_cleanUp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanUp");
}

id objc_msgSend_cleanUpViewAndObjectWhenCallEnds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanUpViewAndObjectWhenCallEnds");
}

id objc_msgSend_clearAllDelegates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearAllDelegates");
}

id objc_msgSend_clearCachedRoutes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearCachedRoutes");
}

id objc_msgSend_clearClawHoldInitialTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearClawHoldInitialTimer");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_clearMetricItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearMetricItems");
}

id objc_msgSend_clearReleaseToCallState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearReleaseToCallState");
}

id objc_msgSend_clearReleaseToCallTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearReleaseToCallTimer");
}

id objc_msgSend_clearReleaseToCallVoiceLoopTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearReleaseToCallVoiceLoopTimer");
}

id objc_msgSend_clearStatusHeartbeatTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearStatusHeartbeatTimer");
}

id objc_msgSend_cmMotionActivityManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cmMotionActivityManager");
}

id objc_msgSend_cnAvatarView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cnAvatarView");
}

id objc_msgSend_cnHandle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cnHandle");
}

id objc_msgSend_cnkDeviceOrientationForUIDeviceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cnkDeviceOrientationForUIDeviceOrientation:");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_collectionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionView");
}

id objc_msgSend_colorEffect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorEffect");
}

id objc_msgSend_colorForDodge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorForDodge");
}

id objc_msgSend_colorForKeyPadButtonType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorForKeyPadButtonType:");
}

id objc_msgSend_colorForLuminance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorForLuminance");
}

id objc_msgSend_colorForParticipantLabelView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorForParticipantLabelView:");
}

id objc_msgSend_colorForStatusLabelForParticipantAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorForStatusLabelForParticipantAtIndex:inParticipantsView:");
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithAlphaComponent:");
}

id objc_msgSend_colorWithCGColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithCGColor:");
}

id objc_msgSend_colorWithHue_saturation_brightness_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithHue:saturation:brightness:alpha:");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_colorsForImageRef_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorsForImageRef:");
}

id objc_msgSend_columns(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "columns");
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commit");
}

id objc_msgSend_commonInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commonInit");
}

id objc_msgSend_compactLabelTextForParticipantAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactLabelTextForParticipantAtIndex:inParticipantsView:");
}

id objc_msgSend_companyName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "companyName");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_completeTransaction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completeTransaction");
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completion");
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionHandler");
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_compose(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compose");
}

id objc_msgSend_composeBackgroundWithView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "composeBackgroundWithView:");
}

id objc_msgSend_conferenceParticipantCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceParticipantCalls");
}

id objc_msgSend_conferenceParticipantCellRequestedEndCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceParticipantCellRequestedEndCall:");
}

id objc_msgSend_conferenceParticipantCellRequestedTakeCallPrivate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceParticipantCellRequestedTakeCallPrivate:");
}

id objc_msgSend_conferenceParticipants(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceParticipants");
}

id objc_msgSend_conferenceParticipantsButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceParticipantsButton");
}

id objc_msgSend_conferenceTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceTable");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configuration");
}

id objc_msgSend_configurationCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationCache");
}

id objc_msgSend_configurationForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForCall:");
}

id objc_msgSend_configurationForCall_preferredPresentationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForCall:preferredPresentationMode:");
}

id objc_msgSend_configurationForCallDetailsViewWithFullScreenRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForCallDetailsViewWithFullScreenRequest:");
}

id objc_msgSend_configurationForDefaultMainDisplayMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForDefaultMainDisplayMonitor");
}

id objc_msgSend_configurationForGreenTea3P(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForGreenTea3P");
}

id objc_msgSend_configurationForPTTSessionWithCall_preferredPresentationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForPTTSessionWithCall:preferredPresentationMode:");
}

id objc_msgSend_configurationForSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForSOS");
}

id objc_msgSend_configurationForScreenShareBroadcast(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForScreenShareBroadcast");
}

id objc_msgSend_configurationForScreenSharingInitiallyInPiP_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForScreenSharingInitiallyInPiP:");
}

id objc_msgSend_configurationForScreenTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForScreenTime");
}

id objc_msgSend_configurationWithFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithFont:");
}

id objc_msgSend_configurationWithIdentifier_previewProvider_actionProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithIdentifier:previewProvider:actionProvider:");
}

id objc_msgSend_configurationWithPointSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:weight:");
}

id objc_msgSend_configurationWithTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithTextStyle:");
}

id objc_msgSend_configureButton_forIncomingCall_presenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureButton:forIncomingCall:presenter:");
}

id objc_msgSend_configureDeclineMessageForButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureDeclineMessageForButton:");
}

id objc_msgSend_configureDeclineWithReminderButton_declineWithMessageButton_forIncomingCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureDeclineWithReminderButton:declineWithMessageButton:forIncomingCall:");
}

id objc_msgSend_configureDialRequest_forProcessHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureDialRequest:forProcessHandle:");
}

id objc_msgSend_configureWindow_windowScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWindow:windowScene:");
}

id objc_msgSend_configureWindowScene_forSceneType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWindowScene:forSceneType:");
}

id objc_msgSend_configureWith_isFullScreenMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWith:isFullScreenMode:");
}

id objc_msgSend_confirmationTimeoutTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confirmationTimeoutTimer");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectedCallIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectedCallIdentifiers");
}

id objc_msgSend_connectedSceneSessionIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectedSceneSessionIdentifiers");
}

id objc_msgSend_constant(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constant");
}

id objc_msgSend_constrainBottomBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constrainBottomBar");
}

id objc_msgSend_constrainBottomBarBottom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constrainBottomBarBottom");
}

id objc_msgSend_constrainButtonsViewBottom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constrainButtonsViewBottom");
}

id objc_msgSend_constrainPIPPlaceholderFullScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constrainPIPPlaceholderFullScreen");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToAnchor:");
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToAnchor:constant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToConstant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToSystemSpacingAfterAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:");
}

id objc_msgSend_constraintGreaterThanOrEqualToSystemSpacingBelowAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:constant:");
}

id objc_msgSend_constraintLessThanOrEqualToSystemSpacingAfterAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToSystemSpacingAfterAnchor:multiplier:");
}

id objc_msgSend_constraintToFillContainerWithLeftOfCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintToFillContainerWithLeftOfCell:");
}

id objc_msgSend_constraintToFillContainerWithRightOfCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintToFillContainerWithRightOfCell:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:");
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraints");
}

id objc_msgSend_constraintsForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintsForState:");
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintsWithVisualFormat:options:metrics:views:");
}

id objc_msgSend_contact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contact");
}

id objc_msgSend_contactCountButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactCountButton");
}

id objc_msgSend_contactForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactForIdentifier:");
}

id objc_msgSend_contactForIdentifier_keysToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactForIdentifier:keysToFetch:");
}

id objc_msgSend_contactForIdentifier_keysToFetch_usingCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactForIdentifier:keysToFetch:usingCache:");
}

id objc_msgSend_contactForParticipantAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactForParticipantAtIndex:inParticipantsView:");
}

id objc_msgSend_contactGeminiManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactGeminiManager");
}

id objc_msgSend_contactIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactIdentifier");
}

id objc_msgSend_contactIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactIdentifiers");
}

id objc_msgSend_contactImageDataForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactImageDataForCall:");
}

id objc_msgSend_contactImageForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactImageForCall:");
}

id objc_msgSend_contactIsInAutoUpdateState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactIsInAutoUpdateState:");
}

id objc_msgSend_contactKeyDescriptors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactKeyDescriptors");
}

id objc_msgSend_contactKeysToFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactKeysToFetch");
}

id objc_msgSend_contactLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactLabel");
}

id objc_msgSend_contactNamesByHandleWithContactsDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactNamesByHandleWithContactsDataSource:");
}

id objc_msgSend_contactResultForPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactResultForPhoneNumber:");
}

id objc_msgSend_contactStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactStore");
}

id objc_msgSend_contactToDisplayInCallWallpaperForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactToDisplayInCallWallpaperForCall:");
}

id objc_msgSend_contactWallpaperBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactWallpaperBackgroundColor");
}

id objc_msgSend_contactWallpaperConfigurationForCall_shouldReadFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactWallpaperConfigurationForCall:shouldReadFromCache:");
}

id objc_msgSend_contactWallpaperForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactWallpaperForCall:");
}

id objc_msgSend_contactWithDisplayName_handleStrings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactWithDisplayName:handleStrings:");
}

id objc_msgSend_contacts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contacts");
}

id objc_msgSend_contactsCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactsCache");
}

id objc_msgSend_contactsDataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactsDataProvider");
}

id objc_msgSend_contactsForDestinationID_isoCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactsForDestinationID:isoCountryCode:");
}

id objc_msgSend_contactsViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactsViewController");
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "container");
}

id objc_msgSend_containerController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerController");
}

id objc_msgSend_containerSpecificLeftConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerSpecificLeftConstraint");
}

id objc_msgSend_containerSpecificRightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerSpecificRightConstraint");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_contentIsSensitive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentIsSensitive");
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentView");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context");
}

id objc_msgSend_continueCyclingEmergencyTitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueCyclingEmergencyTitleLabel");
}

id objc_msgSend_continueHandoffEligibleConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueHandoffEligibleConversation");
}

id objc_msgSend_controlForActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlForActionType:");
}

id objc_msgSend_controlImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlImage");
}

id objc_msgSend_controlType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlType");
}

id objc_msgSend_controlTypeAtRow_column_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlTypeAtRow:column:");
}

id objc_msgSend_controlTypeIsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlTypeIsEnabled:");
}

id objc_msgSend_controlTypeIsSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlTypeIsSelected:");
}

id objc_msgSend_controlTypeLongPressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlTypeLongPressed:");
}

id objc_msgSend_controlTypeShortPressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlTypeShortPressed:");
}

id objc_msgSend_controlTypeTapped_forView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlTypeTapped:forView:");
}

id objc_msgSend_controlTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlTypes");
}

id objc_msgSend_controlsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlsView");
}

id objc_msgSend_conversationForCallUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationForCallUID:");
}

id objc_msgSend_conversationHandoffEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationHandoffEnabled");
}

id objc_msgSend_conversationIsAVLess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationIsAVLess");
}

id objc_msgSend_conversationKit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationKit");
}

id objc_msgSend_conversationLink(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationLink");
}

id objc_msgSend_conversationLinkForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationLinkForURL:");
}

id objc_msgSend_conversationLinkURLForOpenLinkURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationLinkURLForOpenLinkURL");
}

id objc_msgSend_conversationManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager");
}

id objc_msgSend_conversationManager_addedActiveConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:addedActiveConversation:");
}

id objc_msgSend_conversationOneToOneModeEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationOneToOneModeEnabled");
}

id objc_msgSend_convertPoint_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:fromView:");
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:toView:");
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:fromView:");
}

id objc_msgSend_convertRect_toCoordinateSpace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:toCoordinateSpace:");
}

id objc_msgSend_convertRect_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:toView:");
}

id objc_msgSend_coordinateSpace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinateSpace");
}

id objc_msgSend_coordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinator");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_copyCallWaitingConstraintsFromParticipantsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCallWaitingConstraintsFromParticipantsView");
}

id objc_msgSend_copyCarrierBundleValue_keyHierarchy_bundleType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCarrierBundleValue:keyHierarchy:bundleType:error:");
}

id objc_msgSend_copyCarrierBundleValueWithDefault_key_bundleType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCarrierBundleValueWithDefault:key:bundleType:error:");
}

id objc_msgSend_coreAnalyticsReporter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coreAnalyticsReporter");
}

id objc_msgSend_coreTelephonyClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coreTelephonyClient");
}

id objc_msgSend_cornerLocationsRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cornerLocationsRect");
}

id objc_msgSend_cornerRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cornerRadius");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countOfCallsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOfCallsPassingTest:");
}

id objc_msgSend_countdown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdown");
}

id objc_msgSend_countdownCircleDiameter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownCircleDiameter");
}

id objc_msgSend_countdownDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownDuration");
}

id objc_msgSend_countdownLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownLabel");
}

id objc_msgSend_countdownLabelFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownLabelFontSize");
}

id objc_msgSend_countdownPausedTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownPausedTime");
}

id objc_msgSend_countdownStartedTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownStartedTime");
}

id objc_msgSend_countdownString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownString:");
}

id objc_msgSend_countdownTickDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownTickDuration");
}

id objc_msgSend_countdownTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownTimer");
}

id objc_msgSend_countdownView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownView");
}

id objc_msgSend_countdownViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownViewModel");
}

id objc_msgSend_countdownWithAudio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countdownWithAudio");
}

id objc_msgSend_coverViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverViewController");
}

id objc_msgSend_createAnalyticsViewForCall_initialPresentationMode_bannersEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createAnalyticsViewForCall:initialPresentationMode:bannersEnabled:");
}

id objc_msgSend_createAnsweredBannerAnalyticsViewWithIsHandsfreeAudioRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createAnsweredBannerAnalyticsViewWithIsHandsfreeAudioRoute:");
}

id objc_msgSend_createAudioCallViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createAudioCallViewController");
}

id objc_msgSend_createBlurryBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createBlurryBackgroundView");
}

id objc_msgSend_createCallDisplayStyleManagerForScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createCallDisplayStyleManagerForScene:");
}

id objc_msgSend_createConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createConstraints");
}

id objc_msgSend_createContactFirstNameLabelViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createContactFirstNameLabelViewModel");
}

id objc_msgSend_createDeleteButtonX(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDeleteButtonX");
}

id objc_msgSend_createFindMyUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFindMyUI");
}

id objc_msgSend_createGeocodeAfterDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createGeocodeAfterDate");
}

id objc_msgSend_createHintView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createHintView");
}

id objc_msgSend_createPillViewForSenderIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPillViewForSenderIdentity:");
}

id objc_msgSend_createPowerDownConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPowerDownConstraints");
}

id objc_msgSend_createReminderForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createReminderForLocation:");
}

id objc_msgSend_createReminderForWhenILeave(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createReminderForWhenILeave");
}

id objc_msgSend_createReminderWithDurationInMinutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createReminderWithDurationInMinutes:");
}

id objc_msgSend_createRingImageWithSize_strokeWidth_color_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRingImageWithSize:strokeWidth:color:");
}

id objc_msgSend_createRootViewControllerForScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRootViewControllerForScene:");
}

id objc_msgSend_createVisibleCells_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createVisibleCells:");
}

id objc_msgSend_croppedAndCenteredAvatarImageForImage_usingTransparencyInsets_widthMultiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "croppedAndCenteredAvatarImageForImage:usingTransparencyInsets:widthMultiplier:");
}

id objc_msgSend_crossFadeAnimationFromImage_toImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "crossFadeAnimationFromImage:toImage:");
}

id objc_msgSend_currentAlertButtonAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentAlertButtonAction");
}

id objc_msgSend_currentArrangement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentArrangement");
}

id objc_msgSend_currentArrangementWithSenderIdentityClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentArrangementWithSenderIdentityClient:");
}

id objc_msgSend_currentAttributedTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentAttributedTitle");
}

id objc_msgSend_currentAudioAndVideoCallCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentAudioAndVideoCallCount");
}

id objc_msgSend_currentAudioAndVideoCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentAudioAndVideoCalls");
}

id objc_msgSend_currentBackgroundCountdownDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentBackgroundCountdownDuration");
}

id objc_msgSend_currentBottomBarCallState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentBottomBarCallState");
}

id objc_msgSend_currentButtonPressState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentButtonPressState");
}

id objc_msgSend_currentCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCall");
}

id objc_msgSend_currentCallCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCallCount");
}

id objc_msgSend_currentCallGroups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCallGroups");
}

id objc_msgSend_currentCallState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCallState");
}

id objc_msgSend_currentCallStateCanShowNewPoster(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCallStateCanShowNewPoster");
}

id objc_msgSend_currentCallStateWarrantsCallWaitingMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCallStateWarrantsCallWaitingMode");
}

id objc_msgSend_currentCallStatusStringForDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCallStatusStringForDisplay");
}

id objc_msgSend_currentCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCalls");
}

id objc_msgSend_currentCarPlayExternalDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCarPlayExternalDevice");
}

id objc_msgSend_currentCycleStringIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCycleStringIndex");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentDeviceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDeviceOrientation");
}

id objc_msgSend_currentDisplayedPosterSourceForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDisplayedPosterSourceForCall:");
}

id objc_msgSend_currentIMNicknameMatchingContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentIMNicknameMatchingContact:");
}

id objc_msgSend_currentImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentImage");
}

id objc_msgSend_currentInCallScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentInCallScene");
}

id objc_msgSend_currentInteractiveState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentInteractiveState");
}

id objc_msgSend_currentLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLayout");
}

id objc_msgSend_currentMiddleView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentMiddleView");
}

id objc_msgSend_currentMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentMode");
}

id objc_msgSend_currentNickname(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentNickname");
}

id objc_msgSend_currentOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentOrientation");
}

id objc_msgSend_currentRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentRoute");
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentRunLoop");
}

id objc_msgSend_currentSOSButtonPressState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSOSButtonPressState");
}

id objc_msgSend_currentSOSInitiationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSOSInitiationState");
}

id objc_msgSend_currentSOSInteractiveState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSOSInteractiveState");
}

id objc_msgSend_currentSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSession");
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentState");
}

id objc_msgSend_currentStatusLabelIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentStatusLabelIndex");
}

id objc_msgSend_currentStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentStyle");
}

id objc_msgSend_currentTestIsFaceTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTestIsFaceTime");
}

id objc_msgSend_currentTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTitle");
}

id objc_msgSend_currentValidLocations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentValidLocations");
}

id objc_msgSend_currentVideoCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentVideoCall");
}

id objc_msgSend_currentVideoCallCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentVideoCallCount");
}

id objc_msgSend_currentVideoCallUsingCallContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentVideoCallUsingCallContainer:");
}

id objc_msgSend_currentVideoCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentVideoCalls");
}

id objc_msgSend_currentVideoOverlayMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentVideoOverlayMode");
}

id objc_msgSend_currentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentView");
}

id objc_msgSend_currentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentViewController");
}

id objc_msgSend_currentViewControllerIsMultiway(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentViewControllerIsMultiway");
}

id objc_msgSend_currentlyFocusedButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentlyFocusedButton");
}

id objc_msgSend_customColorForParticipantLabelWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customColorForParticipantLabelWithCall:");
}

id objc_msgSend_customColorForStatusLabelWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customColorForStatusLabelWithCall:");
}

id objc_msgSend_customFontForParticipantLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customFontForParticipantLabel");
}

id objc_msgSend_customFontForParticipantLabelWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customFontForParticipantLabelWithCall:");
}

id objc_msgSend_customMessagePresentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customMessagePresentingViewController");
}

id objc_msgSend_customReplies(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customReplies");
}

id objc_msgSend_customTitleStringForActionType_givenDefaultTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customTitleStringForActionType:givenDefaultTitle:");
}

id objc_msgSend_customizedTitleForItemInBar_withActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customizedTitleForItemInBar:withActionType:");
}

id objc_msgSend_cycleStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cycleStrings");
}

id objc_msgSend_cycleTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cycleTimer");
}

id objc_msgSend_darkGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "darkGrayColor");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSource");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "date");
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateConnected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateConnected");
}

id objc_msgSend_dateOfCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateOfCall");
}

id objc_msgSend_dateOfSOSEvent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateOfSOSEvent");
}

id objc_msgSend_dateWithTimeInterval_sinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeInterval:sinceDate:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_deactivateAudioServices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateAudioServices");
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateConstraints:");
}

id objc_msgSend_deactivateLayoutGuideConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateLayoutGuideConstraints");
}

id objc_msgSend_deactivateSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateSOS");
}

id objc_msgSend_deactivateSOSWithSOSDismissalType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateSOSWithSOSDismissalType:");
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugDescription");
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalDigitCharacterSet");
}

id objc_msgSend_declineAndMessageIsAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineAndMessageIsAvailable");
}

id objc_msgSend_declineAndRemindIsAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineAndRemindIsAvailable");
}

id objc_msgSend_declineAnsweringCallDueToLockEventWithCurrentActiveCall_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineAnsweringCallDueToLockEventWithCurrentActiveCall:completionHandler:");
}

id objc_msgSend_declineAnsweringFrontMostCallViaUserActionWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineAnsweringFrontMostCallViaUserActionWithCompletionHandler:");
}

id objc_msgSend_declineAnsweringWithCall_anayticsSourceForDismissal_reason_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineAnsweringWithCall:anayticsSourceForDismissal:reason:completionHandler:");
}

id objc_msgSend_declineCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineCall");
}

id objc_msgSend_declineCallService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineCallService");
}

id objc_msgSend_declineWithMessageController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineWithMessageController");
}

id objc_msgSend_decodeIntForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_defaultAlertControlTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultAlertControlTypes");
}

id objc_msgSend_defaultBackgroundGradientView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultBackgroundGradientView");
}

id objc_msgSend_defaultBottomMargin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultBottomMargin");
}

id objc_msgSend_defaultBottomSupplementalButtonSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultBottomSupplementalButtonSpacing");
}

id objc_msgSend_defaultCalendarForNewReminders(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCalendarForNewReminders");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultConfiguration");
}

id objc_msgSend_defaultControlTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultControlTypes");
}

id objc_msgSend_defaultDeviceWithMediaType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultDeviceWithMediaType:");
}

id objc_msgSend_defaultFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultFont");
}

id objc_msgSend_defaultHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultHeight");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultMultipleCallControlTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultMultipleCallControlTypes");
}

id objc_msgSend_defaultPIPController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultPIPController");
}

id objc_msgSend_defaultReplies(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultReplies");
}

id objc_msgSend_defaultSideMarginForDoubleButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSideMarginForDoubleButton");
}

id objc_msgSend_defaultSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSize");
}

id objc_msgSend_defaultWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultWidth");
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultWorkspace");
}

id objc_msgSend_defaultYOffsetForBottomButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultYOffsetForBottomButtons");
}

id objc_msgSend_delay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delay");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_delegates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegates");
}

id objc_msgSend_deleteAllUnarchivedPosterDirectories(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAllUnarchivedPosterDirectories");
}

id objc_msgSend_deleteBackward(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteBackward");
}

id objc_msgSend_deleteButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteButton");
}

id objc_msgSend_deleteButtonImageName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteButtonImageName");
}

id objc_msgSend_deleteButtonXImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteButtonXImageView");
}

id objc_msgSend_deleteCharacter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCharacter");
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_descriptionLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionLabel");
}

id objc_msgSend_descriptionText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionText");
}

id objc_msgSend_descriptorForRequiredKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorForRequiredKeys");
}

id objc_msgSend_descriptorForRequiredKeysForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorForRequiredKeysForStyle:");
}

id objc_msgSend_descriptorForRequiredKeysWithThreeDTouchEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorForRequiredKeysWithThreeDTouchEnabled:");
}

id objc_msgSend_descriptorForUsedKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorForUsedKeys");
}

id objc_msgSend_deselectItemAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deselectItemAtIndexPath:animated:");
}

id objc_msgSend_desiredButtonEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredButtonEvents");
}

id objc_msgSend_desiredButtonEventsForCallContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredButtonEventsForCallContainer:");
}

id objc_msgSend_desiredSceneButtonEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredSceneButtonEvents");
}

id objc_msgSend_desiredSceneButtonEventsForCallContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredSceneButtonEventsForCallContainer:");
}

id objc_msgSend_desiresLockAndVolumeButtonEventsForCallContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiresLockAndVolumeButtonEventsForCallContainer:");
}

id objc_msgSend_desiresLockButtonEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiresLockButtonEvents");
}

id objc_msgSend_desiresLockButtonEventsForCallContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiresLockButtonEventsForCallContainer:");
}

id objc_msgSend_destinationID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationID");
}

id objc_msgSend_destinationIdIsEmailAddress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationIdIsEmailAddress");
}

id objc_msgSend_destinationIdIsPhoneNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationIdIsPhoneNumber");
}

id objc_msgSend_destinationIdIsPseudonym(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationIdIsPseudonym");
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailTextLabel");
}

id objc_msgSend_deviceHasHomeButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceHasHomeButton");
}

id objc_msgSend_deviceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceOrientation");
}

id objc_msgSend_deviceOrientationForBSInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceOrientationForBSInterfaceOrientation:");
}

id objc_msgSend_deviceSupportsFindMy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceSupportsFindMy");
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceType");
}

id objc_msgSend_deviceWindowedAccessoryCutoutFrameForScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceWindowedAccessoryCutoutFrameForScene:");
}

id objc_msgSend_dialAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialAction");
}

id objc_msgSend_dialEmergencyCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialEmergencyCall");
}

id objc_msgSend_dialEmergencyCallForDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialEmergencyCallForDialRequest:");
}

id objc_msgSend_dialImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialImageView");
}

id objc_msgSend_dialLastDialedNumberByDoubleTap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialLastDialedNumberByDoubleTap");
}

id objc_msgSend_dialRequestAccountDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialRequestAccountDescription");
}

id objc_msgSend_dialRequestAttachment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialRequestAttachment");
}

id objc_msgSend_dialRequestByResolvingDialTypeUsingSenderIdentityClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialRequestByResolvingDialTypeUsingSenderIdentityClient:");
}

id objc_msgSend_dialRequestForCallProvider_handle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialRequestForCallProvider:handle:");
}

id objc_msgSend_dialRequestForRedial(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialRequestForRedial");
}

id objc_msgSend_dialSOSNumberAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialSOSNumberAtIndex:");
}

id objc_msgSend_dialType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialType");
}

id objc_msgSend_dialWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialWithRequest:");
}

id objc_msgSend_dialerController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialerController");
}

id objc_msgSend_dialerField_stringWasPasted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialerField:stringWasPasted:");
}

id objc_msgSend_dialerIsNumericOnly(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialerIsNumericOnly");
}

id objc_msgSend_dialerNumberPadFullCharacters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialerNumberPadFullCharacters");
}

id objc_msgSend_dialerNumberPadNumericCharacters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialerNumberPadNumericCharacters");
}

id objc_msgSend_dialerType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialerType");
}

id objc_msgSend_dialerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialerView");
}

id objc_msgSend_dialerView_stringWasPasted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialerView:stringWasPasted:");
}

id objc_msgSend_diameter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diameter");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didAcknowledgeFindMyInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didAcknowledgeFindMyInfo");
}

id objc_msgSend_didAnimatePictureInPictureStopCompletionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didAnimatePictureInPictureStopCompletionBlock");
}

id objc_msgSend_didDeepLinkToCallDetailsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didDeepLinkToCallDetailsView");
}

id objc_msgSend_didDeepLinkToPTTCallDetailsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didDeepLinkToPTTCallDetailsView");
}

id objc_msgSend_didDisconnectSceneOfType_withIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didDisconnectSceneOfType:withIdentifier:");
}

id objc_msgSend_didDismissAlertFromHostViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didDismissAlertFromHostViewController");
}

id objc_msgSend_didDismissSOSBeforeSOSCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didDismissSOSBeforeSOSCall:");
}

id objc_msgSend_didDismissSceneOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didDismissSceneOfType:");
}

id objc_msgSend_didFinishSOSSliding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFinishSOSSliding:");
}

id objc_msgSend_didFinishSlideForSlidingButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFinishSlideForSlidingButton:");
}

id objc_msgSend_didInvalidatePendingSceneOfType_withIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didInvalidatePendingSceneOfType:withIdentifier:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didNotifyMutedCaller(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didNotifyMutedCaller");
}

id objc_msgSend_didRequestSceneOfType_withIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didRequestSceneOfType:withIdentifier:");
}

id objc_msgSend_didRequestToSpeakAlertUtterance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didRequestToSpeakAlertUtterance");
}

id objc_msgSend_didSuppressFindMy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSuppressFindMy");
}

id objc_msgSend_didTriggerAutoCountdownAlertBefore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTriggerAutoCountdownAlertBefore");
}

id objc_msgSend_didUpdatePresentationMode_forScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdatePresentationMode:forScene:");
}

id objc_msgSend_didUpdatePresentationModeToDismissed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdatePresentationModeToDismissed");
}

id objc_msgSend_didUpdatePresentationModeToFullScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdatePresentationModeToFullScreen");
}

id objc_msgSend_digits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "digits");
}

id objc_msgSend_digitsEntered(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "digitsEntered");
}

id objc_msgSend_dimmed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dimmed");
}

id objc_msgSend_directionalLayoutMargins(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directionalLayoutMargins");
}

id objc_msgSend_disableUserAttachments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableUserAttachments");
}

id objc_msgSend_disableVideoOverlayModes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableVideoOverlayModes");
}

id objc_msgSend_disconnectAllCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectAllCalls");
}

id objc_msgSend_disconnectAllCallsWithNoPreflight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectAllCallsWithNoPreflight");
}

id objc_msgSend_disconnectCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCall:");
}

id objc_msgSend_disconnectCall_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCall:withReason:");
}

id objc_msgSend_disconnectCallUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCallUUID");
}

id objc_msgSend_disconnectCurrentCallAndActivateHeld(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCurrentCallAndActivateHeld");
}

id objc_msgSend_disconnectedReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectedReason");
}

id objc_msgSend_disconnectedReasonRequiresCallBackUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectedReasonRequiresCallBackUI");
}

id objc_msgSend_disconnectedReasonRequiresCallFailureUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectedReasonRequiresCallFailureUI");
}

id objc_msgSend_dismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismiss");
}

id objc_msgSend_dismissAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissAlert");
}

id objc_msgSend_dismissAlertControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissAlertControllers");
}

id objc_msgSend_dismissAudioRoutesMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissAudioRoutesMenu");
}

id objc_msgSend_dismissBanner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissBanner");
}

id objc_msgSend_dismissConferenceView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissConferenceView");
}

id objc_msgSend_dismissContactDetailsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissContactDetailsWithCompletion:");
}

id objc_msgSend_dismissContactsViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissContactsViewController");
}

id objc_msgSend_dismissContactsViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissContactsViewControllerAnimated:completion:");
}

id objc_msgSend_dismissInCallPresentationWithDismissalBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissInCallPresentationWithDismissalBlock:");
}

id objc_msgSend_dismissInCallSceneOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissInCallSceneOfType:");
}

id objc_msgSend_dismissInCallSceneSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissInCallSceneSession");
}

id objc_msgSend_dismissMedicalIDViewControllerIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissMedicalIDViewControllerIfNecessary");
}

id objc_msgSend_dismissPTTSessionPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPTTSessionPresentation");
}

id objc_msgSend_dismissPhoneRemoteViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPhoneRemoteViewController");
}

id objc_msgSend_dismissPhoneRemoteViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPhoneRemoteViewControllerAnimated:");
}

id objc_msgSend_dismissPhoneRemoteViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPhoneRemoteViewControllerAnimated:completion:");
}

id objc_msgSend_dismissPresentedBannerForReason_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPresentedBannerForReason:animated:");
}

id objc_msgSend_dismissSOSIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissSOSIfNeeded");
}

id objc_msgSend_dismissScreenSharingSceneSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissScreenSharingSceneSession");
}

id objc_msgSend_dismissScreenTimeAlertHostIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissScreenTimeAlertHostIfNeeded");
}

id objc_msgSend_dismissVideoMessageSceneSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissVideoMessageSceneSession");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dismissViewControllersWithSensitiveInformation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllersWithSensitiveInformation");
}

id objc_msgSend_dismissViewControllersWithSensitiveInformationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllersWithSensitiveInformationWithCompletion:");
}

id objc_msgSend_dismissalAssertionReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissalAssertionReason");
}

id objc_msgSend_dismissalAssertions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissalAssertions");
}

id objc_msgSend_dismissalRequestedFromInCallViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissalRequestedFromInCallViewController:");
}

id objc_msgSend_dismissalWasDemandedBeforeRemoteViewControllerWasAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissalWasDemandedBeforeRemoteViewControllerWasAvailable");
}

id objc_msgSend_dispatchQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatchQueue");
}

id objc_msgSend_displayBacklightLevel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayBacklightLevel");
}

id objc_msgSend_displayCallPromptForContact_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayCallPromptForContact:withCompletion:");
}

id objc_msgSend_displayContentView_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayContentView:animated:");
}

id objc_msgSend_displayDialledNumberDetailsForCallBufferScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayDialledNumberDetailsForCallBufferScreen");
}

id objc_msgSend_displayFirstName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayFirstName");
}

id objc_msgSend_displayLinkWithTarget_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayLinkWithTarget:selector:");
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayName");
}

id objc_msgSend_displayedAudioAndVideoCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedAudioAndVideoCalls");
}

id objc_msgSend_displayedCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedCall");
}

id objc_msgSend_displayedCallFromCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedCallFromCalls:");
}

id objc_msgSend_displayedCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedCalls");
}

id objc_msgSend_displayedLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedLabel");
}

id objc_msgSend_displayedName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedName");
}

id objc_msgSend_dissmissConfirmLeavePTTChannelAlertIfNeededWithBannerPresentationManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dissmissConfirmLeavePTTChannelAlertIfNeededWithBannerPresentationManager:");
}

id objc_msgSend_distanceBetweenEndButtonAndKeyPadLastRow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceBetweenEndButtonAndKeyPadLastRow");
}

id objc_msgSend_distanceBetweenMiddleSliders(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceBetweenMiddleSliders");
}

id objc_msgSend_distanceFromBottom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceFromBottom");
}

id objc_msgSend_distanceFromTop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceFromTop");
}

id objc_msgSend_distributedFractionForUndistributedFraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distributedFractionForUndistributedFraction:");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domain");
}

id objc_msgSend_donateEventOriginatedCallWithSiri(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateEventOriginatedCallWithSiri");
}

id objc_msgSend_donateEventSpeakerUsed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateEventSpeakerUsed");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_dragStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dragStyle");
}

id objc_msgSend_drawAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawAtPoint:");
}

id objc_msgSend_drawInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:");
}

id objc_msgSend_drawInRect_blendMode_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:blendMode:alpha:");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duration");
}

id objc_msgSend_dynamicBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dynamicBackgroundColor");
}

id objc_msgSend_dynamicCarFocusedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dynamicCarFocusedColor");
}

id objc_msgSend_dynamicCarPrimaryColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dynamicCarPrimaryColor");
}

id objc_msgSend_dynamicCarQuaternaryColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dynamicCarQuaternaryColor");
}

id objc_msgSend_dynamicCarTertiaryColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dynamicCarTertiaryColor");
}

id objc_msgSend_dynamicLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dynamicLabelColor");
}

id objc_msgSend_earlierDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earlierDate:");
}

id objc_msgSend_eedRTTState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eedRTTState");
}

id objc_msgSend_effectForBlurEffect_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectForBlurEffect:style:");
}

id objc_msgSend_effectIdentifiersForEffectType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectIdentifiersForEffectType:");
}

id objc_msgSend_effectPickerView_didDeselectVideoEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectPickerView:didDeselectVideoEffect:");
}

id objc_msgSend_effectPickerView_didSelectVideoEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectPickerView:didSelectVideoEffect:");
}

id objc_msgSend_effectTypeWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectTypeWithIdentifier:");
}

id objc_msgSend_effectView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectView");
}

id objc_msgSend_effectWithBlurRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithBlurRadius:");
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithStyle:");
}

id objc_msgSend_effects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effects");
}

id objc_msgSend_effectsEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectsEnabled");
}

id objc_msgSend_elements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elements");
}

id objc_msgSend_eligibleLagunaDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eligibleLagunaDevices:");
}

id objc_msgSend_emergencyAccountDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyAccountDescription");
}

id objc_msgSend_emergencyCallBeforePresentingStickyAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyCallBeforePresentingStickyAlert");
}

id objc_msgSend_emergencyCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyCoordinator");
}

id objc_msgSend_emergencyLabeledHandles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyLabeledHandles");
}

id objc_msgSend_emergencyPhotoPickerGrabberView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyPhotoPickerGrabberView");
}

id objc_msgSend_emergencyProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyProvider");
}

id objc_msgSend_emergencyTextViaSatelliteLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyTextViaSatelliteLabel");
}

id objc_msgSend_emergencyTitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyTitleLabel");
}

id objc_msgSend_emojiViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emojiViewController");
}

id objc_msgSend_emphasizedNameComponentIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emphasizedNameComponentIndex");
}

id objc_msgSend_enableWiFiCallingAlertController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableWiFiCallingAlertController");
}

id objc_msgSend_encodeInt_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodedDialerString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodedDialerString");
}

id objc_msgSend_end(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "end");
}

id objc_msgSend_endActiveOrHeldAndAnswerCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endActiveOrHeldAndAnswerCall:");
}

id objc_msgSend_endActiveOrHeldAndAnswerWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endActiveOrHeldAndAnswerWithRequest:");
}

id objc_msgSend_endBackgroundTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endBackgroundTask:");
}

id objc_msgSend_endButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endButton");
}

id objc_msgSend_endCallButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endCallButton");
}

id objc_msgSend_endEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditing");
}

id objc_msgSend_endEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditing:");
}

id objc_msgSend_endEmergencyCallbackMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEmergencyCallbackMode");
}

id objc_msgSend_endHeldAndAnswerWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endHeldAndAnswerWithRequest:");
}

id objc_msgSend_endOfDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endOfDocument");
}

id objc_msgSend_endPhoneCall_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endPhoneCall:animated:");
}

id objc_msgSend_endpoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpoint");
}

id objc_msgSend_endpointType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpointType");
}

id objc_msgSend_enteredBackgroundForAllCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enteredBackgroundForAllCalls");
}

id objc_msgSend_enteredForegroundForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enteredForegroundForCall:");
}

id objc_msgSend_entityID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityID");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateRangesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateRangesUsingBlock:");
}

id objc_msgSend_errorAlertMessage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorAlertMessage");
}

id objc_msgSend_errorAlertTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorAlertTitle");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_escapedPatternForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "escapedPatternForString:");
}

id objc_msgSend_events(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "events");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_executeFetchRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeFetchRequest:");
}

id objc_msgSend_executeFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeFetchRequest:error:");
}

id objc_msgSend_existingButtonsNotInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingButtonsNotInArray:");
}

id objc_msgSend_existingCallsHaveMultipleProviders(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingCallsHaveMultipleProviders");
}

id objc_msgSend_expanseEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expanseEnabled");
}

id objc_msgSend_expanseProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expanseProvider");
}

id objc_msgSend_expectingSystemInitiatedPIPInterruptionStop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectingSystemInitiatedPIPInterruptionStop");
}

id objc_msgSend_expired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expired");
}

id objc_msgSend_extensionBundleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionBundleID");
}

id objc_msgSend_extensionNumberButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionNumberButton");
}

id objc_msgSend_extensionsWithMatchingAttributes_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionsWithMatchingAttributes:completion:");
}

id objc_msgSend_externalSystemGreenColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalSystemGreenColor");
}

id objc_msgSend_externalSystemRedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalSystemRedColor");
}

id objc_msgSend_externalSystemTealColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalSystemTealColor");
}

id objc_msgSend_faceTimeAudioIsSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTimeAudioIsSupported");
}

id objc_msgSend_faceTimeAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTimeAvailable");
}

id objc_msgSend_faceTimeIDStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTimeIDStatus");
}

id objc_msgSend_faceTimeProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTimeProvider");
}

id objc_msgSend_faceTimeSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTimeSupported");
}

id objc_msgSend_faceTimeTransportType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTimeTransportType");
}

id objc_msgSend_faceTimeVideoIsAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTimeVideoIsAvailable");
}

id objc_msgSend_faceTimeVideoIsSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTimeVideoIsSupported");
}

id objc_msgSend_facetimeService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "facetimeService");
}

id objc_msgSend_fadeInBottomBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fadeInBottomBar");
}

id objc_msgSend_fadeInWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fadeInWithDuration:");
}

id objc_msgSend_fadeOutWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fadeOutWithDuration:");
}

id objc_msgSend_fadeStatusLabelToAttributedOrPlainString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fadeStatusLabelToAttributedOrPlainString:");
}

id objc_msgSend_failedCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedCall");
}

id objc_msgSend_failedTest_withFailure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedTest:withFailure:");
}

id objc_msgSend_failureAlertController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failureAlertController");
}

id objc_msgSend_failureNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failureNotification");
}

id objc_msgSend_fakeNavigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fakeNavigationBar");
}

id objc_msgSend_fakeNavigationBarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fakeNavigationBarHeight");
}

id objc_msgSend_fbsOrientationObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fbsOrientationObserver");
}

id objc_msgSend_featureFlags(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "featureFlags");
}

id objc_msgSend_features(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "features");
}

id objc_msgSend_fetchAudioControlsGlyphWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAudioControlsGlyphWithCompletion:");
}

id objc_msgSend_fetchAudioRoutesImageWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAudioRoutesImageWithCompletion:");
}

id objc_msgSend_fetchCellularRadioEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCellularRadioEnabled");
}

id objc_msgSend_fetchCurrentCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCurrentCalls");
}

id objc_msgSend_fetchMedicalIDDataWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMedicalIDDataWithCompletion:");
}

id objc_msgSend_fetchMedicalIDWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMedicalIDWithCompletion:");
}

id objc_msgSend_fetchMenuActionsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMenuActionsWithCompletionHandler:");
}

id objc_msgSend_fetchPrefersWhiteColorAtCropRect_image_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPrefersWhiteColorAtCropRect:image:completion:");
}

id objc_msgSend_fetchRTTConversationForCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRTTConversationForCallUUID:");
}

id objc_msgSend_fetchRingerSwitchEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRingerSwitchEnabled");
}

id objc_msgSend_fetchRoutesBackgroundCallCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRoutesBackgroundCallCenter");
}

id objc_msgSend_fetchRoutesForAudioRoutingMenuController_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRoutesForAudioRoutingMenuController:completionHandler:");
}

id objc_msgSend_fieldModeSendButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fieldModeSendButton");
}

id objc_msgSend_fieldModeSendButtonTappedInParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fieldModeSendButtonTappedInParticipantsView:");
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fill");
}

id objc_msgSend_fillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillColor");
}

id objc_msgSend_filterWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterWithType:");
}

id objc_msgSend_filteredRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredRequest");
}

id objc_msgSend_findLocationWithBundle_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findLocationWithBundle:completion:");
}

id objc_msgSend_findMostRecentSilencedCallWithHandleValue_normalizedHandleValue_ignoredIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findMostRecentSilencedCallWithHandleValue:normalizedHandleValue:ignoredIdentifier:");
}

id objc_msgSend_findMyButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findMyButton");
}

id objc_msgSend_finishNewPosterUpdatesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishNewPosterUpdatesWithCompletion:");
}

id objc_msgSend_finishedSubTest_forTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedSubTest:forTest:");
}

id objc_msgSend_finishedThrowAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedThrowAnimation");
}

id objc_msgSend_fire(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fire");
}

id objc_msgSend_fireDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fireDate");
}

id objc_msgSend_firstBaselineAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstBaselineAnchor");
}

id objc_msgSend_firstIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstIndex");
}

id objc_msgSend_firstItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstItem");
}

id objc_msgSend_firstNameComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstNameComponent");
}

id objc_msgSend_firstNameLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstNameLabel");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_firstSubtitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstSubtitleLabel");
}

id objc_msgSend_flipCamera(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flipCamera");
}

id objc_msgSend_flippyView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flippyView");
}

id objc_msgSend_flippyViewContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flippyViewContainer");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatValue");
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "font");
}

id objc_msgSend_fontAttributes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontAttributes");
}

id objc_msgSend_fontDescriptor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptor");
}

id objc_msgSend_fontDescriptorByAddingAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorByAddingAttributes:");
}

id objc_msgSend_fontDescriptorWithDesign_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorWithDesign:");
}

id objc_msgSend_fontDescriptorWithFontAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorWithFontAttributes:");
}

id objc_msgSend_fontDescriptorWithSymbolicTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorWithSymbolicTraits:");
}

id objc_msgSend_fontForParticipantLabelView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontForParticipantLabelView:");
}

id objc_msgSend_fontForParticipantLabelViewStatusLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontForParticipantLabelViewStatusLabel:");
}

id objc_msgSend_fontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontSize");
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithDescriptor:size:");
}

id objc_msgSend_fontWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithSize:");
}

id objc_msgSend_footprint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footprint");
}

id objc_msgSend_forceBlurCurrentPoster(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceBlurCurrentPoster");
}

id objc_msgSend_forceBlurNewPoster(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceBlurNewPoster");
}

id objc_msgSend_forceClearAllDismissalAssertions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceClearAllDismissalAssertions");
}

id objc_msgSend_forceDisplayIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceDisplayIfNeeded");
}

id objc_msgSend_forceUpdateAudioRoutesImageForButton_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceUpdateAudioRoutesImageForButton:completion:");
}

id objc_msgSend_forceUpdateCallControllerForFilteredRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceUpdateCallControllerForFilteredRequest:");
}

id objc_msgSend_forceUpdateCallControllerForSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceUpdateCallControllerForSOS");
}

id objc_msgSend_foregroundAppBundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "foregroundAppBundleIdentifier");
}

id objc_msgSend_formUnionWithCharacterSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formUnionWithCharacterSet:");
}

id objc_msgSend_formattedDisplayID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedDisplayID");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_frameForControlWithActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameForControlWithActionType:");
}

id objc_msgSend_frameForRestoreAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameForRestoreAnimation");
}

id objc_msgSend_fromValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromValue");
}

id objc_msgSend_frontBoardInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frontBoardInterfaceOrientation");
}

id objc_msgSend_frontmostAudioOrVideoCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frontmostAudioOrVideoCall");
}

id objc_msgSend_frontmostBargeCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frontmostBargeCall");
}

id objc_msgSend_frontmostCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frontmostCall");
}

id objc_msgSend_frontmostCallGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frontmostCallGroup");
}

id objc_msgSend_frontmostCallProviderIcon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frontmostCallProviderIcon");
}

id objc_msgSend_frontmostCallProviderIconForAudioCallControlsViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frontmostCallProviderIconForAudioCallControlsViewController:");
}

id objc_msgSend_fullDeviceHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullDeviceHeight");
}

id objc_msgSend_fullDeviceWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullDeviceWidth");
}

id objc_msgSend_fullScreenFocusedParticipantOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullScreenFocusedParticipantOrientation");
}

id objc_msgSend_fullscreenImageData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullscreenImageData");
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_galleryView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "galleryView");
}

id objc_msgSend_gender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gender");
}

id objc_msgSend_generalPasteboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generalPasteboard");
}

id objc_msgSend_generateNumberLabelHorizontalConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateNumberLabelHorizontalConstraints");
}

id objc_msgSend_genericBusinessLogo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genericBusinessLogo");
}

id objc_msgSend_genericSceneOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genericSceneOfType:");
}

id objc_msgSend_geocodeAfter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "geocodeAfter");
}

id objc_msgSend_geocodePostalAddress_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "geocodePostalAddress:completionHandler:");
}

id objc_msgSend_geocoder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "geocoder");
}

id objc_msgSend_getButtonPressGap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getButtonPressGap");
}

id objc_msgSend_getCheckInViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCheckInViewModel");
}

id objc_msgSend_getEvolvedSubscriptionLabelID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getEvolvedSubscriptionLabelID:error:");
}

id objc_msgSend_getHue_saturation_brightness_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getHue:saturation:brightness:alpha:");
}

id objc_msgSend_getParticipantsMarqueeLabelHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getParticipantsMarqueeLabelHeight");
}

id objc_msgSend_getParticipantsView_NotWaiting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getParticipantsView_NotWaiting");
}

id objc_msgSend_getParticipantsView_Waiting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getParticipantsView_Waiting");
}

id objc_msgSend_getParticipantsView_WaitingOrNot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getParticipantsView_WaitingOrNot");
}

id objc_msgSend_getPickableRoutesForCategory_mode_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPickableRoutesForCategory:mode:completion:");
}

id objc_msgSend_getPreferredBackgroundActivitiesToSuppress_whenIsPipped_whenTemporarilyAllowAllStatusBarPills_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPreferredBackgroundActivitiesToSuppress:whenIsPipped:whenTemporarilyAllowAllStatusBarPills:");
}

id objc_msgSend_getSOSDialCountdownViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSOSDialCountdownViewModel");
}

id objc_msgSend_getSetOfCallBufferDismissalAssertions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSetOfCallBufferDismissalAssertions");
}

id objc_msgSend_getSetOfSOSDismissalAssertions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSetOfSOSDismissalAssertions");
}

id objc_msgSend_getSharedContentSourceAvatarWithImageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSharedContentSourceAvatarWithImageHandler:");
}

id objc_msgSend_getState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getState");
}

id objc_msgSend_getStatusLabelHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStatusLabelHeight");
}

id objc_msgSend_getSubscriptionInfoWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSubscriptionInfoWithError:");
}

id objc_msgSend_getVisualVoiceMailWithVisualVoicemailManager_onVoicemailsChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getVisualVoiceMailWithVisualVoicemailManager:onVoicemailsChanged:");
}

id objc_msgSend_getVolume_forCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getVolume:forCategory:");
}

id objc_msgSend_grayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "grayColor");
}

id objc_msgSend_greenTea3PPresentationStyleHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "greenTea3PPresentationStyleHandler");
}

id objc_msgSend_greenTea3PUIHardwareEventHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "greenTea3PUIHardwareEventHandler");
}

id objc_msgSend_greenTeaLinksEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "greenTeaLinksEnabled");
}

id objc_msgSend_groupCall_withOtherCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupCall:withOtherCall:");
}

id objc_msgSend_groupConversations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupConversations");
}

id objc_msgSend_groupUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupUUID");
}

id objc_msgSend_handle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handle");
}

id objc_msgSend_handleActionForWiredHeadsetMiddleButtonLongPress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleActionForWiredHeadsetMiddleButtonLongPress");
}

id objc_msgSend_handleActionForWiredHeadsetMiddleButtonPress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleActionForWiredHeadsetMiddleButtonPress");
}

id objc_msgSend_handleActionForWiredHeadsetMiddleButtonPressWithSourceIdentifier_allowBluetoothAnswerWithoutDowngrade_shouldForceDowngradeToAudio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleActionForWiredHeadsetMiddleButtonPressWithSourceIdentifier:allowBluetoothAnswerWithoutDowngrade:shouldForceDowngradeToAudio:");
}

id objc_msgSend_handleActivationForEndAndLock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleActivationForEndAndLock");
}

id objc_msgSend_handleAlertControllerSendMessageResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAlertControllerSendMessageResponse:");
}

id objc_msgSend_handleAlertDidFinish(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAlertDidFinish");
}

id objc_msgSend_handleAnimationSlidingCompletionResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAnimationSlidingCompletionResponse");
}

id objc_msgSend_handleBackgroundLaunchURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleBackgroundLaunchURL:");
}

id objc_msgSend_handleButtonActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleButtonActions:");
}

id objc_msgSend_handleCallStatusChangedNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCallStatusChangedNotification:");
}

id objc_msgSend_handleCancelPressedInCallBufferScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCancelPressedInCallBufferScreen");
}

id objc_msgSend_handleCommunicationPolicyChangedNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCommunicationPolicyChangedNotification");
}

id objc_msgSend_handleDeviceLockEvent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeviceLockEvent");
}

id objc_msgSend_handleDeviceLockEvent_resultHandler_callAnalyticsLogger_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeviceLockEvent:resultHandler:callAnalyticsLogger:completionHandler:");
}

id objc_msgSend_handleDeviceLockEventOverUPlusOneVideoViewsWithSourceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeviceLockEventOverUPlusOneVideoViewsWithSourceType:");
}

id objc_msgSend_handleDeviceLockEventWithSourceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeviceLockEventWithSourceType:");
}

id objc_msgSend_handleDeviceLockEventWithSourceType_resultHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeviceLockEventWithSourceType:resultHandler:");
}

id objc_msgSend_handleDisableCameraAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDisableCameraAction");
}

id objc_msgSend_handleDismissedCallDisplayStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDismissedCallDisplayStyle");
}

id objc_msgSend_handleDoubleHeightStatusBarTap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDoubleHeightStatusBarTap");
}

id objc_msgSend_handleEnableCameraAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEnableCameraAction");
}

id objc_msgSend_handleFlipCameraAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFlipCameraAction");
}

id objc_msgSend_handleForIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleForIdentifier:error:");
}

id objc_msgSend_handleForPredicate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleForPredicate:error:");
}

id objc_msgSend_handleFrontBoardInterfaceOrientationChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFrontBoardInterfaceOrientationChange:");
}

id objc_msgSend_handleHardwareButtonEvent_eventHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHardwareButtonEvent:eventHandler:");
}

id objc_msgSend_handleHeadsetButtonLongPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHeadsetButtonLongPressed");
}

id objc_msgSend_handleHeadsetButtonPressForCall_sourceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHeadsetButtonPressForCall:sourceIdentifier:");
}

id objc_msgSend_handleHeadsetButtonPressForCall_sourceIdentifier_urlOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHeadsetButtonPressForCall:sourceIdentifier:urlOptions:");
}

id objc_msgSend_handleHeadsetButtonPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHeadsetButtonPressed");
}

id objc_msgSend_handleHomeButtonPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHomeButtonPressed");
}

id objc_msgSend_handleIntent_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleIntent:withCompletion:");
}

id objc_msgSend_handleKeyCommand_receivedCharacterBlock_receivedSpecialCharacterBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleKeyCommand:receivedCharacterBlock:receivedSpecialCharacterBlock:");
}

id objc_msgSend_handleKeyboardEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleKeyboardEvent:");
}

id objc_msgSend_handleLockButtonPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLockButtonPressed");
}

id objc_msgSend_handleLockScreenStatusChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLockScreenStatusChanged");
}

id objc_msgSend_handleMediaUploadButtonTapped(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMediaUploadButtonTapped");
}

id objc_msgSend_handleMuteMicrophoneAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMuteMicrophoneAction");
}

id objc_msgSend_handleMutedTalkerBannerTap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMutedTalkerBannerTap");
}

id objc_msgSend_handleNavigationControllerIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNavigationControllerIfNecessary:");
}

id objc_msgSend_handlePIPViewControllerRestoredAfterPIPStopped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePIPViewControllerRestoredAfterPIPStopped:");
}

id objc_msgSend_handlePanGestureFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePanGestureFinished:");
}

id objc_msgSend_handlePresentationModeChanged_scene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePresentationModeChanged:scene:");
}

id objc_msgSend_handleSOSActivationIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSOSActivationIfNecessary");
}

id objc_msgSend_handleScreenTimeActivationIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleScreenTimeActivationIfNecessary");
}

id objc_msgSend_handleShowSystemHUDAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleShowSystemHUDAction");
}

id objc_msgSend_handleStateChangeForAVLessConversation_fromConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleStateChangeForAVLessConversation:fromConversation:");
}

id objc_msgSend_handleSupportsEmergencyFallbackChangedForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSupportsEmergencyFallbackChangedForCall:");
}

id objc_msgSend_handleUnmuteMicrophoneAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUnmuteMicrophoneAction");
}

id objc_msgSend_handleVideoStreamingButtonTapped(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleVideoStreamingButtonTapped");
}

id objc_msgSend_handleViewDidAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleViewDidAppear:");
}

id objc_msgSend_handleViewDidDisappear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleViewDidDisappear:");
}

id objc_msgSend_handleViewWillAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleViewWillAppear:");
}

id objc_msgSend_handleViewWillDisappear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleViewWillDisappear:");
}

id objc_msgSend_handleVolumeChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleVolumeChanges");
}

id objc_msgSend_handleVolumeDownButtonPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleVolumeDownButtonPressed");
}

id objc_msgSend_handleVolumeHUDEnablement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleVolumeHUDEnablement");
}

id objc_msgSend_handleVolumeUpButtonPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleVolumeUpButtonPressed");
}

id objc_msgSend_handleWithDestinationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleWithDestinationID:");
}

id objc_msgSend_handler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handler");
}

id objc_msgSend_handles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handles");
}

id objc_msgSend_handlesCallWaitingCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlesCallWaitingCalls");
}

id objc_msgSend_handlesForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlesForCall:");
}

id objc_msgSend_handlingKeypadPress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlingKeypadPress");
}

id objc_msgSend_handoffConversation_toTVDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handoffConversation:toTVDevice:completion:");
}

id objc_msgSend_handoffEligibleConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handoffEligibleConversation");
}

id objc_msgSend_handsetDialerSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handsetDialerSize");
}

id objc_msgSend_handsetDialerSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handsetDialerSpacing");
}

id objc_msgSend_handsetRouteAvailableForUnformattedPickableRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handsetRouteAvailableForUnformattedPickableRoutes:");
}

id objc_msgSend_hardPauseButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hardPauseButton");
}

id objc_msgSend_hardPauseButtonDidChangeVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hardPauseButtonDidChangeVisibility:");
}

id objc_msgSend_hardPauseButtonDidSendHardPauseDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hardPauseButtonDidSendHardPauseDigits:");
}

id objc_msgSend_hardPauseDigitsDisplayString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hardPauseDigitsDisplayString");
}

id objc_msgSend_hardPauseDigitsState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hardPauseDigitsState");
}

id objc_msgSend_hasActiveAndIncomingCallPresent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasActiveAndIncomingCallPresent");
}

id objc_msgSend_hasActiveOrPendingFullScreenCallScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasActiveOrPendingFullScreenCallScene");
}

id objc_msgSend_hasActiveOrPendingInCallPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasActiveOrPendingInCallPresentation");
}

id objc_msgSend_hasAdoptedModernInCallAPI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAdoptedModernInCallAPI");
}

id objc_msgSend_hasAirPodsAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAirPodsAvailable");
}

id objc_msgSend_hasAirPodsInEar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAirPodsInEar");
}

id objc_msgSend_hasAnyData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAnyData");
}

id objc_msgSend_hasAssociatedCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAssociatedCall");
}

id objc_msgSend_hasBannersEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasBannersEnabled");
}

id objc_msgSend_hasBeenRedirected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasBeenRedirected");
}

id objc_msgSend_hasCarKitRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCarKitRoute");
}

id objc_msgSend_hasCurrentAudioCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCurrentAudioCalls");
}

id objc_msgSend_hasCurrentCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCurrentCalls");
}

id objc_msgSend_hasCurrentVideoCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCurrentVideoCalls");
}

id objc_msgSend_hasDismissalAssertions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasDismissalAssertions");
}

id objc_msgSend_hasEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasEntitlement:");
}

id objc_msgSend_hasEverAppearedInWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasEverAppearedInWindow");
}

id objc_msgSend_hasExistingDismissedInCallScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasExistingDismissedInCallScene");
}

id objc_msgSend_hasExistingFullScreenInCallScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasExistingFullScreenInCallScene");
}

id objc_msgSend_hasInvertedUIElementColorsBasedOnPoster(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasInvertedUIElementColorsBasedOnPoster");
}

id objc_msgSend_hasJoinedActivitySession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasJoinedActivitySession");
}

id objc_msgSend_hasKeypadUpdated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasKeypadUpdated");
}

id objc_msgSend_hasLastSeenPosterForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasLastSeenPosterForCall:");
}

id objc_msgSend_hasMedicalIDSlider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasMedicalIDSlider");
}

id objc_msgSend_hasMultipleSenderIdentities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasMultipleSenderIdentities");
}

id objc_msgSend_hasNoCallsOrOnlyEndedCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasNoCallsOrOnlyEndedCalls");
}

id objc_msgSend_hasOngoingEmergencyCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasOngoingEmergencyCall");
}

id objc_msgSend_hasParticipantVideo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasParticipantVideo");
}

id objc_msgSend_hasParticipantVideoForActiveConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasParticipantVideoForActiveConversation");
}

id objc_msgSend_hasPendingCompletionForSceneType_presentationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPendingCompletionForSceneType:presentationMode:");
}

id objc_msgSend_hasPendingOrExistingSceneOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPendingOrExistingSceneOfType:");
}

id objc_msgSend_hasPendingSceneOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPendingSceneOfType:");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasSendCustomMessageCapability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSendCustomMessageCapability");
}

id objc_msgSend_hasSendMessageCapability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSendMessageCapability");
}

id objc_msgSend_hasSetupForScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSetupForScene");
}

id objc_msgSend_hasStartedInitialSuppressionOfInCallStatusBarForFullscreenUIReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasStartedInitialSuppressionOfInCallStatusBarForFullscreenUIReason");
}

id objc_msgSend_hasStatusBarSuppressionReasons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasStatusBarSuppressionReasons");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasTorch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasTorch");
}

id objc_msgSend_hasTwoMiddleSliders(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasTwoMiddleSliders");
}

id objc_msgSend_hasUserScoreFeedbackViewHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasUserScoreFeedbackViewHidden");
}

id objc_msgSend_hasValidContactsToMessage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasValidContactsToMessage");
}

id objc_msgSend_hasValidNetworkPreferences(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasValidNetworkPreferences");
}

id objc_msgSend_headphonesRouteGlyphForDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headphonesRouteGlyphForDisplayStyle:");
}

id objc_msgSend_healthStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "healthStore");
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightAnchor");
}

id objc_msgSend_heightConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightConstraints");
}

id objc_msgSend_heightOfCallScreeningButtonPlusButtonSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightOfCallScreeningButtonPlusButtonSpacing");
}

id objc_msgSend_heldCallControlsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heldCallControlsView");
}

id objc_msgSend_hidEventMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hidEventMonitor");
}

id objc_msgSend_hide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hide");
}

id objc_msgSend_hide_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hide:completion:");
}

id objc_msgSend_hideBadgesOnly(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideBadgesOnly");
}

id objc_msgSend_hideCarPlayUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideCarPlayUI");
}

id objc_msgSend_hideEffectsBrowser(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideEffectsBrowser");
}

id objc_msgSend_hideFirstAndLastNameAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideFirstAndLastNameAnimated:");
}

id objc_msgSend_hideFirstNameLabelOnKeypad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideFirstNameLabelOnKeypad");
}

id objc_msgSend_hideHardwareButtonView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideHardwareButtonView");
}

id objc_msgSend_hideMedicalIDWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideMedicalIDWithCompletion:");
}

id objc_msgSend_hideOrShowKeypadBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideOrShowKeypadBackgroundView");
}

id objc_msgSend_hideOrShowScreeningBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideOrShowScreeningBackgroundView");
}

id objc_msgSend_hideOrShowThirdPartyBackgroundImageWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideOrShowThirdPartyBackgroundImageWithImage:");
}

id objc_msgSend_hideTrackLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideTrackLabel:");
}

id objc_msgSend_hideTrackLabelIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideTrackLabelIfNecessary:");
}

id objc_msgSend_hideVideoOverlayAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideVideoOverlayAnimated:");
}

id objc_msgSend_hidesLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hidesLabel");
}

id objc_msgSend_highlightKeyAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightKeyAtIndex:");
}

id objc_msgSend_highlighted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlighted");
}

id objc_msgSend_highlightedCircleViewAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedCircleViewAlpha");
}

id objc_msgSend_highlightedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedColor");
}

id objc_msgSend_hitTest_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hitTest:withEvent:");
}

id objc_msgSend_holdActiveAndAnswerWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "holdActiveAndAnswerWithRequest:");
}

id objc_msgSend_holdCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "holdCall:");
}

id objc_msgSend_homeButtonOffsetForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeButtonOffsetForView:");
}

id objc_msgSend_horizontalPaddingConstantForTrailingConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalPaddingConstantForTrailingConstraints");
}

id objc_msgSend_horizontalPaddingForMiniWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalPaddingForMiniWindow");
}

id objc_msgSend_horizontalPositioningConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalPositioningConstraint");
}

id objc_msgSend_icon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "icon");
}

id objc_msgSend_iconInParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconInParticipantsView:");
}

id objc_msgSend_iconSizeRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconSizeRatio");
}

id objc_msgSend_iconTemplateImageData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconTemplateImageData");
}

id objc_msgSend_iconView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconView");
}

id objc_msgSend_ics_hasTooManyCallsForCallWaitingBanner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ics_hasTooManyCallsForCallWaitingBanner");
}

id objc_msgSend_ics_requestTransitionToPresentationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ics_requestTransitionToPresentationMode:");
}

id objc_msgSend_ics_requestTransitionToPresentationMode_shouldDismissCMASAlerts_analyticsSource_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ics_requestTransitionToPresentationMode:shouldDismissCMASAlerts:analyticsSource:completion:");
}

id objc_msgSend_ics_sceneType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ics_sceneType");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_identifierWithPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifierWithPid:");
}

id objc_msgSend_imNicknameProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imNicknameProvider");
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "image");
}

id objc_msgSend_imageColorForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageColorForState:");
}

id objc_msgSend_imageData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageData");
}

id objc_msgSend_imageDataAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageDataAvailable");
}

id objc_msgSend_imageEdgeInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageEdgeInsets");
}

id objc_msgSend_imageFlippedForRightToLeftLayoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageFlippedForRightToLeftLayoutDirection");
}

id objc_msgSend_imageForAction_callState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForAction:callState:");
}

id objc_msgSend_imageForControlType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForControlType:");
}

id objc_msgSend_imageForItemInBar_withActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForItemInBar:withActionType:");
}

id objc_msgSend_imageForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForState:");
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:");
}

id objc_msgSend_imageNamed_inBundle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:inBundle:compatibleWithTraitCollection:");
}

id objc_msgSend_imageRectForContentRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageRectForContentRect:");
}

id objc_msgSend_imageRefFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageRefFrom:");
}

id objc_msgSend_imageURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageURL");
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageView");
}

id objc_msgSend_imageWithCGImage_scale_orientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:scale:orientation:");
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithData:");
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_imageWithTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithTintColor:");
}

id objc_msgSend_inBrandedCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inBrandedCall");
}

id objc_msgSend_inCallBottomBarAssetSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallBottomBarAssetSize");
}

id objc_msgSend_inCallBottomBarLowerOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallBottomBarLowerOffset");
}

id objc_msgSend_inCallBottomBarMaxTitleSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallBottomBarMaxTitleSize");
}

id objc_msgSend_inCallBottomBarSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallBottomBarSpacing");
}

id objc_msgSend_inCallButtonType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallButtonType");
}

id objc_msgSend_inCallButtonWasTapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallButtonWasTapped:");
}

id objc_msgSend_inCallControlAlignment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallControlAlignment");
}

id objc_msgSend_inCallControlButtonVerticalSpacingRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallControlButtonVerticalSpacingRatio");
}

id objc_msgSend_inCallControlSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallControlSize");
}

id objc_msgSend_inCallControlSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallControlSpacing");
}

id objc_msgSend_inCallControls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallControls");
}

id objc_msgSend_inCallControlsButtonAvatarOnly(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallControlsButtonAvatarOnly");
}

id objc_msgSend_inCallControlsButtonNoPhotoNoAvatar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallControlsButtonNoPhotoNoAvatar");
}

id objc_msgSend_inCallControlsEmergencyCallButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallControlsEmergencyCallButton");
}

id objc_msgSend_inCallControlsKeypadButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallControlsKeypadButton");
}

id objc_msgSend_inCallDirectoryCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallDirectoryCall");
}

id objc_msgSend_inCallFaceTimeOverlayUISize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallFaceTimeOverlayUISize");
}

id objc_msgSend_inCallRootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallRootViewController");
}

id objc_msgSend_inCallRootViewControllerClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallRootViewControllerClass");
}

id objc_msgSend_inCallShellViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallShellViewController");
}

id objc_msgSend_inCallSlideToAnswerSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallSlideToAnswerSize");
}

id objc_msgSend_inCallState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallState");
}

id objc_msgSend_inCallStatusBarSuppressionReasons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallStatusBarSuppressionReasons");
}

id objc_msgSend_inCallWindowScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inCallWindowScene");
}

id objc_msgSend_inComingCallAndInCallControlsBottomPaddingRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inComingCallAndInCallControlsBottomPaddingRatio");
}

id objc_msgSend_inComingCallSupplementalButtonAndMainButtonSpacingRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inComingCallSupplementalButtonAndMainButtonSpacingRatio");
}

id objc_msgSend_incomingCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incomingCall");
}

id objc_msgSend_incomingCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incomingCalls");
}

id objc_msgSend_incomingVideoCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incomingVideoCall");
}

id objc_msgSend_incomingVideoCallUsingCallContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incomingVideoCallUsingCallContainer:");
}

id objc_msgSend_indexForParticipantLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexForParticipantLabel:");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexPathForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForCell:");
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForRow:inSection:");
}

id objc_msgSend_indexPathsForSelectedItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathsForSelectedItems");
}

id objc_msgSend_indexSetToHighlightDigitsInText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetToHighlightDigitsInText:");
}

id objc_msgSend_infoLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoLabel");
}

id objc_msgSend_infoView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoView");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init");
}

id objc_msgSend_initForButtonType_callState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForButtonType:callState:");
}

id objc_msgSend_initForCharacter_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForCharacter:style:");
}

id objc_msgSend_initForScreenSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForScreenSharing:");
}

id objc_msgSend_initWithAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAction:");
}

id objc_msgSend_initWithAction_diameter_callState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAction:diameter:callState:");
}

id objc_msgSend_initWithAction_diameter_callState_captureView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAction:diameter:callState:captureView:");
}

id objc_msgSend_initWithAction_diameter_callState_sizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAction:diameter:callState:sizeCategory:");
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityIndicatorStyle:");
}

id objc_msgSend_initWithActivitySessionIdentifier_appBundleIdentifier_stateTransitionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:");
}

id objc_msgSend_initWithActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityType:");
}

id objc_msgSend_initWithAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAlert:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithBannerPresentationManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBannerPresentationManager:");
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:target:action:");
}

id objc_msgSend_initWithBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundle:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithBundleIdentifier_flags_reason_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:flags:reason:name:");
}

id objc_msgSend_initWithBundleType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleType:");
}

id objc_msgSend_initWithButtons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithButtons:");
}

id objc_msgSend_initWithCalendarIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCalendarIdentifier:");
}

id objc_msgSend_initWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCall:");
}

id objc_msgSend_initWithCall_posterNameTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCall:posterNameTextView:");
}

id objc_msgSend_initWithCall_posterNameTextView_priorityPosterNameTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCall:posterNameTextView:priorityPosterNameTextView:");
}

id objc_msgSend_initWithCall_presenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCall:presenter:");
}

id objc_msgSend_initWithCallCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallCenter:");
}

id objc_msgSend_initWithCallCenter_notificationCenter_sceneManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallCenter:notificationCenter:sceneManager:");
}

id objc_msgSend_initWithCallDisplayStyleManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallDisplayStyleManager:");
}

id objc_msgSend_initWithCallDisplayStyleManager_callCenter_featureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallDisplayStyleManager:callCenter:featureFlags:");
}

id objc_msgSend_initWithCallDisplayStyleManager_callCenter_width_inCallRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallDisplayStyleManager:callCenter:width:inCallRootViewController:");
}

id objc_msgSend_initWithCallDisplayStyleManager_contactsCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallDisplayStyleManager:contactsCache:");
}

id objc_msgSend_initWithCallDisplayStyleManager_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallDisplayStyleManager:delegate:");
}

id objc_msgSend_initWithCallProvider_dialType_senderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallProvider:dialType:senderIdentityUUID:");
}

id objc_msgSend_initWithCallProviderManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallProviderManager:");
}

id objc_msgSend_initWithCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallback:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithChatGuid_chatHandles_displayName_handle_contactIdentifier_resultSourceType_autocompleteResult_recipients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithChatGuid:chatHandles:displayName:handle:contactIdentifier:resultSourceType:autocompleteResult:recipients:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithConfiguration_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:context:");
}

id objc_msgSend_initWithConfiguration_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:source:");
}

id objc_msgSend_initWithConfiguration_style_nameString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:style:nameString:");
}

id objc_msgSend_initWithContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContact:");
}

id objc_msgSend_initWithContact_contactStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContact:contactStore:");
}

id objc_msgSend_initWithContact_wantsBlur_isCommunicationSafetyEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContact:wantsBlur:isCommunicationSafetyEnabled:");
}

id objc_msgSend_initWithContacts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContacts:");
}

id objc_msgSend_initWithContactsDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContactsDataSource:");
}

id objc_msgSend_initWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfFile:");
}

id objc_msgSend_initWithControlTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithControlTypes:");
}

id objc_msgSend_initWithConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversation:");
}

id objc_msgSend_initWithConversationLink_otherInvitedHandles_sendLetMeInRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversationLink:otherInvitedHandles:sendLetMeInRequest:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithDataProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataProviders:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:delegateQueue:");
}

id objc_msgSend_initWithDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:queue:");
}

id objc_msgSend_initWithDialAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDialAction:");
}

id objc_msgSend_initWithDialRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDialRequest:completion:");
}

id objc_msgSend_initWithDialRequest_dialAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDialRequest:dialAction:");
}

id objc_msgSend_initWithDialRequest_dialAction_title_buttonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDialRequest:dialAction:title:buttonTitle:");
}

id objc_msgSend_initWithDialerType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDialerType:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDuration_controlPoint1_controlPoint2_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDuration:controlPoint1:controlPoint2:animations:");
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffect:");
}

id objc_msgSend_initWithEffectiveBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffectiveBundle:");
}

id objc_msgSend_initWithFormat_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:arguments:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_collectionViewLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:collectionViewLayout:");
}

id objc_msgSend_initWithFrame_cornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:cornerRadius:");
}

id objc_msgSend_initWithFrame_forDialerType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:forDialerType:");
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:style:");
}

id objc_msgSend_initWithFrame_vibrantSettings_large_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:vibrantSettings:large:");
}

id objc_msgSend_initWithHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandle:");
}

id objc_msgSend_initWithHandle_label_isSuggested_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandle:label:isSuggested:");
}

id objc_msgSend_initWithHealthStore_medicalIDData_displayConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHealthStore:medicalIDData:displayConfiguration:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:");
}

id objc_msgSend_initWithIncomingCall_customMessagePresentingViewController_declineCallService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIncomingCall:customMessagePresentingViewController:declineCallService:");
}

id objc_msgSend_initWithIntent_response_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIntent:response:");
}

id objc_msgSend_initWithInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInterval:");
}

id objc_msgSend_initWithIsCommunicationSafety_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIsCommunicationSafety:");
}

id objc_msgSend_initWithIsMounted_probability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIsMounted:probability:");
}

id objc_msgSend_initWithJoinRequest_dialAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithJoinRequest:dialAction:");
}

id objc_msgSend_initWithKeyPadButtonType_usingSmallFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyPadButtonType:usingSmallFont:");
}

id objc_msgSend_initWithKeysToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeysToFetch:");
}

id objc_msgSend_initWithLabel_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLabel:value:");
}

id objc_msgSend_initWithLabeledValue_entityID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLabeledValue:entityID:");
}

id objc_msgSend_initWithLatitude_longitude_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLatitude:longitude:");
}

id objc_msgSend_initWithMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMessageType:");
}

id objc_msgSend_initWithName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:value:");
}

id objc_msgSend_initWithNickname_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNickname:");
}

id objc_msgSend_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:");
}

id objc_msgSend_initWithPrivateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrivateStyle:");
}

id objc_msgSend_initWithProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProvider:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithQueue_wantsCallNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:wantsCallNotifications:");
}

id objc_msgSend_initWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReason:");
}

id objc_msgSend_initWithReason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReason:userInfo:");
}

id objc_msgSend_initWithRecipients_content_groupName_serviceName_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecipients:content:groupName:serviceName:sender:");
}

id objc_msgSend_initWithRequest_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:delegate:");
}

id objc_msgSend_initWithRootController_callDisplayStyleManager_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootController:callDisplayStyleManager:flags:");
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootViewController:");
}

id objc_msgSend_initWithSOSHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSOSHandle:");
}

id objc_msgSend_initWithSOSHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSOSHandles:");
}

id objc_msgSend_initWithSceneBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSceneBundleIdentifier:");
}

id objc_msgSend_initWithScoreController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithScoreController:");
}

id objc_msgSend_initWithSenderIdentities_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSenderIdentities:completion:");
}

id objc_msgSend_initWithServiceName_viewControllerClassName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceName:viewControllerClassName:");
}

id objc_msgSend_initWithSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSettings:");
}

id objc_msgSend_initWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:");
}

id objc_msgSend_initWithSlidingButtonType_appearanceType_callState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSlidingButtonType:appearanceType:callState:");
}

id objc_msgSend_initWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithState:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:attributes:");
}

id objc_msgSend_initWithString_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:type:");
}

id objc_msgSend_initWithStyle_dataSource_delegate_wantsAsyncReload_menuChangeHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:dataSource:delegate:wantsAsyncReload:menuChangeHandler:");
}

id objc_msgSend_initWithSymbolType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSymbolType:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithText_andFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithText:andFont:");
}

id objc_msgSend_initWithText_image_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithText:image:");
}

id objc_msgSend_initWithTimeInterval_serviceIdentifier_target_selector_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeInterval:serviceIdentifier:target:selector:userInfo:");
}

id objc_msgSend_initWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:");
}

id objc_msgSend_initWithTitle_frame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:frame:");
}

id objc_msgSend_initWithTitle_indicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:indicatorStyle:");
}

id objc_msgSend_initWithTitle_message_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:message:");
}

id objc_msgSend_initWithTitle_theme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:theme:");
}

id objc_msgSend_initWithTitleString_horizontalTitleBoundingRect_verticalTitleBoundingRect_imageAssetID_personalPoster_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitleString:horizontalTitleBoundingRect:verticalTitleBoundingRect:imageAssetID:personalPoster:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithType_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:value:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUserActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserActivity:");
}

id objc_msgSend_initWithUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserInterfaceStyle:");
}

id objc_msgSend_initWithVideoMessageURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVideoMessageURL:");
}

id objc_msgSend_initWithView_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithView:type:");
}

id objc_msgSend_initWithViewController_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithViewController:selector:");
}

id objc_msgSend_initWithWindowScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWindowScene:");
}

id objc_msgSend_initialStateForBannerButtonsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialStateForBannerButtonsView");
}

id objc_msgSend_initializeCachedValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeCachedValues");
}

id objc_msgSend_initiateCallForConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initiateCallForConversationRequest:");
}

id objc_msgSend_input(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "input");
}

id objc_msgSend_inputSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inputSettings");
}

id objc_msgSend_insertArrangedSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertArrangedSubview:atIndex:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertStringAtCurrentPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertStringAtCurrentPosition:");
}

id objc_msgSend_insertStringAtCurrentPosition_deletingPreviousCharacter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertStringAtCurrentPosition:deletingPreviousCharacter:");
}

id objc_msgSend_insertSublayer_below_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSublayer:below:");
}

id objc_msgSend_insertSubview_above_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:above:");
}

id objc_msgSend_insertSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:atIndex:");
}

id objc_msgSend_insertSubview_below_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:below:");
}

id objc_msgSend_insertSubview_belowSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:belowSubview:");
}

id objc_msgSend_installCameraStateMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installCameraStateMonitor");
}

id objc_msgSend_installPillStateMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installPillStateMonitor");
}

id objc_msgSend_instanceMethodSignatureForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instanceMethodSignatureForSelector:");
}

id objc_msgSend_insulatorView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insulatorView");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_intentResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intentResponse");
}

id objc_msgSend_interaction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interaction");
}

id objc_msgSend_interactionModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactionModel");
}

id objc_msgSend_interactions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactions");
}

id objc_msgSend_interactiveStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactiveStart");
}

id objc_msgSend_interactiveStartTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactiveStartTime");
}

id objc_msgSend_interactiveStartWithCountdownModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactiveStartWithCountdownModel:");
}

id objc_msgSend_interactiveStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactiveStop:");
}

id objc_msgSend_interactivelyAnimateSlidingButtonBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactivelyAnimateSlidingButtonBlock");
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceOrientation");
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectSet:");
}

id objc_msgSend_intersectsSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectsSet:");
}

id objc_msgSend_interval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interval");
}

id objc_msgSend_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intrinsicContentSize");
}

id objc_msgSend_intrinsicWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intrinsicWidth");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate");
}

id objc_msgSend_invalidateAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateAssertion");
}

id objc_msgSend_invalidateCountdownAndStopSounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateCountdownAndStopSounds");
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateIntrinsicContentSize");
}

id objc_msgSend_invalidatePersistentSystemApertureAlertWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidatePersistentSystemApertureAlertWithReason:");
}

id objc_msgSend_invalidatePreventSuspensionAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidatePreventSuspensionAssertion");
}

id objc_msgSend_invalidateStatusLabelTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateStatusLabelTimer");
}

id objc_msgSend_invertColorCallRecordingButtonColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertColorCallRecordingButtonColor:");
}

id objc_msgSend_invertColorForBottomButtonsBasedOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertColorForBottomButtonsBasedOn:");
}

id objc_msgSend_invertColorForCallDetailsButtonBasedOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertColorForCallDetailsButtonBasedOn:");
}

id objc_msgSend_invertColorForPosterBadgeViewBasedOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertColorForPosterBadgeViewBasedOn:");
}

id objc_msgSend_invertColorForPosterBadgeViewIfSnapshotPoster(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertColorForPosterBadgeViewIfSnapshotPoster");
}

id objc_msgSend_invertNecessaryUIElementsBasedOnPosterImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertNecessaryUIElementsBasedOnPosterImage:");
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertedSet");
}

id objc_msgSend_invocationWithMethodSignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invocationWithMethodSignature:");
}

id objc_msgSend_invoke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invoke");
}

id objc_msgSend_invokeAlertWithRequestUnlock_automaticallyInvoked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeAlertWithRequestUnlock:automaticallyInvoked:");
}

id objc_msgSend_ioSurface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ioSurface");
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isActive");
}

id objc_msgSend_isActivelyUsing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isActivelyUsing");
}

id objc_msgSend_isAddCallAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAddCallAllowed");
}

id objc_msgSend_isAirPodsRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAirPodsRoute");
}

id objc_msgSend_isAlertRequestPending(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAlertRequestPending");
}

id objc_msgSend_isAmbiguous(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAmbiguous");
}

id objc_msgSend_isAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnimating");
}

id objc_msgSend_isAnswerRequestURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnswerRequestURL");
}

id objc_msgSend_isAnsweringMachineAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnsweringMachineAvailable");
}

id objc_msgSend_isAttachedToWindowedAccessoryWithValidFrameForCurrentScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAttachedToWindowedAccessoryWithValidFrameForCurrentScene");
}

id objc_msgSend_isAuxiliary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAuxiliary");
}

id objc_msgSend_isAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAvailable");
}

id objc_msgSend_isBackgroundCountdownRunning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBackgroundCountdownRunning");
}

id objc_msgSend_isBeingDismissed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeingDismissed");
}

id objc_msgSend_isBeingPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeingPresented");
}

id objc_msgSend_isBeingRemoteControlled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeingRemoteControlled");
}

id objc_msgSend_isBeingShownAboveCoverSheet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeingShownAboveCoverSheet");
}

id objc_msgSend_isBlocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBlocked");
}

id objc_msgSend_isBluetooth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBluetooth");
}

id objc_msgSend_isBluetoothLE(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBluetoothLE");
}

id objc_msgSend_isBranded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBranded");
}

id objc_msgSend_isBroadcastingScreenSharing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBroadcastingScreenSharing");
}

id objc_msgSend_isButtonLayoutEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isButtonLayoutEnabled");
}

id objc_msgSend_isCallBufferDismissalAssertionActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCallBufferDismissalAssertionActive");
}

id objc_msgSend_isCallDueToMountedState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCallDueToMountedState");
}

id objc_msgSend_isCallRinging(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCallRinging");
}

id objc_msgSend_isCallWithSideButtonPressesEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCallWithSideButtonPressesEnabled");
}

id objc_msgSend_isCallWithVolumeLockHoldEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCallWithVolumeLockHoldEnabled");
}

id objc_msgSend_isCallbackAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCallbackAllowed");
}

id objc_msgSend_isCarAudio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCarAudio");
}

id objc_msgSend_isCarKitRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCarKitRoute");
}

id objc_msgSend_isChildOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isChildOf:");
}

id objc_msgSend_isClarityBoardActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isClarityBoardActive");
}

id objc_msgSend_isClarityBoardEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isClarityBoardEnabled");
}

id objc_msgSend_isCommunicationSafetyEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCommunicationSafetyEnabled");
}

id objc_msgSend_isConferenced(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConferenced");
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConnected");
}

id objc_msgSend_isConnecting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConnecting");
}

id objc_msgSend_isContactBlockedWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isContactBlockedWithCall:");
}

id objc_msgSend_isContactNudityDetectionEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isContactNudityDetectionEnabled");
}

id objc_msgSend_isContactStoreAuthorized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isContactStoreAuthorized");
}

id objc_msgSend_isContentViewRotatingOrResizing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isContentViewRotatingOrResizing");
}

id objc_msgSend_isContinuitySession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isContinuitySession");
}

id objc_msgSend_isConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConversation");
}

id objc_msgSend_isCurrentViewControllerAudio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentViewControllerAudio");
}

id objc_msgSend_isCurrentlyPicked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentlyPicked");
}

id objc_msgSend_isDefaultRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDefaultRoute");
}

id objc_msgSend_isDeviceAttachedToWindowedAccessoryForScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDeviceAttachedToWindowedAccessoryForScene:");
}

id objc_msgSend_isDialPadEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDialPadEnabled");
}

id objc_msgSend_isDismissable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDismissable");
}

id objc_msgSend_isDisplayStyleAmbient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDisplayStyleAmbient");
}

id objc_msgSend_isDisplayStyleBanner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDisplayStyleBanner");
}

id objc_msgSend_isDisplayStyleMiniWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDisplayStyleMiniWindow");
}

id objc_msgSend_isDominoEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDominoEnabled");
}

id objc_msgSend_isDynamic(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDynamic");
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEditing");
}

id objc_msgSend_isEligibleForManualScreening(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEligibleForManualScreening");
}

id objc_msgSend_isEmergency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEmergency");
}

id objc_msgSend_isEmergencyCallbackModeEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEmergencyCallbackModeEnabled");
}

id objc_msgSend_isEmergencyNumberForDigits_senderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEmergencyNumberForDigits:senderIdentityUUID:");
}

id objc_msgSend_isEmpty(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEmpty");
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnabled");
}

id objc_msgSend_isEndAndAnswerAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEndAndAnswerAllowed");
}

id objc_msgSend_isEndpointOnCurrentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEndpointOnCurrentDevice");
}

id objc_msgSend_isEnhancedEmergencyEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnhancedEmergencyEnabled");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToCall:");
}

id objc_msgSend_isEqualToConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToConversation:");
}

id objc_msgSend_isEqualToHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToHandle:");
}

id objc_msgSend_isEqualToRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToRoute:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExplicitTransferSupportedForSubscriptionLabelIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExplicitTransferSupportedForSubscriptionLabelIdentifier:");
}

id objc_msgSend_isFaceTimeLoggedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFaceTimeLoggedIn");
}

id objc_msgSend_isFaceTimeMultiwayURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFaceTimeMultiwayURL");
}

id objc_msgSend_isFaceTimeNeedsBackgroundLaunchURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFaceTimeNeedsBackgroundLaunchURL");
}

id objc_msgSend_isFaceTimeOpenLinkURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFaceTimeOpenLinkURL");
}

id objc_msgSend_isFaceTimeProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFaceTimeProvider");
}

id objc_msgSend_isFailureExpected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFailureExpected");
}

id objc_msgSend_isFirstTimeInCallHistoryWithHandleValue_normalizedHandleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFirstTimeInCallHistoryWithHandleValue:normalizedHandleValue:");
}

id objc_msgSend_isFocused(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFocused");
}

id objc_msgSend_isFrontmostCallFaceTimeAudio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFrontmostCallFaceTimeAudio");
}

id objc_msgSend_isFullScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFullScreen");
}

id objc_msgSend_isGeminiCapable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isGeminiCapable");
}

id objc_msgSend_isGeocoding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isGeocoding");
}

id objc_msgSend_isGreenTea(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isGreenTea");
}

id objc_msgSend_isGuest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isGuest");
}

id objc_msgSend_isHeroImageEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHeroImageEnabled");
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHidden");
}

id objc_msgSend_isHighlighted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHighlighted");
}

id objc_msgSend_isHoldAndAnswerAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHoldAndAnswerAllowed");
}

id objc_msgSend_isHoldEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHoldEnabled");
}

id objc_msgSend_isHostedInRemoteViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHostedInRemoteViewController");
}

id objc_msgSend_isHostedOnCurrentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHostedOnCurrentDevice");
}

id objc_msgSend_isIPadIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isIPadIdiom");
}

id objc_msgSend_isInLostMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInLostMode");
}

id objc_msgSend_isInVideoMessageFlow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInVideoMessageFlow");
}

id objc_msgSend_isIncoming(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isIncoming");
}

id objc_msgSend_isIncomingCallBannerEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isIncomingCallBannerEnabled");
}

id objc_msgSend_isInitializationBlockQueued(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInitializationBlockQueued");
}

id objc_msgSend_isInstalled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInstalled");
}

id objc_msgSend_isInternalInstall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInternalInstall");
}

id objc_msgSend_isKappaUnmasked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isKappaUnmasked");
}

id objc_msgSend_isKeypadAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isKeypadAllowed");
}

id objc_msgSend_isKeypadEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isKeypadEnabled");
}

id objc_msgSend_isLPEMModeSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLPEMModeSupported:");
}

id objc_msgSend_isLarge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLarge");
}

id objc_msgSend_isLaunchForIncomingCallURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLaunchForIncomingCallURL");
}

id objc_msgSend_isLaunchForScreeningURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLaunchForScreeningURL");
}

id objc_msgSend_isLocallyCreated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocallyCreated");
}

id objc_msgSend_isLockScreenMessagingAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLockScreenMessagingAllowed");
}

id objc_msgSend_isLockToEndCallEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLockToEndCallEnabled");
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMainThread");
}

id objc_msgSend_isMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMe");
}

id objc_msgSend_isMenuVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMenuVisible");
}

id objc_msgSend_isMergeCallsAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMergeCallsAllowed");
}

id objc_msgSend_isMerging(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMerging");
}

id objc_msgSend_isMessagingAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMessagingAllowed");
}

id objc_msgSend_isMicIndicatorVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMicIndicatorVisible");
}

id objc_msgSend_isMonitoring(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMonitoring");
}

id objc_msgSend_isMountStateTrackingEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMountStateTrackingEnabled");
}

id objc_msgSend_isMounted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMounted");
}

id objc_msgSend_isMuted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMuted");
}

id objc_msgSend_isNameAndPhotoC3Enabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNameAndPhotoC3Enabled");
}

id objc_msgSend_isNumeric(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNumeric");
}

id objc_msgSend_isOnHold(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOnHold");
}

id objc_msgSend_isOneToOneModeEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOneToOneModeEnabled");
}

id objc_msgSend_isOrientationLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOrientationLocked");
}

id objc_msgSend_isOutgoing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOutgoing");
}

id objc_msgSend_isPIPProxyActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPIPProxyActive");
}

id objc_msgSend_isPIPProxyActiveAndHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPIPProxyActiveAndHidden");
}

id objc_msgSend_isPIPProxyInterrupted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPIPProxyInterrupted");
}

id objc_msgSend_isPTT(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPTT");
}

id objc_msgSend_isPasscodeRequiredToUnlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPasscodeRequiredToUnlock");
}

id objc_msgSend_isPendingAudioSessionActivation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPendingAudioSessionActivation");
}

id objc_msgSend_isPhoneAppLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPhoneAppLocked");
}

id objc_msgSend_isPickedRouteReceiver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPickedRouteReceiver");
}

id objc_msgSend_isPickedRouteSpeaker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPickedRouteSpeaker");
}

id objc_msgSend_isPictureInPictureActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPictureInPictureActive");
}

id objc_msgSend_isPictureInPictureInterrupted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPictureInPictureInterrupted");
}

id objc_msgSend_isPictureInPicturePossible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPictureInPicturePossible");
}

id objc_msgSend_isPictureInPictureStashedOrUnderLock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPictureInPictureStashedOrUnderLock");
}

id objc_msgSend_isPictureInPictureSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPictureInPictureSupported");
}

id objc_msgSend_isPipped(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPipped");
}

id objc_msgSend_isPippedOrStartingPIP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPippedOrStartingPIP");
}

id objc_msgSend_isPreferred(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPreferred");
}

id objc_msgSend_isPreferredAndActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPreferredAndActive");
}

id objc_msgSend_isPreparedToAnimateToFullScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPreparedToAnimateToFullScreen");
}

id objc_msgSend_isPresentingAmbient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingAmbient");
}

id objc_msgSend_isPresentingCallDetailsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingCallDetailsView");
}

id objc_msgSend_isPresentingContactDetails(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingContactDetails");
}

id objc_msgSend_isPresentingContactsViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingContactsViewController");
}

id objc_msgSend_isPresentingCustomMessageController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingCustomMessageController");
}

id objc_msgSend_isPresentingEffectsBrowser(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingEffectsBrowser");
}

id objc_msgSend_isPresentingFullScreenCallUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingFullScreenCallUI");
}

id objc_msgSend_isPresentingRemoteHostViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingRemoteHostViewController");
}

id objc_msgSend_isPresentingViewControllerWithSensitiveInformation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingViewControllerWithSensitiveInformation");
}

id objc_msgSend_isPreviewRunning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPreviewRunning");
}

id objc_msgSend_isPrimary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPrimary");
}

id objc_msgSend_isRTT(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRTT");
}

id objc_msgSend_isRTTAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRTTAvailable");
}

id objc_msgSend_isRTTAvailableForSenderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRTTAvailableForSenderIdentityUUID:");
}

id objc_msgSend_isRead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRead");
}

id objc_msgSend_isReceiver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReceiver");
}

id objc_msgSend_isRecommended(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRecommended");
}

id objc_msgSend_isRefreshShareableContentURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRefreshShareableContentURL");
}

id objc_msgSend_isReminderAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReminderAllowed");
}

id objc_msgSend_isRemovedSystemApp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRemovedSystemApp");
}

id objc_msgSend_isRestricted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRestricted");
}

id objc_msgSend_isRotating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRotating");
}

id objc_msgSend_isRunningTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRunningTest:");
}

id objc_msgSend_isSMSRestricted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSMSRestricted");
}

id objc_msgSend_isSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSOS");
}

id objc_msgSend_isSOSCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSOSCall:");
}

id objc_msgSend_isSOSDismissalAssertionActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSOSDismissalAssertionActive");
}

id objc_msgSend_isSOSOrFakeSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSOSOrFakeSOS");
}

id objc_msgSend_isSafetyDataSubmissionAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSafetyDataSubmissionAllowed");
}

id objc_msgSend_isScreenSharingPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isScreenSharingPresentation");
}

id objc_msgSend_isScreening(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isScreening");
}

id objc_msgSend_isSelected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSelected");
}

id objc_msgSend_isSendToVoicemailAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSendToVoicemailAllowed");
}

id objc_msgSend_isSendingVideo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSendingVideo");
}

id objc_msgSend_isSensitiveTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSensitiveTrigger:");
}

id objc_msgSend_isSensitivityAvatarTreatmentEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSensitivityAvatarTreatmentEnabled");
}

id objc_msgSend_isSetupAssistantRunning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSetupAssistantRunning");
}

id objc_msgSend_isSharePlayActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSharePlayActive");
}

id objc_msgSend_isSharingScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSharingScreen");
}

id objc_msgSend_isShowAccessoryButtonEventsNoticeURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowAccessoryButtonEventsNoticeURL");
}

id objc_msgSend_isShowCarPlayInCallUIURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowCarPlayInCallUIURL");
}

id objc_msgSend_isShowHandoffEligibleNearbyURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowHandoffEligibleNearbyURL");
}

id objc_msgSend_isShowInCallUIURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowInCallUIURL");
}

id objc_msgSend_isShowIncomingTransmissionNoticeURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowIncomingTransmissionNoticeURL");
}

id objc_msgSend_isShowKeypadURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowKeypadURL");
}

id objc_msgSend_isShowLagunaPullConversationURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowLagunaPullConversationURL");
}

id objc_msgSend_isShowSOSConfirmationSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowSOSConfirmationSupported");
}

id objc_msgSend_isShowScreenSharingURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowScreenSharingURL");
}

id objc_msgSend_isShowSystemCallControlsURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowSystemCallControlsURL");
}

id objc_msgSend_isShowing6UP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowing6UP");
}

id objc_msgSend_isShowingAlertSubtitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingAlertSubtitle");
}

id objc_msgSend_isShowingBackgroundImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingBackgroundImage");
}

id objc_msgSend_isShowingHUD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingHUD");
}

id objc_msgSend_isShowingIncomingNameUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingIncomingNameUpdate");
}

id objc_msgSend_isShowingMultiwayParticipants(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingMultiwayParticipants");
}

id objc_msgSend_isShowingPippedIconViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingPippedIconViews");
}

id objc_msgSend_isShowingStickyAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingStickyAlert");
}

id objc_msgSend_isShowingTrackLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingTrackLabel");
}

id objc_msgSend_isSimHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSimHidden");
}

id objc_msgSend_isSpeaker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSpeaker");
}

id objc_msgSend_isSpringBoardInterfaceOrientationLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSpringBoardInterfaceOrientationLocked");
}

id objc_msgSend_isSpringBoardLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSpringBoardLocked");
}

id objc_msgSend_isSpringBoardPasscodeLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSpringBoardPasscodeLocked");
}

id objc_msgSend_isStewieActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStewieActive");
}

id objc_msgSend_isSuggested(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSuggested");
}

id objc_msgSend_isSuperboxProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSuperboxProvider");
}

id objc_msgSend_isSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSupported");
}

id objc_msgSend_isSuspendedEventsOnly(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSuspendedEventsOnly");
}

id objc_msgSend_isSwapCallsAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSwapCallsAllowed");
}

id objc_msgSend_isSystemApertureEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSystemApertureEnabled");
}

id objc_msgSend_isSystemProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSystemProvider");
}

id objc_msgSend_isTTY(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTTY");
}

id objc_msgSend_isTTYAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTTYAvailable");
}

id objc_msgSend_isTTYSoftwareAvailableForSenderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTTYSoftwareAvailableForSenderIdentityUUID:");
}

id objc_msgSend_isTelephonyDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTelephonyDevice");
}

id objc_msgSend_isTelephonyProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTelephonyProvider");
}

id objc_msgSend_isThirdPartyVideo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isThirdPartyVideo");
}

id objc_msgSend_isTranscription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTranscription");
}

id objc_msgSend_isUpdateForegroundAppURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUpdateForegroundAppURL");
}

id objc_msgSend_isUplinkMuted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUplinkMuted");
}

id objc_msgSend_isUsedForScreenSharing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUsedForScreenSharing");
}

id objc_msgSend_isUserInitiated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUserInitiated");
}

id objc_msgSend_isUserInteractionEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUserInteractionEnabled");
}

id objc_msgSend_isUserInterfaceShowing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUserInterfaceShowing");
}

id objc_msgSend_isUserResponsive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUserResponsive");
}

id objc_msgSend_isUsingSmallFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUsingSmallFont");
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValid");
}

id objc_msgSend_isVideo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVideo");
}

id objc_msgSend_isVideoMessagePlaybackURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVideoMessagePlaybackURL");
}

id objc_msgSend_isVideoUpgradeFromCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVideoUpgradeFromCall:");
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isViewLoaded");
}

id objc_msgSend_isVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVisible");
}

id objc_msgSend_isVoicemail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVoicemail");
}

id objc_msgSend_isWiFiCallingEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWiFiCallingEnabled");
}

id objc_msgSend_isWiredHeadphones(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWiredHeadphones");
}

id objc_msgSend_isWiredHeadset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWiredHeadset");
}

id objc_msgSend_isWirelessHeadset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWirelessHeadset");
}

id objc_msgSend_isoCountryCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isoCountryCode");
}

id objc_msgSend_isolatedCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isolatedCall");
}

id objc_msgSend_joinConversationWithConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinConversationWithConversationRequest:");
}

id objc_msgSend_joinRequestAttachment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinRequestAttachment");
}

id objc_msgSend_keyCommandHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyCommandHandler");
}

id objc_msgSend_keyCommandWithInput_modifierFlags_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyCommandWithInput:modifierFlags:action:");
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyEnumerator");
}

id objc_msgSend_keyForButtonType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyForButtonType:");
}

id objc_msgSend_keyIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyIndex");
}

id objc_msgSend_keyPadButtonType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyPadButtonType");
}

id objc_msgSend_keyPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyPath");
}

id objc_msgSend_keyWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyWindow");
}

id objc_msgSend_keypad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keypad");
}

id objc_msgSend_keypadBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keypadBackgroundView");
}

id objc_msgSend_keypadPosterNameViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keypadPosterNameViewModel");
}

id objc_msgSend_keypadViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keypadViewController");
}

id objc_msgSend_knobColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knobColor");
}

id objc_msgSend_knobImageOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knobImageOffset");
}

id objc_msgSend_knobInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knobInsets");
}

id objc_msgSend_knobMaskPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knobMaskPath");
}

id objc_msgSend_knobPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knobPosition");
}

id objc_msgSend_knobRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knobRect");
}

id objc_msgSend_knobText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knobText");
}

id objc_msgSend_knobWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knobWidth");
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "label");
}

id objc_msgSend_labelAlphaValueForActivityState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelAlphaValueForActivityState:");
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelColor");
}

id objc_msgSend_labelConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelConstraints");
}

id objc_msgSend_labelDescriptorWithStringsForCall_callCount_alertAvailable_allowsDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelDescriptorWithStringsForCall:callCount:alertAvailable:allowsDuration:");
}

id objc_msgSend_labelForParticipantAtIndex_inParticipantsView_allowsDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelForParticipantAtIndex:inParticipantsView:allowsDuration:");
}

id objc_msgSend_labelID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelID");
}

id objc_msgSend_labeledValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labeledValue");
}

id objc_msgSend_labelsOrder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelsOrder");
}

id objc_msgSend_labelsVerticalOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelsVerticalOffset");
}

id objc_msgSend_lagunaActionForConversation_deviceHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lagunaActionForConversation:deviceHandle:");
}

id objc_msgSend_lagunaActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lagunaActions");
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageCode");
}

id objc_msgSend_lastBaselineAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastBaselineAnchor");
}

id objc_msgSend_lastDaemonConnectTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastDaemonConnectTime");
}

id objc_msgSend_lastDialedNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastDialedNumber");
}

id objc_msgSend_lastGeocodeAttempt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastGeocodeAttempt");
}

id objc_msgSend_lastNameLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastNameLabel");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastPickedRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPickedRoute");
}

id objc_msgSend_lastScheduledTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastScheduledTime");
}

id objc_msgSend_lastSeenOrCurrentPosterConfigurationForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastSeenOrCurrentPosterConfigurationForCall:");
}

id objc_msgSend_lastSeenPosterConfigurationForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastSeenPosterConfigurationForCall:");
}

id objc_msgSend_lastSeenPosterDataIsSensitiveForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastSeenPosterDataIsSensitiveForCall:");
}

id objc_msgSend_lastSeenPosterIMWallpaperMetadataForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastSeenPosterIMWallpaperMetadataForCall:");
}

id objc_msgSend_lastValidOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastValidOrientation");
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_latestRemoteControlDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "latestRemoteControlDate");
}

id objc_msgSend_launchAppForDialRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchAppForDialRequest:completion:");
}

id objc_msgSend_launchFieldTestIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchFieldTestIfNeeded:");
}

id objc_msgSend_launchInCallUIForReason_withRequestURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchInCallUIForReason:withRequestURL:completion:");
}

id objc_msgSend_launchedForAssertionReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchedForAssertionReason");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_layout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layout");
}

id objc_msgSend_layoutFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutFrame");
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutIfNeeded");
}

id objc_msgSend_layoutIsLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutIsLocked:");
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutMarginsGuide");
}

id objc_msgSend_layoutParticipantsViewAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutParticipantsViewAnimated:");
}

id objc_msgSend_layoutRole(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutRole");
}

id objc_msgSend_layoutState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutState");
}

id objc_msgSend_layoutTextField(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutTextField");
}

id objc_msgSend_lcdView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lcdView");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingAnchor");
}

id objc_msgSend_leadingSideLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingSideLayoutGuide");
}

id objc_msgSend_leadingTrailingLabelSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingTrailingLabelSpacing");
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftAnchor");
}

id objc_msgSend_leftButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftButton");
}

id objc_msgSend_legibilitySettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "legibilitySettings");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_letMeInRequestState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "letMeInRequestState");
}

id objc_msgSend_lightGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lightGrayColor");
}

id objc_msgSend_limitUserInterfaces(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "limitUserInterfaces");
}

id objc_msgSend_limitedSoftPhoneKeypad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "limitedSoftPhoneKeypad");
}

id objc_msgSend_limitedUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "limitedUI");
}

id objc_msgSend_limitedUIElements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "limitedUIElements");
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lineHeight");
}

id objc_msgSend_link(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "link");
}

id objc_msgSend_linkName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkName");
}

id objc_msgSend_linkNameForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkNameForCall:");
}

id objc_msgSend_loadConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadConstraints");
}

id objc_msgSend_loadMedicalIDWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadMedicalIDWithCompletion:");
}

id objc_msgSend_loadView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadView");
}

id objc_msgSend_localSenderIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localSenderIdentity");
}

id objc_msgSend_localSenderIdentityAccountUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localSenderIdentityAccountUUID");
}

id objc_msgSend_localSenderIdentityUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localSenderIdentityUUID");
}

id objc_msgSend_localTimeZone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localTimeZone");
}

id objc_msgSend_localizedCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCompare:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescription");
}

id objc_msgSend_localizedLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedLabel");
}

id objc_msgSend_localizedLettersForCharacter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedLettersForCharacter:");
}

id objc_msgSend_localizedLowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedLowercaseString");
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedName");
}

id objc_msgSend_localizedSenderIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedSenderIdentity");
}

id objc_msgSend_localizedSenderIdentityForParticipantAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedSenderIdentityForParticipantAtIndex:inParticipantsView:");
}

id objc_msgSend_localizedShortName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedShortName");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringForLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForLabel:");
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromNumber:numberStyle:");
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "location");
}

id objc_msgSend_locationAuthorizationStatusCallback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationAuthorizationStatusCallback");
}

id objc_msgSend_locationDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationDictionary");
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationInView:");
}

id objc_msgSend_locationManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationManager");
}

id objc_msgSend_locationServicesAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationServicesAvailable");
}

id objc_msgSend_locationWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationWithTitle:");
}

id objc_msgSend_lockButtonDimension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockButtonDimension");
}

id objc_msgSend_lockButtonHighlightView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockButtonHighlightView");
}

id objc_msgSend_lockForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockForConfiguration:");
}

id objc_msgSend_lockScreenConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockScreenConfiguration");
}

id objc_msgSend_lockedAppBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockedAppBundleIdentifiers");
}

id objc_msgSend_lockedOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockedOrientation");
}

id objc_msgSend_lockoutViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockoutViewController");
}

id objc_msgSend_lockoutViewControllerWithBundleIdentifier_contactsHandles_contactNameByHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockoutViewControllerWithBundleIdentifier:contactsHandles:contactNameByHandle:");
}

id objc_msgSend_lostModeIsActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lostModeIsActive");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mainButtonLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainButtonLayoutGuide");
}

id objc_msgSend_mainDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainDisplay");
}

id objc_msgSend_mainInCallViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainInCallViewController");
}

id objc_msgSend_mainLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainLabel");
}

id objc_msgSend_mainLeftButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainLeftButton");
}

id objc_msgSend_mainNumberLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainNumberLabel");
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainQueue");
}

id objc_msgSend_mainRightButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainRightButton");
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainRunLoop");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_makeAnimator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeAnimator");
}

id objc_msgSend_makeAnsweringMachineWithPrivateSelf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeAnsweringMachineWithPrivateSelf:");
}

id objc_msgSend_makeBannerController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeBannerController");
}

id objc_msgSend_makeButtonWithType_title_image_color_font_fontColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeButtonWithType:title:image:color:font:fontColor:");
}

id objc_msgSend_makeButtonWithType_title_image_color_font_fontColor_diameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeButtonWithType:title:image:color:font:fontColor:diameter:");
}

id objc_msgSend_makeCallDetailsCoordinatorWithBannerPresentationManager_existingCoordinator_deferredPresentationManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeCallDetailsCoordinatorWithBannerPresentationManager:existingCoordinator:deferredPresentationManager:");
}

id objc_msgSend_makeCaptureButtonWithDiameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeCaptureButtonWithDiameter:");
}

id objc_msgSend_makeConversationHUDDetailsNavigationControllerWithBannerPresentationManager_delegate_shouldSetControlsManagerInCallDetailsDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeConversationHUDDetailsNavigationControllerWithBannerPresentationManager:delegate:shouldSetControlsManagerInCallDetailsDelegate:");
}

id objc_msgSend_makeDirectoriesInPath_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeDirectoriesInPath:mode:");
}

id objc_msgSend_makeHeldCallControlsViewWithCallCenter_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeHeldCallControlsViewWithCallCenter:style:");
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeKeyAndVisible");
}

id objc_msgSend_makeLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeLabel");
}

id objc_msgSend_makeLabelWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeLabelWithString:");
}

id objc_msgSend_makeLabelWithString_secondaryString_layoutState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeLabelWithString:secondaryString:layoutState:");
}

id objc_msgSend_makeLockObserverWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeLockObserverWithHandler:");
}

id objc_msgSend_makeMultiwayConversationViewControllerWithCall_bannerPresentationManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeMultiwayConversationViewControllerWithCall:bannerPresentationManager:");
}

id objc_msgSend_makeObjectsPerformSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeObjectsPerformSelector:");
}

id objc_msgSend_makeParticipantView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeParticipantView");
}

id objc_msgSend_makeScreenShareViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeScreenShareViewController");
}

id objc_msgSend_makeSlidingButtonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeSlidingButtonWithType:");
}

id objc_msgSend_makeSystemApertureElementProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeSystemApertureElementProvider");
}

id objc_msgSend_makeVideoMessageViewControllerWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeVideoMessageViewControllerWithURL:");
}

id objc_msgSend_makeViewComposer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeViewComposer");
}

id objc_msgSend_makeViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeViewController");
}

id objc_msgSend_makeWithCallCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeWithCallCenter:");
}

id objc_msgSend_manuallyStopPIPWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manuallyStopPIPWithCompletion:");
}

id objc_msgSend_marginPadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "marginPadding");
}

id objc_msgSend_markTransitionAsObservedForHandleID_isAutoUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markTransitionAsObservedForHandleID:isAutoUpdate:");
}

id objc_msgSend_marqueeEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "marqueeEnabled");
}

id objc_msgSend_marqueeLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "marqueeLabelFont");
}

id objc_msgSend_mask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mask");
}

id objc_msgSend_matchedPhoneNumberFor_searchText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchedPhoneNumberFor:searchText:");
}

id objc_msgSend_maximumContentSizeCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumContentSizeCategory");
}

id objc_msgSend_meCardGeocoder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "meCardGeocoder");
}

id objc_msgSend_medicalIDButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "medicalIDButton");
}

id objc_msgSend_medicalIDNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "medicalIDNavigationController");
}

id objc_msgSend_medicalIDSliderBottomConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "medicalIDSliderBottomConstraint");
}

id objc_msgSend_medicalIDSliderBottomConstraintConstant(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "medicalIDSliderBottomConstraintConstant");
}

id objc_msgSend_medicalIDSlidingButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "medicalIDSlidingButton");
}

id objc_msgSend_medicalIDSlidingButtonCompletionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "medicalIDSlidingButtonCompletionBlock");
}

id objc_msgSend_medicalIDViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "medicalIDViewController");
}

id objc_msgSend_medicalIdSliderDistanceFromBottom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "medicalIdSliderDistanceFromBottom");
}

id objc_msgSend_menu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menu");
}

id objc_msgSend_menuActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuActions");
}

id objc_msgSend_menuActionsWithRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuActionsWithRoutes:");
}

id objc_msgSend_menuByReplacingChildren_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuByReplacingChildren:");
}

id objc_msgSend_menuChangeHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuChangeHandler");
}

id objc_msgSend_menuControllerWithCallStyle_dataSource_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuControllerWithCallStyle:dataSource:delegate:");
}

id objc_msgSend_menuDataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuDataSource");
}

id objc_msgSend_menuForAudioControlsButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuForAudioControlsButton:");
}

id objc_msgSend_menuWithTitle_children_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuWithTitle:children:");
}

id objc_msgSend_menuWithTitle_image_identifier_options_children_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuWithTitle:image:identifier:options:children:");
}

id objc_msgSend_mergeAllCellConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeAllCellConstraints");
}

id objc_msgSend_mergePrimaryPhoneCallsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergePrimaryPhoneCallsAnimated:");
}

id objc_msgSend_mergedActiveRemoteParticipants(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergedActiveRemoteParticipants");
}

id objc_msgSend_mergedCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergedCalls");
}

id objc_msgSend_mergedRemoteMembers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergedRemoteMembers");
}

id objc_msgSend_mergedStringForMergedCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergedStringForMergedCalls");
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "message");
}

id objc_msgSend_messageLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageLabel");
}

id objc_msgSend_messageStoreClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageStoreClient");
}

id objc_msgSend_messagesGroupUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messagesGroupUUID");
}

id objc_msgSend_methodForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodForSelector:");
}

id objc_msgSend_middleSizingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "middleSizingView");
}

id objc_msgSend_middleViewState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "middleViewState");
}

id objc_msgSend_minSlideCompletionPercentage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minSlideCompletionPercentage");
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "model");
}

id objc_msgSend_modesPriorityQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modesPriorityQueue");
}

id objc_msgSend_modifyingStateLock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modifyingStateLock");
}

id objc_msgSend_monitorWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorWithConfiguration:");
}

id objc_msgSend_monospacedDigitSystemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monospacedDigitSystemFontOfSize:weight:");
}

id objc_msgSend_mostRecentCallHandleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentCallHandleValue");
}

id objc_msgSend_mostRecentSOSStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentSOSStatus");
}

id objc_msgSend_mostRecentlyDisconnectedAudioCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentlyDisconnectedAudioCall");
}

id objc_msgSend_mostRecentlyDisconnectedVideoCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentlyDisconnectedVideoCall");
}

id objc_msgSend_mostRecentlyUsedSOSTriggerMechanism(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentlyUsedSOSTriggerMechanism");
}

id objc_msgSend_motionActivityList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "motionActivityList");
}

id objc_msgSend_motionActivityQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "motionActivityQueue");
}

id objc_msgSend_mountProbabilityThreshold(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mountProbabilityThreshold");
}

id objc_msgSend_mountedProbability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mountedProbability");
}

id objc_msgSend_multipleCallLabelBaselineOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multipleCallLabelBaselineOffset");
}

id objc_msgSend_multipleCallParticipantLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multipleCallParticipantLabelFont");
}

id objc_msgSend_multipleCallParticipantLabelFontMiniWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multipleCallParticipantLabelFontMiniWindow");
}

id objc_msgSend_multipleCallStatusLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multipleCallStatusLabelFont");
}

id objc_msgSend_multipleCallStatusLabelFontMiniWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multipleCallStatusLabelFontMiniWindow");
}

id objc_msgSend_multipleCallsArePresent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multipleCallsArePresent");
}

id objc_msgSend_multiwayViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multiwayViewController");
}

id objc_msgSend_mutableAttributedStringWithString_alignment_symbolType_foregroundColor_usingSmallFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableAttributedStringWithString:alignment:symbolType:foregroundColor:usingSmallFont:");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_muteActionTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteActionTitle");
}

id objc_msgSend_muteActionTitleForAudioRoutingMenuController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteActionTitleForAudioRoutingMenuController:");
}

id objc_msgSend_muteButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteButtonConfiguration");
}

id objc_msgSend_muteMenuAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteMenuAction");
}

id objc_msgSend_muteRouteGlyphForDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteRouteGlyphForDisplayStyle:");
}

id objc_msgSend_muteVideo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteVideo");
}

id objc_msgSend_mutedTalkerBannerViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutedTalkerBannerViewController");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_nameAndLabelFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameAndLabelFontSize");
}

id objc_msgSend_nameAndLabelLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameAndLabelLabel");
}

id objc_msgSend_nameAndPhotoEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameAndPhotoEnabled");
}

id objc_msgSend_nameForActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameForActionType:");
}

id objc_msgSend_nameForCallGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameForCallGroup:");
}

id objc_msgSend_nameForParticipantAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameForParticipantAtIndex:inParticipantsView:");
}

id objc_msgSend_nameForSOSMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameForSOSMode:");
}

id objc_msgSend_nameLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameLabel");
}

id objc_msgSend_nameOverrideLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameOverrideLabel");
}

id objc_msgSend_nameOverrideString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameOverrideString");
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationBar");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationController");
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationItem");
}

id objc_msgSend_needsDismissalAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsDismissalAssertion");
}

id objc_msgSend_needsManualInCallSounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsManualInCallSounds");
}

id objc_msgSend_needsReloadButtonViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsReloadButtonViews");
}

id objc_msgSend_neighborhoodActivityConduit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "neighborhoodActivityConduit");
}

id objc_msgSend_networkReachable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkReachable");
}

id objc_msgSend_networkUnavailableAlertControllerWithCallProvider_dialType_senderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkUnavailableAlertControllerWithCallProvider:dialType:senderIdentityUUID:");
}

id objc_msgSend_newAddContactButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newAddContactButton");
}

id objc_msgSend_newCallButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newCallButton");
}

id objc_msgSend_newDeleteButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newDeleteButton");
}

id objc_msgSend_newLCDView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newLCDView");
}

id objc_msgSend_newNumberPadView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newNumberPadView");
}

id objc_msgSend_newOverlayView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newOverlayView");
}

id objc_msgSend_newPhoneNumberRefForDestinationID_useNetworkCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newPhoneNumberRefForDestinationID:useNetworkCountryCode:");
}

id objc_msgSend_newPosterConfigurationForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newPosterConfigurationForCall:");
}

id objc_msgSend_newScreenSharingPIPController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newScreenSharingPIPController");
}

id objc_msgSend_nextFocusedItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextFocusedItem");
}

id objc_msgSend_nextGeocodeAttempt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextGeocodeAttempt");
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextObject");
}

id objc_msgSend_nfmPlayCommands(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nfmPlayCommands");
}

id objc_msgSend_noContentBannerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noContentBannerView");
}

id objc_msgSend_normalizedHandleWithDestinationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "normalizedHandleWithDestinationID:");
}

id objc_msgSend_normalizedPhoneNumberHandleForValue_isoCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "normalizedPhoneNumberHandleForValue:isoCountryCode:");
}

id objc_msgSend_normalizedValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "normalizedValue");
}

id objc_msgSend_noteActivatedForCustomReason_withUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteActivatedForCustomReason:withUserInfo:");
}

id objc_msgSend_notificationOccurred_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationOccurred:");
}

id objc_msgSend_notifyAllRespondersForViewController_callDisplayStyleDidChangeFromStyle_toStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyAllRespondersForViewController:callDisplayStyleDidChangeFromStyle:toStyle:");
}

id objc_msgSend_notifyAudioCallControllerIfNecessaryCallDisplayStyleDidChangeFromStyle_toStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyAudioCallControllerIfNecessaryCallDisplayStyleDidChangeFromStyle:toStyle:");
}

id objc_msgSend_notifyEmergencyContacts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyEmergencyContacts");
}

id objc_msgSend_numberForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberForKey:defaultValue:");
}

id objc_msgSend_numberFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberFormatter");
}

id objc_msgSend_numberFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberFromString:");
}

id objc_msgSend_numberLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberLabelFont");
}

id objc_msgSend_numberLabelHorizontalConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberLabelHorizontalConstraints");
}

id objc_msgSend_numberLabelMinimumFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberLabelMinimumFontSize");
}

id objc_msgSend_numberOfColumnsInControlsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfColumnsInControlsView:");
}

id objc_msgSend_numberOfEpochsForMountProbability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfEpochsForMountProbability");
}

id objc_msgSend_numberOfLines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfLines");
}

id objc_msgSend_numberOfLinesInEmergencyTitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfLinesInEmergencyTitleLabel");
}

id objc_msgSend_numberOfLinesInStatusLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfLinesInStatusLabel");
}

id objc_msgSend_numberOfLinesInSubtitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfLinesInSubtitleLabel");
}

id objc_msgSend_numberOfParticipantLabels(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfParticipantLabels");
}

id objc_msgSend_numberOfParticipantsForParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfParticipantsForParticipantsView:");
}

id objc_msgSend_numberOfRowsInControlsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRowsInControlsView:");
}

id objc_msgSend_numberOfViewCellsForPhoneCallContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfViewCellsForPhoneCallContainer:");
}

id objc_msgSend_numberPadButtonsForCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberPadButtonsForCharacters:");
}

id objc_msgSend_numberPadCharacterForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberPadCharacterForString:");
}

id objc_msgSend_numberPadKeyCommandHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberPadKeyCommandHandler");
}

id objc_msgSend_numberTextField(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberTextField");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "object");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observers");
}

id objc_msgSend_obtainDismissalAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "obtainDismissalAssertion");
}

id objc_msgSend_obtainDismissalAssertionForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "obtainDismissalAssertionForReason:");
}

id objc_msgSend_obtainDismissalAssertionIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "obtainDismissalAssertionIfNeeded");
}

id objc_msgSend_obtainIdleTimerAssertionWithComment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "obtainIdleTimerAssertionWithComment:");
}

id objc_msgSend_oldMultiwayPIPViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldMultiwayPIPViewController");
}

id objc_msgSend_oneSecondTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oneSecondTimer");
}

id objc_msgSend_onlyHasPlaceholderCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onlyHasPlaceholderCall");
}

id objc_msgSend_openApplication_options_withResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplication:options:withResult:");
}

id objc_msgSend_openApplication_withOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplication:withOptions:completion:");
}

id objc_msgSend_openApplicationWithBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplicationWithBundleID:");
}

id objc_msgSend_openApplicationWithBundleIdentifier_configuration_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplicationWithBundleIdentifier:configuration:completionHandler:");
}

id objc_msgSend_openDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openDialRequest:");
}

id objc_msgSend_openDialRequest_forProcessHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openDialRequest:forProcessHandle:");
}

id objc_msgSend_openJoinConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openJoinConversationRequest:");
}

id objc_msgSend_openMessagesForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openMessagesForCall:");
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSensitiveURL:withOptions:");
}

id objc_msgSend_openURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:completion:");
}

id objc_msgSend_openURL_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:withCompletionHandler:");
}

id objc_msgSend_openURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:withOptions:");
}

id objc_msgSend_openUserActivity_withApplicationProxy_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openUserActivity:withApplicationProxy:options:completionHandler:");
}

id objc_msgSend_openUserInterfaceURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openUserInterfaceURL:");
}

id objc_msgSend_openVideoMessagePlaybackURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openVideoMessagePlaybackURL:");
}

id objc_msgSend_optionsWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optionsWithDictionary:");
}

id objc_msgSend_orientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orientation");
}

id objc_msgSend_origin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "origin");
}

id objc_msgSend_originalBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originalBackgroundColor");
}

id objc_msgSend_originatingUIType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originatingUIType");
}

id objc_msgSend_outcome(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outcome");
}

id objc_msgSend_outerCircleDiameter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outerCircleDiameter");
}

id objc_msgSend_outputVoice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputVoice");
}

id objc_msgSend_outputs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputs");
}

id objc_msgSend_overlayDismissTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overlayDismissTimer");
}

id objc_msgSend_overlayView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overlayView");
}

id objc_msgSend_overrideStringForParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideStringForParticipantsView:");
}

id objc_msgSend_overrideTitleLayoutWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideTitleLayoutWith:");
}

id objc_msgSend_panGestureFirstTouchLocationInView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "panGestureFirstTouchLocationInView");
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parentViewController");
}

id objc_msgSend_parentViewControllerForRestoringPiP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parentViewControllerForRestoringPiP");
}

id objc_msgSend_partWithView_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "partWithView:type:");
}

id objc_msgSend_participantAndStatusRectangle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantAndStatusRectangle");
}

id objc_msgSend_participantAndStatusRectangleBottomConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantAndStatusRectangleBottomConstraint");
}

id objc_msgSend_participantAndStatusRectangleCenterXConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantAndStatusRectangleCenterXConstraint");
}

id objc_msgSend_participantAndStatusRectangleCenterYConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantAndStatusRectangleCenterYConstraint");
}

id objc_msgSend_participantAndStatusRectangleMaxLeadingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantAndStatusRectangleMaxLeadingConstraint");
}

id objc_msgSend_participantAndStatusRectangleMinLeadingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantAndStatusRectangleMinLeadingConstraint");
}

id objc_msgSend_participantAndStatusRectangleTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantAndStatusRectangleTopConstraint");
}

id objc_msgSend_participantAndStatusRectangleTrailingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantAndStatusRectangleTrailingConstraint");
}

id objc_msgSend_participantLabelShouldShowLargeAvatar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantLabelShouldShowLargeAvatar");
}

id objc_msgSend_participantLabelView_didPerformActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantLabelView:didPerformActionType:");
}

id objc_msgSend_participantMarqueeLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantMarqueeLabel");
}

id objc_msgSend_participantMarqueeLabelHorizontalConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantMarqueeLabelHorizontalConstraint");
}

id objc_msgSend_participantMarqueeLabelRightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantMarqueeLabelRightConstraint");
}

id objc_msgSend_participantMarqueeLabelTrailingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantMarqueeLabelTrailingConstraint");
}

id objc_msgSend_participantTappedAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantTappedAtIndex:inParticipantsView:");
}

id objc_msgSend_participantViewCallDetailsGestureRecognizerTapped(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantViewCallDetailsGestureRecognizerTapped");
}

id objc_msgSend_participantViewInfoButtonTappedAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantViewInfoButtonTappedAtIndex:inParticipantsView:");
}

id objc_msgSend_participantsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsView");
}

id objc_msgSend_participantsView_didPerformActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsView:didPerformActionType:");
}

id objc_msgSend_participantsViewBottomConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsViewBottomConstraint");
}

id objc_msgSend_participantsViewCenterXConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsViewCenterXConstraint");
}

id objc_msgSend_participantsViewCenterYConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsViewCenterYConstraint");
}

id objc_msgSend_participantsViewControllersShouldIgnoreUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsViewControllersShouldIgnoreUpdates");
}

id objc_msgSend_participantsViewIsShowingMultipleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsViewIsShowingMultipleLabel");
}

id objc_msgSend_participantsViewLeadingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsViewLeadingConstraint");
}

id objc_msgSend_participantsViewShouldShowParticipantLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsViewShouldShowParticipantLabel");
}

id objc_msgSend_participantsViewTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsViewTopConstraint");
}

id objc_msgSend_participantsViewTrailingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsViewTrailingConstraint");
}

id objc_msgSend_participantsViewVerticalPosterNameTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantsViewVerticalPosterNameTopConstraint");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path");
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_pause(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pause");
}

id objc_msgSend_pauseCallBufferTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseCallBufferTimer");
}

id objc_msgSend_pauseCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseCharacterSet");
}

id objc_msgSend_pausePreview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pausePreview");
}

id objc_msgSend_pauseSpeakingAtBoundary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseSpeakingAtBoundary:");
}

id objc_msgSend_pauseSpeakingAtNextBoundary_synchronously_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseSpeakingAtNextBoundary:synchronously:error:");
}

id objc_msgSend_pauseTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseTimer");
}

id objc_msgSend_pbui_CGImageBackedImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbui_CGImageBackedImage");
}

id objc_msgSend_pbui_cropImageWithRect_outputSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pbui_cropImageWithRect:outputSize:");
}

id objc_msgSend_pendingMiddleViewAnimations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingMiddleViewAnimations");
}

id objc_msgSend_pendingNickname(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingNickname");
}

id objc_msgSend_pendingRestrictedScreenTimeRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingRestrictedScreenTimeRequest");
}

id objc_msgSend_pendingStateBlocks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingStateBlocks");
}

id objc_msgSend_performBannerToFullScreenCrossFadeAnimationWithView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBannerToFullScreenCrossFadeAnimationWithView:");
}

id objc_msgSend_performBottomBarActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBottomBarActionType:");
}

id objc_msgSend_performCallActionForCallProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performCallActionForCallProvider:");
}

id objc_msgSend_performCallActionForCallProvider_video_senderIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performCallActionForCallProvider:video:senderIdentity:");
}

id objc_msgSend_performCharacterAddAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performCharacterAddAction:");
}

id objc_msgSend_performDismissedPresentationForCallDetailsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performDismissedPresentationForCallDetailsView");
}

id objc_msgSend_performFullScreenPresentationForCallDetailsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performFullScreenPresentationForCallDetailsView");
}

id objc_msgSend_performLocationReminderAction_ifAuthorizedForStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performLocationReminderAction:ifAuthorizedForStatus:");
}

id objc_msgSend_performPresentationForSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPresentationForSOS");
}

id objc_msgSend_performPresentationForScreenSharingInitiallyInPiP_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPresentationForScreenSharingInitiallyInPiP:");
}

id objc_msgSend_performPresentationForScreenTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPresentationForScreenTime");
}

id objc_msgSend_performPresentationForVideoMessage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPresentationForVideoMessage");
}

id objc_msgSend_performPresentationWithConfiguration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPresentationWithConfiguration:completion:");
}

id objc_msgSend_performPresentationWithConfiguration_forSceneType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPresentationWithConfiguration:forSceneType:");
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:afterDelay:");
}

id objc_msgSend_performTapActionCancelForHighlightedKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTapActionCancelForHighlightedKey");
}

id objc_msgSend_performTapActionDownForHighlightedKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTapActionDownForHighlightedKey");
}

id objc_msgSend_performTapActionEndForHighlightedKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTapActionEndForHighlightedKey");
}

id objc_msgSend_performTransitionAnimationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTransitionAnimationWithCompletion:");
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithoutAnimation:");
}

id objc_msgSend_periodLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "periodLength");
}

id objc_msgSend_persistentIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentIdentifier");
}

id objc_msgSend_personHandle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personHandle");
}

id objc_msgSend_phCarPlayImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phCarPlayImageNamed:");
}

id objc_msgSend_phCarPlayImageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phCarPlayImageNamed:inBundle:");
}

id objc_msgSend_phPathForImageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phPathForImageNamed:inBundle:");
}

id objc_msgSend_phPreferredBoldFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phPreferredBoldFontForTextStyle:");
}

id objc_msgSend_phPreferredFontDescriptorForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phPreferredFontDescriptorForTextStyle:");
}

id objc_msgSend_phPreferredFontDescriptorForTextStyle_addingSymbolicTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phPreferredFontDescriptorForTextStyle:addingSymbolicTraits:");
}

id objc_msgSend_phPreferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phPreferredFontForTextStyle:");
}

id objc_msgSend_phoneCallContainer_avatarViewControllerForViewCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCallContainer:avatarViewControllerForViewCellAtIndex:");
}

id objc_msgSend_phoneCallContainer_cellIsDimmedAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCallContainer:cellIsDimmedAtIndex:");
}

id objc_msgSend_phoneCallContainer_localizedSenderIdentityForViewCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCallContainer:localizedSenderIdentityForViewCellAtIndex:");
}

id objc_msgSend_phoneCallContainer_phoneCallViewTappedAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCallContainer:phoneCallViewTappedAtIndex:");
}

id objc_msgSend_phoneCallContainer_subtitleColorForViewCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCallContainer:subtitleColorForViewCellAtIndex:");
}

id objc_msgSend_phoneCallContainer_subtitleForViewCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCallContainer:subtitleForViewCellAtIndex:");
}

id objc_msgSend_phoneCallContainer_titleForViewCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCallContainer:titleForViewCellAtIndex:");
}

id objc_msgSend_phoneCallForIndex_isMerged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCallForIndex:isMerged:");
}

id objc_msgSend_phoneKit_isAuthorized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneKit_isAuthorized");
}

id objc_msgSend_phoneNumberPrefixHint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumberPrefixHint");
}

id objc_msgSend_phoneNumberWithDigits_countryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumberWithDigits:countryCode:");
}

id objc_msgSend_phoneNumberWithStringValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumberWithStringValue:");
}

id objc_msgSend_phoneNumbers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumbers");
}

id objc_msgSend_phonePad_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phonePad:appendString:");
}

id objc_msgSend_phonePad_appendString_playDTMFTone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phonePad:appendString:playDTMFTone:");
}

id objc_msgSend_phonePadDeleteLastDigit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phonePadDeleteLastDigit:");
}

id objc_msgSend_phonePadView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phonePadView");
}

id objc_msgSend_phonePadViewTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phonePadViewTopConstraint");
}

id objc_msgSend_phonePadViewTopShouldConstrainToLCDView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phonePadViewTopShouldConstrainToLCDView");
}

id objc_msgSend_phoneRemoteHostViewControllerDidDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneRemoteHostViewControllerDidDismiss");
}

id objc_msgSend_pickRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickRoute:");
}

id objc_msgSend_pickRouteWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickRouteWithUID:");
}

id objc_msgSend_pickSpeakerRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickSpeakerRoute");
}

id objc_msgSend_pickableRouteWithUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickableRouteWithUniqueIdentifier:");
}

id objc_msgSend_pickableRoutesForTTY(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickableRoutesForTTY");
}

id objc_msgSend_pickedRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickedRoute");
}

id objc_msgSend_pictureInPictureProxyWithControlsStyle_viewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pictureInPictureProxyWithControlsStyle:viewController:");
}

id objc_msgSend_pillLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pillLayoutGuide");
}

id objc_msgSend_pillStateMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pillStateMonitor");
}

id objc_msgSend_pillView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pillView");
}

id objc_msgSend_pillViewTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pillViewTopConstraint");
}

id objc_msgSend_pillViewTopConstraintConstant(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pillViewTopConstraintConstant");
}

id objc_msgSend_pillViewTopOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pillViewTopOffset");
}

id objc_msgSend_pipContentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipContentViewController");
}

id objc_msgSend_pipController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipController");
}

id objc_msgSend_pipDeviceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipDeviceOrientation");
}

id objc_msgSend_pipDidRotate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipDidRotate");
}

id objc_msgSend_pipFinishedCancellationBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipFinishedCancellationBlock");
}

id objc_msgSend_pipFinishedTransitionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipFinishedTransitionBlock");
}

id objc_msgSend_pipInterruptedCallIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipInterruptedCallIdentifier");
}

id objc_msgSend_pipIsBeingResized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipIsBeingResized");
}

id objc_msgSend_pipPlaceholderView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipPlaceholderView");
}

id objc_msgSend_pipProxy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipProxy");
}

id objc_msgSend_pipSourceProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipSourceProvider");
}

id objc_msgSend_pipState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipState");
}

id objc_msgSend_pipStatusBarPadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipStatusBarPadding");
}

id objc_msgSend_pipViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pipViewController");
}

id objc_msgSend_placeholderCallGroupUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "placeholderCallGroupUUID");
}

id objc_msgSend_plainButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plainButtonConfiguration");
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "play");
}

id objc_msgSend_playAlertWithAudio_alertTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playAlertWithAudio:alertTopic:");
}

id objc_msgSend_playAnnouncementBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playAnnouncementBlock");
}

id objc_msgSend_playAnnouncementForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playAnnouncementForCall:");
}

id objc_msgSend_playBannerSound(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playBannerSound");
}

id objc_msgSend_playDTMFToneForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playDTMFToneForKey:");
}

id objc_msgSend_playDowntimeStartingAnnouncementForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playDowntimeStartingAnnouncementForCall:");
}

id objc_msgSend_playFindLocallySound(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playFindLocallySound");
}

id objc_msgSend_playingWithAudio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playingWithAudio");
}

id objc_msgSend_playsHaptics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playsHaptics");
}

id objc_msgSend_playsSound(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playsSound");
}

id objc_msgSend_pn_verticalServiceCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pn_verticalServiceCharacterSet");
}

id objc_msgSend_pointInside_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointInside:withEvent:");
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointSize");
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToRootViewControllerAnimated:");
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popoverPresentationController");
}

id objc_msgSend_populate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populate:");
}

id objc_msgSend_populateCaches(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateCaches");
}

id objc_msgSend_portName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "portName");
}

id objc_msgSend_portType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "portType");
}

id objc_msgSend_position(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "position");
}

id objc_msgSend_positionFromPosition_offset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "positionFromPosition:offset:");
}

id objc_msgSend_positionParticipantsViewStatusLabelToBeHorizontallyCenteredToInfoButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "positionParticipantsViewStatusLabelToBeHorizontallyCenteredToInfoButton:");
}

id objc_msgSend_positionPosterBadgeToBeHorizontallyCenteredToInfoButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "positionPosterBadgeToBeHorizontallyCenteredToInfoButton:");
}

id objc_msgSend_postMessageOverlayIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postMessageOverlayIfNeeded");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_postalAddress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postalAddress");
}

id objc_msgSend_postalAddressWithAddressBookDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postalAddressWithAddressBookDictionaryRepresentation:");
}

id objc_msgSend_postalAddresses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postalAddresses");
}

id objc_msgSend_posterArchiveData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "posterArchiveData");
}

id objc_msgSend_posterBadgeMaxSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "posterBadgeMaxSize");
}

id objc_msgSend_posterBadgeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "posterBadgeView");
}

id objc_msgSend_posterNameComponentsForContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "posterNameComponentsForContact:");
}

id objc_msgSend_posterNameTextView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "posterNameTextView");
}

id objc_msgSend_posterNameViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "posterNameViewModel");
}

id objc_msgSend_posterSourceIsSyncedWithContacts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "posterSourceIsSyncedWithContacts:");
}

id objc_msgSend_powerDownCompletionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "powerDownCompletionBlock");
}

id objc_msgSend_powerOffSlidingButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "powerOffSlidingButton");
}

id objc_msgSend_pptOutgoingCallHandleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pptOutgoingCallHandleValue");
}

id objc_msgSend_pptOutgoingDialRequestWithDestinationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pptOutgoingDialRequestWithDestinationID:");
}

id objc_msgSend_pptOutgoingFaceTimeCallHandleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pptOutgoingFaceTimeCallHandleValue");
}

id objc_msgSend_predicateForContactMatchingPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForContactMatchingPhoneNumber:");
}

id objc_msgSend_predicateForContactsMatchingEmailAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForContactsMatchingEmailAddress:");
}

id objc_msgSend_predicateForContactsMatchingHandleStrings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForContactsMatchingHandleStrings:");
}

id objc_msgSend_predicateForContactsMatchingPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForContactsMatchingPhoneNumber:");
}

id objc_msgSend_predicateMatchingServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateMatchingServiceName:");
}

id objc_msgSend_predicateWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithValue:");
}

id objc_msgSend_preferencesValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferencesValueForKey:");
}

id objc_msgSend_preferencesValueForKey_domain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferencesValueForKey:domain:");
}

id objc_msgSend_preferredBackgroundActivitiesToSuppress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredBackgroundActivitiesToSuppress");
}

id objc_msgSend_preferredContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSize");
}

id objc_msgSend_preferredContentSizeDidChangeForViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSizeDidChangeForViewController");
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_addingSymbolicTraits_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:");
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredHeight");
}

id objc_msgSend_preferredInterfaceOrientationForPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredInterfaceOrientationForPresentation");
}

id objc_msgSend_preferredMaxLayoutWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredMaxLayoutWidth");
}

id objc_msgSend_preferredPIPContentAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredPIPContentAspectRatio");
}

id objc_msgSend_preferredPhoneNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredPhoneNumber");
}

id objc_msgSend_preferredPiPContentAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredPiPContentAspectRatio");
}

id objc_msgSend_preferredPresentationMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredPresentationMode");
}

id objc_msgSend_preferredTitleAlignment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredTitleAlignment");
}

id objc_msgSend_preferredWhitePointAdaptivityStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredWhitePointAdaptivityStyle");
}

id objc_msgSend_prefersHiddenWhenDismissed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefersHiddenWhenDismissed");
}

id objc_msgSend_prefersShowingCachedLastSeenPosterBeforeCallConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefersShowingCachedLastSeenPosterBeforeCallConnected:");
}

id objc_msgSend_prefersWhiteTextOnImageRef_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefersWhiteTextOnImageRef:");
}

id objc_msgSend_preloadCallChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preloadCallChanges");
}

id objc_msgSend_prepareButtonsForAnimationBegin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareButtonsForAnimationBegin");
}

id objc_msgSend_prepareButtonsForAnimationEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareButtonsForAnimationEnd");
}

id objc_msgSend_prepareForAppSwitcher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForAppSwitcher");
}

id objc_msgSend_prepareForDeviceLock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForDeviceLock");
}

id objc_msgSend_prepareForDeviceLockWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForDeviceLockWithCompletion:");
}

id objc_msgSend_prepareForDismissal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForDismissal");
}

id objc_msgSend_prepareToDismissScreenTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareToDismissScreenTime");
}

id objc_msgSend_preparedToAnimateToFullScreenCompletionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preparedToAnimateToFullScreenCompletionBlock");
}

id objc_msgSend_presentAddCallViewControllerRequestedFromInCallViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAddCallViewControllerRequestedFromInCallViewController:");
}

id objc_msgSend_presentAlertWithTitle_message_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAlertWithTitle:message:");
}

id objc_msgSend_presentAsPopover_fromView_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAsPopover:fromView:completion:");
}

id objc_msgSend_presentBlockAndReportAlertToBlockCall_forViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentBlockAndReportAlertToBlockCall:forViewController:completion:");
}

id objc_msgSend_presentContactsViewControllerForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentContactsViewControllerForView:");
}

id objc_msgSend_presentCreateContactViewControllerWithHandle_forViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentCreateContactViewControllerWithHandle:forViewController:");
}

id objc_msgSend_presentDisconnectionAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentDisconnectionAlert:");
}

id objc_msgSend_presentDismissedPTTSceneForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentDismissedPTTSceneForCall:");
}

id objc_msgSend_presentHUDForCurrentContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentHUDForCurrentContext");
}

id objc_msgSend_presentKeypadViewControllerRequestedFromInCallViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentKeypadViewControllerRequestedFromInCallViewController:");
}

id objc_msgSend_presentMedicalID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentMedicalID");
}

id objc_msgSend_presentModalViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentModalViewController:animated:");
}

id objc_msgSend_presentPhoneRemoteViewControllerForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentPhoneRemoteViewControllerForView:");
}

id objc_msgSend_presentReminderNotice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentReminderNotice");
}

id objc_msgSend_presentScreenTimeHostViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentScreenTimeHostViewController");
}

id objc_msgSend_presentShareCard_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentShareCard:source:");
}

id objc_msgSend_presentSystemHUD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentSystemHUD");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationController");
}

id objc_msgSend_presentationMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationMode");
}

id objc_msgSend_presentedFullScreenedCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedFullScreenedCall");
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedViewController");
}

id objc_msgSend_presenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presenter");
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingViewController");
}

id objc_msgSend_pressesBegan_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pressesBegan:withEvent:");
}

id objc_msgSend_pressesCancelled_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pressesCancelled:withEvent:");
}

id objc_msgSend_pressesEnded_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pressesEnded:withEvent:");
}

id objc_msgSend_previousIsCallRinging(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previousIsCallRinging");
}

id objc_msgSend_previousTextSuggestion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previousTextSuggestion");
}

id objc_msgSend_previouslyFocusedItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previouslyFocusedItem");
}

id objc_msgSend_prewarm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarm");
}

id objc_msgSend_prewarmBannerPresentationManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmBannerPresentationManager");
}

id objc_msgSend_primaryCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryCalls");
}

id objc_msgSend_primaryInteractionModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryInteractionModel");
}

id objc_msgSend_primaryPhoneCallsForGalleryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryPhoneCallsForGalleryView:");
}

id objc_msgSend_priorSystemVolume(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "priorSystemVolume");
}

id objc_msgSend_prioritizeCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prioritizeCall:");
}

id objc_msgSend_prioritizedCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prioritizedCall");
}

id objc_msgSend_prioritizedCallIsInSameCallGroupAsCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prioritizedCallIsInSameCallGroupAsCall:");
}

id objc_msgSend_prioritizedSenderIdentities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prioritizedSenderIdentities");
}

id objc_msgSend_priorityForRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "priorityForRoute:");
}

id objc_msgSend_priorityPosterNameTextView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "priorityPosterNameTextView");
}

id objc_msgSend_privateButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privateButton");
}

id objc_msgSend_processAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAssertion");
}

id objc_msgSend_processAssertionCompletion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAssertionCompletion");
}

id objc_msgSend_processAssertionTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAssertionTimer");
}

id objc_msgSend_processHandle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processHandle");
}

id objc_msgSend_processHierarchy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processHierarchy:");
}

id objc_msgSend_progressSpinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressSpinner");
}

id objc_msgSend_provider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider");
}

id objc_msgSend_providerManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerManager");
}

id objc_msgSend_providerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerWithIdentifier:");
}

id objc_msgSend_providerWithService_video_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerWithService:video:");
}

id objc_msgSend_providers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providers");
}

id objc_msgSend_pseudoNameStringForDestinationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pseudoNameStringForDestinationID:");
}

id objc_msgSend_pttFullScreenContainerViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pttFullScreenContainerViewController");
}

id objc_msgSend_pttViewControllerWithBannerPresentationManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pttViewControllerWithBannerPresentationManager:");
}

id objc_msgSend_pullCallFromClientUsingHandoffActivityUserInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pullCallFromClientUsingHandoffActivityUserInfo:completion:");
}

id objc_msgSend_pullRelayingCallsFromClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pullRelayingCallsFromClient");
}

id objc_msgSend_pullRelayingCallsIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pullRelayingCallsIfNecessary");
}

id objc_msgSend_punchOutToVoIPApplicationForCurrentCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "punchOutToVoIPApplicationForCurrentCall");
}

id objc_msgSend_punchoutImageCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "punchoutImageCache");
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushViewController:animated:");
}

id objc_msgSend_queryItemWithName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryItemWithName:value:");
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queue");
}

id objc_msgSend_radius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "radius");
}

id objc_msgSend_raiseAccidentalSOSNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raiseAccidentalSOSNotification");
}

id objc_msgSend_rangeOfCharacterFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:");
}

id objc_msgSend_rangeOfCharacterFromSet_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:options:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_rangeToHighlightText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeToHighlightText:");
}

id objc_msgSend_rankedAutocompleteSuggestionsFromContext_candidates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rankedAutocompleteSuggestionsFromContext:candidates:");
}

id objc_msgSend_readCachedLastSeenPosterDataForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readCachedLastSeenPosterDataForCall:");
}

id objc_msgSend_readableContentGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readableContentGuide");
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reason");
}

id objc_msgSend_recalculateGeocodeAfterDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recalculateGeocodeAfterDate");
}

id objc_msgSend_recipientHandle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipientHandle");
}

id objc_msgSend_recursiveDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recursiveDescription");
}

id objc_msgSend_redColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "redColor");
}

id objc_msgSend_redialedCallUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "redialedCallUUID");
}

id objc_msgSend_reformatText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reformatText");
}

id objc_msgSend_refreshBottomBarButtonLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshBottomBarButtonLayout");
}

id objc_msgSend_refreshCallDetailsViewButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshCallDetailsViewButton");
}

id objc_msgSend_refreshCustomizedActionTypeTitleForButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshCustomizedActionTypeTitleForButton:");
}

id objc_msgSend_refreshCustomizedActionTypeTitles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshCustomizedActionTypeTitles");
}

id objc_msgSend_refreshDelegateWithState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshDelegateWithState");
}

id objc_msgSend_refreshEndCallButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshEndCallButton");
}

id objc_msgSend_refreshExtensionNumberButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshExtensionNumberButton");
}

id objc_msgSend_refreshForCallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshForCallState:");
}

id objc_msgSend_refreshShareableContentURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshShareableContentURL:");
}

id objc_msgSend_refreshShareableContentWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshShareableContentWithBundleIdentifier:");
}

id objc_msgSend_refreshUseRTTButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshUseRTTButton");
}

id objc_msgSend_region(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "region");
}

id objc_msgSend_registerAnonymousXPCEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerAnonymousXPCEndpoint:");
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellReuseIdentifier:");
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellWithReuseIdentifier:");
}

id objc_msgSend_registerForNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForNotifications");
}

id objc_msgSend_registerForRingerStateNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForRingerStateNotifications");
}

id objc_msgSend_registerGenericScene_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerGenericScene:ofType:");
}

id objc_msgSend_registerObserver_forContact_keysToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerObserver:forContact:keysToFetch:");
}

id objc_msgSend_registerScene_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerScene:ofType:");
}

id objc_msgSend_registrationStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registrationStatus");
}

id objc_msgSend_relativePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relativePath");
}

id objc_msgSend_releaseAllCallBufferDismissalAssertions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseAllCallBufferDismissalAssertions");
}

id objc_msgSend_releaseDismissalAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseDismissalAssertion");
}

id objc_msgSend_releaseDismissalAssertionForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseDismissalAssertionForReason:");
}

id objc_msgSend_releaseDismissalAssertionReasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseDismissalAssertionReasons:");
}

id objc_msgSend_releaseIdleTimerAssertionWithComment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseIdleTimerAssertionWithComment:");
}

id objc_msgSend_releaseToCallStartTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseToCallStartTime");
}

id objc_msgSend_releaseToCallTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseToCallTimer");
}

id objc_msgSend_releaseToCallVoiceLoopTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseToCallVoiceLoopTimer");
}

id objc_msgSend_relinquish(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relinquish");
}

id objc_msgSend_reload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reload");
}

id objc_msgSend_reloadButtonViewStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadButtonViewStates");
}

id objc_msgSend_reloadButtonViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadButtonViews");
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadData");
}

id objc_msgSend_reloadDataAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadDataAnimated:");
}

id objc_msgSend_reloadPhoneCallData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadPhoneCallData");
}

id objc_msgSend_reloadQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadQueue");
}

id objc_msgSend_reloadRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_reminderAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reminderAction");
}

id objc_msgSend_reminderActivity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reminderActivity");
}

id objc_msgSend_reminderText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reminderText");
}

id objc_msgSend_reminderWithEventStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reminderWithEventStore:");
}

id objc_msgSend_remoteAlertShellViewControllerForWindowScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteAlertShellViewControllerForWindowScene:");
}

id objc_msgSend_remoteControlStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteControlStatus");
}

id objc_msgSend_remoteHostViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteHostViewController");
}

id objc_msgSend_remoteMembers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteMembers");
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_remoteParticipantHandles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantHandles");
}

id objc_msgSend_remoteViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteViewController");
}

id objc_msgSend_remoteViewControllerClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteViewControllerClass");
}

id objc_msgSend_remoteViewControllerLCDOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteViewControllerLCDOffset");
}

id objc_msgSend_removeAllAnimations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllAnimations");
}

id objc_msgSend_removeAllButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllButtons");
}

id objc_msgSend_removeAllConstraintsForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllConstraintsForCell:");
}

id objc_msgSend_removeAllIndexes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllIndexes");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeAllParticipantsViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllParticipantsViewConstraints");
}

id objc_msgSend_removeAnimationForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAnimationForKey:");
}

id objc_msgSend_removeBackgroundContactImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeBackgroundContactImageView");
}

id objc_msgSend_removeButtons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeButtons:");
}

id objc_msgSend_removeCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCall:");
}

id objc_msgSend_removeChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeChildViewController:");
}

id objc_msgSend_removeConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConstraint:");
}

id objc_msgSend_removeConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConstraints:");
}

id objc_msgSend_removeDefaultBackgroundGradientView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDefaultBackgroundGradientView");
}

id objc_msgSend_removeDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDelegate:");
}

id objc_msgSend_removeDismissalAssertionReleasedObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDismissalAssertionReleasedObserver");
}

id objc_msgSend_removeEmergencyTextViaSatelliteUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEmergencyTextViaSatelliteUI");
}

id objc_msgSend_removeEnhancedEmergencyIntermittentStateLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEnhancedEmergencyIntermittentStateLabel");
}

id objc_msgSend_removeFirstNameLabelFromViewIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFirstNameLabelFromViewIfNeeded");
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromParentViewController");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_removeGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeGestureRecognizer:");
}

id objc_msgSend_removeLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLayoutGuide:");
}

id objc_msgSend_removeListenerID_forService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeListenerID:forService:");
}

id objc_msgSend_removeNameLabelForAlwaysOnDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeNameLabelForAlwaysOnDisplay");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsForKeys:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removePIPPlaceholderView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePIPPlaceholderView");
}

id objc_msgSend_removePosterViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePosterViewController:completion:");
}

id objc_msgSend_removeViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeViewController:");
}

id objc_msgSend_removeVisibleCells_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeVisibleCells:");
}

id objc_msgSend_removeWiFiAutoAssociationClientToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeWiFiAutoAssociationClientToken:");
}

id objc_msgSend_renderingMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingMode");
}

id objc_msgSend_renderingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingViewController");
}

id objc_msgSend_repeatingUpdateAnimatedSliderForCountdownNumber_forModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "repeatingUpdateAnimatedSliderForCountdownNumber:forModel:");
}

id objc_msgSend_replaceBlock_currentButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceBlock:currentButton:");
}

id objc_msgSend_replaceControlsOfType_withControlOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceControlsOfType:withControlOfType:");
}

id objc_msgSend_replaceRange_withText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceRange:withText:");
}

id objc_msgSend_replyWithMessageStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replyWithMessageStore");
}

id objc_msgSend_reportCanceledSOSCountdownToCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCanceledSOSCountdownToCall:");
}

id objc_msgSend_reportCanceledSOSCountdownToNotify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCanceledSOSCountdownToNotify:");
}

id objc_msgSend_reportMultipleCallsWaitingUIAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportMultipleCallsWaitingUIAction:");
}

id objc_msgSend_reportSOSCancelationTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportSOSCancelationTimeout:");
}

id objc_msgSend_reportSOSRestingResponse_restingResponse_hasMedicalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportSOSRestingResponse:restingResponse:hasMedicalID:");
}

id objc_msgSend_reportSOSUserCancelled_lastFlowState_countdownValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportSOSUserCancelled:lastFlowState:countdownValue:");
}

id objc_msgSend_reportWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportWithCall:");
}

id objc_msgSend_representativePhoneCallForConferenceForGalleryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "representativePhoneCallForConferenceForGalleryView:");
}

id objc_msgSend_requeryRoutes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requeryRoutes");
}

id objc_msgSend_requestActivityForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestActivityForCall:");
}

id objc_msgSend_requestAudioServicesActivate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestAudioServicesActivate");
}

id objc_msgSend_requestBackgroundPiPAuthorizationForSceneType_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestBackgroundPiPAuthorizationForSceneType:withConfiguration:");
}

id objc_msgSend_requestBackgroundPiPAuthorizationOfDismissedInCallSceneForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestBackgroundPiPAuthorizationOfDismissedInCallSceneForCall:");
}

id objc_msgSend_requestClarityBoardPresentationForCall_dialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestClarityBoardPresentationForCall:dialRequest:");
}

id objc_msgSend_requestClarityBoardPresentationForSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestClarityBoardPresentationForSOS");
}

id objc_msgSend_requestFromAlertActivationContextUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestFromAlertActivationContextUserInfo:");
}

id objc_msgSend_requestFullScreenSpringBoardPresentationForCallDetailsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestFullScreenSpringBoardPresentationForCallDetailsView");
}

id objc_msgSend_requestGreenTea3PPresentationForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestGreenTea3PPresentationForCall:");
}

id objc_msgSend_requestHandoffEligibleConversationPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestHandoffEligibleConversationPresentation");
}

id objc_msgSend_requestInCallDismissal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestInCallDismissal");
}

id objc_msgSend_requestInCallSceneTransitionToFullScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestInCallSceneTransitionToFullScreen");
}

id objc_msgSend_requestLagunaPullConversationPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestLagunaPullConversationPresentation");
}

id objc_msgSend_requestPTTPresentation_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestPTTPresentation:forCall:");
}

id objc_msgSend_requestPasscodeUnlockWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestPasscodeUnlockWithCompletion:");
}

id objc_msgSend_requestPresentationForCall_dialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestPresentationForCall:dialRequest:");
}

id objc_msgSend_requestSceneSessionActivation_userActivity_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSceneSessionActivation:userActivity:options:errorHandler:");
}

id objc_msgSend_requestSceneSessionDestruction_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSceneSessionDestruction:options:errorHandler:");
}

id objc_msgSend_requestScreenTimeShieldIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestScreenTimeShieldIfNecessary");
}

id objc_msgSend_requestSpringBoardPresentationForCall_dialRequest_tappedPill_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSpringBoardPresentationForCall:dialRequest:tappedPill:");
}

id objc_msgSend_requestSpringBoardPresentationForCallDetailsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSpringBoardPresentationForCallDetailsView");
}

id objc_msgSend_requestSpringBoardPresentationForSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSpringBoardPresentationForSOS");
}

id objc_msgSend_requestSpringBoardPresentationForScreenSharingAsPiP_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSpringBoardPresentationForScreenSharingAsPiP:");
}

id objc_msgSend_requestSpringBoardPresentationForScreenSharingBroadcaster_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSpringBoardPresentationForScreenSharingBroadcaster:");
}

id objc_msgSend_requestSpringBoardPresentationForScreenTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSpringBoardPresentationForScreenTime");
}

id objc_msgSend_requestTransitionToPresentationMode_isUserInitiated_analyticsSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestTransitionToPresentationMode:isUserInitiated:analyticsSource:");
}

id objc_msgSend_requestTransitionToPresentationMode_shouldDismissCMASAlerts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestTransitionToPresentationMode:shouldDismissCMASAlerts:");
}

id objc_msgSend_requestTransitionToPresentationMode_shouldDismissCMASAlerts_analyticsSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestTransitionToPresentationMode:shouldDismissCMASAlerts:analyticsSource:");
}

id objc_msgSend_requestVideoUpgradeForCall_originatingUIType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestVideoUpgradeForCall:originatingUIType:");
}

id objc_msgSend_requestViewController_fromServiceWithBundleIdentifier_connectionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestViewController:fromServiceWithBundleIdentifier:connectionHandler:");
}

id objc_msgSend_requestViewControllerWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestViewControllerWithCompletionHandler:");
}

id objc_msgSend_requestViewControllerWithConnectionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestViewControllerWithConnectionHandler:");
}

id objc_msgSend_requestWithIdentifier_content_trigger_destinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithIdentifier:content:trigger:destinations:");
}

id objc_msgSend_requestWithRole_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithRole:");
}

id objc_msgSend_requestedCallActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestedCallActive");
}

id objc_msgSend_requestedPresentationConfigurationIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestedPresentationConfigurationIdentifier");
}

id objc_msgSend_requestedVCPresentationWithStatusBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestedVCPresentationWithStatusBar");
}

id objc_msgSend_requireGestureRecognizerToFail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requireGestureRecognizerToFail:");
}

id objc_msgSend_requiresSmallScreenConfig(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiresSmallScreenConfig");
}

id objc_msgSend_resetAnimatedSlider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetAnimatedSlider");
}

id objc_msgSend_resetEffectsState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetEffectsState");
}

id objc_msgSend_resetNameOverrideString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetNameOverrideString");
}

id objc_msgSend_resetParticipantsViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetParticipantsViewConstraints");
}

id objc_msgSend_resetPipContentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetPipContentViewController");
}

id objc_msgSend_resetView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetView");
}

id objc_msgSend_resetWantsHoldMusic(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetWantsHoldMusic");
}

id objc_msgSend_resolvedAudioVideoMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvedAudioVideoMode");
}

id objc_msgSend_respondsToEventsWhileInCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondsToEventsWhileInCall");
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "response");
}

id objc_msgSend_restart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restart");
}

id objc_msgSend_restartCallBufferTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restartCallBufferTimer");
}

id objc_msgSend_restingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restingView");
}

id objc_msgSend_restoreLastDialedNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreLastDialedNumber");
}

id objc_msgSend_restoreParticipantsViewStatusLabelForFullScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreParticipantsViewStatusLabelForFullScreen");
}

id objc_msgSend_restoreUserInterfaceForPictureInPictureStopCompletionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreUserInterfaceForPictureInPictureStopCompletionBlock");
}

id objc_msgSend_restoreViewControllerHierarchyWhenExitingPiP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreViewControllerHierarchyWhenExitingPiP");
}

id objc_msgSend_restrictedSubtitleForHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restrictedSubtitleForHandle:");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resume");
}

id objc_msgSend_retrieveSessionWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveSessionWithID:");
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reuseIdentifier");
}

id objc_msgSend_revealAudioRoutingDeviceListAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revealAudioRoutingDeviceListAnimated:");
}

id objc_msgSend_revealAudioRoutingDeviceListAnimatedIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revealAudioRoutingDeviceListAnimatedIfNeeded");
}

id objc_msgSend_reverseGeocodeLocation_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverseGeocodeLocation:completionHandler:");
}

id objc_msgSend_revoke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revoke");
}

id objc_msgSend_revokeAndRemoveBackgroundPiPAuthorizationForSceneTypeIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokeAndRemoveBackgroundPiPAuthorizationForSceneTypeIfNeeded:");
}

id objc_msgSend_rightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightAnchor");
}

id objc_msgSend_rightBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightBarButtonItem");
}

id objc_msgSend_rightButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightButton");
}

id objc_msgSend_ringCornerRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringCornerRadius");
}

id objc_msgSend_ringImageCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringImageCache");
}

id objc_msgSend_ringImageForDodge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringImageForDodge");
}

id objc_msgSend_ringImageForLuminance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringImageForLuminance");
}

id objc_msgSend_ringImageWithSize_strokeWidth_color_cacheIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringImageWithSize:strokeWidth:color:cacheIdentifier:");
}

id objc_msgSend_ringSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringSize");
}

id objc_msgSend_ringStroke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringStroke");
}

id objc_msgSend_ringView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringView");
}

id objc_msgSend_ringerMutedForCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringerMutedForCallUUID:");
}

id objc_msgSend_ringerStateNotifyToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringerStateNotifyToken");
}

id objc_msgSend_ringtoneController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringtoneController");
}

id objc_msgSend_rollAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rollAnimation");
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootViewController");
}

id objc_msgSend_rotateContentContainer_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rotateContentContainer:withCompletionHandler:");
}

id objc_msgSend_rotatePIPDeviceOrientationTo_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rotatePIPDeviceOrientationTo:withCompletion:");
}

id objc_msgSend_rotatePIPForInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rotatePIPForInterfaceOrientation:");
}

id objc_msgSend_roundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "roundView");
}

id objc_msgSend_routeActionWithTitle_route_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeActionWithTitle:route:");
}

id objc_msgSend_routeController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeController");
}

id objc_msgSend_routeForSpeakerDisable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeForSpeakerDisable");
}

id objc_msgSend_routeForSpeakerEnable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeForSpeakerEnable");
}

id objc_msgSend_routeGlyphForDeviceType_displayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeGlyphForDeviceType:displayStyle:");
}

id objc_msgSend_routeGlyphForDeviceType_displayStyle_color_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeGlyphForDeviceType:displayStyle:color:");
}

id objc_msgSend_routeListController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeListController");
}

id objc_msgSend_routes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routes");
}

id objc_msgSend_routesForAudioRoutingMenuController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routesForAudioRoutingMenuController:");
}

id objc_msgSend_routesForUnformattedPickableRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routesForUnformattedPickableRoutes:");
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "row");
}

id objc_msgSend_rows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rows");
}

id objc_msgSend_rttDisplayName_forSubscriptionContextUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rttDisplayName:forSubscriptionContextUUID:");
}

id objc_msgSend_runEndCallTestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runEndCallTestWithOptions:");
}

id objc_msgSend_runIncomingCallTestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runIncomingCallTestWithOptions:");
}

id objc_msgSend_runOutgoingCallTestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runOutgoingCallTestWithOptions:");
}

id objc_msgSend_runSwapCameraTestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runSwapCameraTestWithOptions:");
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaLayoutGuide");
}

id objc_msgSend_sanitizedHandles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sanitizedHandles");
}

id objc_msgSend_sanitizedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sanitizedString");
}

id objc_msgSend_save(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "save");
}

id objc_msgSend_saveReminder_commit_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveReminder:commit:error:");
}

id objc_msgSend_sb_isStashedPIP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sb_isStashedPIP");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scale");
}

id objc_msgSend_sceneDidConnect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneDidConnect");
}

id objc_msgSend_sceneDidDisconnectBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneDidDisconnectBlock");
}

id objc_msgSend_sceneDidUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneDidUpdate");
}

id objc_msgSend_sceneManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneManager");
}

id objc_msgSend_sceneOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneOfType:");
}

id objc_msgSend_sceneSessionDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneSessionDidChange");
}

id objc_msgSend_sceneSessionIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneSessionIdentifier");
}

id objc_msgSend_sceneType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneType");
}

id objc_msgSend_sceneTypeForConfigurationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneTypeForConfigurationIdentifier:");
}

id objc_msgSend_scheduleInRunLoop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleInRunLoop:");
}

id objc_msgSend_scheduleNextGeocode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleNextGeocode");
}

id objc_msgSend_scheduleStatusLabelTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleStatusLabelTimer");
}

id objc_msgSend_scheduledTimerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:repeats:block:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_screen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screen");
}

id objc_msgSend_screenCallWithUUID_manualScreening_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenCallWithUUID:manualScreening:completion:");
}

id objc_msgSend_screenSharingBroadcasterScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSharingBroadcasterScene");
}

id objc_msgSend_screenSharingBroadcasterViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSharingBroadcasterViewController");
}

id objc_msgSend_screenSharingContainerViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSharingContainerViewController");
}

id objc_msgSend_screenSharingDrawToHighlightEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSharingDrawToHighlightEnabled");
}

id objc_msgSend_screenSharingInteractionControllerFactory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSharingInteractionControllerFactory");
}

id objc_msgSend_screenSharingMonitorFactory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSharingMonitorFactory");
}

id objc_msgSend_screenSharingRemoteControlEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSharingRemoteControlEnabled");
}

id objc_msgSend_screenSharingRootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSharingRootViewController");
}

id objc_msgSend_screenSharingScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSharingScene");
}

id objc_msgSend_screenSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSize");
}

id objc_msgSend_screenTimeHostViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenTimeHostViewController");
}

id objc_msgSend_screeningBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screeningBackgroundView");
}

id objc_msgSend_screeningBackgroundViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screeningBackgroundViewController");
}

id objc_msgSend_screeningCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screeningCall");
}

id objc_msgSend_screeningConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screeningConstraints");
}

id objc_msgSend_screeningPosterNameViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screeningPosterNameViewModel");
}

id objc_msgSend_screeningViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screeningViewController");
}

id objc_msgSend_screens(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screens");
}

id objc_msgSend_searchButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchButton");
}

id objc_msgSend_secondItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondItem");
}

id objc_msgSend_secondNameComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondNameComponent");
}

id objc_msgSend_secondSubtitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondSubtitleLabel");
}

id objc_msgSend_secondaryInfoLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryInfoLabel");
}

id objc_msgSend_secondaryInfoLabelHorizontalConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryInfoLabelHorizontalConstraint");
}

id objc_msgSend_secondaryInfoLabelTrailingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryInfoLabelTrailingConstraint");
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryLabelColor");
}

id objc_msgSend_secondaryString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryString");
}

id objc_msgSend_secondaryStringForParticipantsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryStringForParticipantsView");
}

id objc_msgSend_selectItemAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectItemAtIndexPath:animated:scrollPosition:");
}

id objc_msgSend_selected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selected");
}

id objc_msgSend_selectedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedColor");
}

id objc_msgSend_selectedIcon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedIcon");
}

id objc_msgSend_selectedSenderIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedSenderIdentity");
}

id objc_msgSend_selectedTextRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedTextRange");
}

id objc_msgSend_selectionRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectionRange");
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "semanticContentAttribute");
}

id objc_msgSend_sendDeclineViaChatKitWithMessageResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDeclineViaChatKitWithMessageResponse:");
}

id objc_msgSend_sendDeclineViaIntentWithMessageResponse_extension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDeclineViaIntentWithMessageResponse:extension:");
}

id objc_msgSend_sendDeclineWithMessageResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDeclineWithMessageResponse:");
}

id objc_msgSend_sendFieldModeDigits_forProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendFieldModeDigits:forProvider:");
}

id objc_msgSend_sendFlowStateUpdateForCurrentSOSMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendFlowStateUpdateForCurrentSOSMode");
}

id objc_msgSend_sendHardPauseDigits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendHardPauseDigits");
}

id objc_msgSend_sendMessageIntentExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessageIntentExtension");
}

id objc_msgSend_sendResponseIfNecessaryWithUnhandledEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendResponseIfNecessaryWithUnhandledEvents:");
}

id objc_msgSend_sendResponseWithUnHandledEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendResponseWithUnHandledEvents:");
}

id objc_msgSend_sendSubviewToBack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSubviewToBack:");
}

id objc_msgSend_sendUserScoreToRTCReporting_withScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUserScoreToRTCReporting:withScore:");
}

id objc_msgSend_senderIdentityCapabilitiesWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "senderIdentityCapabilitiesWithUUID:");
}

id objc_msgSend_senderIdentityClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "senderIdentityClient");
}

id objc_msgSend_senderIdentityForAccountUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "senderIdentityForAccountUUID:");
}

id objc_msgSend_senderIdentityMenuForDialerField_selectedSenderIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "senderIdentityMenuForDialerField:selectedSenderIdentity:");
}

id objc_msgSend_senderIdentityMenuForDialerView_selectedSenderIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "senderIdentityMenuForDialerView:selectedSenderIdentity:");
}

id objc_msgSend_sequenceWithItems_loops_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sequenceWithItems:loops:");
}

id objc_msgSend_service(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "service");
}

id objc_msgSend_serviceBundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceBundleIdentifier");
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session");
}

id objc_msgSend_sessionId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionId");
}

id objc_msgSend_sessionStartTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionStartTime");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set");
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIdentifier:");
}

id objc_msgSend_setAccessibilityUserInputLabels_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityUserInputLabels:");
}

id objc_msgSend_setAccountManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountManager:");
}

id objc_msgSend_setAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAction:");
}

id objc_msgSend_setAction_enabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAction:enabled:");
}

id objc_msgSend_setActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionType:");
}

id objc_msgSend_setActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActions:");
}

id objc_msgSend_setActivationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationContext:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActiveState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveState:");
}

id objc_msgSend_setActivelyUsing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivelyUsing:");
}

id objc_msgSend_setActivityIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityIndicator:");
}

id objc_msgSend_setActivityState_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityState:animated:");
}

id objc_msgSend_setAddContactButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddContactButton:");
}

id objc_msgSend_setAddContactButtonTopConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddContactButtonTopConstraint:");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAdjustsImageWhenDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsImageWhenDisabled:");
}

id objc_msgSend_setAdjustsImageWhenHighlighted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsImageWhenHighlighted:");
}

id objc_msgSend_setAirplaneMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirplaneMode:");
}

id objc_msgSend_setAlarms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarms:");
}

id objc_msgSend_setAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlert:");
}

id objc_msgSend_setAlertActivationAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertActivationAssertion:");
}

id objc_msgSend_setAlertActivationCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertActivationCall:");
}

id objc_msgSend_setAlertActivationReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertActivationReason:");
}

id objc_msgSend_setAlertConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertConfiguration:");
}

id objc_msgSend_setAlertCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertCoordinator:");
}

id objc_msgSend_setAlertCountDownTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertCountDownTimer:");
}

id objc_msgSend_setAlertFeedbackGenerator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertFeedbackGenerator:");
}

id objc_msgSend_setAlertModeNeededState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertModeNeededState:");
}

id objc_msgSend_setAlertTriggeredByAutoCountdown_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertTriggeredByAutoCountdown:");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAllInCallScenes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllInCallScenes:");
}

id objc_msgSend_setAllowHomeOutDismissal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowHomeOutDismissal:");
}

id objc_msgSend_setAllowableMovement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowableMovement:");
}

id objc_msgSend_setAllowedPressTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedPressTypes:");
}

id objc_msgSend_setAllowsActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsActions:");
}

id objc_msgSend_setAllowsAlertStacking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsAlertStacking:");
}

id objc_msgSend_setAllowsBanners_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsBanners:");
}

id objc_msgSend_setAllowsCarPlayBanners_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsCarPlayBanners:");
}

id objc_msgSend_setAllowsControlCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsControlCenter:");
}

id objc_msgSend_setAllowsEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsEditing:");
}

id objc_msgSend_setAllowsFieldModeSendButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsFieldModeSendButton:");
}

id objc_msgSend_setAllowsGroupBlending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsGroupBlending:");
}

id objc_msgSend_setAllowsGroupOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsGroupOpacity:");
}

id objc_msgSend_setAllowsLuminanceAdjustments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsLuminanceAdjustments:");
}

id objc_msgSend_setAllowsMenuButtonDismissal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsMenuButtonDismissal:");
}

id objc_msgSend_setAllowsMultipleSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsMultipleSelection:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setAlreadyVisitedRestingScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlreadyVisitedRestingScreen:");
}

id objc_msgSend_setAlwaysOnDisplayDimmingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysOnDisplayDimmingView:");
}

id objc_msgSend_setAlwaysOnDisplayPosterNameViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysOnDisplayPosterNameViewModel:");
}

id objc_msgSend_setAnchorPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnchorPoint:");
}

id objc_msgSend_setAnimatedSlidingButtonCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimatedSlidingButtonCompletionBlock:");
}

id objc_msgSend_setAnimating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimating:");
}

id objc_msgSend_setAnimationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationsEnabled:");
}

id objc_msgSend_setAppIconHeightConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIconHeightConstraint:");
}

id objc_msgSend_setAppIconLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIconLayoutGuide:");
}

id objc_msgSend_setAppIconLayoutGuideHorizontalAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIconLayoutGuideHorizontalAnchor:");
}

id objc_msgSend_setAppIconViewLeadingAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIconViewLeadingAnchor:");
}

id objc_msgSend_setAppIconWidthConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIconWidthConstraint:");
}

id objc_msgSend_setAppLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppLink:");
}

id objc_msgSend_setApplicationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationState:");
}

id objc_msgSend_setArgument_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArgument:atIndex:");
}

id objc_msgSend_setArrowDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArrowDirection:");
}

id objc_msgSend_setAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssertion:");
}

id objc_msgSend_setAttribute_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttribute:forKey:error:");
}

id objc_msgSend_setAttributedOrPlainText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedOrPlainText:");
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedText:");
}

id objc_msgSend_setAttributedTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedTitle:forState:");
}

id objc_msgSend_setAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributes:");
}

id objc_msgSend_setAudioRouteButtonSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioRouteButtonSelected:");
}

id objc_msgSend_setAudioRouteVibrancyView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioRouteVibrancyView:");
}

id objc_msgSend_setAudioRoutingDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioRoutingDelegate:");
}

id objc_msgSend_setAudioServicesActivated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioServicesActivated:");
}

id objc_msgSend_setAudioSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioSessionID:");
}

id objc_msgSend_setAudioSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioSessionIdentifier:");
}

id objc_msgSend_setAutoAssociateWiFiAsForegroundClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoAssociateWiFiAsForegroundClient:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAuxiliaryKeysToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuxiliaryKeysToFetch:");
}

id objc_msgSend_setAvUpgradedCallUUIDForDismissedScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvUpgradedCallUUIDForDismissedScene:");
}

id objc_msgSend_setAvatarImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvatarImage:");
}

id objc_msgSend_setAvatarView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvatarView:");
}

id objc_msgSend_setAvatarViewConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvatarViewConstraints:");
}

id objc_msgSend_setAvatarViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvatarViewController:");
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxis:");
}

id objc_msgSend_setBackButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackButton:");
}

id objc_msgSend_setBackdropEffectView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackdropEffectView:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBackgroundColor_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:animated:");
}

id objc_msgSend_setBackgroundEffects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundEffects:");
}

id objc_msgSend_setBackgroundImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundImage:");
}

id objc_msgSend_setBackgroundImage_forBarMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundImage:forBarMetrics:");
}

id objc_msgSend_setBackgroundImage_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundImage:forState:");
}

id objc_msgSend_setBackgroundPIPAuthorizationForSceneType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundPIPAuthorizationForSceneType:");
}

id objc_msgSend_setBackgroundStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundStyle:");
}

id objc_msgSend_setBackgroundStyle_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundStyle:animated:");
}

id objc_msgSend_setBackgroundStyle_animatedWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundStyle:animatedWithDuration:");
}

id objc_msgSend_setBackgroundStyle_withDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundStyle:withDuration:");
}

id objc_msgSend_setBackgroundStyleDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundStyleDelegate:");
}

id objc_msgSend_setBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundView:");
}

id objc_msgSend_setBadgeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeText:");
}

id objc_msgSend_setBadgeView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeView:");
}

id objc_msgSend_setBannerAudioRouteButtonSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerAudioRouteButtonSelected:");
}

id objc_msgSend_setBannerButtonsForIncomingAudioCallIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerButtonsForIncomingAudioCallIfNecessary");
}

id objc_msgSend_setBannerButtonsForIncomingVideoCallIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerButtonsForIncomingVideoCallIfNecessary");
}

id objc_msgSend_setBannerButtonsState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerButtonsState:");
}

id objc_msgSend_setBannerButtonsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerButtonsView:");
}

id objc_msgSend_setBannerDismissalReasonForAnalyticsSource_callUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerDismissalReasonForAnalyticsSource:callUUID:");
}

id objc_msgSend_setBannerPresentationRequestTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerPresentationRequestTimer:");
}

id objc_msgSend_setBaselineAdjustment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaselineAdjustment:");
}

id objc_msgSend_setBeaconManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBeaconManager:");
}

id objc_msgSend_setBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBehavior:");
}

id objc_msgSend_setBody_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBody:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderColor:");
}

id objc_msgSend_setBorderWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderWidth:");
}

id objc_msgSend_setBottomBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottomBar:");
}

id objc_msgSend_setBottomBarBottomConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottomBarBottomConstraint:");
}

id objc_msgSend_setBottomMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottomMargin:");
}

id objc_msgSend_setBottomMultipleCallLabelView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottomMultipleCallLabelView:");
}

id objc_msgSend_setBounces_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounces:");
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounds:");
}

id objc_msgSend_setBufferSingleCallLabelView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBufferSingleCallLabelView:");
}

id objc_msgSend_setBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleID:");
}

id objc_msgSend_setBusinessLogo_isPerson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBusinessLogo:isPerson:");
}

id objc_msgSend_setBusinessLogoHeightConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBusinessLogoHeightConstraint:");
}

id objc_msgSend_setBusinessLogoLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBusinessLogoLayoutGuide:");
}

id objc_msgSend_setBusinessLogoLayoutGuideHorizontalAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBusinessLogoLayoutGuideHorizontalAnchor:");
}

id objc_msgSend_setBusinessLogoViewLeadingAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBusinessLogoViewLeadingAnchor:");
}

id objc_msgSend_setBusinessLogoWidthConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBusinessLogoWidthConstraint:");
}

id objc_msgSend_setButtonDistributionScalingFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonDistributionScalingFactor:");
}

id objc_msgSend_setButtonDividerViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonDividerViews:");
}

id objc_msgSend_setButtonLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonLabel:");
}

id objc_msgSend_setButtonLayoutConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonLayoutConstraints:");
}

id objc_msgSend_setButtonSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonSize:");
}

id objc_msgSend_setButtonsArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonsArray:");
}

id objc_msgSend_setButtonsDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonsDictionary:");
}

id objc_msgSend_setButtonsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonsEnabled:");
}

id objc_msgSend_setButtonsMode_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonsMode:animated:");
}

id objc_msgSend_setButtonsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonsView:");
}

id objc_msgSend_setButtonsViewBottomConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonsViewBottomConstraint:");
}

id objc_msgSend_setCachedBannerParticipantLabelWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedBannerParticipantLabelWidth:");
}

id objc_msgSend_setCachedPreviouslyUsedLastAddressHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedPreviouslyUsedLastAddressHandle:");
}

id objc_msgSend_setCachedTrackMaskWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedTrackMaskWidth:");
}

id objc_msgSend_setCalendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalendar:");
}

id objc_msgSend_setCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCall:");
}

id objc_msgSend_setCallAnalyticsLogger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallAnalyticsLogger:");
}

id objc_msgSend_setCallAnnouncement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallAnnouncement:");
}

id objc_msgSend_setCallAutoDialled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallAutoDialled:");
}

id objc_msgSend_setCallBufferState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallBufferState:");
}

id objc_msgSend_setCallBufferTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallBufferTimer:");
}

id objc_msgSend_setCallButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallButton:");
}

id objc_msgSend_setCallButtonKeypadOffsetConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallButtonKeypadOffsetConstraint:");
}

id objc_msgSend_setCallCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallCenter:");
}

id objc_msgSend_setCallConnectTimeSinceSessionStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallConnectTimeSinceSessionStart:");
}

id objc_msgSend_setCallConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallConnected:");
}

id objc_msgSend_setCallContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallContainer:");
}

id objc_msgSend_setCallDestinationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDestinationID:");
}

id objc_msgSend_setCallDestinationIDType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDestinationIDType:");
}

id objc_msgSend_setCallDetailsCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDetailsCoordinator:");
}

id objc_msgSend_setCallDetailsNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDetailsNavigationController:");
}

id objc_msgSend_setCallDetailsViewButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDetailsViewButton:");
}

id objc_msgSend_setCallDialStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDialStartTime:");
}

id objc_msgSend_setCallDisconnectReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDisconnectReason:");
}

id objc_msgSend_setCallDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDisplayStyle:");
}

id objc_msgSend_setCallDisplayStyleManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDisplayStyleManager:");
}

id objc_msgSend_setCallDurationTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDurationTimer:");
}

id objc_msgSend_setCallDurationTimerForParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallDurationTimerForParticipantsView:");
}

id objc_msgSend_setCallEnding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallEnding:");
}

id objc_msgSend_setCallForBackgroundImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallForBackgroundImage:");
}

id objc_msgSend_setCallForBackgroundImage_animated_callDisplayStyleChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallForBackgroundImage:animated:callDisplayStyleChanged:");
}

id objc_msgSend_setCallForParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallForParticipantsView:");
}

id objc_msgSend_setCallGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallGroups:");
}

id objc_msgSend_setCallIsAboutToEndForStewie_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallIsAboutToEndForStewie:");
}

id objc_msgSend_setCallProviderManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallProviderManager:");
}

id objc_msgSend_setCallServiceSpeakableName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallServiceSpeakableName:");
}

id objc_msgSend_setCallToDecline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallToDecline:");
}

id objc_msgSend_setCallUUIDWaitingToPresentBanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallUUIDWaitingToPresentBanner:");
}

id objc_msgSend_setCallWaitingLayoutConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallWaitingLayoutConstraints:");
}

id objc_msgSend_setCallerIDType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallerIDType:");
}

id objc_msgSend_setCameraActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCameraActive:");
}

id objc_msgSend_setCameraStateMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCameraStateMonitor:");
}

id objc_msgSend_setCanCancelContentTouches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanCancelContentTouches:");
}

id objc_msgSend_setCanDumpHierarchy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanDumpHierarchy:");
}

id objc_msgSend_setCanSendTextMessagesBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanSendTextMessagesBlock:");
}

id objc_msgSend_setCanSwitchCamera_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanSwitchCamera:");
}

id objc_msgSend_setCancelButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelButton:");
}

id objc_msgSend_setCaptureView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCaptureView:");
}

id objc_msgSend_setCarKitSessionStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarKitSessionStatus:");
}

id objc_msgSend_setCarPlayExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarPlayExternalDevice:");
}

id objc_msgSend_setCarSessionStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarSessionStatus:");
}

id objc_msgSend_setCardActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardActions:");
}

id objc_msgSend_setCategoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategoryIdentifier:");
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenter:");
}

id objc_msgSend_setCharge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCharge:");
}

id objc_msgSend_setCheckInTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckInTimer:");
}

id objc_msgSend_setCheckInViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckInViewModel:");
}

id objc_msgSend_setChevronStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChevronStyle:");
}

id objc_msgSend_setClawHoldInitialTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClawHoldInitialTimer:");
}

id objc_msgSend_setClawResolution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClawResolution:");
}

id objc_msgSend_setClawSwipeAfterRTCTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClawSwipeAfterRTCTimeout:");
}

id objc_msgSend_setClientSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientSessionIdentifier:");
}

id objc_msgSend_setClientSessionIdentifierFromPiPAuthorization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientSessionIdentifierFromPiPAuthorization:");
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClipsToBounds:");
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColor:");
}

id objc_msgSend_setColorTintMaskImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColorTintMaskImage:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionHandler:");
}

id objc_msgSend_setCompositingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompositingFilter:");
}

id objc_msgSend_setConferenceParticipantCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConferenceParticipantCalls:");
}

id objc_msgSend_setConferenceParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConferenceParticipants:");
}

id objc_msgSend_setConferenceParticipantsButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConferenceParticipantsButton:");
}

id objc_msgSend_setConferenceTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConferenceTable:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConfirmationTimeoutTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmationTimeoutTimer:");
}

id objc_msgSend_setConnectedCallIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectedCallIdentifiers:");
}

id objc_msgSend_setConnectedSceneSessionIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectedSceneSessionIdentifiers:");
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstant:");
}

id objc_msgSend_setConstraintsStatePrimary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstraintsStatePrimary:");
}

id objc_msgSend_setContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContact:");
}

id objc_msgSend_setContactCountButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactCountButton:");
}

id objc_msgSend_setContactForParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactForParticipantsView:");
}

id objc_msgSend_setContactIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactIdentifier:");
}

id objc_msgSend_setContactLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactLabel:");
}

id objc_msgSend_setContactNameForParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactNameForParticipantsView:");
}

id objc_msgSend_setContactStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactStore:");
}

id objc_msgSend_setContacts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContacts:");
}

id objc_msgSend_setContactsViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactsViewController:");
}

id objc_msgSend_setContainerSpecificLeftConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerSpecificLeftConstraint:");
}

id objc_msgSend_setContainerSpecificRightConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerSpecificRightConstraint:");
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCompressionResistancePriority:forAxis:");
}

id objc_msgSend_setContentEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentEdgeInsets:");
}

id objc_msgSend_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentHuggingPriority:forAxis:");
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInset:");
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMode:");
}

id objc_msgSend_setContentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentView:");
}

id objc_msgSend_setContentVisibility_animationSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentVisibility:animationSettings:");
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContents:");
}

id objc_msgSend_setContentsCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentsCenter:");
}

id objc_msgSend_setContentsIsSingleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentsIsSingleValue:");
}

id objc_msgSend_setContentsScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentsScale:");
}

id objc_msgSend_setContextForCustomReplyWithSubscriptionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextForCustomReplyWithSubscriptionIdentifier:");
}

id objc_msgSend_setContextMenuEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextMenuEnabled:");
}

id objc_msgSend_setContextMenuInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextMenuInteractionEnabled:");
}

id objc_msgSend_setContextMenuIsPrimary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextMenuIsPrimary:");
}

id objc_msgSend_setControlImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlImage:");
}

id objc_msgSend_setControlType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlType:");
}

id objc_msgSend_setControlTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlTypes:");
}

id objc_msgSend_setConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConversation:");
}

id objc_msgSend_setCorner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCorner:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setCornerStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerStyle:");
}

id objc_msgSend_setCountLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountLimit:");
}

id objc_msgSend_setCountdownPausedTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountdownPausedTime:");
}

id objc_msgSend_setCountdownStartedTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountdownStartedTime:");
}

id objc_msgSend_setCountdownTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountdownTimer:");
}

id objc_msgSend_setCountdownViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountdownViewModel:");
}

id objc_msgSend_setCoverViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverViewController:");
}

id objc_msgSend_setCurrentAlertButtonAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentAlertButtonAction:");
}

id objc_msgSend_setCurrentButtonPressState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentButtonPressState:");
}

id objc_msgSend_setCurrentCycleStringIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentCycleStringIndex:");
}

id objc_msgSend_setCurrentInteractiveState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentInteractiveState:");
}

id objc_msgSend_setCurrentJoinConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentJoinConversationRequest:");
}

id objc_msgSend_setCurrentMiddleView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentMiddleView:");
}

id objc_msgSend_setCurrentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentMode:");
}

id objc_msgSend_setCurrentOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentOrientation:");
}

id objc_msgSend_setCurrentPIPAnimationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPIPAnimationStyle:");
}

id objc_msgSend_setCurrentSOSInitiationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentSOSInitiationState:");
}

id objc_msgSend_setCurrentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentState:");
}

id objc_msgSend_setCurrentState_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentState:animated:");
}

id objc_msgSend_setCurrentState_animated_animationCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentState:animated:animationCompletionBlock:");
}

id objc_msgSend_setCurrentStatusLabelIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentStatusLabelIndex:");
}

id objc_msgSend_setCurrentVideoOverlayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentVideoOverlayMode:");
}

id objc_msgSend_setCurrentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentView:");
}

id objc_msgSend_setCurrentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentViewController:");
}

id objc_msgSend_setCurrentlyFocusedButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentlyFocusedButton:");
}

id objc_msgSend_setCustomCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomCornerRadius:");
}

id objc_msgSend_setCustomMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomMessage:");
}

id objc_msgSend_setCycleStrings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCycleStrings:");
}

id objc_msgSend_setCycleTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCycleTimer:");
}

id objc_msgSend_setDamping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDamping:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDateOfCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateOfCall:");
}

id objc_msgSend_setDateOfSOSEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateOfSOSEvent:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDeclineAndMessageIsAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeclineAndMessageIsAvailable:");
}

id objc_msgSend_setDeclineAndRemindIsAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeclineAndRemindIsAvailable:");
}

id objc_msgSend_setDeclineWithMessageController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeclineWithMessageController:");
}

id objc_msgSend_setDefaultActionURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultActionURL:");
}

id objc_msgSend_setDefaultBackgroundGradientView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultBackgroundGradientView:");
}

id objc_msgSend_setDelaysContentTouches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelaysContentTouches:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDelegates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegates:");
}

id objc_msgSend_setDeleteButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeleteButton:");
}

id objc_msgSend_setDeleteButtonAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeleteButtonAlpha:");
}

id objc_msgSend_setDescriptionText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescriptionText:");
}

id objc_msgSend_setDesiredAccuracy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesiredAccuracy:");
}

id objc_msgSend_setDesiredHardwareButtonEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesiredHardwareButtonEvents:");
}

id objc_msgSend_setDeviceSupportsFindMy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceSupportsFindMy:");
}

id objc_msgSend_setDialAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDialAction:");
}

id objc_msgSend_setDialLastDialedNumberByDoubleTap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDialLastDialedNumberByDoubleTap:");
}

id objc_msgSend_setDialType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDialType:");
}

id objc_msgSend_setDialerController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDialerController:");
}

id objc_msgSend_setDialerType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDialerType:");
}

id objc_msgSend_setDidAnimatePictureInPictureStopCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidAnimatePictureInPictureStopCompletionBlock:");
}

id objc_msgSend_setDidDeepLinkToCallDetailsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidDeepLinkToCallDetailsView:");
}

id objc_msgSend_setDidDeepLinkToPTTCallDetailsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidDeepLinkToPTTCallDetailsView:");
}

id objc_msgSend_setDidExpandIncomingCallBanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidExpandIncomingCallBanner:");
}

id objc_msgSend_setDidNotifyMutedCaller_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidNotifyMutedCaller:");
}

id objc_msgSend_setDidRequestToSpeakAlertUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidRequestToSpeakAlertUtterance:");
}

id objc_msgSend_setDidTapRevealButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidTapRevealButton:");
}

id objc_msgSend_setDidTriggerAutoCountdownAlertBefore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidTriggerAutoCountdownAlertBefore:");
}

id objc_msgSend_setDimmed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDimmed:");
}

id objc_msgSend_setDimmed_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDimmed:animated:");
}

id objc_msgSend_setDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirection:");
}

id objc_msgSend_setDisableActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableActions:");
}

id objc_msgSend_setDisableUpdateMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableUpdateMask:");
}

id objc_msgSend_setDisablesLayerCloning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisablesLayerCloning:");
}

id objc_msgSend_setDisconnectCallPreflight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisconnectCallPreflight:");
}

id objc_msgSend_setDisconnectCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisconnectCallUUID:");
}

id objc_msgSend_setDiscoverabilityTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverabilityTitle:");
}

id objc_msgSend_setDismissalAnimationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissalAnimationStyle:");
}

id objc_msgSend_setDismissalAssertionReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissalAssertionReason:");
}

id objc_msgSend_setDismissalWasDemandedBeforeRemoteViewControllerWasAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissalWasDemandedBeforeRemoteViewControllerWasAvailable:");
}

id objc_msgSend_setDisplayedCallerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayedCallerID:");
}

id objc_msgSend_setDisplayedLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayedLabel:");
}

id objc_msgSend_setDisplayedName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayedName:");
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistribution:");
}

id objc_msgSend_setDowngradeToAudio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDowngradeToAudio:");
}

id objc_msgSend_setDragStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDragStyle:");
}

id objc_msgSend_setDueDateComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDueDateComponents:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setEffectView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEffectView:");
}

id objc_msgSend_setEmergencyCallBeforePresentingStickyAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmergencyCallBeforePresentingStickyAlert:");
}

id objc_msgSend_setEmergencyCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmergencyCoordinator:");
}

id objc_msgSend_setEmergencyTextViaSatelliteLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmergencyTextViaSatelliteLabel:");
}

id objc_msgSend_setEmergencyTextViaSatelliteUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmergencyTextViaSatelliteUI");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEndAngle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndAngle:");
}

id objc_msgSend_setEndButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndButton:");
}

id objc_msgSend_setEndButtonHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndButtonHidden:");
}

id objc_msgSend_setEndedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndedState:");
}

id objc_msgSend_setEndingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndingState:");
}

id objc_msgSend_setExpanseHUDDodgingInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpanseHUDDodgingInsets:");
}

id objc_msgSend_setExpectingSystemInitiatedPIPInterruptionStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpectingSystemInitiatedPIPInterruptionStop:");
}

id objc_msgSend_setFailedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailedCall:");
}

id objc_msgSend_setFailureAlertController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailureAlertController:");
}

id objc_msgSend_setFeatureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFeatureFlags:");
}

id objc_msgSend_setFieldModeSendButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFieldModeSendButton:");
}

id objc_msgSend_setFill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFill");
}

id objc_msgSend_setFillColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillColor:");
}

id objc_msgSend_setFillMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillMode:");
}

id objc_msgSend_setFillRule_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillRule:");
}

id objc_msgSend_setFilterMaskImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilterMaskImage:");
}

id objc_msgSend_setFilteredRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilteredRequest:");
}

id objc_msgSend_setFilters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilters:");
}

id objc_msgSend_setFindMyButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFindMyButton:");
}

id objc_msgSend_setFireDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFireDate:");
}

id objc_msgSend_setFirstSubtitleLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstSubtitleLabel:");
}

id objc_msgSend_setFlippyView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFlippyView:");
}

id objc_msgSend_setFlippyViewContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFlippyViewContainer:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontSize:");
}

id objc_msgSend_setFootprint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFootprint:");
}

id objc_msgSend_setForCarPlay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForCarPlay:");
}

id objc_msgSend_setForegroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForegroundColor:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFrameStallSkipRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrameStallSkipRequest:");
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromValue:");
}

id objc_msgSend_setFrontBoardInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrontBoardInterfaceOrientation:");
}

id objc_msgSend_setFrontBoardOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrontBoardOptions:");
}

id objc_msgSend_setGalleryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGalleryView:");
}

id objc_msgSend_setGender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGender:");
}

id objc_msgSend_setGeoLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGeoLocation:");
}

id objc_msgSend_setGrayscaleTintMaskImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGrayscaleTintMaskImage:");
}

id objc_msgSend_setGroupName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupName:");
}

id objc_msgSend_setHIDEventSystemClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHIDEventSystemClient:");
}

id objc_msgSend_setHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandle:");
}

id objc_msgSend_setHandlesCallWaitingCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandlesCallWaitingCalls:");
}

id objc_msgSend_setHandlingKeypadPress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandlingKeypadPress:");
}

id objc_msgSend_setHardPauseButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHardPauseButton:");
}

id objc_msgSend_setHasCurrentCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasCurrentCalls:");
}

id objc_msgSend_setHasEverAppearedInWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasEverAppearedInWindow:");
}

id objc_msgSend_setHasInvertedUIElementColorsBasedOnPoster_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasInvertedUIElementColorsBasedOnPoster:");
}

id objc_msgSend_setHasKeypadUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasKeypadUpdated:");
}

id objc_msgSend_setHasMedicalIDSlider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasMedicalIDSlider:");
}

id objc_msgSend_setHasOutstandingPillAssertions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasOutstandingPillAssertions:");
}

id objc_msgSend_setHasParticipantVideoForActiveConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasParticipantVideoForActiveConversation:");
}

id objc_msgSend_setHasRingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasRingView:");
}

id objc_msgSend_setHasSetupForScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasSetupForScene:");
}

id objc_msgSend_setHasStartedInitialSuppressionOfInCallStatusBarForFullscreenUIReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasStartedInitialSuppressionOfInCallStatusBarForFullscreenUIReason:");
}

id objc_msgSend_setHasTwoMiddleSliders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasTwoMiddleSliders:");
}

id objc_msgSend_setHasUserScoreFeedbackViewHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasUserScoreFeedbackViewHidden:");
}

id objc_msgSend_setHeightConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeightConstraints:");
}

id objc_msgSend_setHeldCallControlsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeldCallControlsView:");
}

id objc_msgSend_setHidEventMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidEventMonitor:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHidesBackButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesBackButton:");
}

id objc_msgSend_setHidesLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesLabel:");
}

id objc_msgSend_setHighlighted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlighted:");
}

id objc_msgSend_setHitTestsAsOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHitTestsAsOpaque:");
}

id objc_msgSend_setHorizontalPositioningConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHorizontalPositioningConstraint:");
}

id objc_msgSend_setIOSDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIOSDelegate:");
}

id objc_msgSend_setIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIcon:");
}

id objc_msgSend_setIconSizeRatio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconSizeRatio:");
}

id objc_msgSend_setIconView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconView:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdleState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleState:");
}

id objc_msgSend_setIdleTimerDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleTimerDisabled:");
}

id objc_msgSend_setIdleTimerDisabled_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleTimerDisabled:forReason:");
}

id objc_msgSend_setIgnoreUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreUpdates:");
}

id objc_msgSend_setIgnoresInteractionEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoresInteractionEvents:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setImage_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forState:");
}

id objc_msgSend_setImage_forStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forStates:");
}

id objc_msgSend_setImageEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageEdgeInsets:");
}

id objc_msgSend_setImagePadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImagePadding:");
}

id objc_msgSend_setImpersonatedCarPlayAppIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImpersonatedCarPlayAppIdentifier:");
}

id objc_msgSend_setInCallRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInCallRootViewController:");
}

id objc_msgSend_setInCallStatusBarSuppressionReasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInCallStatusBarSuppressionReasons:");
}

id objc_msgSend_setIncludeDonatedContacts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludeDonatedContacts:");
}

id objc_msgSend_setIncludeSuggestedContacts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludeSuggestedContacts:");
}

id objc_msgSend_setIncomingCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncomingCall:");
}

id objc_msgSend_setInfoView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfoView:");
}

id objc_msgSend_setInfoViewFactory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfoViewFactory:");
}

id objc_msgSend_setInitializationBlockQueued_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitializationBlockQueued:");
}

id objc_msgSend_setInsulatorView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInsulatorView:");
}

id objc_msgSend_setInteractiveStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractiveStartTime:");
}

id objc_msgSend_setInteractivelyAnimateSlidingButtonBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractivelyAnimateSlidingButtonBlock:");
}

id objc_msgSend_setInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterval:");
}

id objc_msgSend_setInvitationPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvitationPreferences:");
}

id objc_msgSend_setIsActiveAndHiddenPictureInPicture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsActiveAndHiddenPictureInPicture:");
}

id objc_msgSend_setIsAmbient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAmbient:");
}

id objc_msgSend_setIsBeingRemoteControlled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsBeingRemoteControlled:");
}

id objc_msgSend_setIsBroadcastingScreenSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsBroadcastingScreenSharing:");
}

id objc_msgSend_setIsDismissed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDismissed:");
}

id objc_msgSend_setIsDismissedWithoutPictureInPicture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDismissedWithoutPictureInPicture:");
}

id objc_msgSend_setIsDisplayedInBanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDisplayedInBanner:");
}

id objc_msgSend_setIsDisplayedInMiniWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDisplayedInMiniWindow:");
}

id objc_msgSend_setIsFullScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFullScreen:");
}

id objc_msgSend_setIsHomeIndicatorHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsHomeIndicatorHidden:");
}

id objc_msgSend_setIsHostedInRemoteViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsHostedInRemoteViewController:");
}

id objc_msgSend_setIsInBackground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsInBackground:");
}

id objc_msgSend_setIsInCallEndedBlockAndReportFlow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsInCallEndedBlockAndReportFlow:");
}

id objc_msgSend_setIsMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMuted:");
}

id objc_msgSend_setIsOnScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsOnScreen:");
}

id objc_msgSend_setIsOrientationLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsOrientationLocked:");
}

id objc_msgSend_setIsPipStashed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPipStashed:");
}

id objc_msgSend_setIsPipped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPipped:");
}

id objc_msgSend_setIsPresentingAmbient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPresentingAmbient:");
}

id objc_msgSend_setIsScreenSharingFullScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsScreenSharingFullScreen:");
}

id objc_msgSend_setIsSendingVideo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSendingVideo:");
}

id objc_msgSend_setIsShowingAlertSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsShowingAlertSubtitle:");
}

id objc_msgSend_setIsShowingCallFailure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsShowingCallFailure:");
}

id objc_msgSend_setIsShowingIncomingNameUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsShowingIncomingNameUpdate:");
}

id objc_msgSend_setIsUsedForScreenSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUsedForScreenSharing:");
}

id objc_msgSend_setIsUserResponsive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUserResponsive:");
}

id objc_msgSend_setKeyIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyIndex:");
}

id objc_msgSend_setKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyPath:");
}

id objc_msgSend_setKeyTimes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyTimes:");
}

id objc_msgSend_setKeypadBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeypadBackgroundView:");
}

id objc_msgSend_setKeypadPosterNameViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeypadPosterNameViewModel:");
}

id objc_msgSend_setKnobColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKnobColor:");
}

id objc_msgSend_setKnobImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKnobImage:");
}

id objc_msgSend_setKnobImageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKnobImageOffset:");
}

id objc_msgSend_setKnobPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKnobPosition:");
}

id objc_msgSend_setKnobText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKnobText:");
}

id objc_msgSend_setLabelConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelConstraints:");
}

id objc_msgSend_setLabelDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelDescriptor:");
}

id objc_msgSend_setLabelLayoutState_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelLayoutState:animated:");
}

id objc_msgSend_setLabelsOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelsOrder:");
}

id objc_msgSend_setLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageCode:");
}

id objc_msgSend_setLastPickedRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPickedRoute:");
}

id objc_msgSend_setLastScheduledTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastScheduledTime:");
}

id objc_msgSend_setLcdView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLcdView:");
}

id objc_msgSend_setLcdViewTextFieldDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLcdViewTextFieldDelegate:");
}

id objc_msgSend_setLeadingSideLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeadingSideLayoutGuide:");
}

id objc_msgSend_setLeftBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftBarButtonItem:");
}

id objc_msgSend_setLeftButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftButton:");
}

id objc_msgSend_setLegibilitySettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLegibilitySettings:");
}

id objc_msgSend_setLimitedSoftPhoneKeypad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLimitedSoftPhoneKeypad:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setLocalAudioTogglingDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalAudioTogglingDelegate:");
}

id objc_msgSend_setLocalSenderIdentityAccountUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalSenderIdentityAccountUUID:");
}

id objc_msgSend_setLocalSenderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalSenderIdentityUUID:");
}

id objc_msgSend_setLocalizedDateFormatFromTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedDateFormatFromTemplate:");
}

id objc_msgSend_setLocalizedSenderIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedSenderIdentity:");
}

id objc_msgSend_setLocationAuthorizationStatusCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationAuthorizationStatusCallback:");
}

id objc_msgSend_setLockedOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockedOrientation:");
}

id objc_msgSend_setMainInCallViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainInCallViewController:");
}

id objc_msgSend_setMainLeftButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainLeftButton:");
}

id objc_msgSend_setMainNumberLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainNumberLabel:");
}

id objc_msgSend_setMainRightButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainRightButton:");
}

id objc_msgSend_setMarqueeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMarqueeEnabled:");
}

id objc_msgSend_setMarqueeRunning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMarqueeRunning:");
}

id objc_msgSend_setMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMask:");
}

id objc_msgSend_setMaskFromImage_onView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaskFromImage:onView:");
}

id objc_msgSend_setMaskPath_onView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaskPath:onView:");
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasksToBounds:");
}

id objc_msgSend_setMass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMass:");
}

id objc_msgSend_setMaximumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumContentSizeCategory:");
}

id objc_msgSend_setMaximumDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumDuration:");
}

id objc_msgSend_setMaximumNumberOfTouches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumNumberOfTouches:");
}

id objc_msgSend_setMediaPipFrameInWindowScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaPipFrameInWindowScene:");
}

id objc_msgSend_setMedicalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMedicalID:");
}

id objc_msgSend_setMedicalIDButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMedicalIDButton:");
}

id objc_msgSend_setMedicalIDNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMedicalIDNavigationController:");
}

id objc_msgSend_setMedicalIDSlidingButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMedicalIDSlidingButton:");
}

id objc_msgSend_setMedicalIDSlidingButtonCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMedicalIDSlidingButtonCompletionBlock:");
}

id objc_msgSend_setMenu_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenu:");
}

id objc_msgSend_setMenuDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenuDataSource:");
}

id objc_msgSend_setMenuVisible_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenuVisible:animated:");
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessage:");
}

id objc_msgSend_setMessageComposeDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageComposeDelegate:");
}

id objc_msgSend_setMessageLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageLabel:");
}

id objc_msgSend_setMessageStoreClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageStoreClient:");
}

id objc_msgSend_setMetadataCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadataCache:");
}

id objc_msgSend_setMicrophoneMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMicrophoneMuted:");
}

id objc_msgSend_setMiddleSizingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMiddleSizingView:");
}

id objc_msgSend_setMiddleViewState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMiddleViewState:");
}

id objc_msgSend_setMiddleViewState_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMiddleViewState:animated:");
}

id objc_msgSend_setMiddleViewState_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMiddleViewState:animated:completion:");
}

id objc_msgSend_setMiniWindowCutoutFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMiniWindowCutoutFrame:");
}

id objc_msgSend_setMinimumFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumFontSize:");
}

id objc_msgSend_setMinimumInteritemSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumInteritemSpacing:");
}

id objc_msgSend_setMinimumLineSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumLineSpacing:");
}

id objc_msgSend_setMinimumNumberOfTouches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumNumberOfTouches:");
}

id objc_msgSend_setMinimumPressDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumPressDuration:");
}

id objc_msgSend_setMinimumScaleFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumScaleFactor:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setModalTransitionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalTransitionStyle:");
}

id objc_msgSend_setMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMode:");
}

id objc_msgSend_setModesPriorityQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModesPriorityQueue:");
}

id objc_msgSend_setMostRecentlyDisconnectedAudioCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMostRecentlyDisconnectedAudioCall:");
}

id objc_msgSend_setMostRecentlyDisconnectedVideoCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMostRecentlyDisconnectedVideoCall:");
}

id objc_msgSend_setMultiwayViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiwayViewController:");
}

id objc_msgSend_setMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMuted:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setName_numberLabel_suggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:numberLabel:suggestion:");
}

id objc_msgSend_setNameAndLabelLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameAndLabelLabel:");
}

id objc_msgSend_setNameOverrideLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameOverrideLabel:");
}

id objc_msgSend_setNameOverrideString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameOverrideString:");
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:");
}

id objc_msgSend_setNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:animated:");
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsDisplay");
}

id objc_msgSend_setNeedsFocusUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsFocusUpdate");
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsLayout");
}

id objc_msgSend_setNeedsMerge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsMerge");
}

id objc_msgSend_setNeedsStatusBarAppearanceUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsStatusBarAppearanceUpdate");
}

id objc_msgSend_setNeedsStatusBarPillSuppressionUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsStatusBarPillSuppressionUpdate");
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUpdateConstraints");
}

id objc_msgSend_setNeedsUpdateOfHomeIndicatorAutoHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUpdateOfHomeIndicatorAutoHidden");
}

id objc_msgSend_setNeedsUserInteractivePriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUserInteractivePriority:");
}

id objc_msgSend_setNeedsWhitePointAdaptivityStyleUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsWhitePointAdaptivityStyleUpdate");
}

id objc_msgSend_setNoContentBannerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNoContentBannerView:");
}

id objc_msgSend_setNonEditingLinebreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNonEditingLinebreakMode:");
}

id objc_msgSend_setNonSessionBackedConversationCreationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNonSessionBackedConversationCreationMode:");
}

id objc_msgSend_setNonSessionBackedConversationCreationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNonSessionBackedConversationCreationQueue:");
}

id objc_msgSend_setNotificationCategories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationCategories:");
}

id objc_msgSend_setNumber_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumber:forKey:");
}

id objc_msgSend_setNumberLabelHorizontalConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberLabelHorizontalConstraints:");
}

id objc_msgSend_setNumberOfEpochsForMountProbability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfEpochsForMountProbability:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setNumberOfTapsRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfTapsRequired:");
}

id objc_msgSend_setNumberOfTouchesRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfTouchesRequired:");
}

id objc_msgSend_setNumberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberStyle:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservers:");
}

id objc_msgSend_setOkButtonAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOkButtonAction:");
}

id objc_msgSend_setOldMultiwayPIPViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOldMultiwayPIPViewController:");
}

id objc_msgSend_setOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpacity:");
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpaque:");
}

id objc_msgSend_setOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrientation:");
}

id objc_msgSend_setOrientationChangedEventsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrientationChangedEventsEnabled:");
}

id objc_msgSend_setOrientationEventsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrientationEventsEnabled:");
}

id objc_msgSend_setOriginalBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalBackgroundColor:");
}

id objc_msgSend_setOriginatingUIType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginatingUIType:");
}

id objc_msgSend_setOutgoingRingingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutgoingRingingState:");
}

id objc_msgSend_setOverlayDismissTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverlayDismissTimer:");
}

id objc_msgSend_setOverlayView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverlayView:");
}

id objc_msgSend_setOverrideUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideUserInterfaceStyle:");
}

id objc_msgSend_setPanGestureFirstTouchLocationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPanGestureFirstTouchLocationInView:");
}

id objc_msgSend_setParticipantAndStatusRectangleBottomConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantAndStatusRectangleBottomConstraint:");
}

id objc_msgSend_setParticipantAndStatusRectangleCenterXConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantAndStatusRectangleCenterXConstraint:");
}

id objc_msgSend_setParticipantAndStatusRectangleCenterYConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantAndStatusRectangleCenterYConstraint:");
}

id objc_msgSend_setParticipantAndStatusRectangleMaxLeadingConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantAndStatusRectangleMaxLeadingConstraint:");
}

id objc_msgSend_setParticipantAndStatusRectangleMinLeadingConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantAndStatusRectangleMinLeadingConstraint:");
}

id objc_msgSend_setParticipantAndStatusRectangleTopConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantAndStatusRectangleTopConstraint:");
}

id objc_msgSend_setParticipantAndStatusRectangleTrailingConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantAndStatusRectangleTrailingConstraint:");
}

id objc_msgSend_setParticipantMarqueeLabelFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantMarqueeLabelFont:");
}

id objc_msgSend_setParticipantMarqueeLabelHorizontalConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantMarqueeLabelHorizontalConstraint:");
}

id objc_msgSend_setParticipantMarqueeLabelRightConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantMarqueeLabelRightConstraint:");
}

id objc_msgSend_setParticipantMarqueeLabelTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantMarqueeLabelTextColor:");
}

id objc_msgSend_setParticipantMarqueeLabelTrailingConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantMarqueeLabelTrailingConstraint:");
}

id objc_msgSend_setParticipantName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantName:");
}

id objc_msgSend_setParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantsView:");
}

id objc_msgSend_setParticipantsViewBottomConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantsViewBottomConstraint:");
}

id objc_msgSend_setParticipantsViewCenterXConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantsViewCenterXConstraint:");
}

id objc_msgSend_setParticipantsViewCenterYConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantsViewCenterYConstraint:");
}

id objc_msgSend_setParticipantsViewControllersShouldIgnoreUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantsViewControllersShouldIgnoreUpdates:");
}

id objc_msgSend_setParticipantsViewLeadingConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantsViewLeadingConstraint:");
}

id objc_msgSend_setParticipantsViewShouldShowParticipantLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantsViewShouldShowParticipantLabel:");
}

id objc_msgSend_setParticipantsViewTopConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantsViewTopConstraint:");
}

id objc_msgSend_setParticipantsViewTrailingConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantsViewTrailingConstraint:");
}

id objc_msgSend_setParticipantsViewVerticalPosterNameTopConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantsViewVerticalPosterNameTopConstraint:");
}

id objc_msgSend_setPassiveOrientationEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPassiveOrientationEvents:");
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPath:");
}

id objc_msgSend_setPauseTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPauseTimer:");
}

id objc_msgSend_setPendingMiddleViewAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingMiddleViewAnimations:");
}

id objc_msgSend_setPendingRestrictedScreenTimeRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingRestrictedScreenTimeRequest:");
}

id objc_msgSend_setPerformDialAssist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerformDialAssist:");
}

id objc_msgSend_setPerformLocalDialAssist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerformLocalDialAssist:");
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPermittedArrowDirections:");
}

id objc_msgSend_setPhoneNumberPrefixHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneNumberPrefixHint:");
}

id objc_msgSend_setPhonePadView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhonePadView:");
}

id objc_msgSend_setPhonePadViewTopConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhonePadViewTopConstraint:");
}

id objc_msgSend_setPictureInPictureShouldStartWhenEnteringBackground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPictureInPictureShouldStartWhenEnteringBackground:");
}

id objc_msgSend_setPillLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPillLayoutGuide:");
}

id objc_msgSend_setPillStateMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPillStateMonitor:");
}

id objc_msgSend_setPillView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPillView:");
}

id objc_msgSend_setPipContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipContentViewController:");
}

id objc_msgSend_setPipController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipController:");
}

id objc_msgSend_setPipDeviceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipDeviceOrientation:");
}

id objc_msgSend_setPipFinishedCancellationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipFinishedCancellationBlock:");
}

id objc_msgSend_setPipFinishedTransitionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipFinishedTransitionBlock:");
}

id objc_msgSend_setPipInterruptedCallIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipInterruptedCallIdentifier:");
}

id objc_msgSend_setPipIsBeingResized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipIsBeingResized:");
}

id objc_msgSend_setPipPlaceholderView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipPlaceholderView:");
}

id objc_msgSend_setPipProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipProxy:");
}

id objc_msgSend_setPipState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipState:");
}

id objc_msgSend_setPlayAnnouncementBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayAnnouncementBlock:");
}

id objc_msgSend_setPlayingWithAudio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayingWithAudio:");
}

id objc_msgSend_setPlaysSounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaysSounds:");
}

id objc_msgSend_setPostCallMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPostCallMode");
}

id objc_msgSend_setPostContactNotificationMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPostContactNotificationMode");
}

id objc_msgSend_setPosterBadgeView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPosterBadgeView:");
}

id objc_msgSend_setPosterNameViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPosterNameViewModel:");
}

id objc_msgSend_setPowerDownCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPowerDownCompletionBlock:");
}

id objc_msgSend_setPreUtteranceDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreUtteranceDelay:");
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicate:");
}

id objc_msgSend_setPredicateForSelectionOfContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicateForSelectionOfContact:");
}

id objc_msgSend_setPreferencesValue_forKey_domain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferencesValue:forKey:domain:");
}

id objc_msgSend_setPreferredAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredAlignment:");
}

id objc_msgSend_setPreferredBackgroundActivitiesToSuppress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredBackgroundActivitiesToSuppress:");
}

id objc_msgSend_setPreferredBannerHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredBannerHeight:");
}

id objc_msgSend_setPreferredContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredContentSize:");
}

id objc_msgSend_setPreferredHardwareButtonEventTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredHardwareButtonEventTypes:");
}

id objc_msgSend_setPreferredLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredLayout:");
}

id objc_msgSend_setPreferredMaxLayoutWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredMaxLayoutWidth:");
}

id objc_msgSend_setPreferredPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredPhoneNumber:");
}

id objc_msgSend_setPreferredPresentationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredPresentationMode:");
}

id objc_msgSend_setPreferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredStyle:");
}

id objc_msgSend_setPreferredSymbolConfigurationForImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredSymbolConfigurationForImage:");
}

id objc_msgSend_setPrefersBannersHiddenFromClonedDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersBannersHiddenFromClonedDisplay:");
}

id objc_msgSend_setPrefersHiddenWhenDismissed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersHiddenWhenDismissed:");
}

id objc_msgSend_setPrefersLargeTitles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersLargeTitles:");
}

id objc_msgSend_setPrefersWhiteButtonTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersWhiteButtonTextColor:");
}

id objc_msgSend_setPreparedToAnimateToFullScreenCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreparedToAnimateToFullScreenCompletionBlock:");
}

id objc_msgSend_setPresentationMode_callUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationMode:callUUID:");
}

id objc_msgSend_setPreservesSuperviewLayoutMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreservesSuperviewLayoutMargins:");
}

id objc_msgSend_setPreviousIsCallRinging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousIsCallRinging:");
}

id objc_msgSend_setPreviousTextSuggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousTextSuggestion:");
}

id objc_msgSend_setPrimaryCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryCalls:");
}

id objc_msgSend_setPrimaryCalls_conferencePhoneCalls_incomingCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryCalls:conferencePhoneCalls:incomingCall:");
}

id objc_msgSend_setPriorSystemVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriorSystemVolume:");
}

id objc_msgSend_setPrioritizedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrioritizedCall:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setPrivateButtonEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrivateButtonEnabled:");
}

id objc_msgSend_setPrivateButtonHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrivateButtonHidden:");
}

id objc_msgSend_setProcessAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessAssertion:");
}

id objc_msgSend_setProcessAssertionCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessAssertionCompletion:");
}

id objc_msgSend_setProcessAssertionTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessAssertionTimer:");
}

id objc_msgSend_setProcessHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessHandle:");
}

id objc_msgSend_setProximity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProximity:");
}

id objc_msgSend_setQueryItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryItems:");
}

id objc_msgSend_setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueue:");
}

id objc_msgSend_setRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRadius:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setRecipients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecipients:");
}

id objc_msgSend_setRedialedCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRedialedCallUUID:");
}

id objc_msgSend_setReleaseToCallStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReleaseToCallStartTime:");
}

id objc_msgSend_setReleaseToCallTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReleaseToCallTimer:");
}

id objc_msgSend_setReleaseToCallVoiceLoopTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReleaseToCallVoiceLoopTimer:");
}

id objc_msgSend_setRemoteHostViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteHostViewController:");
}

id objc_msgSend_setRemoteParticipantHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteParticipantHandles:");
}

id objc_msgSend_setRemoteVideoPresentationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteVideoPresentationState:");
}

id objc_msgSend_setRemoteViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteViewController:");
}

id objc_msgSend_setRemovedOnCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemovedOnCompletion:");
}

id objc_msgSend_setRenderMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRenderMode:");
}

id objc_msgSend_setRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRenderingMode:");
}

id objc_msgSend_setRenderingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRenderingViewController:");
}

id objc_msgSend_setRepresentedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRepresentedCall:");
}

id objc_msgSend_setRepresentedHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRepresentedHandle:");
}

id objc_msgSend_setRequestedCallActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestedCallActive:");
}

id objc_msgSend_setRequestedVCPresentationWithStatusBar_withReasonLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestedVCPresentationWithStatusBar:withReasonLog:");
}

id objc_msgSend_setRespondsToEventsWhileInCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRespondsToEventsWhileInCall:");
}

id objc_msgSend_setRestoreUserInterfaceForPictureInPictureStopCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRestoreUserInterfaceForPictureInPictureStopCompletionBlock:");
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItem:");
}

id objc_msgSend_setRightButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightButton:");
}

id objc_msgSend_setRingSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRingSize:");
}

id objc_msgSend_setRingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRingView:");
}

id objc_msgSend_setRingerSwitchEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRingerSwitchEnabled:");
}

id objc_msgSend_setRingingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRingingState:");
}

id objc_msgSend_setRootView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootView");
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootViewController:");
}

id objc_msgSend_setRotating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRotating:");
}

id objc_msgSend_setRouteListController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteListController:");
}

id objc_msgSend_setRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowHeight:");
}

id objc_msgSend_setSOS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSOS:");
}

id objc_msgSend_setSceneDidDisconnectBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSceneDidDisconnectBlock:");
}

id objc_msgSend_setSceneManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSceneManager:");
}

id objc_msgSend_setSceneSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSceneSessionIdentifier:");
}

id objc_msgSend_setSceneType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSceneType:");
}

id objc_msgSend_setScheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScheme:");
}

id objc_msgSend_setScreenSharingBroadcasterViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenSharingBroadcasterViewController:");
}

id objc_msgSend_setScreenSharingContainerViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenSharingContainerViewController:");
}

id objc_msgSend_setScreenSharingPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenSharingPresentation:");
}

id objc_msgSend_setScreenSharingTitle_andAvatarIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenSharingTitle:andAvatarIfNeeded:");
}

id objc_msgSend_setScreenSharingTitle_avatar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenSharingTitle:avatar:");
}

id objc_msgSend_setScreenTimeHostViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenTimeHostViewController:");
}

id objc_msgSend_setScreeningBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreeningBackgroundView:");
}

id objc_msgSend_setScreeningBackgroundViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreeningBackgroundViewController:");
}

id objc_msgSend_setScreeningConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreeningConstraints:");
}

id objc_msgSend_setScreeningPosterNameViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreeningPosterNameViewModel:");
}

id objc_msgSend_setScreeningState_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreeningState:animated:");
}

id objc_msgSend_setScreeningState_animated_overrideWithIsUnlocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreeningState:animated:overrideWithIsUnlocked:");
}

id objc_msgSend_setSearchButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchButton:");
}

id objc_msgSend_setSecondSubtitleLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondSubtitleLabel:");
}

id objc_msgSend_setSecondaryInfoLabelHorizontalConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondaryInfoLabelHorizontalConstraint:");
}

id objc_msgSend_setSecondaryInfoLabelTrailingConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondaryInfoLabelTrailingConstraint:");
}

id objc_msgSend_setSecondaryStringForParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondaryStringForParticipantsView:");
}

id objc_msgSend_setSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelected:");
}

id objc_msgSend_setSelectedSenderIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedSenderIdentity:");
}

id objc_msgSend_setSelectedState_forControlType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedState:forControlType:");
}

id objc_msgSend_setSelectedTextRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedTextRange:");
}

id objc_msgSend_setSelectionRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionRange:");
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionStyle:");
}

id objc_msgSend_setSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelector:");
}

id objc_msgSend_setSeparatorColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorColor:");
}

id objc_msgSend_setSeparatorInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorInset:");
}

id objc_msgSend_setSeparatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorStyle:");
}

id objc_msgSend_setSessionObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionObserver:");
}

id objc_msgSend_setShadowImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowImage:");
}

id objc_msgSend_setSharedContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedContentViewController:");
}

id objc_msgSend_setSharedInstanceOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedInstanceOverride:");
}

id objc_msgSend_setSharedProfileStateOracle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedProfileStateOracle:");
}

id objc_msgSend_setSharingScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharingScreen:");
}

id objc_msgSend_setShortSOSNotificationDisplayTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShortSOSNotificationDisplayTimestamp");
}

id objc_msgSend_setShouldAttemptRePresentationOfBannerOnConversationUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAttemptRePresentationOfBannerOnConversationUpdate:");
}

id objc_msgSend_setShouldAutoCountdownAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAutoCountdownAlert:");
}

id objc_msgSend_setShouldBecomeVisibleWhenWakingDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldBecomeVisibleWhenWakingDisplay:");
}

id objc_msgSend_setShouldDisableFadeInAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDisableFadeInAnimation:");
}

id objc_msgSend_setShouldDismissCMASAlerts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDismissCMASAlerts:");
}

id objc_msgSend_setShouldDismissOnUILock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDismissOnUILock:");
}

id objc_msgSend_setShouldDropBioAuthTokenOnDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDropBioAuthTokenOnDismiss:");
}

id objc_msgSend_setShouldForceDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldForceDismiss");
}

id objc_msgSend_setShouldHandleAlertCallDisconnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldHandleAlertCallDisconnection:");
}

id objc_msgSend_setShouldHideStatusBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldHideStatusBar:");
}

id objc_msgSend_setShouldHideViewsFromScreenSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldHideViewsFromScreenSharing:");
}

id objc_msgSend_setShouldIgnoreCarPlayAssertionInvalidations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldIgnoreCarPlayAssertionInvalidations:");
}

id objc_msgSend_setShouldIgnoreUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldIgnoreUpdates:");
}

id objc_msgSend_setShouldInsertSpaceBeforeNextOverrideStringCharacter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldInsertSpaceBeforeNextOverrideStringCharacter:");
}

id objc_msgSend_setShouldLockDeviceOnNextDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldLockDeviceOnNextDismiss");
}

id objc_msgSend_setShouldMaxVolumeCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldMaxVolumeCompletionBlock:");
}

id objc_msgSend_setShouldNeverBeShownWhenLaunchingFaceTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldNeverBeShownWhenLaunchingFaceTime:");
}

id objc_msgSend_setShouldObtainDismissalAssertions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldObtainDismissalAssertions:");
}

id objc_msgSend_setShouldPauseSOSCallBufferTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPauseSOSCallBufferTimer:");
}

id objc_msgSend_setShouldPowerDownViewShowFindMyAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPowerDownViewShowFindMyAlert:");
}

id objc_msgSend_setShouldPreferContinuityDisplayForFullScreenPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPreferContinuityDisplayForFullScreenPresentation:");
}

id objc_msgSend_setShouldPresentAlertButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPresentAlertButton:");
}

id objc_msgSend_setShouldPreventBannersWhenPresentedAsOverlay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPreventBannersWhenPresentedAsOverlay:");
}

id objc_msgSend_setShouldSetPresenceToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSetPresenceToken:");
}

id objc_msgSend_setShouldShowLargeAvatar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldShowLargeAvatar:");
}

id objc_msgSend_setShouldShowLargeAvatarForCallWaiting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldShowLargeAvatarForCallWaiting:");
}

id objc_msgSend_setShouldShowSharedProfileBanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldShowSharedProfileBanner:");
}

id objc_msgSend_setShouldShowSingleDurationLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldShowSingleDurationLabel:");
}

id objc_msgSend_setShouldStartPIPWhenPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldStartPIPWhenPossible:");
}

id objc_msgSend_setShouldSuppressShowingLastDialedNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSuppressShowingLastDialedNumber:");
}

id objc_msgSend_setShowDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowDisabled:");
}

id objc_msgSend_setShowInLockScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowInLockScreen:");
}

id objc_msgSend_setShowMessagesButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowMessagesButton:");
}

id objc_msgSend_setShowUIPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowUIPrompt:");
}

id objc_msgSend_setShowingMultiwayParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowingMultiwayParticipants:");
}

id objc_msgSend_setShowingOverlay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowingOverlay:");
}

id objc_msgSend_setShowingOverlay_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowingOverlay:animated:");
}

id objc_msgSend_setShowingStickyAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowingStickyAlert:");
}

id objc_msgSend_setShowingTrackLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowingTrackLabel:");
}

id objc_msgSend_setShowsActivitySpinner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsActivitySpinner:");
}

id objc_msgSend_setShowsCallDetailsViewButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsCallDetailsViewButton:");
}

id objc_msgSend_setShowsCallWaitingParticipantView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsCallWaitingParticipantView:");
}

id objc_msgSend_setShowsConferenceParticipantsButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsConferenceParticipantsButton:");
}

id objc_msgSend_setShowsDismissButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsDismissButton:");
}

id objc_msgSend_setShowsEmergencyAccessState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsEmergencyAccessState:");
}

id objc_msgSend_setShowsMenuAsPrimaryAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsMenuAsPrimaryAction:");
}

id objc_msgSend_setShowsShowWhenLockedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsShowWhenLockedState:");
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsVerticalScrollIndicator:");
}

id objc_msgSend_setSideButtonHintViewVisibilityControlling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSideButtonHintViewVisibilityControlling:");
}

id objc_msgSend_setSideButtonLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSideButtonLeft:");
}

id objc_msgSend_setSideButtonRight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSideButtonRight:");
}

id objc_msgSend_setSingleCallLabelView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSingleCallLabelView:");
}

id objc_msgSend_setSingleDurationTimerLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSingleDurationTimerLabel:");
}

id objc_msgSend_setSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSizeCategory:");
}

id objc_msgSend_setSliderAnimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSliderAnimator:");
}

id objc_msgSend_setSliderProgressDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSliderProgressDuration:");
}

id objc_msgSend_setSliderTimingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSliderTimingBlock:");
}

id objc_msgSend_setSlidingButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSlidingButton:");
}

id objc_msgSend_setSlidingViewEntryReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSlidingViewEntryReason:");
}

id objc_msgSend_setSlidingViewExitReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSlidingViewExitReason:");
}

id objc_msgSend_setSlidingViewState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSlidingViewState:");
}

id objc_msgSend_setSnapshottedPosterImageToUseForColorInversion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnapshottedPosterImageToUseForColorInversion:");
}

id objc_msgSend_setSosCallSlidingButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSosCallSlidingButton:");
}

id objc_msgSend_setSosHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSosHandle:");
}

id objc_msgSend_setSosMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSosMode:");
}

id objc_msgSend_setSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSource:");
}

id objc_msgSend_setSourceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceIdentifier:");
}

id objc_msgSend_setSourceProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceProvider:");
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceRect:");
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceView:");
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpacing:");
}

id objc_msgSend_setSpecialLayoutType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecialLayoutType:");
}

id objc_msgSend_setSpecialRingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecialRingView:");
}

id objc_msgSend_setSpeechRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechRequest:");
}

id objc_msgSend_setSpeechUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechUtterance:");
}

id objc_msgSend_setSpringBoardLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpringBoardLocked:");
}

id objc_msgSend_setStackViewHorizontalConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStackViewHorizontalConstraint:");
}

id objc_msgSend_setStackViewTrailingConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStackViewTrailingConstraint:");
}

id objc_msgSend_setStartCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartCompletionBlock:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setStateChangeLockObservation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateChangeLockObservation:");
}

id objc_msgSend_setStateDisplayChangedObservation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateDisplayChangedObservation:");
}

id objc_msgSend_setStatusBarHidden_withDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusBarHidden:withDuration:");
}

id objc_msgSend_setStatusBarPillSuppressionForBackgroundActivities_onWindowScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusBarPillSuppressionForBackgroundActivities:onWindowScene:");
}

id objc_msgSend_setStatusChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusChangedHandler:");
}

id objc_msgSend_setStatusHeartbeatTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusHeartbeatTimer:");
}

id objc_msgSend_setStatusLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusLabel:");
}

id objc_msgSend_setStatusLabelRightConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusLabelRightConstraint:");
}

id objc_msgSend_setStatusLabelTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusLabelTextColor:");
}

id objc_msgSend_setStatusLabelTextFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusLabelTextFont:");
}

id objc_msgSend_setStatusLabelTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusLabelTimer:");
}

id objc_msgSend_setStatusLabelsArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusLabelsArray:");
}

id objc_msgSend_setStatusText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusText:");
}

id objc_msgSend_setStewieAlertButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStewieAlertButton:");
}

id objc_msgSend_setStewieEndCallButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStewieEndCallButton:");
}

id objc_msgSend_setStewieState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStewieState:");
}

id objc_msgSend_setStiffness_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStiffness:");
}

id objc_msgSend_setStopVoiceLoopButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStopVoiceLoopButton:");
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setString:");
}

id objc_msgSend_setStroke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStroke");
}

id objc_msgSend_setStrokeWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeWidth:");
}

id objc_msgSend_setStructuredLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStructuredLocation:");
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStyle:");
}

id objc_msgSend_setSubtitleLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtitleLabel:");
}

id objc_msgSend_setSuggestedContactStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestedContactStore:");
}

id objc_msgSend_setSupplementalBottomLeftButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupplementalBottomLeftButton:");
}

id objc_msgSend_setSupplementalBottomRightButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupplementalBottomRightButton:");
}

id objc_msgSend_setSupplementalTopLeftButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupplementalTopLeftButton:");
}

id objc_msgSend_setSupplementalTopRightButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupplementalTopRightButton:");
}

id objc_msgSend_setSupportedDeviceOrientations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedDeviceOrientations:");
}

id objc_msgSend_setSupportsAmbient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsAmbient:");
}

id objc_msgSend_setSupportsDeviceLockEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsDeviceLockEvents:");
}

id objc_msgSend_setSupportsSystemAperture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsSystemAperture:");
}

id objc_msgSend_setSuppressLPEMBeaconing_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressLPEMBeaconing:completion:");
}

id objc_msgSend_setSuspendPosterAfterDelayBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuspendPosterAfterDelayBlock:");
}

id objc_msgSend_setSwipeDismissalStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwipeDismissalStyle:");
}

id objc_msgSend_setTTRBannerViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTTRBannerViewController:");
}

id objc_msgSend_setTTYType_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTTYType:forCall:");
}

id objc_msgSend_setTableFooterView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableFooterView:");
}

id objc_msgSend_setTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableView:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setTargetRect_inView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetRect:inView:");
}

id objc_msgSend_setTemporarilyAllowAllStatusBarPills_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTemporarilyAllowAllStatusBarPills:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setText_needsFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:needsFormat:");
}

id objc_msgSend_setText_needsFormat_name_label_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:needsFormat:name:label:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTextFontUsingDefaultFontSizes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextFontUsingDefaultFontSizes:");
}

id objc_msgSend_setTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextStyle:");
}

id objc_msgSend_setTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTheme:");
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeStyle:");
}

id objc_msgSend_setTimeTillActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeTillActive:");
}

id objc_msgSend_setTimeTillCancelCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeTillCancelCall:");
}

id objc_msgSend_setTimeToReleaseClaw_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeToReleaseClaw:");
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZone:");
}

id objc_msgSend_setTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimer:");
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimingFunction:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitle_alignment_symbolType_normalStateColor_usingSmallFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:alignment:symbolType:normalStateColor:usingSmallFont:");
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:forState:");
}

id objc_msgSend_setTitle_subtitle_subtitleColor_localizedSenderIdentityTitle_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:subtitle:subtitleColor:localizedSenderIdentityTitle:animated:");
}

id objc_msgSend_setTitleAndSubtitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleAndSubtitle");
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleColor:forState:");
}

id objc_msgSend_setTitleEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleEdgeInsets:");
}

id objc_msgSend_setTitleLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleLabel:");
}

id objc_msgSend_setTitleString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleString:");
}

id objc_msgSend_setTitleStyleAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleStyleAttributes:");
}

id objc_msgSend_setTitleTextAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleTextAttributes:");
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToValue:");
}

id objc_msgSend_setToggledOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToggledOn:");
}

id objc_msgSend_setToneIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToneIdentifier:");
}

id objc_msgSend_setTopMultipleCallLabelView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopMultipleCallLabelView:");
}

id objc_msgSend_setTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopic:");
}

id objc_msgSend_setTorchMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTorchMode:");
}

id objc_msgSend_setTouchAreaEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAreaEdgeInsets:");
}

id objc_msgSend_setTrackSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackSize:");
}

id objc_msgSend_setTrackText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackText:");
}

id objc_msgSend_setTrackWidthProportion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackWidthProportion:");
}

id objc_msgSend_setTrailingSideLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrailingSideLayoutGuide:");
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransform:");
}

id objc_msgSend_setTransformForNewCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransformForNewCenter:");
}

id objc_msgSend_setTransitionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionHandler:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setTranslation_inView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslation:inView:");
}

id objc_msgSend_setTranslucent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslucent:");
}

id objc_msgSend_setTransportIndicatorView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransportIndicatorView:");
}

id objc_msgSend_setTtyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTtyType:");
}

id objc_msgSend_setTuCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTuCall:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUUID:");
}

id objc_msgSend_setUUIDForLocallyDisconnectedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUUIDForLocallyDisconnectedCall:");
}

id objc_msgSend_setUnblurredBackgroundImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnblurredBackgroundImageView:");
}

id objc_msgSend_setUpAlertRestingViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpAlertRestingViewConstraints");
}

id objc_msgSend_setUpCallDetailsViewButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpCallDetailsViewButton");
}

id objc_msgSend_setUpCancelButtonConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpCancelButtonConstraints");
}

id objc_msgSend_setUpCheckInViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpCheckInViewConstraints");
}

id objc_msgSend_setUpConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpConstraints");
}

id objc_msgSend_setUpCountdownViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpCountdownViewConstraints");
}

id objc_msgSend_setUpFirstAndLastNameLabelsIfPossible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpFirstAndLastNameLabelsIfPossible");
}

id objc_msgSend_setUpInfoLabelConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpInfoLabelConstraints");
}

id objc_msgSend_setUpLayoutGuidesForParticipantsViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpLayoutGuidesForParticipantsViewController:");
}

id objc_msgSend_setUpPosterBadgeViewIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpPosterBadgeViewIfNecessary");
}

id objc_msgSend_setUpRemoteViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpRemoteViewController:");
}

id objc_msgSend_setUpRestingViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpRestingViewConstraints");
}

id objc_msgSend_setUpSOSNumbersListViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpSOSNumbersListViewConstraints");
}

id objc_msgSend_setUpSlidingViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpSlidingViewConstraints");
}

id objc_msgSend_setUpTestNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpTestNamed:");
}

id objc_msgSend_setUpdatesPaused_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdatesPaused:");
}

id objc_msgSend_setUplinkMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUplinkMuted:");
}

id objc_msgSend_setUserFeedbackViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserFeedbackViewController:");
}

id objc_msgSend_setUserHasAcknowledgedFindMy_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserHasAcknowledgedFindMy:completion:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setUserWantsFindMySuppressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserWantsFindMySuppressed:");
}

id objc_msgSend_setUsesApplicationAudioSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesApplicationAudioSession:");
}

id objc_msgSend_setUsesBackgroundDimming_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesBackgroundDimming:");
}

id objc_msgSend_setUsesEvenOddFillRule_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesEvenOddFillRule:");
}

id objc_msgSend_setUsesLowerButtons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesLowerButtons:");
}

id objc_msgSend_setUsingSmallFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsingSmallFont:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:");
}

id objc_msgSend_setVibrantSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVibrantSettings:");
}

id objc_msgSend_setVideo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideo:");
}

id objc_msgSend_setVideoEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoEffect:");
}

id objc_msgSend_setVideoEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoEnabled:");
}

id objc_msgSend_setVideoMessageRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoMessageRootViewController:");
}

id objc_msgSend_setVideoOverlayContentView_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoOverlayContentView:animated:");
}

id objc_msgSend_setVideoOverlayWithMode_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoOverlayWithMode:animated:");
}

id objc_msgSend_setVideoWasPausedForInterruption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoWasPausedForInterruption:");
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setView:");
}

id objc_msgSend_setViewControllerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllerDelegate:");
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:animated:");
}

id objc_msgSend_setViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewModel:");
}

id objc_msgSend_setViewUpdateClockTickTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewUpdateClockTickTimer:");
}

id objc_msgSend_setVoiceMessageManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceMessageManager:");
}

id objc_msgSend_setVoiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceName:");
}

id objc_msgSend_setVoicemailManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoicemailManager:");
}

id objc_msgSend_setVolumeButtonHintViewVisibilityControlling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeButtonHintViewVisibilityControlling:");
}

id objc_msgSend_setVolumeHUDHiddenCurrently_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeHUDHiddenCurrently:");
}

id objc_msgSend_setVolumeHUDHiddenPending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeHUDHiddenPending:");
}

id objc_msgSend_setVolumeMaxedCurrently_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeMaxedCurrently:");
}

id objc_msgSend_setVolumeMaxedPending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeMaxedPending:");
}

id objc_msgSend_setVolumeTo_forCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeTo:forCategory:");
}

id objc_msgSend_setWaitingForFullScreenAudioRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitingForFullScreenAudioRoutes:");
}

id objc_msgSend_setWaitingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitingState:");
}

id objc_msgSend_setWallpaperTunnelActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWallpaperTunnelActive:");
}

id objc_msgSend_setWantsApplicationDismissalStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsApplicationDismissalStyle:");
}

id objc_msgSend_setWantsBlur_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsBlur:");
}

id objc_msgSend_setWantsCallButtonAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsCallButtonAnimation:");
}

id objc_msgSend_setWantsCallNotificationsDisabledWhileSuspended_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsCallNotificationsDisabledWhileSuspended:");
}

id objc_msgSend_setWantsCallStopStreamingOnInvalidation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsCallStopStreamingOnInvalidation:");
}

id objc_msgSend_setWantsPreferredContentSizeUpdateAfterRotationFinishes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsPreferredContentSizeUpdateAfterRotationFinishes:");
}

id objc_msgSend_setWantsStagingArea_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsStagingArea:");
}

id objc_msgSend_setWasCallCancelled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWasCallCancelled:");
}

id objc_msgSend_setWasMounted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWasMounted:");
}

id objc_msgSend_setWasMountedProbability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWasMountedProbability:");
}

id objc_msgSend_setWhitePointAdaptivityStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWhitePointAdaptivityStyle:");
}

id objc_msgSend_setWillAnimatePictureInPictureStopCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWillAnimatePictureInPictureStopCompletionBlock:");
}

id objc_msgSend_setWindowForTransitionAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWindowForTransitionAnimation:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithCapacity:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWrappedViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWrappedViewController:");
}

id objc_msgSend_setWrapperViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWrapperViewController:");
}

id objc_msgSend_setXpcHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXpcHost:");
}

id objc_msgSend_setYOffsetForLoweredButtons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setYOffsetForLoweredButtons:");
}

id objc_msgSend_settingsWithContactStore_threeDTouchEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsWithContactStore:threeDTouchEnabled:");
}

id objc_msgSend_setupAmbientAudioRoutesControlViewIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupAmbientAudioRoutesControlViewIfNeeded");
}

id objc_msgSend_setupAutoAnswer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupAutoAnswer");
}

id objc_msgSend_setupBackdropView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupBackdropView");
}

id objc_msgSend_setupConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupConstraints");
}

id objc_msgSend_setupDimmingViewForAlwaysOnDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupDimmingViewForAlwaysOnDisplay");
}

id objc_msgSend_setupHeldCallControlsViewIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupHeldCallControlsViewIfNeeded");
}

id objc_msgSend_setupLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupLabel");
}

id objc_msgSend_setupNameLabelForAlwaysOnDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupNameLabelForAlwaysOnDisplay");
}

id objc_msgSend_setupRoundview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupRoundview");
}

id objc_msgSend_setupTitleColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupTitleColors");
}

id objc_msgSend_setupViewWithSymbolType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupViewWithSymbolType:");
}

id objc_msgSend_setupViewWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupViewWithTitle:");
}

id objc_msgSend_setupViewWithTitle_indicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupViewWithTitle:indicatorStyle:");
}

id objc_msgSend_setupViewWithTitle_message_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupViewWithTitle:message:");
}

id objc_msgSend_sharedAVSystemController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedAVSystemController");
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedApplication");
}

id objc_msgSend_sharedAudioSystemController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedAudioSystemController");
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedConnection");
}

id objc_msgSend_sharedContactStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedContactStore");
}

id objc_msgSend_sharedContentSourceName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedContentSourceName");
}

id objc_msgSend_sharedContentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedContentViewController");
}

id objc_msgSend_sharedController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedController");
}

id objc_msgSend_sharedControllerWithCoalescingStrategy_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedControllerWithCoalescingStrategy:options:");
}

id objc_msgSend_sharedInCallUILauncher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInCallUILauncher");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedInstanceForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstanceForStyle:");
}

id objc_msgSend_sharedMenuController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedMenuController");
}

id objc_msgSend_sharedMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedMonitor");
}

id objc_msgSend_sharedMonitorForDisplayType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedMonitorForDisplayType:");
}

id objc_msgSend_sharedNotifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedNotifier");
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedPreferences");
}

id objc_msgSend_sharedProfileStateOracle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedProfileStateOracle");
}

id objc_msgSend_sharedProfileStateOracleForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedProfileStateOracleForCall:");
}

id objc_msgSend_sharedService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedService");
}

id objc_msgSend_sharedSystemController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedSystemController");
}

id objc_msgSend_sharedUtilityProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedUtilityProvider");
}

id objc_msgSend_shouldActivateProviderInBackgroundForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldActivateProviderInBackgroundForCall:");
}

id objc_msgSend_shouldActivateSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldActivateSOS");
}

id objc_msgSend_shouldActivateSpringBoardRemoteAlertForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldActivateSpringBoardRemoteAlertForCall:");
}

id objc_msgSend_shouldAddExtensionNumberButtonToViewHierarchy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAddExtensionNumberButtonToViewHierarchy");
}

id objc_msgSend_shouldAddRTTButtonToViewHierarchy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAddRTTButtonToViewHierarchy");
}

id objc_msgSend_shouldAllowAddContactsAccess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAllowAddContactsAccess");
}

id objc_msgSend_shouldAllowLockButtonPressesToDismissSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAllowLockButtonPressesToDismissSOS");
}

id objc_msgSend_shouldAllowRingingCallStatusIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAllowRingingCallStatusIndicator:");
}

id objc_msgSend_shouldAnimateCallButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAnimateCallButton");
}

id objc_msgSend_shouldApplyNewGradientBlur(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldApplyNewGradientBlur");
}

id objc_msgSend_shouldAttemptRePresentationOfBannerOnConversationUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAttemptRePresentationOfBannerOnConversationUpdate");
}

id objc_msgSend_shouldAutoCountdownAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutoCountdownAlert");
}

id objc_msgSend_shouldAutorotateToInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutorotateToInterfaceOrientation:");
}

id objc_msgSend_shouldBlockNonEmergencyCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldBlockNonEmergencyCalls");
}

id objc_msgSend_shouldConsumeDeviceLockEvent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldConsumeDeviceLockEvent");
}

id objc_msgSend_shouldDisconnectOnDismissal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDisconnectOnDismissal");
}

id objc_msgSend_shouldDropBioAuthTokenOnDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDropBioAuthTokenOnDismiss");
}

id objc_msgSend_shouldEmbedSwapBanner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldEmbedSwapBanner");
}

id objc_msgSend_shouldEnableShareMediaButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldEnableShareMediaButton");
}

id objc_msgSend_shouldEnableVideoStreamingButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldEnableVideoStreamingButton");
}

id objc_msgSend_shouldExitVideoMessageFlowConsideringShowAudioController_showEmergencyCallController_showSOSController_showScreenTimeController_showUserScoreController_showPTTFullScreenController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldExitVideoMessageFlowConsideringShowAudioController:showEmergencyCallController:showSOSController:showScreenTimeController:showUserScoreController:showPTTFullScreenController:");
}

id objc_msgSend_shouldForceDisableAutoCallForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldForceDisableAutoCallForClient:");
}

id objc_msgSend_shouldHandleAlertCallDisconnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHandleAlertCallDisconnection");
}

id objc_msgSend_shouldHandleBluetoothCommand(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHandleBluetoothCommand");
}

id objc_msgSend_shouldHideContact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHideContact");
}

id objc_msgSend_shouldHideDeleteButtonWhenEmpty(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHideDeleteButtonWhenEmpty");
}

id objc_msgSend_shouldHideTrackLabelForXPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHideTrackLabelForXPoint:");
}

id objc_msgSend_shouldIgnoreCarPlayAssertionInvalidations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldIgnoreCarPlayAssertionInvalidations");
}

id objc_msgSend_shouldIgnoreUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldIgnoreUpdates");
}

id objc_msgSend_shouldIgnoreUpdatesInParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldIgnoreUpdatesInParticipantsView:");
}

id objc_msgSend_shouldInsertSpaceBeforeNextOverrideStringCharacter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldInsertSpaceBeforeNextOverrideStringCharacter");
}

id objc_msgSend_shouldInsertStringAtCurrentPosition_deletingPreviousCharacter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldInsertStringAtCurrentPosition:deletingPreviousCharacter:");
}

id objc_msgSend_shouldLimitKeypadAccess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldLimitKeypadAccess");
}

id objc_msgSend_shouldMakeFakeSOSCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldMakeFakeSOSCall");
}

id objc_msgSend_shouldMaxVolumeCompletionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldMaxVolumeCompletionBlock");
}

id objc_msgSend_shouldObtainDismissalAssertions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldObtainDismissalAssertions");
}

id objc_msgSend_shouldPIPWhenEnteringBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPIPWhenEnteringBackground");
}

id objc_msgSend_shouldPauseSOSCallBufferTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPauseSOSCallBufferTimer");
}

id objc_msgSend_shouldPlayAudioDuringCountdown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPlayAudioDuringCountdown");
}

id objc_msgSend_shouldPlayAudioInCallBufferScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPlayAudioInCallBufferScreen");
}

id objc_msgSend_shouldPlayDTMFTone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPlayDTMFTone");
}

id objc_msgSend_shouldPowerDownViewShowFindMyAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPowerDownViewShowFindMyAlert");
}

id objc_msgSend_shouldPresentAlertButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPresentAlertButton");
}

id objc_msgSend_shouldPresentDismissedForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPresentDismissedForCall:");
}

id objc_msgSend_shouldReleaseAudioCallViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldReleaseAudioCallViewController");
}

id objc_msgSend_shouldReloadCellsWithNumberOfCells_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldReloadCellsWithNumberOfCells:");
}

id objc_msgSend_shouldRenderAlertTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRenderAlertTextColor");
}

id objc_msgSend_shouldRenderAlertTextFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRenderAlertTextFont");
}

id objc_msgSend_shouldRequestPasscodeUnlockForMMICode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRequestPasscodeUnlockForMMICode:");
}

id objc_msgSend_shouldRespondToHardwareControlEvent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRespondToHardwareControlEvent");
}

id objc_msgSend_shouldRestrictAddresses_forBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRestrictAddresses:forBundleIdentifier:");
}

id objc_msgSend_shouldRestrictConversation_performSynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRestrictConversation:performSynchronously:");
}

id objc_msgSend_shouldRestrictDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRestrictDialRequest:");
}

id objc_msgSend_shouldRestrictJoinConversationRequest_performSynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRestrictJoinConversationRequest:performSynchronously:");
}

id objc_msgSend_shouldReverseLayoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldReverseLayoutDirection");
}

id objc_msgSend_shouldSetPresenceToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSetPresenceToken");
}

id objc_msgSend_shouldShowActionTypeAudioRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowActionTypeAudioRoute");
}

id objc_msgSend_shouldShowActionTypeCameraFlip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowActionTypeCameraFlip");
}

id objc_msgSend_shouldShowActionTypeEffects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowActionTypeEffects");
}

id objc_msgSend_shouldShowActionTypePhotoCapture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowActionTypePhotoCapture");
}

id objc_msgSend_shouldShowActionTypePunchOut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowActionTypePunchOut");
}

id objc_msgSend_shouldShowActionTypeSendToVoicemail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowActionTypeSendToVoicemail");
}

id objc_msgSend_shouldShowAirplaneEmergencyCallAlertForDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowAirplaneEmergencyCallAlertForDialRequest:");
}

id objc_msgSend_shouldShowAnswerRTT(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowAnswerRTT");
}

id objc_msgSend_shouldShowAnswerRTTButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowAnswerRTTButton");
}

id objc_msgSend_shouldShowCallDetailsViewButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowCallDetailsViewButton");
}

id objc_msgSend_shouldShowCallDetailsWhenReady(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowCallDetailsWhenReady");
}

id objc_msgSend_shouldShowCallEndedBlockAndReportScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowCallEndedBlockAndReportScreen:");
}

id objc_msgSend_shouldShowCallTransfer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowCallTransfer");
}

id objc_msgSend_shouldShowCircularAvatar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowCircularAvatar");
}

id objc_msgSend_shouldShowConferenceCallDetails(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowConferenceCallDetails");
}

id objc_msgSend_shouldShowContactOrLastSeenWallpaper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowContactOrLastSeenWallpaper");
}

id objc_msgSend_shouldShowEmergencyCallbackModeAlertForDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowEmergencyCallbackModeAlertForDialRequest:");
}

id objc_msgSend_shouldShowEmergencyCallbackModeAlertForSenderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowEmergencyCallbackModeAlertForSenderIdentityUUID:");
}

id objc_msgSend_shouldShowEnableWiFiCallingAlertForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowEnableWiFiCallingAlertForCall:");
}

id objc_msgSend_shouldShowFailureAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowFailureAlert");
}

id objc_msgSend_shouldShowFullScreenCallWaiting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowFullScreenCallWaiting");
}

id objc_msgSend_shouldShowHardPauseNumbers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowHardPauseNumbers");
}

id objc_msgSend_shouldShowIconViewsWhenPipped(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowIconViewsWhenPipped");
}

id objc_msgSend_shouldShowInCallWindowScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowInCallWindowScene");
}

id objc_msgSend_shouldShowInfoButtonForParticipantAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowInfoButtonForParticipantAtIndex:inParticipantsView:");
}

id objc_msgSend_shouldShowLargeAvatar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowLargeAvatar");
}

id objc_msgSend_shouldShowLargeAvatarForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowLargeAvatarForCall:");
}

id objc_msgSend_shouldShowLargeAvatarForCallWaiting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowLargeAvatarForCallWaiting");
}

id objc_msgSend_shouldShowMedicalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowMedicalID:");
}

id objc_msgSend_shouldShowNavigationBarForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowNavigationBarForViewController:");
}

id objc_msgSend_shouldShowNewPosterUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowNewPosterUpdates");
}

id objc_msgSend_shouldShowParticipantImageAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowParticipantImageAtIndex:inParticipantsView:");
}

id objc_msgSend_shouldShowParticipantLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowParticipantLabel");
}

id objc_msgSend_shouldShowPromptForProcessHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowPromptForProcessHandle:");
}

id objc_msgSend_shouldShowRTTAlertForDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowRTTAlertForDialRequest:");
}

id objc_msgSend_shouldShowSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowSOS");
}

id objc_msgSend_shouldShowScreenTimeAlertForDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowScreenTimeAlertForDialRequest:");
}

id objc_msgSend_shouldShowScreenTimeAlertForJoinConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowScreenTimeAlertForJoinConversationRequest:");
}

id objc_msgSend_shouldShowScreenTimeShield(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowScreenTimeShield");
}

id objc_msgSend_shouldShowSingleDurationLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowSingleDurationLabel");
}

id objc_msgSend_shouldShowSingleDurationLabelInParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowSingleDurationLabelInParticipantsView:");
}

id objc_msgSend_shouldShowTelephonyAccountUnavailableAlertForDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowTelephonyAccountUnavailableAlertForDialRequest:");
}

id objc_msgSend_shouldShowUseRTT(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowUseRTT");
}

id objc_msgSend_shouldShowUseRTTButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowUseRTTButton");
}

id objc_msgSend_shouldShowVideoCallBlockAndReportScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowVideoCallBlockAndReportScreen");
}

id objc_msgSend_shouldSilenceSOSFlow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSilenceSOSFlow");
}

id objc_msgSend_shouldStartMultiwayPIP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldStartMultiwayPIP");
}

id objc_msgSend_shouldStartPIPWhenPossible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldStartPIPWhenPossible");
}

id objc_msgSend_shouldStringAutoDial_givenLastChar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldStringAutoDial:givenLastChar:");
}

id objc_msgSend_shouldSuppressInCallStatusBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSuppressInCallStatusBar:");
}

id objc_msgSend_shouldSuppressInCallUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSuppressInCallUI");
}

id objc_msgSend_shouldSuppressRingtone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSuppressRingtone");
}

id objc_msgSend_shouldSuppressShowingLastDialedNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSuppressShowingLastDialedNumber");
}

id objc_msgSend_shouldTraceSingposts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldTraceSingposts");
}

id objc_msgSend_shouldUpdateBackgroundForEmergencyCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUpdateBackgroundForEmergencyCall");
}

id objc_msgSend_shouldUpdateForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUpdateForCall:");
}

id objc_msgSend_shouldUseExplicitLayoutDimensions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseExplicitLayoutDimensions");
}

id objc_msgSend_shouldUseFullScreenPeoplePicker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseFullScreenPeoplePicker");
}

id objc_msgSend_shouldUseHeroImageLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseHeroImageLayout");
}

id objc_msgSend_shouldUseLayoutAsCallScreening(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseLayoutAsCallScreening");
}

id objc_msgSend_shouldUseRTT(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseRTT");
}

id objc_msgSend_shouldUseSOSTightSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseSOSTightSpacing");
}

id objc_msgSend_show(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "show");
}

id objc_msgSend_show_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "show:completion:");
}

id objc_msgSend_showAccessoryButtonEventsNoticeIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAccessoryButtonEventsNoticeIfNeeded");
}

id objc_msgSend_showAlertRestingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAlertRestingView");
}

id objc_msgSend_showBanner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBanner");
}

id objc_msgSend_showBannerIfNecessaryForHandoffEligibleConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBannerIfNecessaryForHandoffEligibleConversation");
}

id objc_msgSend_showBlockAlertForHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBlockAlertForHandle:");
}

id objc_msgSend_showCallControlsForCurrentContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCallControlsForCurrentContext");
}

id objc_msgSend_showCallDetailsIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCallDetailsIfNecessary");
}

id objc_msgSend_showCallDetailsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCallDetailsView");
}

id objc_msgSend_showCarPlayUIWithActivation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCarPlayUIWithActivation:");
}

id objc_msgSend_showCheckInView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCheckInView");
}

id objc_msgSend_showCustomReplyWithMessageComposer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCustomReplyWithMessageComposer");
}

id objc_msgSend_showFailureAlertIfNecessaryForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showFailureAlertIfNecessaryForCall:");
}

id objc_msgSend_showFirstAndLastNameAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showFirstAndLastNameAnimated:");
}

id objc_msgSend_showFirstNameLabelOnKeypad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showFirstNameLabelOnKeypad");
}

id objc_msgSend_showGreenTea3PHUD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showGreenTea3PHUD");
}

id objc_msgSend_showHandoffHUD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHandoffHUD");
}

id objc_msgSend_showHardwareButtonView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHardwareButtonView");
}

id objc_msgSend_showHideMiniWindowViewIfNeededAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHideMiniWindowViewIfNeededAnimated:");
}

id objc_msgSend_showInCallHUD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showInCallHUD");
}

id objc_msgSend_showKeypadIfPossible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showKeypadIfPossible");
}

id objc_msgSend_showKeypadURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showKeypadURL");
}

id objc_msgSend_showLagunaPullConversationHUD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showLagunaPullConversationHUD");
}

id objc_msgSend_showMessagesButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showMessagesButton");
}

id objc_msgSend_showMessagesButtonPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showMessagesButtonPressed");
}

id objc_msgSend_showName_label_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showName:label:animated:");
}

id objc_msgSend_showNameAndPhotoHUDIfNecessaryWithBannerPresentationManager_callCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showNameAndPhotoHUDIfNecessaryWithBannerPresentationManager:callCenter:");
}

id objc_msgSend_showNextVideoOverlayMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showNextVideoOverlayMode");
}

id objc_msgSend_showOnViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showOnViewController:");
}

id objc_msgSend_showOrCreateCallForConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showOrCreateCallForConversationRequest:");
}

id objc_msgSend_showPTTHUD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPTTHUD");
}

id objc_msgSend_showPosterBlurTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPosterBlurTransition");
}

id objc_msgSend_showPowerDownFindMyInfoAlertWithProceed_cancelCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPowerDownFindMyInfoAlertWithProceed:cancelCompletion:");
}

id objc_msgSend_showRemoteParticipantNoticeIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRemoteParticipantNoticeIfNeeded");
}

id objc_msgSend_showRestingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRestingView");
}

id objc_msgSend_showRestrictedAlertWithMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRestrictedAlertWithMessage:");
}

id objc_msgSend_showSOSDialCanceled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSOSDialCanceled");
}

id objc_msgSend_showSOSDialCountdown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSOSDialCountdown");
}

id objc_msgSend_showSOSDialSliding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSOSDialSliding");
}

id objc_msgSend_showSOSDisconnectConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSOSDisconnectConfirmation:");
}

id objc_msgSend_showSOSNotificationCanceled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSOSNotificationCanceled");
}

id objc_msgSend_showSOSNotificationCountdown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSOSNotificationCountdown");
}

id objc_msgSend_showSOSNotified(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSOSNotified");
}

id objc_msgSend_showSOSNumbersList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSOSNumbersList");
}

id objc_msgSend_showScreenSharingURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showScreenSharingURL:");
}

id objc_msgSend_showSystemCallControlsURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSystemCallControlsURL:");
}

id objc_msgSend_showTTRBannerWithFullLogArchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTTRBannerWithFullLogArchive:");
}

id objc_msgSend_showTrackLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTrackLabel");
}

id objc_msgSend_showUIPrompt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showUIPrompt");
}

id objc_msgSend_showVideoOverlayWithContentView_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showVideoOverlayWithContentView:animated:");
}

id objc_msgSend_showingOverlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showingOverlay");
}

id objc_msgSend_showsCallDetailsViewButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showsCallDetailsViewButton");
}

id objc_msgSend_shrinkLabelWhenNumbersEntered(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shrinkLabelWhenNumbersEntered");
}

id objc_msgSend_shutdownWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shutdownWithOptions:");
}

id objc_msgSend_sideButtonHintViewVisibilityControlling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sideButtonHintViewVisibilityControlling");
}

id objc_msgSend_sideButtonLeft(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sideButtonLeft");
}

id objc_msgSend_sideButtonRight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sideButtonRight");
}

id objc_msgSend_sideMarginForDoubleButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sideMarginForDoubleButton");
}

id objc_msgSend_sideMarginForFaceTimeButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sideMarginForFaceTimeButtons");
}

id objc_msgSend_sideMarginForFaceTimeInCallButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sideMarginForFaceTimeInCallButtons");
}

id objc_msgSend_simplifiedDefaultAlertControlTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "simplifiedDefaultAlertControlTypes");
}

id objc_msgSend_simplifiedDefaultControlTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "simplifiedDefaultControlTypes");
}

id objc_msgSend_simplifiedDefaultMultipleCallControlTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "simplifiedDefaultMultipleCallControlTypes");
}

id objc_msgSend_simulateCrashReportWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "simulateCrashReportWithFormat:");
}

id objc_msgSend_simulateCrashReportWithReason_pid_code_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "simulateCrashReportWithReason:pid:code:");
}

id objc_msgSend_singleCallLabelView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallLabelView");
}

id objc_msgSend_singleCallLargeStatusLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallLargeStatusLabelFont");
}

id objc_msgSend_singleCallParticipantLabelAmbientFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallParticipantLabelAmbientFont");
}

id objc_msgSend_singleCallParticipantLabelBannerFontForText_availableWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallParticipantLabelBannerFontForText:availableWidth:");
}

id objc_msgSend_singleCallParticipantLabelBannerMaximumFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallParticipantLabelBannerMaximumFont");
}

id objc_msgSend_singleCallParticipantLabelBannerMinimumFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallParticipantLabelBannerMinimumFont");
}

id objc_msgSend_singleCallParticipantLabelFontForBannerWithPointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallParticipantLabelFontForBannerWithPointSize:");
}

id objc_msgSend_singleCallParticipantLabelFontForCallDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallParticipantLabelFontForCallDisplayStyle:");
}

id objc_msgSend_singleCallParticipantLabelFullscreenFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallParticipantLabelFullscreenFont");
}

id objc_msgSend_singleCallParticipantLabelMiniWindowFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallParticipantLabelMiniWindowFont");
}

id objc_msgSend_singleCallSmallStatusLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallSmallStatusLabelFont");
}

id objc_msgSend_singleCallSmallerStatusLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallSmallerStatusLabelFont");
}

id objc_msgSend_singleCallStatusLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallStatusLabelFont");
}

id objc_msgSend_singleCallStatusLabelFontForCallDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleCallStatusLabelFontForCallDisplayStyle:");
}

id objc_msgSend_singleDurationTimerLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleDurationTimerLabel");
}

id objc_msgSend_singleNameComponentIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleNameComponentIndex");
}

id objc_msgSend_siriDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDisplayName");
}

id objc_msgSend_sixPercentOfDeviceHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sixPercentOfDeviceHeight");
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "size");
}

id objc_msgSend_sizeOverride(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeOverride");
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeToFit");
}

id objc_msgSend_sizeValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeValue");
}

id objc_msgSend_sizeWithAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeWithAttributes:");
}

id objc_msgSend_sliderActionFromBar_slidToProportion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sliderActionFromBar:slidToProportion:");
}

id objc_msgSend_sliderAnimator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sliderAnimator");
}

id objc_msgSend_sliderButtonWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sliderButtonWidth");
}

id objc_msgSend_sliderDistanceFromBottom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sliderDistanceFromBottom");
}

id objc_msgSend_sliderProgressDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sliderProgressDuration");
}

id objc_msgSend_sliderTimingBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sliderTimingBlock");
}

id objc_msgSend_sliderViewCreationTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sliderViewCreationTime");
}

id objc_msgSend_slidingButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "slidingButton");
}

id objc_msgSend_slidingButton_didSlideToProportion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "slidingButton:didSlideToProportion:");
}

id objc_msgSend_slidingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "slidingView");
}

id objc_msgSend_slidingViewEntryReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "slidingViewEntryReason");
}

id objc_msgSend_slidingViewExitReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "slidingViewExitReason");
}

id objc_msgSend_slidingViewState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "slidingViewState");
}

id objc_msgSend_smallHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smallHeight");
}

id objc_msgSend_smallShutterButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smallShutterButton");
}

id objc_msgSend_smartDialerEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smartDialerEnabled");
}

id objc_msgSend_snapshotUIImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotUIImageView");
}

id objc_msgSend_snapshotWithOptions_windowScene_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotWithOptions:windowScene:completionBlock:");
}

id objc_msgSend_snapshottedPosterImageToUseForColorInversion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshottedPosterImageToUseForColorInversion");
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingDescriptors:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedRoutes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedRoutes");
}

id objc_msgSend_sosCallSlidingButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosCallSlidingButton");
}

id objc_msgSend_sosHandle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosHandle");
}

id objc_msgSend_sosHandles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosHandles");
}

id objc_msgSend_sosMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosMode");
}

id objc_msgSend_sosNumbersViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosNumbersViewController");
}

id objc_msgSend_sosNumbersViewController_didSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosNumbersViewController:didSelectRowAtIndexPath:");
}

id objc_msgSend_sosSliderDistanceFromMedicalId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosSliderDistanceFromMedicalId");
}

id objc_msgSend_sosSubtitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosSubtitle");
}

id objc_msgSend_sosTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosTitle");
}

id objc_msgSend_sosTrigger(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosTrigger");
}

id objc_msgSend_sosViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosViewController");
}

id objc_msgSend_sosVoiceMessageType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sosVoiceMessageType");
}

id objc_msgSend_sos_urlActivationReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sos_urlActivationReason");
}

id objc_msgSend_soundPlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "soundPlayer");
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "source");
}

id objc_msgSend_sourceProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceProvider");
}

id objc_msgSend_sourceType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceType");
}

id objc_msgSend_spacingBetweenLabels(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spacingBetweenLabels");
}

id objc_msgSend_spacingBetweenNumberBaselineAndNameBaseline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spacingBetweenNumberBaselineAndNameBaseline");
}

id objc_msgSend_speakAlertUtteranceIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakAlertUtteranceIfNecessary");
}

id objc_msgSend_speakUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakUtterance:");
}

id objc_msgSend_speakerAudioRouteGlyph(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakerAudioRouteGlyph");
}

id objc_msgSend_speakerRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakerRoute");
}

id objc_msgSend_speakerRouteAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakerRouteAvailable");
}

id objc_msgSend_speakerRouteAvailableForUnformattedPickableRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakerRouteAvailableForUnformattedPickableRoutes:");
}

id objc_msgSend_speakerRouteGlyphForDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakerRouteGlyphForDisplayStyle:");
}

id objc_msgSend_speakerRouteIsPicked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakerRouteIsPicked");
}

id objc_msgSend_specialDialerCharacters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specialDialerCharacters");
}

id objc_msgSend_specialRingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specialRingView");
}

id objc_msgSend_speechSynthesizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechSynthesizer");
}

id objc_msgSend_speechSynthesizer_didFinishSpeechUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechSynthesizer:didFinishSpeechUtterance:");
}

id objc_msgSend_speechUtterance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechUtterance");
}

id objc_msgSend_speechUtteranceWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechUtteranceWithString:");
}

id objc_msgSend_springBoardLockedInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "springBoardLockedInterfaceOrientation");
}

id objc_msgSend_springBoardRemoteAlertOptionsForCall_dialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "springBoardRemoteAlertOptionsForCall:dialRequest:");
}

id objc_msgSend_springBoardRemoteAlertOptionsForSOSCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "springBoardRemoteAlertOptionsForSOSCall");
}

id objc_msgSend_stackView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackView");
}

id objc_msgSend_stackViewHorizontalConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackViewHorizontalConstraint");
}

id objc_msgSend_stackViewTrailingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackViewTrailingConstraint");
}

id objc_msgSend_standardInvitationPreferencesForLink(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardInvitationPreferencesForLink");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_starAndOctothorpeCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "starAndOctothorpeCharacterSet");
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "start");
}

id objc_msgSend_start_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "start:completion:");
}

id objc_msgSend_start_showSlider_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "start:showSlider:completion:");
}

id objc_msgSend_startAllowingRingingCallStatusIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAllowingRingingCallStatusIndicator");
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimating");
}

id objc_msgSend_startAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimation");
}

id objc_msgSend_startCallBufferScreenCountdown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCallBufferScreenCountdown");
}

id objc_msgSend_startCompletionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCompletionBlock");
}

id objc_msgSend_startCountdown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCountdown");
}

id objc_msgSend_startCyclingStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCyclingStrings");
}

id objc_msgSend_startListeningForCallNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startListeningForCallNotifications");
}

id objc_msgSend_startLoopPlayback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startLoopPlayback");
}

id objc_msgSend_startMessagePlayback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMessagePlayback");
}

id objc_msgSend_startMonitoring(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMonitoring");
}

id objc_msgSend_startMotionStateTracking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMotionStateTracking");
}

id objc_msgSend_startObservingAcceptCallButtonTappedWithNotificationCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObservingAcceptCallButtonTappedWithNotificationCenter:");
}

id objc_msgSend_startObservingNotificationsForAVSystemController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObservingNotificationsForAVSystemController:");
}

id objc_msgSend_startOrResetTimerForDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOrResetTimerForDuration:");
}

id objc_msgSend_startPIPNow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPIPNow");
}

id objc_msgSend_startPeriodicActivityUpdatesToQueue_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPeriodicActivityUpdatesToQueue:withHandler:");
}

id objc_msgSend_startPictureInPicture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPictureInPicture");
}

id objc_msgSend_startPreview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPreview");
}

id objc_msgSend_startSOSFlowWithActivationReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSOSFlowWithActivationReason:");
}

id objc_msgSend_startSOSNotificationCountdown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSOSNotificationCountdown");
}

id objc_msgSend_startScreenTimeFlowWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startScreenTimeFlowWithURL:");
}

id objc_msgSend_startSendingLocationUpdateForReason_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSendingLocationUpdateForReason:withCompletion:");
}

id objc_msgSend_startSpeakingRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeakingRequest:");
}

id objc_msgSend_startStatusHeartbeatTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startStatusHeartbeatTimer");
}

id objc_msgSend_startSuppressingInCallStatusBarForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSuppressingInCallStatusBarForReason:");
}

id objc_msgSend_startSuppressionOfSTKAlerts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSuppressionOfSTKAlerts");
}

id objc_msgSend_startThrowAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startThrowAnimation");
}

id objc_msgSend_startTracking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startTracking");
}

id objc_msgSend_startUpdatingLocationWithPrompt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUpdatingLocationWithPrompt");
}

id objc_msgSend_startVoiceLoopMessagePlaybackWithMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startVoiceLoopMessagePlaybackWithMessageType:");
}

id objc_msgSend_startWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startWithReason:");
}

id objc_msgSend_startedSubTest_forTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startedSubTest:forTest:");
}

id objc_msgSend_startedSubTest_forTest_withMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startedSubTest:forTest:withMetrics:");
}

id objc_msgSend_startedTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startedTest:");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "state");
}

id objc_msgSend_stateChangeLockObservation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateChangeLockObservation");
}

id objc_msgSend_stateDisplayChangedObservation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateDisplayChangedObservation");
}

id objc_msgSend_stateForNotifyToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateForNotifyToken:");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "status");
}

id objc_msgSend_statusBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBar");
}

id objc_msgSend_statusChangedHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusChangedHandler");
}

id objc_msgSend_statusHeartbeatTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusHeartbeatTimer");
}

id objc_msgSend_statusIsProvisional(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusIsProvisional");
}

id objc_msgSend_statusIsSuitableForVerticalLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusIsSuitableForVerticalLayout");
}

id objc_msgSend_statusLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusLabel");
}

id objc_msgSend_statusLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusLabelFont");
}

id objc_msgSend_statusLabelFontColorForCallDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusLabelFontColorForCallDisplayStyle:");
}

id objc_msgSend_statusLabelRightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusLabelRightConstraint");
}

id objc_msgSend_statusLabelTapRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusLabelTapRecognizer");
}

id objc_msgSend_statusLabelTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusLabelTimer");
}

id objc_msgSend_statusLabelsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusLabelsArray");
}

id objc_msgSend_stewieAlertButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stewieAlertButton");
}

id objc_msgSend_stewieEndCallButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stewieEndCallButton");
}

id objc_msgSend_stewieState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stewieState");
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stop");
}

id objc_msgSend_stopAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAlert");
}

id objc_msgSend_stopAllowingRingingCallStatusIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAllowingRingingCallStatusIndicator");
}

id objc_msgSend_stopAndNotifyResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAndNotifyResult:");
}

id objc_msgSend_stopAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAnimation:");
}

id objc_msgSend_stopAnnouncement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAnnouncement");
}

id objc_msgSend_stopBackgroundCountdown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopBackgroundCountdown");
}

id objc_msgSend_stopCallBufferTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopCallBufferTimer");
}

id objc_msgSend_stopCheckInTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopCheckInTimer");
}

id objc_msgSend_stopFlash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopFlash");
}

id objc_msgSend_stopListeningForCallNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopListeningForCallNotifications");
}

id objc_msgSend_stopLoopPlayback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopLoopPlayback");
}

id objc_msgSend_stopMessagePlayback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopMessagePlayback");
}

id objc_msgSend_stopObservingNotificationsForAVSystemController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObservingNotificationsForAVSystemController:");
}

id objc_msgSend_stopPIPAndStealViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopPIPAndStealViewController");
}

id objc_msgSend_stopPIPAndStealViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopPIPAndStealViewController:");
}

id objc_msgSend_stopPeriodicActivityUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopPeriodicActivityUpdates");
}

id objc_msgSend_stopPictureInPictureAndRestoreUserInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopPictureInPictureAndRestoreUserInterface:");
}

id objc_msgSend_stopPreview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopPreview");
}

id objc_msgSend_stopSpeakingAtBoundary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSpeakingAtBoundary:");
}

id objc_msgSend_stopSpeakingAtNextBoundary_synchronously_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSpeakingAtNextBoundary:synchronously:error:");
}

id objc_msgSend_stopSuppressingInCallStatusBarForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSuppressingInCallStatusBarForReason:");
}

id objc_msgSend_stopSuppressionOfSTKAlerts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSuppressionOfSTKAlerts");
}

id objc_msgSend_stopTracking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopTracking");
}

id objc_msgSend_stopUpdatingLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopUpdatingLocation");
}

id objc_msgSend_stopVoiceLoopButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopVoiceLoopButton");
}

id objc_msgSend_stopVoiceLoopButtonPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopVoiceLoopButtonPressed");
}

id objc_msgSend_stopVoiceLoopMessagePlayback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopVoiceLoopMessagePlayback");
}

id objc_msgSend_stopWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopWithReason:");
}

id objc_msgSend_storeWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeWithOptions:");
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "string");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByApplyingTransform_reverse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByApplyingTransform:reverse:");
}

id objc_msgSend_stringByRemovingCharactersFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByRemovingCharactersFromSet:");
}

id objc_msgSend_stringByRemovingDiatrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByRemovingDiatrics");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringByTrimmingLastCharacter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingLastCharacter");
}

id objc_msgSend_stringForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:defaultValue:");
}

id objc_msgSend_stringForPIPState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForPIPState:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringFromIOHIDUsage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromIOHIDUsage:");
}

id objc_msgSend_stringFromIOHIDUsagePage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromIOHIDUsagePage:");
}

id objc_msgSend_stringFromPostalAddress_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromPostalAddress:style:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithString:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_strings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strings");
}

id objc_msgSend_strokeWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strokeWidth");
}

id objc_msgSend_strongToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strongToWeakObjectsMapTable");
}

id objc_msgSend_style(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "style");
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_sublayers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sublayers");
}

id objc_msgSend_submitCAMetric_viewId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "submitCAMetric:viewId:");
}

id objc_msgSend_submitSOSResolutionMetric_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "submitSOSResolutionMetric:");
}

id objc_msgSend_submitSOSUserActivityMetric(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "submitSOSUserActivityMetric");
}

id objc_msgSend_subscriptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscriptions");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_subtitleDistanceFromCircleBottom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtitleDistanceFromCircleBottom");
}

id objc_msgSend_subtitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtitleLabel");
}

id objc_msgSend_subtitleStackView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtitleStackView");
}

id objc_msgSend_subtitleString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtitleString");
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subviews");
}

id objc_msgSend_successNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successNotification");
}

id objc_msgSend_suggestedContactStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestedContactStore");
}

id objc_msgSend_suggestedDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestedDisplayName");
}

id objc_msgSend_suggestedNewPosterSourceAfterCallConnects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestedNewPosterSourceAfterCallConnects:");
}

id objc_msgSend_suggestionsEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestionsEnabled");
}

id objc_msgSend_superboxProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superboxProvider");
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superview");
}

id objc_msgSend_supplementalBottomLeftButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supplementalBottomLeftButton");
}

id objc_msgSend_supplementalBottomRightButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supplementalBottomRightButton");
}

id objc_msgSend_supplementalInCallString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supplementalInCallString");
}

id objc_msgSend_supplementalParticipantLabelFormatStringAtIndex_inParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supplementalParticipantLabelFormatStringAtIndex:inParticipantsView:");
}

id objc_msgSend_supplementalTopLeftButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supplementalTopLeftButton");
}

id objc_msgSend_supplementalTopRightButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supplementalTopRightButton");
}

id objc_msgSend_supportedHandleTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedHandleTypes");
}

id objc_msgSend_supportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedInterfaceOrientations");
}

id objc_msgSend_supportsAudioAndVideo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsAudioAndVideo");
}

id objc_msgSend_supportsConversations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsConversations");
}

id objc_msgSend_supportsDTMF(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsDTMF");
}

id objc_msgSend_supportsDynamicSystemUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsDynamicSystemUI");
}

id objc_msgSend_supportsEmergencyFallback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsEmergencyFallback");
}

id objc_msgSend_supportsHandleType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsHandleType:");
}

id objc_msgSend_supportsHolding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsHolding");
}

id objc_msgSend_supportsPrimaryCalling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsPrimaryCalling");
}

id objc_msgSend_supportsRelay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsRelay");
}

id objc_msgSend_supportsReminderActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsReminderActions");
}

id objc_msgSend_supportsReminderLocations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsReminderLocations");
}

id objc_msgSend_supportsScreenSharing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsScreenSharing");
}

id objc_msgSend_supportsSendMessageIntent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsSendMessageIntent");
}

id objc_msgSend_supportsSendingToVoicemail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsSendingToVoicemail");
}

id objc_msgSend_supportsSharePlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsSharePlay");
}

id objc_msgSend_supportsSimultaneousVoiceAndData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsSimultaneousVoiceAndData");
}

id objc_msgSend_supportsTTYWithVoice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsTTYWithVoice");
}

id objc_msgSend_supportsUngrouping(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsUngrouping");
}

id objc_msgSend_suppressRingtone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suppressRingtone");
}

id objc_msgSend_suppressRingtoneForIncomingCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suppressRingtoneForIncomingCall");
}

id objc_msgSend_suspendPosterAfterDelayBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suspendPosterAfterDelayBlock");
}

id objc_msgSend_suspendPosterAndCancelDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suspendPosterAndCancelDelay:");
}

id objc_msgSend_swapCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swapCalls");
}

id objc_msgSend_symbolImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "symbolImageNamed:");
}

id objc_msgSend_symbolScaleForSymbolType_sizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "symbolScaleForSymbolType:sizeCategory:");
}

id objc_msgSend_symbolType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "symbolType");
}

id objc_msgSend_symbolTypeForKeyPadButtonType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "symbolTypeForKeyPadButtonType:");
}

id objc_msgSend_synchronizeSingleLabelViewWithPosterText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronizeSingleLabelViewWithPosterText");
}

id objc_msgSend_systemBlackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlackColor");
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlueColor");
}

id objc_msgSend_systemControlsShouldPresentAsEmbedded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemControlsShouldPresentAsEmbedded");
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:");
}

id objc_msgSend_systemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:weight:");
}

id objc_msgSend_systemGray3Color(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGray3Color");
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGrayColor");
}

id objc_msgSend_systemGreenColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGreenColor");
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:withConfiguration:");
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemRedColor");
}

id objc_msgSend_systemTealColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemTealColor");
}

id objc_msgSend_systemTintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemTintColor");
}

id objc_msgSend_systemWhiteColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemWhiteColor");
}

id objc_msgSend_tableBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableBackgroundColor");
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView");
}

id objc_msgSend_telephonyAccountUnavailableAlertControllerWithSenderIdentities_preferredStyle_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "telephonyAccountUnavailableAlertControllerWithSenderIdentities:preferredStyle:completion:");
}

id objc_msgSend_telephonyClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "telephonyClient");
}

id objc_msgSend_telephonyProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "telephonyProvider");
}

id objc_msgSend_telephonyUIBodyShortFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "telephonyUIBodyShortFont");
}

id objc_msgSend_temporarilyAllowAllStatusBarPills(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "temporarilyAllowAllStatusBarPills");
}

id objc_msgSend_testEmergencyHandleForAccountUUID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testEmergencyHandleForAccountUUID:error:");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "text");
}

id objc_msgSend_textAttachmentWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textAttachmentWithImage:");
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textColor");
}

id objc_msgSend_textField_didUpdateString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textField:didUpdateString:");
}

id objc_msgSend_textFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textFontSize");
}

id objc_msgSend_textInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textInRange:");
}

id objc_msgSend_textInputTraits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textInputTraits");
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textLabel");
}

id objc_msgSend_textRangeFromPosition_toPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRangeFromPosition:toPosition:");
}

id objc_msgSend_textStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textStyle");
}

id objc_msgSend_textStyleForSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textStyleForSizeCategory:");
}

id objc_msgSend_textToSpeak(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textToSpeak");
}

id objc_msgSend_thumbnailImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailImage");
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSince1970");
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceNow");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceReferenceDate");
}

id objc_msgSend_timeOfDetection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeOfDetection");
}

id objc_msgSend_timeTillActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeTillActive");
}

id objc_msgSend_timeTillCancelCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeTillCancelCall");
}

id objc_msgSend_timeToReleaseClaw(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeToReleaseClaw");
}

id objc_msgSend_timeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeout");
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timer");
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timestamp");
}

id objc_msgSend_tipKitStartObservation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tipKitStartObservation");
}

id objc_msgSend_tipKitStopObservation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tipKitStopObservation");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "title");
}

id objc_msgSend_titleColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleColor");
}

id objc_msgSend_titleDistanceFromTop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleDistanceFromTop");
}

id objc_msgSend_titleFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleFont");
}

id objc_msgSend_titleFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleFontSize");
}

id objc_msgSend_titleForControlType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleForControlType:");
}

id objc_msgSend_titleForKeyPadButtonType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleForKeyPadButtonType:");
}

id objc_msgSend_titleForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleForState:");
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleLabel");
}

id objc_msgSend_titleRectYOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleRectYOffset");
}

id objc_msgSend_titleString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleString");
}

id objc_msgSend_titleStyleAttributes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleStyleAttributes");
}

id objc_msgSend_titleStyleAttributesForConfiguration_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleStyleAttributesForConfiguration:error:");
}

id objc_msgSend_toValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toValue");
}

id objc_msgSend_toggleCleethorpesNotificationToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleCleethorpesNotificationToken");
}

id objc_msgSend_toggleFlash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleFlash");
}

id objc_msgSend_toggledOn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggledOn");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topAnchor");
}

id objc_msgSend_topLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topLayoutGuide");
}

id objc_msgSend_topMultipleCallLabelView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topMultipleCallLabelView");
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewController");
}

id objc_msgSend_topic(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topic");
}

id objc_msgSend_torchMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "torchMode");
}

id objc_msgSend_touchAreaEdgeInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchAreaEdgeInsets");
}

id objc_msgSend_touchesForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchesForView:");
}

id objc_msgSend_tpFlattenedWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tpFlattenedWithColor:");
}

id objc_msgSend_tpHierarchicalImageForSymbolType_pointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tpHierarchicalImageForSymbolType:pointSize:");
}

id objc_msgSend_tpHierarchicalImageForSymbolType_pointSize_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tpHierarchicalImageForSymbolType:pointSize:scale:");
}

id objc_msgSend_tpImageForSymbolType_pointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tpImageForSymbolType:pointSize:");
}

id objc_msgSend_tpImageForSymbolType_textStyle_scale_isStaticSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tpImageForSymbolType:textStyle:scale:isStaticSize:");
}

id objc_msgSend_tpImageForSymbolType_textStyle_scale_paletteColors_isStaticSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tpImageForSymbolType:textStyle:scale:paletteColors:isStaticSize:");
}

id objc_msgSend_tpImageForSymbolType_textStyle_scale_symbolWeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tpImageForSymbolType:textStyle:scale:symbolWeight:");
}

id objc_msgSend_trace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trace:");
}

id objc_msgSend_trackFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackFont");
}

id objc_msgSend_trackMaskImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackMaskImage");
}

id objc_msgSend_trackMaskPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackMaskPath");
}

id objc_msgSend_trackSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackSize");
}

id objc_msgSend_trackSolidViewBackDropVisualEffectView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackSolidViewBackDropVisualEffectView");
}

id objc_msgSend_trackText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackText");
}

id objc_msgSend_trackTextBaselineFromBottom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackTextBaselineFromBottom");
}

id objc_msgSend_trackTextRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackTextRect");
}

id objc_msgSend_trackTextYOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackTextYOffset");
}

id objc_msgSend_trackWidthProportion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackWidthProportion");
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingAnchor");
}

id objc_msgSend_trailingSideLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingSideLayoutGuide");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_transform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transform");
}

id objc_msgSend_transformedCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformedCenter");
}

id objc_msgSend_transitionCallToActiveStateAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionCallToActiveStateAnimated:");
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionCoordinator");
}

id objc_msgSend_transitionFrom_to_allowRoll_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionFrom:to:allowRoll:completion:");
}

id objc_msgSend_transitionFromBannerToDismissedIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionFromBannerToDismissedIfNecessary");
}

id objc_msgSend_transitionFromIncomingCallToOngoingCallState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionFromIncomingCallToOngoingCallState");
}

id objc_msgSend_transitionFromViewController_toViewController_duration_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionFromViewController:toViewController:duration:options:animations:completion:");
}

id objc_msgSend_transitionIntoPiP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionIntoPiP");
}

id objc_msgSend_transitionLeftButtonFromIncomingToOngoingCallState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionLeftButtonFromIncomingToOngoingCallState");
}

id objc_msgSend_transitionRightButtonFromIncomingToOngoingCallState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionRightButtonFromIncomingToOngoingCallState");
}

id objc_msgSend_transitionSceneToOverlayForSOS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionSceneToOverlayForSOS");
}

id objc_msgSend_transitionSceneToOverlayForScreenTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionSceneToOverlayForScreenTime");
}

id objc_msgSend_transitionToFullScreenIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToFullScreenIfNecessary");
}

id objc_msgSend_transitionToIdleAfterDelay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToIdleAfterDelay");
}

id objc_msgSend_transitionToNewPoster_showingPosterTransition_shouldBlurPoster_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToNewPoster:showingPosterTransition:shouldBlurPoster:completion:");
}

id objc_msgSend_transitionToRTTState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToRTTState:");
}

id objc_msgSend_transitionToVideoCallBasedViewController_shouldUpdatePipSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToVideoCallBasedViewController:shouldUpdatePipSize:");
}

id objc_msgSend_transitionToView_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToView:animated:");
}

id objc_msgSend_transitionWithView_duration_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionWithView:duration:options:animations:completion:");
}

id objc_msgSend_translationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "translationInView:");
}

id objc_msgSend_transparencyInsetsForImage_requiringFullOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transparencyInsetsForImage:requiringFullOpacity:");
}

id objc_msgSend_transportIndicatorView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transportIndicatorView");
}

id objc_msgSend_tries(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tries");
}

id objc_msgSend_triggerAutoCountdownIfAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerAutoCountdownIfAvailable");
}

id objc_msgSend_triggerInversionColorUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerInversionColorUpdate:");
}

id objc_msgSend_trimDataAgainstTCCForAuditToken_bundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trimDataAgainstTCCForAuditToken:bundle:");
}

id objc_msgSend_trimmedImageByTrimmingTransparentPixelsFromImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trimmedImageByTrimmingTransparentPixelsFromImage:");
}

id objc_msgSend_ttyType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ttyType");
}

id objc_msgSend_tu_contactStoreConfigurationForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tu_contactStoreConfigurationForBundleIdentifier:");
}

id objc_msgSend_tu_contactStoreConfigurationForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tu_contactStoreConfigurationForCall:");
}

id objc_msgSend_tu_containsObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tu_containsObjectPassingTest:");
}

id objc_msgSend_tu_firstObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tu_firstObjectPassingTest:");
}

id objc_msgSend_tu_stringWithTUConfigurationAnnounceCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tu_stringWithTUConfigurationAnnounceCalls:");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "type");
}

id objc_msgSend_uiDeviceOrientationForCNKDeviceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uiDeviceOrientationForCNKDeviceOrientation:");
}

id objc_msgSend_uiSceneSessionRole(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uiSceneSessionRole");
}

id objc_msgSend_unarchiveConfigurationFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchiveConfigurationFromData:error:");
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_unblurredBackgroundImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unblurredBackgroundImageView");
}

id objc_msgSend_undimScreenIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "undimScreenIfNecessary:");
}

id objc_msgSend_unformattedInternationalStringValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unformattedInternationalStringValue");
}

id objc_msgSend_unformattedNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unformattedNumber");
}

id objc_msgSend_unformattedNumberInLatin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unformattedNumberInLatin");
}

id objc_msgSend_ungroupCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ungroupCall:");
}

id objc_msgSend_unhighlightedBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unhighlightedBackgroundColor");
}

id objc_msgSend_unhighlightedCircleViewAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unhighlightedCircleViewAlpha");
}

id objc_msgSend_unholdCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unholdCall:");
}

id objc_msgSend_unicodeDirectionalCharactersSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unicodeDirectionalCharactersSet");
}

id objc_msgSend_unifiedContactWithIdentifier_keysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unifiedContactWithIdentifier:keysToFetch:error:");
}

id objc_msgSend_unifiedContactsMatchingPredicate_keysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unifiedContactsMatchingPredicate:keysToFetch:error:");
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueIdentifier");
}

id objc_msgSend_uniqueProxyIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueProxyIdentifier");
}

id objc_msgSend_uniqueProxyIdentifierUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueProxyIdentifierUUID");
}

id objc_msgSend_unlockForConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockForConfiguration");
}

id objc_msgSend_unregisterForRingerStateNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterForRingerStateNotifications");
}

id objc_msgSend_unregisterObserver_forContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterObserver:forContact:");
}

id objc_msgSend_unsetSharedInstanceOverride(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsetSharedInstanceOverride");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntValue");
}

id objc_msgSend_unsignedIntegerForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerForKey:defaultValue:");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_updateAddAndDeleteButtonForText_name_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAddAndDeleteButtonForText:name:animated:");
}

id objc_msgSend_updateAddAndDeleteButtonForText_name_label_suggestion_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAddAndDeleteButtonForText:name:label:suggestion:animated:");
}

id objc_msgSend_updateAlertActivationReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAlertActivationReason");
}

id objc_msgSend_updateAlertActivationReasonForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAlertActivationReasonForCall:");
}

id objc_msgSend_updateAllCellConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAllCellConstraints");
}

id objc_msgSend_updateAllTrackMasks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAllTrackMasks");
}

id objc_msgSend_updateAmbientAudioRoutesVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAmbientAudioRoutesVisibility");
}

id objc_msgSend_updateAnimatedSliderForCountdownNumber_forTotalCount_afterDelay_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAnimatedSliderForCountdownNumber:forTotalCount:afterDelay:completion:");
}

id objc_msgSend_updateAnimatedSliderForCountdownNumber_forTotalCount_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAnimatedSliderForCountdownNumber:forTotalCount:completion:");
}

id objc_msgSend_updateAudioRouteButtonBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAudioRouteButtonBackgroundColor");
}

id objc_msgSend_updateAudioRouteButtonImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAudioRouteButtonImage");
}

id objc_msgSend_updateAudioRouteButtonImageColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAudioRouteButtonImageColor");
}

id objc_msgSend_updateAvatarViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAvatarViewConstraints");
}

id objc_msgSend_updateBackgroundContactImageViewWithImage_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBackgroundContactImageViewWithImage:animated:");
}

id objc_msgSend_updateBackgroundForEmergencyCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBackgroundForEmergencyCall");
}

id objc_msgSend_updateBackgroundMaterial_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBackgroundMaterial:");
}

id objc_msgSend_updateBackgroundStartPipAuthorizationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBackgroundStartPipAuthorizationState");
}

id objc_msgSend_updateBannerButtonsViewForCallDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBannerButtonsViewForCallDisplayStyle:");
}

id objc_msgSend_updateBannerTapGestureRecognizerForCallDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBannerTapGestureRecognizerForCallDisplayStyle:");
}

id objc_msgSend_updateBottomBarAlphaWithCurrentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBottomBarAlphaWithCurrentState:");
}

id objc_msgSend_updateBottomBarButtonsWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBottomBarButtonsWithCall:");
}

id objc_msgSend_updateBottomControlsViewWithInCallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBottomControlsViewWithInCallState:");
}

id objc_msgSend_updateBusinessLogoSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBusinessLogoSize");
}

id objc_msgSend_updateButtonAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateButtonAnimated:");
}

id objc_msgSend_updateButtonColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateButtonColor");
}

id objc_msgSend_updateButtonsForCallModelState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateButtonsForCallModelState");
}

id objc_msgSend_updateButtonsViewState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateButtonsViewState");
}

id objc_msgSend_updateCallControllerForCurrentState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCallControllerForCurrentState");
}

id objc_msgSend_updateCallDetailsViewIsOnScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCallDetailsViewIsOnScreen");
}

id objc_msgSend_updateCallForUserFeedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCallForUserFeedback");
}

id objc_msgSend_updateCallGroups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCallGroups");
}

id objc_msgSend_updateCallParticipantsViewControllerCallGroups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCallParticipantsViewControllerCallGroups");
}

id objc_msgSend_updateCallRecordingIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCallRecordingIfNeeded");
}

id objc_msgSend_updateCallRecordingPositionIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCallRecordingPositionIfNeeded");
}

id objc_msgSend_updateCell_atIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCell:atIndex:animated:");
}

id objc_msgSend_updateContactAndNicknamesForAutoUpdateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContactAndNicknamesForAutoUpdateWithError:");
}

id objc_msgSend_updateContactInformationForParticipantViewWithInCallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContactInformationForParticipantViewWithInCallState:");
}

id objc_msgSend_updateContraintsForStatusBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContraintsForStatusBar");
}

id objc_msgSend_updateControls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateControls");
}

id objc_msgSend_updateConversationsNotBackedByGroupSessionWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateConversationsNotBackedByGroupSessionWithCall:");
}

id objc_msgSend_updateCurrentState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCurrentState");
}

id objc_msgSend_updateDesiredSpringboardBehavior(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDesiredSpringboardBehavior");
}

id objc_msgSend_updateDialRequestAccountIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDialRequestAccountIfNecessary:");
}

id objc_msgSend_updateEmergencyTitleLabelForCallDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateEmergencyTitleLabelForCallDuration");
}

id objc_msgSend_updateEnhancedEmergencyViewWhenKeypadPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateEnhancedEmergencyViewWhenKeypadPresented");
}

id objc_msgSend_updateForegroundAppURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateForegroundAppURL:");
}

id objc_msgSend_updateForegroundAppURL_using_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateForegroundAppURL:using:");
}

id objc_msgSend_updateGestureRecognizersEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateGestureRecognizersEnabled");
}

id objc_msgSend_updateHardPauseButtonState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHardPauseButtonState");
}

id objc_msgSend_updateHardPauseDigitsState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHardPauseDigitsState");
}

id objc_msgSend_updateHeightConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHeightConstraints");
}

id objc_msgSend_updateIconSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateIconSize");
}

id objc_msgSend_updateImageColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateImageColor");
}

id objc_msgSend_updateImageViewAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateImageViewAlpha");
}

id objc_msgSend_updateInCallStatusBarSuppression(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateInCallStatusBarSuppression");
}

id objc_msgSend_updateInCallWindowSceneFaceTimeLaunchBehavior(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateInCallWindowSceneFaceTimeLaunchBehavior");
}

id objc_msgSend_updateInCallWindowScenePrefersHiddenWhenDismissed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateInCallWindowScenePrefersHiddenWhenDismissed");
}

id objc_msgSend_updateIncomingBottomBarControlState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateIncomingBottomBarControlState");
}

id objc_msgSend_updateInteractiveState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateInteractiveState");
}

id objc_msgSend_updateKeypadButtonBackgroundMaterial_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateKeypadButtonBackgroundMaterial:");
}

id objc_msgSend_updateLabelAlignmentForCallDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelAlignmentForCallDisplayStyle:");
}

id objc_msgSend_updateLabelConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelConstraints");
}

id objc_msgSend_updateLabelFonts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelFonts");
}

id objc_msgSend_updateLabelScales(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelScales");
}

id objc_msgSend_updateLabelTextAlignmentForCallDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelTextAlignmentForCallDisplayStyle:");
}

id objc_msgSend_updateLabelTrailingConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelTrailingConstraints");
}

id objc_msgSend_updateLabelsOrder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelsOrder");
}

id objc_msgSend_updateLabelsOrderAndLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelsOrderAndLayout");
}

id objc_msgSend_updateLabelsOrderAndText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelsOrderAndText");
}

id objc_msgSend_updateLayeredBackgroundWallpaper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLayeredBackgroundWallpaper");
}

id objc_msgSend_updateLayoutForCallDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLayoutForCallDisplayStyle:");
}

id objc_msgSend_updateLayoutForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLayoutForState:");
}

id objc_msgSend_updateLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLayoutGuide");
}

id objc_msgSend_updateLayoutSupplementalButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLayoutSupplementalButtons");
}

id objc_msgSend_updateLegacyBackgroundImageVisibilityWithShouldShowWallpaper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLegacyBackgroundImageVisibilityWithShouldShowWallpaper:");
}

id objc_msgSend_updateMainButtonLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMainButtonLayoutGuide");
}

id objc_msgSend_updateMainInCallControllerCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMainInCallControllerCalls");
}

id objc_msgSend_updateMaterialAndAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMaterialAndAlpha");
}

id objc_msgSend_updateMetadataForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMetadataForCall:");
}

id objc_msgSend_updateMiddleViewSliderConstraintConstants(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMiddleViewSliderConstraintConstants");
}

id objc_msgSend_updateMiniWindowCutoutFrame_attachedToWindowedAccessory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMiniWindowCutoutFrame:attachedToWindowedAccessory:");
}

id objc_msgSend_updateMultiwayDeviceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMultiwayDeviceOrientation:");
}

id objc_msgSend_updateMultiwayViewControllerUIState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMultiwayViewControllerUIState");
}

id objc_msgSend_updateNumberOfCellsWithNewValue_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNumberOfCellsWithNewValue:animated:");
}

id objc_msgSend_updatePIPFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePIPFrame");
}

id objc_msgSend_updatePIPProxyControlStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePIPProxyControlStates");
}

id objc_msgSend_updatePIPProxyLayerCloning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePIPProxyLayerCloning");
}

id objc_msgSend_updatePIPProxyMicrophoneControlStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePIPProxyMicrophoneControlStates");
}

id objc_msgSend_updatePIPSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePIPSize");
}

id objc_msgSend_updateParticipantAtIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateParticipantAtIndex:animated:");
}

id objc_msgSend_updateParticipantConstraintsForPosterName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateParticipantConstraintsForPosterName:");
}

id objc_msgSend_updateParticipantMarqueeLabelHorizontalConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateParticipantMarqueeLabelHorizontalConstraint");
}

id objc_msgSend_updateParticipantMarqueeLabelNumberOfLines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateParticipantMarqueeLabelNumberOfLines");
}

id objc_msgSend_updateParticipants(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateParticipants");
}

id objc_msgSend_updateParticipantsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateParticipantsAnimated:");
}

id objc_msgSend_updatePillViewWithIsMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePillViewWithIsMuted:");
}

id objc_msgSend_updatePipSharePlaySessionWithConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePipSharePlaySessionWithConversation:");
}

id objc_msgSend_updatePlaybackStateUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlaybackStateUsingBlock:");
}

id objc_msgSend_updatePosterBadgeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePosterBadgeView");
}

id objc_msgSend_updatePosterBadgeView_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePosterBadgeView:to:");
}

id objc_msgSend_updatePosterNameAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePosterNameAlpha:");
}

id objc_msgSend_updatePosterViewModelForParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePosterViewModelForParticipantsView:");
}

id objc_msgSend_updatePrefersBannersHiddenFromClonedDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePrefersBannersHiddenFromClonedDisplay");
}

id objc_msgSend_updatePresentationIfNecessaryForGreenTea3PCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePresentationIfNecessaryForGreenTea3PCall:");
}

id objc_msgSend_updatePresenterNameAndAvatar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePresenterNameAndAvatar");
}

id objc_msgSend_updateRTTAudioRouteButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRTTAudioRouteButton");
}

id objc_msgSend_updateRTTEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRTTEnabled:");
}

id objc_msgSend_updateRemoteAlertStateIfNecessaryForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRemoteAlertStateIfNecessaryForCall:");
}

id objc_msgSend_updateRemoteAlertSwipeDismissalStyleForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRemoteAlertSwipeDismissalStyleForCall:");
}

id objc_msgSend_updateRoundViewColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRoundViewColor");
}

id objc_msgSend_updateRoundViewColorAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRoundViewColorAnimated:");
}

id objc_msgSend_updateSOSFlowState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSOSFlowState:");
}

id objc_msgSend_updateSOSHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSOSHandles:");
}

id objc_msgSend_updateSceneBackgroundMaterialWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSceneBackgroundMaterialWith:");
}

id objc_msgSend_updateScreenSharingDisableUpdateMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateScreenSharingDisableUpdateMask");
}

id objc_msgSend_updateSecondaryLabelHorizontalConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSecondaryLabelHorizontalConstraint");
}

id objc_msgSend_updateSecondaryStringForParticipantViewWithInCallState_allowsDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSecondaryStringForParticipantViewWithInCallState:allowsDuration:");
}

id objc_msgSend_updateShareNameAndPhotoHUDPresentationIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateShareNameAndPhotoHUDPresentationIfNeeded");
}

id objc_msgSend_updateShouldBecomeVisibleWhenWakingDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateShouldBecomeVisibleWhenWakingDisplay");
}

id objc_msgSend_updateShouldPIPWhenEnteringBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateShouldPIPWhenEnteringBackground");
}

id objc_msgSend_updateShouldShowLargeAvatar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateShouldShowLargeAvatar");
}

id objc_msgSend_updateSingleDurationTimerLabelText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSingleDurationTimerLabelText");
}

id objc_msgSend_updateStackViewHorizontalConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateStackViewHorizontalConstraints");
}

id objc_msgSend_updateStackViewHorizontalConstraintsWithBusinessLogo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateStackViewHorizontalConstraintsWithBusinessLogo");
}

id objc_msgSend_updateStackViewHorizontalConstraintsWithVoIPAppIcon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateStackViewHorizontalConstraintsWithVoIPAppIcon");
}

id objc_msgSend_updateStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateStatus:");
}

id objc_msgSend_updateStatusFromParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateStatusFromParticipantsView:");
}

id objc_msgSend_updateText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateText");
}

id objc_msgSend_updateToProperIconColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateToProperIconColor");
}

id objc_msgSend_updateTopLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTopLayoutGuide");
}

id objc_msgSend_updateTransportIndicatorView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTransportIndicatorView");
}

id objc_msgSend_updateUPlusOneVideoCallViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUPlusOneVideoCallViews");
}

id objc_msgSend_updateVideoState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVideoState");
}

id objc_msgSend_updateViewForCallState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateViewForCallState");
}

id objc_msgSend_updateViewForEmergencyCallIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateViewForEmergencyCallIfNecessary");
}

id objc_msgSend_updateViewModelForParticipantsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateViewModelForParticipantsView:");
}

id objc_msgSend_updateViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateViews");
}

id objc_msgSend_updateViewsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateViewsAnimated:");
}

id objc_msgSend_updateViewsForHeldCallControlsViewIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateViewsForHeldCallControlsViewIfNeeded");
}

id objc_msgSend_updateWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithCall:");
}

id objc_msgSend_updatedActionTypeForActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedActionTypeForActionType:");
}

id objc_msgSend_updatedAvatarViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedAvatarViewConstraints");
}

id objc_msgSend_updatedImageForActionType_givenDefaultImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedImageForActionType:givenDefaultImage:");
}

id objc_msgSend_updatedParticipantMarqueeLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedParticipantMarqueeLabelFont");
}

id objc_msgSend_updatedSelectedImageForActionType_givenDefaultSelectedImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedSelectedImageForActionType:givenDefaultSelectedImage:");
}

id objc_msgSend_updatedSelectedStateForActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedSelectedStateForActionType:");
}

id objc_msgSend_updatesPaused(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatesPaused");
}

id objc_msgSend_urlForVideoMessageWithUUID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlForVideoMessageWithUUID:completionHandler:");
}

id objc_msgSend_useRTTButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useRTTButton");
}

id objc_msgSend_userAcknowledgedFindMyInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAcknowledgedFindMyInfo");
}

id objc_msgSend_userActivity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userActivity");
}

id objc_msgSend_userConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userConfiguration");
}

id objc_msgSend_userHasAcknowledgeFindMyWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userHasAcknowledgeFindMyWithCompletion:");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfo");
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceIdiom");
}

id objc_msgSend_userInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLayoutDirection");
}

id objc_msgSend_userInterfaceLayoutDirectionForSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLayoutDirectionForSemanticContentAttribute:");
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceStyle");
}

id objc_msgSend_userNotificationWithIdentifier_title_message_defaultButton_alternateButton_otherButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:");
}

id objc_msgSend_userWantsFindMySuppressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userWantsFindMySuppressed");
}

id objc_msgSend_usesCompactMulticallUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usesCompactMulticallUI");
}

id objc_msgSend_usesLowerButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usesLowerButtons");
}

id objc_msgSend_usesMiddleCenteringView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usesMiddleCenteringView");
}

id objc_msgSend_usesSBSUIInCallWindowSceneForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usesSBSUIInCallWindowSceneForType:");
}

id objc_msgSend_utterances(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "utterances");
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uuid");
}

id objc_msgSend_valid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valid");
}

id objc_msgSend_validNetworkReachable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validNetworkReachable");
}

id objc_msgSend_validationSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validationSource");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForEntitlement:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueWithCAColorMatrix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCAColorMatrix:");
}

id objc_msgSend_valueWithCGRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCGRect:");
}

id objc_msgSend_valueWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithSize:");
}

id objc_msgSend_velocityInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "velocityInView:");
}

id objc_msgSend_verticalPadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalPadding");
}

id objc_msgSend_vibrantSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vibrantSettings");
}

id objc_msgSend_vibrantSettingsWithReferenceColor_referenceContrast_legibilitySettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vibrantSettingsWithReferenceColor:referenceContrast:legibilitySettings:");
}

id objc_msgSend_videoCallNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoCallNavigationController");
}

id objc_msgSend_videoCallStateChangedNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoCallStateChangedNotification:");
}

id objc_msgSend_videoDeviceController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoDeviceController");
}

id objc_msgSend_videoEffectsForEffectPickerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoEffectsForEffectPickerView:");
}

id objc_msgSend_videoGroupView_didUpdateCorner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoGroupView:didUpdateCorner:");
}

id objc_msgSend_videoGroupViewDidStartDrag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoGroupViewDidStartDrag:");
}

id objc_msgSend_videoMessageRootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoMessageRootViewController");
}

id objc_msgSend_videoMessageURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoMessageURL");
}

id objc_msgSend_videoMessageUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoMessageUUID");
}

id objc_msgSend_videoMessagingEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoMessagingEnabled");
}

id objc_msgSend_videoOverlayViewController_isShowingOverlay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoOverlayViewController:isShowingOverlay:");
}

id objc_msgSend_videoStreamingIsGoingOn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoStreamingIsGoingOn");
}

id objc_msgSend_videoStreamingIsOnScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoStreamingIsOnScreen");
}

id objc_msgSend_videoStreamingRequestHasBeenAccepted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoStreamingRequestHasBeenAccepted");
}

id objc_msgSend_videoWasPausedForInterruption(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoWasPausedForInterruption");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "view");
}

id objc_msgSend_viewAlphaForPosterRenderingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewAlphaForPosterRenderingViewController");
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController");
}

id objc_msgSend_viewControllerClassName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerClassName");
}

id objc_msgSend_viewControllerForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForCall:");
}

id objc_msgSend_viewControllerForContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForContact:");
}

id objc_msgSend_viewControllerForNewContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForNewContact:");
}

id objc_msgSend_viewControllerForPiP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForPiP");
}

id objc_msgSend_viewControllerForUnknownContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForUnknownContact:");
}

id objc_msgSend_viewControllerSupportsEffects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerSupportsEffects:");
}

id objc_msgSend_viewControllerToRestoreWhenCancellingPIP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerToRestoreWhenCancellingPIP");
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllers");
}

id objc_msgSend_viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController");
}

id objc_msgSend_viewIfLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewIfLoaded");
}

id objc_msgSend_viewIsInAppearedState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewIsInAppearedState");
}

id objc_msgSend_viewLabels(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewLabels");
}

id objc_msgSend_viewServiceDidTerminateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewServiceDidTerminateWithError:");
}

id objc_msgSend_viewUpdateClockTickTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewUpdateClockTickTimer");
}

id objc_msgSend_viewWillAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewWillAppear:");
}

id objc_msgSend_visibleCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleCells");
}

id objc_msgSend_visibleViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleViewController");
}

id objc_msgSend_voiceInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceInfo");
}

id objc_msgSend_voiceLoopManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceLoopManager");
}

id objc_msgSend_voiceLoopViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceLoopViewController");
}

id objc_msgSend_voiceMessageManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceMessageManager");
}

id objc_msgSend_voicemailProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voicemailProvider");
}

id objc_msgSend_voipIconEdge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voipIconEdge");
}

id objc_msgSend_voipIconMarginH(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voipIconMarginH");
}

id objc_msgSend_voipTintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voipTintColor");
}

id objc_msgSend_volumeButtonDimension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeButtonDimension");
}

id objc_msgSend_volumeButtonHighlightView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeButtonHighlightView");
}

id objc_msgSend_volumeButtonHighlightViewCenterYConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeButtonHighlightViewCenterYConstraint");
}

id objc_msgSend_volumeButtonHighlightViewHeightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeButtonHighlightViewHeightConstraint");
}

id objc_msgSend_volumeButtonHintViewVisibilityControlling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeButtonHintViewVisibilityControlling");
}

id objc_msgSend_volumeDownPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeDownPressed");
}

id objc_msgSend_volumeHUDHiddenCurrently(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeHUDHiddenCurrently");
}

id objc_msgSend_volumeHUDHiddenPending(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeHUDHiddenPending");
}

id objc_msgSend_volumeMaxedCurrently(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeMaxedCurrently");
}

id objc_msgSend_volumeMaxedPending(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeMaxedPending");
}

id objc_msgSend_volumeUpPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeUpPressed");
}

id objc_msgSend_waitForPresentationMode_forSceneOfType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForPresentationMode:forSceneOfType:completion:");
}

id objc_msgSend_waitForRegistrationOfGenericSceneWithType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForRegistrationOfGenericSceneWithType:completion:");
}

id objc_msgSend_waitForRegistrationOfSceneWithType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForRegistrationOfSceneWithType:completion:");
}

id objc_msgSend_waitForSessionInitialization(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForSessionInitialization");
}

id objc_msgSend_waitingForFullScreenAudioRoutes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitingForFullScreenAudioRoutes");
}

id objc_msgSend_wallpaper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaper");
}

id objc_msgSend_wallpaperContentIsSensitive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperContentIsSensitive:");
}

id objc_msgSend_wallpaperData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperData");
}

id objc_msgSend_wallpaperTitleStyleAttributes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperTitleStyleAttributes");
}

id objc_msgSend_wallpaperTitleStyleAttributesForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperTitleStyleAttributesForCall:");
}

id objc_msgSend_wallpaperTypeForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperTypeForBundleID:");
}

id objc_msgSend_wallpaperTypeForCNWallpaper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperTypeForCNWallpaper:");
}

id objc_msgSend_wallpaperTypeForIMWallpaperMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallpaperTypeForIMWallpaperMetadata:");
}

id objc_msgSend_wantsApplicationDismissalStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsApplicationDismissalStyle");
}

id objc_msgSend_wantsAsyncReload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsAsyncReload");
}

id objc_msgSend_wantsBannerWithoutScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsBannerWithoutScene");
}

id objc_msgSend_wantsBlur(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsBlur");
}

id objc_msgSend_wantsCallButtonAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsCallButtonAnimation");
}

id objc_msgSend_wantsHoldMusic(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsHoldMusic");
}

id objc_msgSend_wantsMiniWindowCoverViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsMiniWindowCoverViewController");
}

id objc_msgSend_wantsPIPRotationForLocalPreview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsPIPRotationForLocalPreview");
}

id objc_msgSend_wantsPreferredContentSizeUpdateAfterRotationFinishes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsPreferredContentSizeUpdateAfterRotationFinishes");
}

id objc_msgSend_wantsStagingArea(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsStagingArea");
}

id objc_msgSend_wasCallCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasCallCancelled");
}

id objc_msgSend_wasDeclined(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasDeclined");
}

id objc_msgSend_wasMounted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasMounted");
}

id objc_msgSend_wasMountedProbability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasMountedProbability");
}

id objc_msgSend_wasPresentedAsBanner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasPresentedAsBanner");
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weakObjectsHashTable");
}

id objc_msgSend_weakToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weakToStrongObjectsMapTable");
}

id objc_msgSend_webpageURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webpageURL");
}

id objc_msgSend_weightForSymbolType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weightForSymbolType:");
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whiteColor");
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceAndNewlineCharacterSet");
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceCharacterSet");
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthAnchor");
}

id objc_msgSend_wifiAllowedForBundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wifiAllowedForBundleId:");
}

id objc_msgSend_willAnimatePictureInPictureStopCompletionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willAnimatePictureInPictureStopCompletionBlock");
}

id objc_msgSend_willAnimateRotationToInterfaceOrientation_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willAnimateRotationToInterfaceOrientation:duration:");
}

id objc_msgSend_willFinishSlideForSlidingButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willFinishSlideForSlidingButton:");
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willMoveToParentViewController:");
}

id objc_msgSend_willRestrictAddresses_forBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willRestrictAddresses:forBundleIdentifier:");
}

id objc_msgSend_willStartSendingLocationUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willStartSendingLocationUpdate");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "window");
}

id objc_msgSend_windowForTransitionAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowForTransitionAnimation");
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowScene");
}

id objc_msgSend_windowSceneToWindowMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowSceneToWindowMap");
}

id objc_msgSend_withCaseSensitiveAttribute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "withCaseSensitiveAttribute");
}

id objc_msgSend_workQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workQueue");
}

id objc_msgSend_wrappedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrappedViewController");
}

id objc_msgSend_wrapperViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrapperViewController");
}

id objc_msgSend_wrapperViewControllerNeedsCleanup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrapperViewControllerNeedsCleanup:");
}

id objc_msgSend_wrapperViewControllerPreferredContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrapperViewControllerPreferredContentSize:");
}

id objc_msgSend_wrapperViewControllerShouldReturnRestoreWrappedViewControllerHierarchy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrapperViewControllerShouldReturnRestoreWrappedViewControllerHierarchy:");
}

id objc_msgSend_writeToFile_atomically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:atomically:");
}

id objc_msgSend_writeToLastSeenPosterCacheIfNecessaryForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToLastSeenPosterCacheIfNecessaryForCall:");
}

id objc_msgSend_xPointIsWithinTrack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xPointIsWithinTrack:");
}

id objc_msgSend_xpcHost(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcHost");
}

id objc_msgSend_yOffsetForDialerLCDView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yOffsetForDialerLCDView");
}

id objc_msgSend_yOffsetForDialerLCDViewForDxDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yOffsetForDialerLCDViewForDxDevices");
}

id objc_msgSend_yOffsetForLoweredButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yOffsetForLoweredButtons");
}

id objc_msgSend_yOffsetForSmartDialerLCDView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yOffsetForSmartDialerLCDView");
}

id objc_msgSend_yParticipantsViewAdjustmentForKeypad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yParticipantsViewAdjustmentForKeypad");
}

id objc_msgSend_zombieDetectedForSession_scene_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zombieDetectedForSession:scene:ofType:");
}

