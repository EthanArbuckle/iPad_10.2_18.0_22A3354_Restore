void sub_100006BB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100006BD8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id WeakRetained;
  void *v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *i;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  unsigned int v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  unsigned __int8 v33;
  id v34;
  id obj;
  id *location;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "updatedObjects"));
  location = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentItem"));
  v7 = objc_msgSend(v4, "containsObject:", v6);

  if (v7)
  {
    v8 = objc_loadWeakRetained(location);
    objc_msgSend(v8, "updateActionView");

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deletedObjects"));
  v10 = objc_msgSend(v9, "count");

  if (v10)
  {
    v39 = 0u;
    v40 = 0u;
    v37 = 0u;
    v38 = 0u;
    v34 = v3;
    obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deletedObjects"));
    v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v38;
      while (2)
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(_QWORD *)v38 != v13)
            objc_enumerationMutation(obj);
          v15 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * (_QWORD)i);
          v16 = objc_opt_class(FBKContentItem);
          if ((objc_opt_isKindOfClass(v15, v16) & 1) != 0)
          {
            v17 = v15;
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "formID"));
            v19 = objc_loadWeakRetained(location);
            v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "contentItem"));
            v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "ID"));
            v22 = objc_msgSend(v18, "isEqualToNumber:", v21);

            if (v22)
            {
              v23 = objc_loadWeakRetained(location);
              objc_msgSend(v23, "updateActionView");

              goto LABEL_16;
            }

          }
        }
        v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
        if (v12)
          continue;
        break;
      }
    }
LABEL_16:

    v3 = v34;
  }
  v24 = objc_loadWeakRetained(location);
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "surveyBugForm"));
  v26 = objc_loadWeakRetained(location);
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "team"));
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "draftResponsesContentItemsForTeam:", v27));

  if (v28 && objc_msgSend(v28, "count"))
  {
    v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deletedObjects"));
    if ((objc_msgSend(v29, "intersectsSet:", v28) & 1) == 0)
    {
      v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "updatedObjects"));
      if (!objc_msgSend(v30, "intersectsSet:", v28))
      {
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "insertedObjects"));
        v33 = objc_msgSend(v32, "intersectsSet:", v28);

        if ((v33 & 1) == 0)
          goto LABEL_24;
        goto LABEL_23;
      }

    }
LABEL_23:
    v31 = objc_loadWeakRetained(location);
    objc_msgSend(v31, "updateActionView");

  }
LABEL_24:

}

id sub_100007194(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setIsLoading:", 0);
  objc_msgSend(*(id *)(a1 + 32), "updateWebView");
  objc_msgSend(*(id *)(a1 + 32), "updateActionView");
  return _objc_msgSend(*(id *)(a1 + 32), "updateNavigation");
}

uint64_t sub_1000071D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[5];

  if (a3)
  {
    v4 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_100098B40(v4);

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("SURVEY_LOAD_ERROR_TITLE"), &stru_1000EA660, 0));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("SURVEY_LOAD_ERROR_MESSAGE"), &stru_1000EA660, 0));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v6, v8, 1));

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, 0));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_100007398;
    v14[3] = &unk_1000E61E0;
    v14[4] = *(_QWORD *)(a1 + 32);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v11, 1, v14));
    objc_msgSend(v9, "addAction:", v12);

    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v9, 1, 0);
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_100007398(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "splitViewController"));
  objc_msgSend(v1, "dismissSecondaryOrShowEmptyViewControllerAnimated:", 1);

}

uint64_t sub_1000080FC(uint64_t inSystemSoundID)
{
  if ((_DWORD)inSystemSoundID)
    return AudioServicesDisposeSystemSoundID(inSystemSoundID);
  return inSystemSoundID;
}

void sub_1000086E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100008718(uint64_t a1, void *a2, void *a3, void *a4)
{
  id *v6;
  id v7;
  id v8;
  id v9;
  id WeakRetained;
  void *v11;

  v6 = (id *)(a1 + 32);
  v7 = a4;
  v8 = a3;
  v9 = a2;
  WeakRetained = objc_loadWeakRetained(v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView:cellForRowAtIndexPath:withItemIdentifier:", v9, v8, v7));

  objc_msgSend(v11, "setItemIdentifier:", v7);
  return v11;
}

void sub_100008950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100008974(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  _BOOL4 v8;
  void *v9;
  void *v10;
  _QWORD v11[4];
  id v12;
  id v13;
  uint8_t buf[4];
  void *v15;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "object"));
  v5 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "hashingKey"));
    *(_DWORD *)buf = 138543362;
    v15 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "did get notification to show pin pairing for device [%{public}@]", buf, 0xCu);

  }
  v7 = objc_claimAutoreleasedReturnValue(+[FBALog ded](FBALog, "ded"));
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v8)
    {
      *(_DWORD *)buf = 138543362;
      v15 = v4;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "will show pairing view for device [%{public}@]", buf, 0xCu);
    }

    v9 = (void *)objc_claimAutoreleasedReturnValue(+[FBKDeviceManager sharedInstance](FBKDeviceManager, "sharedInstance"));
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_100008BB8;
    v11[3] = &unk_1000E62D8;
    v12 = v4;
    objc_copyWeak(&v13, (id *)(a1 + 32));
    objc_msgSend(v9, "beginPairingDevice:showUIBlock:", v12, v11);

    objc_destroyWeak(&v13);
    v10 = v12;
  }
  else
  {
    if (v8)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "could not show pairing view, given device is nil", buf, 2u);
    }

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v10, "postNotificationName:object:", FBKDEDHelperHereIsYourPairedDevice, 0);
  }

}

void sub_100008B9C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100008BB8(uint64_t a1)
{
  id WeakRetained;
  FBAOnDemandPinParingNavigationController *v3;

  v3 = -[FBAOnDemandPinParingNavigationController initWithDevice:completion:]([FBAOnDemandPinParingNavigationController alloc], "initWithDevice:completion:", *(_QWORD *)(a1 + 32), &stru_1000E6270);
  -[FBAOnDemandPinParingNavigationController setModalPresentationStyle:](v3, "setModalPresentationStyle:", 2);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "presentViewController:animated:completion:", v3, 1, &stru_1000E62B0);

}

void sub_100008C2C(id a1, FBKGroupedDevice *a2)
{
  FBKGroupedDevice *v2;
  NSObject *v3;
  void *v4;
  int v5;
  FBKGroupedDevice *v6;

  v2 = a2;
  v3 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138543362;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "did pick device [%{public}@]", (uint8_t *)&v5, 0xCu);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v4, "postNotificationName:object:", FBKDEDHelperHereIsYourPairedDevice, v2);

}

void sub_100009890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000098C8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id WeakRetained;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD v15[4];
  id v16;

  v3 = a2;
  if (v3)
  {
    v4 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_100098BB0(a1, v4, v5, v6, v7, v8, v9, v10);

  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "unregisterApplicationNotifications");

  v12 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v12, "setDevicesController:", 0);

  v13 = objc_loadWeakRetained((id *)(a1 + 40));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100009A00;
  v15[3] = &unk_1000E6328;
  objc_copyWeak(&v16, (id *)(a1 + 40));
  objc_msgSend(v13, "dismissViewControllerAnimated:completion:", 1, v15);

  v14 = *(_QWORD *)(a1 + 32);
  if (v14)
    (*(void (**)(void))(v14 + 16))();
  objc_destroyWeak(&v16);

}

void sub_1000099E8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100009A00(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  unsigned int v4;
  void *v5;
  id v6;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "launchAction"));
  v4 = objc_msgSend(v3, "isCaptive");

  if (v4)
  {
    v6 = objc_loadWeakRetained(v1);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "launchAction"));
    +[iFBKUtils exitCaptiveModeRemovingFromHomeScreen:](iFBKUtils, "exitCaptiveModeRemovingFromHomeScreen:", objc_msgSend(v5, "shouldMakeFBAVisible"));

  }
}

void sub_10000A040(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "draftingController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingQandA"));
  objc_msgSend(v3, "attachAnswersToQuestionsWithGivenData:", v2);

}

id sub_10000A298(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "unregisterApplicationNotifications");
  objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
  return _objc_msgSend(*(id *)(a1 + 32), "close");
}

void sub_10000A4D4(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FBADeviceDisplayCell reuseIdentifier](FBADeviceDisplayCell, "reuseIdentifier"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "dequeueReusableCellWithIdentifier:", v2));

  objc_msgSend(v4, "spaceFromSuperViewToLabel");
  qword_100117F98 = v3;

}

id sub_10000BAF0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "deselectRowAtIndexPath:animated:", *(_QWORD *)(a1 + 40), 1);
}

void sub_10000C7C0(uint64_t a1, int a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  int v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  _QWORD v39[5];
  id v40;
  id v41;
  int v42;
  _QWORD v43[5];
  id v44;
  id v45;
  int v46;
  uint8_t buf[4];
  int v48;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationItem"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "rightBarButtonItem"));
  objc_msgSend(v5, "setEnabled:", 0);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationItem"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "leftBarButtonItem"));
  objc_msgSend(v7, "setEnabled:", 0);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devicesController"));
  objc_msgSend(v8, "removeAllAttachments");

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formResponse"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "ID"));
  v11 = objc_msgSend(v10, "intValue");

  if (!a2)
  {
    v23 = *(void **)(a1 + 32);
    v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "localizedStringForKey:value:table:", CFSTR("SAVING_DRAFT"), &stru_1000EA660, FBKCommonStrings));
    objc_msgSend(v23, "showSpinnerWithStatus:", v25);

    v26 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formResponse"));
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_10000CC10;
    v39[3] = &unk_1000E63A0;
    v42 = (int)v11;
    v28 = *(void **)(a1 + 40);
    v39[4] = *(_QWORD *)(a1 + 32);
    v40 = v28;
    v41 = *(id *)(a1 + 48);
    objc_msgSend(v26, "saveFormResponse:completion:", v27, v39);

    v22 = v40;
    goto LABEL_7;
  }
  v12 = objc_claimAutoreleasedReturnValue(+[FBALog ded](FBALog, "ded"));
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v13 = *(_DWORD *)(a1 + 56);
    *(_DWORD *)buf = 67109120;
    v48 = v13;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "will delete all bug sessions for form [%i]", buf, 8u);
  }

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devicesController"));
  objc_msgSend(v14, "abortAllSessions");

  v15 = *(void **)(a1 + 32);
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("DELETING_DRAFT"), &stru_1000EA660, FBKCommonStrings));
  objc_msgSend(v15, "showSpinnerWithStatus:", v17);

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "itemFromDraft"));
  if (v18)
  {
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "itemFromDraft"));
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472;
    v43[2] = sub_10000CB88;
    v43[3] = &unk_1000E63A0;
    v46 = (int)v11;
    v21 = *(void **)(a1 + 40);
    v43[4] = *(_QWORD *)(a1 + 32);
    v44 = v21;
    v45 = *(id *)(a1 + 48);
    objc_msgSend(v19, "deleteDraftFromContentItem:completion:", v20, v43);

    v22 = v44;
LABEL_7:

    return;
  }
  v29 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
    sub_100098EE8((uint64_t)v11, v29, v30, v31, v32, v33, v34, v35);

  v37 = *(void **)(a1 + 32);
  v36 = *(void **)(a1 + 40);
  v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "preferredTeamForStubPreferringTeam:", 0));
  objc_msgSend(v37, "loadNewResponseForBugFormStub:forTeam:", v36, v38);

}

void sub_10000CB88(_QWORD *a1, uint64_t a2)
{
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;

  if (a2)
  {
    v3 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_100098F4C((uint64_t)a1, v3, v4, v5, v6, v7, v8, v9);

  }
  v10 = (void *)a1[4];
  v11 = (void *)a1[5];
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "preferredTeamForStubPreferringTeam:", a1[6]));
  objc_msgSend(v10, "loadNewResponseForBugFormStub:forTeam:", v11, v12);

}

void sub_10000CC10(_QWORD *a1, uint64_t a2)
{
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;

  if (a2)
  {
    v3 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_100098FB4((uint64_t)a1, v3, v4, v5, v6, v7, v8, v9);

  }
  v10 = (void *)a1[4];
  v11 = (void *)a1[5];
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "preferredTeamForStubPreferringTeam:", a1[6]));
  objc_msgSend(v10, "loadNewResponseForBugFormStub:forTeam:", v11, v12);

}

uint64_t sub_10000CC98(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  _DWORD v6[2];

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formResponse"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ID"));
    v6[0] = 67109120;
    v6[1] = objc_msgSend(v4, "intValue");
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "_changeToBugForm, deleting FR %d", (uint8_t *)v6, 8u);

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_10000CD80(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  _DWORD v6[2];

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formResponse"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ID"));
    v6[0] = 67109120;
    v6[1] = objc_msgSend(v4, "intValue");
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "_changeToBugForm, saving FR %d", (uint8_t *)v6, 8u);

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_10000D120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000D13C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_changeToBugFormStub:force:", *(_QWORD *)(a1 + 32), 1);

}

void sub_10000D2E0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10000D2FC(uint64_t a1)
{
  id *v1;
  void *v2;
  id *v3;
  id WeakRetained;
  void *v5;
  NSObject *v6;
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  id v11;
  id v12;
  uint8_t v13[16];

  v1 = (id *)(a1 + 32);
  v2 = *(void **)(a1 + 32);
  v3 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentTeam"));
  LODWORD(v2) = objc_msgSend(v2, "isEqual:", v5);

  if ((_DWORD)v2)
  {
    v6 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Selected the current team, not switching.", v13, 2u);
    }
  }
  else
  {
    v7 = *v1;
    v8 = objc_loadWeakRetained(v3);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "formStub"));
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "teamFormStubMatchingFromFormStub:", v9));

    if (!v6)
    {
      v10 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_10009908C(v3, v1, v10);

      v11 = objc_loadWeakRetained(v3);
      v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "formStub"));

    }
    v12 = objc_loadWeakRetained(v3);
    objc_msgSend(v12, "_changeToBugFormStub:withTeam:force:", v6, *v1, 1);

  }
}

void sub_10000DA34(uint64_t a1)
{
  id v1;
  id v2;
  __int128 v3;
  uint64_t v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id WeakRetained;
  __int128 v25;
  _QWORD v27[4];
  id v28;
  id v29;
  _QWORD v30[4];
  id v31;
  id v32;
  _QWORD v33[4];
  id v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t buf[4];
  void *v41;
  __int16 v42;
  unsigned int v43;
  _BYTE v44[128];

  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v37;
    *(_QWORD *)&v3 = 138543618;
    v25 = v3;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v37 != v4)
          objc_enumerationMutation(v1);
        v6 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * (_QWORD)v5);
        v7 = objc_claimAutoreleasedReturnValue(+[FBALog ded](FBALog, "ded", v25));
        if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
        {
          v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "publicLogDescription"));
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "formResponse"));
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "ID"));
          v11 = objc_msgSend(v10, "intValue");
          *(_DWORD *)buf = v25;
          v41 = v8;
          v42 = 1024;
          v43 = v11;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "tried to submit on non reachable device [%{public}@] FR [%i]", buf, 0x12u);

        }
        v5 = (char *)v5 + 1;
      }
      while (v2 != v5);
      v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v36, v44, 16);
    }
    while (v2);
  }

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", CFSTR("MISSING_REQ_FILES"), &stru_1000EA660, 0));
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v13, *(_QWORD *)(a1 + 48), 1));

  objc_initWeak((id *)buf, *(id *)(a1 + 40));
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1000EA660, 0));

  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_10000DF2C;
  v33[3] = &unk_1000E6440;
  v34 = *(id *)(a1 + 56);
  objc_copyWeak(&v35, (id *)buf);
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v16, 1, v33));
  objc_msgSend(v14, "addAction:", v17);

  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("SAVE_DRAFT"), &stru_1000EA660, 0));

  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_10000E074;
  v30[3] = &unk_1000E6440;
  v31 = *(id *)(a1 + 56);
  objc_copyWeak(&v32, (id *)buf);
  v20 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v19, 0, v30));
  objc_msgSend(v14, "addAction:", v20);

  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "localizedStringForKey:value:table:", CFSTR("SUBMIT_WO_FILES"), &stru_1000EA660, 0));

  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_10000E1C0;
  v27[3] = &unk_1000E6440;
  v28 = *(id *)(a1 + 56);
  objc_copyWeak(&v29, (id *)buf);
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v22, 0, v27));
  objc_msgSend(v14, "addAction:", v23);

  WeakRetained = objc_loadWeakRetained((id *)buf);
  objc_msgSend(WeakRetained, "presentViewController:animated:completion:", v14, 1, 0);

  objc_destroyWeak(&v29);
  objc_destroyWeak(&v32);

  objc_destroyWeak(&v35);
  objc_destroyWeak((id *)buf);

}

void sub_10000DEB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location)
{
  id *v39;
  id *v40;
  id *v41;

  objc_destroyWeak(v41);
  objc_destroyWeak(v40);
  objc_destroyWeak(v39);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000DF2C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id WeakRetained;
  void *v6;
  void *v7;
  unsigned int v8;
  id v9;
  os_activity_scope_state_s v10;
  uint8_t buf[4];
  unsigned int v12;

  v3 = a2;
  v10.opaque[0] = 0;
  v10.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(a1 + 32), &v10);
  v4 = objc_claimAutoreleasedReturnValue(+[FBALog ded](FBALog, "ded"));
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "formResponse"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ID"));
    v8 = objc_msgSend(v7, "intValue");
    *(_DWORD *)buf = 67109120;
    v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Tapped [Cancel] for missing devices for FR [%i]", buf, 8u);

  }
  v9 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v9, "updateSubmitButtonState");

  os_activity_scope_leave(&v10);
}

void sub_10000E050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_10000E074(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id WeakRetained;
  void *v6;
  void *v7;
  unsigned int v8;
  id v9;
  os_activity_scope_state_s v10;
  uint8_t buf[4];
  unsigned int v12;

  v3 = a2;
  v10.opaque[0] = 0;
  v10.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(a1 + 32), &v10);
  v4 = objc_claimAutoreleasedReturnValue(+[FBALog ded](FBALog, "ded"));
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "formResponse"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ID"));
    v8 = objc_msgSend(v7, "intValue");
    *(_DWORD *)buf = 67109120;
    v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Tapped [Save] for missing devices for FR [%i]", buf, 8u);

  }
  v9 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v9, "closeWithCompletion:", 0);

  os_activity_scope_leave(&v10);
}

void sub_10000E19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_10000E1C0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id WeakRetained;
  void *v6;
  void *v7;
  unsigned int v8;
  id *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  os_activity_scope_state_s v19;
  uint8_t buf[4];
  unsigned int v21;

  v3 = a2;
  v19.opaque[0] = 0;
  v19.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(a1 + 32), &v19);
  v4 = objc_claimAutoreleasedReturnValue(+[FBALog ded](FBALog, "ded"));
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "formResponse"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ID"));
    v8 = objc_msgSend(v7, "intValue");
    *(_DWORD *)buf = 67109120;
    v21 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Tapped [Without Files] for FR [%i]", buf, 8u);

  }
  v9 = (id *)(a1 + 40);
  v10 = objc_loadWeakRetained(v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "formResponse"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "bugForm"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "questionWithRole:", FBKQuestionRoleRequiredFileZone));

  v14 = objc_loadWeakRetained(v9);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "formResponse"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "ID"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "answerForQuestionID:", v16));

  objc_msgSend(v17, "setOptedOut:", 1);
  v18 = objc_loadWeakRetained(v9);
  objc_msgSend(v18, "checkLegalAndSubmit");

  os_activity_scope_leave(&v19);
}

void sub_10000E394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_10000E3BC(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10000E418;
  block[3] = &unk_1000E61B8;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10000E418(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "devicesController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formResponse"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "answersDictionary"));
  objc_msgSend(v2, "gatherAllMissingRequirementsWithAnswers:", v4);

  return objc_msgSend(*(id *)(a1 + 32), "checkLegalAndSubmit");
}

void sub_10000E484(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _DWORD v11[2];

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formResponse"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ID"));
    v11[0] = 67109120;
    v11[1] = objc_msgSend(v4, "intValue");
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Presubmission: chose to submit without files for FR [%d]", (uint8_t *)v11, 8u);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formResponse"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bugForm"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "questionWithRole:", FBKQuestionRoleRequiredFileZone));

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formResponse"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "ID"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "answerForQuestionID:", v9));

  objc_msgSend(v10, "setOptedOut:", 1);
  objc_msgSend(*(id *)(a1 + 32), "checkLegalAndSubmit");

}

void sub_10000E5F8(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10000E654;
  block[3] = &unk_1000E61B8;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10000E654(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  v4 = (id)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", 0, (char *)objc_msgSend(v2, "numberOfSections") - 1));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v3, "scrollToRowAtIndexPath:atScrollPosition:animated:", v4, 1, 1);

  objc_msgSend(*(id *)(a1 + 32), "updateSubmitButtonState");
}

id sub_10000E950(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[iFBAConstants sharedUserDefaults](iFBAConstants, "sharedUserDefaults"));
  objc_msgSend(v2, "setBool:forKey:", 0, FBKSuppressPrivacyNoticePreferencesKey);

  return objc_msgSend(*(id *)(a1 + 32), "updateSubmitButtonState");
}

id sub_10000E99C(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[iFBAConstants sharedUserDefaults](iFBAConstants, "sharedUserDefaults"));
  objc_msgSend(v2, "setBool:forKey:", 1, FBKSuppressPrivacyNoticePreferencesKey);

  return _objc_msgSend(*(id *)(a1 + 32), "submit");
}

void sub_10000ED20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

id sub_10000ED44(uint64_t a1)
{
  NSObject *v2;
  id result;

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_1000991EC(a1);

  result = objc_msgSend(*(id *)(a1 + 40), "endBackgroundTask:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = UIBackgroundTaskInvalid;
  return result;
}

void sub_10000EDBC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  SystemSoundID v16;
  __CFRunLoop *Main;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  unsigned int v29;
  dispatch_time_t v30;
  uint64_t v31;
  id v32;
  _QWORD v33[4];
  id v34;
  uint64_t v35;
  id v36;
  unsigned int v37;
  _QWORD v38[5];
  id v39;
  id buf;

  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "endBackgroundTask:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = UIBackgroundTaskInvalid;
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("GENERIC_SUBMIT_ERROR_TITLE"), &stru_1000EA660, 0));

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("GENERIC_SUBMIT_ERROR_MESSAGE"), &stru_1000EA660, 0));

    v8 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10009926C(a1);

    v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v5, v7, 1));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, 0));
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v38[2] = sub_10000F298;
    v38[3] = &unk_1000E64B8;
    v38[4] = *(_QWORD *)(a1 + 40);
    v39 = v3;
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v11, 0, v38));
    objc_msgSend(v9, "addAction:", v12);

    objc_msgSend(*(id *)(a1 + 40), "presentViewController:animated:completion:", v9, 1, 0);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "_stopSpinner");
    v13 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "formResponse"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "ID"));
      LODWORD(buf) = 67109120;
      HIDWORD(buf) = objc_msgSend(v15, "intValue");
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Submission callback for FR %d: success", (uint8_t *)&buf, 8u);

    }
    v16 = *(_DWORD *)(a1 + 64);
    if (v16)
    {
      Main = CFRunLoopGetMain();
      AudioServicesAddSystemSoundCompletion(v16, Main, 0, (AudioServicesSystemSoundCompletionProc)sub_1000080FC, 0);
      AudioServicesPlaySystemSound(*(_DWORD *)(a1 + 64));
    }
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
    objc_msgSend(v18, "resetViewControllers");

    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "localizedStringForKey:value:table:", CFSTR("THANK_YOU"), &stru_1000EA660, 0));
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "localizedStringForKey:value:table:", CFSTR("THANK_YOU_MESSAGE"), &stru_1000EA660, 0));
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v20, v22, 1));

    v24 = *(void **)(a1 + 48);
    if (v24 && objc_msgSend(v24, "hasAttachmentsCollecting"))
    {
      v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "localizedStringForKey:value:table:", CFSTR("THANK_YOU_SUBMITTING_MESSAGE"), &stru_1000EA660, 0));
      objc_msgSend(v23, "setMessage:", v26);

    }
    objc_msgSend(*(id *)(a1 + 40), "presentViewController:animated:completion:", v23, 1, 0);
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "formResponse"));
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "ID"));
    v29 = objc_msgSend(v28, "intValue");

    objc_initWeak(&buf, *(id *)(a1 + 40));
    v30 = dispatch_time(0, 3000000000);
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_10000F2A8;
    v33[3] = &unk_1000E6508;
    v31 = *(_QWORD *)(a1 + 40);
    v34 = v23;
    v35 = v31;
    v32 = v23;
    objc_copyWeak(&v36, &buf);
    v37 = v29;
    dispatch_after(v30, (dispatch_queue_t)&_dispatch_main_q, v33);
    objc_destroyWeak(&v36);

    objc_destroyWeak(&buf);
  }

}

id sub_10000F298(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "closeWithError:completion:", *(_QWORD *)(a1 + 40), 0);
}

void sub_10000F2A8(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;
  int v5;

  objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
  v2 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10000F35C;
  v3[3] = &unk_1000E64E0;
  objc_copyWeak(&v4, (id *)(a1 + 48));
  v5 = *(_DWORD *)(a1 + 56);
  objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v3);
  objc_destroyWeak(&v4);
}

void sub_10000F348(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10000F35C(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  NSObject *v4;
  int v5;
  id v6;
  void *v7;
  unsigned int v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  _DWORD v15[2];

  v2 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setDevicesController:", 0);

  v4 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_DWORD *)(a1 + 40);
    v15[0] = 67109120;
    v15[1] = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "did dismiss feedback draft editor for form %d", (uint8_t *)v15, 8u);
  }

  v6 = objc_loadWeakRetained(v2);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "launchAction"));
  v8 = objc_msgSend(v7, "isCaptive");

  if (v8)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
    v10 = objc_loadWeakRetained(v2);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "formResponse"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "contentItem"));
    v13 = objc_loadWeakRetained(v2);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "launchAction"));
    objc_msgSend(v9, "showModalFeedbackControllerForContentItem:launchAction:", v12, v14);

  }
}

void sub_10000FC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000FC40(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "updateCachedCandidateStubsCount");

}

void sub_10000FDF8(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  void *v9;
  uint8_t v10[16];
  uint8_t buf[16];

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Resigning active: Saving form.", buf, 2u);
  }

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstResponder"));
  if (v3)
  {
    v4 = objc_opt_class(UIView);
    if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0)
    {
      v5 = v3;
      v6 = objc_msgSend(v5, "superviewWithClass:", objc_opt_class(FBAQuestionAnswerCell));
      v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      objc_msgSend(v7, "saveAnswer");
      v8 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Found and saved in-progress answer.", v10, 2u);
      }

    }
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
  objc_msgSend(v9, "saveDraftIfNeeded");

}

id sub_1000102A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "closeDraftAndDelete:withError:completion:", 0, 0, 0);
}

void sub_1000102BC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  _QWORD *v9;
  _QWORD v10[4];
  char v11;
  uint8_t buf[16];

  v3 = a2;
  if (!*(_BYTE *)(a1 + 40))
  {
    v8 = *(void **)(a1 + 32);
    v9 = 0;
LABEL_8:
    objc_msgSend(v8, "closeDraftAndDelete:withError:completion:", 1, 0, v9);
    goto LABEL_9;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSProcessInfo processInfo](NSProcessInfo, "processInfo"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "environment"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("FBK_UNIT_TEST")));

  if (!v6)
  {
    v8 = *(void **)(a1 + 32);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1000103F4;
    v10[3] = &unk_1000E6550;
    v11 = *(_BYTE *)(a1 + 41);
    v9 = v10;
    goto LABEL_8;
  }
  v7 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Unit test in progress, cannot log out.", buf, 2u);
  }

LABEL_9:
}

id sub_1000103F4(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Draft deleted, exiting restricted mode.", v4, 2u);
  }

  return +[iFBKUtils exitCaptiveModeRemovingFromHomeScreen:](iFBKUtils, "exitCaptiveModeRemovingFromHomeScreen:", *(unsigned __int8 *)(a1 + 32));
}

void sub_100011418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10001143C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_resizeAndScrollTableAfterTextChangeInTextView:", *(_QWORD *)(a1 + 40));
}

void sub_100011448(uint64_t a1)
{
  void *v1;
  id *v2;
  void *v3;
  id v4;
  id WeakRetained;

  v1 = *(void **)(a1 + 32);
  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tableView"));
  v4 = objc_loadWeakRetained(v2);
  objc_msgSend(v4, "keyboardHeight");
  objc_msgSend(v1, "scrollTableToAvoidKeyboardInTableView:keyboardHeight:withPadding:", v3);

}

void sub_100011BA0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  unsigned int v7;
  void *v8;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "endEditing:", 1);

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "topViewController"));
  v4 = v3;
  if (v3 == *(void **)(a1 + 32))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "navigationItem"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "leftBarButtonItem"));
    v7 = objc_msgSend(v6, "isEnabled");

    if (!v7)
      return;
    v8 = *(void **)(a1 + 32);
    v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "navigationItem"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "leftBarButtonItem"));
    objc_msgSend(v8, "dismiss:", v4);
  }

}

void sub_100012254(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_10001227C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10001228C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_1000122B0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

id sub_1000129F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "intersectsIndexesInRange:");
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 40), "removeAttribute:range:", NSBackgroundColorAttributeName, a3, a4);
  return result;
}

id sub_100012CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "intersectsIndexesInRange:");
  if ((_DWORD)result)
    return objc_msgSend(*(id *)(a1 + 40), "removeAttribute:range:", NSBackgroundColorAttributeName, a3, a4);
  return result;
}

void sub_1000134DC(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  int v5;
  void *v6;

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "shortDescription"));
    v5 = 138543362;
    v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Confirmed closing Feedback [%{public}@].", (uint8_t *)&v5, 0xCu);

  }
  objc_msgSend(*(id *)(a1 + 40), "closeFeedbackWithItem:", *(_QWORD *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "presentedViewController"));

  if (v4)
    objc_msgSend(*(id *)(a1 + 40), "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_1000135D0(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  int v5;
  void *v6;

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "shortDescription"));
    v5 = 138543362;
    v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Cancelled closing Feedback [%{public}@].", (uint8_t *)&v5, 0xCu);

  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "presentedViewController"));

  if (v4)
    objc_msgSend(*(id *)(a1 + 40), "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_1000136BC(uint64_t a1)
{
  id v2;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "tableView"));
    objc_msgSend(v2, "deselectRowAtIndexPath:animated:", *(_QWORD *)(a1 + 32), 1);

  }
}

void sub_100013808(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  id v14;

  v3 = a2;
  v4 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_INFO);
  if (v3)
  {
    if (v5)
    {
      v13 = 138543362;
      v14 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Closed Feedback failed with error [%{public}@].", (uint8_t *)&v13, 0xCu);
    }

    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "userInfo"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject objectForKeyedSubscript:](v4, "objectForKeyedSubscript:", NSLocalizedDescriptionKey));
    v7 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject objectForKeyedSubscript:](v4, "objectForKeyedSubscript:", NSLocalizedRecoverySuggestionErrorKey));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v6, v7, 1));

    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, 0));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v10, 1, 0));
    objc_msgSend(v8, "addAction:", v11);

    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v8, 1, 0);
  }
  else if (v5)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "shortDescription"));
    v13 = 138543362;
    v14 = v12;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Closed Feedback [%{public}@].", (uint8_t *)&v13, 0xCu);

  }
}

void sub_1000142F8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_10001456C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  _QWORD v12[3];

  v11[0] = NSLinkAttributeName;
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "URL"));
  v12[0] = v4;
  v11[1] = NSForegroundColorAttributeName;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor blueColor](UIColor, "blueColor"));
  v11[2] = NSUnderlineStyleAttributeName;
  v12[1] = v5;
  v12[2] = &off_1000EE868;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v12, v11, 3));

  objc_msgSend(*(id *)(a1 + 32), "beginEditing");
  v7 = *(void **)(a1 + 32);
  v8 = objc_msgSend(v3, "range");
  v10 = v9;

  objc_msgSend(v7, "addAttributes:range:", v6, v8, v10);
  objc_msgSend(*(id *)(a1 + 32), "endEditing");

}

void sub_100015214(uint64_t a1)
{
  int v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  void *v9;
  void *v10;
  id v11;

  v2 = *(unsigned __int8 *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fileSizeLabel"));
  v4 = v3;
  if (v2)
  {
    objc_msgSend(v3, "setAlpha:", 0.0);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fileNameLabel"));
    objc_msgSend(v5, "setAlpha:", 0.0);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "icon"));
    objc_msgSend(v6, "setAlpha:", 0.0);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "debugLabel"));
    v8 = 1.0;
  }
  else
  {
    objc_msgSend(v3, "setAlpha:", 1.0);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fileNameLabel"));
    objc_msgSend(v9, "setAlpha:", 1.0);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "icon"));
    objc_msgSend(v10, "setAlpha:", 1.0);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "debugLabel"));
    v8 = 0.0;
  }
  v11 = v7;
  objc_msgSend(v7, "setAlpha:", v8);

}

void sub_100015880(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dedSharingDevice"));
  objc_msgSend(v1, "didPinPairWithDevice:", v2);

}

void sub_100017048(id a1)
{
  FBANetworkMonitor *v1;
  void *v2;

  v1 = objc_alloc_init(FBANetworkMonitor);
  v2 = (void *)qword_100117FA0;
  qword_100117FA0 = (uint64_t)v1;

  _objc_msgSend((id)qword_100117FA0, "updateCache");
}

void sub_1000172E0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "login");
  v2 = (void *)qword_100117FB0;
  qword_100117FB0 = (uint64_t)v1;

}

void sub_1000177D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000177FC(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  id v5;
  id WeakRetained;
  id v7;
  NSObject *v8;
  void *v9;
  id v10;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "loginManager"));
    v5 = objc_msgSend(v4, "loginState");

    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v10 = WeakRetained;
    if (v5 == (id)1)
    {
      objc_msgSend(WeakRetained, "dismissViewControllerAnimated:completion:", 1, &stru_1000E66E8);
    }
    else
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "signInViewController"));
      objc_msgSend(v10, "presentViewController:animated:completion:", v9, 1, &stru_1000E6708);

    }
  }
  else
  {
    v7 = sub_100017978();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_100099440(v8);

  }
}

void sub_1000178F0(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("FBADidDismissLegalAgreementNotification"), 0);

}

void sub_100017934(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("FBADidDismissLegalAgreementNotification"), 0);

}

id sub_100017978()
{
  if (qword_100117FC8 != -1)
    dispatch_once(&qword_100117FC8, &stru_1000E6778);
  return (id)qword_100117FC0;
}

uint64_t sub_100017E60(uint64_t a1, int a2, char a3)
{
  void *v4;
  __CFString **v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  if (a2)
  {
    v4 = *(void **)(a1 + 32);
    v5 = &off_1000E7918;
LABEL_8:
    objc_msgSend(v4, "performSegueWithIdentifier:sender:", *v5, v4);
    goto LABEL_9;
  }
  if ((a3 & 2) != 0)
  {
    v4 = *(void **)(a1 + 32);
    v5 = &off_1000E7920;
    goto LABEL_8;
  }
  if ((a3 & 4) != 0)
  {
    v4 = *(void **)(a1 + 32);
    v5 = &off_1000E7928;
    goto LABEL_8;
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v7 = FBKCommonStrings;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("GENERIC_LOGIN_FAILURE_TITLE"), &stru_1000EA660, FBKCommonStrings));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("GENERIC_LOGIN_FAILURE_MESSAGE"), &stru_1000EA660, v7));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v8, v10, 1));

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, 0));
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v13, 0, 0));
  objc_msgSend(v11, "addAction:", v14);

  objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v11, 1, 0);
LABEL_9:
  objc_msgSend(*(id *)(a1 + 32), "showLogInUI");
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_100018560(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "login-vc");
  v2 = (void *)qword_100117FC0;
  qword_100117FC0 = (uint64_t)v1;

}

id sub_100018AFC()
{
  if (qword_100117FE8 != -1)
    dispatch_once(&qword_100117FE8, &stru_1000E67D8);
  return (id)qword_100117FE0;
}

id sub_1000197BC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "fetchNextBatch");
}

void sub_100019934(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSDateFormatter);
  v2 = (void *)qword_100117FD0;
  qword_100117FD0 = (uint64_t)v1;

  objc_msgSend((id)qword_100117FD0, "setDateFormat:", CFSTR("YYYY-MM-dd HH:mm:ss'.'SSSSSSXX"));
}

void sub_100019974(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "log-view");
  v2 = (void *)qword_100117FE0;
  qword_100117FE0 = (uint64_t)v1;

}

void sub_1000199A4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_1000199C4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_10001A10C(id a1)
{
  objc_class *v1;
  NSString *v2;
  uint64_t v3;
  void *v4;

  v1 = (objc_class *)objc_opt_class(FBADevicePairingCell);
  v2 = NSStringFromClass(v1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)qword_100117FF8;
  qword_100117FF8 = v3;

}

void sub_10001B350(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 128));
  _Unwind_Resume(a1);
}

void sub_10001B39C(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "hideSpinner");

  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "updateBarButton");

  v4 = objc_loadWeakRetained(v1);
  objc_msgSend(v4, "updateHeader");

  v5 = objc_loadWeakRetained(v1);
  objc_msgSend(v5, "updateContent");

  v7 = objc_loadWeakRetained(v1);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "tableView"));
  objc_msgSend(v6, "reloadData");

}

void sub_10001B434(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v5[4];
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "feedback"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10001B4EC;
  v5[3] = &unk_1000E6820;
  v6 = *(id *)(a1 + 40);
  objc_msgSend(v2, "fetchFeedbackStatusForFeedback:completion:", v4, v5);

}

uint64_t sub_10001B4EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10001B4F8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v5[5];
  id v6;
  id v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10001B5E8;
  v5[3] = &unk_1000E6898;
  objc_copyWeak(&v8, (id *)(a1 + 56));
  v4 = *(void **)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v4;
  v7 = *(id *)(a1 + 48);
  objc_msgSend(v2, "refreshFormResponseStubFromContentItem:completion:", v3, v5);

  objc_destroyWeak(&v8);
}

void sub_10001B5D4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10001B5E8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  unsigned int v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id WeakRetained;
  uint64_t v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[16];

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (!v6)
  {
LABEL_9:
    if (objc_msgSend(*(id *)(a1 + 32), "shouldShowStatus"))
      v20 = *(_QWORD *)(a1 + 40);
    else
      v20 = *(_QWORD *)(a1 + 48);
    (*(void (**)(void))(v20 + 16))();
    goto LABEL_13;
  }
  v8 = objc_msgSend(v6, "isFBAErrorWithCode:", -1010);
  v9 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  v10 = v9;
  if (!v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_100099A84(a1, v10);

    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_LOAD_ERROR_TITLE"), &stru_1000EA660, 0));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_LOAD_ERROR_MESSAGE"), &stru_1000EA660, 0));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v12, v14, 1));

    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, FBKCommonStrings));
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_10001B880;
    v21[3] = &unk_1000E6870;
    objc_copyWeak(&v22, (id *)(a1 + 56));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v17, 1, v21));
    objc_msgSend(v15, "addAction:", v18);

    WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    objc_msgSend(WeakRetained, "presentViewController:animated:completion:", v15, 1, 0);

    objc_destroyWeak(&v22);
    goto LABEL_9;
  }
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "FormResponseStub fetched has been deleted. Ignoring", buf, 2u);
  }

LABEL_13:
}

void sub_10001B868(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10001B880(uint64_t a1, void *a2)
{
  id v3;
  id *v4;
  id WeakRetained;
  _QWORD v6[4];
  id v7;

  v3 = a2;
  v4 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10001B938;
  v6[3] = &unk_1000E6328;
  objc_copyWeak(&v7, v4);
  objc_msgSend(WeakRetained, "dismissViewControllerAnimated:completion:", 1, v6);

  objc_destroyWeak(&v7);
}

void sub_10001B924(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10001B938(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "splitViewController"));

  objc_msgSend(v2, "dismissSecondaryOrShowEmptyViewControllerAnimated:", 1);
}

void sub_10001B984(uint64_t a1, void *a2)
{
  void *v3;
  unsigned int v4;
  id WeakRetained;
  void *v6;
  void *v7;
  void *v8;
  unsigned int v9;
  id v10;

  v10 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "deletedObjects"));
  v4 = objc_msgSend(v3, "containsObject:", *(_QWORD *)(a1 + 32));

  if (!v4)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "updatedObjects"));
    if (objc_msgSend(v7, "containsObject:", *(_QWORD *)(a1 + 32)))
    {

    }
    else
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "refreshedObjects"));
      v9 = objc_msgSend(v8, "containsObject:", *(_QWORD *)(a1 + 32));

      if (!v9)
        goto LABEL_7;
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    goto LABEL_7;
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "splitViewController"));

  objc_msgSend(v6, "dismissSecondaryOrShowEmptyViewControllerAnimated:", 1);
LABEL_7:

}

void sub_10001BDB4(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSDateFormatter);
  v2 = (void *)qword_100118000;
  qword_100118000 = (uint64_t)v1;

  objc_msgSend((id)qword_100118000, "setDateStyle:", 3);
  _objc_msgSend((id)qword_100118000, "setTimeStyle:", 2);
}

void sub_10001C11C(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
  objc_msgSend(v3, "beginFeedbackWithDraft:", v2);

}

id sub_10001C178(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "deleteDraft:completion:", *(_QWORD *)(a1 + 32), 0);
}

uint64_t sub_10001C454(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t result;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
  objc_msgSend(v2, "deleteDraftFromContentItem:dismissViewOnCompletion:", v3, 0);

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_10001C4D0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, *(_QWORD *)(a1 + 40));
}

void sub_10001C8FC(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  uint8_t v4[16];

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "performing batch updates during size change", v4, 2u);
  }

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v3, "performBatchUpdates:completion:", &stru_1000E6950, &stru_1000E6990);

}

void sub_10001D0A8(id a1, BOOL a2)
{
  _BOOL4 v2;
  NSObject *v3;
  _DWORD v4[2];

  v2 = a2;
  v3 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4[0] = 67109120;
    v4[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "background login on launch, success ? [%d]", (uint8_t *)v4, 8u);
  }

}

void sub_10001D27C(uint64_t a1, uint64_t a2)
{
  id v3;
  NSObject *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  void *v11;
  void *v12;
  unsigned int v13;
  NSObject *v14;
  int v15;
  id v16;

  if (a2 == 1)
  {
    v3 = sub_10001D448();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = objc_msgSend(*(id *)(a1 + 32), "biometricsState");
      v15 = 134217984;
      v16 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Application is active and logged in. Biometric state [%lu]", (uint8_t *)&v15, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 32), "_startBiometricsTimer");
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "currentUser"));
    if (v7)
    {
      v8 = (void *)v7;
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
      v10 = objc_msgSend(v9, "hasOpenDraft");

      if ((v10 & 1) == 0)
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
        objc_msgSend(v11, "reloadApp");

        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
        v13 = objc_msgSend(v12, "BOOLForKey:", FBKPushNotificationsEnabled);

        if (!v13)
          return;
        v14 = objc_claimAutoreleasedReturnValue(+[FBANotificationManager sharedManager](_TtC18Feedback_Assistant22FBANotificationManager, "sharedManager"));
        -[NSObject requestPermission](v14, "requestPermission");
        goto LABEL_11;
      }
    }
    else
    {

    }
    v14 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      LOWORD(v15) = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Application became active, but there's no user or a modal draft/feedback is presented. Will not reload.", (uint8_t *)&v15, 2u);
    }
LABEL_11:

  }
}

id sub_10001D448()
{
  if (qword_100118028 != -1)
    dispatch_once(&qword_100118028, &stru_1000E6C48);
  return (id)qword_100118020;
}

void sub_10001DD50(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[4];
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint8_t buf[16];

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Will authenticate with Launch Action", buf, 2u);
  }

  v3 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10001DE38;
  v7[3] = &unk_1000E6A50;
  v8 = v3;
  v4 = *(id *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(void **)(a1 + 56);
  v9 = v4;
  v10 = v5;
  v11 = v6;
  objc_msgSend(v8, "logOutIfNeededAndRun:", v7);

}

void sub_10001DE38(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  _QWORD v4[5];
  id v5;
  id v6;
  id v7;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10001DEE8;
  v4[3] = &unk_1000E6A28;
  v4[4] = *(_QWORD *)(a1 + 48);
  v5 = v2;
  v6 = *(id *)(a1 + 40);
  v7 = *(id *)(a1 + 56);
  objc_msgSend(v5, "interactiveStartupWithLaunchAction:completion:", v3, v4);

}

uint64_t sub_10001DEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "handleInteractiveLoginResultWithLoginManager:pendingUI:startupFailures:skipBiometrics:", *(_QWORD *)(a1 + 40), a3, a2, 1);
  objc_msgSend(*(id *)(a1 + 32), "updateHomeScreenVisibilityFromLaunchAction:", *(_QWORD *)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
  objc_msgSend(v4, "respondToLaunchAction:", *(_QWORD *)(a1 + 48));

  result = *(_QWORD *)(a1 + 56);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

void sub_10001DF64(uint64_t a1, uint64_t a2)
{
  NSObject *v3;
  void *v4;
  uint64_t v5;
  _QWORD block[5];
  id v7;
  id v8;

  if (a2 == 1)
  {
    v3 = +[FBALog newURLActionActivity](FBALog, "newURLActionActivity");
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001E02C;
    block[3] = &unk_1000E6A78;
    v4 = *(void **)(a1 + 40);
    block[4] = *(_QWORD *)(a1 + 32);
    v7 = v4;
    v8 = *(id *)(a1 + 48);
    os_activity_apply(v3, block);

  }
  else
  {
    v5 = *(_QWORD *)(a1 + 48);
    if (v5)
      (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
  }
}

uint64_t sub_10001E02C(uint64_t a1)
{
  void *v2;
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "updateHomeScreenVisibilityFromLaunchAction:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
  objc_msgSend(v2, "respondToLaunchAction:", *(_QWORD *)(a1 + 40));

  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

void sub_10001E2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001E2D4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10001E2E4(uint64_t a1)
{

}

id sub_10001E2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "handleInteractiveLoginResultWithLoginManager:pendingUI:startupFailures:", *(_QWORD *)(a1 + 32), a3, a2);
}

void sub_10001E9F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10001EB24(uint64_t a1)
{
  id *v2;
  id v3;
  NSObject *v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  id v10;
  NSObject *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  _BOOL4 v17;
  int v18;
  id v19;
  __int16 v20;
  _BOOL4 v21;

  v2 = (id *)(a1 + 32);
  if (objc_msgSend(*(id *)(a1 + 32), "biometricsState") == (id)13)
  {
    v3 = sub_10001D448();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
      sub_100099C84(v2, v4);
    goto LABEL_20;
  }
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "lastUsedLAContext"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v6 = objc_msgSend(v5, "applicationState");

  v7 = sub_10001D448();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = objc_msgSend(*v2, "biometricsState");
    v18 = 134218240;
    v19 = v9;
    v20 = 1024;
    v21 = v6 == 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Biometrics evaluation timer fired. Current state [%lu], Active? [%i]", (uint8_t *)&v18, 0x12u);
  }

  if (!v6 && objc_msgSend(*(id *)(a1 + 40), "isEqual:", v4))
  {
    if (objc_msgSend(*v2, "biometricsState") == (id)3)
    {
      v10 = sub_10001D448();
      v11 = objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        sub_100099D3C();

      v12 = *v2;
      v13 = 4;
LABEL_16:
      objc_msgSend(v12, "setBiometricsState:", v13);
      goto LABEL_20;
    }
    v14 = objc_msgSend(*v2, "biometricsState");
    v15 = sub_10001D448();
    v16 = objc_claimAutoreleasedReturnValue(v15);
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_ERROR);
    if (v14 == (id)9)
    {
      if (v17)
        sub_100099D68();

      v12 = *v2;
      v13 = 10;
      goto LABEL_16;
    }
    if (v17)
      sub_100099D94(v2);

  }
LABEL_20:

}

void sub_10001F2B0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  uint64_t v13;
  id v14;
  id v15;

  v5 = a2;
  v6 = a3;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10001F370;
  v11[3] = &unk_1000E6468;
  v7 = *(id *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v12 = v7;
  v13 = v8;
  v14 = v5;
  v15 = v6;
  v9 = v6;
  v10 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);

}

void sub_10001F370(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  NSObject *activity;
  _QWORD block[4];
  id v7;
  uint64_t v8;
  id v9;
  id v10;

  activity = _os_activity_create((void *)&_mh_execute_header, "Biometric callback", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10001F430;
  block[3] = &unk_1000E6468;
  v2 = *(id *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(void **)(a1 + 48);
  v7 = v2;
  v8 = v3;
  v9 = v4;
  v10 = *(id *)(a1 + 56);
  os_activity_apply(activity, block);

}

void sub_10001F430(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  void *v16;
  unsigned int v17;
  void *v18;
  id v19;
  uint8_t v20[16];
  uint8_t v21[16];
  uint8_t buf[16];

  v2 = sub_10001D448();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Biometrics evaluation callback", buf, 2u);
  }

  v4 = sub_10001D448();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    sub_100099E34(a1, v5);

  v6 = *(void **)(a1 + 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "lastUsedLAContext"));
  LOBYTE(v6) = objc_msgSend(v6, "isEqual:", v7);

  if ((v6 & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 40), "setBiometricsState:", 6);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    v9 = objc_msgSend(v8, "applicationState");

    if (v9 == (id)2)
    {
      v10 = sub_10001D448();
      v11 = objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Biometrics evaluation completed in background", v20, 2u);
      }

      v12 = *(void **)(a1 + 40);
      v13 = 7;
    }
    else
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", &off_1000EE8E0));
      v17 = objc_msgSend(v16, "BOOLValue");

      if (v17)
      {
        v12 = *(void **)(a1 + 40);
        v13 = 13;
      }
      else
      {
        v18 = *(void **)(a1 + 56);
        if (v18)
        {
          if (objc_msgSend(v18, "code") == (id)-2)
          {
            v12 = *(void **)(a1 + 40);
            v13 = 8;
          }
          else
          {
            v19 = objc_msgSend(*(id *)(a1 + 56), "code");
            v12 = *(void **)(a1 + 40);
            if (v19 == (id)-4)
              v13 = 9;
            else
              v13 = 11;
          }
        }
        else
        {
          v12 = *(void **)(a1 + 40);
          v13 = 12;
        }
      }
    }
    objc_msgSend(v12, "setBiometricsState:", v13);
  }
  else
  {
    v14 = sub_10001D448();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Biometrics handler context does not match last used context. Ignoring result", v21, 2u);
    }

  }
}

void sub_10001FB2C(id a1, NSError *a2)
{
  NSError *v2;
  NSObject *v3;

  v2 = a2;
  v3 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_100099FC4(v2);

}

uint64_t sub_10001FB84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;

  if (objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", FBKPushItemTypeAnnouncement))
  {
    v2 = *(_QWORD *)(a1 + 40);
    v3 = objc_opt_class(iFBAAnnouncementViewController);
    if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0)
      v4 = *(id *)(a1 + 40);
    else
      v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "instantiateViewControllerWithIdentifier:", CFSTR("FBAAnnouncementViewController")));
    v6 = v4;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "api"));
    v8 = *(_QWORD *)(a1 + 64);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10001FCF8;
    v11[3] = &unk_1000E6B80;
    v12 = v6;
    v13 = *(id *)(a1 + 40);
    v14 = *(id *)(a1 + 72);
    v9 = *(_QWORD *)(a1 + 80);
    v5 = v6;
    objc_msgSend(v7, "updateAnnouncementWithID:success:error:", v8, v11, v9);

    goto LABEL_8;
  }
  if (objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", FBKPushItemTypeFollowup))
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "loginManager"));
    objc_msgSend(v5, "runAfterLogin:", &stru_1000E6BC0);
LABEL_8:

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 88) + 16))();
}

void sub_10001FCF8(id *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSOperationQueue mainQueue](NSOperationQueue, "mainQueue"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10001FDCC;
  v6[3] = &unk_1000E6468;
  v7 = a1[4];
  v8 = v3;
  v9 = a1[5];
  v10 = a1[6];
  v5 = v3;
  objc_msgSend(v4, "addOperationWithBlock:", v6);

}

void sub_10001FDCC(uint64_t a1)
{
  void *v2;
  dispatch_time_t v3;
  _QWORD v4[4];
  id v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "contentItem"));
  objc_msgSend(*(id *)(a1 + 32), "setContentItem:", v2);

  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a1 + 48))
  {
    objc_msgSend(*(id *)(a1 + 56), "resetViewControllers:", 1);
    v3 = dispatch_time(0, 1000000000);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10001FEA8;
    v4[3] = &unk_1000E6378;
    v5 = *(id *)(a1 + 56);
    v6 = *(id *)(a1 + 32);
    dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, v4);

  }
}

void sub_10001FEA8(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = objc_msgSend(objc_alloc((Class)UINavigationController), "initWithRootViewController:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v1, "showDetailViewController:sender:", v2, 0);

}

void sub_10001FEFC(id a1, unint64_t a2)
{
  NSObject *v2;

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_10009A040();

}

void sub_10001FF94(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  NSObject *v14;
  void *v15;
  uint8_t buf;
  char v17[15];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "infoDictionary"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", UISupportedInterfaceOrientationsKey));

  if (v3)
  {
    v4 = objc_opt_class(NSArray);
    if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0)
    {
      v20 = 0u;
      v21 = 0u;
      v18 = 0u;
      v19 = 0u;
      v15 = v3;
      v5 = v3;
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      if (!v6)
        goto LABEL_23;
      v7 = v6;
      v8 = *(_QWORD *)v19;
      while (1)
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v19 != v8)
            objc_enumerationMutation(v5);
          v10 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)v9);
          if (objc_msgSend(v10, "isEqualToString:", CFSTR("UIInterfaceOrientationPortrait"), v15))
          {
            v11 = qword_100118010 | 2;
LABEL_16:
            qword_100118010 = v11;
            goto LABEL_17;
          }
          if (objc_msgSend(v10, "isEqualToString:", CFSTR("UIInterfaceOrientationPortraitUpsideDown")))
          {
            v11 = qword_100118010 | 4;
            goto LABEL_16;
          }
          if (objc_msgSend(v10, "isEqualToString:", CFSTR("UIInterfaceOrientationLandscapeLeft")))
          {
            v11 = qword_100118010 | 0x10;
            goto LABEL_16;
          }
          if (objc_msgSend(v10, "isEqualToString:", CFSTR("UIInterfaceOrientationLandscapeRight")))
          {
            v11 = qword_100118010 | 8;
            goto LABEL_16;
          }
          v12 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
            sub_10009A098(&buf, v17, v12);

LABEL_17:
          v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        v13 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
        v7 = v13;
        if (!v13)
        {
LABEL_23:

          v3 = v15;
          goto LABEL_27;
        }
      }
    }
  }
  v14 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    sub_10009A06C();

  qword_100118010 = 30;
LABEL_27:

}

void sub_1000203B0(id a1, BOOL a2)
{
  _BOOL4 v2;
  NSObject *v3;
  _DWORD v4[2];

  v2 = a2;
  v3 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4[0] = 67109120;
    v4[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "tried to login in background, success ? %d", (uint8_t *)v4, 8u);
  }

}

void sub_100020734(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "bio");
  v2 = (void *)qword_100118020;
  qword_100118020 = (uint64_t)v1;

}

void sub_100020764(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id sub_100021DA8()
{
  if (qword_100118038 != -1)
    dispatch_once(&qword_100118038, &stru_1000E6C68);
  return (id)qword_100118030;
}

void sub_100021DE8(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSDateFormatter);
  v2 = (void *)qword_100118030;
  qword_100118030 = (uint64_t)v1;

  objc_msgSend((id)qword_100118030, "setDateStyle:", 3);
  _objc_msgSend((id)qword_100118030, "setTimeStyle:", 1);
}

id sub_100022654(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeObserver:", a2);
}

void sub_100022AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100022AF8(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "refreshControl"));
  objc_msgSend(v2, "endRefreshing");

  v3 = (id)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
  objc_msgSend(v3, "beginObservingAllUploadTasks");

}

void sub_100022B58(uint64_t a1, void *a2)
{
  id v3;
  id *v4;
  id WeakRetained;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  NSString *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  unsigned __int8 v31;
  _QWORD v32[5];
  _QWORD v33[4];
  id v34;
  _QWORD v35[4];
  id v36;

  v3 = a2;
  v4 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ((objc_msgSend(WeakRetained, "isViewLoaded") & 1) == 0)
    goto LABEL_18;
  v6 = objc_loadWeakRetained((id *)(a1 + 40));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "view"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "window"));

  if (v8)
  {
    v9 = objc_loadWeakRetained((id *)(a1 + 40));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "inbox"));
    v11 = objc_msgSend(v10, "type");

    if (v11 == (id)3)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "insertedObjects"));
      WeakRetained = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "ded_selectItemsPassingTest:", &stru_1000E6CE0));

      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deletedObjects"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "ded_selectItemsPassingTest:", &stru_1000E6D00));

      v15 = NSStringFromSelector("localSubmissionStage");
      v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "updatedObjects"));
      v35[0] = _NSConcreteStackBlock;
      v35[1] = 3221225472;
      v35[2] = sub_100022F64;
      v35[3] = &unk_1000E6D28;
      v18 = v16;
      v36 = v18;
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "ded_selectItemsPassingTest:", v35));

      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "refreshedObjects"));
      v33[0] = _NSConcreteStackBlock;
      v33[1] = 3221225472;
      v33[2] = sub_100022FE8;
      v33[3] = &unk_1000E6D28;
      v34 = v18;
      v21 = v18;
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "ded_selectItemsPassingTest:", v33));

      if (objc_msgSend(WeakRetained, "count")
        || objc_msgSend(v14, "count")
        || objc_msgSend(v22, "count")
        || objc_msgSend(v19, "count"))
      {
        v23 = objc_loadWeakRetained(v4);
        objc_msgSend(v23, "reloadView");

      }
      goto LABEL_17;
    }
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sortedInboxItems"));
    WeakRetained = (id)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v24));

    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "insertedObjects"));
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472;
    v32[2] = sub_10002306C;
    v32[3] = &unk_1000E6D50;
    v32[4] = *(_QWORD *)(a1 + 32);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "ded_selectItemsPassingTest:", v32));

    if (!objc_msgSend(v14, "count"))
    {
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "updatedObjects"));
      if ((objc_msgSend(v26, "intersectsSet:", WeakRetained) & 1) == 0)
      {
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "refreshedObjects"));
        if (!objc_msgSend(v27, "intersectsSet:", WeakRetained))
        {
          v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "deletedObjects"));
          v31 = objc_msgSend(v30, "intersectsSet:", WeakRetained);

          if ((v31 & 1) == 0)
            goto LABEL_16;
          goto LABEL_15;
        }

      }
    }
LABEL_15:
    v28 = objc_loadWeakRetained(v4);
    objc_msgSend(v28, "reloadView");

LABEL_16:
    v29 = objc_loadWeakRetained(v4);
    objc_msgSend(v29, "updateNewFeedbackButtonState");

LABEL_17:
LABEL_18:

  }
}

BOOL sub_100022ED4(id a1, id a2)
{
  id v2;
  uint64_t v3;
  char isKindOfClass;

  v2 = a2;
  v3 = objc_opt_class(FBKUploadTask);
  isKindOfClass = objc_opt_isKindOfClass(v2, v3);

  return isKindOfClass & 1;
}

BOOL sub_100022F1C(id a1, id a2)
{
  id v2;
  uint64_t v3;
  char isKindOfClass;

  v2 = a2;
  v3 = objc_opt_class(FBKUploadTask);
  isKindOfClass = objc_opt_isKindOfClass(v2, v3);

  return isKindOfClass & 1;
}

BOOL sub_100022F64(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _BOOL8 v7;

  v3 = a2;
  v4 = objc_opt_class(FBKUploadTask);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "changedValues"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "valueForKey:", *(_QWORD *)(a1 + 32)));
    v7 = v6 != 0;

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

BOOL sub_100022FE8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _BOOL8 v7;

  v3 = a2;
  v4 = objc_opt_class(FBKUploadTask);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "changedValues"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "valueForKey:", *(_QWORD *)(a1 + 32)));
    v7 = v6 != 0;

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id sub_10002306C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v3 = a2;
  v4 = objc_opt_class(FBKContentItem);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0)
  {
    v5 = *(void **)(a1 + 32);
    v6 = v3;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "inbox"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "team"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "predicateForTeam:", v8));

    v10 = objc_msgSend(v9, "evaluateWithObject:", v6);
  }
  else
  {
    v10 = 0;
  }

  return v10;
}

void sub_100023A08(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v5 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "activeInboxSource"));
  objc_msgSend(v4, "removeObject:", v5);

  objc_msgSend(*(id *)(a1 + 32), "destroyDraft:", v5);
}

void sub_1000242E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100024328(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id WeakRetained;
  id v6;
  void (**v7)(id, BOOL);

  v7 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v6 = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(v6, "destroyItemAtIndexPath:", *(_QWORD *)(a1 + 32));

  }
  v7[2](v7, WeakRetained != 0);

}

void sub_1000247A4(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("searchText CONTAINS[cd] %@"), a2));
  objc_msgSend(v2, "addObject:", v3);

}

id sub_10002575C(void *a1)
{
  return a1;
}

void sub_1000257CC(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[UIImageSymbolConfiguration configurationWithTextStyle:](UIImageSymbolConfiguration, "configurationWithTextStyle:", UIFontTextStyleBody));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIImageSymbolConfiguration configurationPreferringMulticolor](UIImageSymbolConfiguration, "configurationPreferringMulticolor"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "configurationByApplyingConfiguration:", v1));
  v3 = (void *)qword_100118040;
  qword_100118040 = v2;

}

id sub_100025A00(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "evaluateWithObject:", a2);
}

void sub_100026360(id a1)
{
  objc_class *v1;
  NSString *v2;
  uint64_t v3;
  void *v4;

  v1 = (objc_class *)objc_opt_class(FBADevicePairingCell);
  v2 = NSStringFromClass(v1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)qword_100118058;
  qword_100118058 = v3;

}

uint64_t sub_100026D08(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;
  void *v11;

  v3 = a2;
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "platform"));
  if (!v4)
    goto LABEL_4;
  v5 = (void *)v4;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "platform"));
  v7 = objc_msgSend(v6, "length");

  if (!v7)
    goto LABEL_4;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "platform"));
  v9 = objc_msgSend(v8, "isEqualToString:", DEDDevicePlatformUnspecified);

  if ((v9 & 1) == 0)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "platform"));
    v10 = (uint64_t)objc_msgSend(v11, "isEqualToString:", *(_QWORD *)(a1 + 32));

  }
  else
  {
LABEL_4:
    v10 = 1;
  }

  return v10;
}

void sub_100026EB0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  objc_class *v5;
  NSString *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  uint8_t v11[16];

  objc_msgSend(*(id *)(a1 + 32), "setPinPairingInProgress:", 1);
  if (objc_msgSend(*(id *)(a1 + 40), "isViewLoaded"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "window"));

    if (v3)
    {
      v4 = *(void **)(a1 + 48);
      v5 = (objc_class *)objc_opt_class(FBAPinPairingViewController);
      v6 = NSStringFromClass(v5);
      v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "instantiateViewControllerWithIdentifier:", v7));

      objc_msgSend(v8, "setDevice:", *(_QWORD *)(a1 + 56));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "navigationController"));
      objc_msgSend(v9, "pushViewController:animated:", v8, 1);

    }
  }
  v10 = objc_claimAutoreleasedReturnValue(+[FBALog ded](FBALog, "ded"));
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "pin pairing UI block called on view controller no longer visible", v11, 2u);
  }

}

id sub_100027290(uint64_t a1)
{
  id result;

  result = *(id *)(a1 + 32);
  if (result)
    return _objc_msgSend(result, "pairingViewDidClose");
  return result;
}

void sub_10002789C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_1000278E8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "debug");
  v2 = (void *)qword_100118060;
  qword_100118060 = (uint64_t)v1;

}

void sub_100027958(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "upload");
  v2 = (void *)qword_100118070;
  qword_100118070 = (uint64_t)v1;

}

void sub_1000279C8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "model");
  v2 = (void *)qword_100118080;
  qword_100118080 = (uint64_t)v1;

}

void sub_100027A38(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "ffu");
  v2 = (void *)qword_100118090;
  qword_100118090 = (uint64_t)v1;

}

void sub_100027AA8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "Client");
  v2 = (void *)qword_1001180A0;
  qword_1001180A0 = (uint64_t)v1;

}

void sub_100027B18(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "net");
  v2 = (void *)qword_1001180B0;
  qword_1001180B0 = (uint64_t)v1;

}

void sub_100027B88(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "Application");
  v2 = (void *)qword_1001180C0;
  qword_1001180C0 = (uint64_t)v1;

}

void sub_100027BF8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "attach");
  v2 = (void *)qword_1001180D0;
  qword_1001180D0 = (uint64_t)v1;

}

void sub_100027C68(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "reachability");
  v2 = (void *)qword_1001180E0;
  qword_1001180E0 = (uint64_t)v1;

}

void sub_100027CD8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "fded");
  v2 = (void *)qword_1001180F0;
  qword_1001180F0 = (uint64_t)v1;

}

void sub_1000280D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000280F8(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dimmingView"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_1000281F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100028214(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dimmingView"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

void sub_100028738(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  id v4;

  v3 = a3;
  v4 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v4, "postNotificationName:object:", off_100115AF8, v3);

}

void sub_100028E8C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedViewController"));

  if (v2)
  {
    v3 = *(void **)(a1 + 32);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "presentedViewController"));
    LODWORD(v3) = objc_msgSend(v3, "canDismissPresentedController:", v4);

    if ((_DWORD)v3)
    {
      objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
      objc_msgSend(*(id *)(a1 + 32), "setPresentedSegueName:", 0);
    }
  }
}

id sub_100028F74(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setPendingStartupUI:", 4);
  return objc_msgSend(*(id *)(a1 + 32), "performSegueWithIdentifier:sender:", CFSTR("FBALoginFlowModalPresentation"), *(_QWORD *)(a1 + 32));
}

id sub_100029008(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "createAndShowNonParticipantView");
}

id sub_100029068(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  void *v7;
  _QWORD v8[5];

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedViewController"));
  if (!v2)
    return objc_msgSend(*(id *)(a1 + 32), "performSegueWithIdentifier:sender:", CFSTR("FBAConnectivityErrorPresentation"), *(_QWORD *)(a1 + 32));
  v3 = (void *)v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedSegueName"));
  v5 = objc_msgSend(CFSTR("FBAConnectivityErrorPresentation"), "isEqualToString:", v4);

  if ((v5 & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "performSegueWithIdentifier:sender:", CFSTR("FBAConnectivityErrorPresentation"), *(_QWORD *)(a1 + 32));
  v7 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10002914C;
  v8[3] = &unk_1000E61B8;
  v8[4] = v7;
  return objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, v8);
}

id sub_10002914C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSegueWithIdentifier:sender:", CFSTR("FBAConnectivityErrorPresentation"), *(_QWORD *)(a1 + 32));
}

id sub_1000291BC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  void *v7;
  _QWORD v8[5];

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedViewController"));
  if (!v2)
    return objc_msgSend(*(id *)(a1 + 32), "performSegueWithIdentifier:sender:", CFSTR("FBAVersionOutdatedPresentation"), *(_QWORD *)(a1 + 32));
  v3 = (void *)v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedSegueName"));
  v5 = objc_msgSend(CFSTR("FBAVersionOutdatedPresentation"), "isEqualToString:", v4);

  if ((v5 & 1) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "performSegueWithIdentifier:sender:", CFSTR("FBAVersionOutdatedPresentation"), *(_QWORD *)(a1 + 32));
  v7 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000292A0;
  v8[3] = &unk_1000E61B8;
  v8[4] = v7;
  return objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, v8);
}

id sub_1000292A0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSegueWithIdentifier:sender:", CFSTR("FBAVersionOutdatedPresentation"), *(_QWORD *)(a1 + 32));
}

void sub_100029318(uint64_t a1)
{
  unsigned __int8 v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  NSObject *v8;
  id v9;
  uint8_t buf[16];

  v2 = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32)), "presentsAuthKitUIModally");
  v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "storyboard"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storyboard"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "instantiateViewControllerWithIdentifier:", CFSTR("FBALoginViewController")));

    objc_msgSend(v5, "setPendingStartupUI:", *(_QWORD *)(a1 + 40));
    v6 = objc_msgSend(objc_alloc((Class)UINavigationController), "initWithRootViewController:", v5);
    objc_msgSend(v6, "setModalPresentationStyle:", 0);
    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v6, 0, 0);

  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "presentedViewController"));

    if (v7)
    {
      if (qword_100118108 != -1)
        dispatch_once(&qword_100118108, &stru_1000E7018);
      v8 = qword_100118100;
      if (os_log_type_enabled((os_log_t)qword_100118100, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Already presenting login view controller", buf, 2u);
      }
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "setPendingStartupUI:", *(_QWORD *)(a1 + 40));
      objc_msgSend(*(id *)(a1 + 32), "performSegueWithIdentifier:sender:", CFSTR("FBALoginFlowModalPresentation"), *(_QWORD *)(a1 + 32));
    }
  }
}

void sub_100029554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100029570(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));

  if (WeakRetained)
  {
    v3 = objc_loadWeakRetained(v1);
    objc_msgSend(v3, "presentVersionOutdatedUI");

  }
}

void sub_100029678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100029694(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));

  if (WeakRetained)
  {
    v3 = objc_loadWeakRetained(v1);
    objc_msgSend(v3, "displayNonParticipant");

  }
}

void sub_100029898(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.appleseed.FeedbackAssistant", "split-vc");
  v2 = (void *)qword_100118100;
  qword_100118100 = (uint64_t)v1;

}

id *sub_10002A2A0(id *result, uint64_t a2)
{
  id *v2;
  void *v3;
  void *v4;

  if (a2)
  {
    v2 = result;
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", a2));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[4], "deviceIcon"));
    objc_msgSend(v4, "setImage:", v3);

    return (id *)objc_msgSend(v2[4], "setNeedsDisplay");
  }
  return result;
}

void sub_10002B1B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, id *a12, id *a13, id *a14, id *a15)
{
  id *v15;
  id *v16;
  uint64_t v17;

  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(location);
  objc_destroyWeak(a12);
  objc_destroyWeak(a13);
  objc_destroyWeak(a14);
  objc_destroyWeak(a15);
  objc_destroyWeak((id *)(v17 - 128));
  _Unwind_Resume(a1);
}

void sub_10002B270(uint64_t a1, uint64_t a2)
{
  id *v3;
  id WeakRetained;
  id v5;

  v3 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setIsBatchUIEnabled:", a2);

  v5 = objc_loadWeakRetained(v3);
  objc_msgSend(v5, "updateUIAnimated:", 1);

}

id sub_10002B2D0(uint64_t a1)
{
  unsigned int v2;
  NSObject *v3;
  _BOOL4 v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[5];
  uint8_t buf[16];

  v2 = objc_msgSend(*(id *)(a1 + 32), "hasContentItemsToShow");
  v3 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Showing cached content", buf, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "updateUI");
  }
  else
  {
    if (v4)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "No cached content to show", buf, 2u);
    }

  }
  v5 = *(void **)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
  objc_msgSend(v5, "setFBAPreferencesEnabled:", objc_msgSend(v6, "inboxLiteMode") ^ 1);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "splitViewController"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10002B418;
  v9[3] = &unk_1000E61B8;
  v9[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v7, "drainAndPresentConsentsWithCompletion:", v9);

  return objc_msgSend(*(id *)(a1 + 32), "reloadApp");
}

id sub_10002B418(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "reloadApp");
}

id sub_10002B420(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "runDelayedUrlActionIfNeeded");
}

void sub_10002B428(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "runDelayedUrlActionIfNeeded");

  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "updateUI");

}

void sub_10002B474(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;
  id v4;
  id v5;
  unsigned int v6;
  void *v7;
  id v8;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setHasLoadedFormItems:", 1);

  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "runDelayedUrlActionIfNeeded");

  v4 = objc_loadWeakRetained(v1);
  objc_msgSend(v4, "updateUI");

  v5 = objc_loadWeakRetained(v1);
  v6 = objc_msgSend(v5, "userIsEnrolledInAnySeedingProgram");

  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
    objc_msgSend(v7, "setInboxLiteMode:", 0);

    v8 = objc_loadWeakRetained(v1);
    objc_msgSend(v8, "setFBAPreferencesEnabled:", 1);

  }
}

void sub_10002B548(uint64_t a1)
{
  id WeakRetained;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "setFBAPreferencesEnabled:", 0);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "splitViewController"));
  objc_msgSend(v3, "dismissSecondaryOrShowEmptyViewControllerAnimated:", 1);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "updateUI");

}

void sub_10002B5A8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "updateUI");

}

void sub_10002B5D4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "updateUI");

}

void sub_10002B600(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "showLoadingView");

  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "setHasLoadedFormItems:", 0);

  v4 = objc_loadWeakRetained(v1);
  objc_msgSend(v4, "setHasFinishedFirstLoad:", 0);

  v5 = objc_loadWeakRetained(v1);
  objc_msgSend(v5, "applySnapshot");

  v6 = objc_loadWeakRetained(v1);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "splitViewController"));
  objc_msgSend(v7, "setIsPresentingConsentView:", 0);

  v9 = objc_loadWeakRetained(v1);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "collectionView"));
  objc_msgSend(v8, "reloadData");

}

void sub_10002B6D0(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "hideLoadingView");

  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "hideSpinner");

}

id sub_10002BB2C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeObserver:", a2);
}

void sub_10002BDBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 104));
  _Unwind_Resume(a1);
}

id sub_10002BDF4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id WeakRetained;
  void *v12;
  void *v13;
  uint64_t v14;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "diffableDataSource"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "sectionIdentifierForIndex:", objc_msgSend(v6, "section")));

  if (objc_msgSend(v8, "isEqualToString:", CFSTR("smart-mailbox")))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[FBASmartMailboxCell reuseIdentifier](_TtC18Feedback_Assistant19FBASmartMailboxCell, "reuseIdentifier"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v9, v6));

    WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "smartMailboxes"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectAtIndexedSubscript:", objc_msgSend(v6, "row")));
    objc_msgSend(v10, "configureWithInbox:", v13);

LABEL_5:
    goto LABEL_6;
  }
  if (objc_msgSend(v8, "isEqualToString:", CFSTR("enhanced-logging-section")))
  {
    v14 = *(_QWORD *)(a1 + 40);
    WeakRetained = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "enhancedLoggingInbox"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:", v14, v6, WeakRetained));
    goto LABEL_5;
  }
  if (objc_msgSend(v8, "isEqualToString:", CFSTR("batch-ui-section")))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "batchUICellWithCollectionView:indexPath:reuseIdentifier:", v5, v6, CFSTR("batch-ui-row")));
  }
  else
  {
    v16 = objc_msgSend(v6, "row");
    v17 = objc_loadWeakRetained((id *)(a1 + 56));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "inboxes"));
    v19 = objc_msgSend(v18, "count");

    v20 = objc_loadWeakRetained((id *)(a1 + 56));
    v21 = v20;
    if (v16 >= v19)
    {
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "teamForIndexPath:", v6));

      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:", *(_QWORD *)(a1 + 48), v6, v24));
    }
    else
    {
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "inboxes"));
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "objectAtIndexedSubscript:", objc_msgSend(v6, "row")));

      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:", *(_QWORD *)(a1 + 40), v6, v23));
    }
  }
LABEL_6:

  return v10;
}

id sub_10002C068(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  unsigned int v9;
  uint64_t v10;
  void *v11;

  v7 = a4;
  v8 = a2;
  v9 = objc_msgSend(a3, "isEqualToString:", UICollectionElementKindSectionHeader);
  v10 = 40;
  if (v9)
    v10 = 32;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath:", *(_QWORD *)(a1 + v10), v7));

  return v11;
}

void sub_10002C1A0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_10002C1C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSString *v13;
  _BOOL4 IsAccessibilityCategory;
  void *v15;
  double v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  unsigned int v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  id v32;
  double v33;
  id *v34;
  id WeakRetained;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  _QWORD v48[2];

  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "diffableDataSource"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "sectionIdentifierForIndex:", a2));

  if (objc_msgSend(v7, "isEqualToString:", CFSTR("smart-mailbox")))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutDimension fractionalWidthDimension:](NSCollectionLayoutDimension, "fractionalWidthDimension:", 1.0));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutDimension fractionalHeightDimension:](NSCollectionLayoutDimension, "fractionalHeightDimension:", 1.0));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutSize sizeWithWidthDimension:heightDimension:](NSCollectionLayoutSize, "sizeWithWidthDimension:heightDimension:", v8, v9));

    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutItem itemWithLayoutSize:](NSCollectionLayoutItem, "itemWithLayoutSize:", v10));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "traitCollection"));
    v13 = (NSString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "preferredContentSizeCategory"));
    IsAccessibilityCategory = UIContentSizeCategoryIsAccessibilityCategory(v13);

    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutDimension fractionalWidthDimension:](NSCollectionLayoutDimension, "fractionalWidthDimension:", 1.0));
    v16 = 80.0;
    if (IsAccessibilityCategory)
    {
      v16 = 100.0;
      v17 = 1;
    }
    else
    {
      v17 = 2;
    }
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutDimension absoluteDimension:](NSCollectionLayoutDimension, "absoluteDimension:", v16));
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutSize sizeWithWidthDimension:heightDimension:](NSCollectionLayoutSize, "sizeWithWidthDimension:heightDimension:", v15, v18));

    v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutGroup horizontalGroupWithLayoutSize:subitem:count:](NSCollectionLayoutGroup, "horizontalGroupWithLayoutSize:subitem:count:", v19, v11, v17));
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutSpacing fixedSpacing:](NSCollectionLayoutSpacing, "fixedSpacing:", 10.0));
    objc_msgSend(v20, "setInterItemSpacing:", v21);

    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutSection sectionWithGroup:](NSCollectionLayoutSection, "sectionWithGroup:", v20));
    objc_msgSend(v22, "setInterGroupSpacing:", 10.0);
    objc_msgSend(v22, "setContentInsets:", 10.0, 20.0, 20.0, 20.0);
LABEL_17:

    goto LABEL_18;
  }
  if (objc_msgSend(v7, "isEqualToString:", CFSTR("enhanced-logging-section")))
  {
    v23 = objc_msgSend(objc_alloc((Class)UICollectionLayoutListConfiguration), "initWithAppearance:", 2);
    v10 = v23;
  }
  else
  {
    v24 = objc_msgSend(v7, "isEqualToString:", CFSTR("batch-ui-section"));
    v23 = objc_msgSend(objc_alloc((Class)UICollectionLayoutListConfiguration), "initWithAppearance:", 2);
    v10 = v23;
    if (!v24)
    {
      v34 = (id *)(a1 + 40);
      WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
      v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sortedTeams"));
      objc_msgSend(v10, "setHeaderMode:", (unint64_t)objc_msgSend(v36, "count") > 1);

      v37 = objc_loadWeakRetained(v34);
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "teamForSection:", a2));

      v38 = objc_loadWeakRetained(v34);
      LODWORD(v34) = objc_msgSend(v38, "hasFinishedFirstLoad");

      if ((_DWORD)v34)
        v39 = objc_msgSend(v11, "canStartNewFeedback") ^ 1;
      else
        v39 = 0;
      objc_msgSend(v10, "setFooterMode:", v39);
      v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutDimension fractionalWidthDimension:](NSCollectionLayoutDimension, "fractionalWidthDimension:", 1.0));
      v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutDimension estimatedDimension:](NSCollectionLayoutDimension, "estimatedDimension:", 44.0));
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutSize sizeWithWidthDimension:heightDimension:](NSCollectionLayoutSize, "sizeWithWidthDimension:heightDimension:", v40, v41));

      v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutDimension fractionalWidthDimension:](NSCollectionLayoutDimension, "fractionalWidthDimension:", 1.0));
      v43 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutDimension estimatedDimension:](NSCollectionLayoutDimension, "estimatedDimension:", 10.0));
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutSize sizeWithWidthDimension:heightDimension:](NSCollectionLayoutSize, "sizeWithWidthDimension:heightDimension:", v42, v43));

      v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItemWithLayoutSize:elementKind:alignment:](NSCollectionLayoutBoundarySupplementaryItem, "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v19, UICollectionElementKindSectionHeader, 1));
      v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItemWithLayoutSize:elementKind:alignment:](NSCollectionLayoutBoundarySupplementaryItem, "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v20, UICollectionElementKindSectionFooter, 5));
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutSection sectionWithListConfiguration:layoutEnvironment:](NSCollectionLayoutSection, "sectionWithListConfiguration:layoutEnvironment:", v10, v5));
      v48[0] = v44;
      v48[1] = v45;
      v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v48, 2));
      objc_msgSend(v22, "setBoundarySupplementaryItems:", v46);

      goto LABEL_17;
    }
  }
  objc_msgSend(v23, "setHeaderMode:", 0);
  objc_msgSend(v10, "setFooterMode:", 0);
  v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSCollectionLayoutSection sectionWithListConfiguration:layoutEnvironment:](NSCollectionLayoutSection, "sectionWithListConfiguration:layoutEnvironment:", v10, v5));
  objc_msgSend(v22, "contentInsets");
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sortedTeams"));
  v32 = objc_msgSend(v31, "count");

  if (v32 == (id)1)
    v33 = 0.0;
  else
    v33 = v28;
  objc_msgSend(v22, "setContentInsets:", 0.0, v26, v33, v30);
LABEL_18:

  return v22;
}

void sub_10002C7AC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10002C7D0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  id v8;
  id WeakRetained;
  void *v10;
  id v11;

  v11 = a2;
  v6 = a4;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sortedTeams"));
  v8 = objc_msgSend(v7, "count");

  if ((unint64_t)v8 < 2)
  {
    objc_msgSend(v11, "hide");
  }
  else
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "teamForIndexPath:", v6));

    objc_msgSend(v11, "configureForTeam:", v10);
  }

}

void sub_10002C950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002C974(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  id WeakRetained;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  const __CFString *v13;
  const __CFString *v14;
  void *v15;
  id v16;

  v6 = a4;
  v7 = a2;
  v16 = (id)objc_claimAutoreleasedReturnValue(+[UIListContentConfiguration groupedFooterConfiguration](UIListContentConfiguration, "groupedFooterConfiguration"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "teamForIndexPath:", v6));

  if (objc_msgSend(*(id *)(a1 + 32), "hasFinishedFirstLoad")
    && !objc_msgSend(v9, "canStartNewFeedback"))
  {
    v10 = objc_msgSend(v9, "teamType");
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v12 = v11;
    if (v10)
    {
      v13 = CFSTR("TEAM_MAILBOX_CLOSED_EXPLAIN");
      v14 = CFSTR("New feedback for this team has been disabled.");
    }
    else
    {
      v13 = CFSTR("MAILBOX_CLOSED_EXPLAIN");
      v14 = CFSTR("You are not a member of any active programs.");
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "localizedStringForKey:value:table:", v13, v14, 0));
    objc_msgSend(v16, "setText:", v15);

  }
  else
  {
    objc_msgSend(v16, "setText:", 0);
  }
  objc_msgSend(v7, "setContentConfiguration:", v16);

}

void sub_10002CB24(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  v7 = a2;
  v8 = a4;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "teamForIndexPath:", a3));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIListContentConfiguration valueCellConfiguration](UIListContentConfiguration, "valueCellConfiguration"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "displayText"));
  objc_msgSend(v10, "setText:", v11);

  v12 = objc_msgSend(v8, "unreadCountForTeam:", v9);
  if (v12)
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%ld"), v12));
    objc_msgSend(v10, "setSecondaryText:", v13);

  }
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "icon"));
  objc_msgSend(v10, "setImage:", v14);

  objc_msgSend(v7, "setContentConfiguration:", v10);
  v16 = (void *)objc_opt_new(UICellAccessoryDisclosureIndicator, v15);
  v23 = v16;
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v23, 1));
  objc_msgSend(v7, "setAccessories:", v17);

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "data"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "currentUser"));
  LODWORD(v17) = objc_msgSend(v19, "hasManagedTeams");

  if ((_DWORD)v17)
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "displayText"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "name"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@, %@"), v20, v21));
    objc_msgSend(v7, "setAccessibilityLabel:", v22);

  }
  objc_msgSend(v7, "setAccessibilityTraits:", UIAccessibilityTraitButton);

}

void sub_10002CDD0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;

  v25 = a2;
  v6 = a4;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIListContentConfiguration cellConfiguration](UIListContentConfiguration, "cellConfiguration"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("NEW_FEEDBACK"), CFSTR("New Feedback"), 0));
  objc_msgSend(v7, "setText:", v9);

  v10 = v6;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "data"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "currentUser"));
  LODWORD(v9) = objc_msgSend(v12, "hasManagedTeams");

  if ((_DWORD)v9)
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "name"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "text"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@, %@"), v13, v14));
    objc_msgSend(v25, "setAccessibilityLabel:", v15);

  }
  objc_msgSend(v25, "setAccessibilityTraits:", UIAccessibilityTraitButton);
  v16 = objc_msgSend(v10, "canStartNewFeedback");
  if ((_DWORD)v16)
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[iFBAConstants tintColor](iFBAConstants, "tintColor"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "textProperties"));
    objc_msgSend(v18, "setColor:", v17);

    v19 = objc_claimAutoreleasedReturnValue(+[iFBAConstants tintColor](iFBAConstants, "tintColor"));
  }
  else
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor lightGrayColor](UIColor, "lightGrayColor"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "textProperties"));
    objc_msgSend(v21, "setColor:", v20);

    v19 = objc_claimAutoreleasedReturnValue(+[UIColor lightGrayColor](UIColor, "lightGrayColor"));
  }
  v22 = (void *)v19;
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "imageProperties"));
  objc_msgSend(v23, "setTintColor:", v22);

  objc_msgSend(v25, "setUserInteractionEnabled:", v16);
  v24 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageNamed:](UIImage, "imageNamed:", FBKImageNameNewFeedback));
  objc_msgSend(v7, "setImage:", v24);
  objc_msgSend(v25, "setContentConfiguration:", v7);

}

void sub_10002D920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10002D944(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "applySnapshotAnimated:", *(unsigned __int8 *)(a1 + 40));
}

void sub_10002D954(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setIsApplyingSnapshot:", 0);

}

id sub_10002DCA4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "reloadApp");
}

void sub_10002E5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10002E5DC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10002E5EC(uint64_t a1)
{

}

void sub_10002E5F4(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[5];

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = a1[6];
  v5 = a1[7];
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "pendingLaunchAction"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10002E694;
  v8[3] = &unk_1000E71D0;
  v7 = a1[8];
  v8[4] = a1[9];
  objc_msgSend(v2, "launchNewDraftViewControllerWithBugFormStub:draftItem:surveyBugForm:launchAction:team:completion:", v3, v4, v5, v6, v7, v8);

}

void sub_10002E694(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setPendingLaunchAction:", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "collectionView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "indexPathsForSelectedItems"));
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "firstObject"));

  if (v5)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "collectionView"));
    objc_msgSend(v4, "deselectItemAtIndexPath:animated:", v5, 1);

  }
}

uint64_t sub_10002E740(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10002E7C8(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "refreshControl"));
  objc_msgSend(v1, "endRefreshing");

}

void sub_10002E908(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  BOOL v10;
  id v11;

  v11 = a2;
  objc_msgSend(*(id *)(a1 + 32), "setHasFinishedFirstLoad:", 1);
  objc_msgSend(*(id *)(a1 + 32), "didReloadApp");
  v3 = v11;
  if (v11)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "delegate"));

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "userInfo"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", NSLocalizedDescriptionKey));

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "userInfo"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", NSLocalizedRecoverySuggestionErrorKey));

    if (v7)
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
      objc_msgSend(v5, "showSimpleAlertWithErrorTitle:message:", v7, v9);

    v3 = v11;
  }

}

void sub_10002EADC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "data"));
  objc_msgSend(v1, "beginObservingAllUploadTasks");

}

BOOL sub_10002F648(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _BOOL8 v7;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ID"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "itemID"));
  if (objc_msgSend(v4, "isEqualToNumber:", v5))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "type"));
    v7 = objc_msgSend(v6, "unsignedIntValue") == 4;

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

BOOL sub_10002F6E0(id a1, FBAInbox *a2, unint64_t a3, BOOL *a4)
{
  return (id)-[FBAInbox type](a2, "type", a3, a4) == (id)2;
}

void sub_10002F700(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_10009A5C4();

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_LOAD_ERROR_TITLE"), &stru_1000EA660, 0));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_LOAD_ERROR_MESSAGE"), &stru_1000EA660, 0));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v4, v6, 1));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, FBKCommonStrings));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v9, 1, &stru_1000E72A8));
  objc_msgSend(v7, "addAction:", v10);

  objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v7, 1, 0);
}

void sub_10002F88C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v16[4];
  id v17;
  id v18;
  uint64_t v19;
  id v20;

  v5 = a2;
  if (a3)
  {
    v6 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_10009A5F0(a1, v6, v7, v8, v9, v10, v11, v12);

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10002F9A4;
    v16[3] = &unk_1000E72F8;
    v20 = *(id *)(a1 + 56);
    v17 = *(id *)(a1 + 32);
    v14 = *(id *)(a1 + 40);
    v15 = *(_QWORD *)(a1 + 48);
    v18 = v14;
    v19 = v15;
    objc_msgSend(v13, "getAllContentForFeedback:completion:", v5, v16);

  }
}

void sub_10002F9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  NSObject *v23;

  if (a3)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    v4 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_10009A6C0(a1, v4, v5, v6, v7, v8, v9, v10);
  }
  else
  {
    v11 = a1 + 32;
    if (!objc_msgSend(*(id *)(a1 + 32), "isFFUAction"))
      return;
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "feedback"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "feedbackFollowups"));
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_10002FB0C;
    v22[3] = &unk_1000E72D0;
    v23 = *(id *)(a1 + 32);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "ded_findWithBlock:", v22));

    if (v14)
    {
      objc_msgSend(*(id *)(a1 + 48), "setPendingItemToShow:", *(_QWORD *)(a1 + 40));
      objc_msgSend(*(id *)(a1 + 48), "setPendingFollowupToShow:", v14);
      objc_msgSend(*(id *)(a1 + 48), "performSegueWithIdentifier:sender:", CFSTR("FBAFollowupResponsePresentation"), *(_QWORD *)(a1 + 48));
    }
    else
    {
      v15 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        sub_10009A658(v11, v15, v16, v17, v18, v19, v20, v21);

    }
    v4 = v23;
  }

}

id sub_10002FB0C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "ID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ffuID"));
  v5 = objc_msgSend(v3, "isEqualToNumber:", v4);

  return v5;
}

BOOL sub_10002FD98(id a1, FBAInbox *a2, unint64_t a3, BOOL *a4)
{
  return (id)-[FBAInbox type](a2, "type", a3, a4) == (id)2;
}

BOOL sub_100030110(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _BOOL8 v7;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "formTat"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formIdentifier"));
  if (objc_msgSend(v4, "isEqualToString:", v5))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "type"));
    v7 = objc_msgSend(v6, "unsignedIntValue") == 3;

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_1000301A8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  uint8_t v8[8];
  _QWORD v9[4];
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "data"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "currentUser"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "contentItems"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000302FC;
  v9[3] = &unk_1000E6E10;
  v10 = *(id *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "ded_findWithBlock:", v9));

  if (v5)
  {
    v6 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Found survey content item", v8, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "reallyLaunchSurveyWithUrlAction:team:surveyItem:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v5);
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "formIdentifier"));
    +[FBATargetedSurvey reportFailureToLaunchFormWithFormIdentifier:](_TtC18Feedback_Assistant17FBATargetedSurvey, "reportFailureToLaunchFormWithFormIdentifier:", v7);

    objc_msgSend(*(id *)(a1 + 32), "showTargetedSurveyLoadErrorAlert");
  }

}

BOOL sub_1000302FC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _BOOL8 v7;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "formTat"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formIdentifier"));
  if (objc_msgSend(v4, "isEqualToString:", v5))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "type"));
    v7 = objc_msgSend(v6, "unsignedIntValue") == 3;

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_100030484(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;

  v5 = a2;
  if (a3)
  {
    v6 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_10009A84C();

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formIdentifier"));
    +[FBATargetedSurvey reportFailureToLaunchFormWithFormIdentifier:](_TtC18Feedback_Assistant17FBATargetedSurvey, "reportFailureToLaunchFormWithFormIdentifier:", v7);

    objc_msgSend(*(id *)(a1 + 40), "showTargetedSurveyLoadErrorAlert");
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[FBADraftManager sharedInstance](FBADraftManager, "sharedInstance"));
    objc_msgSend(v8, "beginFeedbackForSurvey:contentItem:forTeam:", v5, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));

  }
}

void sub_100030E40(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  if (a2)
    goto LABEL_2;
  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "currentUser"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "bugFormStubs"));
  objc_msgSend(v4, "findExactMatchFormStubAndTeamWithFormStubs:", v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "exactMatchFormStub"));
  if (!v8)
  {
LABEL_2:
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formIdentifier"));
    +[FBATargetedSurvey reportFailureToLaunchFormWithFormIdentifier:](_TtC18Feedback_Assistant17FBATargetedSurvey, "reportFailureToLaunchFormWithFormIdentifier:", v3);

    _objc_msgSend(*(id *)(a1 + 40), "showTargetedFeedbackLoadErrorAlert");
  }
  else
  {
    v9 = *(void **)(a1 + 40);
    v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "exactMatchFormStub"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "teamForExactMatchFormStub"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "composeFeedbackToolbarItem"));
    objc_msgSend(v9, "tryLaunchingDraft:orStub:forTeam:withSender:", 0, v12, v10, v11);

  }
}

id sub_100030F70(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "ID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bugFormID"));
  v5 = objc_msgSend(v3, "isEqualToNumber:", v4);

  return v5;
}

void sub_100031238(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (!v3)
    objc_msgSend(*(id *)(a1 + 40), "blockLandscapeOrientations:", 0);
}

void sub_100031F88(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100031F98(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

id sub_100032380(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "updateWebView");
  return objc_msgSend(*(id *)(a1 + 32), "updateTitle");
}

uint64_t sub_1000323A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v13[5];

  if (a3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("ANNOUNCEMENT_LOAD_ERROR_TITLE"), &stru_1000EA660, 0));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("ANNOUNCEMENT_LOAD_ERROR_MESSAGE"), &stru_1000EA660, 0));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v5, v7, 1));

    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, 0));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_100032550;
    v13[3] = &unk_1000E61E0;
    v13[4] = *(_QWORD *)(a1 + 32);
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v10, 1, v13));
    objc_msgSend(v8, "addAction:", v11);

    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v8, 1, 0);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "setAnnouncement:", a2);
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_100032550(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "splitViewController"));
  objc_msgSend(v1, "dismissSecondaryOrShowEmptyViewControllerAnimated:", 1);

}

id *sub_100033280(id *result, uint64_t a2)
{
  id *v2;
  void *v3;
  void *v4;

  if (a2)
  {
    v2 = result;
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", a2));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[4], "deviceImage"));
    objc_msgSend(v4, "setImage:", v3);

    return (id *)objc_msgSend(v2[4], "setNeedsDisplay");
  }
  return result;
}

uint64_t sub_10003368C(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  char isKindOfClass;

  v1 = a1;
  if (v1 && (v2 = objc_opt_class(NSDictionary), (objc_opt_isKindOfClass(v1, v2) & 1) != 0))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("errors")));
    v4 = sub_100034EAC(v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

    if (v5)
    {
      v6 = objc_opt_class(NSArray);
      isKindOfClass = objc_opt_isKindOfClass(v5, v6);
    }
    else
    {
      isKindOfClass = 0;
    }

  }
  else
  {
    isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

id sub_100033738(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  __CFString *v13;
  void *v14;
  const __CFString *v16;
  __CFString *v17;

  v1 = a1;
  if (v1 && (v2 = objc_opt_class(NSDictionary), (objc_opt_isKindOfClass(v1, v2) & 1) != 0))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("code")));
    v4 = sub_100034EAC(v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("message")));
    v7 = sub_100034EAC(v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

    v9 = 0;
    if (v5 && v8)
    {
      v10 = objc_opt_class(NSNumber);
      if ((objc_opt_isKindOfClass(v5, v10) & 1) != 0)
      {
        v11 = objc_msgSend(v5, "integerValue");
        v12 = objc_opt_class(NSString);
        if ((objc_opt_isKindOfClass(v8, v12) & 1) != 0)
          v13 = v8;
        else
          v13 = &stru_1000EA660;
        v16 = CFSTR("message");
        v17 = v13;
        v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1));
        v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.appleseed.FeedbackAssistant"), v11, v14));

      }
      else
      {
        v9 = 0;
      }
    }

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

uint64_t sub_1000338EC(void *a1, id a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  _BYTE v28[128];

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "userInfo"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", CFSTR("FBASeedPortalErrorsKey")));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "userInfo"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", CFSTR("FBAAggregatedErrorsKey")));

  if (v5)
  {
    v25 = 0u;
    v26 = 0u;
    v23 = 0u;
    v24 = 0u;
    v8 = v5;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v24;
LABEL_4:
      v12 = 0;
      while (1)
      {
        if (*(_QWORD *)v24 != v11)
          objc_enumerationMutation(v8);
        if (objc_msgSend(*(id *)(*((_QWORD *)&v23 + 1) + 8 * v12), "code") == a2)
          break;
        if (v10 == (id)++v12)
        {
          v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
          if (v10)
            goto LABEL_4;
          goto LABEL_20;
        }
      }
LABEL_21:
      v17 = 1;
      goto LABEL_22;
    }
  }
  else
  {
    if (!v7)
    {
      v17 = 0;
      goto LABEL_23;
    }
    v21 = 0u;
    v22 = 0u;
    v19 = 0u;
    v20 = 0u;
    v8 = v7;
    v13 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v19, v27, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v20;
LABEL_14:
      v16 = 0;
      while (1)
      {
        if (*(_QWORD *)v20 != v15)
          objc_enumerationMutation(v8);
        if ((sub_1000338EC(*(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * v16), a2) & 1) != 0)
          goto LABEL_21;
        if (v14 == (id)++v16)
        {
          v14 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v19, v27, 16);
          if (v14)
            goto LABEL_14;
          break;
        }
      }
    }
  }
LABEL_20:
  v17 = 0;
LABEL_22:

LABEL_23:
  return v17;
}

id sub_100033AFC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v3 = a2;
  v4 = sub_100033BD0(a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "userInfo"));
  if (v6)
  {
    v7 = objc_opt_class(NSDictionary);
    if ((objc_opt_isKindOfClass(v6, v7) & 1) != 0)
    {
      v8 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithDictionary:", v6);
      objc_msgSend(v8, "setObject:forKeyedSubscript:", v3, CFSTR("FBAAggregatedErrorsKey"));
      v9 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.appleseed.FeedbackAssistant"), a1, v8));

      v5 = (void *)v9;
    }
  }

  return v5;
}

id sub_100033BD0(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];

  switch(a1)
  {
    case -1021:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "localizedStringForKey:value:table:", CFSTR("FAILED_TO_ATTACH_FILE_FROM_ICLOUD_NOT_DOWNLOADED"), CFSTR("You can’t attach files until they’ve been downloaded"), 0));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v18, NSLocalizedDescriptionKey);

      v8 = -1021;
      goto LABEL_25;
    case -1020:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "localizedStringForKey:value:table:", CFSTR("FailedToLoginNoDeviceToken"), CFSTR("No device token given. Cannot log in"), 0));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v20, NSLocalizedDescriptionKey);

      v8 = -1020;
      goto LABEL_25;
    case -1019:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "localizedStringForKey:value:table:", CFSTR("FAILED_TO_ATTACH_FILE"), CFSTR("The file could not be attached. Please try again later."), 0));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v22, NSLocalizedDescriptionKey);

      v8 = -1019;
      goto LABEL_25;
    case -1018:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("FAILED_TO_ATTACH_PHOTO"), CFSTR("The photo could not be attached. Please try again later."), 0));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v24, NSLocalizedDescriptionKey);

      v8 = -1018;
      goto LABEL_25;
    case -1017:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "localizedStringForKey:value:table:", CFSTR("FAILED_TO_ATTACH_VIDEO"), CFSTR("The video could not be attached. Please try again later."), 0));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v26, NSLocalizedDescriptionKey);

      v8 = -1017;
      goto LABEL_25;
    case -1016:
      v27 = -1016;
      return (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.appleseed.FeedbackAssistant"), v27, 0));
    case -1015:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v29 = FBKCommonStrings;
      v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "localizedStringForKey:value:table:", CFSTR("ASSIGN_FEEDBACK_ERROR"), &stru_1000EA660, FBKCommonStrings));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v30, NSLocalizedDescriptionKey);

      v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "localizedStringForKey:value:table:", CFSTR("ASSIGN_FEEDBACK_ERROR_RECOVERY"), &stru_1000EA660, v29));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v32, NSLocalizedRecoverySuggestionErrorKey);

      v8 = -1015;
      goto LABEL_25;
    case -1014:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v34 = FBKCommonStrings;
      v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "localizedStringForKey:value:table:", CFSTR("DEMOTE_FEEDBACK_ERROR"), &stru_1000EA660, FBKCommonStrings));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v35, NSLocalizedDescriptionKey);

      v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "localizedStringForKey:value:table:", CFSTR("DEMOTE_FEEDBACK_ERROR_RECOVERY"), &stru_1000EA660, v34));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v37, NSLocalizedRecoverySuggestionErrorKey);

      v8 = -1014;
      goto LABEL_25;
    case -1013:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v39 = FBKCommonStrings;
      v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "localizedStringForKey:value:table:", CFSTR("PROMOTE_FEEDBACK_ERROR"), &stru_1000EA660, FBKCommonStrings));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v40, NSLocalizedDescriptionKey);

      v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "localizedStringForKey:value:table:", CFSTR("PROMOTE_FEEDBACK_ERROR_RECOVERY"), &stru_1000EA660, v39));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v42, NSLocalizedRecoverySuggestionErrorKey);

      v8 = -1013;
      goto LABEL_25;
    case -1012:
      v27 = -1012;
      return (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.appleseed.FeedbackAssistant"), v27, 0));
    case -1011:
    case -1001:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v4 = FBKCommonStrings;
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("UNEXPECTED_SERVER_DATA_ERROR"), &stru_1000EA660, FBKCommonStrings));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, NSLocalizedDescriptionKey);

      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("UNEXPECTED_SERVER_DATA_ERROR_RECOVERY"), &stru_1000EA660, v4));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v7, NSLocalizedRecoverySuggestionErrorKey);

      v8 = a1;
      goto LABEL_25;
    case -1010:
      v27 = -1010;
      return (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.appleseed.FeedbackAssistant"), v27, 0));
    case -1009:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v45 = FBKCommonStrings;
      v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "localizedStringForKey:value:table:", CFSTR("CLOSE_FEEDBACK_ACTION_ERROR"), &stru_1000EA660, FBKCommonStrings));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v46, NSLocalizedDescriptionKey);

      v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v47, "localizedStringForKey:value:table:", CFSTR("CLOSE_FEEDBACK_ACTION_ERROR_RECOVERY"), &stru_1000EA660, v45));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v48, NSLocalizedRecoverySuggestionErrorKey);

      v8 = -1009;
      goto LABEL_25;
    case -1008:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
      v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v49, "localizedStringForKey:value:table:", CFSTR("INVALID_DATA"), &stru_1000EA660, FBKCommonStrings));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v50, NSLocalizedDescriptionKey);

      v8 = -1008;
      goto LABEL_25;
    case -1007:
      v68[0] = NSLocalizedDescriptionKey;
      v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v52 = FBKCommonStrings;
      v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v51, "localizedStringForKey:value:table:", CFSTR("DRAFT_DELETE_ERROR_TITLE"), &stru_1000EA660, FBKCommonStrings));
      v69[0] = v53;
      v68[1] = NSLocalizedRecoverySuggestionErrorKey;
      v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v54, "localizedStringForKey:value:table:", CFSTR("DRAFT_DELETE_ERROR"), &stru_1000EA660, v52));
      v69[1] = v55;
      v56 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v69, v68, 2));

      v57 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.appleseed.FeedbackAssistant"), -1007, v56));
      return v57;
    case -1006:
    case -1005:
    case -1004:
    case -1003:
      goto LABEL_6;
    case -1002:
      v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 1);
      v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "localizedStringForKey:value:table:", CFSTR("FailedToLoadDataError"), CFSTR("Failed to load data."), 0));
      objc_msgSend(v2, "setObject:forKeyedSubscript:", v59, NSLocalizedDescriptionKey);

      v8 = -1002;
      goto LABEL_25;
    default:
      if (a1 == -8)
      {
        v66[0] = NSLocalizedDescriptionKey;
        v2 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v61 = FBKCommonStrings;
        v62 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("UNEXPECTED_SERVER_DATA_ERROR"), &stru_1000EA660, FBKCommonStrings));
        v67[0] = v62;
        v66[1] = NSLocalizedRecoverySuggestionErrorKey;
        v63 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v63, "localizedStringForKey:value:table:", CFSTR("UNEXPECTED_SERVER_DATA_ERROR_RECOVERY"), &stru_1000EA660, v61));
        v67[1] = v64;
        v65 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v67, v66, 2));
        v60 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.appleseed.FeedbackAssistant"), -8, v65));

      }
      else
      {
        if (a1 == 16)
        {
          v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
          v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
          v10 = FBKCommonStrings;
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("GENERIC_LOGIN_FAILURE_TITLE"), &stru_1000EA660, FBKCommonStrings));
          objc_msgSend(v2, "setObject:forKeyedSubscript:", v11, NSLocalizedDescriptionKey);

          v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", CFSTR("GENERIC_LOGIN_FAILURE_MESSAGE"), &stru_1000EA660, v10));
          objc_msgSend(v2, "setObject:forKeyedSubscript:", v13, NSLocalizedRecoverySuggestionErrorKey);

          v8 = 16;
LABEL_25:
          v16 = v2;
        }
        else
        {
LABEL_6:
          v14 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
            sub_10009A878(a1, v14);

          v2 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 1);
          v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.appleseed.FeedbackAssistant"), a1, 0));
          objc_msgSend(v2, "setObject:forKeyedSubscript:", v15, NSUnderlyingErrorKey);

          v8 = -1;
          v16 = 0;
        }
        v60 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.appleseed.FeedbackAssistant"), v8, v16));
      }

      return v60;
  }
}

uint64_t sub_100034E4C(void *a1)
{
  id v1;
  id v2;
  _BOOL8 v3;

  if (!a1)
    return 1;
  v1 = a1;
  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  v3 = v2 == v1;

  return v3;
}

id sub_100034EAC(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = a1;
  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  if (v2 == v1)
    v3 = 0;
  else
    v3 = v1;
  v4 = v3;

  return v4;
}

__CFString *sub_100034F08(void *a1)
{
  __CFString *v1;
  id v2;
  void *v3;
  __CFString *v4;
  __CFString *v5;

  v1 = a1;
  v2 = sub_100034EAC(v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  if (v3)
    v4 = v1;
  else
    v4 = &stru_1000EA660;
  v5 = v4;

  return v5;
}

uint64_t sub_100034F60(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;

  v1 = a1;
  if (v1)
  {
    v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    if (v2 == v1)
      v3 = 1;
    else
      v3 = (uint64_t)objc_msgSend(v1, "BOOLValue");

  }
  else
  {
    v3 = 1;
  }

  return v3;
}

id sub_100034FD0(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;

  if (a1)
  {
    v1 = a1;
    v2 = sub_10003502C();
    v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dateFromString:", v1));

  }
  else
  {
    v4 = 0;
  }
  return v4;
}

id sub_10003502C()
{
  if (qword_100118120 != -1)
    dispatch_once(&qword_100118120, &stru_1000E7478);
  return (id)qword_100118118;
}

id sub_10003506C(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v3, "count"));
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v6 = v3;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v18;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v18 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i);
        v12 = (void *)objc_opt_class(v11);
        v13 = objc_opt_class(NSDictionary);
        if (objc_msgSend(v12, "isSubclassOfClass:", v13, (_QWORD)v17))
        {
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", v4));
          if (v14)
            objc_msgSend(v5, "setObject:forKey:", v11, v14);

        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v8);
  }

  v15 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithDictionary:", v5);
  return v15;
}

id sub_100035210(void *a1)
{
  return sub_10003506C(a1, CFSTR("id"));
}

void sub_10003521C(id a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = objc_alloc_init((Class)NSDateFormatter);
  v2 = (void *)qword_100118118;
  qword_100118118 = (uint64_t)v1;

  v3 = (void *)qword_100118118;
  v4 = objc_msgSend(objc_alloc((Class)NSLocale), "initWithLocaleIdentifier:", CFSTR("en_US_POSIX"));
  objc_msgSend(v3, "setLocale:", v4);

  objc_msgSend((id)qword_100118118, "setDateFormat:", CFSTR("yyyy-MM-dd'T'HH:mm:ss'Z'"));
  v5 = (void *)qword_100118118;
  v6 = (id)objc_claimAutoreleasedReturnValue(+[NSTimeZone timeZoneForSecondsFromGMT:](NSTimeZone, "timeZoneForSecondsFromGMT:", 0));
  objc_msgSend(v5, "setTimeZone:", v6);

}

id sub_100036210(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "resetWarnings");
}

id sub_1000364E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setOn:animated:", 0, 1);
}

void sub_1000368E0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v1, "reloadData");

}

void sub_10003706C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100037084(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FBKContentItem fetchRequest](FBKContentItem, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[FBKContentItem unreadInboxPredicateWithTeam:](FBKContentItem, "unreadInboxPredicateWithTeam:", a1[4]));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)a1[5];
  v7 = 0;
  v5 = objc_msgSend(v4, "countForFetchRequest:error:", v2, &v7);
  v6 = v7;
  *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24) = v5;
  if (v6)
    *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24) = 0;

}

uint64_t start(int a1, char **a2)
{
  void *v4;
  objc_class *v5;
  NSString *v6;
  NSString *v7;
  uint64_t v8;

  v4 = objc_autoreleasePoolPush();
  v5 = (objc_class *)objc_opt_class(AppDelegate);
  v6 = NSStringFromClass(v5);
  v7 = (NSString *)objc_claimAutoreleasedReturnValue(v6);
  v8 = UIApplicationMain(a1, a2, 0, v7);

  objc_autoreleasePoolPop(v4);
  return v8;
}

uint64_t sub_100037978(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "deselectRowAtIndexPath:animated:", *(_QWORD *)(a1 + 40), 0);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

uint64_t sub_1000379B0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "deselectRowAtIndexPath:animated:", *(_QWORD *)(a1 + 40), 0);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_1000386EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100038708(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "loginManager"));
    v5 = objc_msgSend(v4, "loginState");

    if (v5 == (id)1)
      objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, &stru_1000E7588);
  }
}

void sub_100038798(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v1, "postNotificationName:object:", CFSTR("FBADidDismissLegalAgreementNotification"), 0);

}

void sub_100038E8C(id a1)
{
  FBADraftManager *v1;
  void *v2;

  v1 = objc_alloc_init(FBADraftManager);
  v2 = (void *)qword_100118128;
  qword_100118128 = (uint64_t)v1;

}

void sub_1000391A4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainViewController"));
  objc_msgSend(v2, "respondToUrlAction:", *(_QWORD *)(a1 + 40));

}

void sub_1000391E4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainViewController"));
  objc_msgSend(v2, "respondToUrlAction:", *(_QWORD *)(a1 + 40));

}

BOOL sub_1000394B0(id a1, FBKContentItem *a2)
{
  void *v2;
  BOOL v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[FBKContentItem formResponse](a2, "formResponse"));
  v3 = v2 != 0;

  return v3;
}

void sub_100039684(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[5];
  char v9;
  uint8_t buf[4];
  unsigned int v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formResponse"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "formResponse"));
    +[FBKDEDHelper cleanupBugSessionDirectoriesForForm:](FBKDEDHelper, "cleanupBugSessionDirectoriesForForm:", v3);

  }
  else
  {
    v4 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ID"));
      *(_DWORD *)buf = 67109120;
      v11 = objc_msgSend(v5, "intValue");
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "No form response for Draft Item with ID [%i]: Cannot cleanup BugSession", buf, 8u);

    }
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000397EC;
  v8[3] = &unk_1000E7610;
  v9 = *(_BYTE *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 32);
  v8[4] = *(_QWORD *)(a1 + 40);
  objc_msgSend(v6, "deleteDraftFromContentItem:completion:", v7, v8);

}

void sub_1000397EC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v3 = a2;
  if (v3)
  {
    v4 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_10009AB7C(v4, v5, v6, v7, v8, v9, v10, v11);

  }
  if (*(_BYTE *)(a1 + 40))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootController"));
    objc_msgSend(v12, "dismissSecondaryOrShowEmptyViewControllerAnimated:", 1);

  }
}

void sub_100039D44(id a1, UIAlertAction *a2)
{
  NSObject *v2;
  uint8_t v3[16];

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Discarding URL Action with attachments", v3, 2u);
  }

}

void sub_100039DB0(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "draftController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "attachments"));
  objc_msgSend(v3, "postAttachFiles:", v2);

}

void sub_100039E08(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[5];
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "draftController"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100039E90;
  v4[3] = &unk_1000E6378;
  v3 = *(void **)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  objc_msgSend(v2, "closeWithCompletion:", v4);

}

void sub_100039E90(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainViewController"));
  objc_msgSend(v2, "respondToUrlAction:", *(_QWORD *)(a1 + 40));

}

void sub_10003A284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10003A2A4(uint64_t a1)
{
  NSObject *v2;
  id result;

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_10009ABDC(a1, v2);

  result = objc_msgSend(*(id *)(a1 + 32), "endBackgroundTask:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = UIBackgroundTaskInvalid;
  return result;
}

void sub_10003A31C(uint64_t a1)
{
  NSObject *v2;
  int v3;
  _DWORD v4[2];

  objc_msgSend(*(id *)(a1 + 32), "endBackgroundTask:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = UIBackgroundTaskInvalid;
  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_DWORD *)(a1 + 48);
    v4[0] = 67109120;
    v4[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "finished saving FR [%d] when resigning active", (uint8_t *)v4, 8u);
  }

}

BOOL sub_10003A544(id a1, id a2)
{
  id v2;
  uint64_t v3;
  char isKindOfClass;

  v2 = a2;
  v3 = objc_opt_class(FBAMailboxesViewController);
  isKindOfClass = objc_opt_isKindOfClass(v2, v3);

  return isKindOfClass & 1;
}

double sub_10003A948(uint64_t a1, void *a2)
{
  double v2;
  double v3;

  v2 = *(double *)(a1 + 32);
  objc_msgSend(a2, "bounds");
  return fmin(v2, v3 + -100.0);
}

double sub_10003A9DC(uint64_t a1)
{
  double v1;

  objc_msgSend(*(id *)(a1 + 32), "preferredContentSize");
  return v1;
}

NSObject *sub_10003AA28()
{
  void *v0;
  NSObject *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  int v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v15;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSThread callStackSymbols](NSThread, "callStackSymbols"));
  if ((unint64_t)objc_msgSend(v0, "count") >= 2)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "objectAtIndexedSubscript:", 2));
    v3 = v2;
    if (!v2 || !objc_msgSend(v2, "length"))
      goto LABEL_18;
    v4 = v3;
    v15 = 0;
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", CFSTR("(^\\d+\\s+Feedback\\sAssistant\\s+[0-9A-F]x[0-9A-Fa-f]+\\s)(.*)(\\s\\+\\s\\d+)"), 16, &v15));
    v6 = v15;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "matchesInString:options:range:", v4, 0, 0, objc_msgSend(v4, "length")));
    v8 = v7;
    if (v6)
    {
      v9 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_10009AD80((uint64_t)v6, v9);

      v10 = 0;
      v1 = CFSTR("Unknown");
    }
    else
    {
      if (objc_msgSend(v7, "count") == (id)1)
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "lastObject"));
        v1 = objc_msgSend(v11, "rangeAtIndex:", 2);
        v13 = v12;

        if (v1 != 0x7FFFFFFFFFFFFFFFLL && (char *)v1 + v13 <= objc_msgSend(v4, "length"))
        {
          v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "substringWithRange:", v1, v13));
          v10 = 0;
          goto LABEL_17;
        }
      }
      else
      {
        v1 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
        if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
          sub_10009ACFC((uint64_t)v4, (uint64_t)v0, v1);

      }
      v10 = 1;
    }
LABEL_17:

    if (!v10)
    {
LABEL_19:

      goto LABEL_20;
    }
LABEL_18:
    v1 = CFSTR("Unknown");
    goto LABEL_19;
  }
  v1 = CFSTR("Unknown");
LABEL_20:

  return v1;
}

void sub_10003BA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003BA20(uint64_t a1, void *a2)
{
  id WeakRetained;
  id v4;

  v4 = a2;
  if (objc_msgSend(v4, "length") == (id)6)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(WeakRetained, "tryPin:", v4);

  }
}

void sub_10003BC10(uint64_t a1, int a2, double a3)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  if (a2)
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "navigationController"));
    v4 = objc_msgSend(v5, "popViewControllerAnimated:", 1);

  }
  else
  {
    LODWORD(a3) = 1.0;
    _objc_msgSend(v3, "showPINEntryUIWithFlags:inThrottleSeconds:", 1, a3);
  }
}

id sub_10003BE74(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showPINEntryUIWithFlags:", *(unsigned int *)(a1 + 40));
}

void sub_10003D7C4(uint64_t a1)
{
  void *v2;
  void *v3;
  void (**v4)(id, void *);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));

  if (v2)
  {
    v4 = (void (**)(id, void *))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", *(_QWORD *)(a1 + 40)));
    v4[2](v4, v3);

  }
}

void sub_10003D948(uint64_t a1)
{
  void *v2;
  void *v3;
  void (**v4)(id, void *);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));

  if (v2)
  {
    v4 = (void (**)(id, void *))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](NSSet, "set"));
    v4[2](v4, v3);

  }
}

void sub_10003DAF8(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(id, _QWORD);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));

  if (v2)
  {
    v11 = (void (**)(id, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));
    v11[2](v11, *(_QWORD *)(a1 + 40));

  }
  else
  {
    v3 = objc_claimAutoreleasedReturnValue(+[FBALog ded](FBALog, "ded"));
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_10009AF8C(v3, v4, v5, v6, v7, v8, v9, v10);

  }
}

void sub_10003DC44(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (**v12)(id, void *);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));

  if (v2)
  {
    v12 = (void (**)(id, void *))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](NSSet, "set"));
    v12[2](v12, v3);

  }
  else
  {
    v4 = objc_claimAutoreleasedReturnValue(+[FBALog ded](FBALog, "ded"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_10009AF8C(v4, v5, v6, v7, v8, v9, v10, v11);

  }
}

void sub_10003DEE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_10003DF14(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  id v4;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setLoading:", 0);

  v4 = objc_loadWeakRetained(v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "tableView"));
  objc_msgSend(v3, "reloadData");

}

void sub_10003DF74(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  id v4;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setLoading:", 0);

  v4 = objc_loadWeakRetained(v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "tableView"));
  objc_msgSend(v3, "reloadData");

}

uint64_t sub_10003E928(uint64_t a1)
{
  return a1 / 60;
}

id sub_10003E944(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = a1 / 60;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("After %lu minutes"), &stru_1000EA660, CFSTR("Plurals")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v3, v1));

  return v4;
}

void sub_10004040C(id a1, id a2, unint64_t a3, BOOL *a4)
{
  objc_msgSend(a2, "setAccessoryType:", 0, a4);
}

void sub_100040418(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "answer"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "values"));
  objc_msgSend(v3, "evaluateSelectionWithValues:", v4);

}

void sub_100041628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100041640(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100041650(uint64_t a1)
{

}

void sub_100041658(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "sortedArrayUsingComparator:", &stru_1000E7860));
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setExtensions:", v3);

}

int64_t sub_1000416AC(id a1, id a2, id a3)
{
  id v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "name"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "name"));

  v7 = objc_msgSend(v5, "localizedCaseInsensitiveCompare:", v6);
  return (int64_t)v7;
}

void sub_100041B3C(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  byte_100118148 = objc_msgSend(v1, "BOOLForKey:", CFSTR("SupportsBiometricsLock"));

}

void sub_100043060(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrollView"));
  objc_msgSend(v1, "setZoomScale:animated:", 0, 1.0);

}

void sub_100043520(_QWORD *a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "keyWindow"));

  if (v10)
  {
    objc_msgSend(v10, "frame");
    v4 = (v3 + -300.0) * 0.5;
    objc_msgSend(v10, "frame");
    v6 = objc_msgSend(objc_alloc((Class)UIButton), "initWithFrame:", v4, v5 + -40.0, 300.0, 40.0);
    objc_msgSend(v6, "setTitle:forState:", a1[4], 0);
    objc_msgSend(v6, "addTarget:action:forControlEvents:", a1[5], "openLink:", 64);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor secondaryLabelColor](UIColor, "secondaryLabelColor"));
    objc_msgSend(v6, "setBackgroundColor:", v7);

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "layer"));
    objc_msgSend(v8, "setZPosition:", 1.79769313e308);

    objc_msgSend(v6, "setAccessibilityIdentifier:", a1[6]);
    objc_msgSend(v6, "setAccessibilityTraits:", UIAccessibilityTraitButton);
    objc_msgSend(v6, "setAccessibilityLabel:", a1[6]);
    objc_msgSend(v10, "addSubview:", v6);

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v9, "removeObserver:", a1[5]);

}

void sub_100043964(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD block[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "reader"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "tableNames"));
  objc_msgSend(*(id *)(a1 + 32), "setTableNames:", v3);

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100043A04;
  block[3] = &unk_1000E61B8;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100043A04(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v1, "reloadData");

}

void sub_100044B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100044B5C(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  void *v7;
  NSObject *v8;
  id v9;
  uint8_t v10[16];

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  if (!WeakRetained
    || (v5 = WeakRetained,
        v6 = objc_loadWeakRetained(v2),
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "contentItem")),
        v7,
        v6,
        v5,
        !v7))
  {
    v8 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "iFBAFeedbackViewController has no content item, not updating with model changes.", v10, 2u);
    }

  }
  v9 = objc_loadWeakRetained(v2);
  objc_msgSend(v9, "handleModelChanges:", v3);

}

id sub_100045490(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a2;
  v4 = objc_opt_class(FBKFeedbackFollowup);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "feedback"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "feedback"));
    v8 = objc_msgSend(v5, "isEqual:", v7);

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

id sub_100045538(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a2;
  v4 = objc_opt_class(FBKFeedbackFollowup);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "feedback"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "feedback"));
    v8 = objc_msgSend(v5, "isEqual:", v7);

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

void sub_100045764(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v11[5];

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_10009B164();

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_LOAD_ERROR_TITLE"), &stru_1000EA660, 0));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_LOAD_ERROR_MESSAGE"), &stru_1000EA660, 0));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v4, v6, 1));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, FBKCommonStrings));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100045924;
  v11[3] = &unk_1000E61E0;
  v11[4] = *(_QWORD *)(a1 + 32);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v9, 1, v11));
  objc_msgSend(v7, "addAction:", v10);

  objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v7, 1, 0);
}

id sub_100045924(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void **v4;
  void (*v5)(uint64_t);
  void ***v6;
  void **v8;
  void **v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "launchAction"));
  v3 = objc_msgSend(v2, "isCaptive");

  v4 = *(void ***)(a1 + 32);
  if (v3)
  {
    v9 = _NSConcreteStackBlock;
    v5 = sub_1000459C4;
    v6 = &v9;
  }
  else
  {
    v8 = _NSConcreteStackBlock;
    v5 = sub_100045A10;
    v6 = &v8;
  }
  v6[1] = (void **)3221225472;
  v6[2] = (void **)v5;
  v6[3] = (void **)&unk_1000E61B8;
  v6[4] = v4;
  return objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, v8);
}

void sub_1000459C4(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "launchAction"));
  +[iFBKUtils exitCaptiveModeRemovingFromHomeScreen:](iFBKUtils, "exitCaptiveModeRemovingFromHomeScreen:", objc_msgSend(v1, "shouldMakeFBAVisible"));

}

void sub_100045A10(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "splitViewController"));
  objc_msgSend(v1, "dismissSecondaryOrShowEmptyViewControllerAnimated:", 1);

}

void sub_100045A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  NSObject *v6;
  void *v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  unsigned int v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  void *v15;
  _QWORD v16[5];
  _QWORD v17[4];
  NSObject *v18;
  _QWORD v19[4];
  NSObject *v20;
  id v21;
  uint8_t buf[4];
  unsigned int v23;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "feedback"));
  if (!v5)
  {
    v14 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_10009B190();

    goto LABEL_9;
  }
  if (a3)
  {
LABEL_9:
    objc_msgSend(*(id *)(a1 + 32), "hideSpinner");
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "refreshControl"));
    objc_msgSend(v15, "endRefreshing");

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    goto LABEL_10;
  }
  v6 = dispatch_group_create();
  dispatch_group_enter(v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100045CC4;
  v19[3] = &unk_1000E7A68;
  v21 = *(id *)(a1 + 40);
  v8 = v6;
  v20 = v8;
  objc_msgSend(v7, "getAllContentForFeedback:completion:", v5, v19);

  v9 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ID"));
    v11 = objc_msgSend(v10, "intValue");
    *(_DWORD *)buf = 67109120;
    v23 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Will fetch Feedback Status with ID [%i]", buf, 8u);

  }
  dispatch_group_enter(v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100045CF4;
  v17[3] = &unk_1000E7A90;
  v18 = v8;
  v13 = v8;
  objc_msgSend(v12, "fetchFeedbackStatusForFeedback:completion:", v5, v17);

  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100045CFC;
  v16[3] = &unk_1000E61B8;
  v16[4] = *(_QWORD *)(a1 + 32);
  dispatch_group_notify(v13, (dispatch_queue_t)&_dispatch_main_q, v16);

LABEL_10:
}

void sub_100045CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100045CF4(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100045CFC(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "updateEverything");
  objc_msgSend(*(id *)(a1 + 32), "hideSpinner");
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "refreshControl"));
  objc_msgSend(v2, "endRefreshing");

}

void sub_100046124(uint64_t a1)
{
  dispatch_time_t v2;
  id v3;
  uint64_t v4;
  _QWORD block[4];
  id v6;
  uint64_t v7;
  char v8;

  v2 = dispatch_time(0, 10000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000461C0;
  block[3] = &unk_1000E7638;
  v3 = *(id *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = v3;
  v7 = v4;
  v8 = *(_BYTE *)(a1 + 48);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);

}

id sub_1000461C0(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];
  char v4;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100046224;
  v3[3] = &unk_1000E6680;
  v1 = *(void **)(a1 + 32);
  v3[4] = *(_QWORD *)(a1 + 40);
  v4 = *(_BYTE *)(a1 + 48);
  return objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, v3);
}

id sub_100046224(uint64_t a1)
{
  void *v1;
  _QWORD v3[4];
  char v4;

  v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100046284;
  v3[3] = &unk_1000E6550;
  v4 = *(_BYTE *)(a1 + 40);
  return objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 0, v3);
}

id sub_100046284(uint64_t a1)
{
  return +[iFBKUtils exitCaptiveModeRemovingFromHomeScreen:](iFBKUtils, "exitCaptiveModeRemovingFromHomeScreen:", *(unsigned __int8 *)(a1 + 32));
}

void sub_1000470D8(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSDateFormatter);
  v2 = (void *)qword_100118150;
  qword_100118150 = (uint64_t)v1;

  objc_msgSend((id)qword_100118150, "setDateStyle:", 3);
  _objc_msgSend((id)qword_100118150, "setTimeStyle:", 0);
}

void sub_100047610(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint64_t v13;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSOperationQueue mainQueue](NSOperationQueue, "mainQueue"));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000476D4;
  v10[3] = &unk_1000E7B40;
  v11 = v5;
  v12 = v6;
  v13 = *(_QWORD *)(a1 + 32);
  v8 = v6;
  v9 = v5;
  objc_msgSend(v7, "addOperationWithBlock:", v10);

}

id sub_1000476D4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD v13[5];

  if (*(_QWORD *)(a1 + 32) && !*(_QWORD *)(a1 + 40))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    v11 = *(_QWORD *)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1000478C4;
    v13[3] = &unk_1000E7768;
    v13[4] = *(_QWORD *)(a1 + 48);
    objc_msgSend(v7, "openURL:options:completionHandler:", v11, &__NSDictionary0__struct, v13);
  }
  else
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v3 = FBKCommonStrings;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("FILE_DOWNLOAD_ERROR_TITLE"), &stru_1000EA660, FBKCommonStrings));
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("FILE_DOWNLOAD_ERROR_MESSAGE"), &stru_1000EA660, v3));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v4, v6, 1));

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, v3));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v9, 0, &stru_1000E7B18));
    objc_msgSend(v7, "addAction:", v10);

    objc_msgSend(*(id *)(a1 + 48), "presentViewController:animated:completion:", v7, 1, 0);
    objc_msgSend(*(id *)(a1 + 48), "setFileDownloadInProgress:", 0);
  }

  return objc_msgSend(*(id *)(a1 + 48), "hideSpinner");
}

id sub_1000478C4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setFileDownloadInProgress:", 0);
}

id sub_100047F78(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];

  v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100047FD0;
  v3[3] = &unk_1000E61B8;
  v3[4] = v1;
  return objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, v3);
}

id sub_100047FD0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSegueWithIdentifier:sender:", CFSTR("FBAUnsolicitedFollowupResponsePresentation"), 0);
}

id sub_100047FE8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "copyFeedbackID");
}

id sub_100047FF0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "copyFeedbackIDAndTitle");
}

void sub_100047FF8(uint64_t a1)
{
  void *v2;
  void *v3;
  unsigned int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  FBAPartialSheetNavigationController *v13;
  void *v14;
  NSString *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "user"));
  v4 = objc_msgSend(v3, "hasManyManagedTeams");

  if (v4)
  {
    v21 = (id)objc_claimAutoreleasedReturnValue(+[UIStoryboard storyboardWithName:bundle:](UIStoryboard, "storyboardWithName:bundle:", CFSTR("Teams"), 0));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "instantiateViewControllerWithIdentifier:", CFSTR("FBATeamPickerController")));
    objc_msgSend(v5, "setShowsDismissButton:", 1);
    objc_msgSend(v5, "setPickerDelegate:", *(_QWORD *)(a1 + 32));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "singleTeam"));
    objc_msgSend(v5, "setSelectedTeam:", v7);

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "user"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "activeManagedTeams"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[FBKTeam sortDescriptors](FBKTeam, "sortDescriptors"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "sortedArrayUsingDescriptors:", v11));
    objc_msgSend(v5, "setTeams:", v12);

    v13 = -[FBAPartialSheetNavigationController initWithRootViewController:]([FBAPartialSheetNavigationController alloc], "initWithRootViewController:", v5);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
    v15 = (NSString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "preferredContentSizeCategory"));
    -[FBAPartialSheetNavigationController setDetentBehavior:](v13, "setDetentBehavior:", UIContentSizeCategoryIsAccessibilityCategory(v15));

    -[FBAPartialSheetNavigationController setModalPresentationStyle:](v13, "setModalPresentationStyle:", 7);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationItem"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "rightBarButtonItem"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(-[FBAPartialSheetNavigationController presentationController](v13, "presentationController"));
    objc_msgSend(v18, "setBarButtonItem:", v17);

    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v13, 1, 0);
  }
  else
  {
    v19 = *(void **)(a1 + 32);
    v21 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "contentItem"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "user"));
    v13 = (FBAPartialSheetNavigationController *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "managedTeams"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(-[FBAPartialSheetNavigationController anyObject](v13, "anyObject"));
    objc_msgSend(v19, "promoteIndividualFeedbackToTeam:", v20);

  }
}

id sub_100048258(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "demoteIndividualFeedbackToOriginator");
}

id sub_100048260(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSegueWithIdentifier:sender:", CFSTR("AssignSingleFeedbackPresentation"), 0);
}

void sub_100048278(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "contentItem"));
  objc_msgSend(v1, "didTapCloseFeedbackWithItem:atIndexPath:", v2, 0);

}

void sub_100048ED8(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  uint8_t v4[16];

  v2 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "performing batch updates during size change", v4, 2u);
  }

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v3, "performBatchUpdates:completion:", &stru_1000E7B88, &stru_1000E7BA8);

}

void sub_100049208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100049244(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id WeakRetained;
  id v11;
  uint64_t v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    v11 = objc_loadWeakRetained((id *)(a1 + 40));
    v12 = *(_QWORD *)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_100049368;
    v13[3] = &unk_1000E7BD0;
    objc_copyWeak(&v16, (id *)(a1 + 40));
    v14 = *(id *)(a1 + 32);
    v15 = v9;
    objc_msgSend(v11, "_confirmFilePromiseDeletionWithStub:deletionHandler:", v12, v13);

    objc_destroyWeak(&v16);
  }

}

void sub_100049354(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100049368(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "_deleteFilePromise:completionHandler:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_10004947C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  objc_msgSend(*(id *)(a1 + 32), "hideAttachmentDeletionSpinner");
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v3 = v4;
  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "showAttachmentDeletionErrorAlertWithError:", v4);
    v3 = v4;
  }

}

void sub_10004971C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  NSObject *v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "feedback"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "formResponseStub"));

  v4 = *(id *)(a1 + 40);
  v5 = v4;
  if (!v3)
  {
    v6 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_10009B29C();
    goto LABEL_8;
  }
  if (!v4)
  {
    v6 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_10009B2C8();
LABEL_8:

    objc_msgSend(*(id *)(a1 + 32), "showAttachmentDeletionErrorAlert");
    goto LABEL_9;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
LABEL_9:

}

void sub_100049E98(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD v6[5];
  void *v7;

  objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
  v7 = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v7, 1));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100049F94;
  v6[3] = &unk_1000E7248;
  v5 = *(_QWORD *)(a1 + 40);
  v6[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "promoteFeedback:toTeam:completion:", v4, v5, v6);

}

void sub_100049F94(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[5];

  v3 = a2;
  if (v3)
  {
    v4 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_10009B2F4(a1, v3);

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_MOVE_ERROR_TITLE"), &stru_1000EA660, 0));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_MOVE_ERROR_MESSAGE"), &stru_1000EA660, 0));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v6, v8, 1));

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, FBKCommonStrings));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10004A194;
    v14[3] = &unk_1000E61E0;
    v14[4] = *(_QWORD *)(a1 + 32);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v11, 1, v14));
    objc_msgSend(v9, "addAction:", v12);

    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v9, 1, 0);
  }
  else
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "splitViewController"));
    objc_msgSend(v13, "dismissSecondaryOrShowEmptyViewControllerAnimated:", 1);

  }
}

id sub_10004A194(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
}

id sub_10004A1A4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_10004A514(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v5[5];
  void *v6;

  objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[FBKData sharedInstance](FBKData, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
  v6 = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10004A610;
  v5[3] = &unk_1000E7248;
  v5[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "demoteFeedback:completion:", v4, v5);

}

void sub_10004A610(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[5];

  v3 = a2;
  if (v3)
  {
    v4 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_10009B3A4(a1, v3);

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_MOVE_ERROR_TITLE"), &stru_1000EA660, 0));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_MOVE_ERROR_MESSAGE"), &stru_1000EA660, 0));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v6, v8, 1));

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, FBKCommonStrings));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10004A810;
    v14[3] = &unk_1000E61E0;
    v14[4] = *(_QWORD *)(a1 + 32);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v11, 1, v14));
    objc_msgSend(v9, "addAction:", v12);

    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v9, 1, 0);
  }
  else
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "splitViewController"));
    objc_msgSend(v13, "dismissSecondaryOrShowEmptyViewControllerAnimated:", 1);

  }
}

id sub_10004A810(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
}

id sub_10004A820(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_10004A9E4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v3 = a2;
  if (v3)
  {
    v4 = objc_claimAutoreleasedReturnValue(+[FBALog appHandle](FBALog, "appHandle"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_10009B3A4(a1, v3);

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_ASSIGN_ERROR_TITLE"), &stru_1000EA660, 0));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("FEEDBACK_ASSIGN_ERROR_MESSAGE"), &stru_1000EA660, 0));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v6, v8, 1));

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_1000EA660, FBKCommonStrings));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v11, 1, &stru_1000E7C38));
    objc_msgSend(v9, "addAction:", v12);

    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v9, 1, 0);
  }

}

void sub_10004AD84(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id sub_10004ADB0(void *a1, const char *a2)
{
  return objc_msgSend(a1, "unsignedIntegerValue");
}

id sub_10004ADB8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id result;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, "authorizationStatus");
  if (!result)
  {
    sub_10004BB58();
    v13 = (void *)static OS_dispatch_queue.main.getter();
    v14 = swift_allocObject(&unk_1000E7E80, 24, 7);
    *(_QWORD *)(v14 + 16) = a2;
    aBlock[4] = sub_10004BB94;
    v23 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008F5C0;
    aBlock[3] = &unk_1000E7E98;
    v15 = _Block_copy(aBlock);
    v16 = v23;
    v17 = a2;
    v18 = swift_release(v16);
    static DispatchQoS.unspecified.getter(v18);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v19 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = sub_10004BB9C((uint64_t *)&unk_100116980);
    v21 = sub_10004BBDC();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v4, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

void sub_10004AFAC(void *a1)
{
  void *v2;
  _QWORD v3[6];

  v3[4] = FBAMailboxesViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:);
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10004B038;
  v3[3] = &unk_1000E7EC0;
  v2 = _Block_copy(v3);
  objc_msgSend(a1, "requestAuthorizationWithOptions:completionHandler:", 7, v2);
  _Block_release(v2);
}

void sub_10004B038(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_10004B098(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t variable initialization expression of FBACustomBehavior.isCaptive()
{
  return 0;
}

uint64_t variable initialization expression of FBACustomBehavior.answers()
{
  return 0;
}

void type metadata accessor for LogicalType(uint64_t a1)
{
  sub_10004C190(a1, &qword_100115ED0, (uint64_t)&unk_1000E7D70);
}

void type metadata accessor for FBKFilerFormType(uint64_t a1)
{
  sub_10004C190(a1, &qword_100115ED8, (uint64_t)&unk_1000E7D90);
}

uint64_t sub_10004B214(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 sub_10004B248(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_10004B254(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10004B274(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_10004C190(a1, &qword_100115EE0, (uint64_t)&unk_1000E7E08);
}

uint64_t sub_10004B2B4(uint64_t a1, uint64_t a2)
{
  return sub_10004B608(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_10004B2D4(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_10004B2DC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_10004B2F0(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_10004B304(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_10004B318(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

NSNumber sub_10004B32C()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_10004B334(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static Int._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v6;
  v5 = v7;
  if (v7)
    v4 = 0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_10004B384(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static Int._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v7;
  v5 = v8;
  if (v8)
    v4 = 0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return v3 & 1;
}

uint64_t sub_10004B3D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static Int._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

NSNumber sub_10004B3FC()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_10004B404(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static CGFloat._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_10004B454(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_10004B4A8(double *a1@<X8>)
{
  *a1 = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10004B4CC(uint64_t a1, uint64_t a2)
{
  return sub_10004B608(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10004B4D8(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_10004B54C(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_10004B5C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

uint64_t sub_10004B608(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_10004B644(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10004B684(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

void sub_10004B6F4(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_10004B700(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_10004B734@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10004B740(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_10004B7CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10004BD78(&qword_1001160F0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1000CC39C);
  v3 = sub_10004BD78(&qword_1001160F8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1000CC2F0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10004B850(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10004BD78(&qword_100116078, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_1000CC11C);
  v3 = sub_10004BD78(&qword_100116080, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_1000CC0BC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Int);
}

_QWORD *sub_10004B8E4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

double sub_10004B8F4@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_10004B900(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = sub_10004BD78(&qword_1001160A8, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1000CBD90);
  v3 = sub_10004BD78(&qword_1001160B0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1000CBD30);
  v4 = sub_10004C138();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, v4);
}

uint64_t sub_10004B9A0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10004B9C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10004BD78(&qword_100116088, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1000CC1AC);
  v3 = sub_10004BD78(&qword_100116090, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1000CBFA8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10004BA4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10004BD78(&qword_1001160C0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000CBC38);
  v3 = sub_10004BD78(&qword_1001160C8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000CBBD8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10004BAD0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_10004BB14()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10004BB38(void *a1)
{
  uint64_t v1;

  return sub_10004ADB8(a1, *(void **)(v1 + 16));
}

uint64_t sub_10004BB40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004BB50(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10004BB58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116970;
  if (!qword_100116970)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100116970);
  }
  return result;
}

void sub_10004BB94()
{
  uint64_t v0;

  sub_10004AFAC(*(void **)(v0 + 16));
}

uint64_t sub_10004BB9C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_10004BBDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100115FC0;
  if (!qword_100115FC0)
  {
    v1 = sub_10004BC28((uint64_t *)&unk_100116980);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100115FC0);
  }
  return result;
}

uint64_t sub_10004BC28(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
  sub_10004C190(a1, &qword_100115FC8, (uint64_t)&unk_1000E7EF8);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_10004C190(a1, &qword_100115FD0, (uint64_t)&unk_1000E7F20);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_10004C190(a1, &qword_100115FD8, (uint64_t)&unk_1000E7F48);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_10004C190(a1, &qword_100115FE0, (uint64_t)&unk_1000E7F70);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_10004C190(a1, &qword_100115FE8, (uint64_t)&unk_1000E7F98);
}

__n128 initializeWithTake for SimpleError(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10004BCDC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10004BCFC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_10004C190(a1, &qword_100115FF0, (uint64_t)&unk_1000E8018);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_10004C190(a1, &qword_100115FF8, (uint64_t)&unk_1000E8098);
}

uint64_t sub_10004BD4C()
{
  return sub_10004BD78(&qword_100116000, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000CBB9C);
}

uint64_t sub_10004BD78(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004BDB8()
{
  return sub_10004BD78(&qword_100116008, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000CBB70);
}

uint64_t sub_10004BDE4()
{
  return sub_10004BD78(&qword_100116010, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000CBC0C);
}

uint64_t sub_10004BE10()
{
  return sub_10004BD78(&qword_100116018, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1000CBCF4);
}

uint64_t sub_10004BE3C()
{
  return sub_10004BD78(&qword_100116020, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1000CBCC8);
}

uint64_t sub_10004BE68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10004BD78((unint64_t *)&qword_100116098, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000CC1F0);
  v3 = sub_10004BD78(&qword_1001160A0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000CBE88);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10004BEEC()
{
  _QWORD *v0;

  return Int.hashValue.getter(*v0);
}

void sub_10004BEF4()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

uint64_t sub_10004BF1C(uint64_t a1)
{
  _QWORD *v1;

  return static Hasher._hash(seed:_:)(a1, *v1);
}

uint64_t sub_10004BF24()
{
  double *v0;

  return Double.hashValue.getter(*v0);
}

void sub_10004BF2C()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;

  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_10004BF5C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:_:)(a1, v2);
}

BOOL sub_10004BF6C(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10004BF80()
{
  return sub_10004BD78(&qword_100116028, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1000CBD64);
}

uint64_t sub_10004BFAC()
{
  return sub_10004BD78(&qword_100116030, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000CBE4C);
}

uint64_t sub_10004BFD8()
{
  return sub_10004BD78(&qword_100116038, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000CBE20);
}

uint64_t sub_10004C004()
{
  return sub_10004BD78(&qword_100116040, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1000CBF6C);
}

uint64_t sub_10004C030()
{
  return sub_10004BD78(&qword_100116048, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1000CBF40);
}

uint64_t sub_10004C05C()
{
  return sub_10004BD78(&qword_100116050, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_1000CC080);
}

uint64_t sub_10004C088()
{
  return sub_10004BD78(&qword_100116058, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_1000CC054);
}

uint64_t sub_10004C0B4()
{
  return sub_10004BD78(&qword_100116060, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_1000CC0F0);
}

uint64_t sub_10004C0E0()
{
  return sub_10004BD78(&qword_100116068, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1000CBFDC);
}

uint64_t sub_10004C10C()
{
  return sub_10004BD78(&qword_100116070, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000CBEBC);
}

unint64_t sub_10004C138()
{
  unint64_t result;

  result = qword_1001160B8;
  if (!qword_1001160B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1001160B8);
  }
  return result;
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_10004C190(a1, &qword_1001160D0, (uint64_t)&unk_1000E80C0);
}

void sub_10004C190(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_10004C1D4()
{
  return sub_10004BD78(&qword_1001160D8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1000CC2B4);
}

uint64_t sub_10004C200()
{
  return sub_10004BD78(&qword_1001160E0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1000CC288);
}

uint64_t sub_10004C22C()
{
  return sub_10004BD78(&qword_1001160E8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1000CC324);
}

_QWORD *sub_10004C290(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[1];
    if (v7)
    {
      v8 = a2[2];
      v4[1] = v7;
      v4[2] = v8;
      swift_retain(v8);
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    }
    v10 = *(int *)(a3 + 24);
    v11 = (_QWORD *)((char *)v4 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    v13 = sub_10004BB9C(&qword_100116280);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = v11;
      v16 = v13;
      v17 = 1;
    }
    else
    {
      v18 = *v12;
      *v11 = *v12;
      swift_retain(v18);
      v15 = v11;
      v16 = v13;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return v4;
}

uint64_t sub_10004C398(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 8))
    swift_release(*(_QWORD *)(a1 + 16));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v5 = sub_10004BB9C(&qword_100116280);
  if (swift_getEnumCaseMultiPayload(v4, v5) != 1)
    return swift_release(*v4);
  v6 = type metadata accessor for ColorScheme(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

uint64_t sub_10004C418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    swift_retain(v7);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  v8 = *(int *)(a3 + 24);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = sub_10004BB9C(&qword_100116280);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = 1;
  }
  else
  {
    v14 = *v10;
    *v9 = *v10;
    swift_retain(v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v13);
  return a1;
}

uint64_t sub_10004C4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = (_OWORD *)(a1 + 8);
  v8 = (_OWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v7)
    {
      v9 = *(_QWORD *)(a2 + 16);
      v10 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = v9;
      swift_retain(v9);
      swift_release(v10);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 16));
  }
  else if (v7)
  {
    v11 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v11;
    swift_retain(v11);
    goto LABEL_8;
  }
  *v6 = *v8;
LABEL_8:
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)(a1 + v12);
    v14 = (uint64_t *)(a2 + v12);
    sub_10004F588(a1 + v12, &qword_100116280);
    v15 = sub_10004BB9C(&qword_100116280);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      v18 = *v14;
      *v13 = *v14;
      swift_retain(v18);
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  return a1;
}

uint64_t sub_10004C610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_10004BB9C(&qword_100116280);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10004C6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = (_OWORD *)(a1 + 8);
  v8 = (_OWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v7)
    {
      v9 = *(_QWORD *)(a2 + 16);
      v10 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = v9;
      swift_release(v10);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 16));
  }
  else if (v7)
  {
    v11 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v11;
    goto LABEL_8;
  }
  *v6 = *v8;
LABEL_8:
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_10004F588(a1 + v12, &qword_100116280);
    v15 = sub_10004BB9C(&qword_100116280);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10004C7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004C804);
}

uint64_t sub_10004C804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_10004BB9C(&qword_100116288);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_10004C890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004C89C);
}

uint64_t sub_10004C89C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_10004BB9C(&qword_100116288);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for FBANotEnrolledView(uint64_t a1)
{
  uint64_t result;

  result = qword_1001162E8;
  if (!qword_1001162E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FBANotEnrolledView);
  return result;
}

void sub_10004C950(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_1000CC438;
  v4[1] = &unk_1000CC450;
  sub_10004C9CC(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_10004C9CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1001162F8)
  {
    v2 = type metadata accessor for ColorScheme(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1001162F8);
  }
}

uint64_t sub_10004CA20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DA888, 1);
}

BOOL sub_10004CA30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10004CA48()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10004CA8C()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10004CAB4(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_10004CAF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v4 = sub_10004BB9C(&qword_100116330);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004BB9C(&qword_100116338);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v8);
  *((_QWORD *)v6 + 1) = 0x4030000000000000;
  v6[16] = 0;
  v11 = sub_10004BB9C(&qword_100116340);
  v12 = sub_10004CC74(v2, &v6[*(int *)(v11 + 44)]);
  LOBYTE(v2) = static Edge.Set.top.getter(v12);
  sub_10004F544((uint64_t)v6, (uint64_t)v10, &qword_100116330);
  v13 = &v10[*(int *)(v7 + 36)];
  *v13 = v2;
  *(_OWORD *)(v13 + 8) = 0u;
  *(_OWORD *)(v13 + 24) = 0u;
  v13[40] = 1;
  v14 = sub_10004F588((uint64_t)v6, &qword_100116330);
  v15 = static Alignment.center.getter(v14);
  sub_100094D00(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v15, v16);
  return sub_10004F588((uint64_t)v10, &qword_100116338);
}

uint64_t sub_10004CC74@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char v67[16];
  uint64_t v68;

  v59 = sub_10004BB9C(&qword_100116348);
  v64 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_10004BB9C(&qword_100116350);
  v6 = __chkstk_darwin(v63);
  v61 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v62 = (char *)&v57 - v9;
  __chkstk_darwin(v8);
  v60 = (char *)&v57 - v10;
  v11 = sub_10004BB9C(&qword_100116358);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v57 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v57 - v20;
  v68 = a1;
  v22 = static Axis.Set.vertical.getter(v19);
  v23 = sub_10004BB9C(&qword_100116360);
  v24 = sub_10004D550();
  ScrollView.init(_:showsIndicators:content:)(v22, 1, sub_10004D548, v67, v23, v24);
  v58 = v12;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v21, v18, v11);
  v26 = *(_QWORD *)(a1 + 8);
  v25 = *(_QWORD *)(a1 + 16);
  v65 = v15;
  v66 = a2;
  if (v26)
  {
    v27 = swift_allocObject(&unk_1000E81C0, 32, 7);
    *(_QWORD *)(v27 + 16) = v26;
    *(_QWORD *)(v27 + 24) = v25;
    v28 = sub_10004D5F8;
  }
  else
  {
    v27 = 0;
    v28 = FBAMailboxesViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:);
  }
  v29 = swift_allocObject(&unk_1000E8198, 32, 7);
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v27;
  __chkstk_darwin(v29);
  *(&v57 - 2) = a1;
  sub_10004D620(v26, v25);
  v30 = Button.init(action:label:)(sub_10004D5F8, v29, sub_10004D618, &v57 - 4, &type metadata for Text, &protocol witness table for Text);
  v31 = static Edge.Set.leading.getter(v30);
  v32 = static Edge.Set.bottom.getter();
  v33 = static Edge.Set.trailing.getter();
  v34 = Edge.Set.init(rawValue:)(0);
  v35 = Edge.Set.init(rawValue:)(v34);
  if (Edge.Set.init(rawValue:)(v35 & v31) != v31)
    v34 = Edge.Set.init(rawValue:)(v34 | v31);
  v36 = Edge.Set.init(rawValue:)(v34);
  if (Edge.Set.init(rawValue:)(v36 & v32) != v32)
    v34 = Edge.Set.init(rawValue:)(v34 | v32);
  v38 = (uint64_t)v60;
  v37 = (uint64_t)v61;
  v39 = v59;
  v40 = Edge.Set.init(rawValue:)(v34);
  v41 = v11;
  v42 = v21;
  v43 = v5;
  if (Edge.Set.init(rawValue:)(v40 & v33) != v33)
    LOBYTE(v34) = Edge.Set.init(rawValue:)(v34 | v33);
  v44 = v58;
  v45 = v64;
  v46 = (uint64_t)v62;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v62, v43, v39);
  v47 = v46 + *(int *)(v63 + 36);
  *(_BYTE *)v47 = v34;
  *(_OWORD *)(v47 + 8) = 0u;
  *(_OWORD *)(v47 + 24) = 0u;
  *(_BYTE *)(v47 + 40) = 1;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v39);
  sub_10004F500(v46, v38, &qword_100116350);
  v48 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v49 = v65;
  v50 = v42;
  v51 = v42;
  v52 = v41;
  v48(v65, v51, v41);
  sub_10004F544(v38, v37, &qword_100116350);
  v53 = v66;
  v48(v66, v49, v52);
  v54 = sub_10004BB9C(&qword_100116380);
  sub_10004F544(v37, (uint64_t)&v53[*(int *)(v54 + 48)], &qword_100116350);
  sub_10004F588(v38, &qword_100116350);
  v55 = *(void (**)(char *, uint64_t))(v44 + 8);
  v55(v50, v52);
  sub_10004F588(v37, &qword_100116350);
  return ((uint64_t (*)(char *, uint64_t))v55)(v49, v52);
}

uint64_t sub_10004D0BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;

  v40 = a2;
  v3 = type metadata accessor for FBANotEnrolledView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_10004BB9C(&qword_100116388);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v38 - v11;
  v13 = sub_10004BB9C(&qword_100116378);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10004BB9C(&qword_100116360);
  v16 = __chkstk_darwin(v38);
  v39 = (uint64_t)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v15 = static HorizontalAlignment.center.getter(v16);
  *((_QWORD *)v15 + 1) = 0x4030000000000000;
  v15[16] = 0;
  v18 = &v15[*(int *)(sub_10004BB9C(&qword_100116390) + 44)];
  v41 = sub_100050010();
  sub_10004F35C(a1, (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FBANotEnrolledView);
  v19 = *(unsigned __int8 *)(v4 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_1000E81E8, v20 + v5, v19 | 7);
  sub_10004EBB4((uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
  v22 = sub_10004BB9C(&qword_100116398);
  v23 = sub_10004F6D8(&qword_1001163A0, &qword_100116398, (uint64_t)&protocol conformance descriptor for [A]);
  v24 = sub_10004EC58();
  v25 = sub_10004BD78(&qword_1001163B0, type metadata accessor for FBAProgramEnrollmentOffer, (uint64_t)&unk_1000CC6F8);
  ForEach<>.init(_:content:)(&v41, sub_10004EBF8, v21, v22, &type metadata for String, &type metadata for FBANotEnrolledProgramCell, v23, v24, v25);
  v26 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v26(v10, v12, v6);
  *(_QWORD *)v18 = 0x4050000000000000;
  v27 = sub_10004BB9C(&qword_1001163B8);
  v26(&v18[*(int *)(v27 + 48)], v10, v6);
  v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  v28(v12, v6);
  v29 = ((uint64_t (*)(char *, uint64_t))v28)(v10, v6);
  v30 = static Edge.Set.leading.getter(v29);
  v31 = static Edge.Set.trailing.getter();
  v32 = Edge.Set.init(rawValue:)(0);
  v33 = Edge.Set.init(rawValue:)(v32);
  if (Edge.Set.init(rawValue:)(v33 & v30) != v30)
    v32 = Edge.Set.init(rawValue:)(v32 | v30);
  v34 = Edge.Set.init(rawValue:)(v32);
  if (Edge.Set.init(rawValue:)(v34 & v31) != v31)
    LOBYTE(v32) = Edge.Set.init(rawValue:)(v32 | v31);
  v35 = v39;
  sub_10004F544((uint64_t)v15, v39, &qword_100116378);
  v36 = v35 + *(int *)(v38 + 36);
  *(_BYTE *)v36 = v32;
  *(_OWORD *)(v36 + 8) = 0u;
  *(_OWORD *)(v36 + 24) = 0u;
  *(_BYTE *)(v36 + 40) = 1;
  sub_10004F588((uint64_t)v15, &qword_100116378);
  return sub_10004F500(v35, v40, &qword_100116360);
}

uint64_t sub_10004D428@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  if ((*a1 & 1) != 0)
  {
    v3 = 0x80000001000D4920;
    v4 = 0xD000000000000019;
  }
  else
  {
    v4 = 0x6E452074276E6F44;
    v3 = 0xEC0000006C6C6F72;
  }
  v5 = LocalizedStringKey.init(stringLiteral:)(v4, v3);
  v6 = Text.init(_:tableName:bundle:comment:)(v5);
  v8 = v7;
  v10 = v9;
  v12 = v11 & 1;
  v13 = Text.bold()();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  sub_10004D630(v6, v8, v12);
  result = swift_bridgeObjectRelease(v10);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v17 & 1;
  *(_QWORD *)(a2 + 24) = v19;
  return result;
}

uint64_t sub_10004D52C()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10004D548@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004D0BC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10004D550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116368;
  if (!qword_100116368)
  {
    v1 = sub_10004BC28(&qword_100116360);
    sub_10004F6D8(&qword_100116370, &qword_100116378, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100116368);
  }
  return result;
}

uint64_t sub_10004D5D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004D5F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10004D618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004D428(*(_BYTE **)(v1 + 16), a1);
}

uint64_t sub_10004D620(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_10004D630(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_10004D640@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t KeyPath;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  _BYTE v72[7];
  char v73;
  _BYTE v74[7];
  char v75;
  _BYTE v76[7];
  char v77;
  _BYTE v78[7];
  char v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;

  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Image.init(_:bundle:)(0x2D736F692D616266, 0xEB00000000383231, 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  v70 = Image.resizable(capInsets:resizingMode:)(v7, v8, 0.0, 0.0, 0.0, 0.0);
  swift_release(v8);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10 = static Alignment.center.getter(v9);
  _FrameLayout.init(width:height:alignment:)(&v80, *(_QWORD *)&a2, 0, *(_QWORD *)&a2, 0, v10, v11);
  v66 = v80;
  v65 = v81;
  v67 = v82;
  v64 = v83;
  v68 = v85;
  v69 = v84;
  v12 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000012, 0x80000001000D4950);
  v13 = Text.init(_:tableName:bundle:comment:)(v12);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  v20 = static Font.title.getter();
  v21 = Text.font(_:)(v20, v13, v15, v19, v17);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  swift_release(v20);
  v28 = v25 & 1;
  sub_10004D630(v13, v15, v19);
  v29 = swift_bridgeObjectRelease(v17);
  v30 = static Font.Weight.semibold.getter(v29);
  v62 = Text.fontWeight(_:)(*(_QWORD *)&v30, 0, v21, v23, v28, v27);
  v61 = v31;
  v63 = v32;
  LOBYTE(v20) = v33 & 1;
  sub_10004D630(v21, v23, v28);
  swift_bridgeObjectRelease(v27);
  v34 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000033, 0x80000001000D4970);
  v35 = Text.init(_:tableName:bundle:comment:)(v34);
  v37 = v36;
  v39 = v38;
  v41 = v40 & 1;
  v42 = static Font.body.getter();
  v43 = Text.font(_:)(v42, v35, v37, v41, v39);
  v45 = v44;
  LOBYTE(v21) = v46;
  v60 = v47;
  swift_release(v42);
  LOBYTE(v42) = v21 & 1;
  sub_10004D630(v35, v37, v41);
  swift_bridgeObjectRelease(v39);
  KeyPath = swift_getKeyPath(&unk_1000CC640);
  v71 = v20;
  v49 = v65;
  v79 = v65;
  v50 = v64;
  v77 = v64;
  v75 = v20;
  v73 = v21 & 1;
  v51 = v70;
  v52 = v66;
  *(_QWORD *)a1 = v70;
  *(_QWORD *)(a1 + 8) = v52;
  *(_BYTE *)(a1 + 16) = v49;
  *(_DWORD *)(a1 + 17) = *(_DWORD *)v78;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)&v78[3];
  *(_QWORD *)(a1 + 24) = v67;
  *(_BYTE *)(a1 + 32) = v50;
  LODWORD(v52) = *(_DWORD *)v76;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)&v76[3];
  *(_DWORD *)(a1 + 33) = v52;
  v53 = v68;
  *(_QWORD *)(a1 + 40) = v69;
  *(_QWORD *)(a1 + 48) = v53;
  v54 = v62;
  v55 = v61;
  *(_QWORD *)(a1 + 56) = v62;
  *(_QWORD *)(a1 + 64) = v55;
  *(_BYTE *)(a1 + 72) = v20;
  LODWORD(v53) = *(_DWORD *)v74;
  *(_DWORD *)(a1 + 76) = *(_DWORD *)&v74[3];
  *(_DWORD *)(a1 + 73) = v53;
  v56 = v63;
  *(_QWORD *)(a1 + 80) = v63;
  *(_QWORD *)(a1 + 88) = v43;
  *(_QWORD *)(a1 + 96) = v45;
  *(_BYTE *)(a1 + 104) = v21 & 1;
  LODWORD(v53) = *(_DWORD *)v72;
  *(_DWORD *)(a1 + 108) = *(_DWORD *)&v72[3];
  *(_DWORD *)(a1 + 105) = v53;
  v57 = v60;
  *(_QWORD *)(a1 + 112) = v60;
  *(_QWORD *)(a1 + 120) = KeyPath;
  *(_BYTE *)(a1 + 128) = 1;
  v58 = v51;
  swift_retain(v51);
  sub_10004F47C(v54, v55, v20);
  swift_bridgeObjectRetain(v56);
  sub_10004F47C(v43, v45, v42);
  swift_bridgeObjectRetain(v57);
  swift_retain(KeyPath);
  sub_10004D630(v43, v45, v42);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v57);
  sub_10004D630(v54, v55, v71);
  swift_release(v58);
  return swift_bridgeObjectRelease(v56);
}

uint64_t sub_10004DAB4@<X0>(uint64_t a1@<X8>)
{
  double *v1;

  return sub_10004D640(a1, *v1);
}

void sub_10004DABC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSURL *v11;
  void *v12;
  void *v13;
  unint64_t v14;
  Class isa;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  _QWORD aBlock[5];
  _QWORD *v21;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, (uint64_t)a1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_destination, v6);
  URL._bridgeToObjectiveC()(v11);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = sub_10007B1C0((uint64_t)&_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_10004BD78(&qword_1001160F0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1000CC39C);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_1000E8370, 40, 7);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  aBlock[4] = sub_10004F640;
  v21 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004E98C;
  aBlock[3] = &unk_1000E8388;
  v17 = _Block_copy(aBlock);
  v18 = v21;
  v19 = a1;
  sub_10004D620(a2, a3);
  swift_release(v18);
  objc_msgSend(v10, "openURL:options:completionHandler:", v13, isa, v17);
  _Block_release(v17);

}

uint64_t sub_10004DCA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v46[2];
  uint64_t v47;
  uint64_t v48;

  v46[1] = a3;
  v47 = a4;
  v46[0] = a2;
  v48 = a5;
  v6 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v6);
  v8 = (_OWORD *)((char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10004BB9C(&qword_100116438);
  __chkstk_darwin(v9);
  v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004BB9C(&qword_100116420);
  __chkstk_darwin(v12);
  v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004BB9C(&qword_100116410);
  __chkstk_darwin(v15);
  v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004BB9C(&qword_100116400);
  __chkstk_darwin(v18);
  v20 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = 0x4020000000000000;
  v14[16] = 0;
  v21 = sub_10004BB9C(&qword_100116440);
  v22 = sub_10004DFFC(v46[0], v47, (uint64_t)&v14[*(int *)(v21 + 44)]);
  LOBYTE(a1) = static Edge.Set.all.getter(v22);
  sub_10004F544((uint64_t)v14, (uint64_t)v17, &qword_100116420);
  v23 = &v17[*(int *)(v15 + 36)];
  *v23 = a1;
  *(_OWORD *)(v23 + 8) = 0u;
  *(_OWORD *)(v23 + 24) = 0u;
  v23[40] = 1;
  v24 = sub_10004F588((uint64_t)v14, &qword_100116420);
  v25 = static Alignment.center.getter(v24);
  sub_100094D58(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v20, 0.0, 1, INFINITY, 0, v25, v26);
  sub_10004F588((uint64_t)v17, &qword_100116410);
  v27 = (char *)v8 + *(int *)(v6 + 20);
  v28 = enum case for RoundedCornerStyle.circular(_:);
  v29 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
  __asm { FMOV            V0.2D, #10.0 }
  *v8 = _Q0;
  v35 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  v36 = Color.init(uiColor:)(v35);
  sub_10004F35C((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_QWORD *)&v11[*(int *)(v9 + 52)] = v36;
  *(_WORD *)&v11[*(int *)(v9 + 56)] = 256;
  v37 = sub_10004F3A0((uint64_t)v8);
  v38 = static Alignment.center.getter(v37);
  v40 = v39;
  v41 = sub_10004BB9C(&qword_1001163E8);
  v42 = v48;
  v43 = v48 + *(int *)(v41 + 36);
  sub_10004F544((uint64_t)v11, v43, &qword_100116438);
  v44 = (uint64_t *)(v43 + *(int *)(sub_10004BB9C(&qword_100116430) + 36));
  *v44 = v38;
  v44[1] = v40;
  sub_10004F544((uint64_t)v20, v42, &qword_100116400);
  sub_10004F588((uint64_t)v11, &qword_100116438);
  return sub_10004F588((uint64_t)v20, &qword_100116400);
}

uint64_t *sub_10004DFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v40[4];
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t KeyPath;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  unsigned __int8 v71;
  unsigned __int8 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _OWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;

  v55 = a2;
  v5 = sub_10004BB9C(&qword_100116448);
  v6 = __chkstk_darwin(v5);
  v63 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v9 = &v40[-v8];
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_imageName);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_imageName + 8);
  swift_bridgeObjectRetain(v11);
  v62 = Image.init(systemName:)(v10, v11);
  v61 = static Color.accentColor.getter(v62);
  v60 = static Font.title.getter();
  KeyPath = swift_getKeyPath(&unk_1000CC610);
  v12 = static Alignment.center.getter(KeyPath);
  v14 = _FrameLayout.init(width:height:alignment:)(&v64, 0x4045000000000000, 0, 0, 1, v12, v13);
  v15 = v64;
  LOBYTE(v10) = v65;
  LOBYTE(v11) = v67;
  v16 = v69;
  v58 = v66;
  v59 = v68;
  v51 = v69;
  v52 = v64;
  v57 = static Edge.Set.trailing.getter(v14);
  v17 = EdgeInsets.init(_all:)(8.0);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v72 = v10;
  v71 = v11;
  v70 = 0;
  v48 = static HorizontalAlignment.leading.getter();
  sub_10004E420(a1, (uint64_t)&v80);
  v43 = v81;
  v44 = v80;
  LOBYTE(a1) = v82;
  v41 = v82;
  v24 = v83;
  v46 = v85;
  v47 = v84;
  v45 = v86;
  v55 = v87;
  v42 = swift_getKeyPath(&unk_1000CC640);
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v42);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v25 = &v9[*(int *)(sub_10004BB9C(&qword_100116450) + 44)];
  v49 = v9;
  sub_10004E6DC(v25);
  v26 = v72;
  v27 = v71;
  v53 = v72;
  v54 = v71;
  LOBYTE(v11) = v70;
  v50 = v70;
  sub_10004F544((uint64_t)v9, (uint64_t)v63, &qword_100116448);
  *(_QWORD *)&v73 = v62;
  *((_QWORD *)&v73 + 1) = v61;
  *(_QWORD *)&v74 = KeyPath;
  *((_QWORD *)&v74 + 1) = v60;
  *(_QWORD *)&v75 = v15;
  BYTE8(v75) = v26;
  *(_QWORD *)&v76 = v58;
  BYTE8(v76) = v27;
  *(_QWORD *)&v77 = v59;
  *((_QWORD *)&v77 + 1) = v16;
  LOBYTE(v78) = v57;
  *((double *)&v78 + 1) = v17;
  *(_QWORD *)&v79[0] = v19;
  *((_QWORD *)&v79[0] + 1) = v21;
  *(_QWORD *)&v79[1] = v23;
  BYTE8(v79[1]) = v11;
  v28 = v76;
  *(_OWORD *)(a3 + 32) = v75;
  *(_OWORD *)(a3 + 48) = v28;
  *(_OWORD *)(a3 + 105) = *(_OWORD *)((char *)v79 + 9);
  v29 = v79[0];
  v30 = v77;
  *(_OWORD *)(a3 + 80) = v78;
  *(_OWORD *)(a3 + 96) = v29;
  *(_OWORD *)(a3 + 64) = v30;
  v31 = v74;
  *(_OWORD *)a3 = v73;
  *(_OWORD *)(a3 + 16) = v31;
  v32 = v47;
  *(_QWORD *)(a3 + 128) = v48;
  *(_QWORD *)(a3 + 136) = 0x4008000000000000;
  *(_BYTE *)(a3 + 144) = 0;
  v33 = v43;
  v34 = v44;
  *(_QWORD *)(a3 + 152) = v44;
  *(_QWORD *)(a3 + 160) = v33;
  *(_BYTE *)(a3 + 168) = a1;
  *(_QWORD *)(a3 + 176) = v24;
  *(_QWORD *)(a3 + 184) = v32;
  v35 = v46;
  *(_QWORD *)(a3 + 192) = v46;
  LOBYTE(a1) = v45;
  *(_BYTE *)(a3 + 200) = v45;
  v36 = v55;
  v37 = v42;
  *(_QWORD *)(a3 + 208) = v55;
  *(_QWORD *)(a3 + 216) = v37;
  *(_BYTE *)(a3 + 224) = 0;
  *(_QWORD *)(a3 + 232) = 0;
  *(_BYTE *)(a3 + 240) = 1;
  v38 = sub_10004BB9C(&qword_100116458);
  sub_10004F544((uint64_t)v63, a3 + *(int *)(v38 + 80), &qword_100116448);
  sub_10004F430((uint64_t *)&v73);
  LOBYTE(a3) = v41;
  sub_10004F47C(v34, v33, v41);
  swift_bridgeObjectRetain(v24);
  sub_10004F47C(v32, v35, a1);
  swift_bridgeObjectRetain(v36);
  swift_retain(v37);
  sub_10004F588((uint64_t)v49, &qword_100116448);
  sub_10004F588((uint64_t)v63, &qword_100116448);
  sub_10004D630(v34, v33, a3);
  swift_bridgeObjectRelease(v24);
  sub_10004D630(v32, v35, a1);
  swift_release(v37);
  swift_bridgeObjectRelease(v55);
  v80 = v62;
  v81 = v61;
  v82 = KeyPath;
  v83 = v60;
  v84 = v52;
  LOBYTE(v85) = v53;
  v86 = v58;
  LOBYTE(v87) = v54;
  v88 = v59;
  v89 = v51;
  v90 = v57;
  v91 = v17;
  v92 = v19;
  v93 = v21;
  v94 = v23;
  v95 = v50;
  return sub_10004F48C(&v80);
}

uint64_t sub_10004E420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unint64_t v50;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_name + 8);
  v56 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_name);
  v57 = v3;
  v50 = sub_10004F5C4();
  swift_bridgeObjectRetain(v3);
  v4 = Text.init<A>(_:)(&v56, &type metadata for String, v50);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = static Font.headline.getter();
  v12 = Text.font(_:)(v11, v4, v6, v10, v8);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_release(v11);
  v19 = v16 & 1;
  sub_10004D630(v4, v6, v10);
  v20 = swift_bridgeObjectRelease(v8);
  v21 = static Color.accentColor.getter(v20);
  v56 = v21;
  v22 = Text.foregroundStyle<A>(_:)(&v56, v12, v14, v19, v18, &type metadata for Color, &protocol witness table for Color);
  v53 = v23;
  v54 = v22;
  v55 = v24;
  v52 = v25 & 1;
  sub_10004D630(v12, v14, v19);
  swift_release(v21);
  swift_bridgeObjectRelease(v18);
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_programDescription + 8);
  v56 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_programDescription);
  v57 = v26;
  swift_bridgeObjectRetain(v26);
  v27 = Text.init<A>(_:)(&v56, &type metadata for String, v50);
  v29 = v28;
  v31 = v30;
  v33 = v32 & 1;
  v34 = static Font.callout.getter();
  v35 = Text.font(_:)(v34, v27, v29, v33, v31);
  v37 = v36;
  LOBYTE(v8) = v38;
  v40 = v39;
  swift_release(v34);
  v41 = v8 & 1;
  sub_10004D630(v27, v29, v33);
  v42 = swift_bridgeObjectRelease(v31);
  LODWORD(v56) = static HierarchicalShapeStyle.secondary.getter(v42);
  v43 = Text.foregroundStyle<A>(_:)(&v56, v35, v37, v41, v40, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v45 = v44;
  v47 = v46;
  LOBYTE(v33) = v48 & 1;
  sub_10004D630(v35, v37, v41);
  swift_bridgeObjectRelease(v40);
  LOBYTE(v56) = v52;
  *(_QWORD *)a2 = v54;
  *(_QWORD *)(a2 + 8) = v53;
  *(_BYTE *)(a2 + 16) = v52;
  *(_QWORD *)(a2 + 24) = v55;
  *(_QWORD *)(a2 + 32) = v43;
  *(_QWORD *)(a2 + 40) = v45;
  *(_BYTE *)(a2 + 48) = v33;
  *(_QWORD *)(a2 + 56) = v47;
  sub_10004F47C(v54, v53, v52);
  swift_bridgeObjectRetain(v55);
  sub_10004F47C(v43, v45, v33);
  swift_bridgeObjectRetain(v47);
  sub_10004D630(v43, v45, v33);
  swift_bridgeObjectRelease(v47);
  sub_10004D630(v54, v53, v56);
  return swift_bridgeObjectRelease(v55);
}

uint64_t sub_10004E6DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t KeyPath;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v27 = a1;
  v26 = sub_10004BB9C(&qword_100116460);
  __chkstk_darwin(v26);
  v2 = (uint64_t *)((char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for Image.Scale(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10004BB9C(&qword_100116468);
  v7 = __chkstk_darwin(v25);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (uint64_t *)((char *)&v24 - v11);
  __chkstk_darwin(v10);
  v14 = (char *)&v24 - v13;
  v15 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  v16 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v17 = Color.init(uiColor:)(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Image.Scale.small(_:), v3);
  KeyPath = swift_getKeyPath(&unk_1000CC670);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v2 + *(int *)(v26 + 28), v6, v3);
  *v2 = KeyPath;
  sub_10004F544((uint64_t)v2, (uint64_t)v12 + *(int *)(v25 + 36), &qword_100116460);
  *v12 = v15;
  v12[1] = v17;
  swift_retain(v15);
  swift_retain(v17);
  sub_10004F588((uint64_t)v2, &qword_100116460);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release(v17);
  swift_release(v15);
  sub_10004F500((uint64_t)v12, (uint64_t)v14, &qword_100116468);
  sub_10004F544((uint64_t)v14, (uint64_t)v9, &qword_100116468);
  v19 = v27;
  *v27 = 0;
  *((_BYTE *)v19 + 8) = 1;
  v20 = v19;
  v21 = sub_10004BB9C(&qword_100116470);
  sub_10004F544((uint64_t)v9, (uint64_t)v20 + *(int *)(v21 + 48), &qword_100116468);
  v22 = (uint64_t)v20 + *(int *)(v21 + 64);
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  sub_10004F588((uint64_t)v14, &qword_100116468);
  return sub_10004F588((uint64_t)v9, &qword_100116468);
}

uint64_t sub_10004E98C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

uint64_t sub_10004E9C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[6];

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = static VerticalAlignment.top.getter();
  v5 = (_QWORD *)swift_allocObject(&unk_1000E8348, 40, 7);
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v3;
  v10[2] = v4;
  v10[3] = v2;
  v10[4] = v1;
  v10[5] = v3;
  v6 = v2;
  sub_10004D620(v1, v3);
  v7 = sub_10004BB9C(&qword_1001163E8);
  v8 = sub_10004F23C();
  return Button.init(action:label:)(sub_10004F224, v5, sub_10004F230, v10, v7, v8);
}

uint64_t sub_10004EA80(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for Image.Scale(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return EnvironmentValues.imageScale.setter(v3);
}

uint64_t sub_10004EAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for FBANotEnrolledView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 8))
    swift_release(*(_QWORD *)(v6 + 16));
  v7 = (_QWORD *)(v6 + *(int *)(v1 + 24));
  v8 = sub_10004BB9C(&qword_100116280);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10004EBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FBANotEnrolledView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004EBF8@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FBANotEnrolledView(0) - 8) + 80);
  v6 = v2 + ((v5 + 16) & ~v5);
  v7 = *a1;
  v8 = *(_QWORD *)(v6 + 8);
  v9 = *(_QWORD *)(v6 + 16);
  *a2 = v7;
  a2[1] = v8;
  a2[2] = v9;
  v10 = v7;
  return sub_10004D620(v8, v9);
}

unint64_t sub_10004EC58()
{
  unint64_t result;

  result = qword_1001163A8;
  if (!qword_1001163A8)
  {
    result = swift_getWitnessTable(&unk_1000CC5BC, &type metadata for FBANotEnrolledProgramCell);
    atomic_store(result, (unint64_t *)&qword_1001163A8);
  }
  return result;
}

void destroy for FBANotEnrolledProgramCell(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 8))
    swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *_s18Feedback_Assistant25FBANotEnrolledProgramCellVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  v4 = *(void **)a2;
  *a1 = *(_QWORD *)a2;
  v5 = a1 + 1;
  v7 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  v8 = v4;
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 16);
    a1[1] = v6;
    a1[2] = v9;
    swift_retain(v9);
  }
  else
  {
    *v5 = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for FBANotEnrolledProgramCell(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v7)
    {
      v10 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = v10;
      swift_retain(v10);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    return a1;
  }
  if (!v7)
  {
    swift_release(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

__n128 initializeWithTake for FBANotEnrolledProgramCell(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FBANotEnrolledProgramCell(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[1];
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v5)
    {
      v8 = a2[2];
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v5)
  {
    swift_release(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v6 = a2[2];
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for FBANotEnrolledProgramCell(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FBANotEnrolledProgramCell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FBANotEnrolledProgramCell()
{
  return &type metadata for FBANotEnrolledProgramCell;
}

ValueMetadata *type metadata accessor for FBANotEnrolledHeaderView()
{
  return &type metadata for FBANotEnrolledHeaderView;
}

_BYTE *initializeBufferWithCopyOfBuffer for FBANotEnrolledView.ExitButton(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FBANotEnrolledView.ExitButton(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FBANotEnrolledView.ExitButton(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10004F008 + 4 * byte_1000CC3F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10004F03C + 4 * byte_1000CC3F0[v4]))();
}

uint64_t sub_10004F03C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004F044(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10004F04CLL);
  return result;
}

uint64_t sub_10004F058(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10004F060);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10004F064(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004F06C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004F078(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_10004F080(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FBANotEnrolledView.ExitButton()
{
  return &type metadata for FBANotEnrolledView.ExitButton;
}

uint64_t sub_10004F09C()
{
  return sub_10004F0C8(&qword_1001163C0, &qword_1001163C8, (void (*)(void))sub_10004F134);
}

uint64_t sub_10004F0C8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10004BC28(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004F134()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001163D0;
  if (!qword_1001163D0)
  {
    v1 = sub_10004BC28(&qword_100116338);
    sub_10004F6D8(&qword_1001163D8, &qword_100116330, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1001163D0);
  }
  return result;
}

unint64_t sub_10004F1BC()
{
  unint64_t result;

  result = qword_1001163E0;
  if (!qword_1001163E0)
  {
    result = swift_getWitnessTable(&unk_1000CC544, &type metadata for FBANotEnrolledView.ExitButton);
    atomic_store(result, (unint64_t *)&qword_1001163E0);
  }
  return result;
}

uint64_t sub_10004F200(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DA8D8, 1);
}

uint64_t sub_10004F210(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DA8B0, 1);
}

void sub_10004F224()
{
  uint64_t v0;

  sub_10004DABC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10004F230@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10004DCA4(v1[2], v1[3], v1[4], v1[5], a1);
}

unint64_t sub_10004F23C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001163F0;
  if (!qword_1001163F0)
  {
    v1 = sub_10004BC28(&qword_1001163E8);
    sub_10004F0C8(&qword_1001163F8, &qword_100116400, (void (*)(void))sub_10004F2D8);
    sub_10004F6D8(&qword_100116428, &qword_100116430, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1001163F0);
  }
  return result;
}

unint64_t sub_10004F2D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116408;
  if (!qword_100116408)
  {
    v1 = sub_10004BC28(&qword_100116410);
    sub_10004F6D8(&qword_100116418, &qword_100116420, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100116408);
  }
  return result;
}

uint64_t sub_10004F35C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004F3A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004F3E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10004F40C(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t *sub_10004F430(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  swift_retain(a1[3]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_10004F47C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t *sub_10004F48C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[3];
  swift_release(a1[2]);
  swift_release(v3);
  swift_release(v2);
  swift_release(v4);
  return a1;
}

uint64_t sub_10004F4DC()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_10004F500(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10004BB9C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004F544(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10004BB9C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004F588(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_10004BB9C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10004F5C4()
{
  unint64_t result;

  result = qword_100116C10;
  if (!qword_100116C10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_100116C10);
  }
  return result;
}

uint64_t sub_10004F60C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10004F640()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 24);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_10004F668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004F678(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10004F680()
{
  return sub_10004F6D8(&qword_100116478, &qword_100116480, (uint64_t)&protocol conformance descriptor for Button<A>);
}

uint64_t sub_10004F6AC()
{
  return sub_10004F6D8(&qword_100116488, &qword_100116490, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

uint64_t sub_10004F6D8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10004BC28(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004F720()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_100050734(v0, qword_100116498);
  sub_10005067C(v0, (uint64_t)qword_100116498);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
  return Logger.init(subsystem:category:)(v1);
}

id sub_10004F798(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  void (*v25)(char *, char *, uint64_t);
  unint64_t v26;
  char v27;
  uint64_t countAndFlagsBits;
  void *v29;
  id v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  Swift::String v34;
  id v35;
  Swift::String v36;
  void *v37;
  Swift::String_optional v38;
  Swift::String v39;
  Swift::String v40;
  void *object;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  objc_class *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  objc_super v53;
  uint64_t v54;
  void *v55;
  __int128 v56;
  __int128 v57;
  Swift::String v58;
  Swift::String v59;

  v2 = v1;
  v4 = sub_10004BB9C(&qword_100116790);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1[2])
    goto LABEL_16;
  v11 = v2;
  v12 = sub_10006D4A8(1701667182, 0xE400000000000000);
  if ((v13 & 1) == 0
    || (sub_1000506D8(a1[7] + 32 * v12, (uint64_t)&v56),
        (swift_dynamicCast(&v54, &v56, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {

LABEL_16:
    v22 = a1;
LABEL_17:
    swift_bridgeObjectRelease(v22);
    goto LABEL_18;
  }
  v14 = v55;
  if (!a1[2] || (v15 = v54, v16 = sub_10006D4A8(0x7470697263736564, 0xEB000000006E6F69), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(a1);

    goto LABEL_18;
  }
  sub_1000506D8(a1[7] + 32 * v16, (uint64_t)&v56);
  if ((swift_dynamicCast(&v54, &v56, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {

LABEL_22:
    swift_bridgeObjectRelease(v14);
    goto LABEL_16;
  }
  v52 = v55;
  if (!a1[2] || (v51 = v54, v18 = sub_10006D4A8(0x616E5F6567616D69, 0xEA0000000000656DLL), (v19 & 1) == 0))
  {
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(a1);

LABEL_24:
    v22 = v52;
    goto LABEL_17;
  }
  sub_1000506D8(a1[7] + 32 * v18, (uint64_t)&v56);
  if ((swift_dynamicCast(&v54, &v56, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {

LABEL_26:
    swift_bridgeObjectRelease(v52);
    goto LABEL_22;
  }
  v50 = (uint64_t)v55;
  if (!a1[2] || (v49 = v54, v20 = sub_10006D4A8(0x74616E6974736564, 0xEB000000006E6F69), (v21 & 1) == 0))
  {
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(a1);

    swift_bridgeObjectRelease(v50);
    goto LABEL_24;
  }
  sub_1000506D8(a1[7] + 32 * v20, (uint64_t)&v56);
  if ((swift_dynamicCast(&v54, &v56, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {

    swift_bridgeObjectRelease(v50);
    goto LABEL_26;
  }
  v48 = v55;
  URL.init(string:)(v54);
  swift_bridgeObjectRelease(v48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v25(v10, v6, v7);
    if (a1[2] && (v26 = sub_10006D4A8(0xD000000000000013, 0x80000001000D4A50), (v27 & 1) != 0))
    {
      sub_1000506D8(a1[7] + 32 * v26, (uint64_t)&v56);
    }
    else
    {
      v56 = 0u;
      v57 = 0u;
    }
    swift_bridgeObjectRelease(a1);
    if (*((_QWORD *)&v57 + 1))
    {
      if (swift_dynamicCast(&v54, &v56, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
      {
        countAndFlagsBits = v51;
        if ((v54 & 1) != 0)
        {
          v29 = (void *)objc_opt_self(NSBundle);
          v30 = objc_msgSend(v29, "mainBundle");
          v58._object = (void *)0xE000000000000000;
          v31._countAndFlagsBits = v15;
          v31._object = v14;
          v32.value._countAndFlagsBits = 0x74536E6F6D6D6F43;
          v32.value._object = (void *)0xED000073676E6972;
          v33._countAndFlagsBits = 0;
          v33._object = (void *)0xE000000000000000;
          v58._countAndFlagsBits = 0;
          v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v58);

          swift_bridgeObjectRelease(v14);
          *(Swift::String *)((char *)v11 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_name) = v34;
          v35 = objc_msgSend(v29, "mainBundle");
          v59._object = (void *)0xE000000000000000;
          v36._countAndFlagsBits = countAndFlagsBits;
          v37 = v52;
          v36._object = v52;
          v38.value._countAndFlagsBits = 0x74536E6F6D6D6F43;
          v38.value._object = (void *)0xED000073676E6972;
          v39._countAndFlagsBits = 0;
          v39._object = (void *)0xE000000000000000;
          v59._countAndFlagsBits = 0;
          v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, v38, (NSBundle)v35, v39, v59);
          countAndFlagsBits = v40._countAndFlagsBits;
          object = v40._object;

          swift_bridgeObjectRelease(v37);
LABEL_40:
          v43 = (_QWORD *)((char *)v11
                         + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_programDescription);
          *v43 = countAndFlagsBits;
          v43[1] = (uint64_t)object;
          v44 = (_QWORD *)((char *)v11 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_imageName);
          v45 = v50;
          *v44 = v49;
          v44[1] = v45;
          v25((char *)v11 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_destination, v10, v7);

          v46 = (objc_class *)type metadata accessor for FBAProgramEnrollmentOffer(0);
          v53.receiver = v11;
          v53.super_class = v46;
          return objc_msgSendSuper2(&v53, "init");
        }
LABEL_39:
        v42 = (_QWORD *)((char *)v11 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_name);
        *v42 = v15;
        v42[1] = (uint64_t)v14;
        object = v52;
        goto LABEL_40;
      }
    }
    else
    {
      sub_10004F588((uint64_t)&v56, (uint64_t *)&unk_100116D70);
    }
    countAndFlagsBits = v51;
    goto LABEL_39;
  }
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v52);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(a1);

  sub_10004F588((uint64_t)v6, &qword_100116790);
LABEL_18:
  v23 = type metadata accessor for FBAProgramEnrollmentOffer(0);
  swift_deallocPartialClassInstance(v2, v23, *(unsigned int *)((swift_isaMask & *v2) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v2) + 0x34));
  return 0;
}

id sub_10004FD78()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAProgramEnrollmentOffer(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10004FE28()
{
  return type metadata accessor for FBAProgramEnrollmentOffer(0);
}

uint64_t type metadata accessor for FBAProgramEnrollmentOffer(uint64_t a1)
{
  uint64_t result;

  result = qword_1001164F0;
  if (!qword_1001164F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FBAProgramEnrollmentOffer);
  return result;
}

uint64_t sub_10004FE6C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1000CC6E0;
  v4[1] = &unk_1000CC6E0;
  v4[2] = &unk_1000CC6E0;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void *sub_10004FEE8()
{
  return &protocol witness table for String;
}

uint64_t sub_10004FEF4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(*v1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_name);
  v3 = v2[1];
  *a1 = *v2;
  a1[1] = v3;
  return swift_bridgeObjectRetain(v3);
}

void *sub_10004FF10(uint64_t a1)
{
  void *result;
  uint64_t v3;
  objc_class *v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;

  result = &_swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (objc_class *)type metadata accessor for FBAProgramEnrollmentOffer(0);
    swift_bridgeObjectRetain(a1);
    for (i = 0; i != v3; ++i)
    {
      v7 = *(_QWORD *)(a1 + 8 * i + 32);
      objc_allocWithZone(v4);
      v8 = (_QWORD *)swift_bridgeObjectRetain(v7);
      v9 = sub_10004F798(v8);
      if (v9)
      {
        v10 = v9;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
        v12 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v11 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
        specialized Array._endMutation()(v6);
      }
    }
    swift_bridgeObjectRelease(a1);
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100050010()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  Class isa;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  _QWORD v47[2];
  uint64_t v48;
  _QWORD v49[3];
  _BYTE v50[16];
  __int128 v51;
  __int128 v52;
  uint64_t v53[4];

  v0 = sub_10004BB9C(&qword_100116790);
  __chkstk_darwin(v0);
  v2 = (char *)v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v47 - v8;
  v10 = type metadata accessor for FBAProgramEnrollmentOffer(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v10);
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "URLForResource:withExtension:", v13, v14);

  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_9;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v15);

  v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v16(v2, v7, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_9:
    sub_10004F588((uint64_t)v2, &qword_100116790);
    if (qword_100115DA0 != -1)
      swift_once(&qword_100115DA0, sub_10004F720);
    v26 = type metadata accessor for Logger(0);
    sub_10005067C(v26, (uint64_t)qword_100116498);
    v27 = ((uint64_t (*)(void))Logger.logObject.getter)();
    v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to find program enrollment offers file.", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    return &_swiftEmptyArrayStorage;
  }
  v16(v9, v2, v3);
  v30 = Data.init(contentsOf:options:)(v9, 0);
  v32 = v31;
  v33 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v51 = 0;
  v35 = objc_msgSend(v33, "JSONObjectWithData:options:error:", isa, 0, &v51);

  v36 = (id)v51;
  if (!v35)
  {
    v41 = v36;
    v42 = _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100050694(v30, v32);
    if (qword_100115DA0 != -1)
      swift_once(&qword_100115DA0, sub_10004F720);
    v17 = type metadata accessor for Logger(0);
    sub_10005067C(v17, (uint64_t)qword_100116498);
    swift_errorRetain(v42);
    v18 = swift_errorRetain(v42);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v53[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v47[1] = v21 + 4;
      swift_getErrorValue(v42, v50, v49);
      v23 = Error.localizedDescription.getter(v49[1], v49[2]);
      v25 = v24;
      *(_QWORD *)&v51 = sub_100094680(v23, v24, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 8);
      swift_bridgeObjectRelease(v25);
      swift_errorRelease(v42);
      swift_errorRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Encountered error while parsing program enrollments: %{public}s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      swift_errorRelease(v42);
    }
    else
    {
      swift_errorRelease(v42);
      swift_errorRelease(v42);
      swift_errorRelease(v42);

    }
    goto LABEL_28;
  }
  _bridgeAnyObjectToAny(_:)(v53, v35);
  swift_unknownObjectRelease(v35);
  sub_1000506D8((uint64_t)v53, (uint64_t)&v51);
  v37 = sub_10004BB9C(&qword_100116500);
  if ((swift_dynamicCast(&v48, &v51, (char *)&type metadata for Any + 8, v37, 6) & 1) == 0)
    goto LABEL_25;
  v38 = v48;
  if (*(_QWORD *)(v48 + 16) && (v39 = sub_10006D4A8(0x736D6172676F7270, 0xE800000000000000), (v40 & 1) != 0))
  {
    sub_1000506D8(*(_QWORD *)(v38 + 56) + 32 * v39, (uint64_t)&v51);
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  swift_bridgeObjectRelease(v38);
  if (!*((_QWORD *)&v52 + 1))
  {
    sub_100050694(v30, v32);
    sub_10004F588((uint64_t)&v51, (uint64_t *)&unk_100116D70);
    goto LABEL_27;
  }
  v43 = sub_10004BB9C(&qword_100116508);
  if ((swift_dynamicCast(&v48, &v51, (char *)&type metadata for Any + 8, v43, 6) & 1) == 0)
  {
LABEL_25:
    sub_100050694(v30, v32);
LABEL_27:
    sub_100050714(v53);
LABEL_28:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    return &_swiftEmptyArrayStorage;
  }
  v44 = v48;
  v45 = sub_10004FF10(v48);
  sub_100050694(v30, v32);
  swift_bridgeObjectRelease(v44);
  sub_100050714(v53);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return v45;
}

uint64_t sub_10005067C(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_100050694(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1000506D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100050714(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *sub_100050734(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

id sub_100050774()
{
  _BYTE *v0;
  char v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  objc_super v9;

  v1 = v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing];
  v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing] = 0;
  if ((v1 & 1) == 0)
    goto LABEL_4;
  result = objc_msgSend(v0, "text");
  if (result)
  {
    v3 = result;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v6 = v5;

    v7 = (uint64_t *)&v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
    v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText + 8];
    *v7 = v4;
    v7[1] = v6;
    swift_bridgeObjectRelease(v8);
    sub_100050848();
LABEL_4:
    v9.receiver = v0;
    v9.super_class = (Class)type metadata accessor for FBAExpandingTextView();
    return objc_msgSendSuper2(&v9, "resignFirstResponder");
  }
  __break(1u);
  return result;
}

void sub_100050848()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  NSString v51;
  char v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;

  v1 = v0;
  v2 = type metadata accessor for CharacterSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing] != 1)
  {
    v23 = &v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
    v24 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText + 8];
    v55 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
    v56 = v24;
    v25 = (void *)objc_opt_self(NSCharacterSet);
    swift_bridgeObjectRetain(v24);
    v26 = objc_msgSend(v25, "whitespaceAndNewlineCharacterSet");
    static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

    v27 = sub_10004F5C4();
    v28 = StringProtocol.trimmingCharacters(in:)(v6, &type metadata for String, v27);
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    swift_bridgeObjectRelease(v56);
    v31 = String.count.getter(v28);
    v32 = swift_bridgeObjectRelease(v30);
    if (v31 < 1)
    {
      v44 = *((_QWORD *)v23 + 1);
      *(_QWORD *)v23 = 0;
      *((_QWORD *)v23 + 1) = 0xE000000000000000;
      v45 = swift_bridgeObjectRelease(v44);
      v46 = static os_log_type_t.debug.getter(v45);
      os_log(_:dso:log:_:_:)(v46, &_mh_execute_header);
      v47 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
      objc_msgSend(v1, "setTextColor:", v47);

      v48 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_placeholderText + 8];
      if (!v48)
      {
        v51 = 0;
LABEL_23:
        objc_msgSend(v1, "setText:", v51);

        return;
      }
    }
    else
    {
      v33 = static os_log_type_t.debug.getter(v32);
      v34 = sub_10004BB9C((uint64_t *)&unk_100116860);
      v35 = swift_allocObject(v34, 72, 7);
      *(_OWORD *)(v35 + 16) = xmmword_1000CC730;
      v37 = *(_QWORD *)v23;
      v36 = *((_QWORD *)v23 + 1);
      *(_QWORD *)(v35 + 56) = &type metadata for String;
      *(_QWORD *)(v35 + 64) = sub_100051284();
      *(_QWORD *)(v35 + 32) = v37;
      *(_QWORD *)(v35 + 40) = v36;
      swift_bridgeObjectRetain(v36);
      os_log(_:dso:log:_:_:)(v33, &_mh_execute_header);
      swift_bridgeObjectRelease(v35);
      v38 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
      objc_msgSend(v1, "setTextColor:", v38);

      v39 = objc_msgSend(v1, "text");
      if (v39)
      {
        v40 = v39;
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v20 = v42;

        if (v20)
        {
          v43 = *((_QWORD *)v23 + 1);
          if (v41 == *(_QWORD *)v23 && v20 == v43)
            goto LABEL_7;
          v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v20, *(_QWORD *)v23, v43, 0);
          swift_bridgeObjectRelease(v20);
          if ((v52 & 1) != 0)
            return;
        }
      }
      v48 = *((_QWORD *)v23 + 1);
    }
    swift_bridgeObjectRetain(v48);
    v51 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v48);
    goto LABEL_23;
  }
  v7 = static os_log_type_t.debug.getter(v4);
  v8 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1000CC730;
  v10 = objc_msgSend(v1, "text");
  if (v10)
  {
    v11 = v10;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;

    *(_QWORD *)(v9 + 56) = &type metadata for String;
    *(_QWORD *)(v9 + 64) = sub_100051284();
    *(_QWORD *)(v9 + 32) = v12;
    *(_QWORD *)(v9 + 40) = v14;
    os_log(_:dso:log:_:_:)(v7, &_mh_execute_header);
    swift_bridgeObjectRelease(v9);
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    objc_msgSend(v1, "setTextColor:", v15);

    v16 = objc_msgSend(v1, "text");
    if (!v16)
    {
      v21 = &v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
LABEL_18:
      v50 = *((_QWORD *)v21 + 1);
      swift_bridgeObjectRetain(v50);
      v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v50);
      objc_msgSend(v1, "setText:", v54);

      return;
    }
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v20 = v19;

    v21 = &v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
    if (!v20)
      goto LABEL_18;
    v22 = *((_QWORD *)v21 + 1);
    if (v18 == *(_QWORD *)v21 && v20 == v22)
    {
LABEL_7:
      swift_bridgeObjectRelease(v20);
      return;
    }
    v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, *(_QWORD *)v21, v22, 0);
    swift_bridgeObjectRelease(v20);
    if ((v49 & 1) == 0)
      goto LABEL_18;
  }
  else
  {
    __break(1u);
  }
}

void sub_100050D88()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  _QWORD v6[5];
  uint64_t v7;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v2 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v3 = swift_allocObject(&unk_1000E8468, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v0);
  v6[4] = sub_100051264;
  v7 = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10008E628;
  v6[3] = &unk_1000E8480;
  v4 = _Block_copy(v6);
  swift_release(v7);
  v5 = objc_msgSend(v1, "addObserverForName:object:queue:usingBlock:", UITextViewTextDidBeginEditingNotification, v0, v2, v4);
  _Block_release(v4);
  swift_unknownObjectRelease(v5);

}

void sub_100050EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  char v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    v6 = static os_log_type_t.debug.getter(Strong);
    v7 = *(id *)&v5[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_log];
    os_log(_:dso:log:_:_:)(v6, &_mh_execute_header);

    v8 = v5[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing];
    v5[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing] = 1;
    if ((v8 & 1) == 0)
      sub_100050848();

  }
}

id sub_100050F7C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;

  v2 = v1;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("com.apple.appleseed.FeedbackAssistant"));
  v6 = v5;
  v7 = OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_log;
  sub_1000512C8();
  v8 = v2;
  *(_QWORD *)&v2[v7] = OS_os_log.init(subsystem:category:)(v4, v6, 0x7765697674786574, 0xE800000000000000);
  v8[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing] = 0;
  v9 = &v8[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0xE000000000000000;
  v10 = &v8[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_placeholderText];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;

  v15.receiver = v8;
  v15.super_class = (Class)type metadata accessor for FBAExpandingTextView();
  v11 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);
  v12 = v11;
  if (v11)
  {
    v13 = v11;
    sub_100050D88();

  }
  return v12;
}

id sub_1000510AC()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for FBAExpandingTextView();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for FBAExpandingTextView()
{
  return objc_opt_self(_TtC18Feedback_Assistant20FBAExpandingTextView);
}

uint64_t sub_100051240()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100051264(uint64_t a1)
{
  uint64_t v1;

  sub_100050EC0(a1, v1);
}

uint64_t sub_10005126C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005127C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100051284()
{
  unint64_t result;

  result = qword_100116F60;
  if (!qword_100116F60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_100116F60);
  }
  return result;
}

unint64_t sub_1000512C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116558;
  if (!qword_100116558)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100116558);
  }
  return result;
}

uint64_t Logger.init(fbaCategory:)()
{
  uint64_t v0;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
  return Logger.init(subsystem:category:)(v0);
}

uint64_t sub_10005134C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_100050734(v0, static Logger.app);
  sub_10005067C(v0, (uint64_t)static Logger.app);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
  return Logger.init(subsystem:category:)(v1);
}

uint64_t Logger.app.unsafeMutableAddressor()
{
  return sub_100051518(&qword_100115DA8, (uint64_t)static Logger.app, (uint64_t)sub_10005134C);
}

uint64_t static Logger.app.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100051574(&qword_100115DA8, (uint64_t)static Logger.app, (uint64_t)sub_10005134C, a1);
}

uint64_t sub_1000513EC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_100050734(v0, static Logger.attachment);
  sub_10005067C(v0, (uint64_t)static Logger.attachment);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
  return Logger.init(subsystem:category:)(v1);
}

uint64_t Logger.attachment.unsafeMutableAddressor()
{
  return sub_100051518(&qword_100115DB0, (uint64_t)static Logger.attachment, (uint64_t)sub_1000513EC);
}

uint64_t static Logger.attachment.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100051574(&qword_100115DB0, (uint64_t)static Logger.attachment, (uint64_t)sub_1000513EC, a1);
}

uint64_t sub_100051490()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_100050734(v0, static Logger.model);
  sub_10005067C(v0, (uint64_t)static Logger.model);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
  return Logger.init(subsystem:category:)(v1);
}

uint64_t Logger.model.unsafeMutableAddressor()
{
  return sub_100051518(&qword_100115DB8, (uint64_t)static Logger.model, (uint64_t)sub_100051490);
}

uint64_t sub_100051518(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (*a1 != -1)
    swift_once(a1, a3);
  v4 = type metadata accessor for Logger(0);
  return sub_10005067C(v4, a2);
}

uint64_t static Logger.model.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100051574(&qword_100115DB8, (uint64_t)static Logger.model, (uint64_t)sub_100051490, a1);
}

uint64_t sub_100051574@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_10005067C(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v7, v6);
}

void sub_100051700()
{
  strcpy((char *)&qword_100119F38, "FBATopicCell");
  unk_100119F45 = 0;
  unk_100119F46 = -5120;
}

void sub_10005180C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *Strong;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formStub);
  if (v3)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formName, a2);
    v23 = v3;
    if (Strong)
    {
      v6 = objc_msgSend(v23, "name");
      objc_msgSend(Strong, "setText:", v6);

    }
    v7 = v2 + OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formDescriptions;
    v8 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formDescriptions, v5);
    if (v8)
    {
      v10 = (void *)v8;
      v11 = objc_msgSend(v23, "formDescription");
      objc_msgSend(v10, "setText:", v11);

    }
    v12 = (void *)swift_unknownObjectWeakLoadStrong(v7, v9);
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v12, "text");

      if (v14)
      {
        v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v18 = v17;

        swift_bridgeObjectRelease(v18);
        v19 = HIBYTE(v18) & 0xF;
        if ((v18 & 0x2000000000000000) == 0)
          v19 = v16 & 0xFFFFFFFFFFFFLL;
        if (!v19)
        {
          v22 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_topicToBottomOfView, v15);
          if (v22)
          {
            v21 = v22;
            objc_msgSend(v22, "setActive:", 1);
            goto LABEL_16;
          }
          goto LABEL_19;
        }
      }
      v20 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_topicToBottomOfView, v15);
      if (v20)
      {
        v21 = v20;
        objc_msgSend(v20, "setActive:", 0);
LABEL_16:

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
}

id sub_100051A20(char a1)
{
  _BYTE *v1;
  uint64_t v2;

  v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_disclosesMoreForms] = a1;
  if ((a1 & 1) != 0)
    v2 = 3;
  else
    v2 = 0;
  objc_msgSend(v1, "setAccessoryType:", a1 & 1);
  return objc_msgSend(v1, "setSelectionStyle:", v2);
}

id sub_100051A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v6;
  NSString v7;
  id v8;
  objc_super v10;

  v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_itemIdentifier];
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_topicToBottomOfView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formDescriptions], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formName], 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formStub] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_disclosesMoreForms] = 1;
  if (a3)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for FBATopicCell();
  v8 = objc_msgSendSuper2(&v10, "initWithStyle:reuseIdentifier:", a1, v7);

  return v8;
}

id sub_100051BAC(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_itemIdentifier];
  *v3 = 0;
  v3[1] = 0xE000000000000000;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_topicToBottomOfView], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formDescriptions], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formName], 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formStub] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_disclosesMoreForms] = 1;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for FBATopicCell();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id sub_100051C88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBATopicCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBATopicCell()
{
  return objc_opt_self(_TtC18Feedback_Assistant12FBATopicCell);
}

id sub_100051D44()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  id result;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = objc_msgSend(v0, "infoDictionary");

  if (!v1)
    goto LABEL_9;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v3 + 16) || (v4 = sub_10006D4A8(0xD000000000000014, 0x80000001000D4E20), (v5 & 1) == 0))
  {
    v10 = 0u;
    v11 = 0u;
    swift_bridgeObjectRelease(v3);
    goto LABEL_8;
  }
  sub_1000506D8(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v10);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_8:
    v2 = sub_100051ED0((uint64_t)&v10);
    goto LABEL_9;
  }
  v2 = swift_dynamicCast(&v9, &v10, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((_DWORD)v2)
    return (id)v9;
LABEL_9:
  v7 = static os_log_type_t.fault.getter(v2);
  result = objc_msgSend((id)objc_opt_self(FBALog), "appHandle");
  if (result)
  {
    v8 = result;
    os_log(_:dso:log:_:_:)(v7, &_mh_execute_header);

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100051ED0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004BB9C((uint64_t *)&unk_100116D70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_10005204C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  void *v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v2 = OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams];
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams] = a1;
  swift_bridgeObjectRelease(v3);
  result = objc_msgSend(v1, "tableView");
  if (result)
  {
    v5 = result;
    objc_msgSend(result, "reloadData");

    v11.receiver = v1;
    v11.super_class = (Class)type metadata accessor for FBATeamPickerController();
    objc_msgSendSuper2(&v11, "preferredContentSize");
    v7 = v6;
    v8 = *(_QWORD *)&v1[v2];
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v10 = *(_QWORD *)&v1[v2];
      else
        v10 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v10);
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    return objc_msgSend(v1, "setPreferredContentSize:", v7, (double)v9 * 70.0 + 15.0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000521E8(char a1)
{
  _BYTE *v1;
  id v3;
  void *v4;
  id v5;

  v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_showsDismissButton] = a1;
  v5 = objc_msgSend(v1, "navigationItem");
  if ((a1 & 1) != 0)
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v1, "dismissSelf");
    objc_msgSend(v5, "setRightBarButtonItem:", v3);

    v4 = v3;
  }
  else
  {
    objc_msgSend(v5, "setRightBarButtonItem:", 0);
    v4 = v5;
  }

}

void sub_1000522D8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for FBATeamPickerController();
  objc_msgSendSuper2(&v7, "viewDidLoad");
  v1 = objc_msgSend(v0, "tableView");
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  objc_msgSend(v1, "setShowsVerticalScrollIndicator:", 0);

  v3 = objc_msgSend(v0, "tableView");
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  objc_msgSend(v3, "setEstimatedRowHeight:", 60.0);

  v5 = objc_msgSend(v0, "tableView");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setRowHeight:", UITableViewAutomaticDimension);

    return;
  }
LABEL_7:
  __break(1u);
}

unint64_t sub_1000525DC(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  Class isa;
  id v10;
  unint64_t result;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void (*v37)(_QWORD *, _QWORD);
  id v38;
  id v39;
  _BOOL8 v40;
  void (*v41)(_QWORD *, _QWORD);
  id v42;
  void (*v43)(_QWORD *, _QWORD);
  void (*v44)(_QWORD *, _QWORD);
  id v45;
  void (*v46)(_QWORD *, _QWORD);
  _QWORD *v47;
  void *v48;
  id v49;
  id v50;
  char v51;
  uint64_t v52;
  _QWORD aBlock[3];
  void *v54;
  id (*v55)(void *);
  uint64_t v56;

  v2 = v1;
  v4 = type metadata accessor for UIListContentConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v8, isa);

  result = IndexPath.section.getter();
  v12 = result;
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams];
  if ((v13 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams]);
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v13);
    swift_bridgeObjectRelease(v13);
    goto LABEL_5;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (result >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  v14 = *(id *)(v13 + 8 * result + 32);
LABEL_5:
  static UIListContentConfiguration.subtitleCell()();
  v15 = objc_msgSend(v14, "name");
  if (v15)
  {
    v16 = v15;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v19 = v18;

  }
  else
  {
    v17 = 0;
    v19 = 0;
  }
  UIListContentConfiguration.text.setter(v17, v19);
  v20 = objc_msgSend(v14, "typeString");
  if (v20)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

    v25 = HIBYTE(v24) & 0xF;
    if ((v24 & 0x2000000000000000) == 0)
      v25 = v22 & 0xFFFFFFFFFFFFLL;
    if (v25)
      UIListContentConfiguration.secondaryText.setter(v22, v24);
    else
      swift_bridgeObjectRelease(v24);
  }
  v26 = (void *)FBKSystemImageNameInbox;
  v27 = (void *)objc_opt_self(UIImage);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;
  v30 = v26;
  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  v32 = objc_msgSend(v27, "systemImageNamed:", v31);

  UIListContentConfiguration.image.setter(v32);
  v33 = objc_allocWithZone((Class)UIColor);
  v55 = sub_100052AB8;
  v56 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100072974;
  v54 = &unk_1000E84F8;
  v34 = _Block_copy(aBlock);
  v35 = objc_msgSend(v33, "initWithDynamicProvider:", v34);
  _Block_release(v34);
  swift_release(v56);
  v36 = v35;
  v37 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(aBlock);
  UIListContentConfiguration.TextProperties.color.setter(v36);
  v37(aBlock, 0);
  v38 = objc_msgSend(v2, "traitCollection");
  v39 = objc_msgSend(v38, "preferredContentSizeCategory");

  LOBYTE(v38) = UIContentSizeCategory.isAccessibilityCategory.getter(v39);
  v40 = (v38 & 1) == 0;
  v41 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(aBlock);
  UIListContentConfiguration.TextProperties.numberOfLines.setter(v40);
  v41(aBlock, 0);
  v42 = v36;
  v43 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(aBlock);
  UIListContentConfiguration.TextProperties.color.setter(v42);
  v43(aBlock, 0);
  v44 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(aBlock);
  UIListContentConfiguration.TextProperties.numberOfLines.setter(v40);
  v44(aBlock, 0);
  v45 = v42;
  v46 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(aBlock);
  UIListContentConfiguration.ImageProperties.tintColor.setter(v42);
  v46(aBlock, 0);
  v54 = (void *)v4;
  v55 = (id (*)(void *))&protocol witness table for UIListContentConfiguration;
  v47 = sub_1000535B0(aBlock);
  (*(void (**)(_QWORD *, char *, uint64_t))(v5 + 16))(v47, v7, v4);
  UITableViewCell.contentConfiguration.setter(aBlock);
  v48 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_selectedTeam];
  if (v48
    && (sub_100053458(0, &qword_100116610, FBKTeam_ptr),
        v49 = v14,
        v50 = v48,
        v51 = static NSObject.== infix(_:_:)(v49, v50),
        v49,
        v50,
        (v51 & 1) != 0))
  {
    v52 = 3;
  }
  else
  {
    v52 = 0;
  }
  objc_msgSend(v10, "setAccessoryType:", v52);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (unint64_t)v10;
}

id sub_100052AB8(void *a1)
{
  id result;

  if (objc_msgSend(a1, "userInterfaceStyle") == (id)2)
    return objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  result = objc_msgSend((id)objc_opt_self(iFBAConstants), "tintColor");
  if (!result)
    __break(1u);
  return result;
}

void *sub_100052BE0(uint64_t a1, uint64_t a2)
{
  void *result;
  void *v4;

  result = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_pickerDelegate, a2);
  if (result)
  {
    v4 = result;
    if ((objc_msgSend(result, "respondsToSelector:", "teamPickerDidCancel:") & 1) != 0)
      objc_msgSend(v4, "teamPickerDidCancel:", a1);
    return (void *)swift_unknownObjectRelease(v4);
  }
  return result;
}

void sub_100052DC8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t **v7;
  NSArray v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;

  v1 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_formStub];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "teamsMatchingFormID");
    v4 = sub_100053458(0, &qword_100116610, FBKTeam_ptr);
    v5 = sub_100053400();
    v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

    v7 = sub_10007E270(v6);
    swift_bridgeObjectRelease(v6);
    v8.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release(v7);
    isa = (Class)objc_msgSend((id)objc_opt_self(FBKTeam), "sortDescriptors");
    if (!isa)
    {
      v10 = sub_100053458(0, &qword_100116620, NSSortDescriptor_ptr);
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v10);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v11);
    }
    v12 = -[objc_class sortedArrayUsingDescriptors:](v8.super.isa, "sortedArrayUsingDescriptors:", isa);

    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, (char *)&type metadata for Any + 8);
    v14 = sub_10007D6D4(v13);
    swift_bridgeObjectRelease(v13);
    v15 = OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams;
    v16 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams];
    *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams] = v14;
    swift_bridgeObjectRelease(v16);
    v17 = objc_msgSend(v0, "tableView");
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v17, "reloadData");

      v24.receiver = v0;
      v24.super_class = (Class)type metadata accessor for FBATeamPickerController();
      objc_msgSendSuper2(&v24, "preferredContentSize");
      v20 = v19;
      v21 = *(_QWORD *)&v0[v15];
      if ((unint64_t)v21 >> 62)
      {
        if (v21 < 0)
          v23 = *(_QWORD *)&v0[v15];
        else
          v23 = v21 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)&v0[v15]);
        v22 = _CocoaArrayWrapper.endIndex.getter(v23);
        swift_bridgeObjectRelease(v21);
      }
      else
      {
        v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      objc_msgSend(v0, "setPreferredContentSize:", v20, (double)v22 * 70.0 + 15.0);

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100053030(uint64_t a1)
{
  _BYTE *v1;
  _QWORD *v3;
  objc_super v5;

  v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_cellReuseIdentifier];
  *v3 = 0xD000000000000012;
  v3[1] = 0x80000001000D4FA0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_formStub] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_selectedTeam] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_showsDismissButton] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_pickerDelegate], 0);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FBATeamPickerController();
  return objc_msgSendSuper2(&v5, "initWithStyle:", a1);
}

id sub_100053108(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _QWORD *v6;
  NSString v7;
  id v8;
  objc_super v10;

  v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_cellReuseIdentifier];
  *v6 = 0xD000000000000012;
  v6[1] = 0x80000001000D4FA0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_formStub] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_selectedTeam] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_showsDismissButton] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_pickerDelegate], 0);
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for FBATeamPickerController();
  v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

id sub_100053260(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_cellReuseIdentifier];
  *v3 = 0xD000000000000012;
  v3[1] = 0x80000001000D4FA0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_formStub] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_selectedTeam] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_showsDismissButton] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_pickerDelegate], 0);
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for FBATeamPickerController();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id sub_100053344()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBATeamPickerController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBATeamPickerController()
{
  return objc_opt_self(_TtC18Feedback_Assistant23FBATeamPickerController);
}

unint64_t sub_100053400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116618;
  if (!qword_100116618)
  {
    v1 = sub_100053458(255, &qword_100116610, FBKTeam_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100116618);
  }
  return result;
}

uint64_t sub_100053458(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_100053490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  id v8;

  v3 = v2;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_pickerDelegate, a2);
  if (result)
  {
    v5 = (void *)result;
    result = IndexPath.section.getter();
    v6 = result;
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams);
    if ((v7 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v3 + OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams));
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v7);
      swift_bridgeObjectRelease(v7);
      goto LABEL_6;
    }
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v8 = *(id *)(v7 + 8 * result + 32);
LABEL_6:
      objc_msgSend(v5, "teamPicker:didSelectTeam:", v3, v8);

      return swift_unknownObjectRelease(v5);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10005356C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void *sub_100053590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100052BE0(*(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100053598(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000535A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_1000535B0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_1000535EC(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

id sub_100053618(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  NSString v10;
  Class isa;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v22[5];

  v3 = v2;
  v6 = sub_10004BB9C(&qword_100116698);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v10, isa);

  v19 = v3;
  v20 = a1;
  v21 = a2;
  v13 = type metadata accessor for BatchUIButtonView(0);
  v14 = sub_10005575C();
  v15 = UIHostingConfiguration<>.init(content:)(sub_100055750, v18, v13, v14);
  v16 = static Edge.Set.all.getter(v15);
  v22[3] = v6;
  v22[4] = sub_1000557A4();
  sub_1000535B0(v22);
  UIHostingConfiguration.margins(_:_:)(v16, v6, 0.0);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  UICollectionViewCell.contentConfiguration.setter(v22);
  return v12;
}

uint64_t sub_100053778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = swift_allocObject(&unk_1000E85D0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, a1);
  v12 = swift_allocObject(&unk_1000E85F8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(&unk_1000E8620, v14 + v10, v13 | 7);
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  return sub_100095148((uint64_t)sub_100055890, v15, a4);
}

void sub_1000538A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  Class isa;
  uint64_t v12;
  _BYTE v13[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = a2 + 16;
    swift_beginAccess(v7, &v12, 0, 0);
    v9 = swift_unknownObjectWeakLoadStrong(v7, v8);
    if (v9)
    {
      v10 = (void *)v9;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v6, "collectionView:didSelectItemAtIndexPath:", v10, isa);

      v6 = isa;
    }

  }
}

uint64_t sub_100053A3C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for FBANotEnrolledView(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v15 - v6;
  v8 = swift_allocObject(&unk_1000E85D0, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v1);
  KeyPath = swift_getKeyPath(&unk_1000CC7E0);
  v10 = (uint64_t *)&v7[*(int *)(v2 + 24)];
  *v10 = KeyPath;
  v11 = sub_10004BB9C(&qword_100116280);
  swift_storeEnumTagMultiPayload(v10, v11, 0);
  *v7 = 0;
  *((_QWORD *)v7 + 1) = sub_1000556C0;
  *((_QWORD *)v7 + 2) = v8;
  sub_1000556D0((uint64_t)v7, (uint64_t)v5);
  v12 = objc_allocWithZone((Class)sub_10004BB9C(&qword_100116690));
  v13 = (void *)UIHostingController.init(rootView:)(v5);
  objc_msgSend(v13, "setModalPresentationStyle:", 2);
  objc_msgSend(v1, "presentViewController:animated:completion:", v13, 1, 0);

  return sub_100055714((uint64_t)v7);
}

void sub_100053B94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

void sub_100053C28(void *a1, id a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  NSObject *v20;
  NSObject *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  int v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  _QWORD *v59;
  void **v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  void ***v68;
  void **v69;
  void **v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  NSObject *v77;
  void **v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  void **v84;
  int v85;
  NSObject *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t v93;
  void **aBlock;
  _QWORD v95[4];
  uint64_t v96;

  v8 = v7;
  v88 = a7;
  v89 = a5;
  v90 = a6;
  v13 = type metadata accessor for Logger(0);
  v87 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005566C();
  v16 = (void *)static UIStoryboard.feedbackDraftViewController.getter();
  v17 = objc_opt_self(FBKBugFormTableViewController);
  v92 = v16;
  v18 = (void *)swift_dynamicCastObjCClass(v16, v17);
  if (!v18)
    goto LABEL_55;
  v19 = v18;
  objc_msgSend(v18, "setDelegate:", v8);
  objc_msgSend(v19, "setPendingStub:", a1);
  objc_msgSend(v19, "setCanShowTopicPicker:", 1);
  objc_msgSend(v19, "setShouldShowUserSwitcherInForm:", 0);
  objc_msgSend(v19, "setCanShowTeamPicker:", 1);
  objc_msgSend(v19, "setLaunchAction:", a4);
  objc_msgSend(v19, "setSubmissionStyle:", 0);
  v20 = objc_msgSend(v8, "splitViewController");
  v91 = v8;
  if (v20)
  {
    v21 = v20;
    v22 = -[NSObject traitCollection](v20, "traitCollection");
    v23 = objc_msgSend(v22, "horizontalSizeClass");

    if (v23 == (id)2)
    {
      v24 = -[NSObject view](v21, "view");
      if (!v24)
      {
        __break(1u);
LABEL_54:

        __break(1u);
LABEL_55:

        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003DLL, 0x80000001000D50B0, "Feedback_Assistant/FBAMailboxesViewController+InSwift.swift", 59, 2, 54, 0);
        __break(1u);
        return;
      }
      v25 = v24;
      objc_msgSend(v24, "frame");
      v27 = v26;
      v29 = v28;

      v30 = v92;
      objc_msgSend(v19, "setPreferredContentSize:", v27 * 0.7, v29 * 0.7);

    }
  }
  else
  {
    if (qword_100115DA8 != -1)
      swift_once(&qword_100115DA8, sub_10005134C);
    v31 = sub_10005067C(v13, (uint64_t)static Logger.app);
    v21 = Logger.logObject.getter(v31);
    v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v32, "No split view controller from Mailboxes. Cannot set preferred content size for BFTVC", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }
  }

  if (a4)
  {
    v34 = a4;
    v35 = objc_msgSend(v34, "exactMatchFormStub");
    if (v35)
    {
      v36 = v35;
      v37 = objc_msgSend((id)objc_opt_self(FBKBugFormStub), "predicateForStub:", v35);
      objc_msgSend(v19, "setCandidateFormStubsPredicate:", v37);

      if (!a1)
        goto LABEL_13;
LABEL_21:
      v49 = a1;
      v50 = objc_msgSend(v49, "name");
      if (v50)
      {
        v51 = v50;
        v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
        v54 = v53;

      }
      else
      {
        v52 = 0;
        v54 = 0xE000000000000000;
      }
      if (qword_100115DA8 != -1)
        swift_once(&qword_100115DA8, sub_10005134C);
      sub_10005067C(v13, (uint64_t)static Logger.app);
      a2 = v49;
      v55 = swift_bridgeObjectRetain(v54);
      v56 = Logger.logObject.getter(v55);
      v57 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v56, v57))
      {
        v87 = v52;
        v58 = swift_slowAlloc(22, -1);
        v59 = (_QWORD *)swift_slowAlloc(8, -1);
        v60 = (void **)swift_slowAlloc(32, -1);
        aBlock = v60;
        *(_DWORD *)v58 = 138543618;
        v61 = objc_msgSend(a2, "ID");
        v62 = v61;
        if (v61)
          v93 = (uint64_t)v61;
        else
          v93 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &aBlock);
        *v59 = v62;

        *(_WORD *)(v58 + 12) = 2080;
        swift_bridgeObjectRetain(v54);
        v93 = sub_100094680(v87, v54, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &aBlock);
        swift_bridgeObjectRelease_n(v54, 3);
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "Will launch new draft for form: %{public}@ - %s", (uint8_t *)v58, 0x16u);
        v71 = sub_10004BB9C(&qword_1001169C0);
        swift_arrayDestroy(v59, 1, v71);
        swift_slowDealloc(v59, -1, -1);
        swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v60, -1, -1);
        swift_slowDealloc(v58, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v54, 2);
      }
      objc_msgSend(v19, "loadNewResponseForBugFormStub:forTeam:", a2, v89);
      goto LABEL_48;
    }

  }
  v48 = objc_msgSend((id)objc_opt_self(FBKBugFormStub), "predicateForAllStubs");
  objc_msgSend(v19, "setCandidateFormStubsPredicate:", v48);

  if (a1)
    goto LABEL_21;
LABEL_13:
  if (a3)
  {
    v38 = qword_100115DA8;
    v39 = a3;
    if (v38 != -1)
      swift_once(&qword_100115DA8, sub_10005134C);
    v40 = sub_10005067C(v13, (uint64_t)static Logger.app);
    v41 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v15, v40, v13);
    a2 = v39;
    v42 = Logger.logObject.getter(a2);
    v43 = static os_log_type_t.default.getter();
    v86 = v42;
    if (!os_log_type_enabled(v42, (os_log_type_t)v43))
    {

      (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v13);
LABEL_43:
      objc_msgSend(v19, "loadNewResponseForSurvey:forTeam:", a2, v89);
LABEL_48:

      goto LABEL_49;
    }
    v44 = swift_slowAlloc(22, -1);
    v84 = (void **)swift_slowAlloc(32, -1);
    aBlock = v84;
    *(_DWORD *)v44 = 134218242;
    v45 = objc_msgSend(a2, "ID");
    if (v45)
    {
      v46 = v45;
      v47 = objc_msgSend(v45, "integerValue");

    }
    else
    {
      v47 = 0;
      v46 = a2;
    }
    v85 = v43;

    v93 = (uint64_t)v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &aBlock);

    *(_WORD *)(v44 + 12) = 2082;
    v72 = objc_msgSend(a2, "name");
    if (v72)
    {
      v73 = v72;
      v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
      v76 = v75;

      v93 = sub_100094680(v74, v76, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &aBlock);

      swift_bridgeObjectRelease(v76);
      v77 = v86;
      _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v85, "Will new survey draft with form: %ld - %{public}s", (uint8_t *)v44, 0x16u);
      v78 = v84;
      swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v78, -1, -1);
      swift_slowDealloc(v44, -1, -1);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v15, v13);
      goto LABEL_43;
    }
    goto LABEL_54;
  }
  if (a2)
  {
    v63 = qword_100115DA8;
    v64 = a2;
    if (v63 != -1)
      swift_once(&qword_100115DA8, sub_10005134C);
    sub_10005067C(v13, (uint64_t)static Logger.app);
    a2 = v64;
    v65 = Logger.logObject.getter(a2);
    v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc(12, -1);
      v68 = (void ***)swift_slowAlloc(8, -1);
      *(_DWORD *)v67 = 138543362;
      v69 = (void **)objc_msgSend(a2, "ID");
      v70 = v69;
      if (v69)
        aBlock = v69;
      else
        aBlock = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v95);
      *v68 = v70;

      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Will launch draft with ID: %{public}@", v67, 0xCu);
      v79 = sub_10004BB9C(&qword_1001169C0);
      swift_arrayDestroy(v68, 1, v79);
      swift_slowDealloc(v68, -1, -1);
      swift_slowDealloc(v67, -1, -1);

    }
    else
    {

    }
    objc_msgSend(v19, "loadDraft:", a2);
    goto LABEL_48;
  }
LABEL_49:
  v80 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v19);
  if (v90)
  {
    v81 = v88;
    v95[3] = v90;
    v96 = v88;
    aBlock = _NSConcreteStackBlock;
    v95[0] = 1107296256;
    v95[1] = sub_10008F5C0;
    v95[2] = &unk_1000E8598;
    v82 = _Block_copy(&aBlock);
    v83 = v96;
    swift_retain(v81);
    swift_release(v83);
  }
  else
  {
    v82 = 0;
  }
  objc_msgSend(v91, "presentViewController:animated:completion:", v80, 1, v82);
  _Block_release(v82);

}

void FBAMailboxesViewController.controllerWillFinishSubmission(_:)(uint64_t a1)
{
  sub_100054888(a1, (SEL *)&selRef_resetViewControllers);
}

void FBAMailboxesViewController.controllerWillResignFirstActive(_:)(uint64_t a1)
{
  sub_100054888(a1, (SEL *)&selRef_saveDraftIfNeeded);
}

void sub_100054888(uint64_t a1, SEL *a2)
{
  id v3;

  v3 = objc_msgSend((id)objc_opt_self(FBADraftManager), "sharedInstance");
  objc_msgSend(v3, *a2);

}

void sub_1000548E8(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  void *v7;
  id v8;
  id v9;
  id v10;

  v7 = (void *)objc_opt_self(FBADraftManager);
  v8 = a3;
  v9 = a1;
  v10 = objc_msgSend(v7, "sharedInstance");
  objc_msgSend(v10, *a4);

}

void sub_100054970(void *a1)
{
  NSObject *v2;
  id v3;
  void *v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *v13;

  v2 = objc_msgSend(a1, "launchAction");
  if (v2)
  {
    v13 = v2;
    if (!-[NSObject isCaptive](v2, "isCaptive"))
    {
      v8 = v13;
LABEL_14:

      return;
    }
    v3 = objc_msgSend(a1, "formResponse");
    if (!v3)
    {
      if (qword_100115DA8 != -1)
        swift_once(&qword_100115DA8, sub_10005134C);
      v9 = type metadata accessor for Logger(0);
      v10 = sub_10005067C(v9, (uint64_t)static Logger.app);
      v7 = Logger.logObject.getter(v10);
      v11 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v7, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v11, "Form Response is nil. Cannot showModalFeedbackController", v12, 2u);
        swift_slowDealloc(v12, -1, -1);
        v5 = v13;
      }
      else
      {
        v5 = v7;
        v7 = v13;
      }
      goto LABEL_13;
    }
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(FBADraftManager), "sharedInstance");
    v6 = objc_msgSend(v4, "contentItem");
    if (v6)
    {
      v7 = v6;
      -[NSObject showModalFeedbackControllerForContentItem:launchAction:](v5, "showModalFeedbackControllerForContentItem:launchAction:", v6, v13);

LABEL_13:
      v8 = v7;
      goto LABEL_14;
    }
    __break(1u);
  }
}

void sub_100054BF0(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "launchAction");
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v1, "isCaptive"))
      objc_msgSend((id)objc_opt_self(iFBKUtils), "exitCaptiveModeRemovingFromHomeScreen:", objc_msgSend(v2, "shouldMakeFBAVisible"));

  }
}

uint64_t FBAMailboxesViewController.batchEvaluationViewController(useNavigationStack:showsCloseButton:onDismiss:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v8 = type metadata accessor for ScoreController(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = swift_retain(a4);
  v10 = ScoreController.init()(v9);
  v11 = objc_allocWithZone((Class)type metadata accessor for BatchEvaluationViewController(0));
  return BatchEvaluationViewController.init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)(v10, a1, a2, a3, a4);
}

uint64_t FBAMailboxesViewController.shouldShowBatchUI(completion:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for BatchEvaluationViewController(0);
  return static BatchEvaluationViewController.shouldShowBatchUI(completion:)(a1, a2);
}

void _sSo26FBAMailboxesViewControllerC18Feedback_AssistantE10controller_37didClickSwitchAccountsWithCurrentUserySo015FBKBugFormTablebC0C_So7FBKUserCtF_0()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  NSObject *oslog;
  uint64_t v6;
  uint64_t v7;

  if (qword_100115DA8 != -1)
    swift_once(&qword_100115DA8, sub_10005134C);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_10005067C(v0, (uint64_t)static Logger.app);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(12, -1);
    v4 = swift_slowAlloc(32, -1);
    v7 = v4;
    *(_DWORD *)v3 = 136315138;
    v6 = sub_100094680(0xD000000000000034, 0x80000001000D5190, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v6, &v7);
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "%s not supported in FBA", v3, 0xCu);
    swift_arrayDestroy(v4, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v4, -1, -1);
    swift_slowDealloc(v3, -1, -1);

  }
  else
  {

  }
}

void _sSo26FBAMailboxesViewControllerC18Feedback_AssistantE10controller_28didFinishSubmissionWithErrorySo015FBKBugFormTablebC0C_s0K0_pSgtF_0(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t aBlock[5];
  uint64_t v16;

  v2 = v1;
  if (qword_100115DA8 != -1)
    swift_once(&qword_100115DA8, sub_10005134C);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10005067C(v4, (uint64_t)static Logger.app);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    aBlock[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v14 = sub_100094680(0xD00000000000002BLL, 0x80000001000D5160, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  v10 = swift_allocObject(&unk_1000E8698, 24, 7);
  *(_QWORD *)(v10 + 16) = a1;
  aBlock[4] = (uint64_t)sub_1000558EC;
  v16 = v10;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10008F5C0;
  aBlock[3] = (uint64_t)&unk_1000E86B0;
  v11 = _Block_copy(aBlock);
  v12 = v16;
  v13 = a1;
  swift_release(v12);
  objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v11);
  _Block_release(v11);
}

void _sSo26FBAMailboxesViewControllerC18Feedback_AssistantE10controller_27didFailToLoadDraftWithErrorySo015FBKBugFormTablebC0C_s0M0_ptF_0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *oslog;
  uint64_t v7;
  uint64_t v8;

  objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, 0);
  if (qword_100115DA8 != -1)
    swift_once(&qword_100115DA8, sub_10005134C);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_10005067C(v1, (uint64_t)static Logger.app);
  oslog = Logger.logObject.getter(v2);
  v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(12, -1);
    v5 = swift_slowAlloc(32, -1);
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v7 = sub_100094680(0xD00000000000002ALL, 0x80000001000D5130, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, &v8);
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "%s", v4, 0xCu);
    swift_arrayDestroy(v5, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1, -1);
    swift_slowDealloc(v4, -1, -1);

  }
  else
  {

  }
}

void _sSo26FBAMailboxesViewControllerC18Feedback_AssistantE10controller_33didRequestDismissalWithSavedDraftySo015FBKBugFormTablebC0C_SbtF_0(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t aBlock[5];
  uint64_t v16;

  v2 = v1;
  if (qword_100115DA8 != -1)
    swift_once(&qword_100115DA8, sub_10005134C);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10005067C(v4, (uint64_t)static Logger.app);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    aBlock[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v14 = sub_100094680(0xD000000000000030, 0x80000001000D50F0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  v10 = swift_allocObject(&unk_1000E8648, 24, 7);
  *(_QWORD *)(v10 + 16) = a1;
  aBlock[4] = (uint64_t)sub_1000558E4;
  v16 = v10;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10008F5C0;
  aBlock[3] = (uint64_t)&unk_1000E8660;
  v11 = _Block_copy(aBlock);
  v12 = v16;
  v13 = a1;
  swift_release(v12);
  objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v11);
  _Block_release(v11);
}

uint64_t sub_10005561C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100055640(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_100055654()
{
  uint64_t v0;

  return sub_100089A44(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10005565C(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

unint64_t sub_10005566C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116688;
  if (!qword_100116688)
  {
    v1 = objc_opt_self(UIStoryboard);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100116688);
  }
  return result;
}

uint64_t sub_1000556A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000556B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000556C0()
{
  uint64_t v0;

  sub_100053B94(v0);
}

uint64_t sub_1000556D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FBANotEnrolledView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100055714(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FBANotEnrolledView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100055750@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100053778(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_10005575C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001166A0;
  if (!qword_1001166A0)
  {
    v1 = type metadata accessor for BatchUIButtonView(255);
    result = swift_getWitnessTable(&unk_1000CD784, v1);
    atomic_store(result, (unint64_t *)&qword_1001166A0);
  }
  return result;
}

unint64_t sub_1000557A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001166A8;
  if (!qword_1001166A8)
  {
    v1 = sub_10004BC28(&qword_100116698);
    result = swift_getWitnessTable(&protocol conformance descriptor for UIHostingConfiguration<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1001166A8);
  }
  return result;
}

uint64_t sub_1000557F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100055814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100055890()
{
  uint64_t v0;

  type metadata accessor for IndexPath(0);
  sub_1000538A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000558C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000558E4()
{
  uint64_t v0;

  sub_100054BF0(*(void **)(v0 + 16));
}

void sub_1000558EC()
{
  uint64_t v0;

  sub_100054970(*(void **)(v0 + 16));
}

id sub_100055A3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBANoBugSessionAlertViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBANoBugSessionAlertViewController()
{
  return objc_opt_self(_TtC18Feedback_Assistant34FBANoBugSessionAlertViewController);
}

void sub_100055A8C(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  void *object;
  id v11;
  Swift::String v12;
  Swift::String v13;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  void *v18;
  NSString v19;
  NSString v20;
  id v21;
  NSString v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v4 = v3;
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v24._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 19279;
  v7._object = (void *)0xE200000000000000;
  v8.value._countAndFlagsBits = v2;
  v8.value._object = v4;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v24._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v24)._object;
  swift_bridgeObjectRelease(v4);

  v11 = objc_msgSend(v5, "mainBundle");
  v12._countAndFlagsBits = 0xD00000000000001ALL;
  v25._countAndFlagsBits = 0xD00000000000005ALL;
  v25._object = (void *)0x80000001000D5250;
  v12._object = (void *)0x80000001000D5210;
  v13._object = (void *)0x80000001000D5230;
  v13._countAndFlagsBits = 0xD00000000000001CLL;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v25)._object;

  v15 = objc_msgSend(v5, "mainBundle");
  v26._countAndFlagsBits = 0xD00000000000005CLL;
  v16._countAndFlagsBits = 0xD00000000000005DLL;
  v26._object = (void *)0x80000001000D5330;
  v17._object = (void *)0x80000001000D52B0;
  v16._object = (void *)0x80000001000D52D0;
  v17._countAndFlagsBits = 0xD00000000000001CLL;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v15, v16, v26)._object;

  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  v21 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v19, v20, 1);

  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v23 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v22, 0, 0);

  objc_msgSend(v21, "addAction:", v23);
  objc_msgSend(a1, "presentViewController:animated:completion:", v21, 1, 0);

}

void sub_100055DD8()
{
  void *v0;
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t ObjCClassFromMetadata;
  NSString v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  void *object;
  NSString v17;
  objc_super v18;
  Swift::String v19;

  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for FBAFilterPickerController();
  objc_msgSendSuper2(&v18, "viewDidLoad");
  v1 = objc_msgSend(v0, "tableView");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100056A70();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3);
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v5);

    v6 = objc_msgSend(v0, "navigationItem");
    v7 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v0, "dismissSelf");
    objc_msgSend(v6, "setRightBarButtonItem:", v7);

    v8 = objc_msgSend(v0, "navigationItem");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
    v11 = v10;
    v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v19._object = (void *)0xE000000000000000;
    v13._countAndFlagsBits = 0x535245544C4946;
    v13._object = (void *)0xE700000000000000;
    v14.value._countAndFlagsBits = v9;
    v14.value._object = v11;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v19._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v19)._object;
    swift_bridgeObjectRelease(v11);

    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v8, "setTitle:", v17);

  }
  else
  {
    __break(1u);
  }
}

void sub_10005610C(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSString v6;
  Class isa;
  id v8;
  void *v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;

  v3 = v2;
  v6 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v6, isa);

  v9 = *(void **)(v3 + OBJC_IVAR____TtC18Feedback_Assistant25FBAFilterPickerController_filterManager);
  if (!v9)
    return;
  v10 = v9;
  v11 = IndexPath.section.getter();
  v12 = v11;
  v13 = *(_QWORD *)&v10[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups];
  if ((v13 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v14 = (char *)*(id *)(v13 + 8 * v11 + 32);
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain(*(_QWORD *)&v10[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups]);
  v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v13);
  swift_bridgeObjectRelease(v13);
LABEL_6:
  a2 = IndexPath.item.getter();
  v13 = *(_QWORD *)&v14[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  swift_bridgeObjectRetain(v13);

  if ((v13 & 0xC000000000000001) != 0)
  {
LABEL_24:
    v15 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v13);
    goto LABEL_10;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (a2 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_26:
    __break(1u);
    return;
  }
  v15 = (char *)*(id *)(v13 + 8 * a2 + 32);
LABEL_10:
  v16 = v15;

  swift_bridgeObjectRelease(v13);
  v17 = objc_msgSend(v8, "textLabel");
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v16, "title");
    objc_msgSend(v18, "setText:", v19);

  }
  v20 = objc_msgSend(v8, "imageView");
  if (v20)
  {
    v21 = v20;
    v22 = *(id *)&v16[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image];
    objc_msgSend(v21, "setImage:", v22);

  }
  v23 = objc_msgSend(v8, "imageView");
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend((id)objc_opt_self(iFBAConstants), "tintColor");
    objc_msgSend(v24, "setTintColor:", v25);

  }
  if (objc_msgSend(v16, "active"))
    v26 = 3;
  else
    v26 = 0;
  objc_msgSend(v8, "setAccessoryType:", v26);
  objc_msgSend(v8, "setAccessibilityTraits:", UIAccessibilityTraitButton);

}

id sub_10005671C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFilterPickerController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAFilterPickerController()
{
  return objc_opt_self(_TtC18Feedback_Assistant25FBAFilterPickerController);
}

unint64_t sub_10005677C(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAFilterPickerController_filterManager);
  if (!v2)
    return 0;
  v3 = result;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups));
    v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v4);
    swift_bridgeObjectRelease(v4);
LABEL_6:
    v3 = *(_QWORD *)&v5[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
    swift_bridgeObjectRetain(v3);

    if (!((unint64_t)v3 >> 62))
    {
      v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_8:
      swift_bridgeObjectRelease(v3);
      return v6;
    }
LABEL_13:
    if (v3 < 0)
      v7 = v3;
    else
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v6 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v3);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    v5 = (char *)*(id *)(v4 + 8 * result + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_100056884(uint64_t a1)
{
  char *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;

  v2 = v1;
  v4 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAFilterPickerController_filterManager];
  if (v4)
  {
    v5 = v4;
    sub_100078A34(a1);

  }
  v6 = objc_msgSend(v2, "tableView");
  if (v6)
  {
    v7 = v6;
    v8 = sub_10004BB9C(&qword_100116708);
    v9 = type metadata accessor for IndexPath(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = (v11 + 32) & ~v11;
    v13 = swift_allocObject(v8, v12 + *(_QWORD *)(v10 + 72), v11 | 7);
    *(_OWORD *)(v13 + 16) = xmmword_1000CC730;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13 + v12, a1, v9);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v13);
    objc_msgSend(v7, "reloadRowsAtIndexPaths:withRowAnimation:", isa, 100);

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1000569A0(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAFilterPickerController_filterManager);
  if (!v2)
    return 0;
  v3 = result;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups));
    v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v4);
    swift_bridgeObjectRelease(v4);
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    v5 = (char *)*(id *)(v4 + 8 * result + 32);
LABEL_6:
    v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
    swift_bridgeObjectRetain(*(_QWORD *)&v5[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title + 8]);

    return v6;
  }
  __break(1u);
  return result;
}

unint64_t sub_100056A70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116710;
  if (!qword_100116710)
  {
    v1 = objc_opt_self(UITableViewCell);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100116710);
  }
  return result;
}

id sub_100056DB0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAEnhancedLoggingInbox();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAEnhancedLoggingInbox()
{
  return objc_opt_self(_TtC18Feedback_Assistant23FBAEnhancedLoggingInbox);
}

unint64_t sub_100056E00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116990;
  if (!qword_100116990)
  {
    v1 = objc_opt_self(FBKContentItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100116990);
  }
  return result;
}

uint64_t sub_100056E3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = sub_10004BB9C(&qword_1001168D8);
  v4 = __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v13[-v7];
  v9 = v1 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController____lazy_storage___temporaryDirectory;
  swift_beginAccess(v1 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController____lazy_storage___temporaryDirectory, v14, 0, 0);
  sub_10004F544(v9, (uint64_t)v8, &qword_1001168D8);
  v10 = sub_10004BB9C(&qword_100116790);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_10005B694((uint64_t)v8, a1);
  sub_10004F588((uint64_t)v8, &qword_1001168D8);
  sub_100053458(0, (unint64_t *)&unk_1001168E0, FBKFileManager_ptr);
  static FBKFileManager.temporaryDirectory(pathComponents:)(_swiftEmptyArrayStorage);
  sub_10004F544(a1, (uint64_t)v6, &qword_100116790);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v13, 33, 0);
  sub_10005BEEC((uint64_t)v6, v9);
  return swift_endAccess(v13);
}

uint64_t sub_100057074(void *a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  void (*v19)(uint64_t);
  objc_class *v20;
  _BYTE *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  char *v26;
  id v27;
  void (**v28)(uint64_t);
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  Swift::String v33;
  Swift::String_optional v34;
  Swift::String v35;
  Swift::String v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSString v41;
  id v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  char *v49;
  id v50;
  id (**v51)(uint64_t);
  id v52;
  id v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  NSString v61;
  id v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  void *v66;
  id v67;
  id v68;
  char *v69;
  id v70;
  id (**v71)(uint64_t);
  id v72;
  uint64_t v73;
  uint64_t v74;
  id v76;
  uint64_t v77;
  id v78;
  id v79;
  uint64_t v80;
  objc_super v81;
  objc_super v82;
  objc_super v83;
  Swift::String v84;
  Swift::String v85;
  Swift::String v86;

  v2 = v1;
  ObjectType = swift_getObjectType(v1);
  v77 = FBKCommonStrings;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v7 = v6;
  v76 = (id)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v76, "mainBundle");
  v9._countAndFlagsBits = 0xD00000000000001CLL;
  v84._object = (void *)0xE000000000000000;
  v9._object = (void *)0x80000001000D59C0;
  v10.value._countAndFlagsBits = v5;
  v10.value._object = v7;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v84._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v84);
  swift_bridgeObjectRelease(v7);

  v13 = (void *)FBKSystemImageNameAttachDeviceDiagnostics;
  v79 = (id)objc_opt_self(UIImage);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;
  v16 = v13;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v18 = objc_msgSend(v79, "systemImageNamed:", v17);

  v19 = (void (*)(uint64_t))swift_allocObject(&unk_1000E89C0, 40, 7);
  *((_QWORD *)v19 + 2) = v2;
  *((_QWORD *)v19 + 3) = a1;
  *((_QWORD *)v19 + 4) = ObjectType;
  v20 = (objc_class *)type metadata accessor for FBAActionControllerAction();
  v21 = objc_allocWithZone(v20);
  v22 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(_QWORD *)&v21[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v21[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  *(Swift::String *)&v21[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title] = v12;
  v23 = *(void **)&v21[v22];
  *(_QWORD *)&v21[v22] = v18;
  v24 = v2;
  v25 = a1;
  v26 = v21;
  v27 = v18;

  v28 = (void (**)(uint64_t))&v26[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  *v28 = sub_10005BD18;
  v28[1] = v19;
  swift_retain(v19);

  v83.receiver = v26;
  v83.super_class = v20;
  v78 = objc_msgSendSuper2(&v83, "init");

  swift_release(v19);
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
  v31 = v30;
  v32 = objc_msgSend(v76, "mainBundle");
  v33._countAndFlagsBits = 0xD000000000000024;
  v85._object = (void *)0xE000000000000000;
  v33._object = (void *)0x80000001000D59E0;
  v34.value._countAndFlagsBits = v29;
  v34.value._object = v31;
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v85._countAndFlagsBits = 0;
  v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v85);
  swift_bridgeObjectRelease(v31);

  v37 = (void *)FBKSystemImageNameAttachPhoto;
  static String._unconditionallyBridgeFromObjectiveC(_:)(FBKSystemImageNameAttachPhoto);
  v39 = v38;
  v40 = v37;
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  v42 = objc_msgSend(v79, "systemImageNamed:", v41);

  v43 = swift_allocObject(&unk_1000E89E8, 32, 7);
  *(_QWORD *)(v43 + 16) = v24;
  *(_QWORD *)(v43 + 24) = v25;
  v44 = objc_allocWithZone(v20);
  v45 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(_QWORD *)&v44[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v44[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  *(Swift::String *)&v44[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title] = v36;
  v46 = *(void **)&v44[v45];
  *(_QWORD *)&v44[v45] = v42;
  v47 = v24;
  v48 = v25;
  v49 = v44;
  v50 = v42;

  v51 = (id (**)(uint64_t))&v49[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  *v51 = sub_10005BD24;
  v51[1] = (id (*)(uint64_t))v43;
  swift_retain(v43);

  v82.receiver = v49;
  v82.super_class = v20;
  v52 = objc_msgSendSuper2(&v82, "init");

  swift_release(v43);
  v53 = objc_msgSend(v76, "mainBundle");
  v54._countAndFlagsBits = 0xD00000000000001BLL;
  v86._object = (void *)0x80000001000D5A30;
  v54._object = (void *)0x80000001000D5A10;
  v55._countAndFlagsBits = 0x73656C6946;
  v55._object = (void *)0xE500000000000000;
  v86._countAndFlagsBits = 0xD000000000000013;
  v56 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)v53, v55, v86);

  v57 = (void *)FBKSystemImageNameFolder;
  static String._unconditionallyBridgeFromObjectiveC(_:)(FBKSystemImageNameFolder);
  v59 = v58;
  v60 = v57;
  v61 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v59);
  v62 = objc_msgSend(v79, "systemImageNamed:", v61);

  v63 = swift_allocObject(&unk_1000E8A10, 32, 7);
  *(_QWORD *)(v63 + 16) = v47;
  *(_QWORD *)(v63 + 24) = v48;
  v64 = objc_allocWithZone(v20);
  v65 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(_QWORD *)&v64[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v64[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  *(Swift::String *)&v64[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title] = v56;
  v66 = *(void **)&v64[v65];
  *(_QWORD *)&v64[v65] = v62;
  v67 = v47;
  v68 = v48;
  v69 = v64;
  v70 = v62;

  v71 = (id (**)(uint64_t))&v69[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  *v71 = sub_10005BD2C;
  v71[1] = (id (*)(uint64_t))v63;
  swift_retain(v63);

  v81.receiver = v69;
  v81.super_class = v20;
  v72 = objc_msgSendSuper2(&v81, "init");

  swift_release(v63);
  v73 = sub_10004BB9C((uint64_t *)&unk_100117030);
  v74 = swift_allocObject(v73, 56, 7);
  *(_OWORD *)(v74 + 16) = xmmword_1000CC8E0;
  *(_QWORD *)(v74 + 32) = v78;
  *(_QWORD *)(v74 + 40) = v72;
  *(_QWORD *)(v74 + 48) = v52;
  v80 = v74;
  specialized Array._endMutation()(v74);
  return v80;
}

void sub_100057664(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *Strong;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  _QWORD v22[5];
  _QWORD *v23;

  v8 = static os_log_type_t.default.getter();
  v9 = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
  if (v9)
  {
    v10 = v9;
    os_log(_:dso:log:_:_:)(v8, &_mh_execute_header);

    v11 = a2 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController_attachmentDelegate;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController_attachmentDelegate, v12);
    if (Strong)
    {
      v15 = Strong;
      if ((objc_msgSend(Strong, "respondsToSelector:", "attachmentsAlertDidSelectOption:") & 1) != 0)
        objc_msgSend(v15, "attachmentsAlertDidSelectOption:", a2);
      swift_unknownObjectRelease(v15);
    }
    v16 = swift_unknownObjectWeakLoadStrong(v11, v14);
    if (v16)
    {
      v17 = (void *)v16;
      v18 = (_QWORD *)swift_allocObject(&unk_1000E8C18, 40, 7);
      v18[2] = a1;
      v18[3] = a3;
      v18[4] = a4;
      v22[4] = sub_10005BDF8;
      v23 = v18;
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 1107296256;
      v22[2] = sub_100057D74;
      v22[3] = &unk_1000E8C30;
      v19 = _Block_copy(v22);
      v20 = v23;
      swift_unknownObjectRetain(a1);
      v21 = a3;
      swift_release(v20);
      objc_msgSend(v17, "attachmentsAlert:needsDeviceDiagnosticsController:", a2, v19);
      swift_unknownObjectRelease(v17);
      _Block_release(v19);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10005780C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  Class isa;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void **aBlock;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = __chkstk_darwin(v10);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v37 = static os_log_type_t.error.getter(v11);
    v38 = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
    if (v38)
    {
      v56 = v38;
      os_log(_:dso:log:_:_:)(v37, &_mh_execute_header);

      return;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  v55 = v7;
  v56 = a3;
  v53 = v12;
  v54 = v11;
  v15 = a1;
  v16 = objc_msgSend(v15, "additionalDeviceCandidates");
  v17 = sub_100053458(0, (unint64_t *)&unk_100116F70, FBKGroupedDevice_ptr);
  v18 = sub_10005BE04();
  v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v16, v17, v18);

  v20 = swift_allocObject(&unk_1000E8C68, 24, 7);
  *(_QWORD *)(v20 + 16) = v15;
  v21 = objc_allocWithZone((Class)FBADevicePickingNavigationController);
  v22 = v15;
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v19);
  v61 = sub_10005BE80;
  v62 = v20;
  aBlock = _NSConcreteStackBlock;
  v58 = 1107296256;
  v59 = sub_10008F1A0;
  v60 = &unk_1000E8C80;
  v24 = _Block_copy(&aBlock);
  v25 = objc_msgSend(v21, "initWithDeviceChoices:allowsMultipleSelection:completion:", isa, 1, v24);

  _Block_release(v24);
  v26 = swift_release(v62);
  if (!v25)
  {
    v39 = static os_log_type_t.error.getter(v26);
    v40 = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
    if (v40)
    {
      v41 = v40;
      os_log(_:dso:log:_:_:)(v39, &_mh_execute_header);

      return;
    }
    goto LABEL_11;
  }
  v27 = v25;
  objc_msgSend(v27, "setModalPresentationStyle:", 2);
  v28 = type metadata accessor for FBAActionSheetController();
  v29 = swift_dynamicCastClass(a2, v28);
  if (v29)
  {
    v30 = (void *)v29;
    v31 = swift_allocObject(&unk_1000E8D08, 32, 7);
    v32 = v56;
    *(_QWORD *)(v31 + 16) = v56;
    *(_QWORD *)(v31 + 24) = v27;
    v61 = sub_10005BEB4;
    v62 = v31;
    aBlock = _NSConcreteStackBlock;
    v58 = 1107296256;
    v59 = sub_10008F5C0;
    v60 = &unk_1000E8D20;
    v33 = _Block_copy(&aBlock);
    v34 = v62;
    v35 = v27;
    v36 = v32;
    swift_unknownObjectRetain(a2);
    swift_release(v34);
    objc_msgSend(v30, "dismissViewControllerAnimated:completion:", 1, v33);

    _Block_release(v33);
    swift_unknownObjectRelease(a2);
  }
  else
  {
    sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
    v42 = (void *)static OS_dispatch_queue.main.getter();
    v43 = swift_allocObject(&unk_1000E8CB8, 32, 7);
    v44 = v56;
    *(_QWORD *)(v43 + 16) = v56;
    *(_QWORD *)(v43 + 24) = v27;
    v61 = sub_10005BF88;
    v62 = v43;
    aBlock = _NSConcreteStackBlock;
    v58 = 1107296256;
    v59 = sub_10008F5C0;
    v60 = &unk_1000E8CD0;
    v45 = _Block_copy(&aBlock);
    v46 = v62;
    v47 = v27;
    v48 = v44;
    v49 = swift_release(v46);
    static DispatchQoS.unspecified.getter(v49);
    aBlock = (void **)&_swiftEmptyArrayStorage;
    v50 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v51 = sub_10004BB9C((uint64_t *)&unk_100116980);
    v52 = sub_10004F6D8((unint64_t *)&qword_100115FC0, (uint64_t *)&unk_100116980, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v51, v52, v6, v50);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v9, v45);
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v54);
  }
}

void sub_100057D2C(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  sub_10005B7B0(a1, v3);

}

void sub_100057D74(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

id sub_100057DC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id result;
  void *v21;
  uint64_t v22;
  void *Strong;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void **aBlock;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  void *v57;
  void *v58;
  uint64_t v59;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  __chkstk_darwin(v6);
  v51 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PHPickerConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v48 - v17;
  v19 = static os_log_type_t.default.getter(v16);
  result = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
  if (result)
  {
    v21 = result;
    os_log(_:dso:log:_:_:)(v19, &_mh_execute_header);

    Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController_attachmentDelegate, v22);
    if (Strong)
    {
      v24 = Strong;
      if ((objc_msgSend(Strong, "respondsToSelector:", "attachmentsAlertDidSelectOption:") & 1) != 0)
        objc_msgSend(v24, "attachmentsAlertDidSelectOption:", a2);
      Strong = (void *)swift_unknownObjectRelease(v24);
    }
    PHPickerConfiguration.init()(Strong);
    PHPickerConfiguration.selectionLimit.setter(0);
    sub_100053458(0, &qword_1001168B8, PHPickerViewController_ptr);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v18, v11);
    v25 = (void *)PHPickerViewController.init(configuration:)(v15);
    v26 = sub_10004BD78((unint64_t *)&unk_1001168C0, type metadata accessor for FBAAddAttachmentsController, (uint64_t)&unk_1000CC960);
    v27 = swift_unknownObjectRetain(a2);
    PHPickerViewController.delegate.setter(v27, v26);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    v28 = type metadata accessor for FBAActionSheetController();
    v29 = swift_dynamicCastClass(a1, v28);
    if (v29)
    {
      v30 = (void *)v29;
      v31 = swift_allocObject(&unk_1000E8B78, 32, 7);
      *(_QWORD *)(v31 + 16) = a3;
      *(_QWORD *)(v31 + 24) = v25;
      v58 = sub_10005BD7C;
      v59 = v31;
      aBlock = _NSConcreteStackBlock;
      v55 = 1107296256;
      v56 = sub_10008F5C0;
      v57 = &unk_1000E8B90;
      v32 = _Block_copy(&aBlock);
      v33 = v59;
      v34 = a3;
      v35 = v25;
      swift_unknownObjectRetain(a1);
      swift_release(v33);
      objc_msgSend(v30, "dismissViewControllerAnimated:completion:", 1, v32);

      _Block_release(v32);
      return (id)swift_unknownObjectRelease(a1);
    }
    else
    {
      sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
      v36 = (void *)static OS_dispatch_queue.main.getter();
      v37 = swift_allocObject(&unk_1000E8B28, 32, 7);
      *(_QWORD *)(v37 + 16) = a3;
      *(_QWORD *)(v37 + 24) = v25;
      v58 = sub_10005BD64;
      v59 = v37;
      aBlock = _NSConcreteStackBlock;
      v55 = 1107296256;
      v56 = sub_10008F5C0;
      v57 = &unk_1000E8B40;
      v38 = _Block_copy(&aBlock);
      v39 = v59;
      v40 = a3;
      v41 = v25;
      v42 = swift_release(v39);
      static DispatchQoS.unspecified.getter(v42);
      aBlock = (void **)&_swiftEmptyArrayStorage;
      v43 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v44 = sub_10004BB9C((uint64_t *)&unk_100116980);
      v45 = sub_10004F6D8((unint64_t *)&qword_100115FC0, (uint64_t *)&unk_100116980, (uint64_t)&protocol conformance descriptor for [A]);
      v46 = v51;
      v47 = v53;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v44, v45, v53, v43);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v46, v38);
      _Block_release(v38);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v46, v47);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v10, v50);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10005824C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id result;
  void *v15;
  uint64_t v16;
  void *Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Class isa;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void **aBlock;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  void *v48;
  void *v49;
  uint64_t v50;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v43 - 8);
  v10 = __chkstk_darwin(v43);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = static os_log_type_t.default.getter(v10);
  result = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
  if (result)
  {
    v15 = result;
    os_log(_:dso:log:_:_:)(v13, &_mh_execute_header);

    Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController_attachmentDelegate, v16);
    if (Strong)
    {
      v18 = Strong;
      if ((objc_msgSend(Strong, "respondsToSelector:", "attachmentsAlertDidSelectOption:") & 1) != 0)
        objc_msgSend(v18, "attachmentsAlertDidSelectOption:", a2);
      swift_unknownObjectRelease(v18);
    }
    v19 = sub_10004BB9C(&qword_1001168B0);
    v20 = type metadata accessor for UTType(0);
    v21 = swift_allocObject(v19, ((*(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80) | 7);
    *(_OWORD *)(v21 + 16) = xmmword_1000CC730;
    static UTType.item.getter();
    v22 = objc_allocWithZone((Class)UIDocumentPickerViewController);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v21);
    v24 = objc_msgSend(v22, "initForOpeningContentTypes:asCopy:", isa, 1);

    objc_msgSend(v24, "setDelegate:", a2);
    objc_msgSend(v24, "setAllowsMultipleSelection:", 1);
    v25 = type metadata accessor for FBAActionSheetController();
    v26 = swift_dynamicCastClass(a1, v25);
    if (v26)
    {
      v27 = (void *)v26;
      v28 = swift_allocObject(&unk_1000E8A88, 32, 7);
      *(_QWORD *)(v28 + 16) = a3;
      *(_QWORD *)(v28 + 24) = v24;
      v49 = sub_10005BD34;
      v50 = v28;
      aBlock = _NSConcreteStackBlock;
      v46 = 1107296256;
      v47 = sub_10008F5C0;
      v48 = &unk_1000E8AA0;
      v29 = _Block_copy(&aBlock);
      v30 = v50;
      v31 = a3;
      v32 = v24;
      swift_unknownObjectRetain(a1);
      swift_release(v30);
      objc_msgSend(v27, "dismissViewControllerAnimated:completion:", 1, v29);

      _Block_release(v29);
      return (id)swift_unknownObjectRelease(a1);
    }
    else
    {
      sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
      v33 = (void *)static OS_dispatch_queue.main.getter();
      v34 = swift_allocObject(&unk_1000E8A38, 32, 7);
      *(_QWORD *)(v34 + 16) = a3;
      *(_QWORD *)(v34 + 24) = v24;
      v49 = sub_10005BF88;
      v50 = v34;
      aBlock = _NSConcreteStackBlock;
      v46 = 1107296256;
      v47 = sub_10008F5C0;
      v48 = &unk_1000E8A50;
      v35 = _Block_copy(&aBlock);
      v36 = v50;
      v37 = a3;
      v38 = v24;
      v39 = swift_release(v36);
      static DispatchQoS.unspecified.getter(v39);
      aBlock = (void **)&_swiftEmptyArrayStorage;
      v40 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v41 = sub_10004BB9C((uint64_t *)&unk_100116980);
      v42 = sub_10004F6D8((unint64_t *)&qword_100115FC0, (uint64_t *)&unk_100116980, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v41, v42, v6, v40);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v35);
      _Block_release(v35);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v6);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v43);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000586A8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v13 - 8);
  v29 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter();
  v17 = swift_allocObject(a3, 32, 7);
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  aBlock[4] = a4;
  v32 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008F5C0;
  aBlock[3] = a5;
  v18 = _Block_copy(aBlock);
  v19 = v32;
  v20 = a1;
  v21 = a2;
  v22 = swift_release(v19);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v23 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10004BB9C((uint64_t *)&unk_100116980);
  v25 = sub_10004F6D8((unint64_t *)&qword_100115FC0, (uint64_t *)&unk_100116980, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v10, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v29);
}

char *sub_1000588B8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  char *result;
  char *v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  Class isa;
  id v18;
  id v19;
  void *v20;
  Swift::String v21;

  v5 = static os_log_type_t.info.getter();
  result = (char *)objc_msgSend((id)objc_opt_self(FBALog), "appHandle");
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = result;
  os_log(_:dso:log:_:_:)(v5, &_mh_execute_header);

  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v21._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0x415454415F444441;
  v9._object = (void *)0xEE00544E454D4843;
  v10.value._countAndFlagsBits = 0x74536E6F6D6D6F43;
  v10.value._object = (void *)0xED000073676E6972;
  v11._countAndFlagsBits = 0x6174744120646441;
  v11._object = (void *)0xEE00746E656D6863;
  v21._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v21);

  v13 = sub_100057074(a1);
  v14 = objc_allocWithZone((Class)type metadata accessor for FBAActionSheetController());
  v15 = sub_100070CF4(v12._countAndFlagsBits, (uint64_t)v12._object, 0, 0, v13);
  result = (char *)objc_msgSend(a1, "tableView");
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v16 = result;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "deselectRowAtIndexPath:animated:", isa, 1);

  if (a3)
  {
    v18 = a3;
    v19 = objc_msgSend(v15, "popoverPresentationController");
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v18, "bounds");
      objc_msgSend(v20, "setSourceRect:");
      objc_msgSend(v20, "setSourceView:", v18);
      objc_msgSend(v20, "setPermittedArrowDirections:", 2);

    }
  }
  return v15;
}

id sub_100058C9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAAddAttachmentsController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100058D14()
{
  return type metadata accessor for FBAAddAttachmentsController(0);
}

uint64_t type metadata accessor for FBAAddAttachmentsController(uint64_t a1)
{
  uint64_t result;

  result = qword_100116778;
  if (!qword_100116778)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FBAAddAttachmentsController);
  return result;
}

void sub_100058D58(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\b";
  sub_100058DD0(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_100058DD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100116788)
  {
    v2 = sub_10004BC28(&qword_100116790);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100116788);
  }
}

void sub_100058E28(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  v5 = static os_log_type_t.default.getter(a1);
  v6 = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
  if (v6)
  {
    v7 = v6;
    os_log(_:dso:log:_:_:)(v5, &_mh_execute_header);

    objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController_attachmentDelegate, v8);
    if (Strong)
    {
      v10 = (void *)Strong;
      v11 = swift_allocObject(&unk_1000E86F0, 24, 7);
      *(_QWORD *)(v11 + 16) = a2;
      v14[4] = sub_10005B4B8;
      v15 = v11;
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 1107296256;
      v14[2] = sub_100057D74;
      v14[3] = &unk_1000E8708;
      v12 = _Block_copy(v14);
      v13 = v15;
      swift_bridgeObjectRetain(a2);
      swift_release(v13);
      objc_msgSend(v10, "attachmentsAlert:needsDeviceDiagnosticsController:", v2, v12);
      swift_unknownObjectRelease(v10);
      _Block_release(v12);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100058F8C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;

  if (a1)
  {
    v3 = *(_QWORD *)(a2 + 16);
    if (v3)
    {
      v5 = *(_QWORD *)(type metadata accessor for PHPickerResult(0) - 8);
      v6 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v7 = *(_QWORD *)(v5 + 72);
      v8 = a1;
      v9 = swift_bridgeObjectRetain(a2);
      do
      {
        v10 = (void *)PHPickerResult.itemProvider.getter(v9);
        objc_msgSend(v8, "addAttachmentWithItemProvider:", v10);

        v6 += v7;
        --v3;
      }
      while (v3);

      swift_bridgeObjectRelease(a2);
    }
  }
  else
  {
    v11 = static os_log_type_t.error.getter();
    v12 = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
    if (v12)
    {
      v13 = v12;
      os_log(_:dso:log:_:_:)(v11, &_mh_execute_header);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000590DC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  NSURL *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004BB9C(&qword_100116790);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v26 = static os_log_type_t.error.getter(v9);
    v27 = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
    if (v27)
    {
      v30 = v27;
      os_log(_:dso:log:_:_:)(v26, &_mh_execute_header);

      return;
    }
    goto LABEL_15;
  }
  v30 = a1;
  v12 = static os_log_type_t.debug.getter(v30);
  v13 = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
  if (!v13)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  v14 = v13;
  v15 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1000CC730;
  *(_QWORD *)(v16 + 56) = sub_10004BB9C(&qword_100116898);
  *(_QWORD *)(v16 + 64) = sub_10004F6D8((unint64_t *)&unk_1001168A0, &qword_100116898, (uint64_t)&protocol conformance descriptor for [A]);
  *(_QWORD *)(v16 + 32) = a2;
  swift_bridgeObjectRetain(a2);
  os_log(_:dso:log:_:_:)(v12, &_mh_execute_header);

  swift_bridgeObjectRelease(v16);
  v17 = *(_QWORD *)(a2 + 16);
  if (v17)
  {
    v18 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v19 = *(_QWORD *)(v5 + 72);
    v20 = a2;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v29 = v20;
    swift_bridgeObjectRetain(v20);
    while (1)
    {
      v21(v11, v18, v4);
      v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v22(v11, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
      URL._bridgeToObjectiveC()(v23);
      v25 = v24;
      objc_msgSend(v30, "moveFileFrom:", v24);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v18 += v19;
      if (!--v17)
      {
        a2 = v29;
        goto LABEL_11;
      }
    }

    v28 = v29;
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain(a2);
LABEL_11:
    v22(v11, 1, 1, v4);

    v28 = a2;
  }
  swift_bridgeObjectRelease(v28);
}

void sub_100059460(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void (*v20)(char *, uint64_t);
  _QWORD *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  Swift::String v39;
  Swift::String v40;
  void *object;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  NSString v45;
  id v46;
  id v47;
  Swift::String v48;
  Swift::String v49;
  void *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  NSString v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **aBlock;
  uint64_t v71;
  void *v72;
  void *v73;
  void *v74;
  _QWORD *v75;
  _QWORD v76[3];
  char v77[16];
  Swift::String v78;
  Swift::String v79;

  v67 = a4;
  v68 = a3;
  v66 = a1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v65 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v59 - v17;
  v69 = a2;
  v19 = objc_msgSend(a2, "presentedViewController");

  if (v19)
  {
    sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
    v61 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)(v16, 1.0);
    v20 = *(void (**)(char *, uint64_t))(v13 + 8);
    v62 = v12;
    v63 = v20;
    v20(v16, v12);
    v21 = (_QWORD *)swift_allocObject(&unk_1000E8790, 56, 7);
    v22 = v66;
    v21[2] = v64;
    v21[3] = v22;
    v23 = v68;
    v24 = v69;
    v21[4] = v69;
    v21[5] = v23;
    v60 = v6;
    v25 = v22;
    v64 = v9;
    v26 = v67;
    v21[6] = v67;
    v74 = sub_10005B524;
    v75 = v21;
    aBlock = _NSConcreteStackBlock;
    v71 = 1107296256;
    v72 = sub_10008F5C0;
    v73 = &unk_1000E87A8;
    v27 = _Block_copy(&aBlock);
    v28 = v75;
    v29 = v25;
    v30 = v24;
    v31 = v23;
    swift_errorRetain(v26);
    v32 = swift_release(v28);
    static DispatchQoS.unspecified.getter(v32);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v33 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v34 = sub_10004BB9C((uint64_t *)&unk_100116980);
    v35 = sub_10004F6D8((unint64_t *)&qword_100115FC0, (uint64_t *)&unk_100116980, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v34, v35, v5, v33);
    v36 = (void *)v61;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v18, v11, v8, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v11, v64);
    v63(v18, v62);
  }
  else
  {
    v37 = (void *)objc_opt_self(NSBundle);
    v38 = objc_msgSend(v37, "mainBundle");
    v78._countAndFlagsBits = 0xD000000000000044;
    v78._object = (void *)0x80000001000D5730;
    v39._object = (void *)0x80000001000D5710;
    v40._countAndFlagsBits = 0x545F44454C494146;
    v40._object = (void *)0xEE0059504F435F4FLL;
    v39._countAndFlagsBits = 0xD000000000000014;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)v38, v39, v78)._object;

    swift_getErrorValue(v67, v77, v76);
    Error.localizedDescription.getter(v76[1], v76[2]);
    v43 = v42;
    v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v43);
    v46 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v44, v45, 1);

    v47 = objc_msgSend(v37, "mainBundle");
    v79._object = (void *)0xE000000000000000;
    v48._countAndFlagsBits = 19279;
    v48._object = (void *)0xE200000000000000;
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    v79._countAndFlagsBits = 0;
    v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v79)._object;

    v51 = swift_allocObject(&unk_1000E8740, 32, 7);
    v52 = v68;
    v53 = v66;
    *(_QWORD *)(v51 + 16) = v68;
    *(_QWORD *)(v51 + 24) = v53;
    v54 = v53;
    v55 = v52;
    v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v50);
    v74 = sub_10005B4D8;
    v75 = (_QWORD *)v51;
    aBlock = _NSConcreteStackBlock;
    v71 = 1107296256;
    v72 = sub_10004B098;
    v73 = &unk_1000E8758;
    v57 = _Block_copy(&aBlock);
    swift_release(v75);
    v58 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v56, 0, v57);
    _Block_release(v57);

    objc_msgSend(v46, "addAction:", v58);
    objc_msgSend(v69, "presentViewController:animated:completion:", v46, 1, 0);

  }
}

id sub_100059ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  unsigned int v17;
  id v18;
  uint64_t v20;

  v4 = v3;
  v8 = sub_10004BB9C(&qword_100116880);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController_attachmentDelegate, v11);
  if (!Strong)
    return objc_msgSend(objc_allocWithZone((Class)UITableViewDropProposal), "initWithDropOperation:", 1);
  v13 = (void *)Strong;
  sub_10004F544(a3, (uint64_t)v10, &qword_100116880);
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) != 1)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
  }
  v17 = objc_msgSend(v13, "isReadyForDropSessionFromController:tableView:dropSessionDidUpdate:withDestinationIndexPath:", v4, a1, a2, isa);

  if (!v17)
  {
    swift_unknownObjectRelease(v13);
    return objc_msgSend(objc_allocWithZone((Class)UITableViewDropProposal), "initWithDropOperation:", 1);
  }
  v18 = objc_msgSend(objc_allocWithZone((Class)UITableViewDropProposal), "initWithDropOperation:intent:", 2, 0);
  swift_unknownObjectRelease(v13);
  return v18;
}

void sub_100059D7C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  dispatch_group_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  NSString v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  NSObject *v50;
  id v51;
  dispatch_group_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t Strong;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  NSObject *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  char *v67;
  dispatch_group_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  char *v91;
  dispatch_group_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  id v98;
  _QWORD *v99;
  void **aBlock;
  uint64_t v101;
  void *v102;
  void *v103;
  void *v104;
  uint64_t v105;

  v2 = v1;
  v98 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v84 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v83 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for DispatchQoS(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v80 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004BB9C(&qword_100116790);
  __chkstk_darwin(v6);
  v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v97 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v12;
  __chkstk_darwin(v11);
  v14 = (char *)&v77 - v13;
  v15 = type metadata accessor for UTType(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = static UTType.item.getter(v17);
  v96 = UTType.identifier.getter(v20);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  v23 = dispatch_group_create();
  v79 = v2;
  sub_100056E3C((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease(v22);
    v24 = sub_10004F588((uint64_t)v8, &qword_100116790);
    v25 = static os_log_type_t.error.getter(v24);
    v26 = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
    if (v26)
    {
      v27 = v26;
      os_log(_:dso:log:_:_:)(v25, &_mh_execute_header);

      return;
    }
    goto LABEL_21;
  }
  v94 = v22;
  v89 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v89(v14, v8, v9);
  v90 = swift_allocObject(&unk_1000E87E0, 24, 7);
  *(_QWORD *)(v90 + 16) = _swiftEmptyArrayStorage;
  v28 = objc_msgSend(v98, "items");
  v29 = sub_10004BB9C(&qword_100116858);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

  v92 = v23;
  v93 = v9;
  v95 = v10;
  v78 = v3;
  v91 = v14;
  if ((unint64_t)v30 >> 62)
  {
    if (v30 < 0)
      v76 = v30;
    else
      v76 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v30);
    v31 = _CocoaArrayWrapper.endIndex.getter(v76);
    swift_bridgeObjectRelease(v30);
  }
  else
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v32 = "icesViewController\"16@\"NSSet\"24";
  if (v31)
  {
    if (v31 < 1)
    {
      __break(1u);
LABEL_21:
      __break(1u);
      return;
    }
    v33 = 0;
    v86 = v30 & 0xC000000000000001;
    v85 = v88 + 7;
    v87 = v31;
    v88 = v30;
    v34 = v92;
    do
    {
      if (v86)
      {
        v35 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v33, v30);
      }
      else
      {
        v35 = *(void **)(v30 + 8 * v33 + 32);
        swift_unknownObjectRetain(v35);
      }
      v36 = v95;
      v98 = v35;
      ++v33;
      dispatch_group_enter(v34);
      v37 = objc_msgSend(v35, "dragItem");
      v38 = objc_msgSend(v37, "itemProvider");

      v39 = String._bridgeToObjectiveC()();
      v40 = v97;
      v41 = v93;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v97, v91, v93);
      v42 = *(unsigned __int8 *)(v36 + 80);
      v43 = (v42 + 16) & ~v42;
      v44 = (v85 + v43) & 0xFFFFFFFFFFFFFFF8;
      v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
      v46 = swift_allocObject(&unk_1000E8808, v45 + 8, v42 | 7);
      v89((char *)(v46 + v43), v40, v41);
      v47 = v90;
      *(_QWORD *)(v46 + v44) = v90;
      *(_QWORD *)(v46 + v45) = v34;
      v104 = sub_10005B5DC;
      v105 = v46;
      aBlock = _NSConcreteStackBlock;
      v101 = 1107296256;
      v102 = sub_10005AFB4;
      v103 = &unk_1000E8820;
      v48 = _Block_copy(&aBlock);
      v49 = v105;
      swift_retain(v47);
      v50 = v34;
      swift_release(v49);
      v51 = objc_msgSend(v38, "loadFileRepresentationForTypeIdentifier:completionHandler:", v39, v48);
      _Block_release(v48);
      swift_unknownObjectRelease(v98);

      v30 = v88;
      v32 = "v32@0:8@\"FBADeviceChoicesViewController\"16@\"NSSet\"24" + 21;
    }
    while (v87 != v33);
  }
  swift_bridgeObjectRelease(v94);
  swift_bridgeObjectRelease(v30);
  v52 = v92;
  dispatch_group_enter(v92);
  v53 = swift_allocObject(&unk_1000E8858, 24, 7);
  *(_QWORD *)(v53 + 16) = 0;
  v54 = v79;
  Strong = swift_unknownObjectWeakLoadStrong(v79 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController_attachmentDelegate, v55);
  if (Strong)
  {
    v57 = (void *)Strong;
    v58 = swift_allocObject(&unk_1000E8880, 32, 7);
    *(_QWORD *)(v58 + 16) = v53;
    *(_QWORD *)(v58 + 24) = v52;
    v104 = sub_10005B658;
    v105 = v58;
    aBlock = _NSConcreteStackBlock;
    v101 = *((_QWORD *)v32 + 312);
    v102 = sub_100057D74;
    v103 = &unk_1000E8898;
    v59 = _Block_copy(&aBlock);
    v60 = v105;
    v61 = v52;
    swift_retain(v53);
    swift_release(v60);
    objc_msgSend(v57, "attachmentsAlert:needsDeviceDiagnosticsController:", v54, v59);
    swift_unknownObjectRelease(v57);
    _Block_release(v59);
  }
  sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
  v62 = (void *)static OS_dispatch_queue.main.getter();
  v63 = swift_allocObject(&unk_1000E88D0, 32, 7);
  v64 = v90;
  *(_QWORD *)(v63 + 16) = v53;
  *(_QWORD *)(v63 + 24) = v64;
  v104 = sub_10005B68C;
  v105 = v63;
  aBlock = _NSConcreteStackBlock;
  v101 = *((_QWORD *)v32 + 312);
  v102 = sub_10008F5C0;
  v103 = &unk_1000E88E8;
  v65 = _Block_copy(&aBlock);
  swift_retain(v64);
  v66 = swift_retain(v53);
  v67 = v80;
  static DispatchQoS.unspecified.getter(v66);
  v99 = _swiftEmptyArrayStorage;
  v68 = v52;
  v69 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v70 = sub_10004BB9C((uint64_t *)&unk_100116980);
  v71 = sub_10004F6D8((unint64_t *)&qword_100115FC0, (uint64_t *)&unk_100116980, (uint64_t)&protocol conformance descriptor for [A]);
  v72 = v83;
  v73 = v70;
  v74 = v78;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v99, v73, v71, v78, v69);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v67, v72, v62, v65);
  _Block_release(v65);

  (*(void (**)(char *, uint64_t))(v84 + 8))(v72, v74);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v67, v82);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v91, v93);
  v75 = v105;
  swift_release(v64);
  swift_release(v53);
  swift_release(v75);
}

void sub_10005A564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char v56;
  void *v57;
  NSURL *v58;
  void *v59;
  void *v60;
  NSURL *v61;
  void *v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  dispatch_group_t v88;
  void *v89;
  uint64_t v90;
  NSObject *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  __int128 v119;
  uint64_t v120;
  dispatch_group_t v121;
  char *v122;
  id v123;
  uint64_t v124;
  _QWORD aBlock[5];
  uint64_t v126;

  v121 = a5;
  v105 = a4;
  v115 = a3;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v111 = *(_QWORD *)(v7 - 8);
  v112 = v7;
  __chkstk_darwin(v7);
  v110 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for DispatchQoS(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v124 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v124 + 64);
  v12 = __chkstk_darwin(v10);
  v104 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v106 = (char *)&v103 - v14;
  __chkstk_darwin(v13);
  v122 = (char *)&v103 - v15;
  v16 = sub_10004BB9C(&qword_100116790);
  v17 = __chkstk_darwin(v16);
  v116 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v114 = (char *)&v103 - v20;
  v21 = __chkstk_darwin(v19);
  v113 = (char *)&v103 - v22;
  v23 = __chkstk_darwin(v21);
  v117 = (uint64_t)&v103 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v103 - v26;
  v28 = __chkstk_darwin(v25);
  v30 = (char *)&v103 - v29;
  v31 = static os_log_type_t.default.getter(v28);
  v123 = (id)objc_opt_self(FBALog);
  v32 = objc_msgSend(v123, "attachHandle");
  if (!v32)
  {
    __break(1u);
    goto LABEL_21;
  }
  v33 = v32;
  v120 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v34 = swift_allocObject(v120, 72, 7);
  v119 = xmmword_1000CC730;
  *(_OWORD *)(v34 + 16) = xmmword_1000CC730;
  sub_10004F544(a1, (uint64_t)v30, &qword_100116790);
  v35 = String.init<A>(describing:)(v30, v16);
  v37 = v36;
  *(_QWORD *)(v34 + 56) = &type metadata for String;
  v118 = sub_100051284();
  *(_QWORD *)(v34 + 64) = v118;
  *(_QWORD *)(v34 + 32) = v35;
  *(_QWORD *)(v34 + 40) = v37;
  os_log(_:dso:log:_:_:)(v31, &_mh_execute_header);

  v38 = swift_bridgeObjectRelease(v34);
  v39 = v10;
  if (!a2)
    goto LABEL_5;
  v40 = static os_log_type_t.default.getter(v38);
  v41 = objc_msgSend(v123, "attachHandle");
  if (!v41)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v42 = v41;
  v43 = swift_allocObject(v120, 72, 7);
  *(_OWORD *)(v43 + 16) = v119;
  aBlock[0] = a2;
  swift_errorRetain(a2);
  v44 = sub_10004BB9C(&qword_100116878);
  v45 = String.init<A>(describing:)(aBlock, v44);
  v46 = v118;
  *(_QWORD *)(v43 + 56) = &type metadata for String;
  *(_QWORD *)(v43 + 64) = v46;
  *(_QWORD *)(v43 + 32) = v45;
  *(_QWORD *)(v43 + 40) = v47;
  os_log(_:dso:log:_:_:)(v40, &_mh_execute_header);

  swift_bridgeObjectRelease(v43);
LABEL_5:
  sub_10004F544(a1, (uint64_t)v27, &qword_100116790);
  v48 = v124;
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48);
  if (v49(v27, 1, v10) == 1)
  {
    v50 = sub_10004F588((uint64_t)v27, &qword_100116790);
    v51 = static os_log_type_t.error.getter(v50);
    v52 = objc_msgSend(v123, "attachHandle");
    if (v52)
    {
      v53 = v52;
      os_log(_:dso:log:_:_:)(v51, &_mh_execute_header);

      dispatch_group_leave(v121);
      return;
    }
    goto LABEL_22;
  }
  v54 = *(uint64_t (**)(char *, char *, uint64_t))(v48 + 32);
  v55 = v54(v122, v27, v10);
  v56 = URL.hasDirectoryPath.getter(v55);
  v57 = (void *)objc_opt_self(DEUtils);
  URL._bridgeToObjectiveC()(v58);
  v60 = v59;
  URL._bridgeToObjectiveC()(v61);
  v63 = v62;
  if ((v56 & 1) != 0)
  {
    v64 = objc_msgSend(v57, "copyAndReturn:toDir:", v60, v62);

    v65 = v117;
    if (v64)
    {
      v66 = (uint64_t)v113;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v64);

      v67 = 0;
      v68 = (uint64_t)v116;
    }
    else
    {
      v67 = 1;
      v68 = (uint64_t)v116;
      v66 = (uint64_t)v113;
    }
    v69 = v124;
  }
  else
  {
    v70 = objc_msgSend(v57, "copyItem:toDestinationDir:zipped:", v60, v62, 0);

    v65 = v117;
    if (v70)
    {
      v66 = (uint64_t)v114;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v70);

      v67 = 0;
      v69 = v124;
      v68 = (uint64_t)v116;
    }
    else
    {
      v67 = 1;
      v69 = v124;
      v68 = (uint64_t)v116;
      v66 = (uint64_t)v114;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v66, v67, 1, v39);
  sub_10005B694(v66, v65);
  sub_10004F544(v65, v68, &qword_100116790);
  if (v49((char *)v68, 1, v39) != 1)
  {
    v81 = v106;
    v54(v106, (char *)v68, v39);
    sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
    v124 = static OS_dispatch_queue.main.getter();
    v82 = v104;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v104, v81, v39);
    v83 = *(unsigned __int8 *)(v69 + 80);
    v84 = (v83 + 24) & ~v83;
    v85 = (v11 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
    v86 = swift_allocObject(&unk_1000E8920, v85 + 8, v83 | 7);
    v87 = v105;
    *(_QWORD *)(v86 + 16) = v105;
    v54((char *)(v86 + v84), v82, v39);
    v88 = v121;
    *(_QWORD *)(v86 + v85) = v121;
    aBlock[4] = sub_10005B76C;
    v126 = v86;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008F5C0;
    aBlock[3] = &unk_1000E8938;
    v89 = _Block_copy(aBlock);
    v90 = v126;
    swift_retain(v87);
    v91 = v88;
    v92 = swift_release(v90);
    v93 = v107;
    static DispatchQoS.unspecified.getter(v92);
    aBlock[0] = _swiftEmptyArrayStorage;
    v94 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v95 = v69;
    v96 = sub_10004BB9C((uint64_t *)&unk_100116980);
    v97 = sub_10004F6D8((unint64_t *)&qword_100115FC0, (uint64_t *)&unk_100116980, (uint64_t)&protocol conformance descriptor for [A]);
    v98 = v110;
    v99 = v96;
    v100 = v112;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v99, v97, v112, v94);
    v101 = (void *)v124;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v93, v98, v89);
    _Block_release(v89);

    (*(void (**)(char *, uint64_t))(v111 + 8))(v98, v100);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v93, v109);
    v102 = *(void (**)(char *, uint64_t))(v95 + 8);
    v102(v81, v39);
    sub_10004F588(v117, &qword_100116790);
    v102(v122, v39);
    return;
  }
  v71 = sub_10004F588(v68, &qword_100116790);
  v72 = static os_log_type_t.error.getter(v71);
  v73 = objc_msgSend(v123, "attachHandle");
  if (v73)
  {
    v74 = v73;
    v75 = swift_allocObject(v120, 72, 7);
    *(_OWORD *)(v75 + 16) = v119;
    v76 = sub_10004BD78(&qword_100116870, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v77 = v122;
    v78 = dispatch thunk of CustomStringConvertible.description.getter(v39, v76);
    v79 = v118;
    *(_QWORD *)(v75 + 56) = &type metadata for String;
    *(_QWORD *)(v75 + 64) = v79;
    *(_QWORD *)(v75 + 32) = v78;
    *(_QWORD *)(v75 + 40) = v80;
    os_log(_:dso:log:_:_:)(v72, &_mh_execute_header);

    swift_bridgeObjectRelease(v75);
    dispatch_group_leave(v121);
    sub_10004F588(v65, &qword_100116790);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v77, v39);
    return;
  }
LABEL_23:
  __break(1u);
}

void sub_10005AE64(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t *v10;
  unint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _BYTE v16[24];

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = (unint64_t *)(a1 + 16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  swift_beginAccess(a1 + 16, v16, 33, 0);
  v11 = *(_QWORD *)(a1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
  *(_QWORD *)(a1 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = sub_10007DE50(0, *(_QWORD *)(v11 + 16) + 1, 1, v11);
    *v10 = v11;
  }
  v14 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    v11 = sub_10007DE50(v13 > 1, v14 + 1, 1, v11);
    *v10 = v11;
  }
  *(_QWORD *)(v11 + 16) = v14 + 1;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v7 + 32))(v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v14, v9, v6);
  swift_endAccess(v16);
  dispatch_group_leave(a3);
}

uint64_t sub_10005AFB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, void *);
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_10004BB9C(&qword_100116790);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, void *))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
  }
  else
  {
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  swift_retain(v9);
  v13 = a3;
  v10(v8, a3);
  swift_release(v9);

  return sub_10004F588((uint64_t)v8, &qword_100116790);
}

void sub_10005B0B4(void *a1, uint64_t a2, NSObject *a3)
{
  void *v6;
  id v7;
  _BYTE v8[24];

  swift_beginAccess(a2 + 16, v8, 1, 0);
  v6 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;
  v7 = a1;

  dispatch_group_leave(a3);
}

void sub_10005B114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  NSURL *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[24];

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004BB9C(&qword_100116790);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_beginAccess(a1 + 16, v39, 0, 0);
  v12 = *(void **)(a1 + 16);
  if (!v12)
  {
    v30 = static os_log_type_t.error.getter(v11);
    v31 = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
    if (v31)
    {
      v32 = v31;
      os_log(_:dso:log:_:_:)(v30, &_mh_execute_header);

      return;
    }
    goto LABEL_16;
  }
  v36 = v12;
  v13 = static os_log_type_t.info.getter();
  v14 = objc_msgSend((id)objc_opt_self(FBALog), "attachHandle");
  if (!v14)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  v15 = v14;
  v16 = (uint64_t *)(a2 + 16);
  v17 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1000CC730;
  swift_beginAccess(v16, v38, 0, 0);
  v19 = *(_QWORD *)(*v16 + 16);
  *(_QWORD *)(v18 + 56) = &type metadata for Int;
  *(_QWORD *)(v18 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v18 + 32) = v19;
  os_log(_:dso:log:_:_:)(v13, &_mh_execute_header);

  swift_bridgeObjectRelease(v18);
  swift_beginAccess(v16, v37, 0, 0);
  v20 = *v16;
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v22 = v20 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v23 = *(_QWORD *)(v5 + 72);
    v24 = v20;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v35 = v24;
    swift_bridgeObjectRetain(v24);
    while (1)
    {
      v25(v10, v22, v4);
      v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v26(v10, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      URL._bridgeToObjectiveC()(v27);
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      objc_msgSend(v36, "moveFileFrom:", v29);

      v22 += v23;
      if (!--v21)
      {
        v20 = v35;
        goto LABEL_11;
      }
    }

    v33 = v35;
  }
  else
  {
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain(v20);
LABEL_11:
    v26(v10, 1, 1, v4);

    v33 = v20;
  }
  swift_bridgeObjectRelease(v33);
}

uint64_t sub_10005B494()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10005B4B8(void *a1)
{
  uint64_t v1;

  sub_100058F8C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10005B4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005B4D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_10005B4D8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "removeAttachment:", *(_QWORD *)(v0 + 24));
}

uint64_t sub_10005B4E8()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10005B524()
{
  _QWORD *v0;

  return sub_100059460(v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_10005B550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));

  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_10005B5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10005A564(a1, a2, v2 + v6, *(_QWORD *)(v2 + v7), *(NSObject **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10005B648()
{
  return sub_10005BDBC((void (*)(_QWORD))&_swift_release, 32);
}

void sub_10005B658(void *a1)
{
  uint64_t v1;

  sub_10005B0B4(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_10005B660()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10005B68C()
{
  uint64_t v0;

  sub_10005B114(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10005B694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004BB9C(&qword_100116790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005B6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10005B76C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10005AE64(*(_QWORD *)(v0 + 16), v0 + v2, *(NSObject **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_10005B7B0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];
  void *v29;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_100053458(0, (unint64_t *)&unk_100116F70, FBKGroupedDevice_ptr);
    v7 = sub_10005BE04();
    v8 = Set.Iterator.init(_cocoa:)(v28, v5, v6, v7);
    v3 = v28[0];
    v26 = v28[1];
    v9 = v28[2];
    v10 = v28[3];
    v11 = v28[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v10 = 0;
  }
  v25 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v15 = (v11 - 1) & v11;
      v16 = __clz(__rbit64(v11)) | (v10 << 6);
      v17 = v10;
      goto LABEL_32;
    }
    v22 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v22 >= v25)
      goto LABEL_35;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    v17 = v10 + 1;
    if (!v23)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v25)
        goto LABEL_35;
      v23 = *(_QWORD *)(v26 + 8 * v17);
      if (!v23)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v25)
          goto LABEL_35;
        v23 = *(_QWORD *)(v26 + 8 * v17);
        if (!v23)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v25)
            goto LABEL_35;
          v23 = *(_QWORD *)(v26 + 8 * v17);
          if (!v23)
          {
            v17 = v10 + 5;
            if (v10 + 5 >= v25)
              goto LABEL_35;
            v23 = *(_QWORD *)(v26 + 8 * v17);
            if (!v23)
            {
              v24 = v10 + 6;
              while (v25 != v24)
              {
                v23 = *(_QWORD *)(v26 + 8 * v24++);
                if (v23)
                {
                  v17 = v24 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_10005BEE4(v3);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v15 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
    v21 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (!v21)
      goto LABEL_35;
    while (1)
    {
      objc_msgSend(a2, "addDevice:", v21);

      v10 = v17;
      v11 = v15;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v18 = __CocoaSet.Iterator.next()(v8);
      if (v18)
      {
        v19 = v18;
        v27 = v18;
        v20 = sub_100053458(0, (unint64_t *)&unk_100116F70, FBKGroupedDevice_ptr);
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(&v29, &v27, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
        v21 = v29;
        swift_unknownObjectRelease(v19);
        v17 = v10;
        v15 = v11;
        if (v21)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

void sub_10005BA84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController_attachmentDelegate, a2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_allocObject(&unk_1000E8970, 24, 7);
    *(_QWORD *)(v6 + 16) = a1;
    v9[4] = sub_10005BCE4;
    v10 = v6;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_100057D74;
    v9[3] = &unk_1000E8988;
    v7 = _Block_copy(v9);
    v8 = v10;
    swift_bridgeObjectRetain(a1);
    swift_release(v8);
    objc_msgSend(v5, "attachmentsAlert:needsDeviceDiagnosticsController:", v2, v7);
    swift_unknownObjectRelease(v5);
    _Block_release(v7);
  }
}

uint64_t sub_10005BB68(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;
  uint64_t v25;

  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v25 - v7;
  v9 = sub_100053458(0, &qword_100116888, UIImage_ptr);
  if ((objc_msgSend(a1, "canLoadObjectsOfClass:", swift_getObjCClassFromMetadata(v9)) & 1) != 0)
    return 1;
  v11 = sub_10004BB9C(&qword_100116890);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1000CC8F0;
  v13 = static UTType.movie.getter();
  v14 = UTType.identifier.getter(v13);
  v16 = v15;
  v17 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v18 = v17(v8, v2);
  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = v16;
  v19 = static UTType.item.getter(v18);
  v20 = UTType.identifier.getter(v19);
  v22 = v21;
  v17(v6, v2);
  *(_QWORD *)(v12 + 48) = v20;
  *(_QWORD *)(v12 + 56) = v22;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  v10 = objc_msgSend(a1, "hasItemsConformingToTypeIdentifiers:", isa);

  return (uint64_t)v10;
}

void sub_10005BCE4(void *a1)
{
  uint64_t v1;

  sub_1000590DC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10005BCEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_10005BD18(uint64_t a1)
{
  uint64_t v1;

  sub_100057664(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

id sub_10005BD24(uint64_t a1)
{
  uint64_t v1;

  return sub_100057DC8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_10005BD2C(uint64_t a1)
{
  uint64_t v1;

  return sub_10005824C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10005BD34()
{
  uint64_t v0;

  return sub_1000586A8(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1000E8AD8, (uint64_t)sub_10005BF88, (uint64_t)&unk_1000E8AF0);
}

id sub_10005BD64()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "presentViewController:animated:completion:", *(_QWORD *)(v0 + 24), 1, 0);
}

uint64_t sub_10005BD7C()
{
  uint64_t v0;

  return sub_1000586A8(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1000E8BC8, (uint64_t)sub_10005BF88, (uint64_t)&unk_1000E8BE0);
}

uint64_t sub_10005BDAC()
{
  return sub_10005BDBC((void (*)(_QWORD))&_swift_unknownObjectRelease, 40);
}

uint64_t sub_10005BDBC(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));

  return swift_deallocObject(v2, a2, 7);
}

void sub_10005BDF8(void *a1)
{
  uint64_t v1;

  sub_10005780C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_10005BE04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001168D0;
  if (!qword_1001168D0)
  {
    v1 = sub_100053458(255, (unint64_t *)&unk_100116F70, FBKGroupedDevice_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1001168D0);
  }
  return result;
}

uint64_t sub_10005BE5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10005BE80(uint64_t a1)
{
  uint64_t v1;

  sub_100057D2C(a1, *(void **)(v1 + 16));
}

uint64_t sub_10005BE88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005BEB4()
{
  uint64_t v0;

  return sub_1000586A8(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1000E8D58, (uint64_t)sub_10005BF88, (uint64_t)&unk_1000E8D70);
}

uint64_t sub_10005BEE4(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10005BEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004BB9C(&qword_1001168D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005C000()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_100050734(v0, qword_1001168F0);
  sub_10005067C(v0, (uint64_t)qword_1001168F0);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
  return Logger.init(subsystem:category:)(v1);
}

uint64_t sub_10005C074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSArray *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 1uLL, 1);
  v7 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String);

  if (v7[2])
  {
    v8 = v7[4];
    v9 = v7[5];
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRelease(v7);
    URL.init(fileURLWithPath:)(v8, v9);
    swift_bridgeObjectRelease(v9);
    v10 = sub_10005CB34();
    if (objc_msgSend((id)swift_getObjCClassFromMetadata(v10), "platform") != (id)1)
    {
      v11._object = (void *)0x80000001000D4950;
      v11._countAndFlagsBits = 0xD000000000000012;
      URL.appendPathComponent(_:)(v11);
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, v2);
  }
  else
  {
    swift_bridgeObjectRelease(v7);
    if (qword_100115DC8 != -1)
      swift_once(&qword_100115DC8, sub_10005C000);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_10005067C(v13, (uint64_t)qword_1001168F0);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to find old library URL.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
  }
}

void sub_10005C294()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  NSString v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  NSURL *v52;
  void *v53;
  void *v54;
  unsigned int v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint8_t *v60;
  id v61;
  NSString v62;
  id v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  void *v66;
  NSObject *v67;
  uint64_t v68;
  _QWORD v69[3];
  char v70[16];
  id v71;

  v0 = sub_10004BB9C(&qword_100116790);
  __chkstk_darwin(v0);
  v2 = (char *)&v64 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v64 - v8;
  v10 = (void *)objc_opt_self(NSUserDefaults);
  v11 = objc_msgSend(v10, "standardUserDefaults");
  v67 = "ssistant19FBAAppGroupMigrator";
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "BOOLForKey:", v12);

  if ((v13 & 1) != 0)
  {
    if (qword_100115DC8 != -1)
      swift_once(&qword_100115DC8, sub_10005C000);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_10005067C(v14, (uint64_t)qword_1001168F0);
    v67 = Logger.logObject.getter(v15);
    v16 = static os_log_type_t.debug.getter(v67);
    if (os_log_type_enabled(v67, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v67, v16, "App Group migration already done.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    return;
  }
  sub_10005C074((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10005CAF4((uint64_t)v2);
    if (qword_100115DC8 != -1)
      swift_once(&qword_100115DC8, sub_10005C000);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_10005067C(v18, (uint64_t)qword_1001168F0);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Old library directory could not be derived, stopping migration", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
  if (qword_100115DC8 != -1)
    swift_once(&qword_100115DC8, sub_10005C000);
  v23 = type metadata accessor for Logger(0);
  v24 = sub_10005067C(v23, (uint64_t)qword_1001168F0);
  v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.info.getter();
  v28 = os_log_type_enabled(v26, v27);
  v66 = v10;
  if (v28)
  {
    v29 = swift_slowAlloc(12, -1);
    v64 = (void (*)(char *, uint64_t))v24;
    v30 = (uint8_t *)v29;
    v31 = (void *)swift_slowAlloc(32, -1);
    v65 = v9;
    v32 = v31;
    v71 = v31;
    *(_DWORD *)v30 = 136315138;
    v33 = URL.absoluteString.getter();
    v35 = v34;
    v68 = sub_100094680(v33, v34, (uint64_t *)&v71);
    v10 = v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69);
    swift_bridgeObjectRelease(v35);
    v36 = *(void (**)(char *, uint64_t))(v4 + 8);
    v36(v7, v3);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Old Library directory: %s", v30, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    v37 = v32;
    v9 = v65;
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t))(v4 + 8);
    v36(v7, v3);
  }

  v38 = URL.checkResourceIsReachable()();
  v40 = v39;
  if (v39)
    goto LABEL_19;
  if ((v38 & 1) != 0)
  {
    v51 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    URL._bridgeToObjectiveC()(v52);
    v54 = v53;
    v71 = 0;
    v55 = objc_msgSend(v51, "removeItemAtURL:error:", v53, &v71);

    v56 = v71;
    if (!v55)
    {
      v63 = v71;
      v40 = _convertNSErrorToError(_:)(v56);

      swift_willThrow();
      v10 = v66;
LABEL_19:
      swift_errorRetain(v40);
      v41 = swift_errorRetain(v40);
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.error.getter(v42);
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(12, -1);
        v45 = (void *)swift_slowAlloc(32, -1);
        v64 = v36;
        v65 = v9;
        v46 = v45;
        v71 = v45;
        *(_DWORD *)v44 = 136315138;
        swift_getErrorValue(v40, v70, v69);
        v47 = Error.localizedDescription.getter(v69[1], v69[2]);
        v49 = v48;
        v68 = sub_100094680(v47, v48, (uint64_t *)&v71);
        v10 = v66;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69);
        swift_bridgeObjectRelease(v49);
        swift_errorRelease(v40);
        swift_errorRelease(v40);
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Failed to remove old library directory. %s", v44, 0xCu);
        swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
        v50 = v46;
        v36 = v64;
        v9 = v65;
        swift_slowDealloc(v50, -1, -1);
        swift_slowDealloc(v44, -1, -1);

        v38 = swift_errorRelease(v40);
      }
      else
      {
        swift_errorRelease(v40);
        swift_errorRelease(v40);
        swift_errorRelease(v40);

      }
      goto LABEL_25;
    }
    v38 = (uint64_t)v71;
    v10 = v66;
  }
LABEL_25:
  v57 = Logger.logObject.getter(v38);
  v58 = static os_log_type_t.default.getter(v57);
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v59 = 0;
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Removed old library directory.", v59, 2u);
    v60 = v59;
    v10 = v66;
    swift_slowDealloc(v60, -1, -1);
  }

  v61 = objc_msgSend(v10, "standardUserDefaults");
  v62 = String._bridgeToObjectiveC()();
  objc_msgSend(v61, "setBool:forKey:", 1, v62);

  v36(v9, v3);
}

id sub_10005CAA0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAAppGroupMigrator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAAppGroupMigrator()
{
  return objc_opt_self(_TtC18Feedback_Assistant19FBAAppGroupMigrator);
}

uint64_t sub_10005CAF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004BB9C(&qword_100116790);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10005CB34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116930;
  if (!qword_100116930)
  {
    v1 = objc_opt_self(FBKSharedConstants);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100116930);
  }
  return result;
}

void *sub_10005CB70(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *result;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  result = &_swiftEmptyArrayStorage;
  v17 = (unint64_t)&_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(type metadata accessor for FBKFeedbackUpload.BugSession(0) - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain(a3);
    do
    {
      v12 = a1(&v16, v9);
      if (v3)
      {
        swift_bridgeObjectRelease(a3);
        return (void *)swift_bridgeObjectRelease(v17);
      }
      v13 = v16;
      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v15 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v11);
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(a3);
    return (void *)v17;
  }
  return result;
}

uint64_t sub_10005CCA8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_100050734(v0, qword_100116940);
  sub_10005067C(v0, (uint64_t)qword_100116940);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
  return Logger.init(subsystem:category:)(v1);
}

void sub_10005CD18()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *oslog;
  uint64_t aBlock[5];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  if (qword_100115DD0 != -1)
    swift_once(&qword_100115DD0, sub_10005CCA8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10005067C(v2, (uint64_t)qword_100116940);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Looking up uploads for tracking", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = objc_msgSend(v0, "currentUser");
  if (v7)
  {
    v8 = v7;
    v9 = swift_allocObject(&unk_1000E8ED0, 24, 7);
    *(_QWORD *)(v9 + 16) = v0;
    aBlock[4] = (uint64_t)sub_10006082C;
    v18 = v9;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10005D438;
    aBlock[3] = (uint64_t)&unk_1000E8EE8;
    v10 = _Block_copy(aBlock);
    v11 = v18;
    v12 = v1;
    swift_release(v11);
    objc_msgSend(v12, "allUploadTasksWithUser:completion:", v8, v10);
    _Block_release(v10);

  }
  else
  {
    oslog = Logger.logObject.getter(0);
    v13 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(oslog, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      aBlock[0] = v15;
      *(_DWORD *)v14 = 136315138;
      v19 = sub_100094680(0xD00000000000001ELL, 0x80000001000D5C00, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
      _os_log_impl((void *)&_mh_execute_header, oslog, v13, "No user in %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

    }
  }
}

void sub_10005CFC8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  char **v17;
  _UNKNOWN **v18;
  NSObject *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  id v32;
  void *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  NSObject **v42;
  uint64_t v43;
  NSObject **v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  __objc2_prot *v50;
  _QWORD v51[5];

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
    v7 = sub_100060654((unint64_t *)&unk_100116960, &qword_100116958, FBKUploadTask_ptr);
    v8 = Set.Iterator.init(_cocoa:)(v51, v5, v6, v7);
    v3 = v51[0];
    v9 = v51[1];
    v10 = v51[2];
    v11 = v51[3];
    v12 = v51[4];
  }
  else
  {
    v13 = -1 << *(_BYTE *)(a1 + 32);
    v9 = a1 + 56;
    v10 = ~v13;
    v14 = -v13;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v12 = v15 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v11 = 0;
  }
  v16 = (unint64_t)(v10 + 64) >> 6;
  v17 = &selRef_filePromiseSortDescriptors;
  v18 = &off_100115000;
  while (v3 < 0)
  {
    v21 = __CocoaSet.Iterator.next()(v8);
    if (!v21)
      goto LABEL_45;
    v22 = v21;
    v48 = v21;
    v23 = sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v49, &v48, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
    v19 = v49;
    swift_unknownObjectRelease(v22);
    v46 = v12;
    v47 = v11;
    if (!v19)
      goto LABEL_45;
LABEL_34:
    v28 = objc_msgSend(v19, v17[27]);
    if (v28 || (v28 = -[NSObject feedbackFollowup](v19, "feedbackFollowup")) != 0)
    {
      v50 = &OBJC_PROTOCOL___FBKFilerForm;
      v29 = swift_dynamicCastObjCProtocolConditional(v28, 1, &v50);
      if (v29)
      {
        v30 = v29;
        v31 = v28;
        v32 = objc_msgSend(a2, "uploadManager");
        if (v32)
        {
          v33 = v32;
          objc_msgSend(v32, "trackUploadIfNeeded:", v30);

        }
        goto LABEL_12;
      }

    }
    if (v18[442] != (_UNKNOWN *)-1)
      swift_once(&qword_100115DD0, sub_10005CCA8);
    v34 = type metadata accessor for Logger(0);
    sub_10005067C(v34, (uint64_t)qword_100116940);
    v31 = v19;
    v35 = Logger.logObject.getter(v31);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc(12, -1);
      v38 = v16;
      v39 = v3;
      v40 = v9;
      v41 = a2;
      v42 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v37 = 138543362;
      *(_QWORD *)(v37 + 4) = v31;
      *v42 = v19;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "No filer form found in task %{public}@", (uint8_t *)v37, 0xCu);
      v43 = sub_10004BB9C(&qword_1001169C0);
      swift_arrayDestroy(v42, 1, v43);
      v44 = v42;
      a2 = v41;
      v9 = v40;
      v3 = v39;
      v16 = v38;
      v18 = &off_100115000;
      swift_slowDealloc(v44, -1, -1);
      v45 = v37;
      v17 = &selRef_filePromiseSortDescriptors;
      swift_slowDealloc(v45, -1, -1);
      v19 = v35;
    }
    else
    {

      v19 = v31;
    }
LABEL_12:
    v12 = v46;

    v11 = v47;
  }
  if (v12)
  {
    v46 = (v12 - 1) & v12;
    v47 = v11;
    v20 = __clz(__rbit64(v12)) | (v11 << 6);
LABEL_33:
    v19 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v20);
    if (!v19)
      goto LABEL_45;
    goto LABEL_34;
  }
  v24 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v24 >= v16)
      goto LABEL_45;
    v25 = *(_QWORD *)(v9 + 8 * v24);
    v26 = v11 + 1;
    if (!v25)
    {
      v26 = v11 + 2;
      if (v11 + 2 >= v16)
        goto LABEL_45;
      v25 = *(_QWORD *)(v9 + 8 * v26);
      if (!v25)
      {
        v26 = v11 + 3;
        if (v11 + 3 >= v16)
          goto LABEL_45;
        v25 = *(_QWORD *)(v9 + 8 * v26);
        if (!v25)
        {
          v26 = v11 + 4;
          if (v11 + 4 >= v16)
            goto LABEL_45;
          v25 = *(_QWORD *)(v9 + 8 * v26);
          if (!v25)
          {
            v27 = v11 + 5;
            while (v16 != v27)
            {
              v25 = *(_QWORD *)(v9 + 8 * v27++);
              if (v25)
              {
                v26 = v27 - 1;
                goto LABEL_32;
              }
            }
LABEL_45:
            sub_10005BEE4(v3);
            return;
          }
        }
      }
    }
LABEL_32:
    v46 = (v25 - 1) & v25;
    v47 = v26;
    v20 = __clz(__rbit64(v25)) + (v26 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

uint64_t sub_10005D438(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
  v6 = sub_100060654((unint64_t *)&unk_100116960, &qword_100116958, FBKUploadTask_ptr);
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a2, v5, v6);
  swift_retain(v3);
  v4(v7);
  swift_release(v3);
  return swift_bridgeObjectRelease(v7);
}

void sub_10005D504(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, void *a5, void *a6, objc_class *a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void **v18;
  void *v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  BOOL v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint8_t *v42;
  void **v43;
  dispatch_group_t v44;
  void *v45;
  uint64_t v46;
  uint64_t Strong;
  void (*v48)(void *);
  Class v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void (**v61)(void *);
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  id v66;
  id v67;
  Class v68;
  _QWORD v69[2];
  uint8_t *v70;
  void **v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  Class isa;
  char *v75;
  void *v76;
  void *v77;
  dispatch_group_t v78;
  void **aBlock;
  _QWORD v80[4];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  isa = a7;
  v76 = a6;
  v77 = a5;
  v78 = a4;
  v11 = type metadata accessor for FBKFeedbackUpload(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v75 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v69 - v16;
  v84 = a1;
  v18 = (void **)FBKFeedbackUpload.feedbackID.getter(v15);
  sub_10005DB38(a2, v18);
  if (v19)
  {
    v20 = v19;
    sub_10005DE60(a3, v18);
    if ((v21 & 1) != 0)
    {
      if (qword_100115DD0 != -1)
        swift_once(&qword_100115DD0, sub_10005CCA8);
      v22 = type metadata accessor for Logger(0);
      v23 = sub_10005067C(v22, (uint64_t)qword_100116940);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.default.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v26 = 134349056;
        aBlock = v18;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v80);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Feedback ID %{public}ld already tracked locally", v26, 0xCu);
        swift_slowDealloc(v26, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      if (qword_100115DD0 != -1)
        swift_once(&qword_100115DD0, sub_10005CCA8);
      v32 = type metadata accessor for Logger(0);
      sub_10005067C(v32, (uint64_t)qword_100116940);
      v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16);
      v33 = v72(v17, v84, v11);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter(v34);
      v36 = os_log_type_enabled(v34, v35);
      v73 = v7;
      if (v36)
      {
        v37 = (uint8_t *)swift_slowAlloc(12, -1);
        v71 = (void **)swift_slowAlloc(32, -1);
        aBlock = v71;
        v70 = v37;
        *(_DWORD *)v37 = 136315138;
        v69[1] = v37 + 4;
        v38 = sub_10004BD78(&qword_1001169A8, (uint64_t (*)(uint64_t))&type metadata accessor for FBKFeedbackUpload, (uint64_t)&protocol conformance descriptor for FBKFeedbackUpload);
        v39 = dispatch thunk of CustomStringConvertible.description.getter(v11, v38);
        v41 = v40;
        v82 = sub_100094680(v39, v40, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83);
        swift_bridgeObjectRelease(v41);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
        v42 = v70;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Will create upload task for framework upload %s", v70, 0xCu);
        v43 = v71;
        swift_arrayDestroy(v71, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v42, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      }

      v44 = v78;
      dispatch_group_enter(v78);
      v45 = v77;
      swift_beginAccess(v77, &v82, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v45, v46);
      if (Strong)
      {
        v77 = (void *)Strong;
        v48 = (void (*)(void *))swift_allocObject(&unk_1000E8E58, 40, 7);
        *((_QWORD *)v48 + 2) = v44;
        *((_QWORD *)v48 + 3) = v20;
        v49 = isa;
        *((_QWORD *)v48 + 4) = isa;
        sub_100053458(0, &qword_1001169A0, NSNumber_ptr);
        v50 = v44;
        v78 = v20;
        v51 = swift_retain(v49);
        v52 = v84;
        v53 = FBKFeedbackUpload.formResponseID.getter(v51);
        isa = NSNumber.init(integerLiteral:)(v53).super.super.isa;
        v54 = v75;
        v72(v75, v52, v11);
        v55 = *(unsigned __int8 *)(v12 + 80);
        v56 = (v55 + 16) & ~v55;
        v57 = (v13 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
        v58 = (v57 + 23) & 0xFFFFFFFFFFFFFFF8;
        v59 = (v58 + 15) & 0xFFFFFFFFFFFFFFF8;
        v60 = swift_allocObject(&unk_1000E8E80, v59 + 8, v55 | 7);
        (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v60 + v56, v54, v11);
        v61 = (void (**)(void *))(v60 + v57);
        *v61 = sub_1000606C8;
        v61[1] = v48;
        v62 = v77;
        *(_QWORD *)(v60 + v58) = v77;
        v63 = v76;
        *(_QWORD *)(v60 + v59) = v76;
        v80[3] = sub_100060774;
        v81 = v60;
        aBlock = _NSConcreteStackBlock;
        v80[0] = 1107296256;
        v80[1] = sub_10005F158;
        v80[2] = &unk_1000E8E98;
        v64 = _Block_copy(&aBlock);
        v65 = v81;
        swift_retain(v48);
        v66 = v62;
        v67 = v63;
        swift_release(v65);
        v68 = isa;
        objc_msgSend(v66, "refreshFormResponseOnlyWithID:completion:", isa, v64);
        _Block_release(v64);

        swift_release(v48);
      }
      else
      {

      }
    }
  }
  else
  {
    if (qword_100115DD0 != -1)
      swift_once(&qword_100115DD0, sub_10005CCA8);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_10005067C(v27, (uint64_t)qword_100116940);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v31 = 134349056;
      aBlock = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v80);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Feedback ID %{public}ld does not belong to this user. Will not track upload", v31, 0xCu);
      swift_slowDealloc(v31, -1, -1);
    }

  }
}

void sub_10005DB38(uint64_t a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD v33[5];
  void *v34;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
    v6 = sub_100060654((unint64_t *)&qword_100116998, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
    v7 = Set.Iterator.init(_cocoa:)(v33, v4, v5, v6);
    v2 = v33[0];
    v30 = v33[1];
    v8 = v33[2];
    v9 = v33[3];
    v10 = v33[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v30 = a1 + 56;
    v12 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *(_QWORD *)(a1 + 56);
    v7 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = v12;
    v9 = 0;
  }
  v28 = v8;
  v29 = (unint64_t)(v8 + 64) >> 6;
  if (v2 < 0)
    goto LABEL_13;
LABEL_11:
  if (v10)
  {
    v15 = (v10 - 1) & v10;
    v16 = __clz(__rbit64(v10)) | (v9 << 6);
    v17 = v9;
    goto LABEL_32;
  }
  v22 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v22 >= v29)
      goto LABEL_37;
    v23 = *(_QWORD *)(v30 + 8 * v22);
    v17 = v9 + 1;
    if (!v23)
    {
      v17 = v9 + 2;
      if (v9 + 2 >= v29)
        goto LABEL_37;
      v23 = *(_QWORD *)(v30 + 8 * v17);
      if (!v23)
      {
        v17 = v9 + 3;
        if (v9 + 3 >= v29)
          goto LABEL_37;
        v23 = *(_QWORD *)(v30 + 8 * v17);
        if (!v23)
        {
          v17 = v9 + 4;
          if (v9 + 4 >= v29)
            goto LABEL_37;
          v23 = *(_QWORD *)(v30 + 8 * v17);
          if (!v23)
          {
            v17 = v9 + 5;
            if (v9 + 5 >= v29)
              goto LABEL_37;
            v23 = *(_QWORD *)(v30 + 8 * v17);
            if (!v23)
            {
              v24 = v9 + 6;
              while (v29 != v24)
              {
                v23 = *(_QWORD *)(v30 + 8 * v24++);
                if (v23)
                {
                  v17 = v24 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_37;
            }
          }
        }
      }
    }
LABEL_31:
    v15 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
    v21 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v16);
    if (v21)
    {
      while (1)
      {
        v25 = objc_msgSend(v21, "remoteID", v28);
        if (!v25)
          goto LABEL_39;
        v26 = v25;
        v27 = objc_msgSend(v25, "integerValue");

        if (v27 == a2)
          break;

        v9 = v17;
        v10 = v15;
        if ((v2 & 0x8000000000000000) == 0)
          goto LABEL_11;
LABEL_13:
        v18 = __CocoaSet.Iterator.next()(v7);
        if (v18)
        {
          v19 = v18;
          v32 = v18;
          v20 = sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
          swift_unknownObjectRetain(v19);
          swift_dynamicCast(&v34, &v32, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
          v21 = v34;
          swift_unknownObjectRelease(v19);
          v17 = v9;
          v15 = v10;
          if (v21)
            continue;
        }
        break;
      }
    }
LABEL_37:
    sub_10005BEE4(v2);
    return;
  }
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_10005DE60(uint64_t a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char **v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char **v27;
  id v28;
  void *v29;
  id v30;
  BOOL v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v35;
  _QWORD v36[5];
  void *v37;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
    v6 = sub_100060654((unint64_t *)&unk_100116960, &qword_100116958, FBKUploadTask_ptr);
    v7 = Set.Iterator.init(_cocoa:)(v36, v4, v5, v6);
    v2 = v36[0];
    v33 = v36[1];
    v8 = v36[2];
    v9 = v36[3];
    v10 = v36[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v33 = a1 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(a1 + 56);
    v7 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v9 = 0;
  }
  v32 = (unint64_t)(v8 + 64) >> 6;
  v14 = &selRef_filePromiseSortDescriptors;
  while (1)
  {
    v15 = v9;
    if (v2 < 0)
    {
      v18 = __CocoaSet.Iterator.next()(v7);
      v19 = v18;
      if (!v18)
        goto LABEL_39;
      v35 = v18;
      v20 = sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
      swift_unknownObjectRetain(v19);
      swift_dynamicCast(&v37, &v35, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
      v21 = v37;
      swift_unknownObjectRelease(v19);
      if (!v21)
        goto LABEL_39;
      goto LABEL_35;
    }
    if (!v10)
      break;
    v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v17 = v16 | (v9 << 6);
LABEL_34:
    v21 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v17);
    if (!v21)
      goto LABEL_39;
LABEL_35:
    v25 = objc_msgSend(v21, v14[25]);

    if (v25)
    {
      v26 = v2;
      v27 = v14;
      v28 = objc_msgSend(v21, v14[25]);
      if (!v28)
        goto LABEL_41;
      v29 = v28;
      v30 = objc_msgSend(v28, "integerValue");

      v31 = v30 == a2;
      v14 = v27;
      v2 = v26;
      if (v31)
        goto LABEL_39;
    }
    else
    {

    }
  }
  v22 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v22 >= v32)
      goto LABEL_39;
    v23 = *(_QWORD *)(v33 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v15 + 2;
      if (v15 + 2 >= v32)
        goto LABEL_39;
      v23 = *(_QWORD *)(v33 + 8 * v9);
      if (!v23)
      {
        v9 = v15 + 3;
        if (v15 + 3 >= v32)
          goto LABEL_39;
        v23 = *(_QWORD *)(v33 + 8 * v9);
        if (!v23)
        {
          v9 = v15 + 4;
          if (v15 + 4 >= v32)
            goto LABEL_39;
          v23 = *(_QWORD *)(v33 + 8 * v9);
          if (!v23)
          {
            v9 = v15 + 5;
            if (v15 + 5 >= v32)
              goto LABEL_39;
            v23 = *(_QWORD *)(v33 + 8 * v9);
            if (!v23)
            {
              v24 = v15 + 6;
              while (v32 != v24)
              {
                v23 = *(_QWORD *)(v33 + 8 * v24++);
                if (v23)
                {
                  v9 = v24 - 1;
                  goto LABEL_33;
                }
              }
LABEL_39:
              sub_10005BEE4(v2);
              return;
            }
          }
        }
      }
    }
LABEL_33:
    v10 = (v23 - 1) & v23;
    v17 = __clz(__rbit64(v23)) + (v9 << 6);
    goto LABEL_34;
  }
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_10005E1C8(void *a1, dispatch_group_t group, void *a3, uint64_t a4)
{
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _BYTE v10[24];
  id v11;

  if (a1)
  {
    v6 = a4 + 16;
    v7 = a1;
    v8 = objc_msgSend(v7, "formResponse");
    objc_msgSend(a3, "setFormResponse:", v8);

    swift_beginAccess(v6, v10, 33, 0);
    v9 = v7;
    sub_10007F964((Swift::Int *)&v11, v9);
    swift_endAccess(v10);

    dispatch_group_leave(group);
  }
  else
  {
    dispatch_group_leave(group);
  }
}

uint64_t sub_10005E2A4(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned int v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39[3];
  _BYTE v40[24];

  v8 = (uint64_t *)(a1 + 16);
  swift_beginAccess(a1 + 16, v40, 0, 0);
  v9 = *(_QWORD *)(a1 + 16);
  if ((v9 & 0xC000000000000001) != 0)
  {
    if (v9 < 0)
      v10 = v9;
    else
      v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v11 = __CocoaSet.count.getter(v10);
    swift_bridgeObjectRelease(v9);
    v12 = (_QWORD *)(a3 + 16);
    if (!v11)
      goto LABEL_17;
  }
  else
  {
    v13 = *(_QWORD *)(v9 + 16);
    v12 = (_QWORD *)(a3 + 16);
    if (!v13)
      goto LABEL_17;
  }
  v14 = objc_msgSend(a2, "mainQueueContext");
  if (v14)
  {
    v15 = v14;
    v39[0] = 0;
    v16 = objc_msgSend(v14, "save:", v39);

    v17 = v39[0];
    if (v16)
    {
      v18 = v39[0];
    }
    else
    {
      v19 = v39[0];
      v20 = _convertNSErrorToError(_:)(v17);

      swift_willThrow(v21);
      if (qword_100115DD0 != -1)
        swift_once(&qword_100115DD0, sub_10005CCA8);
      v22 = type metadata accessor for Logger(0);
      sub_10005067C(v22, (uint64_t)qword_100116940);
      swift_errorRetain(v20);
      v23 = swift_errorRetain(v20);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.error.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(12, -1);
        v36 = (void *)swift_slowAlloc(32, -1);
        v39[0] = v36;
        *(_DWORD *)v26 = 136446210;
        v37 = v20;
        swift_errorRetain(v20);
        v27 = sub_10004BB9C((uint64_t *)&unk_100117020);
        v28 = String.init<A>(describing:)(&v37, v27);
        v30 = v29;
        v37 = sub_100094680(v28, v29, (uint64_t *)v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
        swift_bridgeObjectRelease(v30);
        swift_errorRelease(v20);
        swift_errorRelease(v20);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to save after creating FBK upload tasks %{public}s", v26, 0xCu);
        swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v36, -1, -1);
        swift_slowDealloc(v26, -1, -1);

        swift_errorRelease(v20);
      }
      else
      {
        swift_errorRelease(v20);
        swift_errorRelease(v20);
        swift_errorRelease(v20);

      }
    }
  }
  swift_beginAccess(v8, v39, 0, 0);
  v31 = *v8;
  swift_beginAccess(v12, &v37, 33, 0);
  v32 = swift_bridgeObjectRetain(v31);
  sub_10005E608(v32);
  swift_endAccess(&v37);
LABEL_17:
  swift_beginAccess(v12, &v37, 0, 0);
  v33 = *v12;
  v34 = swift_bridgeObjectRetain(*v12);
  a4(v34);
  return swift_bridgeObjectRelease(v33);
}

void sub_10005E608(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD v25[5];

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = __CocoaSet.makeIterator()(a1);
    v3 = sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
    v4 = sub_100060654((unint64_t *)&unk_100116960, &qword_100116958, FBKUploadTask_ptr);
    a1 = (uint64_t)Set.Iterator.init(_cocoa:)(v25, v2, v3, v4);
    v1 = v25[0];
    v22 = v25[1];
    v5 = v25[2];
    v6 = v25[3];
    v7 = v25[4];
  }
  else
  {
    v6 = 0;
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v22 = a1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
  }
  v11 = (unint64_t)(v5 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_12;
  while (1)
  {
    if (v7)
    {
      v12 = (v7 - 1) & v7;
      v13 = __clz(__rbit64(v7)) | (v6 << 6);
      v14 = v6;
      goto LABEL_31;
    }
    v19 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v19 >= v11)
      goto LABEL_34;
    v20 = *(_QWORD *)(v22 + 8 * v19);
    v14 = v6 + 1;
    if (!v20)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v22 + 8 * v14);
      if (!v20)
      {
        v14 = v6 + 3;
        if (v6 + 3 >= v11)
          goto LABEL_34;
        v20 = *(_QWORD *)(v22 + 8 * v14);
        if (!v20)
        {
          v14 = v6 + 4;
          if (v6 + 4 >= v11)
            goto LABEL_34;
          v20 = *(_QWORD *)(v22 + 8 * v14);
          if (!v20)
          {
            v14 = v6 + 5;
            if (v6 + 5 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v22 + 8 * v14);
            if (!v20)
            {
              v21 = v6 + 6;
              while (v11 != v21)
              {
                v20 = *(_QWORD *)(v22 + 8 * v21++);
                if (v20)
                {
                  v14 = v21 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_10005BEE4(v1);
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v12 = (v20 - 1) & v20;
    v13 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_31:
    v18 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v13);
    if (!v18)
      goto LABEL_34;
    while (1)
    {
      sub_10007F964((Swift::Int *)&v24, v18);

      v6 = v14;
      v7 = v12;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_12:
      v15 = __CocoaSet.Iterator.next()(a1);
      if (v15)
      {
        v16 = v15;
        v23 = v15;
        v17 = sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
        swift_unknownObjectRetain(v16);
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v17, 7);
        v18 = v24;
        swift_unknownObjectRelease(v16);
        v14 = v6;
        v12 = v7;
        if (v18)
          continue;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
}

void sub_10005E934(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
  sub_100060654((unint64_t *)&unk_100116960, &qword_100116958, FBKUploadTask_ptr);
  isa = Set._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

void sub_10005EA6C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  Class isa;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  void (*v41)(void *);
  uint64_t v42;
  uint64_t v43;

  v13 = type metadata accessor for FBKFeedbackUpload(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v17 = a1;
    objc_msgSend(a6, "prepareFilerFormForSubmission:", v17);
    v18 = objc_msgSend(v17, "uploadTask");
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v17, "ID");
      objc_msgSend(v19, "setTaskIdentifier:", v20);

      v21 = FBKFeedbackUpload.bugSessions.getter(objc_msgSend(v19, "setLocalSubmissionStage:", 2));
      v22 = sub_10007E368(v21);
      v23 = swift_bridgeObjectRelease(v21);
      __chkstk_darwin(v23);
      v40[-2] = a7;
      v40[-1] = a3;
      v24 = sub_10005CB70((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_1000607F0, (uint64_t)&v40[-4], (uint64_t)v22);
      swift_release(v22);
      v25 = sub_100083178((uint64_t)v24);
      swift_bridgeObjectRelease(v24);
      sub_100053458(0, &qword_1001169B0, FBKBugSession_ptr);
      sub_100060654(&qword_1001169B8, &qword_1001169B0, FBKBugSession_ptr);
      isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v25);
      objc_msgSend(v19, "setBugSessions:", isa);

      v27 = v19;
      a4(v19);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_100115DD0 != -1)
      swift_once(&qword_100115DD0, sub_10005CCA8);
    v28 = type metadata accessor for Logger(0);
    sub_10005067C(v28, (uint64_t)qword_100116940);
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v41 = a4;
      v34 = v33;
      v43 = v33;
      v40[1] = a5;
      *(_DWORD *)v32 = 136446210;
      v35 = sub_10004BD78(&qword_1001169A8, (uint64_t (*)(uint64_t))&type metadata accessor for FBKFeedbackUpload, (uint64_t)&protocol conformance descriptor for FBKFeedbackUpload);
      v36 = dispatch thunk of CustomStringConvertible.description.getter(v13, v35);
      v38 = v37;
      v42 = sub_100094680(v36, v37, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
      swift_bridgeObjectRelease(v38);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "FR fetch failed. Cannot track upload on %{public}s", v32, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      v39 = v34;
      a4 = v41;
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }

    a4(0);
  }
}

void sub_10005EE3C(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint8_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v33 = a3;
  v5 = type metadata accessor for FBKFeedbackUpload(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(FBKBugSession), "entityName");
  if (!v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v11 = v10;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
  }
  v12 = objc_msgSend((id)objc_opt_self(NSEntityDescription), "insertNewObjectForEntityForName:inManagedObjectContext:", v9, a1);

  v13 = objc_opt_self(FBKBugSession);
  v14 = swift_dynamicCastObjCClass(v12, v13);
  if (v14)
  {
    v15 = (void *)v14;
    FBKFeedbackUpload.BugSession.sessionIdentifier.getter();
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v15, "setIdentifier:", v18);

    FBKFeedbackUpload.BugSession.deviceIdentifier.getter();
    v20 = v19;
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    objc_msgSend(v15, "setDeviceIdentifier:", v21);

  }
  else
  {

    if (qword_100115DD0 != -1)
      swift_once(&qword_100115DD0, sub_10005CCA8);
    v22 = type metadata accessor for Logger(0);
    sub_10005067C(v22, (uint64_t)qword_100116940);
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v36 = v27;
      *(_DWORD *)v26 = 136315138;
      v32 = v26 + 4;
      v28 = sub_10004BD78(&qword_1001169A8, (uint64_t (*)(uint64_t))&type metadata accessor for FBKFeedbackUpload, (uint64_t)&protocol conformance descriptor for FBKFeedbackUpload);
      v29 = dispatch thunk of CustomStringConvertible.description.getter(v5, v28);
      v31 = v30;
      v34 = sub_100094680(v29, v30, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
      swift_bridgeObjectRelease(v31);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Could not create FBA bug session for feedback upload %s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }

    v15 = 0;
  }
  *v33 = v15;
}

void sub_10005F158(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_10005F1CC(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a4();
  v7 = (void *)v6;
  v8 = *a1 + 8;
  if (v6)
    v10 = v6;
  else
    v10 = 0;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
  *a1 = v8;
  v9 = *a2;
  if (*a2)
  {
    *v9 = v7;
    *a2 = v9 + 1;
  }
  else
  {

  }
}

uint64_t sub_10005F27C(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_10005F3D8((unint64_t *)((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    v9 = v8;
    v10 = swift_release(v2);
    if (v1)
      swift_willThrow(v10);
  }
  else
  {
    v11 = (void *)swift_slowAlloc(v7, -1);
    bzero(v11, v7);
    sub_10005F3D8((unint64_t *)v11, v6, v2);
    v9 = v12;
    swift_release(v2);
    swift_slowDealloc(v11, -1, -1);
  }
  return v9;
}

void sub_10005F3D8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v26;

  v26 = 0;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_18:
    v15 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    v16 = objc_msgSend(v15, "filerForm");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "filerFormType");

      swift_unknownObjectRelease(v17);
      if (!v18)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        v12 = __OFADD__(v26++, 1);
        if (v12)
          goto LABEL_34;
      }
    }
    else
    {
      if (qword_100115DD0 != -1)
        swift_once(&qword_100115DD0, sub_10005CCA8);
      v19 = type metadata accessor for Logger(0);
      v20 = sub_10005067C(v19, (uint64_t)qword_100116940);
      v21 = Logger.logObject.getter(v20);
      v22 = static os_log_type_t.default.getter(v21);
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Found upload task without a valid filer form, skipping.", v23, 2u);
        swift_slowDealloc(v23, -1, -1);
      }

    }
  }
  v12 = __OFADD__(v4++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v4 >= v9)
    goto LABEL_31;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_17:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_18;
  }
  v14 = v4 + 1;
  if (v4 + 1 >= v9)
    goto LABEL_31;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v4 + 2;
  if (v4 + 2 >= v9)
    goto LABEL_31;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v4 + 3;
  if (v4 + 3 >= v9)
  {
LABEL_31:
    swift_retain(a3);
    sub_10007F474(a1, a2, v26, a3);
    return;
  }
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_16:
    v4 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      goto LABEL_31;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_17;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_10005F66C(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, void *a5, void *a6, objc_class *a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  int64_t v22;
  unint64_t v23;
  unint64_t i;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  NSObject *v31;
  void *v32;
  void *v33;
  objc_class *v34;

  v34 = a7;
  v32 = a5;
  v33 = a6;
  v30 = a3;
  v31 = a4;
  v10 = type metadata accessor for FBKFeedbackUpload(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v28 - v15;
  v17 = *(_QWORD *)(a1 + 56);
  v28 = a1 + 56;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v29 = (unint64_t)(v18 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v22 = 0;
  if (!v20)
    goto LABEL_5;
LABEL_4:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (i = v23 | (v22 << 6); ; i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v16, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v11 + 72) * i, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v16, v10);
    sub_10005D504((uint64_t)v14, a2, v30, v31, v32, v33, v34);
    if (v7)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      return swift_release(a1);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    if (v20)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v22++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v29)
      return swift_release(a1);
    v26 = *(_QWORD *)(v28 + 8 * v22);
    if (!v26)
      break;
LABEL_17:
    v20 = (v26 - 1) & v26;
  }
  v27 = v22 + 1;
  if (v22 + 1 >= v29)
    return swift_release(a1);
  v26 = *(_QWORD *)(v28 + 8 * v27);
  if (v26)
    goto LABEL_16;
  v27 = v22 + 2;
  if (v22 + 2 >= v29)
    return swift_release(a1);
  v26 = *(_QWORD *)(v28 + 8 * v27);
  if (v26)
    goto LABEL_16;
  v27 = v22 + 3;
  if (v22 + 3 >= v29)
    return swift_release(a1);
  v26 = *(_QWORD *)(v28 + 8 * v27);
  if (v26)
    goto LABEL_16;
  v27 = v22 + 4;
  if (v22 + 4 >= v29)
    return swift_release(a1);
  v26 = *(_QWORD *)(v28 + 8 * v27);
  if (v26)
  {
LABEL_16:
    v22 = v27;
    goto LABEL_17;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v22 >= v29)
      return swift_release(a1);
    v26 = *(_QWORD *)(v28 + 8 * v22);
    ++v27;
    if (v26)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_10005F8D8(void *a1, void *a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  dispatch_group_t v25;
  char **v26;
  Swift::Int v27;
  id v28;
  id v29;
  id v30;
  void **v31;
  void *v32;
  void **v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  char v43;
  unint64_t v44;
  BOOL v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  objc_class *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  const char *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint32_t v68;
  uint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  void *v72;
  NSObject *v73;
  id v74;
  objc_class *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  Class v89;
  _QWORD *v90;
  id v91;
  void *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  Class isa;
  uint64_t v103;
  _QWORD *v104;
  void **aBlock;
  _QWORD v106[4];
  _QWORD *v107;

  v101 = a1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_1000E8DB8, 24, 7);
  *(_QWORD *)(v13 + 16) = a3;
  _Block_copy(a3);
  v14 = objc_msgSend(a2, "mainQueueContext");
  if (v14)
  {
    isa = 0;
    v94 = v12;
    v95 = v10;
    v96 = v9;
    v97 = v8;
    v98 = v6;
    v15 = v14;
    v16 = swift_allocObject(&unk_1000E8DE0, 24, 7);
    v91 = v15;
    v92 = a2;
    v17 = objc_msgSend(a2, "uploadTasksFromDatabaseWithContext:", v15);
    v18 = (void *)sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
    v19 = sub_100060654((unint64_t *)&unk_100116960, &qword_100116958, FBKUploadTask_ptr);
    v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v17, v18, v19);

    *(_QWORD *)(v16 + 16) = v20;
    v99 = v5;
    v100 = v13;
    v93 = v16;
    if ((v20 & 0xC000000000000001) != 0)
    {
      v21 = &_swiftEmptySetSingleton;
      aBlock = (void **)&_swiftEmptySetSingleton;
      if (v20 < 0)
        v22 = v20;
      else
        v22 = v20 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v20);
      v23 = __CocoaSet.makeIterator()(v22);
      v24 = __CocoaSet.Iterator.next()(v23);
      if (v24)
      {
        v25 = (dispatch_group_t)qword_100116940;
        v26 = &selRef_touchIDCell;
        while (1)
        {
          v103 = v24;
          swift_dynamicCast(&v104, &v103, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
          v28 = objc_msgSend(v104, "filerForm");
          if (v28)
          {
            v29 = v28;
            v30 = objc_msgSend(v28, "filerFormType");
            swift_unknownObjectRelease(v29);
            if (!v30)
            {
              v21 = v104;
              v31 = aBlock;
              v32 = aBlock[2];
              if (aBlock[3] <= v32)
              {
                sub_10007E880((uint64_t)v32 + 1);
                v31 = aBlock;
              }
              v27 = NSObject._rawHashValue(seed:)((Swift::Int)v31[5]);
              v33 = v31 + 7;
              v34 = -1 << *((_BYTE *)v31 + 32);
              v35 = v27 & ~v34;
              v36 = v35 >> 6;
              if (((-1 << v35) & ~(unint64_t)v31[(v35 >> 6) + 7]) != 0)
              {
                v37 = __clz(__rbit64((-1 << v35) & ~(unint64_t)v31[(v35 >> 6) + 7])) | v35 & 0x7FFFFFFFFFFFFFC0;
              }
              else
              {
                v43 = 0;
                v44 = (unint64_t)(63 - v34) >> 6;
                do
                {
                  if (++v36 == v44 && (v43 & 1) != 0)
                  {
                    __break(1u);
                    goto LABEL_53;
                  }
                  v45 = v36 == v44;
                  if (v36 == v44)
                    v36 = 0;
                  v43 |= v45;
                  v46 = (unint64_t)v33[v36];
                }
                while (v46 == -1);
                v37 = __clz(__rbit64(~v46)) + (v36 << 6);
              }
              *(void **)((char *)v33 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) = (void *)((1 << v37) | *(unint64_t *)((char *)v33 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)));
              *((_QWORD *)v31[6] + v37) = v21;
              v31[2] = (char *)v31[2] + 1;
              goto LABEL_10;
            }
          }
          else
          {
            if (qword_100115DD0 != -1)
              swift_once(&qword_100115DD0, sub_10005CCA8);
            v38 = type metadata accessor for Logger(0);
            v39 = sub_10005067C(v38, (uint64_t)qword_100116940);
            v40 = Logger.logObject.getter(v39);
            v41 = static os_log_type_t.default.getter(v40);
            if (os_log_type_enabled(v40, v41))
            {
              v42 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v42 = 0;
              _os_log_impl((void *)&_mh_execute_header, v40, v41, "Found upload task without a valid filer form, skipping.", v42, 2u);
              swift_slowDealloc(v42, -1, -1);
            }

          }
LABEL_10:
          v24 = __CocoaSet.Iterator.next()(v27);
          if (!v24)
          {
            v21 = aBlock;
            break;
          }
        }
      }
      swift_release(v23);
    }
    else
    {
      v52 = swift_bridgeObjectRetain(v20);
      v53 = isa;
      v21 = (id)sub_10005F27C(v52);
      isa = v53;
    }
    v54 = objc_msgSend(v101, "feedbackContentItems");
    if (v54)
    {
      v55 = v54;
      v56 = sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
      v57 = sub_100060654((unint64_t *)&qword_100116998, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
      v18 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v55, v56, v57);

    }
    else
    {
      v18 = &_swiftEmptySetSingleton;
    }
    v101 = (id)swift_allocObject(&unk_1000E8DE0, 24, 7);
    *((_QWORD *)v101 + 2) = &_swiftEmptySetSingleton;
    v25 = dispatch_group_create();
    v58 = objc_msgSend((id)objc_opt_self(FBKSharedConstants), "sharedUserDefaults");
    v26 = (char **)static FBKFeedbackUpload.allFeedbackUploads(_:)();

    if (v26[2])
    {
      if (qword_100115DD0 != -1)
LABEL_53:
        swift_once(&qword_100115DD0, sub_10005CCA8);
      v59 = type metadata accessor for Logger(0);
      sub_10005067C(v59, (uint64_t)qword_100116940);
      v60 = swift_bridgeObjectRetain(v26);
      v61 = Logger.logObject.getter(v60);
      v62 = static os_log_type_t.default.getter(v61);
      if (!os_log_type_enabled(v61, v62))
      {

        swift_bridgeObjectRelease(v26);
        goto LABEL_52;
      }
      v63 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v63 = 134217984;
      aBlock = (void **)v26[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v106);
      swift_bridgeObjectRelease(v26);
      v64 = "Found %ld FBK uploads to track";
      v65 = v61;
      v66 = v62;
      v67 = v63;
      v68 = 12;
    }
    else
    {
      if (qword_100115DD0 != -1)
        swift_once(&qword_100115DD0, sub_10005CCA8);
      v69 = type metadata accessor for Logger(0);
      v70 = sub_10005067C(v69, (uint64_t)qword_100116940);
      v61 = Logger.logObject.getter(v70);
      v71 = static os_log_type_t.default.getter(v61);
      if (!os_log_type_enabled(v61, v71))
        goto LABEL_50;
      v63 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v63 = 0;
      v64 = "No FBK uploads found.";
      v65 = v61;
      v66 = v71;
      v67 = v63;
      v68 = 2;
    }
    _os_log_impl((void *)&_mh_execute_header, v65, v66, v64, v67, v68);
    swift_slowDealloc(v63, -1, -1);
LABEL_50:

LABEL_52:
    v72 = v92;
    swift_unknownObjectWeakInit(&aBlock, v92);
    swift_bridgeObjectRetain(v18);
    swift_retain(v21);
    v73 = v25;
    v74 = v91;
    v75 = (objc_class *)v101;
    swift_retain(v101);
    v91 = v74;
    sub_10005F66C((uint64_t)v26, (uint64_t)v18, (uint64_t)v21, v73, &aBlock, v74, v75);
    swift_bridgeObjectRelease_n(v18, 2);
    swift_release_n(v21, 2);

    swift_release(v75);
    swift_unknownObjectWeakDestroy(&aBlock);
    swift_bridgeObjectRelease(v26);
    sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
    isa = (Class)static OS_dispatch_queue.main.getter();
    v76 = (_QWORD *)swift_allocObject(&unk_1000E8E08, 56, 7);
    v76[2] = v75;
    v76[3] = v72;
    v77 = v93;
    v76[4] = v93;
    v76[5] = sub_1000605C4;
    v78 = v100;
    v76[6] = v100;
    v106[3] = sub_10006062C;
    v107 = v76;
    aBlock = _NSConcreteStackBlock;
    v106[0] = 1107296256;
    v106[1] = sub_10008F5C0;
    v106[2] = &unk_1000E8E20;
    v79 = _Block_copy(&aBlock);
    swift_retain(v75);
    v80 = v72;
    swift_retain(v77);
    v81 = swift_retain(v78);
    v82 = v77;
    v83 = v94;
    static DispatchQoS.unspecified.getter(v81);
    v104 = _swiftEmptyArrayStorage;
    v84 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v85 = sub_10004BB9C((uint64_t *)&unk_100116980);
    v86 = sub_10004BBDC();
    v87 = v97;
    v88 = v99;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v104, v85, v86, v99, v84);
    v89 = isa;
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v83, v87, isa, v79);

    _Block_release(v79);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v87, v88);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v83, v96);
    v90 = v107;
    swift_release(v78);
    swift_release(v82);
    swift_release(v75);
    swift_release(v90);
    return;
  }
  if (qword_100115DD0 != -1)
    swift_once(&qword_100115DD0, sub_10005CCA8);
  v47 = type metadata accessor for Logger(0);
  v48 = sub_10005067C(v47, (uint64_t)qword_100116940);
  v49 = Logger.logObject.getter(v48);
  v50 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v51 = 0;
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "No main queue managed object context found", v51, 2u);
    swift_slowDealloc(v51, -1, -1);
  }

  sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
  sub_100060654((unint64_t *)&unk_100116960, &qword_100116958, FBKUploadTask_ptr);
  isa = Set._bridgeToObjectiveC()().super.isa;
  ((void (**)(_QWORD, Class))a3)[2](a3, isa);
  swift_release(v13);

}

id sub_1000602F0()
{
  id result;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = objc_msgSend((id)objc_opt_self(FBKUploadTask), "entityName");
  if (result)
  {
    v1 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v3 = v2;

    v4 = objc_allocWithZone((Class)NSFetchRequest);
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    v6 = objc_msgSend(v4, "initWithEntityName:", v5);

    v7 = sub_100053458(0, &qword_100116958, FBKUploadTask_ptr);
    v8 = NSManagedObjectContext.fetch<A>(_:)(v6, v7);
    v9 = sub_100083154(v8);

    swift_bridgeObjectRelease(v8);
    return (id)v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000605A0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000605C4(uint64_t a1)
{
  uint64_t v1;

  sub_10005E934(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000605CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000605F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10006062C()
{
  uint64_t v0;

  return sub_10005E2A4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_10006063C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006064C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100060654(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100053458(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100060694()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1000606C8(void *a1)
{
  uint64_t v1;

  sub_10005E1C8(a1, *(dispatch_group_t *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1000606D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for FBKFeedbackUpload(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));

  return swift_deallocObject(v0, v8 + 8, v5);
}

void sub_100060774(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for FBKFeedbackUpload(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10005EA6C(a1, a2, v2 + v6, *(void (**)(void *))(v2 + v7), *(_QWORD *)(v2 + v7 + 8), *(void **)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

void sub_1000607F0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_10005EE3C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100060808()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10006082C(uint64_t a1)
{
  uint64_t v1;

  sub_10005CFC8(a1, *(void **)(v1 + 16));
}

void sub_100060878()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  Swift::String v25;

  v1 = v0;
  v2 = type metadata accessor for CharacterSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController], "searchBar");
  v7 = objc_msgSend(v6, "text");

  if (v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v9 = v8;

    v10 = *(_QWORD **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants];
    v25 = String.lowercased()();
    v11 = swift_bridgeObjectRetain(v10);
    static CharacterSet.whitespacesAndNewlines.getter(v11);
    v12 = sub_10004F5C4();
    v13 = StringProtocol.trimmingCharacters(in:)(v5, &type metadata for String, v12);
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRelease(v25._object);
    if (String.count.getter(v13))
    {
      v16 = swift_bridgeObjectRetain(v10);
      v17 = sub_100062074(v16, v13, v15);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v10);
      v9 = v10;
      v10 = v17;
    }
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v15);
    v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants];
    *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = v10;
    swift_bridgeObjectRelease(v18);
    v19 = objc_msgSend(v1, "tableView");
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v19, "reloadData");

      return;
    }
    __break(1u);
  }
  else
  {
    v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants];
    v22 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants];
    *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = v21;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRelease(v22);
    v23 = objc_msgSend(v1, "tableView");
    if (v23)
    {
      v24 = v23;
      objc_msgSend(v23, "reloadData");

      return;
    }
  }
  __break(1u);
}

void sub_100060AC0()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for FBAParticipantTableViewController();
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v1 = objc_msgSend(v0, "navigationItem");
  v2 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v0, "dismissSelf");
  objc_msgSend(v1, "setRightBarButtonItem:", v2);

  v3 = OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController], "setSearchResultsUpdater:", v0);
  objc_msgSend(*(id *)&v0[v3], "setDelegate:", v0);
  objc_msgSend(*(id *)&v0[v3], "setObscuresBackgroundDuringPresentation:", 0);
  v4 = objc_msgSend(*(id *)&v0[v3], "searchBar");
  objc_msgSend(v4, "setDelegate:", v0);

  objc_msgSend(*(id *)&v0[v3], "setHidesNavigationBarDuringPresentation:", 0);
  objc_msgSend(v0, "setDefinesPresentationContext:", 1);
  v5 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v5, "setSearchController:", *(_QWORD *)&v0[v3]);

}

void sub_100060C68(void *a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  _QWORD v18[5];
  uint64_t v19;

  v3 = objc_msgSend(a1, "singleTeam");
  if (v3)
  {
    v4 = v3;
    if (objc_msgSend(v3, "teamType"))
    {
      v5 = objc_msgSend(a1, "assignee");
      v6 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee];
      *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee] = v5;

      v7 = objc_msgSend(a1, "originator");
      v8 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator];
      *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator] = v7;

      sub_10006102C(v4);
      v9 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
      v10 = swift_allocObject(&unk_1000E8F20, 32, 7);
      *(_QWORD *)(v10 + 16) = v4;
      *(_QWORD *)(v10 + 24) = v1;
      v18[4] = sub_10006234C;
      v19 = v10;
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 1107296256;
      v18[2] = sub_100057D74;
      v18[3] = &unk_1000E8F38;
      v11 = _Block_copy(v18);
      v12 = v19;
      v13 = v4;
      v14 = v1;
      swift_release(v12);
      objc_msgSend(v9, "refreshParticipantsWithTeam:completion:", v13, v11);
      _Block_release(v11);

      return;
    }

  }
  v15 = static os_log_type_t.error.getter(v3);
  v16 = objc_msgSend((id)objc_opt_self(FBALog), "appHandle");
  if (v16)
  {
    v17 = v16;
    os_log(_:dso:log:_:_:)(v15, &_mh_execute_header);

    objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
  }
  else
  {
    __break(1u);
  }
}

void sub_100060E7C(uint64_t a1, id a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v13;
  void *v14;
  _QWORD v15[3];
  _BYTE v16[8];

  if (a1)
  {
    v3 = swift_errorRetain(a1);
    v4 = static os_log_type_t.error.getter(v3);
    v5 = objc_msgSend((id)objc_opt_self(FBALog), "appHandle");
    if (v5)
    {
      v6 = v5;
      v7 = sub_10004BB9C((uint64_t *)&unk_100116860);
      v8 = swift_allocObject(v7, 72, 7);
      *(_OWORD *)(v8 + 16) = xmmword_1000CC730;
      swift_getErrorValue(a1, v16, v15);
      v9 = Error.localizedDescription.getter(v15[1], v15[2]);
      v11 = v10;
      *(_QWORD *)(v8 + 56) = &type metadata for String;
      *(_QWORD *)(v8 + 64) = sub_100051284();
      *(_QWORD *)(v8 + 32) = v9;
      *(_QWORD *)(v8 + 40) = v11;
      os_log(_:dso:log:_:_:)(v4, &_mh_execute_header);

      swift_bridgeObjectRelease(v8);
      swift_errorRelease(a1);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v13 = objc_msgSend(a2, "managedObjectContext");
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v13, "refreshObject:mergeChanges:", a2, 1);

    }
    sub_10006102C(a2);
  }
}

void sub_10006102C(void *a1)
{
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  NSSet v7;
  Class isa;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  id v16;

  v2 = objc_msgSend(a1, "participants");
  if (v2)
  {
    v3 = v2;
    v4 = sub_100053458(0, (unint64_t *)&qword_100116C18, FBKParticipant_ptr);
    v5 = sub_1000622C8();
    v6 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

  }
  else
  {
    v6 = &_swiftEmptySetSingleton;
  }
  sub_100053458(0, (unint64_t *)&qword_100116C18, FBKParticipant_ptr);
  sub_1000622C8();
  v7.super.isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  isa = (Class)objc_msgSend((id)objc_opt_self(FBKParticipant), "sortDescriptors");
  if (!isa)
  {
    v9 = sub_100053458(0, &qword_100116620, NSSortDescriptor_ptr);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v9);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v10);
  }
  v11 = -[objc_class sortedArrayUsingDescriptors:](v7.super.isa, "sortedArrayUsingDescriptors:", isa);

  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, (char *)&type metadata for Any + 8);
  v13 = sub_10007D6FC(v12);
  swift_bridgeObjectRelease(v12);
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants];
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants] = v13;
  swift_bridgeObjectRelease(v14);
  sub_100060878();
  v15 = objc_msgSend(v1, "tableView");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "reloadData");

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_10006129C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  Class isa;
  id v10;
  unint64_t result;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void (*v15)(_QWORD *, _QWORD);
  void (*v16)(_QWORD *, _QWORD);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  char v24;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  Swift::String v34;
  _QWORD *v35;
  void *v36;
  id v37;
  id v38;
  char v39;
  uint64_t v40;
  _QWORD v42[5];
  Swift::String v43;

  v2 = v1;
  v4 = type metadata accessor for UIListContentConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v42[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v8, isa);

  result = IndexPath.row.getter();
  v12 = result;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants);
  if ((v13 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2
                                       + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants));
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v13);
    swift_bridgeObjectRelease(v13);
    goto LABEL_5;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (result >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v14 = *(id *)(v13 + 8 * result + 32);
LABEL_5:
  static UIListContentConfiguration.valueCell()();
  UIListContentConfiguration.image.setter(objc_msgSend(v14, "contactImage"));
  v15 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v42);
  UIListContentConfiguration.ImageProperties.maximumSize.setter(40.0, 40.0);
  v15(v42, 0);
  v16 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v42);
  UIListContentConfiguration.ImageProperties.cornerRadius.setter(20.0);
  v16(v42, 0);
  v17 = objc_msgSend(v14, "fullName");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  UIListContentConfiguration.text.setter(v18, v20);
  v21 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator);
  if (v21)
  {
    sub_100053458(0, (unint64_t *)&qword_100116C18, FBKParticipant_ptr);
    v22 = v14;
    v23 = v21;
    v24 = static NSObject.== infix(_:_:)(v22, v23);

    countAndFlagsBits = 0;
    object = 0;
    if ((v24 & 1) != 0)
    {
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
      v29 = v28;
      v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v43._object = (void *)0xE000000000000000;
      v31._countAndFlagsBits = 0x54414E494749524FLL;
      v31._object = (void *)0xEA0000000000524FLL;
      v32.value._countAndFlagsBits = v27;
      v32.value._object = v29;
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      v43._countAndFlagsBits = 0;
      v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v43);
      countAndFlagsBits = v34._countAndFlagsBits;
      object = v34._object;
      swift_bridgeObjectRelease(v29);

    }
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  UIListContentConfiguration.secondaryText.setter(countAndFlagsBits, object);
  v42[3] = v4;
  v42[4] = &protocol witness table for UIListContentConfiguration;
  v35 = sub_1000535B0(v42);
  (*(void (**)(_QWORD *, char *, uint64_t))(v5 + 16))(v35, v7, v4);
  UITableViewCell.contentConfiguration.setter(v42);
  v36 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee);
  if (v36
    && (sub_100053458(0, (unint64_t *)&qword_100116C18, FBKParticipant_ptr),
        v37 = v14,
        v38 = v36,
        v39 = static NSObject.== infix(_:_:)(v38, v37),
        v38,
        v37,
        (v39 & 1) != 0))
  {
    v40 = 3;
  }
  else
  {
    v40 = 0;
  }
  objc_msgSend(v10, "setAccessoryType:", v40);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (unint64_t)v10;
}

unint64_t sub_10006170C(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  id v7;

  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participantDelegate, a2);
  if (result)
  {
    v4 = (void *)result;
    result = IndexPath.row.getter();
    v5 = result;
    v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants);
    if ((v6 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(a1
                                         + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants));
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v6);
      swift_bridgeObjectRelease(v6);
      goto LABEL_6;
    }
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(id *)(v6 + 8 * result + 32);
LABEL_6:
      objc_msgSend(v4, "participantController:didSelectParticipant:", a1, v7);

      return swift_unknownObjectRelease(v4);
    }
    __break(1u);
  }
  return result;
}

id sub_100061980(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  objc_super v8;

  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participantDelegate], 0);
  v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_cellReuseIdentifier];
  *(_QWORD *)v3 = 0xD000000000000015;
  *((_QWORD *)v3 + 1) = 0x80000001000D5E10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator] = 0;
  v4 = OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController;
  v5 = objc_allocWithZone((Class)UISearchController);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "initWithSearchResultsController:", 0);

  v8.receiver = v6;
  v8.super_class = (Class)type metadata accessor for FBAParticipantTableViewController();
  return objc_msgSendSuper2(&v8, "initWithStyle:", a1);
}

id sub_100061AA4(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  NSString v10;
  id v11;
  objc_super v13;

  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participantDelegate], 0);
  v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_cellReuseIdentifier];
  *(_QWORD *)v6 = 0xD000000000000015;
  *((_QWORD *)v6 + 1) = 0x80000001000D5E10;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator] = 0;
  v7 = OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController;
  v8 = objc_allocWithZone((Class)UISearchController);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, "initWithSearchResultsController:", 0);

  if (a2)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for FBAParticipantTableViewController();
  v11 = objc_msgSendSuper2(&v13, "initWithNibName:bundle:", v10, a3);

  return v11;
}

id sub_100061C48(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  objc_super v9;

  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participantDelegate], 0);
  v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_cellReuseIdentifier];
  *(_QWORD *)v3 = 0xD000000000000015;
  *((_QWORD *)v3 + 1) = 0x80000001000D5E10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator] = 0;
  v4 = OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController;
  v5 = objc_allocWithZone((Class)UISearchController);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "initWithSearchResultsController:", 0);

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for FBAParticipantTableViewController();
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_100061D78()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAParticipantTableViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAParticipantTableViewController()
{
  return objc_opt_self(_TtC18Feedback_Assistant33FBAParticipantTableViewController);
}

void sub_100061E54(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  Swift::String v24;

  v2 = v1;
  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, "searchBar");
  v9 = objc_msgSend(v8, "text");

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v11 = v10;

    v12 = *(_QWORD **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants];
    v24 = String.lowercased()();
    v13 = swift_bridgeObjectRetain(v12);
    static CharacterSet.whitespacesAndNewlines.getter(v13);
    v14 = sub_10004F5C4();
    v15 = StringProtocol.trimmingCharacters(in:)(v7, &type metadata for String, v14);
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease(v24._object);
    if (String.count.getter(v15))
    {
      v18 = swift_bridgeObjectRetain(v12);
      v19 = sub_100062074(v18, v15, v17);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v12);
      v11 = v12;
      v12 = v19;
    }
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v17);
    v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants];
    *(_QWORD *)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = v12;
    swift_bridgeObjectRelease(v20);
    v21 = objc_msgSend(v2, "tableView");
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

_QWORD *sub_100062074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  char v23;
  uint64_t v25;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  _QWORD *v31;

  v31 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
LABEL_9:
        v9 = v8;
        v10 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_17;
        v11 = objc_msgSend(v8, "fullName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v13 = v12;

        v14 = String.lowercased()();
        swift_bridgeObjectRelease(v13);
        v30 = v14;
        v28 = a2;
        v29 = a3;
        v15 = sub_10004F5C4();
        v16 = StringProtocol.contains<A>(_:)(&v28, &type metadata for String, &type metadata for String, v15, v15);
        v17 = swift_bridgeObjectRelease(v14._object);
        if ((v16 & 1) != 0)
          goto LABEL_4;
        v18 = objc_msgSend(v9, "emailAddress");
        if (!v18)
          goto LABEL_13;
        v19 = v18;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v21 = v20;

        v22 = String.lowercased()();
        swift_bridgeObjectRelease(v21);
        v30 = v22;
        v28 = a2;
        v29 = a3;
        v23 = StringProtocol.contains<A>(_:)(&v28, &type metadata for String, &type metadata for String, v15, v15);
        v17 = swift_bridgeObjectRelease(v22._object);
        if ((v23 & 1) != 0)
        {
LABEL_4:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
          v6 = v31[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
          v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v9);
          specialized ContiguousArray._endMutation()(v7);
        }
        else
        {
LABEL_13:

        }
        ++v5;
        if (v10 == v4)
          return v31;
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      if (a1 < 0)
        v25 = a1;
      else
        v25 = a1 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v25);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v8 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1000622C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116C20;
  if (!qword_100116C20)
  {
    v1 = sub_100053458(255, (unint64_t *)&qword_100116C18, FBKParticipant_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100116C20);
  }
  return result;
}

uint64_t sub_100062320()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10006234C(uint64_t a1)
{
  uint64_t v1;

  sub_100060E7C(a1, *(id *)(v1 + 16));
}

uint64_t sub_100062354(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100062364(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10006236C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1000623E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_10006170C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

id sub_100062578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  uint64_t i;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  objc_super v19;

  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filterManager], 0);
  v7 = &v3[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = a3;
  v8 = *((_QWORD *)v7 + 1);
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  swift_bridgeObjectRelease(v8);
  v19.receiver = v3;
  v19.super_class = (Class)type metadata accessor for FBAFilterGroup();
  v9 = (char *)objc_msgSendSuper2(&v19, "init");
  v10 = v9;
  v11 = *(_QWORD *)&v9[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  if (!((unint64_t)v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)&v9[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
    result = v10;
    if (v12)
      goto LABEL_3;
LABEL_13:

    swift_bridgeObjectRelease_n(v11, 2);
    return v10;
  }
  if (v11 < 0)
    v17 = *(_QWORD *)&v9[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  else
    v17 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)&v9[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
  v18 = v10;
  result = (id)_CocoaArrayWrapper.endIndex.getter(v17);
  v12 = (uint64_t)result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v12 >= 1)
  {
    for (i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0)
        v15 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v11);
      else
        v15 = (char *)*(id *)(v11 + 8 * i + 32);
      v16 = v15;
      swift_unknownObjectWeakAssign(&v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], v10);

    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

id sub_10006278C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFilterGroup();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAFilterGroup()
{
  return objc_opt_self(_TtC18Feedback_Assistant14FBAFilterGroup);
}

uint64_t static FBATargetedSurvey.reportFailureToLaunchForm(formIdentifier:)(uint64_t a1, uint64_t a2)
{
  return static FBKSAdmin.reportFailureToLaunchForm(formIdentifier:completion:)(a1, a2, 0, 0);
}

id FBATargetedSurvey.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

id FBATargetedSurvey.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBATargetedSurvey();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for FBATargetedSurvey()
{
  return objc_opt_self(_TtC18Feedback_Assistant17FBATargetedSurvey);
}

id FBATargetedSurvey.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBATargetedSurvey();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void *sub_100062974()
{
  void *v0;
  NSString *v1;
  Class v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = (NSString *)String._bridgeToObjectiveC()();
  v2 = NSClassFromString(v1);

  if (v2)
  {
    v3 = objc_msgSend(v0, "subviews");
    v4 = sub_100062C68();
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    if ((unint64_t)v5 >> 62)
      goto LABEL_16;
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v12))
    {
      v7 = 4;
      while (1)
      {
        v8 = (v5 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5)
           : *(id *)(v5 + 8 * v7);
        v9 = v8;
        v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        if (objc_msgSend(v8, "isKindOfClass:", v2))
        {
          swift_bridgeObjectRelease_n(v5, 2);
          return v9;
        }

        ++v7;
        if (v10 == v6)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      if (v5 < 0)
        v12 = v5;
      else
        v12 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
    }
LABEL_11:
    swift_bridgeObjectRelease_n(v5, 2);
  }
  return 0;
}

void sub_100062B44(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;

  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    v9 = objc_msgSend(v3, "navigationBar");

    if (v9)
    {
      v5 = objc_msgSend(v9, "shouldHideBarButtonItem");
      v6 = objc_msgSend(v1, "navigationItem");
      v7 = v6;
      if (v5)
        v8 = 0;
      else
        v8 = a1;
      objc_msgSend(v6, "setRightBarButtonItem:", v8);

    }
  }
}

unint64_t sub_100062C68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116D00;
  if (!qword_100116D00)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100116D00);
  }
  return result;
}

id sub_100062DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  NSString v11;
  objc_class *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  id v29;
  id result;
  id v31;
  void (*v32)(_QWORD *, _QWORD);
  _QWORD *v33;
  id v34;
  _QWORD v36[5];
  objc_super v37;
  Swift::String v38;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v36[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAAddAttachmentsCell_itemIdentifier];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0xE000000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAAddAttachmentsCell_button] = 0;
  if (a3)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v11 = 0;
  }
  v12 = (objc_class *)type metadata accessor for FBAAddAttachmentsCell();
  v37.receiver = v3;
  v37.super_class = v12;
  v13 = objc_msgSendSuper2(&v37, "initWithStyle:reuseIdentifier:", a1, v11);

  v14 = v13;
  static UIListContentConfiguration.cell()();
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v17 = v16;
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v38._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0x415454415F444441;
  v19._object = (void *)0xEE00544E454D4843;
  v20.value._countAndFlagsBits = v15;
  v20.value._object = v17;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v38);
  swift_bridgeObjectRelease(v17);

  UIListContentConfiguration.text.setter(v22._countAndFlagsBits, v22._object);
  v23 = (void *)FBKSystemImageNamePaperclip;
  v24 = (void *)objc_opt_self(UIImage);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;
  v27 = v23;
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v29 = objc_msgSend(v24, "systemImageNamed:", v28);

  UIListContentConfiguration.image.setter(v29);
  result = objc_msgSend((id)objc_opt_self(iFBAConstants), "tintColor");
  if (result)
  {
    v31 = result;
    v32 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v36);
    UIListContentConfiguration.TextProperties.color.setter(v31);
    v32(v36, 0);
    v36[3] = v6;
    v36[4] = &protocol witness table for UIListContentConfiguration;
    v33 = sub_1000535B0(v36);
    (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 16))(v33, v9, v6);
    v34 = v14;
    UITableViewCell.contentConfiguration.setter(v36);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v34;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000630F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAAddAttachmentsCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAAddAttachmentsCell()
{
  return objc_opt_self(_TtC18Feedback_Assistant21FBAAddAttachmentsCell);
}

void NSNotification.keyboardAttributes.getter(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  __int128 v40;
  __int128 v41;

  v3 = objc_msgSend(v1, "userInfo");
  if (!v3)
  {
    v31 = 0xD000000000000031;
    v34 = 23;
    v32 = "Could not get userInfo from keyboard notification";
LABEL_37:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v31, (unint64_t)(v32 - 32) | 0x8000000000000000, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, v34, 0);
    goto LABEL_38;
  }
  v4 = v3;
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  *(_QWORD *)&v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardAnimationCurveUserInfoKey);
  *((_QWORD *)&v36 + 1) = v6;
  AnyHashable.init<A>(_:)(v39, &v36, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v7 = sub_10006D510((uint64_t)v39), (v8 & 1) != 0))
  {
    sub_1000506D8(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v40);
  }
  else
  {
    v40 = 0u;
    v41 = 0u;
  }
  sub_10006D540((uint64_t)v39);
  if (!*((_QWORD *)&v41 + 1))
  {
    sub_10004F588((uint64_t)&v40, (uint64_t *)&unk_100116D70);
    goto LABEL_29;
  }
  v9 = sub_100053458(0, &qword_1001169A0, NSNumber_ptr);
  if ((swift_dynamicCast(&v36, &v40, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
  {
LABEL_29:
    v31 = 0xD000000000000053;
    v34 = 26;
    v32 = "Could not get keyboardAnimationCurveUserInfoKey from userInfo keyboard notification";
    goto LABEL_37;
  }
  v10 = (void *)v36;
  *(_QWORD *)&v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardAnimationDurationUserInfoKey);
  *((_QWORD *)&v36 + 1) = v11;
  AnyHashable.init<A>(_:)(v39, &v36, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v12 = sub_10006D510((uint64_t)v39), (v13 & 1) != 0))
  {
    sub_1000506D8(*(_QWORD *)(v5 + 56) + 32 * v12, (uint64_t)&v40);
  }
  else
  {
    v40 = 0u;
    v41 = 0u;
  }
  sub_10006D540((uint64_t)v39);
  if (!*((_QWORD *)&v41 + 1))
  {
    sub_10004F588((uint64_t)&v40, (uint64_t *)&unk_100116D70);
    goto LABEL_31;
  }
  if ((swift_dynamicCast(&v36, &v40, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
  {
LABEL_31:
    v33 = 29;
    goto LABEL_34;
  }
  v14 = (void *)v36;
  *(_QWORD *)&v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameBeginUserInfoKey);
  *((_QWORD *)&v36 + 1) = v15;
  AnyHashable.init<A>(_:)(v39, &v36, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v16 = sub_10006D510((uint64_t)v39), (v17 & 1) != 0))
  {
    sub_1000506D8(*(_QWORD *)(v5 + 56) + 32 * v16, (uint64_t)&v40);
  }
  else
  {
    v40 = 0u;
    v41 = 0u;
  }
  sub_10006D540((uint64_t)v39);
  if (*((_QWORD *)&v41 + 1))
  {
    type metadata accessor for CGRect(0);
    v19 = v18;
    if ((swift_dynamicCast(&v36, &v40, (char *)&type metadata for Any + 8, v18, 6) & 1) != 0)
    {
      v20 = v36;
      v21 = v37;
      v22 = v38;
      *(_QWORD *)&v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
      *((_QWORD *)&v36 + 1) = v23;
      AnyHashable.init<A>(_:)(v39, &v36, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v5 + 16) && (v24 = sub_10006D510((uint64_t)v39), (v25 & 1) != 0))
      {
        sub_1000506D8(*(_QWORD *)(v5 + 56) + 32 * v24, (uint64_t)&v40);
      }
      else
      {
        v40 = 0u;
        v41 = 0u;
      }
      swift_bridgeObjectRelease(v5);
      sub_10006D540((uint64_t)v39);
      if (*((_QWORD *)&v41 + 1))
      {
        if ((swift_dynamicCast(&v36, &v40, (char *)&type metadata for Any + 8, v19, 6) & 1) != 0)
        {
          v35 = v36;
          v26 = v37;
          v27 = v38;
          v28 = objc_msgSend(v10, "unsignedIntegerValue");
          objc_msgSend(v14, "doubleValue");
          v30 = v29;

          *(_QWORD *)a1 = v28;
          *(_QWORD *)(a1 + 8) = v30;
          *(_OWORD *)(a1 + 16) = v20;
          *(_QWORD *)(a1 + 32) = v21;
          *(_QWORD *)(a1 + 40) = v22;
          *(_OWORD *)(a1 + 48) = v35;
          *(_QWORD *)(a1 + 64) = v26;
          *(_QWORD *)(a1 + 72) = v27;
          return;
        }
      }
      else
      {
        sub_10004F588((uint64_t)&v40, (uint64_t *)&unk_100116D70);
      }
      v31 = 0xD00000000000004DLL;
      v34 = 35;
      v32 = "Could not get keyboardFrameEndUserInfoKey from userInfo keyboard notification";
      goto LABEL_37;
    }
  }
  else
  {
    sub_10004F588((uint64_t)&v40, (uint64_t *)&unk_100116D70);
  }
  v33 = 32;
LABEL_34:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000004FLL, 0x80000001000D60E0, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, v33, 0);
LABEL_38:
  __break(1u);
}

uint64_t sub_100063614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("com.apple.appleseed.FeedbackAssistant"));
  v2 = v1;
  sub_100053458(0, (unint64_t *)&qword_100116558, OS_os_log_ptr);
  result = OS_os_log.init(subsystem:category:)(v0, v2, 0x7365722D756666, 0xE700000000000000);
  qword_100119F48 = result;
  return result;
}

id sub_1000638E8(uint64_t a1)
{
  return sub_100063CD4(a1, type metadata accessor for FBAFollowupDisplayTextCell);
}

void sub_100063930()
{
  qword_100119F50 = 0x403E000000000000;
}

id sub_10006394C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  NSString v4;

  v3 = *(_QWORD *)(a1 + *a3 + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_1000639A0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v7 = (uint64_t *)(a1 + *a4);
  v8 = v7[1];
  *v7 = v6;
  v7[1] = v9;
  return swift_bridgeObjectRelease(v8);
}

id sub_100063B40(uint64_t a1)
{
  return sub_100063CD4(a1, type metadata accessor for FBALastEmptyCell);
}

uint64_t sub_100063B60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + qword_100116DF0, a2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_100067BB4(a2);
    v8 = v7;

    swift_unknownObjectRelease(v8);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_100063BC4(char *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  id v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  Strong = swift_unknownObjectWeakLoadStrong(&a1[qword_100116DF0], v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = a3;
    v15 = a1;
    v16 = sub_100067BB4((uint64_t)v10);
    v18 = v17;

    swift_unknownObjectRelease(v18);
  }
  else
  {
    v16 = 0;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v16 & 1;
}

uint64_t sub_100063CB4()
{
  uint64_t v0;

  return swift_unknownObjectWeakDestroy(v0 + qword_100116DF0);
}

id sub_100063CC4()
{
  return sub_100063CD4(0, (uint64_t (*)(void))type metadata accessor for FollowupDataSource);
}

id sub_100063CD4(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_100063D04(uint64_t a1)
{
  return swift_unknownObjectWeakDestroy(a1 + qword_100116DF0);
}

uint64_t sub_100063D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v6;

  v6 = objc_allocWithZone((Class)type metadata accessor for FollowupDataSource(0));
  v6[qword_100116DE8] = 0;
  swift_unknownObjectWeakInit(&v6[qword_100116DF0], 0);
  return UITableViewDiffableDataSource.init(tableView:cellProvider:)(a1, a2, a3);
}

uint64_t sub_100063D84(char a1)
{
  return *(_QWORD *)&aNotSet[8 * a1];
}

BOOL sub_100063DA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100063DB8()
{
  char *v0;

  return sub_100063D84(*v0);
}

uint64_t sub_100063DC0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState) != result)
  {
    v3 = static os_log_type_t.default.getter(result);
    v4 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v5 = swift_allocObject(v4, 72, 7);
    v6 = 8 * *(char *)(v1 + v2);
    v7 = *(_QWORD *)&aNotSet[v6];
    *(_OWORD *)(v5 + 16) = xmmword_1000CC730;
    v8 = *(_QWORD *)&aReadyTosubmitt[v6 + 16];
    *(_QWORD *)(v5 + 56) = &type metadata for String;
    *(_QWORD *)(v5 + 64) = sub_100051284();
    *(_QWORD *)(v5 + 32) = v7;
    *(_QWORD *)(v5 + 40) = v8;
    os_log(_:dso:log:_:_:)(v3, &_mh_execute_header);
    swift_bridgeObjectRelease(v5);
    __asm { BR              X10 }
  }
  return result;
}

void sub_100063ECC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;

  objc_msgSend(v20, "setModalInPresentation:", 0);
  v21 = *(void **)&v20[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton];
  if (!v21)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_msgSend(v21, "setEnabled:", 0);
  v22 = *(void **)&v20[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem];
  if (!v22)
  {
LABEL_6:
    __break(1u);
    JUMPOUT(0x100064358);
  }
  objc_msgSend(v22, "setEnabled:", 0);
  v23 = objc_msgSend(v20, "navigationItem");
  v24 = objc_msgSend(v23, "leftBarButtonItem");

  if (!v24)
    JUMPOUT(0x100063DF0);
  objc_msgSend(v24, "setEnabled:", 1);

}

uint64_t sub_100064390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for CharacterSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState;
  result = *(unsigned __int8 *)(v0
                              + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState);
  if ((_DWORD)result != 3)
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting) & 1) != 0)
    {
      *(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState) = 5;
      return sub_100063DC0(result);
    }
    else
    {
      v8 = (void *)sub_10006B024();
      sub_100088A10((uint64_t)v8, v9);
      v11 = v10;
      v13 = v12;

      v23 = v11;
      v24 = v13;
      v14 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "whitespaceAndNewlineCharacterSet");
      static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

      v15 = sub_10004F5C4();
      v16 = StringProtocol.trimmingCharacters(in:)(v5, &type metadata for String, v15);
      v18 = v17;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease(v24);
      v19 = String.count.getter(v16);
      swift_bridgeObjectRelease(v18);
      if (sub_10006D3B8(v19 != 0))
      {
        v20 = *(unsigned __int8 *)(v1 + v6);
        v21 = 4;
      }
      else if (v19
             || (v22 = *(void **)(v1
                                + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController)) != 0
             && (objc_msgSend(v22, "hasFilePromises") & 1) != 0
             || *(_BYTE *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice) != 2)
      {
        v20 = *(unsigned __int8 *)(v1 + v6);
        v21 = 2;
      }
      else
      {
        v20 = *(unsigned __int8 *)(v1 + v6);
        v21 = 1;
      }
      *(_BYTE *)(v1 + v6) = v21;
      return sub_100063DC0(v20);
    }
  }
  return result;
}

uint64_t sub_100064568(uint64_t result)
{
  uint64_t v1;
  int v2;
  void *v3;

  v2 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions) = result;
  if (v2 != (result & 1))
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    if (v3)
      objc_msgSend(v3, "collectsFiles");
    if (*(_BYTE *)(v1
                  + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce) == 1)
      sub_100068200();
    return sub_100064390();
  }
  return result;
}

void sub_100064628(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  unsigned int v14;
  id v15;
  id v16;

  v3 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
  if (!v4 || !a1)
    goto LABEL_6;
  v16 = *(id *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
  v15 = a1;
  v5 = v16;
  v14 = static os_log_type_t.fault.getter();
  v6 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v7 = swift_allocObject(v6, 112, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1000CC8F0;
  v8 = objc_msgSend(v5, "ID");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "integerValue");

    *(_QWORD *)(v7 + 56) = &type metadata for Int;
    *(_QWORD *)(v7 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v7 + 32) = v10;
    v11 = objc_msgSend(v15, "ID");
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v11, "integerValue");

      *(_QWORD *)(v7 + 96) = &type metadata for Int;
      *(_QWORD *)(v7 + 104) = &protocol witness table for Int;
      *(_QWORD *)(v7 + 72) = v13;
      os_log(_:dso:log:_:_:)(v14, &_mh_execute_header);

      swift_bridgeObjectRelease(v7);
      v4 = *(void **)(v1 + v3);
LABEL_6:
      *(_QWORD *)(v1 + v3) = a1;

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_100064810()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  objc_class *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  objc_super v13;

  v1 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController);
  }
  else
  {
    v4 = (objc_class *)type metadata accessor for FBAAddAttachmentsController(0);
    v5 = (char *)objc_allocWithZone(v4);
    v6 = &v5[OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController_attachmentDelegate];
    swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController_attachmentDelegate], 0);
    v7 = &v5[OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController____lazy_storage___temporaryDirectory];
    v8 = sub_10004BB9C(&qword_100116790);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    swift_unknownObjectWeakAssign(v6, v0);
    v13.receiver = v5;
    v13.super_class = v4;
    v9 = objc_msgSendSuper2(&v13, "init");
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

void sub_1000648FC()
{
  qword_100116D60 = 1852399949;
  *(_QWORD *)algn_100116D68 = 0xE400000000000000;
}

id sub_100064918()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;

  v1 = (id *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___displayText);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___displayText
                 + 8);
  if (v2)
  {
    v3 = *v1;
  }
  else
  {
    v3 = sub_100064990(v0);
    v4 = v1[1];
    *v1 = v3;
    v1[1] = v5;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

id sub_100064990(uint64_t a1)
{
  id v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t countAndFlagsBits;
  void *v5;
  id v6;
  id result;
  void *v8;
  uint64_t v9;
  Swift::String v10;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited) == 1)
  {
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10._object = (void *)0xE000000000000000;
    v2._object = (void *)0x80000001000D70B0;
    v2._countAndFlagsBits = 0xD00000000000001BLL;
    v3._countAndFlagsBits = 0;
    v3._object = (void *)0xE000000000000000;
    v10._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v10)._countAndFlagsBits;

    return (id)countAndFlagsBits;
  }
  v5 = *(void **)(a1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
  if (!v5)
  {
    v9 = static os_log_type_t.error.getter();
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header);
    return 0;
  }
  v6 = v5;
  result = objc_msgSend(v6, "displayText");
  if (result)
  {
    v8 = result;
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(result);

    return (id)countAndFlagsBits;
  }
  __break(1u);
  return result;
}

unint64_t sub_100064AD4()
{
  uint64_t v0;
  int v1;
  Swift::String v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice);
  if (v1 == 2)
  {
    v2._countAndFlagsBits = 63;
    v2._object = (void *)0xE100000000000000;
    String.append(_:)(v2);
  }
  else
  {
    if ((v1 & 1) != 0)
      v3 = 1702195828;
    else
      v3 = 0x65736C6166;
    if ((v1 & 1) != 0)
      v4 = 0xE400000000000000;
    else
      v4 = 0xE500000000000000;
    v5 = v4;
    String.append(_:)(*(Swift::String *)&v3);
    swift_bridgeObjectRelease(v4);
  }
  return 0xD000000000000015;
}

void sub_100064B8C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  objc_msgSendSuper2(&v6, "awakeFromNib");
  v1 = objc_msgSend(v0, "navigationController");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "presentationController");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "setDelegate:", v0);

    }
  }
  else
  {
    v5 = objc_msgSend(v0, "presentationController");
    if (!v5)
      return;
    v2 = v5;
    objc_msgSend(v5, "setDelegate:", v0);
  }

}

void sub_100064C80()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v19[5];
  uint64_t v20;
  objc_super v21;

  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  objc_msgSendSuper2(&v21, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (!v1)
    goto LABEL_6;
  v2 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
  if (!v2)
    goto LABEL_6;
  v3 = v1;
  v4 = v2;
  v5 = static os_log_type_t.info.getter();
  v6 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v7 = swift_allocObject(v6, 112, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1000CC8F0;
  v8 = objc_msgSend(v3, "ID");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "unsignedLongLongValue");

    *(_QWORD *)(v7 + 56) = &type metadata for UInt64;
    *(_QWORD *)(v7 + 64) = &protocol witness table for UInt64;
    *(_QWORD *)(v7 + 32) = v10;
    v11 = objc_msgSend(v4, "ID");
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v11, "unsignedIntegerValue");

      *(_QWORD *)(v7 + 96) = &type metadata for UInt;
      *(_QWORD *)(v7 + 104) = &protocol witness table for UInt;
      *(_QWORD *)(v7 + 72) = v13;
      os_log(_:dso:log:_:_:)(v5, &_mh_execute_header);

      swift_bridgeObjectRelease(v7);
LABEL_6:
      sub_10006B354();
      sub_10006A4AC();
      sub_10006BB78();
      sub_100064390();
      sub_100069BF0(0, 0, 0, 0, 0, 0);
      v14 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      v15 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
      v16 = swift_allocObject(&unk_1000E9098, 24, 7);
      swift_unknownObjectWeakInit(v16 + 16, v0);
      v19[4] = sub_10007009C;
      v20 = v16;
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 1107296256;
      v19[2] = sub_10008E628;
      v19[3] = &unk_1000E97E0;
      v17 = _Block_copy(v19);
      swift_release(v20);
      v18 = objc_msgSend(v14, "addObserverForName:object:queue:usingBlock:", UIContentSizeCategoryDidChangeNotification, 0, v15, v17);
      _Block_release(v17);
      swift_unknownObjectRelease(v18);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100064F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100068200();

  }
}

void sub_100064FD0(char a1)
{
  char *v1;
  id v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  v3 = objc_msgSendSuper2(&v4, "viewDidAppear:", a1 & 1);
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_didAppear] = 1;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController]
    && *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup])
  {
    sub_10006B85C((uint64_t)v3);
  }
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem])
    objc_msgSend(v1, "updateRightBarButtonItemVisibility:");
  else
    __break(1u);
}

id sub_1000650A8()
{
  void *v0;
  uint64_t v1;
  id v2;
  objc_super v4;

  v1 = static os_log_type_t.info.getter();
  os_log(_:dso:log:_:_:)(v1, &_mh_execute_header);
  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v2, "removeObserver:", v0);

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  return objc_msgSendSuper2(&v4, "dealloc");
}

void sub_1000652E8(void *a1, double a2, double a3)
{
  void *v3;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  _QWORD v13[5];
  uint64_t v14;
  objc_super v15;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  objc_msgSendSuper2(&v15, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v7 = objc_msgSend(v3, "tableView");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "setContentOffset:animated:", 0, 0.0, -300.0);

    v9 = swift_allocObject(&unk_1000E97A0, 24, 7);
    *(_QWORD *)(v9 + 16) = v3;
    v13[4] = sub_10007007C;
    v14 = v9;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_100065444;
    v13[3] = &unk_1000E97B8;
    v10 = _Block_copy(v13);
    v11 = v14;
    v12 = v3;
    swift_release(v11);
    objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v10);
    _Block_release(v10);
    if (*(_QWORD *)&v12[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem])
    {
      objc_msgSend(v12, "updateRightBarButtonItemVisibility:");
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100065444(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

uint64_t sub_1000654F8(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  Swift::String v36;
  Swift::String v37;

  v2 = objc_msgSend(a1, "identifier");
  if (!v2)
    goto LABEL_10;
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v6 = v5;

  if (v4 == 0xD000000000000024 && v6 == 0x80000001000D7250)
  {
    swift_bridgeObjectRelease(0x80000001000D7250);
    goto LABEL_6;
  }
  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, 0xD000000000000024, 0x80000001000D7250, 0);
  v2 = (id)swift_bridgeObjectRelease(v6);
  if ((v7 & 1) == 0)
  {
LABEL_10:
    v21 = static os_log_type_t.error.getter(v2);
    v22 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1000CC730;
    v24 = objc_msgSend(a1, "identifier");
    if (v24)
    {
      v25 = v24;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v28 = v27;

    }
    else
    {
      v26 = 0;
      v28 = 0;
    }
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    *(_QWORD *)(v23 + 64) = sub_100051284();
    if (v28)
      v29 = v26;
    else
      v29 = 0;
    v30 = 0xE000000000000000;
    if (v28)
      v30 = v28;
    *(_QWORD *)(v23 + 32) = v29;
    *(_QWORD *)(v23 + 40) = v30;
    os_log(_:dso:log:_:_:)(v21, &_mh_execute_header);
    return swift_bridgeObjectRelease(v23);
  }
LABEL_6:
  v8 = objc_msgSend(a1, "destinationViewController");
  v9 = objc_opt_self(UINavigationController);
  v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
  if (v10)
  {
    v11 = objc_msgSend(v10, "topViewController");
    if (v11)
    {
      v12 = v11;
      v13 = type metadata accessor for FBAFFUDisplayTextViewController();
      v14 = swift_dynamicCastClass(v12, v13);
      if (v14)
      {
        v15 = v14;
        v16 = sub_100064918();
        v17 = (_QWORD *)(v15 + OBJC_IVAR____TtC18Feedback_Assistant31FBAFFUDisplayTextViewController_displayText);
        v18 = *(_QWORD *)(v15 + OBJC_IVAR____TtC18Feedback_Assistant31FBAFFUDisplayTextViewController_displayText + 8);
        *v17 = v16;
        v17[1] = v19;

        return swift_bridgeObjectRelease(v18);
      }

    }
  }

  v31 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(47);
  v32 = objc_msgSend(a1, "identifier");
  if (v32)
  {
    v33 = v32;
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v31 = v35;

  }
  else
  {
    v34 = 0;
  }
  v36._countAndFlagsBits = v34;
  v36._object = v31;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v31);
  v37._countAndFlagsBits = 0xD00000000000002DLL;
  v37._object = (void *)0x80000001000D72E0;
  String.append(_:)(v37);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 310, 0);
  __break(1u);
  return result;
}

void sub_100065874()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  int v5;
  uint64_t v6;
  char **v7;
  unint64_t *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unint64_t *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  char *v37;
  __int128 v38;
  void *v39;
  void *v40;

  v1 = (char *)sub_10006B024();
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v2);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_19;
  }
  v4 = (void *)Strong;
  v5 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing);

  v7 = &selRef_sortDescriptorWithKey_ascending_;
  v8 = &qword_100116000;
  if (v5 != 1)
  {
LABEL_11:
    v25 = static os_log_type_t.default.getter(v6);
    v26 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v27 = swift_allocObject(v26, 112, 7);
    *(_OWORD *)(v27 + 16) = xmmword_1000CC8F0;
    v28 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
    if (v28)
    {
      v29 = v8;
      v30 = objc_msgSend(v28, "ID");
      if (!v30)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      v31 = v30;
      v32 = objc_msgSend(v30, v7[155]);

      v40 = &protocol witness table for UInt;
      v39 = &type metadata for UInt;
      *(_QWORD *)&v38 = v32;
      sub_10006FDEC(&v38, v27 + 32);
      v8 = v29;
    }
    else
    {
      *(_QWORD *)(v27 + 56) = &type metadata for Int;
      *(_QWORD *)(v27 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v27 + 32) = 0;
    }
    v33 = *(void **)&v0[v8[465]];
    if (v33)
    {
      v34 = objc_msgSend(v33, "ID");
      if (v34)
      {
        v35 = v34;
        v36 = objc_msgSend(v34, v7[155]);

        *(_QWORD *)(v27 + 96) = &type metadata for UInt;
        *(_QWORD *)(v27 + 104) = &protocol witness table for UInt;
        *(_QWORD *)(v27 + 72) = v36;
        os_log(_:dso:log:_:_:)(v25, &_mh_execute_header);
        swift_bridgeObjectRelease(v27);
        v37 = v0;
        sub_10006E4B8(v37, v37);

        return;
      }
      goto LABEL_20;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = (char *)sub_10006B024();
  v11 = (void *)swift_unknownObjectWeakLoadStrong(&v9[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v10);
  if (!v11)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = v11;
  objc_msgSend(v11, "resignFirstResponder");

  v14 = static os_log_type_t.default.getter(v13);
  v15 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v16 = swift_allocObject(v15, 112, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1000CC8F0;
  v17 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (!v17)
  {
    *(_QWORD *)(v16 + 56) = &type metadata for Int;
    *(_QWORD *)(v16 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v16 + 32) = 0;
    goto LABEL_8;
  }
  v18 = objc_msgSend(v17, "ID");
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v18, "unsignedIntegerValue");

    v40 = &protocol witness table for UInt;
    v39 = &type metadata for UInt;
    *(_QWORD *)&v38 = v20;
    sub_10006FDEC(&v38, v16 + 32);
    v8 = &qword_100116000;
LABEL_8:
    v21 = *(void **)&v0[v8[465]];
    if (!v21)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v22 = objc_msgSend(v21, "ID");
    if (!v22)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v23 = v22;
    v7 = &selRef_sortDescriptorWithKey_ascending_;
    v24 = objc_msgSend(v22, "unsignedIntegerValue");

    *(_QWORD *)(v16 + 96) = &type metadata for UInt;
    *(_QWORD *)(v16 + 104) = &protocol witness table for UInt;
    *(_QWORD *)(v16 + 72) = v24;
    os_log(_:dso:log:_:_:)(v14, &_mh_execute_header);
    v6 = swift_bridgeObjectRelease(v16);
    goto LABEL_11;
  }
LABEL_25:
  __break(1u);
}

void sub_100065C00(char a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void (**v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  char *v18;
  id v19;
  char *v20;
  _QWORD aBlock[5];
  _QWORD *v22;

  a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 1;
  sub_100064390();
  v4 = swift_allocObject(&unk_1000E9700, 25, 7);
  *(_QWORD *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 24) = a1;
  if (*(_QWORD *)&a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup])
  {
    v5 = a2;
    sub_10006B85C((uint64_t)v5);
    sub_1000660A4(a1 & 1);

    swift_release(v4);
    return;
  }
  if (a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] == 1)
  {
    v20 = a2;
    v6 = static os_log_type_t.default.getter(v20);
    os_log(_:dso:log:_:_:)(v6, &_mh_execute_header);
    v7 = (void (**)(uint64_t))&v20[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
    v8 = *(_QWORD *)&v20[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
    v9 = *(_QWORD *)&v20[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler
                       + 8];
    *v7 = sub_10007000C;
    v7[1] = (void (*)(uint64_t))v4;
    sub_10005565C(v8, v9);

    return;
  }
  if (a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] == 1)
  {
    a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] = 1;
    v10 = (void *)objc_opt_self(FBKData);
    v11 = a2;
    v12 = objc_msgSend(v10, "sharedInstance");
    v13 = *(void **)&v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
    if (v13)
    {
      v14 = v12;
      v15 = (_QWORD *)swift_allocObject(&unk_1000E9728, 40, 7);
      v15[2] = v11;
      v15[3] = sub_10007000C;
      v15[4] = v4;
      aBlock[4] = sub_1000701A0;
      v22 = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10005F158;
      aBlock[3] = &unk_1000E9740;
      v16 = _Block_copy(aBlock);
      v17 = v22;
      v18 = v11;
      swift_retain(v4);
      v19 = v13;
      swift_release(v17);
      objc_msgSend(v14, "createUnsolicitedFeedbackFollowupForItem:completion:", v19, v16);
      _Block_release(v16);

      swift_release(v4);
      return;
    }

    __break(1u);
  }
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000022, 0x80000001000D6740, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 362, 0);
  __break(1u);
}

void sub_100065EF4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t *v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  *(_BYTE *)(a3 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup) = 0;
  if (a1 && !a2)
  {
    v14 = a1;
    sub_100064628(a1);
    a4();
    v8 = (uint64_t *)(a3
                   + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler);
    v9 = *(void (**)(uint64_t))(a3
                                        + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler);
    if (v9)
    {
      v10 = v8[1];
      v11 = swift_retain(v10);
      v9(v11);
      v12 = *v8;
      v13 = v8[1];
      *v8 = 0;
      v8[1] = 0;
      sub_10005565C(v12, v13);

      sub_10005565C((uint64_t)v9, v10);
    }
    else
    {

    }
  }
  else
  {
    v5 = static os_log_type_t.error.getter(a1);
    os_log(_:dso:log:_:_:)(v5, &_mh_execute_header);
    if (*(_BYTE *)(a3 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting) == 1)
      sub_100066AA4();
  }
}

uint64_t sub_10006601C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  void *v6;

  v5 = static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)(v5, &_mh_execute_header);
  v6 = *(void **)(a2 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
  if (v6)
    objc_msgSend(v6, "gatherAllMissingRequirementsWithAnswers:", 0);
  return a3(0);
}

void sub_1000660A4(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  Swift::String v19;
  void *object;
  Swift::String v21;
  void *v22;
  Class isa;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  uint64_t v34;
  NSString v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  NSDictionary v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  id v54;
  uint64_t v55;
  _QWORD v57[3];
  __int128 aBlock;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;

  v2 = v1;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 1;
  v3 = sub_100064390();
  v4 = static os_log_type_t.default.getter(v3);
  v5 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v6 = swift_allocObject(v5, 152, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1000CCB20;
  v55 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup;
  v7 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (!v7)
  {
    *(_QWORD *)(v6 + 56) = &type metadata for Int;
    *(_QWORD *)(v6 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v6 + 32) = 0;
LABEL_5:
    v11 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem;
    v12 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
    if (v12)
    {
      v13 = objc_msgSend(v12, "ID");
      if (v13)
      {
        v14 = v13;
        v15 = objc_msgSend(v13, "unsignedIntegerValue");

        *(_QWORD *)(v6 + 96) = &type metadata for UInt;
        *(_QWORD *)(v6 + 104) = &protocol witness table for UInt;
        *(_QWORD *)(v6 + 72) = v15;
        *(_QWORD *)(v6 + 136) = &type metadata for Bool;
        *(_QWORD *)(v6 + 144) = &protocol witness table for Bool;
        *(_BYTE *)(v6 + 112) = a1 & 1;
        os_log(_:dso:log:_:_:)(v4, &_mh_execute_header);
        swift_bridgeObjectRelease(v6);
        v16 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        *(_QWORD *)&aBlock = 0;
        *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(31);
        swift_bridgeObjectRelease(*((_QWORD *)&aBlock + 1));
        strcpy((char *)&aBlock, "FFU-sub:item");
        BYTE13(aBlock) = 0;
        HIWORD(aBlock) = -5120;
        v17 = *(void **)&v2[v11];
        if (v17)
        {
          v57[0] = objc_msgSend(v17, "ID");
          v18 = sub_10004BB9C(&qword_100117018);
          v19._countAndFlagsBits = String.init<A>(describing:)(v57, v18);
          object = v19._object;
          String.append(_:)(v19);
          swift_bridgeObjectRelease(object);
          v21._countAndFlagsBits = 45;
          v21._object = (void *)0xE100000000000000;
          String.append(_:)(v21);
          v22 = *(void **)&v2[v55];
          if (!v22 || (isa = (Class)objc_msgSend(v22, "ID")) == 0)
          {
            sub_100053458(0, &qword_1001169A0, NSNumber_ptr);
            isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
          }
          v24 = -[objc_class description](isa, "description");
          v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
          v27 = v26;

          v28._countAndFlagsBits = v25;
          v28._object = v27;
          String.append(_:)(v28);

          swift_bridgeObjectRelease(v27);
          v29._countAndFlagsBits = 0x63696C6F736E752DLL;
          v29._object = (void *)0xEC00000064657469;
          String.append(_:)(v29);
          if (v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited])
            v30 = 1702195828;
          else
            v30 = 0x65736C6166;
          if (v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited])
            v31 = 0xE400000000000000;
          else
            v31 = 0xE500000000000000;
          v32 = v31;
          String.append(_:)(*(Swift::String *)&v30);
          swift_bridgeObjectRelease(v31);
          v33 = aBlock;
          v34 = swift_allocObject(&unk_1000E9520, 32, 7);
          *(_QWORD *)(v34 + 16) = 0;
          *(_BYTE *)(v34 + 24) = 1;
          v35 = String._bridgeToObjectiveC()();
          v36 = swift_allocObject(&unk_1000E9548, 56, 7);
          *(_QWORD *)(v36 + 16) = v2;
          *(_OWORD *)(v36 + 24) = v33;
          *(_QWORD *)(v36 + 40) = v16;
          *(_QWORD *)(v36 + 48) = v34;
          v61 = sub_10006FEE0;
          v62 = v36;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v59 = sub_10008F5C0;
          v60 = &unk_1000E9560;
          v37 = _Block_copy(&aBlock);
          v38 = v62;
          v39 = v2;
          v40 = v16;
          swift_retain(v34);
          swift_release(v38);
          v41 = objc_msgSend(v40, "beginBackgroundTaskWithName:expirationHandler:", v35, v37);
          _Block_release(v37);

          swift_beginAccess(v34 + 16, v57, 1, 0);
          *(_QWORD *)(v34 + 16) = v41;
          *(_BYTE *)(v34 + 24) = 0;
          v42 = sub_100066E3C();
          v43 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
          v44 = *(void **)&v2[v55];
          if (v44)
          {
            v45 = v43;
            v46 = v44;
            v47 = sub_1000793F0((uint64_t)v42);
            swift_bridgeObjectRelease(v42);
            v48.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v47);
            v49 = *(void **)&v39[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController];
            if (v49)
            {
              v50 = swift_allocObject(&unk_1000E9598, 24, 7);
              *(_QWORD *)(v50 + 16) = v39;
              v61 = sub_10006FF14;
              v62 = v50;
              *(_QWORD *)&aBlock = _NSConcreteStackBlock;
              *((_QWORD *)&aBlock + 1) = 1107296256;
              v59 = sub_100057D74;
              v60 = &unk_1000E95B0;
              v51 = _Block_copy(&aBlock);
              v52 = v62;
              v53 = v39;
              v54 = v49;
              swift_release(v52);
              objc_msgSend(v45, "beginSubmissionForFollowup:withResponses:didOptOut:withCollector:completion:", v46, v48.super.isa, a1 & 1, v54, v51);
              _Block_release(v51);

              swift_release(v34);
              return;
            }
            goto LABEL_24;
          }
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  v8 = objc_msgSend(v7, "ID");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "unsignedIntegerValue");

    v60 = &type metadata for UInt;
    v61 = &protocol witness table for UInt;
    *(_QWORD *)&aBlock = v10;
    sub_10006FDEC(&aBlock, v6 + 32);
    goto LABEL_5;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100066688(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _BYTE v15[24];

  v9 = a5 + 16;
  v10 = static os_log_type_t.error.getter(a1);
  v11 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1000CC730;
  *(_QWORD *)(v12 + 56) = &type metadata for String;
  *(_QWORD *)(v12 + 64) = sub_100051284();
  *(_QWORD *)(v12 + 32) = a2;
  *(_QWORD *)(v12 + 40) = a3;
  swift_bridgeObjectRetain(a3);
  os_log(_:dso:log:_:_:)(v10, &_mh_execute_header);
  swift_bridgeObjectRelease(v12);
  result = swift_beginAccess(v9, v15, 0, 0);
  if ((*(_BYTE *)(a5 + 24) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(a4, "endBackgroundTask:", *(_QWORD *)(a5 + 16));
    result = swift_beginAccess(v9, &v14, 1, 0);
    *(_QWORD *)(a5 + 16) = UIBackgroundTaskInvalid;
    *(_BYTE *)(a5 + 24) = 0;
  }
  return result;
}

id sub_1000667C0(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;

  if (a1)
  {
    v4 = swift_errorRetain(a1);
    v5 = static os_log_type_t.error.getter(v4);
    v6 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v7 = swift_allocObject(v6, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1000CC730;
    v29 = a1;
    swift_errorRetain(a1);
    v8 = sub_10004BB9C((uint64_t *)&unk_100117020);
    v9 = String.init<A>(describing:)(&v29, v8);
    v11 = v10;
    *(_QWORD *)(v7 + 56) = &type metadata for String;
    *(_QWORD *)(v7 + 64) = sub_100051284();
    *(_QWORD *)(v7 + 32) = v9;
    *(_QWORD *)(v7 + 40) = v11;
    os_log(_:dso:log:_:_:)(v5, &_mh_execute_header);
    swift_bridgeObjectRelease(v7);
    sub_100066AA4();
    return (id)swift_errorRelease(a1);
  }
  v13 = static os_log_type_t.default.getter(0);
  v14 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v15 = swift_allocObject(v14, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1000CC730;
  v16 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup;
  result = *(id *)&a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  result = objc_msgSend(result, "ID");
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v17 = result;
  v18 = objc_msgSend(result, "integerValue");

  *(_QWORD *)(v15 + 56) = &type metadata for Int;
  *(_QWORD *)(v15 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v15 + 32) = v18;
  os_log(_:dso:log:_:_:)(v13, &_mh_execute_header);
  swift_bridgeObjectRelease(v15);
  v19 = *(void **)&a2[v16];
  if (v19)
  {
    v20 = (void *)objc_opt_self(FBKEnhancedLoggingPersistence);
    v21 = v19;
    v22 = objc_msgSend(v20, "sharedInstance");
    v23 = objc_msgSend(v22, "sessions");

    v24 = sub_100053458(0, (unint64_t *)&unk_100116F80, FBKEnhancedLoggingSessionInformation_ptr);
    v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

    v26 = v21;
    v27 = sub_10006E2EC(v25, v26);
    swift_bridgeObjectRelease(v25);

    if (v27)
    {
      v28 = objc_msgSend(v20, "sharedInstance");
      objc_msgSend(v28, "deleteSession:", v27);

    }
  }
  return objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_100066AA4()
{
  void *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  NSString v10;
  NSString v11;
  id v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  uint64_t v17;
  NSString v18;
  void *v19;
  id v20;
  _QWORD aBlock[5];
  uint64_t v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v23._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001000D6DE0;
  v3._countAndFlagsBits = 0xD000000000000015;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v23)._object;

  v6 = objc_msgSend(v1, "mainBundle");
  v7._countAndFlagsBits = 0xD000000000000017;
  v24._object = (void *)0xE000000000000000;
  v7._object = (void *)0x80000001000D6E00;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v24._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v24)._object;

  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v12 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v10, v11, 1);

  v13 = objc_msgSend(v1, "mainBundle");
  v25._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 19279;
  v14._object = (void *)0xE200000000000000;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v25)._object;

  v17 = swift_allocObject(&unk_1000E9098, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v0);
  swift_retain(v17);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  aBlock[4] = sub_10006FE8C;
  v22 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004B098;
  aBlock[3] = &unk_1000E94E8;
  v19 = _Block_copy(aBlock);
  swift_release(v22);
  v20 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v18, 0, v19);
  _Block_release(v19);
  swift_release(v17);

  objc_msgSend(v12, "addAction:", v20);
  objc_msgSend(v0, "presentViewController:animated:completion:", v12, 1, 0);

}

void sub_100066D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    v6 = static os_log_type_t.default.getter(Strong);
    v7 = *(id *)&v5[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log];
    os_log(_:dso:log:_:_:)(v6, &_mh_execute_header);

    v5[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_submissionFailed] = 1;
    v8 = v5[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState];
    v5[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] = 4;
    sub_100063DC0(v8);

  }
}

void *sub_100066E3C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  int v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v1 = v0;
  if ((sub_1000685A8() & 1) != 0)
    v2 = &FBKFeedbackFollowupResponseRoleComments;
  else
    v2 = &FBKFeedbackFollowupResponseRoleAdditionalInfo;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v2);
  v5 = v4;
  v6 = (void *)sub_10006B024();
  sub_100088A10((uint64_t)v6, v7);
  v9 = v8;
  v11 = v10;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10006DF08(v9, v11, v3, v5, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(0x8000000000000000);
  v13 = *(unsigned __int8 *)(v1
                           + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice);
  if (v13 != 2
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited) & 1) == 0)
  {
    v14 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    if (v14)
    {
      v15 = objc_msgSend(v14, "type");
      if (v15 == (id)7 || v15 == (id)4)
      {
        if ((v13 & 1) != 0)
          v17 = 1702195828;
        else
          v17 = 0x65736C6166;
        if ((v13 & 1) != 0)
          v18 = 0xE400000000000000;
        else
          v18 = 0xE500000000000000;
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKFeedbackFollowupResponseRoleIsValidated);
        v21 = v20;
        v22 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
        sub_10006DF08(v17, v18, v19, v21, v22);
        swift_bridgeObjectRelease(v21);
        swift_bridgeObjectRelease(0x8000000000000000);
      }
    }
  }
  return &_swiftEmptyDictionarySingleton;
}

void sub_100066FC8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  void *v16;
  int v17;
  char *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  __int128 v24;
  void *v25;
  void *v26;

  v2 = static os_log_type_t.default.getter(a1);
  v3 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v4 = swift_allocObject(v3, 112, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1000CC8F0;
  v5 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (v5)
  {
    v6 = objc_msgSend(v5, "ID");
    if (!v6)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    v7 = v6;
    v8 = objc_msgSend(v6, "unsignedIntegerValue");

    v26 = &protocol witness table for UInt;
    v25 = &type metadata for UInt;
    *(_QWORD *)&v24 = v8;
    sub_10006FDEC(&v24, v4 + 32);
  }
  else
  {
    *(_QWORD *)(v4 + 56) = &type metadata for Int;
    *(_QWORD *)(v4 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v4 + 32) = 0;
  }
  v9 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
  if (!v9)
  {
    __break(1u);
    goto LABEL_17;
  }
  v10 = objc_msgSend(v9, "ID");
  if (!v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "unsignedIntegerValue");

  *(_QWORD *)(v4 + 96) = &type metadata for UInt;
  *(_QWORD *)(v4 + 104) = &protocol witness table for UInt;
  *(_QWORD *)(v4 + 72) = v12;
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header);
  swift_bridgeObjectRelease(v4);
  if (v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] == 5)
    return;
  v13 = (char *)sub_10006B024();
  Strong = swift_unknownObjectWeakLoadStrong(&v13[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v14);
  if (!Strong)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  v16 = (void *)Strong;
  v17 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing);

  if (v17 == 1)
  {
    v18 = (char *)sub_10006B024();
    v20 = (void *)swift_unknownObjectWeakLoadStrong(&v18[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v19);
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, "resignFirstResponder");

      return;
    }
    goto LABEL_20;
  }
  v22 = objc_msgSend(v1, "isModalInPresentation");
  if ((_DWORD)v22)
  {
    v23 = sub_100067750();
    objc_msgSend(v1, "presentViewController:animated:completion:", v23, 1, 0);

  }
  else
  {
    sub_100067258((uint64_t)v22);
  }
}

void sub_100067258(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char **v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  _BYTE *v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  _BYTE *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  _QWORD *v30;
  void *v31;
  _QWORD *v32;
  char **v33;
  id v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  id v38;
  _BYTE *v39;
  id v40;
  _BYTE *v41;
  id v42;
  __int128 v43;
  void *v44;
  void *v45;
  void *v46;
  _QWORD *v47;

  v2 = static os_log_type_t.default.getter(a1);
  v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log);
  v4 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v5 = swift_allocObject(v4, 112, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1000CC8F0;
  v6 = (char *)OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup;
  v7 = *(void **)((char *)v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
  v8 = &off_10010A000;
  if (v7)
  {
    v9 = objc_msgSend(v7, "ID");
    if (!v9)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    v10 = v9;
    v11 = objc_msgSend(v9, "unsignedIntegerValue");

    v46 = &protocol witness table for UInt;
    v45 = &type metadata for UInt;
    *(_QWORD *)&v43 = v11;
    sub_10006FDEC(&v43, v5 + 32);
  }
  else
  {
    *(_QWORD *)(v5 + 56) = &type metadata for Int;
    *(_QWORD *)(v5 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v5 + 32) = 0;
  }
  v12 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem;
  v13 = *(void **)((char *)v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem);
  if (!v13)
  {
    __break(1u);
    goto LABEL_14;
  }
  v14 = objc_msgSend(v13, "ID");
  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "unsignedIntegerValue");

  *(_QWORD *)(v5 + 96) = &type metadata for UInt;
  *(_QWORD *)(v5 + 104) = &protocol witness table for UInt;
  *(_QWORD *)(v5 + 72) = v16;
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header);
  swift_bridgeObjectRelease(v5);
  v17 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState);
  *((_BYTE *)v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState) = 3;
  sub_100063DC0(v17);
  v18 = *(void **)((char *)v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
  v19 = v1;
  v20 = v3;
  objc_msgSend(v18, "abortAllSessions");
  v21 = swift_allocObject(&unk_1000E93E0, 32, 7);
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = v20;
  if (v19[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] != 1
    || (v22 = *(void **)&v6[(_QWORD)v1]) == 0)
  {
    v35 = swift_allocObject(&unk_1000E9408, 24, 7);
    *(_QWORD *)(v35 + 16) = v20;
    v46 = sub_10006FE38;
    v47 = (_QWORD *)v35;
    *(_QWORD *)&v43 = _NSConcreteStackBlock;
    *((_QWORD *)&v43 + 1) = 1107296256;
    v44 = sub_10008F5C0;
    v45 = &unk_1000E9420;
    v36 = _Block_copy(&v43);
    v37 = v47;
    v38 = v20;
    v39 = v19;
    v40 = v38;
    v41 = v39;
    v42 = v40;
    swift_release(v37);
    objc_msgSend(v41, "dismissViewControllerAnimated:completion:", 1, v36);
    _Block_release(v36);

    swift_release(v21);
    goto LABEL_12;
  }
  v23 = (void *)objc_opt_self(FBKData);
  v24 = v19;
  v25 = v20;
  v8 = v24;
  v6 = (char *)v25;
  v26 = v22;
  v27 = objc_msgSend(v23, "sharedInstance");
  v28 = *(void **)((char *)v1 + v12);
  if (v28)
  {
    v29 = v27;
    v30 = (_QWORD *)swift_allocObject(&unk_1000E9458, 40, 7);
    v30[2] = v8;
    v30[3] = sub_10006FE30;
    v30[4] = v21;
    v46 = sub_10006FE80;
    v47 = v30;
    *(_QWORD *)&v43 = _NSConcreteStackBlock;
    *((_QWORD *)&v43 + 1) = 1107296256;
    v44 = sub_100057D74;
    v45 = &unk_1000E9470;
    v31 = _Block_copy(&v43);
    v32 = v47;
    v33 = v8;
    v34 = v28;
    swift_retain(v21);
    swift_release(v32);
    objc_msgSend(v29, "deleteUnsolicitedFollowup:withFeedbackItem:completion:", v26, v34, v31);
    _Block_release(v31);

    swift_release(v21);
LABEL_12:

    return;
  }
LABEL_16:

  __break(1u);
}

void sub_100067660(void *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v4 = swift_allocObject(&unk_1000E94A8, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v8[4] = sub_100070114;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10008F5C0;
  v8[3] = &unk_1000E94C0;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a2;
  swift_release(v6);
  objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, v5);
  _Block_release(v5);
}

id sub_100067750()
{
  void *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  NSString v6;
  id v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *v11;
  uint64_t v12;
  NSString v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  NSString v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v29;
  void **aBlock;
  uint64_t v31;
  void (*v32)(uint64_t, void *);
  void *v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3._countAndFlagsBits = 0xD000000000000017;
  v4._countAndFlagsBits = 0xD000000000000034;
  v36._countAndFlagsBits = 0xD000000000000045;
  v36._object = (void *)0x80000001000D6C50;
  v3._object = (void *)0x80000001000D6BF0;
  v4._object = (void *)0x80000001000D6C10;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v36)._object;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v7 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v6, 0);

  v8 = objc_msgSend(v1, "mainBundle");
  v37._countAndFlagsBits = 0xD00000000000004ELL;
  v37._object = (void *)0x80000001000D6CC0;
  v9._object = (void *)0x80000001000D6CA0;
  v9._countAndFlagsBits = 0xD000000000000011;
  v10._countAndFlagsBits = 0x6574656C6544;
  v10._object = (void *)0xE600000000000000;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v37)._object;

  v12 = swift_allocObject(&unk_1000E9368, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  v29 = v0;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v34 = sub_10006FDCC;
  v35 = v12;
  aBlock = _NSConcreteStackBlock;
  v31 = 1107296256;
  v32 = sub_10004B098;
  v33 = &unk_1000E9380;
  v14 = _Block_copy(&aBlock);
  swift_release(v35);
  v15 = (void *)objc_opt_self(UIAlertAction);
  v16 = objc_msgSend(v15, "actionWithTitle:style:handler:", v13, 2, v14);
  _Block_release(v14);

  objc_msgSend(v7, "addAction:", v16);
  v17 = objc_msgSend(v1, "mainBundle");
  v38._object = (void *)0xED00006E6F747475;
  v18._countAndFlagsBits = 0x4C45434E4143;
  v18._object = (void *)0xE600000000000000;
  v19._countAndFlagsBits = 0x6C65636E6143;
  v19._object = (void *)0xE600000000000000;
  v38._countAndFlagsBits = 0x62206C65636E6143;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v38)._object;

  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v34 = (void (*)(uint64_t))FBAMailboxesViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:);
  v35 = 0;
  aBlock = _NSConcreteStackBlock;
  v31 = 1107296256;
  v32 = sub_10004B098;
  v33 = &unk_1000E93A8;
  v22 = _Block_copy(&aBlock);
  swift_release(v35);
  v23 = objc_msgSend(v15, "actionWithTitle:style:handler:", v21, 1, v22);
  _Block_release(v22);

  objc_msgSend(v7, "addAction:", v23);
  v24 = objc_msgSend(v7, "presentationController");
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v29, "navigationItem");
    v27 = objc_msgSend(v26, "leftBarButtonItem");

    objc_msgSend(v25, "setBarButtonItem:", v27);
  }
  return v7;
}

uint64_t sub_100067B4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  if (a1)
  {
    v4 = static os_log_type_t.error.getter();
    a1 = os_log(_:dso:log:_:_:)(v4, &_mh_execute_header);
  }
  return a3(a1);
}

uint64_t sub_100067BB4(uint64_t result)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  NSString v8;
  id v9;
  NSString v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
  if (v2)
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource);
    if (!v3)
    {
      __break(1u);
      return result;
    }
    v4 = result;
    v5 = v2;
    v6 = v3;
    dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)(&v13, v4);

    v7 = v14;
    if (v14)
    {
      v8 = String._bridgeToObjectiveC()();
      v9 = objc_msgSend(v5, "maybeAttachmentWithIdentifier:", v8);

      if (v9)
      {
        swift_bridgeObjectRelease(v7);
        if (objc_msgSend(v5, "canDeleteAttachment:", v9))
        {

          return 1;
        }
        v11 = objc_msgSend(v5, "canCancelAttachmentCollection:", v9);
      }
      else
      {
        v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v7);
        v9 = objc_msgSend(v5, "maybeDeviceWithIdentifier:", v10);

        if (!v9)
        {

          return 0;
        }
        v11 = objc_msgSend(v5, "canRemoveDevice:", v9);
      }
      v12 = v11;

      if ((v12 & 1) != 0)
        return 1;

    }
    else
    {

    }
  }
  return 0;
}

void sub_100067DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _BYTE *v16;
  int v17;
  char v19[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (_BYTE *)Strong;
    v7 = static os_log_type_t.default.getter(Strong);
    v8 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log;
    v9 = *(void **)&v6[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log];
    v10 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v11 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1000CC730;
    *(_QWORD *)(v11 + 56) = &type metadata for Int;
    *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v11 + 32) = a1;
    v12 = v9;
    os_log(_:dso:log:_:_:)(v7, &_mh_execute_header);

    v13 = swift_bridgeObjectRelease(v11);
    if (a1)
    {
      if (a1 == 2)
      {
        v14 = v6[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice];
        v6[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice] = 1;
        if ((v14 & 1) != 0)
          goto LABEL_13;
      }
      else
      {
        if (a1 != 1)
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 653, 0);
          __break(1u);
          return;
        }
        v17 = v6[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice];
        v6[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice] = 0;
        if (v17 != 2 && (v17 & 1) == 0)
          goto LABEL_13;
      }
      sub_100069BF0(0, 0, 0, 0, 0, 0);
      sub_100064390();
    }
    else
    {
      v15 = static os_log_type_t.debug.getter(v13);
      v16 = *(id *)&v6[v8];
      os_log(_:dso:log:_:_:)(v15, &_mh_execute_header);

      v6 = v16;
    }
LABEL_13:

  }
}

uint64_t sub_100068078(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject(&unk_1000E9098, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, a1);
  swift_retain(v2);
  sub_100069BF0(1, 1, 1, 0, (uint64_t)sub_10006D838, v2);
  return swift_release_n(v2, 2);
}

void sub_1000680EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  char *v5;
  double v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  _BYTE v17[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = (char *)sub_10006B024();
    v6 = *(double *)&v4[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_keyboardHeight];
    v7 = objc_msgSend(v4, "tableView");
    if (v7)
    {
      v9 = v7;
      v10 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v8);
      if (v10)
      {
        v12 = (void *)v10;
        v13 = (void *)swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_characterCountLabel], v11);
        if (v13)
        {
          v14 = v13;
          objc_msgSend(v13, "frame");
          v16 = v15;

          objc_msgSend(v12, "scrollTableToAvoidKeyboardInTableView:keyboardHeight:withPadding:", v9, v6, v16);
          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
}

id sub_100068200()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  void *v17;
  Class isa;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  void *v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  void *v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  void *v41;
  double v42;
  double v43;
  char *v44;
  double *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004BB9C(&qword_100117008);
  v7 = *(_QWORD *)(v6 - 8);
  result = (id)__chkstk_darwin(v6);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource];
  if (!v11)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = v11;
  dispatch thunk of UITableViewDiffableDataSource.snapshot()();

  v49[0] = 0xD000000000000010;
  v49[1] = 0x80000001000CCB70;
  v13 = NSDiffableDataSourceSnapshot.indexOfItem(_:)(v49, v6);
  v15 = v14;
  v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if ((v15 & 1) != 0)
  {
    v46 = static os_log_type_t.error.getter(v16);
    return (id)os_log(_:dso:log:_:_:)(v46, &_mh_execute_header);
  }
  IndexPath.init(row:section:)(v13, 0);
  result = objc_msgSend(v1, "tableView");
  if (!result)
    goto LABEL_16;
  v17 = result;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "rectForRowAtIndexPath:", isa);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v27 = objc_msgSend(v1, "tableView");
  if (!v27)
  {
    v47 = static os_log_type_t.error.getter(0);
    os_log(_:dso:log:_:_:)(v47, &_mh_execute_header);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v28 = v27;
  result = objc_msgSend(v1, "tableView");
  if (result)
  {
    v29 = result;
    objc_msgSend(result, "convertRect:toCoordinateSpace:", v28, v20, v22, v24, v26);
    v31 = v30;
    v33 = v32;

    v34 = objc_msgSend(v1, "navigationController");
    if (v34)
    {
      v35 = v34;
      v36 = objc_msgSend(v34, "navigationBar");

      objc_msgSend(v36, "frame");
      v38 = v37;

      objc_msgSend(v28, "frame");
      v40 = v39 - v38 - (v31 + v33);
      if (v40 > 0.0)
      {
        v41 = (void *)sub_10006B024();
        objc_msgSend(v41, "frame");
        v43 = v42;

        v44 = (char *)sub_10006B024();
        v45 = (double *)&v44[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeight];
        *v45 = v40 + v43;
        *((_BYTE *)v45 + 8) = 0;
        sub_100088B20((uint64_t)v44);

      }
      sub_100069BF0(0, 0, 1, 0, 0, 0);
    }
    else
    {
      v48 = static os_log_type_t.error.getter(0);
      os_log(_:dso:log:_:_:)(v48, &_mh_execute_header);
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1000685A8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t result;

  v1 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___requiresComments;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___requiresComments);
  if (v2 != 2)
    return v2 & 1;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited) & 1) != 0)
  {
    result = 1;
  }
  else
  {
    result = *(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    if (result)
      result = (uint64_t)objc_msgSend((id)result, "requiresComments");
  }
  *(_BYTE *)(v0 + v1) = result;
  return result;
}

char *sub_100068614(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  void (**v12)(char *, id);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  Class isa;
  id v21;
  char *v22;
  id v23;
  double v24;
  double v25;
  char *result;
  char *v27;
  uint64_t v28;
  Class v29;
  char v31;
  Class v32;
  char *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  objc_class *v38;
  NSString v39;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  Swift::String v51;
  char *v52;
  id v53;
  void *v54;
  NSString v55;
  Class v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  NSString v72;
  char *v73;
  void *v74;
  NSString v75;
  id v76;
  NSString v77;
  void *v78;
  NSString v79;
  uint64_t v80;
  uint64_t v81;
  Class v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  void *v87;
  char *v88;
  NSString v89;
  uint64_t v90;
  uint64_t v91;
  Class v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  void *v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  unint64_t v103;
  id v104;
  void *v105;
  double v106;
  uint64_t v107;
  Swift::String v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void **aBlock;
  unint64_t v115;
  uint64_t (*v116)(uint64_t);
  void *v117;
  _BYTE *(*v118)();
  uint64_t v119;

  v112 = a2;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v110 = *(_QWORD *)(v8 - 8);
  v111 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)type metadata accessor for DispatchQoS(0);
  v12 = (void (**)(char *, id))*(v11 - 1);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static os_log_type_t.debug.getter(v13);
  v113 = v4;
  v17 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1000CC730;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  *(_QWORD *)(v18 + 64) = sub_100051284();
  *(_QWORD *)(v18 + 32) = a3;
  *(_QWORD *)(v18 + 40) = a4;
  swift_bridgeObjectRetain(a4);
  os_log(_:dso:log:_:_:)(v16, &_mh_execute_header);
  swift_bridgeObjectRelease(v18);
  if (qword_100116D10 == a3 && off_100116D18 == a4
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, qword_100116D10, off_100116D18, 0) & 1) != 0)
  {
    v19 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v21 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v19, isa);

    v22 = (char *)v21;
    v23 = sub_10006AE80();
    objc_msgSend(v23, "separatorInset");
    v25 = v24;

    if (v22)
    {
      objc_msgSend(v22, "setSeparatorInset:", 0.0, v25, 0.0, 0.0);

      return v22;
    }
    __break(1u);
    goto LABEL_59;
  }
  v27 = (char *)sub_10006B024();
  v28 = *(_QWORD *)&v27[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier];
  v29 = *(Class *)&v27[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier + 8];
  swift_bridgeObjectRetain(v29);

  if (v28 == a3 && v29 == (Class)a4)
  {
    swift_bridgeObjectRelease(a4);
    goto LABEL_17;
  }
  v31 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, v28, v29, 0);
  swift_bridgeObjectRelease(v29);
  if ((v31 & 1) != 0)
  {
LABEL_17:
    v33 = v113;
    v34 = sub_10006B024();
    v35 = (void *)sub_10006B024();
    v36 = *(void **)&v33[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
    v37 = v36;
    sub_1000888F4(v36);

    return (char *)v34;
  }
  v32 = (Class)0xD000000000000010;
  if (a3 == 0xD00000000000001ALL && a4 == (char *)0x80000001000CCB50
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, 0xD00000000000001ALL, 0x80000001000CCB50, 0) & 1) != 0)
  {
    return (char *)sub_10006AE80();
  }
  if (a3 == 0xD000000000000010 && a4 == (char *)0x80000001000CCB70
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, 0xD000000000000010, 0x80000001000CCB70, 0) & 1) != 0)
  {
    v38 = (objc_class *)objc_msgSend(v113, "tableView");
    if (v38)
    {
      v32 = v38;
      v39 = String._bridgeToObjectiveC()();
      v29 = IndexPath._bridgeToObjectiveC()().super.isa;
      v22 = (char *)-[objc_class dequeueReusableCellWithIdentifier:forIndexPath:](v32, "dequeueReusableCellWithIdentifier:forIndexPath:", v39, v29);

      if (v22)
      {
        objc_msgSend(v22, "setSeparatorInset:", 0.0, INFINITY, 0.0, 0.0);
        sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
        v40 = (void *)static OS_dispatch_queue.main.getter();
        v41 = swift_allocObject(&unk_1000E9318, 24, 7);
        v42 = v113;
        *(_QWORD *)(v41 + 16) = v113;
        v118 = sub_10006FDC4;
        v119 = v41;
        aBlock = _NSConcreteStackBlock;
        v115 = 1107296256;
        v116 = sub_10008F5C0;
        v117 = &unk_1000E9330;
        v43 = _Block_copy(&aBlock);
        v44 = v119;
        v45 = v42;
        v46 = swift_release(v44);
        static DispatchQoS.unspecified.getter(v46);
        aBlock = (void **)_swiftEmptyArrayStorage;
        v47 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v48 = sub_10004BB9C((uint64_t *)&unk_100116980);
        v49 = sub_10004BBDC();
        v50 = v111;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v48, v49, v111, v47);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v10, v43);
        _Block_release(v43);

        (*(void (**)(char *, uint64_t))(v110 + 8))(v10, v50);
        v12[1](v15, v11);
        return v22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_62;
  }
  v51._countAndFlagsBits = 0xD000000000000015;
  v51._object = (void *)0x80000001000D6B10;
  if (String.hasPrefix(_:)(v51))
  {
    v52 = v113;
    v53 = objc_msgSend(v113, "tableView");
    if (v53)
    {
      v54 = v53;
      v55 = String._bridgeToObjectiveC()();
      v56 = IndexPath._bridgeToObjectiveC()().super.isa;
      v29 = (Class)objc_msgSend(v54, "dequeueReusableCellWithIdentifier:forIndexPath:", v55, v56);

      v57 = type metadata accessor for FBAFFUValidationCell();
      v58 = swift_dynamicCastClass(v29, v57);
      if (!v58)
      {
LABEL_64:

        v107 = 868;
LABEL_69:
        result = (char *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, v107, 0);
        goto LABEL_70;
      }
      v22 = (char *)v58;
      v59 = v52[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice];
      *(_BYTE *)(v58 + OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_choice) = v59;
      v32 = v29;
      v29 = (Class)v22;
      sub_10008E0D4(v59);
      v60 = *(void **)&v52[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
      if (v60)
      {
        v61 = v60;
        v62 = objc_msgSend(v61, "choiceText");
        if (!v62)
        {
LABEL_63:

          __break(1u);
          goto LABEL_64;
        }
        v63 = v62;
        v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
        v66 = v65;

        v67 = (uint64_t *)&v22[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_validationQuery];
        v68 = *(_QWORD *)&v22[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_validationQuery + 8];
        *v67 = v64;
        v67[1] = v66;
        swift_bridgeObjectRelease(v68);
        v69 = objc_msgSend(v22, "textLabel");
        if (v69)
        {
          v70 = v69;
          v71 = v67[1];
          swift_bridgeObjectRetain(v71);
          v72 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v71);
          objc_msgSend(v70, "setText:", v72);

          return v22;
        }

      }
      return v22;
    }
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v73 = v113;
  v74 = *(void **)&v113[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController];
  if (v74)
  {
    v12 = v74;
    v75 = String._bridgeToObjectiveC()();
    v76 = objc_msgSend(v12, "maybeDeviceWithIdentifier:", v75);

    v77 = String._bridgeToObjectiveC()();
    v10 = (char *)objc_msgSend(v12, "maybeAttachmentWithIdentifier:", v77);

    if (v76)
    {
      v78 = (void *)objc_opt_self(FBADeviceDisplayCell);
      v11 = v76;
      v79 = objc_msgSend(v78, "reuseIdentifier");
      if (!v79)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v81 = v80;
        v79 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v81);
      }
      v82 = IndexPath._bridgeToObjectiveC()().super.isa;
      v83 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v79, v82);

      v84 = objc_opt_self(FBADeviceDisplayCell);
      v85 = swift_dynamicCastObjCClass(v83, v84);
      if (v85)
      {
        v22 = (char *)v85;
        v21 = v83;
        objc_msgSend(v22, "updateWithDevice:", v11);
        if (qword_100115DE8 == -1)
        {
LABEL_37:
          if ((sub_1000692B4(a3, (uint64_t)a4, qword_100116D60, *(char **)algn_100116D68) & 1) != 0)
            v86 = sub_10006B2E8();
          else
            v86 = sub_10006B178();
          objc_msgSend(v22, "updateWithSeparatorSpacing:", v86);

          return v22;
        }
LABEL_59:
        swift_once(&qword_100115DE8, sub_1000648FC);
        goto LABEL_37;
      }

      v107 = 887;
      goto LABEL_69;
    }
    if (v10)
    {
      v87 = (void *)objc_opt_self(FBKAttachmentCell);
      v88 = v10;
      v89 = objc_msgSend(v87, "reuseIdentifier");
      if (!v89)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v91 = v90;
        v89 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v91);
      }
      v92 = IndexPath._bridgeToObjectiveC()().super.isa;
      v93 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v89, v92);

      v94 = objc_opt_self(FBKAttachmentCell);
      v95 = swift_dynamicCastObjCClass(v93, v94);
      if (v95)
      {
        v22 = (char *)v95;
        v96 = v93;
        objc_msgSend(v22, "setShowsIcon:", 0);
        objc_msgSend(v22, "setAttachment:", v88);
        v97 = *(void **)&v73[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
        if (v97)
        {
          v98 = (void *)objc_opt_self(FBKEnhancedLoggingPersistence);
          v99 = v97;
          v100 = objc_msgSend(v98, "sharedInstance");
          v101 = objc_msgSend(v100, "sessions");

          v102 = sub_100053458(0, (unint64_t *)&unk_100116F80, FBKEnhancedLoggingSessionInformation_ptr);
          v103 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v101, v102);

          v104 = v99;
          v105 = sub_10006E2EC(v103, v104);
          swift_bridgeObjectRelease(v103);

          if (v105)
          {
            if (objc_msgSend(v88, "state") == (id)8)
              objc_msgSend(v22, "updateDeferredStateWith:", v105);

          }
        }
        if (qword_100115DE8 != -1)
          swift_once(&qword_100115DE8, sub_1000648FC);
        if ((sub_1000692B4(a3, (uint64_t)a4, qword_100116D60, *(char **)algn_100116D68) & 1) != 0)
          v106 = sub_10006B2E8();
        else
          v106 = sub_10006B178();
        objc_msgSend(v22, "updateWithSeparatorSpacing:", v106);
        objc_msgSend(v22, "updateSuperviewToAttachmentLabelSpacing:", sub_10006B178());

        return v22;
      }

      v107 = 900;
      goto LABEL_69;
    }

  }
  aBlock = 0;
  v115 = 0xE000000000000000;
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease(v115);
  aBlock = (void **)0xD000000000000027;
  v115 = 0x80000001000D6B30;
  v108._countAndFlagsBits = a3;
  v108._object = a4;
  String.append(_:)(v108);
  result = (char *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, aBlock, v115, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 919, 0);
LABEL_70:
  __break(1u);
  return result;
}

_BYTE *sub_100069254(_BYTE *result)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  void *v4;

  v1 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce;
  v2 = result[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce];
  result[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce] = 1;
  if ((v2 & 1) == 0)
  {
    v3 = result;
    v4 = *(void **)&result[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
    if (!v4)
      return sub_100068200();
    result = objc_msgSend(v4, "collectsFiles");
    if (v3[v1] == 1)
      return sub_100068200();
  }
  return result;
}

uint64_t sub_1000692B4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t result;
  uint64_t *v24;
  _BYTE v25[16];
  uint64_t v26;
  char *v27;

  v9 = sub_10004BB9C(&qword_100117008);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(void **)(v4 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource);
  if (!v13)
    goto LABEL_7;
  v14 = v13;
  dispatch thunk of UITableViewDiffableDataSource.snapshot()();

  v26 = a3;
  v27 = a4;
  v15 = (_QWORD *)NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(&v26, v9);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  v16 = sub_100069484(a1, a2, v15);
  if ((v17 & 1) == 0)
  {
    v18 = v16;
    v19 = off_100116D18;
    v26 = qword_100116D10;
    v27 = off_100116D18;
    __chkstk_darwin(v16);
    v24 = &v26;
    swift_bridgeObjectRetain(v19);
    v20 = sub_10006E234(sub_10006FD70, (uint64_t)&v25[-32], (uint64_t)v15);
    v22 = v21;
    swift_bridgeObjectRelease(v19);
    if ((v22 & 1) != 0)
    {
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
    swift_bridgeObjectRelease(v15);
    if (!__OFSUB__(v20, 1))
      return v18 == v20 - 1;
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000019, 0x80000001000D6AD0, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 933, 0);
  __break(1u);
  return result;
}

uint64_t sub_100069484(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t result;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  v9 = v7 == a1 && v8 == a2;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0) & 1) != 0)
    return 0;
  v11 = 0;
  v12 = a3 + 7;
  v13 = 1;
  while (1)
  {
    if (v3 == v13)
      return 0;
    ++v11;
    v14 = *(v12 - 1);
    v15 = *v12;
    if (v14 == a1 && v15 == a2)
      break;
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0);
    result = v13++;
    v12 += 2;
    if ((v17 & 1) != 0)
      return result;
  }
  return v11;
}

_QWORD *sub_100069568()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  Class isa;
  void *v15;
  id v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  Class v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  Class v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  Class v42;
  char *v43;
  uint64_t v44;
  id v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  Class v50;
  id v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  Class v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v62;

  if (qword_100115DE8 != -1)
    swift_once(&qword_100115DE8, sub_1000648FC);
  v1 = *(_QWORD *)algn_100116D68;
  v2 = objc_allocWithZone((Class)FBKSectionIdentifierGroup);
  swift_bridgeObjectRetain(v1);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v4 = objc_msgSend(v2, "initWithSectionIdentifier:", v3);

  v5 = sub_100064918();
  v7 = v6;
  v8 = String.count.getter(v5);
  swift_bridgeObjectRelease(v7);
  if (v8 >= 1)
  {
    v9 = objc_msgSend(v4, "givenRowIdentifiers");
    v10 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for String);

    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      v10 = sub_10007E058(0, v10[2] + 1, 1, v10);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_10007E058((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v10[2] = v12 + 1;
    v13 = &v10[2 * v12];
    v13[4] = 0xD00000000000001ALL;
    v13[5] = 0x80000001000CCB50;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v4, "setGivenRowIdentifiers:", isa);

  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited) & 1) == 0)
  {
    v15 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    if (v15)
    {
      v16 = objc_msgSend(v15, "type");
      if (v16 == (id)7 || v16 == (id)4)
      {
        v18 = sub_100064AD4();
        v20 = v19;
        v21 = objc_msgSend(v4, "givenRowIdentifiers");
        v22 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for String);

        if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
          v22 = sub_10007E058(0, v22[2] + 1, 1, v22);
        v24 = v22[2];
        v23 = v22[3];
        v25 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          v62 = sub_10007E058((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
          v25 = v24 + 1;
          v22 = v62;
        }
        v22[2] = v25;
        v26 = &v22[2 * v24];
        v26[4] = v18;
        v26[5] = v20;
        v27 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v22);
        objc_msgSend(v4, "setGivenRowIdentifiers:", v27);

      }
    }
  }
  v28 = (char *)sub_10006B024();
  v30 = *(_QWORD *)&v28[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier];
  v29 = *(_QWORD *)&v28[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier + 8];
  swift_bridgeObjectRetain(v29);

  v31 = objc_msgSend(v4, "givenRowIdentifiers");
  v32 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, &type metadata for String);

  if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
    v32 = sub_10007E058(0, v32[2] + 1, 1, v32);
  v34 = v32[2];
  v33 = v32[3];
  if (v34 >= v33 >> 1)
    v32 = sub_10007E058((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
  v32[2] = v34 + 1;
  v35 = &v32[2 * v34];
  v35[4] = v30;
  v35[5] = v29;
  v36 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v32);
  objc_msgSend(v4, "setGivenRowIdentifiers:", v36);

  v37 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
  if (v37)
  {
    v38 = objc_msgSend(v37, "generateSnapshotIdentifiersTrackingLastDevice:", 1);
    v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, &type metadata for String);

    v40 = objc_msgSend(v4, "givenRowIdentifiers");
    v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, &type metadata for String);

    sub_10007B524(v39);
    v42 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v41);
    objc_msgSend(v4, "setGivenRowIdentifiers:", v42);

  }
  v44 = qword_100116D10;
  v43 = off_100116D18;
  swift_bridgeObjectRetain(off_100116D18);
  v45 = objc_msgSend(v4, "givenRowIdentifiers");
  v46 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, &type metadata for String);

  if ((swift_isUniquelyReferenced_nonNull_native(v46) & 1) == 0)
    v46 = sub_10007E058(0, v46[2] + 1, 1, v46);
  v48 = v46[2];
  v47 = v46[3];
  if (v48 >= v47 >> 1)
    v46 = sub_10007E058((_QWORD *)(v47 > 1), v48 + 1, 1, v46);
  v46[2] = v48 + 1;
  v49 = &v46[2 * v48];
  v49[4] = v44;
  v49[5] = v43;
  v50 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v46);
  objc_msgSend(v4, "setGivenRowIdentifiers:", v50);

  v51 = objc_msgSend(v4, "givenRowIdentifiers");
  v52 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, &type metadata for String);

  if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
    v52 = sub_10007E058(0, v52[2] + 1, 1, v52);
  v54 = v52[2];
  v53 = v52[3];
  if (v54 >= v53 >> 1)
    v52 = sub_10007E058((_QWORD *)(v53 > 1), v54 + 1, 1, v52);
  v52[2] = v54 + 1;
  v55 = &v52[2 * v54];
  v55[4] = 0xD000000000000010;
  v55[5] = 0x80000001000CCB70;
  v56 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v52);
  objc_msgSend(v4, "setGivenRowIdentifiers:", v56);

  v57 = v4;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v57);
  v59 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v58 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v59 >= v58 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v58 > 1, v59 + 1, 1);
  v60 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v57);
  specialized Array._endMutation()(v60);

  return _swiftEmptyArrayStorage;
}

void sub_100069BF0(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void **v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  void *v67;
  void *v68;
  unint64_t v69;
  unint64_t v70;
  void **v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char *v99;
  unsigned int (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  void **aBlock;
  uint64_t v104;
  uint64_t (*v105)(uint64_t);
  void *v106;
  uint64_t (*v107)();
  uint64_t v108;

  v7 = v6;
  v96 = a5;
  v97 = a6;
  v94 = a3;
  LODWORD(v93) = a2;
  v98 = a1;
  v9 = sub_10004BB9C(&qword_100117000);
  v10 = __chkstk_darwin(v9);
  v92 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v91 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v91 - v16;
  __chkstk_darwin(v15);
  v102 = (uint64_t)&v91 - v18;
  v19 = type metadata accessor for DispatchWorkItemFlags(0);
  v101 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DispatchQoS(0);
  v22 = *((_QWORD *)v100 - 1);
  __chkstk_darwin(v100);
  v24 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = objc_msgSend(v6, "view");
  if (!v25)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "window");

  v99 = v7;
  v95 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource;
  v29 = *(_QWORD *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource];
  if (v27)
  {
    if (!v29)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    v30 = v102;
    if ((*(_BYTE *)(v29 + qword_100116DE8) & 1) == 0)
    {
      v31 = v99;
      v32 = v94;
      if ((v93 & 1) == 0)
      {
        v33 = static os_log_type_t.info.getter();
        v34 = sub_10004BB9C((uint64_t *)&unk_100116860);
        v35 = swift_allocObject(v34, 112, 7);
        *(_OWORD *)(v35 + 16) = xmmword_1000CC8F0;
        *(_QWORD *)(v35 + 56) = &type metadata for Bool;
        *(_QWORD *)(v35 + 64) = &protocol witness table for Bool;
        *(_BYTE *)(v35 + 32) = v98 & 1;
        *(_QWORD *)(v35 + 96) = &type metadata for Bool;
        *(_QWORD *)(v35 + 104) = &protocol witness table for Bool;
        *(_BYTE *)(v35 + 72) = v32 & 1;
        v30 = v102;
        os_log(_:dso:log:_:_:)(v33, &_mh_execute_header);
        swift_bridgeObjectRelease(v35);
        v29 = *(_QWORD *)&v31[v95];
        if (!v29)
          goto LABEL_60;
      }
      *(_BYTE *)(v29 + qword_100116DE8) = 1;
      v36 = sub_10004BB9C(&qword_100117008);
      v93 = *(_QWORD *)(v36 - 8);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56);
      v37(v30, 1, 1, v36);
      v101 = v36;
      if ((v32 & 1) != 0)
      {
        v38 = v95;
        v39 = *(void **)&v31[v95];
        if (!v39)
        {
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        v40 = v39;
        dispatch thunk of UITableViewDiffableDataSource.snapshot()();

        v37((uint64_t)v17, 0, 1, v101);
        v41 = v102;
        sub_10006FC6C((uint64_t)v17, v102);
        v42 = (uint64_t)v92;
LABEL_47:
        v86 = *(void **)&v31[v38];
        if (v86)
        {
          sub_10006FCB4(v41, v42);
          v87 = v93;
          v88 = v101;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v42, 1, v101) != 1)
          {
            v89 = v86;
            dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v42, v98 & 1, v96, v97);

            (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v42, v88);
            v90 = *(_QWORD *)&v31[v38];
            if (v90)
            {
              *(_BYTE *)(v90 + qword_100116DE8) = 0;
              sub_10004F588(v102, &qword_100117000);
              return;
            }
            goto LABEL_59;
          }
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      NSDiffableDataSourceSnapshot.init()(&type metadata for String, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
      v37((uint64_t)v14, 0, 1, v36);
      sub_10006FC6C((uint64_t)v14, v30);
      v56 = sub_100069568();
      v57 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot;
      v58 = *(_QWORD *)&v31[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot];
      *(_QWORD *)&v31[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot] = v56;
      swift_bridgeObjectRelease(v58);
      v59 = *(_QWORD *)&v31[v57];
      if ((unint64_t)v59 >> 62)
      {
        if (v59 < 0)
          v72 = *(_QWORD *)&v31[v57];
        else
          v72 = v59 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)&v31[v57]);
        v60 = _CocoaArrayWrapper.endIndex.getter(v72);
        if (v60)
          goto LABEL_15;
      }
      else
      {
        v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*(_QWORD *)&v31[v57]);
        if (v60)
        {
LABEL_15:
          v100 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v57;
          aBlock = (void **)_swiftEmptyArrayStorage;
          sub_10007E590(0, v60 & ~(v60 >> 63), 0);
          if ((v60 & 0x8000000000000000) == 0)
          {
            v61 = 0;
            v62 = aBlock;
            do
            {
              if ((v59 & 0xC000000000000001) != 0)
                v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v59);
              else
                v63 = *(id *)(v59 + 8 * v61 + 32);
              v64 = v63;
              v65 = objc_msgSend(v63, "sectionIdentifier");
              v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
              v68 = v67;

              aBlock = v62;
              v70 = (unint64_t)v62[2];
              v69 = (unint64_t)v62[3];
              if (v70 >= v69 >> 1)
              {
                sub_10007E590(v69 > 1, v70 + 1, 1);
                v62 = aBlock;
              }
              ++v61;
              v62[2] = (void *)(v70 + 1);
              v71 = &v62[2 * v70];
              v71[4] = (void *)v66;
              v71[5] = v68;
            }
            while (v60 != v61);
            swift_bridgeObjectRelease(v59);
            v31 = v99;
            v57 = (uint64_t)v100;
            goto LABEL_29;
          }
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
      }
      swift_bridgeObjectRelease(v59);
      v62 = (void **)_swiftEmptyArrayStorage;
LABEL_29:
      v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
      if (v100(v102, 1, v101) == 1)
      {
LABEL_62:
        __break(1u);
        return;
      }
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v62);
      swift_bridgeObjectRelease(v62);
      v73 = *(_QWORD *)&v31[v57];
      if ((unint64_t)v73 >> 62)
        goto LABEL_41;
      v74 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)&v31[v57]);
      for (; v74; v74 = _CocoaArrayWrapper.endIndex.getter(v85))
      {
        v75 = 4;
        while (1)
        {
          v76 = (v73 & 0xC000000000000001) != 0
              ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v75 - 4, v73)
              : (char *)*(id *)(v73 + 8 * v75);
          v31 = v76;
          v77 = v75 - 3;
          if (__OFADD__(v75 - 4, 1))
            break;
          v78 = objc_msgSend(v76, "rowIdentifiers");
          v79 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, &type metadata for String);

          v80 = objc_msgSend(v31, "sectionIdentifier");
          v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
          v83 = v82;

          aBlock = (void **)v81;
          v104 = v83;
          v84 = v101;
          if (v100(v102, 1, v101) == 1)
            goto LABEL_53;
          NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v79, &aBlock, v84);
          swift_bridgeObjectRelease(v83);

          swift_bridgeObjectRelease(v79);
          ++v75;
          if (v77 == v74)
          {
            swift_bridgeObjectRelease(v73);
            v31 = v99;
            goto LABEL_46;
          }
        }
        __break(1u);
LABEL_41:
        if (v73 < 0)
          v85 = v73;
        else
          v85 = v73 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v73);
      }
      swift_bridgeObjectRelease(v73);
LABEL_46:
      v42 = (uint64_t)v92;
      v41 = v102;
      v38 = v95;
      goto LABEL_47;
    }
  }
  else if (!v29)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v43 = static os_log_type_t.debug.getter(v28);
  v44 = v99;
  os_log(_:dso:log:_:_:)(v43, &_mh_execute_header);
  if (a4 <= 2)
  {
    sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
    v45 = (void *)static OS_dispatch_queue.main.getter();
    v46 = swift_allocObject(&unk_1000E92C8, 56, 7);
    *(_QWORD *)(v46 + 16) = a4;
    *(_QWORD *)(v46 + 24) = v44;
    *(_BYTE *)(v46 + 32) = v98 & 1;
    v48 = v96;
    v47 = v97;
    *(_QWORD *)(v46 + 40) = v96;
    *(_QWORD *)(v46 + 48) = v47;
    v107 = sub_10006FD30;
    v108 = v46;
    aBlock = _NSConcreteStackBlock;
    v104 = 1107296256;
    v105 = sub_10008F5C0;
    v106 = &unk_1000E92E0;
    v49 = _Block_copy(&aBlock);
    v50 = v108;
    v51 = v44;
    sub_10004D620(v48, v47);
    v52 = swift_release(v50);
    static DispatchQoS.unspecified.getter(v52);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v53 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v54 = sub_10004BB9C((uint64_t *)&unk_100116980);
    v55 = sub_10004BBDC();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v54, v55, v19, v53);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v24, v21, v49);
    _Block_release(v49);

    (*(void (**)(char *, uint64_t))(v101 + 8))(v21, v19);
    (*(void (**)(char *, unsigned int (*)(uint64_t, uint64_t, uint64_t)))(v22 + 8))(v24, v100);
  }
}

void sub_10006A4AC()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSString v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  NSString v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  Swift::String v39;
  id v40;
  void *v41;
  NSString v42;
  id v43;
  NSString v44;
  id v45;
  id v46;
  void *v47;
  NSString v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t ObjCClassFromMetadata;
  char *v53;
  NSString v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  double v63;
  double v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;

  v1 = v0;
  v2 = objc_msgSend(v0, "tableView");
  if (!v2)
  {
    __break(1u);
    goto LABEL_17;
  }
  v3 = v2;
  objc_msgSend(v2, "setEditing:", 0);

  v4 = objc_msgSend(v1, "tableView");
  if (!v4)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4;
  v6 = sub_100064810();
  objc_msgSend(v5, "setDropDelegate:", v6);

  v7 = objc_msgSend((id)objc_opt_self(FBADeviceDisplayCell), "reuseIdentifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = (void *)objc_opt_self(NSBundle);
  v11 = objc_msgSend(v10, "mainBundle");
  swift_bridgeObjectRetain(v9);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v13 = (void *)objc_opt_self(UINib);
  v14 = objc_msgSend(v13, "nibWithNibName:bundle:", v12, v11);

  v15 = v14;
  v16 = objc_msgSend(v1, "tableView");
  if (!v16)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v17, "registerNib:forCellReuseIdentifier:", v15, v18);

  v19 = objc_msgSend(v10, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v13, "nibWithNibName:bundle:", v20, v19);

  v22 = v21;
  v23 = objc_msgSend(v1, "tableView");
  if (!v23)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v24 = v23;
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "registerNib:forCellReuseIdentifier:", v22, v25);

  v26 = objc_msgSend((id)objc_opt_self(FBKAttachmentCell), "reuseIdentifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v28 = v27;

  sub_100053458(0, (unint64_t *)&unk_100116F90, NSBundle_ptr);
  v29 = (void *)static NSBundle.feedbackCoreFramework.getter();
  swift_bridgeObjectRetain(v28);
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  v31 = objc_msgSend(v13, "nibWithNibName:bundle:", v30, v29);

  v32 = sub_10004BB9C((uint64_t *)&unk_1001178F0);
  v33 = swift_allocObject(v32, 64, 7);
  *(_OWORD *)(v33 + 16) = xmmword_1000CC730;
  v34 = v31;
  v35 = objc_msgSend(v34, "description");
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  v39._countAndFlagsBits = v36;
  v39._object = v38;
  String.append(_:)(v39);

  swift_bridgeObjectRelease(v38);
  *(_QWORD *)(v33 + 56) = &type metadata for String;
  *(_QWORD *)(v33 + 32) = 0x62696E206C6C6543;
  *(_QWORD *)(v33 + 40) = 0xE900000000000020;
  print(_:separator:terminator:)(v33, 32, 0xE100000000000000, 10, 0xE100000000000000);
  swift_bridgeObjectRelease(v33);
  v40 = objc_msgSend(v1, "tableView");
  if (!v40)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v41 = v40;
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  objc_msgSend(v41, "registerNib:forCellReuseIdentifier:", v34, v42);

  v43 = objc_msgSend(v10, "mainBundle");
  v44 = String._bridgeToObjectiveC()();
  v45 = objc_msgSend(v13, "nibWithNibName:bundle:", v44, v43);

  v77 = v45;
  v46 = objc_msgSend(v1, "tableView");
  if (!v46)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v47 = v46;
  v48 = String._bridgeToObjectiveC()();
  objc_msgSend(v47, "registerNib:forCellReuseIdentifier:", v77, v48);

  v49 = objc_msgSend(v1, "tableView");
  if (!v49)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v50 = v49;
  v51 = type metadata accessor for FBAAddAttachmentsCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v51);
  v53 = off_100116D18;
  swift_bridgeObjectRetain(off_100116D18);
  v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v53);
  objc_msgSend(v50, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v54);

  v55 = objc_msgSend(v1, "tableView");
  if (!v55)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v56 = v55;
  objc_msgSend(v55, "setRowHeight:", UITableViewAutomaticDimension);

  v57 = objc_msgSend(v1, "tableView");
  if (!v57)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v58 = v57;
  objc_msgSend(v57, "setEstimatedRowHeight:", 80.0);

  v59 = objc_msgSend(v1, "tableView");
  if (!v59)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v60 = v59;
  v61 = objc_msgSend(v1, "tableView");
  if (!v61)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v62 = v61;
  objc_msgSend(v61, "frame");
  v64 = v63;

  v65 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, v64, 1.0);
  objc_msgSend(v60, "setTableFooterView:", v65);

  v66 = objc_msgSend(v1, "tableView");
  if (!v66)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v67 = v66;
  v68 = swift_allocObject(&unk_1000E9278, 24, 7);
  swift_unknownObjectUnownedInit(v68 + 16, v1);
  v69 = objc_allocWithZone((Class)type metadata accessor for FollowupDataSource(0));
  v69[qword_100116DE8] = 0;
  swift_unknownObjectWeakInit(&v69[qword_100116DF0], 0);
  v70 = swift_allocObject(&unk_1000E92A0, 32, 7);
  *(_QWORD *)(v70 + 16) = sub_10006FC18;
  *(_QWORD *)(v70 + 24) = v68;
  v71 = UITableViewDiffableDataSource.init(tableView:cellProvider:)(v67, sub_10006FC44, v70);
  v72 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource;
  v73 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource];
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource] = v71;

  v74 = *(_QWORD *)&v1[v72];
  if (!v74)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  swift_unknownObjectWeakAssign(v74 + qword_100116DF0, v1);
  v75 = objc_msgSend(v1, "tableView");
  if (v75)
  {
    v76 = v75;
    objc_msgSend(v75, "setDelegate:", v1);

    return;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_10006ACA4(void *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  void *Strong;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  NSString v14;
  uint64_t result;
  __objc2_prot *v16;
  __objc2_prot *v17;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a5 + 16);
  v10 = sub_100068614(a1, a2, a3, a4);

  v17 = &OBJC_PROTOCOL___FBADiffableCell;
  v11 = swift_dynamicCastObjCProtocolConditional(v10, 1, &v17);
  if (v11
    || (v16 = &OBJC_PROTOCOL___FBKDiffableCell, (v11 = swift_dynamicCastObjCProtocolConditional(v10, 1, &v16)) != 0))
  {
    v12 = (void *)v11;
    v13 = v10;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setItemIdentifier:", v14);

    return (uint64_t)v10;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 1090, 0);
    __break(1u);
  }
  return result;
}

id sub_10006AE80()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell;
  v2 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell];
  }
  else
  {
    v4 = (void *)sub_10006AEE0(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_10006AEE0(void *a1)
{
  id v1;
  id v2;
  void *v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t result;

  v2 = objc_msgSend(a1, "tableView");
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend(v3, "dequeueReusableCellWithIdentifier:", v4);

  if (v1)
  {
    v5 = type metadata accessor for FBAFollowupDisplayTextCell();
    v6 = swift_dynamicCastClass(v1, v5);
    if (!v6)
    {
LABEL_8:

      goto LABEL_9;
    }
    v8 = v6;
    Strong = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC18Feedback_Assistant26FBAFollowupDisplayTextCell_displayText, v7);
    if (Strong)
    {
      v10 = (void *)Strong;
      sub_100064918();
      v12 = v11;
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
      objc_msgSend(v10, "setText:", v13);

      return v8;
    }
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 1109, 0);
  __break(1u);
  return result;
}

uint64_t sub_10006B024()
{
  id v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t result;

  v2 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell;
  v3 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell];
  if (v3)
  {
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell];
LABEL_7:
    v13 = v3;
    return v4;
  }
  v5 = objc_msgSend(v1, "tableView");
  if (!v5)
  {
    __break(1u);
LABEL_9:

    goto LABEL_10;
  }
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  v0 = objc_msgSend(v6, "dequeueReusableCellWithIdentifier:", v7);

  if (v0)
  {
    v8 = type metadata accessor for FBAExpandingTextInputCell();
    v9 = swift_dynamicCastClass(v0, v8);
    if (v9)
    {
      v4 = v9;
      v10 = v9 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_delegate;
      *(_QWORD *)(v10 + 8) = &off_1000E9040;
      swift_unknownObjectWeakAssign(v10, v1);
      v11 = *(void **)&v1[v2];
      *(_QWORD *)&v1[v2] = v4;
      v12 = v0;

      v3 = 0;
      goto LABEL_7;
    }
    goto LABEL_9;
  }
LABEL_10:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 1118, 0);
  __break(1u);
  return result;
}

double sub_10006B178()
{
  _BYTE *v0;
  _BYTE *v1;
  double result;

  v1 = &v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsCellSeparatorInset];
  if ((v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsCellSeparatorInset
         + 8] & 1) == 0)
    return *(double *)v1;
  sub_10006B1BC(v0);
  *(double *)v1 = result;
  v1[8] = 0;
  return result;
}

void sub_10006B1BC(void *a1)
{
  id v1;
  id v2;
  void *v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = objc_msgSend(a1, "tableView");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(FBADeviceDisplayCell), "reuseIdentifier");
    if (!v4)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v6 = v5;
      v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
    }
    v1 = objc_msgSend(v3, "dequeueReusableCellWithIdentifier:", v4);

    if (!v1)
      goto LABEL_9;
    v7 = objc_opt_self(FBADeviceDisplayCell);
    v8 = (void *)swift_dynamicCastObjCClass(v1, v7);
    if (v8)
    {
      objc_msgSend(v8, "spaceFromSuperViewToLabel");

      return;
    }
  }
  else
  {
    __break(1u);
  }

LABEL_9:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 1126, 0);
  __break(1u);
}

double sub_10006B2E8()
{
  uint64_t v0;
  _BYTE *v1;
  void *v2;
  double v3;
  double v4;

  v1 = (_BYTE *)(v0
               + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsLastCellSeparatorInset);
  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsLastCellSeparatorInset
                 + 8) & 1) == 0)
    return *(double *)v1;
  v2 = (void *)sub_10006B024();
  objc_msgSend(v2, "separatorInset");
  v4 = v3;

  *(double *)v1 = v4;
  v1[8] = 0;
  return v4;
}

void sub_10006B354()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  id v24;
  NSString v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  NSString v33;
  id v34;
  id v35;
  NSString v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  Swift::String v42;

  v1 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v1, "setLargeTitleDisplayMode:", 0);

  v2 = objc_msgSend(v0, "navigationController");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "navigationBar");

    objc_msgSend(v4, "setPrefersLargeTitles:", 1);
  }
  v5 = objc_msgSend(v0, "navigationItem");
  v6 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v0, "userDidCancel");
  objc_msgSend(v5, "setLeftBarButtonItem:", v6);

  v7 = objc_msgSend(v0, "navigationItem");
  v8 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
  if (v8)
  {
    v9 = objc_msgSend(v8, "itemTitle");
    objc_msgSend(v7, "setTitle:", v9);

    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v42._object = (void *)0xE000000000000000;
    v11._countAndFlagsBits = 0x425F54494D425553;
    v11._object = (void *)0xED00004E4F545455;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v42._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v42)._object;

    v14 = (void *)FBKSystemImageNameSendArrowUp;
    v15 = (void *)objc_opt_self(UIImage);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;
    v18 = v14;
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v20 = objc_msgSend(v15, "systemImageNamed:", v19);

    v21 = objc_allocWithZone((Class)UIBarButtonItem);
    v22 = v0;
    v23 = objc_msgSend(v21, "initWithImage:style:target:action:", v20, 0, v22, "userDidTapSend");

    v24 = v23;
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setAccessibilityLabel:", v25);

    v26 = *(void **)&v22[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem];
    *(_QWORD *)&v22[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem] = v24;
    v41 = v24;

    v27 = objc_msgSend(v22, "navigationItem");
    objc_msgSend(v27, "setRightBarButtonItem:", 0);

    v28 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:", 32.0);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v30 = v29;
    v31 = v18;
    v32 = v28;
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v34 = objc_msgSend(v15, "systemImageNamed:withConfiguration:", v33, v32);

    if (v34)
    {
      v35 = objc_msgSend((id)objc_opt_self(UIButton), "systemButtonWithImage:target:action:", v34, v22, "userDidTapSend");
      v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      objc_msgSend(v35, "setAccessibilityLabel:", v36);

      v37 = *(void **)&v22[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton];
      *(_QWORD *)&v22[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton] = v35;
      v38 = v35;

      v39 = objc_msgSend(v22, "navigationItem");
      objc_msgSend(v39, "_setLargeTitleAccessoryView:alignToBaseline:horizontalAlignment:", v38, 0, 1);

      v40 = objc_msgSend(v22, "navigationItem");
      objc_msgSend(v40, "_setLargeTitleTwoLineMode:", 2);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 1156, 0);
  __break(1u);
}

void sub_10006B85C(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  id v22;
  char *v23;
  NSSet v24;
  id v25;
  void *v26;
  id v27;
  char v28[56];

  v2 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (v2)
  {
    v3 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController;
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController])
    {
      v27 = v2;
      v4 = static os_log_type_t.info.getter();
      os_log(_:dso:log:_:_:)(v4, &_mh_execute_header);

    }
    else
    {
      v6 = (void *)objc_opt_self(FBKEnhancedLoggingPersistence);
      v7 = v2;
      v8 = objc_msgSend(v6, "sharedInstance");
      v9 = objc_msgSend(v8, "sessions");

      v10 = sub_100053458(0, (unint64_t *)&unk_100116F80, FBKEnhancedLoggingSessionInformation_ptr);
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

      v12 = v7;
      v13 = sub_10006E2EC(v11, v12);
      swift_bridgeObjectRelease(v11);

      if (v13)
      {
        v14 = objc_msgSend(v13, "deviceIdentifiers");

        v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for String, &protocol witness table for String);
        v16 = sub_100089A4C(v15);
        v18 = v17;
        swift_bridgeObjectRelease(v15);
        if (v18)
        {
          v19 = sub_10004BB9C(&qword_100116890);
          inited = swift_initStackObject(v19, v28);
          *(_OWORD *)(inited + 16) = xmmword_1000CC730;
          *(_QWORD *)(inited + 32) = v16;
          *(_QWORD *)(inited + 40) = v18;
          v18 = sub_100083338(inited);
          swift_setDeallocating(inited);
          swift_arrayDestroy(inited + 32, 1, &type metadata for String);
        }
      }
      else
      {
        v18 = 0;
      }
      v21 = objc_msgSend((id)objc_opt_self(FBKDeviceManager), "sharedInstance");
      v22 = v12;
      v23 = v1;
      if (v18)
      {
        v24.super.isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v18);
      }
      else
      {
        v24.super.isa = 0;
      }
      v25 = objc_msgSend(objc_allocWithZone((Class)FBKDeviceDiagnosticsController), "initWithDeviceManager:delegate:filerForm:pendingFileUrls:pendingURLExtensions:draftDeviceIds:", v21, v1, v12, 0, 0, v24.super.isa);

      v26 = *(void **)&v1[v3];
      *(_QWORD *)&v1[v3] = v25;

    }
  }
  else
  {
    v5 = static os_log_type_t.default.getter(a1);
    os_log(_:dso:log:_:_:)(v5, &_mh_execute_header);
  }
}

void sub_10006BB78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = static os_log_type_t.info.getter();
  os_log(_:dso:log:_:_:)(v1, &_mh_execute_header);
  v2 = (void *)objc_opt_self(NSNotificationCenter);
  v3 = objc_msgSend(v2, "defaultCenter");
  objc_msgSend(v3, "addObserver:selector:name:object:", v0, "keyboardWillShowWithNotification:", UIKeyboardWillShowNotification, 0);

  v4 = objc_msgSend(v2, "defaultCenter");
  objc_msgSend(v4, "addObserver:selector:name:object:", v0, "keyboardWillHideWithNotification:", UIKeyboardWillHideNotification, 0);

}

id sub_10006BE98(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  objc_super v20;
  uint64_t v21;

  v2 = v1;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_submissionFailed] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource] = 0;
  v4 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot;
  v5 = sub_10004BB9C((uint64_t *)&unk_100117030);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1000CCB30;
  v7 = objc_allocWithZone((Class)FBKSectionIdentifierGroup);
  v8 = v2;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "initWithSectionIdentifier:", v9);

  *(_QWORD *)(v6 + 32) = v10;
  v21 = v6;
  specialized Array._endMutation()(v11);
  *(_QWORD *)&v2[v4] = v6;
  v12 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log;
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_100063614);
  v13 = (void *)qword_100119F48;
  *(_QWORD *)&v8[v12] = qword_100119F48;
  v14 = &v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___displayText];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice] = 2;
  v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_didAppear] = 0;
  v15 = &v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] = 0;
  v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce] = 0;
  v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___requiresComments] = 2;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell] = 0;
  v16 = &v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsCellSeparatorInset];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = &v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsLastCellSeparatorInset];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_keyboardHeight] = 0;
  v18 = v13;

  v20.receiver = v8;
  v20.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  return objc_msgSendSuper2(&v20, "initWithStyle:", a1);
}

id sub_10006C134(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  id v21;
  NSString v22;
  id v23;
  objc_super v25;
  uint64_t v26;

  v4 = v3;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_submissionFailed] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource] = 0;
  v7 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot;
  v8 = sub_10004BB9C((uint64_t *)&unk_100117030);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1000CCB30;
  v10 = objc_allocWithZone((Class)FBKSectionIdentifierGroup);
  v11 = v4;
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "initWithSectionIdentifier:", v12);

  *(_QWORD *)(v9 + 32) = v13;
  v26 = v9;
  specialized Array._endMutation()(v14);
  *(_QWORD *)&v4[v7] = v9;
  v15 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log;
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_100063614);
  v16 = (void *)qword_100119F48;
  *(_QWORD *)&v11[v15] = qword_100119F48;
  v17 = &v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___displayText];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice] = 2;
  v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_didAppear] = 0;
  v18 = &v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] = 0;
  v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce] = 0;
  v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___requiresComments] = 2;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell] = 0;
  v19 = &v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsCellSeparatorInset];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  v20 = &v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsLastCellSeparatorInset];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_keyboardHeight] = 0;
  v21 = v16;

  if (a2)
  {
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v22 = 0;
  }
  v25.receiver = v11;
  v25.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  v23 = objc_msgSendSuper2(&v25, "initWithNibName:bundle:", v22, a3);

  return v23;
}

id sub_10006C450(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  id v19;
  objc_super v21;
  uint64_t v22;

  v2 = v1;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_submissionFailed] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource] = 0;
  v4 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot;
  v5 = sub_10004BB9C((uint64_t *)&unk_100117030);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1000CCB30;
  v7 = objc_allocWithZone((Class)FBKSectionIdentifierGroup);
  v8 = v2;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "initWithSectionIdentifier:", v9);

  *(_QWORD *)(v6 + 32) = v10;
  v22 = v6;
  specialized Array._endMutation()(v11);
  *(_QWORD *)&v2[v4] = v6;
  v12 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log;
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_100063614);
  v13 = (void *)qword_100119F48;
  *(_QWORD *)&v8[v12] = qword_100119F48;
  v14 = &v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___displayText];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice] = 2;
  v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_didAppear] = 0;
  v15 = &v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] = 0;
  v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce] = 0;
  v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___requiresComments] = 2;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell] = 0;
  v16 = &v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsCellSeparatorInset];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = &v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsLastCellSeparatorInset];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_keyboardHeight] = 0;
  v18 = v13;

  v21.receiver = v8;
  v21.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  v19 = objc_msgSendSuper2(&v21, "initWithCoder:", a1);

  return v19;
}

uint64_t sub_10006CABC(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;

  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a1;
  sub_100064390();
  v16 = swift_allocObject(a6, 32, 7);
  *(_BYTE *)(v16 + 16) = 1;
  *(_QWORD *)(v16 + 24) = v15;
  v17 = v15;
  sub_100069BF0(1, 0, 0, 0, a7, v16);

  return swift_release(v16);
}

id sub_10006CC30(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  void *object;
  NSString v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t v19;
  Swift::String v20;

  switch(a2)
  {
    case 0:
      v3 = static os_log_type_t.info.getter();
      os_log(_:dso:log:_:_:)(v3, &_mh_execute_header);
      sub_100064568(1);
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
      v6 = v5;
      v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v20._object = (void *)0xE000000000000000;
      v8._object = (void *)0x80000001000D6890;
      v8._countAndFlagsBits = 0xD000000000000015;
      v9.value._countAndFlagsBits = v4;
      v9.value._object = v6;
      v10._countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      v20._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v20)._object;
      swift_bridgeObjectRelease(v6);

      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      objc_msgSend(v2, "showSpinnerWithStatus:userInteractionEnabled:", v12, 1);

      return sub_100068200();
    case 1:
    case 2:
      v19 = static os_log_type_t.info.getter();
      os_log(_:dso:log:_:_:)(v19, &_mh_execute_header);
      objc_msgSend(v2, "hideSpinner");
      sub_100064568(0);
      *((_BYTE *)v2 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles) = 0;
      return (id)sub_100064390();
    case 3:
      v14 = static os_log_type_t.info.getter();
      os_log(_:dso:log:_:_:)(v14, &_mh_execute_header);
      *((_BYTE *)v2 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles) = 1;
      sub_100064390();
      sub_10006CEFC((uint64_t)objc_msgSend(a1, "filesBeingAttachedCount"));
      v16 = v15;
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
      objc_msgSend(v2, "showSpinnerWithStatus:userInteractionEnabled:", v17, 1);

      return sub_100068200();
    default:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 1337, 0);
      __break(1u);
      JUMPOUT(0x10006CEECLL);
  }
}

uint64_t sub_10006CEFC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t countAndFlagsBits;
  Swift::String v18;
  Swift::String v19;

  if (a1 < 1)
  {
    v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v19._countAndFlagsBits = 0xD000000000000053;
    v19._object = (void *)0x80000001000D68C0;
    v15._countAndFlagsBits = 0x5F474E4959504F43;
    v15._object = (void *)0xED000053454C4946;
    v16._countAndFlagsBits = 0x6E69686361747441;
    v16._object = (void *)0xEF73656C69662067;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v19)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  else
  {
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKPluralStrings);
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18._object = (void *)0xE000000000000000;
    v6._object = (void *)0x80000001000D6920;
    v6._countAndFlagsBits = 0xD000000000000012;
    v7.value._countAndFlagsBits = v2;
    v7.value._object = v4;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = 0;
    v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v18);
    swift_bridgeObjectRelease(v4);

    v10 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v11 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1000CC730;
    *(_QWORD *)(v11 + 56) = &type metadata for Int;
    *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v11 + 32) = a1;
    v12 = String.init(format:_:)(v9._countAndFlagsBits, v9._object, v11);
    swift_bridgeObjectRelease(v9._object);
    return v12;
  }
}

void sub_10006D210(uint64_t a1, void (*a2)(void *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    if (!*(_QWORD *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup))
    {
      v7 = static os_log_type_t.error.getter(Strong);
      v8 = *(id *)&v6[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log];
      os_log(_:dso:log:_:_:)(v7, &_mh_execute_header);

    }
    sub_10006B85C(Strong);
    v9 = *(void **)&v6[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController];
    v10 = v9;
    a2(v9);

  }
}

BOOL sub_10006D3B8(char a1)
{
  uint64_t v1;
  void *v4;
  id v5;

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions) & 1) != 0
    || (*(_BYTE *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles) & 1) != 0
    || (sub_1000685A8() & 1) != 0 && (a1 & 1) == 0)
  {
    return 0;
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited) & 1) == 0)
  {
    v4 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    if (v4)
    {
      v5 = objc_msgSend(v4, "type");
      if (v5 == (id)7 || v5 == (id)4)
        return *(_BYTE *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice) != 2;
    }
  }
  return 1;
}

unint64_t sub_10006D4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10006D8CC(a1, a2, v5);
}

unint64_t sub_10006D510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10006D9AC(a1, v4);
}

uint64_t sub_10006D540(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t type metadata accessor for FBAFollowupDisplayTextCell()
{
  return objc_opt_self(_TtC18Feedback_Assistant26FBAFollowupDisplayTextCell);
}

uint64_t type metadata accessor for FBALastEmptyCell()
{
  return objc_opt_self(_TtC18Feedback_Assistant16FBALastEmptyCell);
}

uint64_t type metadata accessor for FollowupDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_100116E08;
  if (!qword_100116E08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FollowupDataSource);
  return result;
}

uint64_t sub_10006D5F0(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_1000CCBC8;
  v2[1] = &unk_1000CCBE0;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_100116DF8);
}

uint64_t sub_10006D640()
{
  return type metadata accessor for FollowupDataSource(0);
}

uint64_t type metadata accessor for FBAFollowupResponseViewController()
{
  return objc_opt_self(_TtC18Feedback_Assistant33FBAFollowupResponseViewController);
}

uint64_t getEnumTagSinglePayload for FBAFollowupResponseViewController.ReadinessState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FBAFollowupResponseViewController.ReadinessState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10006D744 + 4 * byte_1000CCB45[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10006D778 + 4 * byte_1000CCB40[v4]))();
}

uint64_t sub_10006D778(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006D780(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006D788);
  return result;
}

uint64_t sub_10006D794(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006D79CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10006D7A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006D7A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10006D7B4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for FBAFollowupResponseViewController.ReadinessState()
{
  return &type metadata for FBAFollowupResponseViewController.ReadinessState;
}

unint64_t sub_10006D7D0()
{
  unint64_t result;

  result = qword_100116F58;
  if (!qword_100116F58)
  {
    result = swift_getWitnessTable(&unk_1000CCCAC, &type metadata for FBAFollowupResponseViewController.ReadinessState);
    atomic_store(result, (unint64_t *)&qword_100116F58);
  }
  return result;
}

uint64_t sub_10006D814()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006D838()
{
  uint64_t v0;

  sub_1000680EC(v0);
}

unint64_t sub_10006D840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_10006DA70(a1, v7);
}

unint64_t sub_10006D8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10006D9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1000700A4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10006D540((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10006DA70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

Swift::Int sub_10006DBE4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004BB9C(&qword_100117010);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v14 << 6);
      goto LABEL_34;
    }
    v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v14;
    if (!v26)
    {
      v14 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v14);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v14 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v14 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v14);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v14 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      swift_bridgeObjectRetain(v38);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v44, v35, v34);
    result = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

uint64_t sub_10006DF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_10006D4A8(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10006E07C();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease(v21[1]);
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain(a4);
    }
    goto LABEL_14;
  }
  sub_10006DBE4(v17, a5 & 1);
  v23 = sub_10006D4A8(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void *sub_10006E07C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_10004BB9C(&qword_100117010);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    result = (void *)swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10006E234(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  _QWORD v10[2];

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v6 = (uint64_t *)(a3 + 16 * v4 + 24);
    do
    {
      v7 = *v6;
      v10[0] = *(v6 - 1);
      v10[1] = v7;
      swift_bridgeObjectRetain(v7);
      v8 = a1(v10);
      swift_bridgeObjectRelease(v7);
      if (v3)
        break;
      v6 -= 2;
      --v4;
    }
    while (!(v8 & 1 | (v4 == 0)));
  }
  return v4;
}

void *sub_10006E2EC(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  unint64_t v19;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v18 = v3;
    v19 = v3 & 0xC000000000000001;
    v5 = 4;
    while (1)
    {
      v7 = v19 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3) : *(id *)(v3 + 8 * v5);
      v6 = v7;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v7, "followupID");
      v10 = objc_msgSend(a2, "ID");
      v11 = v10;
      if (!v9)
      {
        if (!v10)
          goto LABEL_17;
        goto LABEL_5;
      }
      if (!v10)
      {
        v11 = v9;
LABEL_5:

        v6 = v11;
        goto LABEL_6;
      }
      sub_100053458(0, &qword_1001169A0, NSNumber_ptr);
      v12 = v4;
      v13 = a2;
      v14 = v9;
      v15 = static NSObject.== infix(_:_:)(v14, v11);

      a2 = v13;
      v4 = v12;
      v3 = v18;

      if ((v15 & 1) != 0)
      {
LABEL_17:
        swift_bridgeObjectRelease(v3);
        return v6;
      }
LABEL_6:

      ++v5;
      if (v8 == v4)
        goto LABEL_23;
    }
    __break(1u);
LABEL_19:
    if (v3 < 0)
      v16 = v3;
    else
      v16 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v16);
  }
LABEL_23:
  swift_bridgeObjectRelease(v3);
  return 0;
}

void sub_10006E4B8(char *a1, _BYTE *a2)
{
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  NSString v16;
  NSString v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  _QWORD *v23;
  char *v24;
  NSString v25;
  void *v26;
  void *v27;
  id v28;
  Swift::String v29;
  Swift::String v30;
  void *v31;
  _QWORD *v32;
  char *v33;
  NSString v34;
  void *v35;
  id v36;
  id v37;
  Swift::String v38;
  Swift::String v39;
  void *v40;
  uint64_t v41;
  char *v42;
  NSString v43;
  void *v44;
  id v45;
  _BYTE *v46;
  id v47;
  void **aBlock;
  uint64_t v49;
  void (*v50)(uint64_t, void *);
  void *v51;
  void *v52;
  _QWORD *v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;

  v4 = swift_allocObject(&unk_1000E95E8, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v5 = *(void **)&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController];
  if (v5)
  {
    v6 = a2;
    if ((objc_msgSend(v5, "hasUnmetRequirementAttachments") & 1) != 0)
    {
      v7 = (void *)objc_opt_self(NSBundle);
      v8 = objc_msgSend(v7, "mainBundle");
      v54._object = (void *)0xE000000000000000;
      v9._object = (void *)0x80000001000D6F90;
      v9._countAndFlagsBits = 0xD000000000000011;
      v10._countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      v54._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v54)._object;

      v12 = objc_msgSend(v7, "mainBundle");
      v13._countAndFlagsBits = 0xD000000000000019;
      v55._object = (void *)0xE000000000000000;
      v13._object = (void *)0x80000001000D6FB0;
      v14._countAndFlagsBits = 0;
      v14._object = (void *)0xE000000000000000;
      v55._countAndFlagsBits = 0;
      v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v55)._object;

      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, v17, 1);

      v19 = objc_msgSend(v7, "mainBundle");
      v56._object = (void *)0xE000000000000000;
      v20._object = (void *)0x80000001000D6FD0;
      v20._countAndFlagsBits = 0xD000000000000011;
      v21._countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      v56._countAndFlagsBits = 0;
      v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v56)._object;

      v23 = (_QWORD *)swift_allocObject(&unk_1000E9610, 40, 7);
      v23[2] = a1;
      v23[3] = sub_10006FF1C;
      v23[4] = v4;
      v24 = a1;
      swift_retain(v4);
      v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v22);
      v52 = sub_10006FF28;
      v53 = v23;
      aBlock = _NSConcreteStackBlock;
      v49 = 1107296256;
      v50 = sub_10004B098;
      v51 = &unk_1000E9628;
      v26 = _Block_copy(&aBlock);
      swift_release(v53);
      v27 = (void *)objc_opt_self(UIAlertAction);
      v47 = objc_msgSend(v27, "actionWithTitle:style:handler:", v25, 0, v26);
      _Block_release(v26);

      objc_msgSend(v18, "addAction:", v47);
      v28 = objc_msgSend(v7, "mainBundle");
      v57._object = (void *)0xE000000000000000;
      v29._countAndFlagsBits = 0x575F54494D425553;
      v29._object = (void *)0xEF53454C49465F4FLL;
      v30._countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      v57._countAndFlagsBits = 0;
      v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v57)._object;

      v32 = (_QWORD *)swift_allocObject(&unk_1000E9660, 40, 7);
      v32[2] = v24;
      v32[3] = sub_10006FF1C;
      v32[4] = v4;
      v33 = v24;
      swift_retain(v4);
      v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      v52 = sub_10006FF38;
      v53 = v32;
      aBlock = _NSConcreteStackBlock;
      v49 = 1107296256;
      v50 = sub_10004B098;
      v51 = &unk_1000E9678;
      v35 = _Block_copy(&aBlock);
      swift_release(v53);
      v36 = objc_msgSend(v27, "actionWithTitle:style:handler:", v34, 0, v35);
      _Block_release(v35);

      objc_msgSend(v18, "addAction:", v36);
      v37 = objc_msgSend(v7, "mainBundle");
      v58._object = (void *)0xE000000000000000;
      v38._countAndFlagsBits = 0x5F4F545F4B434142;
      v38._object = (void *)0xED00005446415244;
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      v58._countAndFlagsBits = 0;
      v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v58)._object;

      v41 = swift_allocObject(&unk_1000E96B0, 24, 7);
      *(_QWORD *)(v41 + 16) = v33;
      v42 = v33;
      v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v40);
      v52 = sub_10006FF9C;
      v53 = (_QWORD *)v41;
      aBlock = _NSConcreteStackBlock;
      v49 = 1107296256;
      v50 = sub_10004B098;
      v51 = &unk_1000E96C8;
      v44 = _Block_copy(&aBlock);
      swift_release(v53);
      v45 = objc_msgSend(v27, "actionWithTitle:style:handler:", v43, 1, v44);
      _Block_release(v44);

      objc_msgSend(v18, "addAction:", v45);
      objc_msgSend(v42, "presentViewController:animated:completion:", v18, 1, 0);
      swift_release(v4);

      return;
    }
  }
  else
  {
    v46 = a2;
  }
  sub_100065C00(0, a2);
  swift_release(v4);
}

id sub_10006EAC0(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;

  v2 = sub_100067BB4(a1);
  if (!v3)
    return 0;
  v4 = v2;
  v5 = v3;
  swift_unknownObjectRetain(v3);
  v6 = objc_opt_self(FBKAttachment);
  v7 = swift_dynamicCastObjCClass(v5, v6);
  if (((v7 != 0) & v4) != 1)
  {
    swift_unknownObjectRelease(v5);
    swift_unknownObjectRetain(v5);
    v12 = objc_opt_self(FBKGroupedDevice);
    v13 = swift_dynamicCastObjCClass(v5, v12);
    if (v13)
    {
      if ((v4 & 1) != 0)
      {
        v14 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
        if (v14)
        {
          v15 = v13;
          v10 = v14;
          v11 = objc_msgSend(v10, "trailingSwipeActionConfigurationWithDevice:fromViewController:", v15, v1);
          goto LABEL_9;
        }
      }
    }
    goto LABEL_10;
  }
  v8 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
  if (!v8)
  {
LABEL_10:
    swift_unknownObjectRelease_n(v5, 2);
    return 0;
  }
  v9 = v7;
  v10 = v8;
  v11 = objc_msgSend(v10, "trailingSwipeActionConfigurationWithAttachment:fromViewController:", v9, v1);
LABEL_9:
  v16 = v11;

  swift_unknownObjectRelease_n(v5, 2);
  return v16;
}

void sub_10006EBF0(uint64_t a1)
{
  char *v1;
  char *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  void ***p_aBlock;
  id v24;
  id v25;
  void *v26;
  NSIndexPath v27;
  id v28;
  void *v29;
  Class isa;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  Swift::String v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  Class v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  Swift::String v49;
  void *object;
  void **aBlock;
  unint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t);
  void *v54;
  void (*v55)(uint64_t);
  uint64_t v56;

  v2 = v1;
  v4 = (_QWORD *)type metadata accessor for IndexPath(0);
  v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (char *)sub_10006B024();
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v8[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v9);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_45;
  }
  v11 = Strong;
  objc_msgSend(Strong, "resignFirstResponder");

  v12 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource];
  if (!v12)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v13 = v12;
  dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)(&aBlock, a1);

  v15 = (char *)v52;
  if (!v52)
  {
LABEL_49:
    (*(void (**)(char *, uint64_t, _QWORD *))(v5 + 16))(v7, a1, v4);
    aBlock = 0;
    v52 = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease(v52);
    aBlock = (void **)0xD00000000000002ALL;
    v52 = 0x80000001000D71A0;
    v48 = sub_10004BD78((unint64_t *)&unk_100117040, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v49._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v4, v48);
    object = v49._object;
    p_aBlock = &aBlock;
    String.append(_:)(v49);
    swift_bridgeObjectRelease(object);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, aBlock, v52, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 607, 0);
    while (1)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, (char *)p_aBlock + 21, 0x80000001000D7220, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 639, 0);
    }
  }
  v7 = (char *)aBlock;
  v16 = static os_log_type_t.default.getter(v14);
  v4 = *(_QWORD **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log];
  v17 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1000CC730;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  *(_QWORD *)(v18 + 64) = sub_100051284();
  *(_QWORD *)(v18 + 32) = v7;
  *(_QWORD *)(v18 + 40) = v15;
  swift_bridgeObjectRetain(v15);
  os_log(_:dso:log:_:_:)(v16, &_mh_execute_header);
  swift_bridgeObjectRelease(v18);
  v19 = (char *)sub_10006B024();
  v21 = *(char **)&v19[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier];
  v20 = *(char **)&v19[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier + 8];
  swift_bridgeObjectRetain(v20);

  if (v7 != v21 || v15 != v20)
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v15, v21, v20, 0);
    swift_bridgeObjectRelease(v20);
    if ((v5 & 1) != 0
      || (p_aBlock = (void ***)0xD000000000000010, v7 == (char *)0xD000000000000010)
      && v15 == (char *)0x80000001000CCB70
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v15, 0xD000000000000010, 0x80000001000CCB70, 0) & 1) != 0)
    {
      v22 = v15;
      goto LABEL_12;
    }
    if (v7 == (char *)0xD00000000000001ALL && v15 == (char *)0x80000001000CCB50
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v15, 0xD00000000000001ALL, 0x80000001000CCB50, 0) & 1) != 0)
    {
      swift_bridgeObjectRelease(v15);
      v4 = String._bridgeToObjectiveC()();
      v24 = sub_10006AE80();
      objc_msgSend(v2, "performSegueWithIdentifier:sender:", v4, v24);

      v25 = objc_msgSend(v2, "tableView");
      if (v25)
      {
LABEL_18:
        v26 = v25;
        v27.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v26, "deselectRowAtIndexPath:animated:", v27.super.isa, 1);
LABEL_19:

        return;
      }
      goto LABEL_46;
    }
    if (v7 == (char *)qword_100116D10 && v15 == off_100116D18
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v15, qword_100116D10, off_100116D18, 0) & 1) != 0)
    {
      swift_bridgeObjectRelease(v15);
      v28 = objc_msgSend(v2, "tableView");
      if (!v28)
      {
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      v29 = v28;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v31 = objc_msgSend(v29, "cellForRowAtIndexPath:", isa);

      v32 = sub_100064810();
      v33 = v31;
      v34 = sub_1000588B8(v2, a1, v31);

      v35 = objc_msgSend(v34, "popoverPresentationController");
      if (v35)
      {
        v36 = v35;
        objc_msgSend(v35, "setPermittedArrowDirections:", 3);

      }
      objc_msgSend(v2, "presentViewController:animated:completion:", v34, 1, 0);
LABEL_27:

      return;
    }
    v37._countAndFlagsBits = 0xD000000000000015;
    v37._object = (void *)0x80000001000D6B10;
    if (String.hasPrefix(_:)(v37))
    {
      swift_bridgeObjectRelease(v15);
      v38 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
      if (!v38)
        goto LABEL_52;
      v39 = (void *)objc_opt_self(FBAFFUValidationCellChoices);
      v33 = v38;
      v34 = IndexPath._bridgeToObjectiveC()().super.isa;
      v40 = swift_allocObject(&unk_1000E9098, 24, 7);
      swift_unknownObjectWeakInit(v40 + 16, v2);
      v55 = sub_100070074;
      v56 = v40;
      aBlock = _NSConcreteStackBlock;
      v52 = 1107296256;
      v53 = sub_10004E98C;
      v54 = &unk_1000E9768;
      v41 = _Block_copy(&aBlock);
      swift_release(v56);
      objc_msgSend(v39, "showValidationChoicesForCellAtIndexPath:followup:fromViewController:completion:", v34, v33, v2, v41);
      _Block_release(v41);
      goto LABEL_27;
    }
    v5 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController;
    v42 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController];
    if (v42)
    {
      p_aBlock = v42;
      v7 = (char *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      v15 = (char *)objc_msgSend(p_aBlock, "maybeAttachmentWithIdentifier:", v7);

      if (v15)
      {
        if (objc_msgSend(v15, "canStartGathering"))
        {
          v43 = *(void **)&v2[v5];
          if (!v43)
            goto LABEL_51;
          v44 = v43;
          v4 = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v44, "gatherAttachment:answers:", v15, v4);

LABEL_42:
          v47 = objc_msgSend(v2, "tableView");
          if (v47)
          {
            v26 = v47;
            v27.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v26, "deselectRowAtIndexPath:animated:", v27.super.isa, 1);

            goto LABEL_19;
          }
          goto LABEL_48;
        }
LABEL_39:
        if (objc_msgSend(v15, "isReadyToDisplayContents"))
        {
          v45 = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v2, "presentAttachment:fromIndexPath:", v15, v45);

        }
        else
        {
          v46 = static os_log_type_t.info.getter();
          os_log(_:dso:log:_:_:)(v46, &_mh_execute_header);
        }
        goto LABEL_42;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v15);
    }
    v25 = objc_msgSend(v2, "tableView");
    if (v25)
      goto LABEL_18;
    __break(1u);
    goto LABEL_39;
  }
  swift_bridgeObjectRelease(v15);
  v22 = v20;
LABEL_12:
  swift_bridgeObjectRelease(v22);
}

void sub_10006F3DC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource);
  if (!v2)
  {
    __break(1u);
    return;
  }
  v4 = v2;
  dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)(&v7, a1);

  v5 = v8;
  if (v8)
  {
    if (v7 == 0xD000000000000010 && v8 == 0x80000001000CCB70)
    {
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0xD000000000000010, 0x80000001000CCB70, 0);
      swift_bridgeObjectRelease(v5);
      if ((v6 & 1) == 0)
        return;
    }
    if (qword_100115DE0 != -1)
      swift_once(&qword_100115DE0, sub_100063930);
  }
}

void sub_10006F4D8()
{
  char *v0;
  uint64_t v1;

  if ((v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_didAppear] & 1) != 0)
  {
    if (*(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem])
      objc_msgSend(v0, "updateRightBarButtonItemVisibility:");
    else
      __break(1u);
  }
  else
  {
    v1 = static os_log_type_t.debug.getter();
    os_log(_:dso:log:_:_:)(v1, &_mh_execute_header);
  }
}

void sub_10006F550(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  id v8;
  _BYTE v9[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    if (!*(_QWORD *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup))
    {
      v7 = static os_log_type_t.error.getter(Strong);
      v8 = *(id *)&v6[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log];
      os_log(_:dso:log:_:_:)(v7, &_mh_execute_header);

    }
    sub_10006B85C(Strong);
    (*(void (**)(uint64_t, _QWORD))(a2 + 16))(a2, *(_QWORD *)&v6[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController]);

  }
}

uint64_t sub_10006F620(_BYTE *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  void (**v10)();
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  _BYTE *v22;
  _QWORD aBlock[5];
  _QWORD *v24;

  v4 = swift_allocObject(&unk_1000E90C0, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v5 = swift_allocObject(&unk_1000E9098, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  v6 = (_QWORD *)swift_allocObject(&unk_1000E90E8, 40, 7);
  v6[2] = v5;
  v6[3] = sub_10006FB04;
  v6[4] = v4;
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup])
  {
    swift_retain_n(v5, 2);
    swift_retain_n(v4, 2);
    _Block_copy(a2);
    sub_10006F550(v5, (uint64_t)a2);
    swift_release(v4);
    swift_release(v5);
    v7 = v6;
LABEL_5:
    swift_release(v7);
LABEL_6:
    swift_release(v4);
    return swift_release(v5);
  }
  if ((a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] & 1) != 0)
  {
    swift_retain_n(v5, 2);
    swift_retain_n(v4, 2);
    v8 = _Block_copy(a2);
    v9 = static os_log_type_t.default.getter(v8);
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header);
    v10 = (void (**)())&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
    v11 = *(_QWORD *)&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
    v12 = *(_QWORD *)&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler
                       + 8];
    *v10 = sub_10006FB40;
    v10[1] = (void (*)())v6;
    sub_10005565C(v11, v12);
    swift_release(v4);
    v7 = (_QWORD *)v5;
    goto LABEL_5;
  }
  if (a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] == 1)
  {
    a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] = 1;
    v14 = (void *)objc_opt_self(FBKData);
    swift_retain_n(v5, 2);
    swift_retain_n(v4, 2);
    _Block_copy(a2);
    v15 = objc_msgSend(v14, "sharedInstance");
    v16 = *(void **)&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
    if (v16)
    {
      v17 = v15;
      v18 = (_QWORD *)swift_allocObject(&unk_1000E9110, 40, 7);
      v18[2] = a1;
      v18[3] = sub_10006FB40;
      v18[4] = v6;
      aBlock[4] = sub_10006FB50;
      v24 = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10005F158;
      aBlock[3] = &unk_1000E9128;
      v19 = _Block_copy(aBlock);
      v20 = v24;
      swift_retain(v6);
      v21 = v16;
      v22 = a1;
      swift_release(v20);
      objc_msgSend(v17, "createUnsolicitedFeedbackFollowupForItem:completion:", v21, v19);
      _Block_release(v19);
      swift_release(v4);
      swift_release(v5);
      swift_release(v6);

      goto LABEL_6;
    }
    swift_release(v4);
    swift_release(v5);
    _Block_release(a2);
    __break(1u);
  }
  swift_release(v4);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000022, 0x80000001000D6740, "Feedback_Assistant/FBAFollowupResponseViewController.swift", 58, 2, 362, 0);
  __break(1u);
  return result;
}

void sub_10006F970()
{
  char *v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  int v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v0 = (char *)sub_10006B024();
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v1);
  if (!Strong)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  v3 = (void *)Strong;
  v4 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing);

  if (v4 == 1)
  {
    v5 = (char *)sub_10006B024();
    v7 = (void *)swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v6);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "resignFirstResponder");

      return;
    }
    goto LABEL_7;
  }
}

void sub_10006FA30()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;

  v0 = static os_log_type_t.info.getter();
  os_log(_:dso:log:_:_:)(v0, &_mh_execute_header);
  v1 = (char *)sub_10006B024();
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing);

    if (v5 != 1)
    {
LABEL_5:
      sub_100066FC8(v6);
      return;
    }
    v7 = (char *)sub_10006B024();
    v9 = (void *)swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v8);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "resignFirstResponder");

      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10006FB04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10006FB14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10006FB40()
{
  uint64_t v0;

  sub_10006D210(*(_QWORD *)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

void sub_10006FB50(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100065EF4(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void))(v2 + 24));
}

uint64_t sub_10006FB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006FB6C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10006FB74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10006FB9C()
{
  uint64_t v0;
  id result;

  if (*(_BYTE *)(v0 + 16) == 1)
    return sub_100068200();
  return result;
}

uint64_t sub_10006FBC8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006FBEC(uint64_t a1)
{
  uint64_t v1;

  sub_10008EFC4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10006FBF4()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006FC18(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;

  return sub_10006ACA4(a1, a2, a3, a4, v4);
}

uint64_t sub_10006FC20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006FC44(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(v3 + 16))(a1, a2, *a3, a3[1]);
}

uint64_t sub_10006FC6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004BB9C(&qword_100117000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006FCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004BB9C(&qword_100117000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006FCFC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10006FD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  if (!__OFADD__(v1, 1))
    return sub_100069BF0(*(unsigned __int8 *)(v0 + 32), 0, 0, v1 + 1, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  __break(1u);
  return result;
}

uint64_t sub_10006FD70(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)(v1 + 16);
  v4 = *a1;
  v5 = a1[1];
  v6 = v3[1];
  if (v4 == *v3 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *v3, v6, 0) & 1;
}

_BYTE *sub_10006FDC4()
{
  uint64_t v0;

  return sub_100069254(*(_BYTE **)(v0 + 16));
}

void sub_10006FDCC(uint64_t a1)
{
  sub_100067258(a1);
}

uint64_t sub_10006FDEC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10006FE04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10006FE30()
{
  uint64_t v0;

  sub_100067660(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10006FE38()
{
  uint64_t v0;

  v0 = static os_log_type_t.default.getter();
  return os_log(_:dso:log:_:_:)(v0, &_mh_execute_header);
}

uint64_t sub_10006FE80(uint64_t a1)
{
  uint64_t v1;

  return sub_100067B4C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

void sub_10006FE8C(uint64_t a1)
{
  uint64_t v1;

  sub_100066D74(a1, v1);
}

uint64_t sub_10006FE94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006FEA4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10006FEE0()
{
  uint64_t v0;

  return sub_100066688(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10006FEF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10006FF14(uint64_t a1)
{
  uint64_t v1;

  return sub_1000667C0(a1, *(char **)(v1 + 16));
}

void sub_10006FF1C(char a1)
{
  uint64_t v1;

  sub_100065C00(a1, *(_BYTE **)(v1 + 16));
}

uint64_t sub_10006FF28(uint64_t a1)
{
  uint64_t v1;

  return sub_10006601C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD))(v1 + 24));
}

uint64_t sub_10006FF38()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  v2 = static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header);
  return v1(1);
}

uint64_t sub_10006FF9C()
{
  uint64_t v0;

  v0 = static os_log_type_t.default.getter();
  return os_log(_:dso:log:_:_:)(v0, &_mh_execute_header);
}

uint64_t sub_10006FFE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_10007000C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  sub_10006B85C(a1);
  sub_1000660A4(v2);
}

uint64_t sub_100070048()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100070074(uint64_t a1)
{
  uint64_t v1;

  sub_100067DE4(a1, v1);
}

id sub_10007007C()
{
  return sub_100068200();
}

void sub_10007009C(uint64_t a1)
{
  uint64_t v1;

  sub_100064F4C(a1, v1);
}

uint64_t sub_1000700A4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

id sub_100070450()
{
  return sub_1000728EC(type metadata accessor for FBAActionControllerAction);
}

uint64_t type metadata accessor for FBAActionControllerAction()
{
  return objc_opt_self(_TtC18Feedback_Assistant25FBAActionControllerAction);
}

id sub_1000704CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  char v18[24];
  objc_super v19;

  v9 = &v5[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_actions];
  *(_QWORD *)&v5[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_actions] = &_swiftEmptyArrayStorage;
  v10 = &v5[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_title];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v5[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_subtitle];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v13 = v5;
  swift_bridgeObjectRelease(v12);
  v14 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  swift_bridgeObjectRelease(v14);
  if (a5)
  {
    swift_beginAccess(v9, v18, 1, 0);
    v15 = *(_QWORD *)v9;
    *(_QWORD *)v9 = a5;

    swift_bridgeObjectRelease(v15);
  }
  else
  {

  }
  v16 = (objc_class *)type metadata accessor for FBAActionMenuController();
  v19.receiver = v13;
  v19.super_class = v16;
  return objc_msgSendSuper2(&v19, "init");
}

uint64_t sub_1000705C4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  objc_class *v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char *v17;
  char *v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE v26[24];
  objc_super v27;

  v11 = (objc_class *)type metadata accessor for FBAActionControllerAction();
  v12 = objc_allocWithZone(v11);
  v13 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(_QWORD *)&v12[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v12[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  v14 = &v12[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title];
  *v14 = a1;
  v14[1] = a2;
  v15 = *(void **)&v12[v13];
  *(_QWORD *)&v12[v13] = a3;
  v16 = a3;
  swift_bridgeObjectRetain(a2);
  swift_retain(a5);
  v17 = v12;

  v18 = &v17[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  *(_QWORD *)v18 = a4;
  *((_QWORD *)v18 + 1) = a5;
  swift_retain(a5);

  v27.receiver = v17;
  v27.super_class = v11;
  v19 = objc_msgSendSuper2(&v27, "init");

  swift_release(a5);
  v20 = (_QWORD *)(v5 + OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_actions);
  v21 = swift_beginAccess(v20, v26, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
  v23 = *(_QWORD *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v22 = *(_QWORD *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v23 >= v22 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
  v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v19);
  specialized Array._endMutation()(v24);
  return swift_endAccess(v26);
}

Class sub_1000707F0()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  Swift::String v4;
  void *v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  Class result;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *preferredElementSize;
  Swift::String v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  Swift::OpaquePointer children;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  UIImage_optional v41;

  v1 = v0;
  v39 = 0;
  v40 = 0xE000000000000000;
  v2 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_title + 8];
  if (v2)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_title];
    swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_title + 8]);
    v4._countAndFlagsBits = v3;
    v4._object = v2;
    String.append(_:)(v4);
    swift_bridgeObjectRelease(v2);
  }
  v5 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_subtitle + 8];
  if (v5)
  {
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_subtitle];
    swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_subtitle + 8]);
    v7._countAndFlagsBits = 10;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    v8._countAndFlagsBits = v6;
    v8._object = v5;
    String.append(_:)(v8);
    swift_bridgeObjectRelease(v5);
  }
  v9 = v39;
  v10 = (_QWORD *)v40;
  v11 = (uint64_t *)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_actions];
  swift_beginAccess(&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_actions], &v39, 0, 0);
  v12 = *v11;
  if (!((unint64_t)*v11 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v1;
    swift_bridgeObjectRetain(v12);
    if (v13)
      goto LABEL_7;
LABEL_25:
    swift_bridgeObjectRelease(v12);

    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_26:
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v32 = _swiftEmptyArrayStorage;
      else
        v32 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      v33 = sub_100053458(0, &qword_100117190, UIMenuElement_ptr);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      preferredElementSize = (_QWORD *)_bridgeCocoaArray<A>(_:)(v32, v33);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      goto LABEL_19;
    }
LABEL_18:
    v27 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v27);
    sub_100053458(0, &qword_100117190, UIMenuElement_ptr);
    preferredElementSize = _swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    sub_100053458(0, &qword_100117198, UIMenu_ptr);
    v29._countAndFlagsBits = v9;
    v29._object = v10;
    v41.value.super.isa = 0;
    v41.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v29, (Swift::String_optional)0, v41, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, children).super.super.isa;
  }
LABEL_21:
  if (v12 < 0)
    v30 = v12;
  else
    v30 = v12 & 0xFFFFFFFFFFFFFF8;
  v31 = v1;
  swift_bridgeObjectRetain(v12);
  v13 = _CocoaArrayWrapper.endIndex.getter(v30);
  if (!v13)
    goto LABEL_25;
LABEL_7:
  result = (Class)specialized ContiguousArray.reserveCapacity(_:)(v13);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v36 = v9;
    v37 = v1;
    v35 = v10;
    v38 = v12 & 0xC000000000000001;
    sub_100053458(0, &qword_100117188, UIAction_ptr);
    v16 = 0;
    v1 = (char *)v12;
    do
    {
      if (v13 == v16)
      {
        __break(1u);
        goto LABEL_21;
      }
      if (v38)
        v17 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v12);
      else
        v17 = *(id *)(v12 + 8 * v16 + 32);
      v18 = v17;
      ++v16;
      v19 = *(void **)&v17[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image];
      v20 = *(_QWORD *)&v17[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title];
      v21 = *(_QWORD *)&v17[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title + 8];
      if (v17[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive])
        v22 = 2;
      else
        v22 = 0;
      v10 = (_QWORD *)swift_allocObject(&unk_1000E9900, 32, 7);
      v10[2] = v18;
      v10[3] = v37;
      v23 = v19;
      v24 = v37;
      swift_bridgeObjectRetain(v21);
      children._rawValue = (void *)v22;
      v25 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v20, v21, 0, 0, v19, 0, 0, 0, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v25);
      v9 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v25);
      specialized ContiguousArray._endMutation()(v26);
      v12 = (uint64_t)v1;
    }
    while (v13 != v16);
    swift_bridgeObjectRelease(v1);

    v10 = v35;
    v9 = v36;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      goto LABEL_26;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

id sub_100070C64()
{
  return sub_1000728EC(type metadata accessor for FBAActionMenuController);
}

uint64_t type metadata accessor for FBAActionMenuController()
{
  return objc_opt_self(_TtC18Feedback_Assistant23FBAActionMenuController);
}

char *sub_100070CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  id v12;
  void *v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  void *v20;

  v6 = v5;
  v12 = objc_allocWithZone((Class)type metadata accessor for _FBAActionSheetController());
  sub_100071270(a1, a2, a3, a4, a5);
  v14 = v13;
  v15 = (char *)objc_msgSend(v6, "initWithRootViewController:", v13);
  v16 = *(void **)&v15[OBJC_IVAR____TtC18Feedback_Assistant24FBAActionSheetController_actionSheetController];
  *(_QWORD *)&v15[OBJC_IVAR____TtC18Feedback_Assistant24FBAActionSheetController_actionSheetController] = v14;
  v17 = v15;
  v18 = v14;

  objc_msgSend(v17, "setModalPresentationStyle:", 7);
  v19 = objc_msgSend(v17, "presentationController");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "setDelegate:", v17);

  }
  return v17;
}

void sub_100070DF8()
{
  void *v0;
  id v1;
  id v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for FBAActionSheetController();
  objc_msgSendSuper2(&v3, "viewDidLoad");
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  objc_msgSend(v0, "setDetentBehavior:", UIContentSizeCategory.isAccessibilityCategory.getter(v2) & 1);
}

void sub_100070EC4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  objc_class *v12;
  _BYTE *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  char *v19;
  char *v20;
  id v21;
  objc_super v22;

  v6 = *(void **)(v5 + OBJC_IVAR____TtC18Feedback_Assistant24FBAActionSheetController_actionSheetController);
  if (v6)
  {
    v12 = (objc_class *)type metadata accessor for FBAActionControllerAction();
    v13 = objc_allocWithZone(v12);
    v14 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
    *(_QWORD *)&v13[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
    v13[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
    v15 = &v13[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title];
    *v15 = a1;
    v15[1] = a2;
    v16 = *(void **)&v13[v14];
    *(_QWORD *)&v13[v14] = a3;
    v17 = a3;
    v18 = v6;
    swift_bridgeObjectRetain(a2);
    swift_retain(a5);
    v19 = v13;

    v20 = &v19[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
    *(_QWORD *)v20 = a4;
    *((_QWORD *)v20 + 1) = a5;
    swift_retain(a5);

    v22.receiver = v19;
    v22.super_class = v12;
    v21 = objc_msgSendSuper2(&v22, "init");

    swift_release(a5);
    sub_100071CFC(v21);

  }
  else
  {
    __break(1u);
  }
}

id sub_100071234()
{
  return sub_1000728EC(type metadata accessor for FBAActionSheetController);
}

uint64_t type metadata accessor for FBAActionSheetController()
{
  return objc_opt_self(_TtC18Feedback_Assistant24FBAActionSheetController);
}

void sub_100071270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  NSString v24;
  id v25;
  NSString v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  char v35[24];

  v6 = v5;
  v12 = (char *)objc_msgSend(v6, "initWithStyle:", 2);
  v13 = v12;
  if (a5)
  {
    v14 = &v12[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions];
    swift_beginAccess(&v12[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions], v35, 1, 0);
    v15 = *(_QWORD *)v14;
    *(_QWORD *)v14 = a5;
    v16 = v13;
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v17 = v12;
  }
  v18 = &v13[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerTitle];
  v19 = *(_QWORD *)&v13[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerTitle + 8];
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = a2;
  swift_bridgeObjectRelease(v19);
  v20 = &v13[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerSubtitle];
  v21 = *(_QWORD *)&v13[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerSubtitle + 8];
  *(_QWORD *)v20 = a3;
  *((_QWORD *)v20 + 1) = a4;
  swift_bridgeObjectRelease(v21);
  v22 = objc_msgSend(v13, "tableView");
  if (!v22)
  {
    __break(1u);
    goto LABEL_11;
  }
  v23 = v22;
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend((id)objc_opt_self(UINib), "nibWithNibName:bundle:", v24, 0);

  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "registerNib:forCellReuseIdentifier:", v25, v26);

  v27 = objc_msgSend(v13, "tableView");
  if (!v27)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v28 = v27;
  v29 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v28, "setBackgroundColor:", v29);

  v30 = objc_msgSend(v13, "tableView");
  if (!v30)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v31 = v30;
  objc_msgSend(v30, "setRowHeight:", UITableViewAutomaticDimension);

  v32 = objc_msgSend(v13, "tableView");
  if (!v32)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v33 = v32;
  objc_msgSend(v32, "setEstimatedRowHeight:", 60.0);

  v34 = objc_msgSend(v13, "tableView");
  if (v34)
  {
    objc_msgSend(v34, "reloadData");

    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_100071514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = a4;
  if (a3)
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v11 = v10;
    if (v8)
      goto LABEL_3;
LABEL_6:
    v13 = 0;
    if (a5)
      goto LABEL_4;
LABEL_7:
    v15 = 0;
    return a6(v9, v11, v8, v13, v15);
  }
  v9 = 0;
  v11 = 0;
  if (!a4)
    goto LABEL_6;
LABEL_3:
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v13 = v12;
  if (!a5)
    goto LABEL_7;
LABEL_4:
  v14 = type metadata accessor for FBAActionControllerAction();
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a5, v14);
  return a6(v9, v11, v8, v13, v15);
}

id sub_1000715C4()
{
  char *v0;
  objc_class *v1;
  id result;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;
  _BYTE v8[24];
  objc_super v9;

  v1 = (objc_class *)type metadata accessor for _FBAActionSheetController();
  v9.receiver = v0;
  v9.super_class = v1;
  objc_msgSendSuper2(&v9, "viewDidLoad");
  result = objc_msgSend(v0, "tableView");
  if (result)
  {
    v3 = result;
    objc_msgSend(result, "setShowsVerticalScrollIndicator:", 0);

    v4 = (uint64_t *)&v0[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions];
    swift_beginAccess(&v0[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions], v8, 0, 0);
    v5 = *v4;
    if ((unint64_t)v5 >> 62)
    {
      if (v5 < 0)
        v6 = v5;
      else
        v6 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      _CocoaArrayWrapper.endIndex.getter(v6);
      swift_bridgeObjectRelease(v5);
    }
    v7.receiver = v0;
    v7.super_class = v1;
    objc_msgSendSuper2(&v7, "preferredContentSize");
    return objc_msgSend(v0, "setPreferredContentSize:");
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100071774(char a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSString v10;
  id v11;
  uint64_t v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  NSString v17;
  objc_super v18;

  v18.receiver = v1;
  v18.super_class = (Class)type metadata accessor for _FBAActionSheetController();
  objc_msgSendSuper2(&v18, "viewWillAppear:", a1 & 1);
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerSubtitle + 8];
  if (v3)
  {
    v4 = objc_allocWithZone((Class)UIStackView);
    swift_bridgeObjectRetain(v3);
    v5 = objc_msgSend(v4, "init");
    objc_msgSend(v5, "setAxis:", 1);
    objc_msgSend(v5, "setSpacing:", 1.0);
    v6 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v7 = (void *)objc_opt_self(UIFont);
    v8 = objc_msgSend(v7, "systemFontOfSize:weight:", 16.0, UIFontWeightSemibold);
    objc_msgSend(v6, "setFont:", v8);

    v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerTitle + 8];
    if (v9)
    {
      swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerTitle
                                            + 8]);
      v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v9);
    }
    else
    {
      v10 = 0;
    }
    objc_msgSend(v6, "setText:", v10);

    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v5, "addArrangedSubview:", v6);
    v14 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v15 = objc_msgSend(v7, "systemFontOfSize:weight:", 14.0, UIFontWeightRegular);
    objc_msgSend(v14, "setFont:", v15);

    v16 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    objc_msgSend(v14, "setTextColor:", v16);

    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    objc_msgSend(v14, "setText:", v17);

    objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v5, "addArrangedSubview:", v14);
    v11 = objc_msgSend(v1, "navigationItem");
    v13 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v5);
    objc_msgSend(v11, "setLeftBarButtonItem:", v13);

  }
  else
  {
    v11 = objc_msgSend(v1, "navigationItem");
    v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerTitle + 8];
    if (v12)
    {
      swift_bridgeObjectRetain(v12);
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v11, "setTitle:", v13);
  }

}

void sub_100071B24(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  objc_class *v10;
  _BYTE *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char *v16;
  char *v17;
  id v18;
  objc_super v19;

  v10 = (objc_class *)type metadata accessor for FBAActionControllerAction();
  v11 = objc_allocWithZone(v10);
  v12 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v11[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  v13 = &v11[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title];
  *v13 = a1;
  v13[1] = a2;
  v14 = *(void **)&v11[v12];
  *(_QWORD *)&v11[v12] = a3;
  v15 = a3;
  swift_bridgeObjectRetain(a2);
  swift_retain(a5);
  v16 = v11;

  v17 = &v16[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  *(_QWORD *)v17 = a4;
  *((_QWORD *)v17 + 1) = a5;
  swift_retain(a5);

  v19.receiver = v16;
  v19.super_class = v10;
  v18 = objc_msgSendSuper2(&v19, "init");

  swift_release(a5);
  sub_100071CFC(v18);

}

uint64_t sub_100071C40(void *a1, int a2, uint64_t a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, void *, uint64_t, uint64_t))
{
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;

  v14 = _Block_copy(aBlock);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v17 = v16;
  v18 = swift_allocObject(a6, 24, 7);
  *(_QWORD *)(v18 + 16) = v14;
  v19 = a4;
  v20 = a1;
  a8(v15, v17, a4, a7, v18);

  swift_bridgeObjectRelease(v17);
  return swift_release(v18);
}

id sub_100071CFC(void *a1)
{
  char *v1;
  void *v2;
  uint64_t *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;
  _BYTE v14[24];

  v2 = v1;
  v4 = (uint64_t *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions];
  swift_beginAccess(v4, v14, 33, 0);
  v5 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v5);
  v7 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v7 >= v6 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
  v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v5);
  specialized Array._endMutation()(v8);
  swift_endAccess(v14);
  result = objc_msgSend(v2, "tableView");
  if (result)
  {
    v10 = result;
    objc_msgSend(result, "reloadData");

    v11 = *v4;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v12 = v11;
      else
        v12 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      _CocoaArrayWrapper.endIndex.getter(v12);
      swift_bridgeObjectRelease(v11);
    }
    v13.receiver = v2;
    v13.super_class = (Class)type metadata accessor for _FBAActionSheetController();
    objc_msgSendSuper2(&v13, "preferredContentSize");
    return objc_msgSend(v2, "setPreferredContentSize:");
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100072048(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v4;
  Class isa;
  id v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  NSString v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  UIAccessibilityTraits v26;
  id v27;
  _QWORD aBlock[5];
  uint64_t v29;
  _BYTE v30[24];

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v4, isa);

  v7 = type metadata accessor for FBAActionSheetCell();
  v8 = (char *)swift_dynamicCastClassUnconditional(v6, v7, 0, 0, 0);
  v9 = IndexPath.section.getter();
  v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions);
  result = swift_beginAccess(v10, v30, 0, 0);
  v12 = *v10;
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v12);
    v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v12);
    swift_bridgeObjectRelease(v12);
    goto LABEL_5;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v9 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v13 = (char *)*(id *)(v12 + 8 * v9 + 32);
LABEL_5:
  objc_msgSend(v8, "setSelectionStyle:", 2);
  v14 = OBJC_IVAR____TtC18Feedback_Assistant18FBAActionSheetCell_actionTitleLabel;
  v15 = *(void **)&v8[OBJC_IVAR____TtC18Feedback_Assistant18FBAActionSheetCell_actionTitleLabel];
  if (v15)
  {
    v16 = *(_QWORD *)&v13[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title + 8];
    v17 = v15;
    swift_bridgeObjectRetain(v16);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    objc_msgSend(v17, "setText:", v18);

  }
  v19 = OBJC_IVAR____TtC18Feedback_Assistant18FBAActionSheetCell_actionImageView;
  v20 = *(void **)&v8[OBJC_IVAR____TtC18Feedback_Assistant18FBAActionSheetCell_actionImageView];
  if (v20)
    objc_msgSend(v20, "setImage:", *(_QWORD *)&v13[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image]);
  v21 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_100052AB8;
  v29 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100072974;
  aBlock[3] = &unk_1000E9878;
  v22 = _Block_copy(aBlock);
  v23 = objc_msgSend(v21, "initWithDynamicProvider:", v22);
  _Block_release(v22);
  swift_release(v29);
  v24 = *(void **)&v8[v14];
  if (v24)
    objc_msgSend(v24, "setTextColor:", v23);
  v25 = *(void **)&v8[v19];
  if (v25)
    objc_msgSend(v25, "setTintColor:", v23);
  v26 = UIAccessibilityTraitButton;
  v27 = v6;
  objc_msgSend(v8, "setAccessibilityTraits:", v26);

  return (uint64_t)v8;
}

id sub_100072458(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _QWORD *v5;
  _QWORD *v6;
  NSString v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions] = _swiftEmptyArrayStorage;
  v5 = &v3[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerTitle];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerSubtitle];
  *v6 = 0;
  v6[1] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_dismissesOnAction] = 0;
  if (a2)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for _FBAActionSheetController();
  v9 = objc_msgSendSuper2(&v11, "initWithNibName:bundle:", v8, a3);

  return v9;
}

id sub_1000725F4()
{
  return sub_1000728EC(type metadata accessor for _FBAActionSheetController);
}

uint64_t sub_10007261C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *a3));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *a4 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *a5 + 8));
}

uint64_t type metadata accessor for _FBAActionSheetController()
{
  return objc_opt_self(_TtC18Feedback_Assistant25_FBAActionSheetController);
}

id sub_1000728E0()
{
  return sub_1000728EC(type metadata accessor for FBAActionSheetCell);
}

id sub_1000728EC(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for FBAActionSheetCell()
{
  return objc_opt_self(_TtC18Feedback_Assistant18FBAActionSheetCell);
}

id sub_100072974(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

uint64_t sub_1000729C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000729D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1000729DC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  char *v12;
  id v13;
  char *v14;
  objc_super v16;

  v9 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(_QWORD *)&v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  v10 = &v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title];
  *v10 = a1;
  v10[1] = a2;
  v11 = *(void **)&v5[v9];
  *(_QWORD *)&v5[v9] = a3;
  v12 = v5;
  v13 = a3;

  v14 = &v12[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  *(_QWORD *)v14 = a4;
  *((_QWORD *)v14 + 1) = a5;
  swift_retain(a5);

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for FBAActionControllerAction();
  return objc_msgSendSuper2(&v16, "init");
}

void sub_100072A8C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, "presentingViewController");
  if (!v1
    || (v2 = v1, v5 = objc_msgSend(v1, "traitCollection"), v2, !v5))
  {
    v5 = 0;
LABEL_7:
    v4 = objc_msgSend(v0, "navigationItem");
    objc_msgSend(v4, "setRightBarButtonItem:", 0);
    goto LABEL_8;
  }
  if (objc_msgSend(v5, "horizontalSizeClass") != (id)1 && objc_msgSend(v5, "verticalSizeClass") != (id)1)
    goto LABEL_7;
  v3 = objc_msgSend(v0, "navigationItem");
  v4 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v0, "dismissSelf");
  objc_msgSend(v3, "setRightBarButtonItem:", v4);

LABEL_8:
}

void sub_100072BC4()
{
  char *v0;
  char *v1;
  unint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12[24];

  v1 = v0;
  v2 = IndexPath.section.getter();
  v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions];
  swift_beginAccess(&v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions], v12, 0, 0);
  v4 = *(_QWORD *)v3;
  if ((v4 & 0xC000000000000001) == 0)
  {
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v2 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = (char *)*(id *)(v4 + 8 * v2 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain(v4);
  v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v4);
  swift_bridgeObjectRelease(v4);
LABEL_5:
  v7 = *(void (**)(uint64_t))&v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler + 8];
  swift_retain(v6);

  v8 = objc_msgSend(v1, "navigationController");
  if (!v8)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v9 = v8;
  v10 = type metadata accessor for FBAActionSheetController();
  v11 = swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0);
  v7(v11);
  swift_release(v6);

  if (v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_dismissesOnAction] == 1)
    objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
}

uint64_t sub_100072D18()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100072D3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100072D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler;
  v4 = *(void (**)(uint64_t))v2;
  v3 = *(_QWORD *)(v2 + 8);
  swift_retain(v3);
  v4(v1);
  return swift_release(v3);
}

uint64_t sub_100072DCC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v17;

  v1 = type metadata accessor for FBANotEnrolledView(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v17 - v5;
  v7 = swift_allocObject(&unk_1000E9AB8, 24, 7);
  *(_QWORD *)(v7 + 16) = v0;
  KeyPath = swift_getKeyPath(&unk_1000CCE28);
  v9 = (uint64_t *)&v6[*(int *)(v1 + 24)];
  *v9 = KeyPath;
  v10 = sub_10004BB9C(&qword_100116280);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  *v6 = 1;
  *((_QWORD *)v6 + 1) = sub_1000738D4;
  *((_QWORD *)v6 + 2) = v7;
  sub_1000556D0((uint64_t)v6, (uint64_t)v4);
  v11 = objc_allocWithZone((Class)sub_10004BB9C(&qword_100116690));
  v12 = v0;
  v13 = (void *)UIHostingController.init(rootView:)(v4);
  v14 = objc_msgSend(v12, "traitCollection");
  v15 = objc_msgSend(v14, "horizontalSizeClass");

  if (v15 == (id)1)
  {
    objc_msgSend(v13, "setModalPresentationStyle:", 0);
  }
  else
  {
    objc_msgSend(v13, "setModalPresentationStyle:", 2);
    objc_msgSend(v13, "setModalInPresentation:", 1);
  }
  objc_msgSend(v12, "presentViewController:animated:completion:", v13, 1, 0);

  return sub_100055714((uint64_t)v6);
}

void sub_10007306C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  _QWORD *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = type metadata accessor for AgreementConsentView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v26 - v11;
  if ((objc_msgSend(v3, "isPresentingConsentView") & 1) != 0)
    return;
  objc_msgSend(v3, "setIsPresentingConsentView:", 1);
  v13 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
  v14 = objc_msgSend(v13, "pendingConsents");

  if (!v14)
    return;
  v15 = sub_100053458(0, &qword_1001171A8, FBKSPendingConsent_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v24 = v16;
    else
      v24 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v16);
    if (v25)
      goto LABEL_5;
LABEL_14:
    swift_bridgeObjectRelease(v16);
    return;
  }
  if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_14;
LABEL_5:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
  }
  else
  {
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v17 = *(id *)(v16 + 32);
  }
  v18 = v17;
  swift_bridgeObjectRelease(v16);
  v19 = (_QWORD *)swift_allocObject(&unk_1000E99F0, 48, 7);
  v19[2] = v3;
  v19[3] = v18;
  v19[4] = a1;
  v19[5] = a2;
  v20 = v18;
  v21 = v3;
  sub_10004D620(a1, a2);
  AgreementConsentView.init(consent:completion:)(v20, sub_1000737E0, v19);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v22 = objc_allocWithZone((Class)sub_10004BB9C(&qword_1001171A0));
  v23 = (void *)UIHostingController.init(rootView:)(v10);
  objc_msgSend(v23, "setModalPresentationStyle:", 2);
  objc_msgSend(v23, "setModalInPresentation:", 1);
  objc_msgSend(v21, "presentViewController:animated:completion:", v23, 1, 0);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

void sub_10007332C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD aBlock[5];
  uint64_t v19;

  v10 = type metadata accessor for AgreementConsentView.ConsentResult(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a2, "setIsPresentingConsentView:", 0);
  v14 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for AgreementConsentView.ConsentResult.accepted(_:), v10);
  LOBYTE(a1) = static AgreementConsentView.ConsentResult.== infix(_:_:)(a1, v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v15 = swift_allocObject(&unk_1000E9A18, 32, 7);
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  aBlock[4] = sub_1000737F0;
  v19 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008F5C0;
  aBlock[3] = &unk_1000E9A30;
  v16 = _Block_copy(aBlock);
  v17 = v19;
  sub_10004D620(a4, a5);
  swift_release(v17);
  objc_msgSend(v14, "recordConsentResponseForConsent:response:completion:", a3, a1 & 1, v16);
  _Block_release(v16);

}

uint64_t sub_1000734C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter();
  v12 = swift_allocObject(&unk_1000E9A68, 32, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  aBlock[4] = sub_100073840;
  v23 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008F5C0;
  aBlock[3] = &unk_1000E9A80;
  v13 = _Block_copy(aBlock);
  v14 = v23;
  sub_10004D620(a1, a2);
  v15 = swift_release(v14);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100073868();
  v17 = sub_10004BB9C((uint64_t *)&unk_100116980);
  v18 = sub_10004BBDC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v4, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100073780()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000737A4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1000737E0(uint64_t a1)
{
  uint64_t v1;

  sub_10007332C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1000737F0()
{
  uint64_t v0;

  return sub_1000734C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000737F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100073808(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100073814()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100073840()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

unint64_t sub_100073868()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100115FB0;
  if (!qword_100115FB0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_100115FB0);
  }
  return result;
}

uint64_t sub_1000738B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000738D4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "signOutHandler");
}

uint64_t sub_1000738E4()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100073904()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100073924(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for ColorScheme(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return EnvironmentValues.colorScheme.setter(v3);
}

void sub_1000739E0()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  NSString v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  void *object;
  NSString v16;
  id v17;
  id v18;
  objc_super v19;
  Swift::String v20;

  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for FBAFFUDisplayTextViewController();
  objc_msgSendSuper2(&v19, "viewDidLoad");
  v1 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v1, "setLargeTitleDisplayMode:", 2);

  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18Feedback_Assistant31FBAFFUDisplayTextViewController_textView], v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant31FBAFFUDisplayTextViewController_displayText + 8];
    swift_bridgeObjectRetain(v5);
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    objc_msgSend(v4, "setText:", v6);

    v7 = objc_msgSend(v0, "navigationItem");
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
    v10 = v9;
    v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v20._object = (void *)0xE000000000000000;
    v12._object = (void *)0x80000001000D77C0;
    v12._countAndFlagsBits = 0xD00000000000001BLL;
    v13.value._countAndFlagsBits = v8;
    v13.value._object = v10;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v20)._object;
    swift_bridgeObjectRelease(v10);

    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v7, "setTitle:", v16);

    v17 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v0, "didTapDone");
    v18 = objc_msgSend(v0, "navigationItem");
    objc_msgSend(v18, "setRightBarButtonItem:", v17);

  }
  else
  {
    __break(1u);
  }
}

id sub_100073DA0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFFUDisplayTextViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAFFUDisplayTextViewController()
{
  return objc_opt_self(_TtC18Feedback_Assistant31FBAFFUDisplayTextViewController);
}

uint64_t FBKFilerFormType.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 1414743380;
  v2 = 5588550;
  if (a1 != 1)
    v2 = 0;
  if (a1 != 2)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 21062;
}

uint64_t sub_100073E78()
{
  uint64_t *v0;

  return FBKFilerFormType.description.getter(*v0);
}

uint64_t sub_100073E80()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_100050734(v0, qword_1001171E8);
  sub_10005067C(v0, (uint64_t)qword_1001171E8);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
  return Logger.init(subsystem:category:)(v1);
}

uint64_t sub_100073EF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a1;
  v1 = type metadata accessor for Date(0);
  v33 = *(_QWORD *)(v1 - 8);
  v34 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004BB9C(&qword_100117228);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004BB9C(&qword_100117248);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004BB9C((uint64_t *)&unk_100117250);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for DateComponents(0);
  v17 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, 1, 1, v4);
  v20 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v16, v13, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1);
  DateComponents.day.setter(-7, 0);
  v21 = objc_msgSend((id)objc_opt_self(NSCalendar), "currentCalendar");
  static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

  Date.init()();
  Calendar.date(byAdding:to:wrappingComponents:)(v19, v3, 0);
  v22 = v33;
  v23 = v34;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v3, v34);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v10, 1, v23) == 1)
  {
    v24 = v17;
    v25 = v32;
    sub_10004F588((uint64_t)v10, &qword_100117228);
    if (qword_100115DF0 != -1)
      swift_once(&qword_100115DF0, sub_100073E80);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_10005067C(v26, (uint64_t)qword_1001171E8);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Could not build date object for draft directories cleanup", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    static Date.distantFuture.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v19, v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v32);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v35, v10, v23);
  }
}

uint64_t sub_1000742F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004BB58();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.background(_:), v7);
  v11 = (void *)static OS_dispatch_queue.global(qos:)(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v12 = swift_allocObject(&unk_1000E9AE8, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_100075F70;
  v23 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008F5C0;
  aBlock[3] = &unk_1000E9B00;
  v13 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v13);
  v21 = _swiftEmptyArrayStorage;
  v14 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_10004BB9C((uint64_t *)&unk_100116980);
  v16 = sub_10004BBDC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v15, v16, v1, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v3, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  return swift_release(v23);
}

void sub_100074540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100115DF0 != -1)
    swift_once(&qword_100115DF0, sub_100073E80);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10005067C(v4, (uint64_t)qword_1001171E8);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Did start draft cleanup", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  sub_100073EF4((uint64_t)v3);
  sub_100075F90((uint64_t)v3, 0);
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  sub_100073EF4((uint64_t)v3);
  sub_100075F90((uint64_t)v3, 1);
  v10 = ((uint64_t (*)(char *, uint64_t))v9)(v3, v0);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Did start draft cleanup", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

}

id sub_100074868()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBADraftDirectoriesCleanUp();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBADraftDirectoriesCleanUp()
{
  return objc_opt_self(_TtC18Feedback_Assistant26FBADraftDirectoriesCleanUp);
}

void *sub_1000748BC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawBufferPointer.copyMemory source has too many elements", 69, 2, "Swift/UnsafeRawBufferPointer.swift", 34, 2, 487, 0);
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_100074950@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

void sub_100074978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSString *v35;
  NSString *v36;
  void *v37;
  uint64_t v38;
  __int128 v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t i;
  void *v71;
  void (*v72)(char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unsigned int v93;
  unint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  unint64_t v105;
  unint64_t v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  char v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  NSObject *v122;
  os_log_type_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  void (*v129)(char *, uint64_t);
  char *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  void (*v135)(char *, uint64_t);
  void *v136;
  BOOL v137;
  char *v138;
  id v139;
  unsigned __int8 v140;
  char *v141;
  void *v142;
  void *v143;
  unsigned int v144;
  void (*v145)(char *, uint64_t);
  void (*v146)(char *, uint64_t);
  void (*v147)(char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  NSObject *v151;
  os_log_type_t v152;
  uint8_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  NSObject *v162;
  os_log_type_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  unint64_t v171;
  uint64_t v172;
  os_log_t v173;
  void (*v174)(char *, uint64_t);
  int v175;
  void (*v176)(char *, uint64_t);
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  id v195;
  id v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  __int128 v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  char v212[8];
  uint64_t v213;
  uint64_t v214;
  char v215[8];
  id v216;
  uint64_t v217;
  void (*v218)(char *, uint64_t);
  __int128 v219;
  __int128 v220;
  uint64_t v221;
  NSURL v222;

  v199 = a2;
  v185 = a1;
  v4 = type metadata accessor for Logger(0);
  v205 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v203 = (char *)&v172 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = type metadata accessor for Date(0);
  v191 = *(_QWORD *)(v192 - 8);
  v6 = __chkstk_darwin(v192);
  v184 = (char *)&v172 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v190 = (char *)&v172 - v8;
  v9 = sub_10004BB9C(&qword_100117228);
  v10 = __chkstk_darwin(v9);
  v186 = (uint64_t)&v172 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v188 = (char *)&v172 - v13;
  __chkstk_darwin(v12);
  v189 = (uint64_t)&v172 - v14;
  v198 = type metadata accessor for URLResourceValues(0);
  v194 = *(_QWORD *)(v198 - 8);
  v15 = __chkstk_darwin(v198);
  v187 = (char *)&v172 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v197 = (char *)&v172 - v17;
  v18 = sub_10004BB9C(&qword_100116790);
  __chkstk_darwin(v18);
  v20 = (char *)&v172 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for URL(0);
  v210 = *(_QWORD *)(v21 - 8);
  v22 = __chkstk_darwin(v21);
  v193 = (char *)&v172 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v172 - v25;
  v27 = __chkstk_darwin(v24);
  v183 = (char *)&v172 - v28;
  __chkstk_darwin(v27);
  v204 = (char *)&v172 - v29;
  v202 = type metadata accessor for NSFastEnumerationIterator(0);
  v201 = *(_QWORD *)(v202 - 8);
  __chkstk_darwin(v202);
  v31 = (char *)&v172 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v33 = sub_10004BB9C(&qword_100117230);
  v34 = swift_allocObject(v33, 48, 7);
  *(_OWORD *)(v34 + 16) = xmmword_1000CC8F0;
  *(_QWORD *)(v34 + 32) = NSURLContentModificationDateKey;
  *(_QWORD *)(v34 + 40) = NSURLCreationDateKey;
  v35 = NSURLContentModificationDateKey;
  v36 = NSURLCreationDateKey;
  v37 = (void *)NSFileManager.enumerator(at:includingPropertiesForKeys:options:errorHandler:)(a3, v34, 0, 0, 0);
  if (!v37)
  {
    swift_bridgeObjectRelease(v34);
    if (qword_100115DF0 != -1)
      swift_once(&qword_100115DF0, sub_100073E80);
    sub_10005067C(v4, (uint64_t)qword_1001171E8);
    v149 = v210;
    v150 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v210 + 16))(v26, a3, v21);
    v151 = Logger.logObject.getter(v150);
    v152 = static os_log_type_t.error.getter(v151);
    if (os_log_type_enabled(v151, v152))
    {
      v153 = (uint8_t *)swift_slowAlloc(12, -1);
      v154 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v220 = v154;
      *(_DWORD *)v153 = 136315138;
      v211 = (char *)(v153 + 4);
      v155 = sub_10004BD78(&qword_100116870, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v156 = dispatch thunk of CustomStringConvertible.description.getter(v21, v155);
      v158 = v157;
      *(_QWORD *)&v219 = sub_100094680(v156, v157, (uint64_t *)&v220);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v219, (char *)&v219 + 8);
      swift_bridgeObjectRelease(v158);
      (*(void (**)(char *, uint64_t))(v149 + 8))(v26, v21);
      _os_log_impl((void *)&_mh_execute_header, v151, v152, "Could not reach enumerator at url %s", v153, 0xCu);
      swift_arrayDestroy(v154, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v154, -1, -1);
      swift_slowDealloc(v153, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v149 + 8))(v26, v21);
    }
    return;
  }
  v200 = v34;
  v196 = v32;
  v195 = v37;
  v38 = NSEnumerator.makeIterator()();
  NSFastEnumerationIterator.next()(&v220, v38);
  v40 = (char *)&type metadata for Any;
  v41 = v31;
  if (!v221)
  {
    v182 = 0;
    v42 = 0;
    goto LABEL_57;
  }
  v42 = 0;
  v182 = 0;
  v181 = 0;
  v178 = FBKDraftDirectoriesCleanUpDryRun;
  v211 = (char *)&type metadata for Any + 8;
  v179 = 0x80000001000D7850;
  *(_QWORD *)&v39 = 136315394;
  v180 = v39;
  *(_QWORD *)&v39 = 136315138;
  v206 = v39;
  v208 = v4;
  v43 = v210;
  v209 = v31;
  v207 = v20;
  while (2)
  {
    v44 = v42;
    while (1)
    {
      sub_100075EC4(&v220, &v219);
      v42 = v44 + 1;
      if (__OFADD__(v44, 1))
      {
        __break(1u);
        goto LABEL_75;
      }
      sub_1000506D8((uint64_t)&v219, (uint64_t)&v218);
      v46 = swift_dynamicCast(v20, &v218, v211, v21, 6);
      v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
      if (!v46)
      {
        v47(v20, 1, 1, v21);
        goto LABEL_12;
      }
      v47(v20, 0, 1, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v20, 1, v21) != 1)
        break;
LABEL_12:
      sub_10004F588((uint64_t)v20, &qword_100116790);
      if (qword_100115DF0 != -1)
        swift_once(&qword_100115DF0, sub_100073E80);
      sub_10005067C(v4, (uint64_t)qword_1001171E8);
      v48 = sub_1000506D8((uint64_t)&v219, (uint64_t)&v218);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.error.getter(v49);
      if (os_log_type_enabled(v49, v50))
      {
        v51 = swift_slowAlloc(12, -1);
        v52 = swift_slowAlloc(32, -1);
        v217 = v52;
        *(_DWORD *)v51 = v206;
        sub_1000506D8((uint64_t)&v218, (uint64_t)&v216);
        v53 = v40 + 8;
        v54 = String.init<A>(describing:)(&v216, v40 + 8);
        v55 = v21;
        v56 = v40;
        v58 = v57;
        *(_QWORD *)(v51 + 4) = sub_100094680(v54, v57, &v217);
        v59 = v58;
        v40 = v56;
        v21 = v55;
        v42 = v44 + 1;
        swift_bridgeObjectRelease(v59);
        sub_100050714(&v218);
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "Failed to parse enumerated object as a URL: %s", (uint8_t *)v51, 0xCu);
        v60 = v53;
        v4 = v208;
        swift_arrayDestroy(v52, 1, v60);
        v61 = v52;
        v43 = v210;
        swift_slowDealloc(v61, -1, -1);
        v62 = v51;
        v41 = v209;
        v20 = v207;
        swift_slowDealloc(v62, -1, -1);

      }
      else
      {

        sub_100050714(&v218);
      }
      v45 = sub_100050714(&v219);
      NSFastEnumerationIterator.next()(&v220, v45);
      ++v44;
      if (!v221)
        goto LABEL_57;
    }
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v204, v20, v21);
    v63 = v200;
    v64 = *(_QWORD *)(v200 + 16);
    type metadata accessor for URLResourceKey(0);
    v66 = v65;
    v67 = sub_10004BD78(&qword_100116088, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1000CC1AC);
    swift_bridgeObjectRetain(v63);
    v68 = (void *)Set.init(minimumCapacity:)(v64, v66, v67);
    v218 = (void (*)(char *, uint64_t))v68;
    v69 = *(_QWORD *)(v63 + 16);
    v177 = v42;
    if (v69)
    {
      for (i = 0; i != v69; ++i)
      {
        v71 = *(void **)(v63 + 8 * i + 32);
        sub_10007FB2C(&v216, v71);

      }
      swift_bridgeObjectRelease(v63);
      v72 = v218;
    }
    else
    {
      v72 = v68;
      swift_bridgeObjectRelease(v63);
    }
    v73 = v197;
    v74 = v181;
    URL.resourceValues(forKeys:)((void (*)(char *, uint64_t))v72);
    v75 = v198;
    v76 = v194;
    if (v74)
    {
      swift_bridgeObjectRelease((void (*)(char *, uint64_t))v72);
      v77 = v74;
      v78 = v193;
      goto LABEL_29;
    }
    v181 = 0;
    v79 = swift_bridgeObjectRelease((void (*)(char *, uint64_t))v72);
    v80 = (uint64_t)v188;
    URLResourceValues.contentModificationDate.getter(v79);
    v81 = v187;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v187, v73, v75);
    v82 = v191;
    v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48);
    v84 = v192;
    if (v83(v80, 1, v192) == 1)
    {
      v85 = v189;
      URLResourceValues.creationDate.getter();
      v84 = v192;
      v86 = v81;
      v87 = *(void (**)(char *, uint64_t))(v76 + 8);
      v88 = v75;
      v89 = v85;
      v87(v86, v88);
      sub_10004F588(v80, &qword_100117228);
    }
    else
    {
      v90 = v81;
      v87 = *(void (**)(char *, uint64_t))(v76 + 8);
      v87(v90, v75);
      v89 = v189;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v189, v80, v84);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v89, 0, 1, v84);
    }
    v91 = v190;
    v92 = v186;
    sub_100075ED4(v89, v186);
    v93 = v83(v92, 1, v84);
    v78 = v193;
    if (v93 == 1)
    {
      sub_10004F588(v92, &qword_100117228);
      v94 = sub_100075F1C();
      v77 = swift_allocError(&type metadata for FBAError.NotLocalized, v94, 0, 0);
      *v95 = 0xD000000000000011;
      v95[1] = v179;
      swift_willThrow(v77);
      sub_10004F588(v89, &qword_100117228);
      v87(v197, v198);
LABEL_28:
      v43 = v210;
LABEL_29:
      v96 = v204;
      if (qword_100115DF0 != -1)
        swift_once(&qword_100115DF0, sub_100073E80);
      v181 = 0;
      sub_10005067C(v4, (uint64_t)qword_1001171E8);
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v78, v96, v21);
      swift_errorRetain(v77);
      v97 = swift_errorRetain(v77);
      v98 = Logger.logObject.getter(v97);
      v99 = static os_log_type_t.error.getter(v98);
      v100 = v99;
      if (os_log_type_enabled(v98, v99))
      {
        v101 = swift_slowAlloc(22, -1);
        v176 = (void (*)(char *, uint64_t))swift_slowAlloc(64, -1);
        v218 = v176;
        *(_DWORD *)v101 = v180;
        v102 = sub_10004BD78(&qword_100116870, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v175 = v100;
        v103 = dispatch thunk of CustomStringConvertible.description.getter(v21, v102);
        v104 = v98;
        v106 = v105;
        *(_QWORD *)(v101 + 4) = sub_100094680(v103, v105, (uint64_t *)&v218);
        swift_bridgeObjectRelease(v106);
        v107 = *(void (**)(char *, uint64_t))(v210 + 8);
        v107(v78, v21);
        *(_WORD *)(v101 + 12) = 2080;
        swift_getErrorValue(v77, v215, v212);
        v108 = Error.localizedDescription.getter(v213, v214);
        v110 = v109;
        *(_QWORD *)(v101 + 14) = sub_100094680(v108, v109, (uint64_t *)&v218);
        swift_bridgeObjectRelease(v110);
        swift_errorRelease(v77);
        swift_errorRelease(v77);
        _os_log_impl((void *)&_mh_execute_header, v104, (os_log_type_t)v175, "Failed to clean up draft directory: %s error: %s", (uint8_t *)v101, 0x16u);
        v40 = (char *)&type metadata for Any;
        v111 = v176;
        swift_arrayDestroy(v176, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v111, -1, -1);
        swift_slowDealloc(v101, -1, -1);

        swift_errorRelease(v77);
        v107(v204, v21);
        v43 = v210;
        v112 = sub_100050714(&v219);
        goto LABEL_35;
      }

      swift_errorRelease(v77);
      swift_errorRelease(v77);
      v113 = *(void (**)(char *, uint64_t))(v43 + 8);
      v113(v78, v21);
      swift_errorRelease(v77);
      v113(v96, v21);
      v112 = sub_100050714(&v219);
LABEL_34:
      v40 = (char *)&type metadata for Any;
LABEL_35:
      v41 = v209;
      v42 = v177;
    }
    else
    {
      v114 = v191;
      (*(void (**)(char *, uint64_t, uint64_t))(v191 + 32))(v91, v92, v84);
      v115 = static Date.< infix(_:_:)(v91, v185);
      v42 = v177;
      if ((v115 & 1) != 0)
      {
        v176 = v87;
        if (qword_100115DF0 != -1)
          swift_once(&qword_100115DF0, sub_100073E80);
        sub_10005067C(v4, (uint64_t)qword_1001171E8);
        v116 = v210;
        v117 = v183;
        (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v183, v204, v21);
        v118 = v191;
        v119 = v184;
        v120 = v192;
        v121 = (*(uint64_t (**)(char *, char *, uint64_t))(v191 + 16))(v184, v190, v192);
        v122 = Logger.logObject.getter(v121);
        v123 = static os_log_type_t.info.getter();
        v175 = v123;
        if (os_log_type_enabled(v122, v123))
        {
          v124 = v117;
          v125 = swift_slowAlloc(22, -1);
          v174 = (void *)swift_slowAlloc(64, -1);
          v218 = (void (*)(char *, uint64_t))v174;
          *(_DWORD *)v125 = v180;
          v173 = v122;
          v126 = URL.path.getter();
          v128 = v127;
          *(_QWORD *)(v125 + 4) = sub_100094680(v126, v127, (uint64_t *)&v218);
          swift_bridgeObjectRelease(v128);
          v129 = *(void (**)(char *, uint64_t))(v116 + 8);
          v130 = v124;
          v42 = v177;
          v129(v130, v21);
          *(_WORD *)(v125 + 12) = 2082;
          v131 = sub_10004BD78(&qword_100117240, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
          v132 = dispatch thunk of CustomStringConvertible.description.getter(v120, v131);
          v134 = v133;
          *(_QWORD *)(v125 + 14) = sub_100094680(v132, v133, (uint64_t *)&v218);
          swift_bridgeObjectRelease(v134);
          v135 = *(void (**)(char *, uint64_t))(v118 + 8);
          v135(v119, v120);
          v122 = v173;
          _os_log_impl((void *)&_mh_execute_header, v173, (os_log_type_t)v175, "Deleting stale draft directory: %s date: %{public}s", (uint8_t *)v125, 0x16u);
          v136 = v174;
          swift_arrayDestroy((void (*)(char *, uint64_t))v174, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v136, -1, -1);
          swift_slowDealloc(v125, -1, -1);
        }
        else
        {
          v129 = *(void (**)(char *, uint64_t))(v116 + 8);
          v129(v117, v21);
          v135 = *(void (**)(char *, uint64_t))(v118 + 8);
          v135(v119, v120);
        }

        v137 = __OFADD__(v182++, 1);
        v138 = v190;
        if (v137)
          __break(1u);
        v139 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v140 = objc_msgSend(v139, "BOOLForKey:", v178);

        if ((v140 & 1) == 0)
        {
          v141 = v204;
          URL._bridgeToObjectiveC()(&v222);
          v143 = v142;
          v218 = 0;
          v144 = objc_msgSend(v196, "removeItemAtURL:error:", v142, &v218);

          v145 = v218;
          if (!v144)
          {
            v147 = v218;
            v77 = _convertNSErrorToError(_:)((void (*)(char *, uint64_t))v145);

            swift_willThrow(v148);
            v135(v138, v192);
            sub_10004F588(v189, &qword_100117228);
            v176(v197, v198);
            v4 = v208;
            goto LABEL_28;
          }
          v146 = v218;
          v135(v138, v192);
          sub_10004F588(v189, &qword_100117228);
          v176(v197, v198);
          v129(v141, v21);
          v112 = sub_100050714(&v219);
          v4 = v208;
          v43 = v210;
          goto LABEL_34;
        }
        v135(v138, v192);
        sub_10004F588(v189, &qword_100117228);
        v176(v197, v198);
        v129(v204, v21);
        v112 = sub_100050714(&v219);
        v4 = v208;
        v43 = v210;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v114 + 8))(v91, v84);
        sub_10004F588(v189, &qword_100117228);
        v87(v197, v198);
        v43 = v210;
        (*(void (**)(char *, uint64_t))(v210 + 8))(v204, v21);
        v112 = sub_100050714(&v219);
      }
      v40 = (char *)&type metadata for Any;
      v41 = v209;
    }
    NSFastEnumerationIterator.next()(&v220, v112);
    if (v221)
      continue;
    break;
  }
LABEL_57:
  (*(void (**)(char *, uint64_t))(v201 + 8))(v41, v202);
  swift_bridgeObjectRelease(v200);
  if (qword_100115DF0 != -1)
LABEL_75:
    swift_once(&qword_100115DF0, sub_100073E80);
  v159 = sub_10005067C(v4, (uint64_t)qword_1001171E8);
  v160 = v203;
  v161 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v205 + 16))(v203, v159, v4);
  v162 = Logger.logObject.getter(v161);
  v163 = static os_log_type_t.default.getter(v162);
  if (os_log_type_enabled(v162, v163))
  {
    v164 = swift_slowAlloc(32, -1);
    v165 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v220 = v165;
    *(_DWORD *)v164 = 134218498;
    *(_QWORD *)&v219 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v219, (char *)&v219 + 8);
    v166 = 0xE000000000000000;
    *(_WORD *)(v164 + 12) = 2080;
    v167 = 1414743380;
    v168 = 5588550;
    if (v199 == 1)
      v166 = 0xE300000000000000;
    else
      v168 = 0;
    if (v199 == 2)
      v166 = 0xE400000000000000;
    else
      v167 = v168;
    if (v199)
      v169 = v167;
    else
      v169 = 21062;
    v170 = v40;
    if (v199)
      v171 = v166;
    else
      v171 = 0xE200000000000000;
    *(_QWORD *)&v219 = sub_100094680(v169, v171, (uint64_t *)&v220);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v219, (char *)&v219 + 8);
    swift_bridgeObjectRelease(v171);
    *(_WORD *)(v164 + 22) = 2048;
    *(_QWORD *)&v219 = v182;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v219, (char *)&v219 + 8);
    _os_log_impl((void *)&_mh_execute_header, v162, v163, "Found [%ld] %s draft directories, deleted [%ld]", (uint8_t *)v164, 0x20u);
    swift_arrayDestroy(v165, 1, v170 + 8);
    swift_slowDealloc(v165, -1, -1);
    swift_slowDealloc(v164, -1, -1);

    (*(void (**)(char *, uint64_t))(v205 + 8))(v160, v4);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v205 + 8))(v160, v4);
  }
}

_OWORD *sub_100075EC4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100075ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004BB9C(&qword_100117228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100075F1C()
{
  unint64_t result;

  result = qword_100117238;
  if (!qword_100117238)
  {
    result = swift_getWitnessTable(&unk_1000CD544, &type metadata for FBAError.NotLocalized);
    atomic_store(result, (unint64_t *)&qword_100117238);
  }
  return result;
}

uint64_t sub_100075F60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100075F70()
{
  sub_100074540();
}

uint64_t sub_100075F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100075F88(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100075F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v18;

  v4 = sub_10004BB9C(&qword_100116790);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v18 - v12;
  v14 = objc_msgSend((id)objc_opt_self(FBKFileManager), "draftDirectoryForFilerType:", a2);
  if (v14)
  {
    v15 = v14;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v14);

    v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v16(v6, v11, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    if ((_DWORD)result != 1)
    {
      v16(v13, v6, v7);
      sub_100074978(a1, a2, (uint64_t)v13);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_100076124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("com.apple.appleseed.FeedbackAssistant"));
  v2 = v1;
  sub_100053458(0, (unint64_t *)&qword_100116558, OS_os_log_ptr);
  result = OS_os_log.init(subsystem:category:)(v0, v2, 0x726174617661, 0xE600000000000000);
  qword_100117260 = result;
  return result;
}

int64x2_t sub_100076198()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4044000000000000uLL);
  xmmword_100117268 = (__int128)result;
  return result;
}

id sub_1000761F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAAvatarHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAAvatarHelper()
{
  return objc_opt_self(_TtC18Feedback_Assistant15FBAAvatarHelper);
}

id sub_100076260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v12 = v11;
  v13 = (void *)a5(v7, v9, v10, v11);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v12);
  return v13;
}

id sub_100076308(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  NSString v17;

  v8 = objc_msgSend(objc_allocWithZone((Class)PRMonogram), "init");
  swift_bridgeObjectRetain(a2);
  v9 = sub_100089AC8(a1, a2);
  v11 = v10;
  swift_bridgeObjectRelease(a2);
  if (v11)
  {
    v12._countAndFlagsBits = v9;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease(v11);
  }
  swift_bridgeObjectRetain(a4);
  v13 = sub_100089AC8(a3, a4);
  v15 = v14;
  swift_bridgeObjectRelease(a4);
  if (v15)
  {
    v16._countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(v15);
  }
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xE000000000000000);
  objc_msgSend(v8, "setText:", v17, 0);

  return v8;
}

uint64_t sub_100076420(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString *v10;
  Class isa;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unsigned int v31;
  _QWORD v32[3];
  _BYTE v33[16];
  id v34;

  v4 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v5 = (void *)objc_opt_self(CNContact);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "predicateForContactsMatchingEmailAddress:", v6);

  v8 = sub_10004BB9C((uint64_t *)&unk_100117030);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1000CCB30;
  *(_QWORD *)(v9 + 32) = CNContactThumbnailImageDataKey;
  v34 = (id)v9;
  specialized Array._endMutation()(v9);
  v10 = CNContactThumbnailImageDataKey;
  sub_10004BB9C(&qword_1001172A8);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v34);
  v34 = 0;
  v12 = objc_msgSend(v4, "unifiedContactsMatchingPredicate:keysToFetch:error:", v7, isa, &v34);

  v13 = v34;
  if (!v12)
  {
    v19 = v34;
    v12 = (id)_convertNSErrorToError(_:)(v13);

    v21 = swift_willThrow(v20);
    v31 = static os_log_type_t.error.getter(v21);
    if (qword_100115DF8 == -1)
    {
LABEL_10:
      v22 = sub_10004BB9C((uint64_t *)&unk_100116860);
      v23 = swift_allocObject(v22, 112, 7);
      *(_OWORD *)(v23 + 16) = xmmword_1000CC8F0;
      *(_QWORD *)(v23 + 56) = &type metadata for String;
      v24 = sub_100051284();
      *(_QWORD *)(v23 + 64) = v24;
      *(_QWORD *)(v23 + 32) = a1;
      *(_QWORD *)(v23 + 40) = a2;
      swift_getErrorValue(v12, v33, v32);
      v25 = v32[1];
      v26 = v32[2];
      swift_bridgeObjectRetain(a2);
      v27 = Error.localizedDescription.getter(v25, v26);
      *(_QWORD *)(v23 + 96) = &type metadata for String;
      *(_QWORD *)(v23 + 104) = v24;
      *(_QWORD *)(v23 + 72) = v27;
      *(_QWORD *)(v23 + 80) = v28;
      os_log(_:dso:log:_:_:)(v31, &_mh_execute_header);
      swift_bridgeObjectRelease(v23);
      swift_errorRelease(v12);

      return 0;
    }
LABEL_19:
    swift_once(&qword_100115DF8, sub_100076124);
    goto LABEL_10;
  }
  v14 = sub_100053458(0, &qword_1001172B0, CNContact_ptr);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v14);
  v16 = v13;

  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v30 = v15;
    else
      v30 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v17 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v15);
    if (!v17)
      goto LABEL_8;
    goto LABEL_4;
  }
  v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v17)
  {
LABEL_4:
    if ((v15 & 0xC000000000000001) != 0)
    {
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
      goto LABEL_7;
    }
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = *(id *)(v15 + 32);
LABEL_7:
      v17 = (uint64_t)v18;
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_8:
  swift_bridgeObjectRelease(v15);

  return v17;
}

void sub_100076768(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  NSString v17;
  id v18;
  double v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;

  v8 = objc_msgSend(objc_allocWithZone((Class)PRMonogram), "init");
  swift_bridgeObjectRetain(a2);
  v9 = sub_100089AC8(a1, a2);
  v11 = v10;
  swift_bridgeObjectRelease(a2);
  if (v11)
  {
    v12._countAndFlagsBits = v9;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease(v11);
  }
  swift_bridgeObjectRetain(a4);
  v13 = sub_100089AC8(a3, a4);
  v15 = v14;
  swift_bridgeObjectRelease(a4);
  if (v15)
  {
    v16._countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(v15);
  }
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xE000000000000000);
  objc_msgSend(v8, "setText:", v17, 0);

  v18 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v18, "scale");
  v20 = v19;

  v21 = objc_msgSend(v8, "snapshotWithSize:scale:options:", 0, 24.0, 24.0, v20);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, "imageWithRenderingMode:", 1);

    if (v23)
      goto LABEL_8;
  }
  v24 = (void *)FBKSystemImageNameGenericUser;
  v25 = (void *)objc_opt_self(UIImage);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;
  v28 = v24;
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27);
  v30 = objc_msgSend(v25, "systemImageNamed:", v29);

  if (v30)
LABEL_8:

  else
    __break(1u);
}

void sub_100076994(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  id v24;
  double v25;
  double v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSString v35;
  id v36;

  v8 = objc_msgSend(objc_allocWithZone((Class)PRMonogram), "init");
  swift_bridgeObjectRetain(a2);
  v9 = sub_100089AC8(a1, a2);
  v11 = v10;
  swift_bridgeObjectRelease(a2);
  if (v11)
  {
    v12._countAndFlagsBits = v9;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease(v11);
  }
  swift_bridgeObjectRetain(a4);
  v13 = sub_100089AC8(a3, a4);
  v15 = v14;
  swift_bridgeObjectRelease(a4);
  if (v15)
  {
    v16._countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(v15);
  }
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xE000000000000000);
  objc_msgSend(v8, "setText:", v17, 0);

  v18 = objc_msgSend(v8, "text");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = String.count.getter(v19);
  swift_bridgeObjectRelease(v21);
  if (v22 >= 1)
  {
    if (qword_100115E00 != -1)
      swift_once(&qword_100115E00, sub_100076198);
    v23 = xmmword_100117268;
    v24 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v24, "scale");
    v26 = v25;

    v27 = objc_msgSend(v8, "snapshotWithSize:scale:options:", 0, v23, v26);
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v27, "imageWithRenderingMode:", 1);

      if (v29)
        goto LABEL_11;
    }
  }
  v30 = (void *)FBKSystemImageNameGenericUser;
  v31 = (void *)objc_opt_self(UIImage);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;
  v34 = v30;
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  v36 = objc_msgSend(v31, "systemImageNamed:", v35);

  if (v36)
LABEL_11:

  else
    __break(1u);
}

id sub_100076C48(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  Class v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Class isa;

  v2 = (objc_class *)sub_100076420(a1, a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = -[objc_class thumbnailImageData](v2, "thumbnailImageData");
  v5 = v4;
  if (v4)
  {
    v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

    v9 = objc_allocWithZone((Class)UIImage);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v5 = objc_msgSend(v9, "initWithData:", isa);
    sub_100050694(v6, v8);

    v3 = isa;
  }

  return v5;
}

void sub_100076E68(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;

  v3 = v2;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active) = a1;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup, a2);
  if (Strong)
  {
    v13 = (id)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filterManager, v5);
    if (v6)
    {
      v7 = (char *)v6;
      KeyPath = swift_getKeyPath(&unk_1000CCF80);
      _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
      v10 = (void *)swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterDelegate], v9);
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, "filterManager:didToggleFilter:", v7, v3, v13);
        swift_unknownObjectRelease(v11);
      }
      v12 = swift_getKeyPath(&unk_1000CCF80);
      _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v12, &protocol witness table for NSObject);

    }
    else
    {

    }
  }
}

char *sub_100076FF4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  _BYTE *v4;
  _QWORD *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  NSString v17;
  id v18;
  void *v19;
  objc_super v21;

  *(_QWORD *)&v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = 0;
  v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active] = 0;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate] = a1;
  v9 = &v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title];
  *v9 = a2;
  v9[1] = a3;
  v21.receiver = v4;
  v21.super_class = (Class)type metadata accessor for FBAFilter();
  v10 = a1;
  v11 = objc_msgSendSuper2(&v21, "init");
  v12 = (void *)objc_opt_self(UIImage);
  static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v14 = v13;
  v15 = (char *)v11;
  v16 = a4;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v18 = objc_msgSend(v12, "systemImageNamed:", v17, v21.receiver, v21.super_class);

  v19 = *(void **)&v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image];
  *(_QWORD *)&v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = v18;

  return v15;
}

void sub_100077258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v3 = v2;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup, a2);
  if (Strong)
  {
    v13 = (id)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filterManager, v5);
    if (v6)
    {
      v7 = (char *)v6;
      v14 = v6;
      KeyPath = swift_getKeyPath(&unk_1000CCF80);
      _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
      v10 = (void *)swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterDelegate], v9);
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, "filterManager:didToggleFilter:", v7, v3, v13, v14);
        swift_unknownObjectRelease(v11);
      }
      v12 = swift_getKeyPath(&unk_1000CCF80);
      _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v12, &protocol witness table for NSObject);

    }
    else
    {

    }
  }
}

id sub_100077380()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFilter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAFilter()
{
  return objc_opt_self(_TtC18Feedback_Assistant9FBAFilter);
}

const char *sub_100077430()
{
  return "active";
}

id sub_10007743C@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "active");
  *a2 = (_BYTE)result;
  return result;
}

id sub_10007746C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setActive:", *a1);
}

id sub_100077480(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  _BYTE *v4;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  objc_super v15;

  v9 = OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image;
  *(_QWORD *)&v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = 0;
  v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active] = 0;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate] = a1;
  v10 = &v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title];
  *v10 = a2;
  v10[1] = a3;
  v11 = *(void **)&v4[v9];
  *(_QWORD *)&v4[v9] = a4;
  v12 = a1;
  v13 = a4;

  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for FBAFilter();
  return objc_msgSendSuper2(&v15, "init");
}

uint64_t sub_100077610()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active);
}

void *sub_100077660(char a1, uint64_t a2)
{
  uint64_t v2;
  void *result;
  void *v5;
  char **v6;

  *(_BYTE *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) = a1;
  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterDelegate, a2);
  v5 = result;
  if ((a1 & 1) != 0)
  {
    if (!result)
      return result;
    v6 = &selRef_filterManagerDidActivate_;
  }
  else
  {
    if (!result)
      return result;
    v6 = &selRef_filterManagerDidDeactivate_;
  }
  if ((objc_msgSend(result, "respondsToSelector:", *v6) & 1) != 0)
    objc_msgSend(v5, *v6, v2);
  return (void *)swift_unknownObjectRelease(v5);
}

_QWORD *sub_10007770C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups), 2);
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v1, 2);
    return _swiftEmptyArrayStorage;
  }
  if (v1 < 0)
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  else
    v8 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v1, 2);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v8);
  v2 = (uint64_t)result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v5 = (char *)*(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      sub_10007B678(v7);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

    }
    while (v2 != v4);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

Class sub_100077854(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4;
  uint64_t v5;
  Class isa;

  v4 = a1;
  v5 = a3();

  type metadata accessor for FBAFilter();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  return isa;
}

_QWORD *sub_1000778A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
    else
      v14 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups), 2);
    result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v14);
    v2 = (uint64_t)result;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups), 2);
  }
  if (v2)
  {
    if (v2 < 1)
    {
      __break(1u);
      goto LABEL_29;
    }
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v5 = (char *)*(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      sub_10007B678(v7);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

    }
    while (v2 != v4);
  }
  result = (_QWORD *)swift_bridgeObjectRelease_n(v1, 2);
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    v8 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_12;
LABEL_27:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return _swiftEmptyArrayStorage;
  }
  if ((uint64_t)_swiftEmptyArrayStorage < 0)
    v15 = _swiftEmptyArrayStorage;
  else
    v15 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v8 = _CocoaArrayWrapper.endIndex.getter(v15);
  result = (_QWORD *)swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (!v8)
    goto LABEL_27;
LABEL_12:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      v12 = (id)_swiftEmptyArrayStorage[i + 4];
      v13 = objc_msgSend(v12, "active");
      if ((_DWORD)v13)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        v10 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
        v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v12);
        specialized ContiguousArray._endMutation()(v11);
      }
      else
      {

      }
    }
    goto LABEL_27;
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_100077AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  Class isa;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t j;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Class v43;
  id v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((unint64_t)v1 >> 62)
    goto LABEL_69;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v1);
  while (v2)
  {
    v3 = 0;
    v49 = v2;
    v50 = v1 & 0xC000000000000001;
    v47 = v1 & 0xFFFFFFFFFFFFFF8;
    v48 = v1;
    v46 = v1 + 32;
    while (1)
    {
      if (v50)
      {
        v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v48);
      }
      else
      {
        if (v3 >= *(_QWORD *)(v47 + 16))
          goto LABEL_68;
        v11 = (char *)*(id *)(v46 + 8 * v3);
      }
      v9 = v11;
      if (__OFADD__(v3++, 1))
        break;
      v1 = OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters;
      v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
      if ((unint64_t)v13 >> 62)
      {
        if (v13 < 0)
          v21 = *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
        else
          v21 = v13 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v13);
        v14 = _CocoaArrayWrapper.endIndex.getter(v21);
        v51 = v9;
        if (!v14)
        {
LABEL_30:
          swift_bridgeObjectRelease(v13);
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
            goto LABEL_47;
          goto LABEL_31;
        }
      }
      else
      {
        v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v13);
        v51 = v9;
        if (!v14)
          goto LABEL_30;
      }
      if (v14 < 1)
        goto LABEL_65;
      for (i = 0; i != v14; ++i)
      {
        if ((v13 & 0xC000000000000001) != 0)
          v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
        else
          v16 = *(id *)(v13 + 8 * i + 32);
        v17 = v16;
        v18 = objc_msgSend(v16, "active", v46);
        if ((_DWORD)v18)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
          v19 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
          v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
          specialized ContiguousArray._endMutation()(v20);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(v13);
      v9 = v51;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_47;
LABEL_31:
      if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
      {
        v22 = _swiftEmptyArrayStorage[2];
        goto LABEL_33;
      }
LABEL_47:
      v31 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      v22 = _CocoaArrayWrapper.endIndex.getter(v31);
      swift_release(_swiftEmptyArrayStorage);
LABEL_33:
      swift_release(_swiftEmptyArrayStorage);
      if (v22)
      {
        v23 = *(_QWORD *)&v9[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType];
        v24 = *(_QWORD *)&v9[v1];
        if ((unint64_t)v24 >> 62)
        {
          if (v24 < 0)
            v32 = *(_QWORD *)&v9[v1];
          else
            v32 = v24 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v24);
          v25 = _CocoaArrayWrapper.endIndex.getter(v32);
          if (!v25)
            goto LABEL_52;
LABEL_36:
          if (v25 < 1)
            goto LABEL_66;
          for (j = 0; j != v25; ++j)
          {
            if ((v24 & 0xC000000000000001) != 0)
              v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v24);
            else
              v27 = *(id *)(v24 + 8 * j + 32);
            v28 = v27;
            v29 = objc_msgSend(v27, "active", v46);
            if ((_DWORD)v29)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v29);
              v1 = _swiftEmptyArrayStorage[2];
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v1);
              v30 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v28);
              specialized ContiguousArray._endMutation()(v30);
            }
            else
            {

            }
          }
          swift_bridgeObjectRelease(v24);
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
            goto LABEL_61;
LABEL_53:
          if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
            goto LABEL_61;
          v33 = _swiftEmptyArrayStorage[2];
          if (!v33)
          {
LABEL_4:
            swift_release(_swiftEmptyArrayStorage);
            v1 = (uint64_t)objc_allocWithZone((Class)NSCompoundPredicate);
            sub_100079368();
            isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            v5 = objc_msgSend((id)v1, "initWithType:subpredicates:", v23, isa);

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
            v8 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            v9 = v51;
            if (v8 >= v7 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
            v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v5);
            specialized Array._endMutation()(v10);
            goto LABEL_7;
          }
        }
        else
        {
          v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v24);
          if (v25)
            goto LABEL_36;
LABEL_52:
          swift_bridgeObjectRelease(v24);
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0)
            goto LABEL_53;
LABEL_61:
          v41 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
          v33 = _CocoaArrayWrapper.endIndex.getter(v41);
          swift_release(_swiftEmptyArrayStorage);
          if (!v33)
            goto LABEL_4;
        }
        specialized ContiguousArray.reserveCapacity(_:)(v33);
        if (v33 < 0)
          goto LABEL_67;
        v34 = 0;
        do
        {
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
            v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, _swiftEmptyArrayStorage);
          else
            v35 = (char *)(id)_swiftEmptyArrayStorage[v34 + 4];
          v36 = v35;
          ++v34;
          v37 = *(id *)&v35[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate];

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v38);
          v39 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v39);
          v40 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v37);
          specialized ContiguousArray._endMutation()(v40);
        }
        while (v33 != v34);
        goto LABEL_4;
      }
LABEL_7:

      if (v3 == v49)
      {
        swift_bridgeObjectRelease(v48);
        goto LABEL_74;
      }
    }
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    if (v1 < 0)
      v42 = v1;
    else
      v42 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v42);
  }
  swift_bridgeObjectRelease(v1);
LABEL_74:
  sub_100079368();
  v43 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v44 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "andPredicateWithSubpredicates:", v43);

  return v44;
}

uint64_t sub_100078180()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char **v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t i;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *object;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  uint64_t countAndFlagsBits;
  void *v42;
  id v43;
  void *v44;
  _QWORD *v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  Swift::String v58;
  Swift::String v59;

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v0 = *(_QWORD **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
    else
      v0 = (_QWORD *)(v7 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups), 2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v0);
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups), 2);
  }
  v10 = _swiftEmptyArrayStorage;
  if (v8)
  {
    if (v8 < 1)
    {
      __break(1u);
      goto LABEL_50;
    }
    v2 = 0;
    v5 = (char **)(v7 & 0xC000000000000001);
    v0 = _swiftEmptyArrayStorage;
    v6 = (unint64_t)&OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters;
    do
    {
      if (v5)
        v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v7);
      else
        v11 = (char *)*(id *)(v7 + 8 * v2 + 32);
      v3 = v11;
      ++v2;
      v4 = *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
      swift_bridgeObjectRetain(v4);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      sub_10007B678(v4);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

    }
    while (v8 != v2);
  }
  else
  {
    v0 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease_n(v7, 2);
  v57 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v17 = _swiftEmptyArrayStorage;
    else
      v17 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v7 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v7)
    {
LABEL_13:
      if (v7 >= 1)
      {
        for (i = 0; i != v7; ++i)
        {
          v13 = (id)_swiftEmptyArrayStorage[i + 4];
          v14 = objc_msgSend(v13, "active");
          if ((_DWORD)v14)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
            v15 = _swiftEmptyArrayStorage[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
            v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
            specialized ContiguousArray._endMutation()(v16);
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v0 = _swiftEmptyArrayStorage;
        if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
          goto LABEL_33;
        goto LABEL_30;
      }
LABEL_50:
      __break(1u);
LABEL_51:
      sub_10007E590(v9 > 1, v4, 1);
      v31 = v57;
LABEL_40:
      v31[2] = v4;
      v45 = &v31[2 * v6];
      v45[4] = v2;
      v45[5] = v3;
      if (v7 != 1)
      {
        if (v10)
          v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v0);
        else
          v46 = (id)v0[5];
        v47 = v46;
        v48 = objc_msgSend(v46, v5[123]);
        v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v51 = v50;

        v53 = v31[2];
        v52 = v31[3];
        if (v53 >= v52 >> 1)
          sub_10007E590(v52 > 1, v53 + 1, 1);
        v31[2] = v53 + 1;
        v54 = &v31[2 * v53];
        v54[4] = v49;
        v54[5] = v51;
      }
      swift_release(v0);
      v55 = sub_10004BB9C((uint64_t *)&unk_1001178D0);
      v56 = sub_1000793A4();
      v28 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v55, v56);
      object = v31;
      goto LABEL_48;
    }
  }
  else
  {
    v9 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8;
    v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_13;
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v0 = _swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_33;
LABEL_30:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    v7 = _swiftEmptyArrayStorage[2];
    if (v7 <= 2)
      goto LABEL_34;
    goto LABEL_32;
  }
LABEL_33:
  v30 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v7 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_release(_swiftEmptyArrayStorage);
  if (v7 <= 2)
  {
LABEL_34:
    if (v7 < 1)
    {
      swift_release(_swiftEmptyArrayStorage);
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
      v35 = v34;
      v36 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v59._object = (void *)0xE000000000000000;
      v37._object = (void *)0x80000001000D7B40;
      v37._countAndFlagsBits = 0xD000000000000012;
      v38.value._countAndFlagsBits = v33;
      v38.value._object = v35;
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      v59._countAndFlagsBits = 0;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v59)._countAndFlagsBits;
      swift_bridgeObjectRelease(v35);

      return countAndFlagsBits;
    }
    sub_10007E590(0, v7, 0);
    v31 = _swiftEmptyArrayStorage;
    v10 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001);
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, _swiftEmptyArrayStorage);
    else
      v32 = (id)_swiftEmptyArrayStorage[4];
    v42 = v32;
    v5 = &selRef_sortDescriptorWithKey_ascending_;
    v43 = objc_msgSend(v32, "title");
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v3 = v44;

    v57 = _swiftEmptyArrayStorage;
    v6 = _swiftEmptyArrayStorage[2];
    v9 = _swiftEmptyArrayStorage[3];
    v4 = v6 + 1;
    if (v6 < v9 >> 1)
      goto LABEL_40;
    goto LABEL_51;
  }
LABEL_32:
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKPluralStrings);
  v20 = v19;
  v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v58._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0x65746C6946207525;
  v22._object = (void *)0xEA00000000007372;
  v23.value._countAndFlagsBits = v18;
  v23.value._object = v20;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v58._countAndFlagsBits = 0;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v58);
  swift_bridgeObjectRelease(v20);

  v26 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v27 = swift_allocObject(v26, 72, 7);
  *(_OWORD *)(v27 + 16) = xmmword_1000CC730;
  swift_release(_swiftEmptyArrayStorage);
  *(_QWORD *)(v27 + 56) = &type metadata for Int;
  *(_QWORD *)(v27 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v27 + 32) = v7;
  v28 = String.init(format:_:)(v25._countAndFlagsBits, v25._object, v27);
  object = v25._object;
LABEL_48:
  swift_bridgeObjectRelease(object);
  return v28;
}

id sub_1000786FC(uint64_t a1)
{
  _BYTE *v1;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  uint64_t i;
  char *v9;
  void *v10;
  uint64_t v11;
  id v12;
  objc_super v13;

  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterDelegate], 0);
  v1[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups] = a1;
  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for FBAFilterManager();
  v3 = (char *)objc_msgSendSuper2(&v13, "init");
  v4 = v3;
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups];
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v5, 2);
    result = v4;
    if (v6)
      goto LABEL_3;
LABEL_13:

    swift_bridgeObjectRelease_n(v5, 2);
    return v4;
  }
  if (v5 < 0)
    v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups];
  else
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v5, 2);
  v12 = v4;
  result = (id)_CocoaArrayWrapper.endIndex.getter(v11);
  v6 = (uint64_t)result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      else
        v9 = (char *)*(id *)(v5 + 8 * i + 32);
      v10 = v9;
      swift_unknownObjectWeakAssign(&v9[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filterManager], v4);

    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_100078888(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;

  v2 = v1;
  v4 = IndexPath.section.getter();
  v5 = v4;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((v6 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = (char *)*(id *)(v6 + 8 * v4 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain(v6);
  v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v6);
  swift_bridgeObjectRelease(v6);
LABEL_5:
  a1 = IndexPath.item.getter();
  v6 = *(_QWORD *)&v7[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  swift_bridgeObjectRetain(v6);

  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_13:
    specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v6);
    goto LABEL_9;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (a1 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v6 + 8 * a1 + 32);
LABEL_9:
    swift_bridgeObjectRelease(v6);
    return;
  }
  __break(1u);
}

void sub_100078A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  void *Strong;
  void *v14;

  v2 = v1;
  v4 = IndexPath.section.getter();
  v5 = v4;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((v6 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = (char *)*(id *)(v6 + 8 * v4 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups));
  v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v6);
  swift_bridgeObjectRelease(v6);
LABEL_5:
  v6 = IndexPath.item.getter();
  a1 = *(_QWORD *)&v7[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  swift_bridgeObjectRetain(a1);

  if ((a1 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v8 = *(id *)(a1 + 8 * v6 + 32);
      goto LABEL_9;
    }
    __break(1u);
    return;
  }
LABEL_16:
  v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
LABEL_9:
  v9 = v8;
  swift_bridgeObjectRelease(a1);
  KeyPath = swift_getKeyPath(&unk_1000CD058);
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
  objc_msgSend(v9, "setActive:", objc_msgSend(v9, "active") ^ 1);
  v11 = swift_getKeyPath(&unk_1000CD058);
  _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v11, &protocol witness table for NSObject);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterDelegate, v12);
  if (Strong)
  {
    v14 = Strong;
    objc_msgSend(Strong, "filterManager:didToggleFilter:", v2, v9);

    swift_unknownObjectRelease(v14);
  }
  else
  {

  }
}

_QWORD *sub_100078BEC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = sub_1000778A8();
  *a1 = result;
  return result;
}

void sub_100078CB0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  void *Strong;
  void *v15;
  uint64_t v16;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
    else
      v9 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups), 2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    v16 = v1;
    if (!v4)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups), 2);
    v16 = v1;
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
LABEL_20:
    __break(1u);
    return;
  }
  v5 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
    else
      v6 = (char *)*(id *)(v3 + 8 * v5 + 32);
    v7 = v6;
    ++v5;
    v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    sub_10007B678(v8);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

  }
  while (v4 != v5);
LABEL_13:
  swift_bridgeObjectRelease_n(v3, 2);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v10 = (id)_swiftEmptyArrayStorage[a1 + 4];
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  KeyPath = swift_getKeyPath(&unk_1000CD058);
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
  objc_msgSend(v10, "setActive:", objc_msgSend(v10, "active") ^ 1);
  v12 = swift_getKeyPath(&unk_1000CD058);
  _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v12, &protocol witness table for NSObject);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v16 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterDelegate, v13);
  if (Strong)
  {
    v15 = Strong;
    objc_msgSend(Strong, "filterManager:didToggleFilter:", v16, v10);

    swift_unknownObjectRelease(v15);
  }
  else
  {

  }
}

uint64_t sub_100078F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  char **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_1000CD030);
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
  v3 = OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active;
  v4 = *(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) = v4 ^ 1;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterDelegate, v5);
  v7 = Strong;
  if ((v4 & 1) != 0)
  {
    if (!Strong)
      goto LABEL_9;
    v8 = &selRef_filterManagerDidDeactivate_;
  }
  else
  {
    if (!Strong)
      goto LABEL_9;
    v8 = &selRef_filterManagerDidActivate_;
  }
  if ((objc_msgSend(Strong, "respondsToSelector:", *v8) & 1) != 0)
    objc_msgSend(v7, *v8, v1);
  swift_unknownObjectRelease(v7);
LABEL_9:
  v9 = swift_getKeyPath(&unk_1000CD030);
  v10 = _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v9, &protocol witness table for NSObject);
  sub_1000791B0(v10, v11);
  return *(unsigned __int8 *)(v1 + v3);
}

void sub_100079030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;

  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) & 1) == 0)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) = 1;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterDelegate, a2);
    if (Strong)
    {
      v4 = Strong;
      if ((objc_msgSend(Strong, "respondsToSelector:", "filterManagerDidActivate:") & 1) != 0)
        objc_msgSend(v4, "filterManagerDidActivate:", v2);
      swift_unknownObjectRelease(v4);
    }
  }
}

void sub_1000790F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) == 1)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) = 0;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterDelegate, a2);
    if (Strong)
    {
      v4 = Strong;
      if ((objc_msgSend(Strong, "respondsToSelector:", "filterManagerDidDeactivate:") & 1) != 0)
        objc_msgSend(v4, "filterManagerDidDeactivate:", v2);
      swift_unknownObjectRelease(v4);
    }
  }
}

void *sub_1000791B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  void *result;
  void *v5;
  char **v6;

  v3 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active);
  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterDelegate, a2);
  v5 = result;
  if (v3 == 1)
  {
    if (!result)
      return result;
    v6 = &selRef_filterManagerDidActivate_;
  }
  else
  {
    if (!result)
      return result;
    v6 = &selRef_filterManagerDidDeactivate_;
  }
  if ((objc_msgSend(result, "respondsToSelector:", *v6) & 1) != 0)
    objc_msgSend(v5, *v6, v2);
  return (void *)swift_unknownObjectRelease(v5);
}

id sub_10007927C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFilterManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAFilterManager()
{
  return objc_opt_self(_TtC18Feedback_Assistant16FBAFilterManager);
}

_QWORD *sub_100079304@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active);
  return result;
}

void *sub_10007931C(char *a1, uint64_t a2)
{
  return sub_100077660(*a1, a2);
}

_QWORD *sub_100079340@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = sub_1000778A8();
  *a1 = result;
  return result;
}

unint64_t sub_100079368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100117348;
  if (!qword_100117348)
  {
    v1 = objc_opt_self(NSPredicate);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100117348);
  }
  return result;
}

unint64_t sub_1000793A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100117350;
  if (!qword_100117350)
  {
    v1 = sub_10004BC28((uint64_t *)&unk_1001178D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100117350);
  }
  return result;
}

uint64_t sub_1000793F0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];
  _OWORD v42[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004BB9C(&qword_100117398);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v32 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v31)
      goto LABEL_37;
    v15 = *(_QWORD *)(v32 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v31)
        goto LABEL_37;
      v15 = *(_QWORD *)(v32 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v31)
          goto LABEL_37;
        v15 = *(_QWORD *)(v32 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v31)
            goto LABEL_37;
          v15 = *(_QWORD *)(v32 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = 16 * v13;
    v19 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = v19[1];
    v21 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v18);
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)&v42[0] = *v19;
    *((_QWORD *)&v42[0] + 1) = v20;
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v22);
    swift_dynamicCast(&v34, v42, &type metadata for String, &type metadata for AnyHashable, 7);
    v33[0] = v23;
    v33[1] = v22;
    swift_dynamicCast(v37, v33, &type metadata for String, (char *)&type metadata for Any + 8, 7);
    v38 = v34;
    v39 = v35;
    v40 = v36;
    sub_100075EC4(v37, v41);
    v34 = v38;
    v35 = v39;
    v36 = v40;
    sub_100075EC4(v41, v42);
    sub_100075EC4(v42, &v38);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v24 = -1 << *((_BYTE *)v3 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)&v7[8 * (v25 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)&v7[8 * (v25 >> 6)])) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)&v7[8 * v26];
      }
      while (v30 == -1);
      v10 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v34;
    *(_OWORD *)(v11 + 16) = v35;
    *(_QWORD *)(v11 + 32) = v36;
    result = (uint64_t)sub_100075EC4(&v38, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v31)
  {
LABEL_37:
    swift_release(v3);
    sub_10005BEE4(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v32 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v31)
      goto LABEL_37;
    v15 = *(_QWORD *)(v32 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_1000797AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t result;
  int64_t i;
  char *v11;
  char *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t *v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _OWORD v46[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004BB9C(&qword_100117390);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v37 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v36 = (unint64_t)(63 - v4) >> 6;
  v7 = &v43;
  v8 = &v45;
  result = swift_bridgeObjectRetain(v1);
  i = 0;
  v11 = (char *)&type metadata for Swift.AnyObject + 8;
  v12 = (char *)&type metadata for Any + 8;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v21 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v21 >= v36)
    goto LABEL_32;
  v22 = *(_QWORD *)(v37 + 8 * v21);
  v23 = i + 1;
  if (!v22)
  {
    v23 = i + 2;
    if (i + 2 >= v36)
      goto LABEL_32;
    v22 = *(_QWORD *)(v37 + 8 * v23);
    if (!v22)
    {
      v23 = i + 3;
      if (i + 3 >= v36)
        goto LABEL_32;
      v22 = *(_QWORD *)(v37 + 8 * v23);
      if (!v22)
      {
        v23 = i + 4;
        if (i + 4 >= v36)
          goto LABEL_32;
        v22 = *(_QWORD *)(v37 + 8 * v23);
        if (!v22)
        {
          v24 = i + 5;
          if (i + 5 < v36)
          {
            v22 = *(_QWORD *)(v37 + 8 * v24);
            if (v22)
            {
              v23 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v23 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_36;
              if (v23 >= v36)
                break;
              v22 = *(_QWORD *)(v37 + 8 * v23);
              ++v24;
              if (v22)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_10005BEE4(v1);
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  v39 = (v22 - 1) & v22;
  v20 = __clz(__rbit64(v22)) + (v23 << 6);
  for (i = v23; ; v20 = __clz(__rbit64(v6)) | (i << 6))
  {
    v25 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v20);
    v26 = v25[1];
    v27 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v20);
    v41 = *v25;
    v42 = v26;
    v40 = v27;
    swift_bridgeObjectRetain(v26);
    swift_unknownObjectRetain(v27);
    swift_dynamicCast(v7, &v40, v11, v12, 7);
    v28 = v41;
    v29 = v42;
    sub_100075EC4(v7, v8);
    sub_100075EC4(v8, v46);
    sub_100075EC4(v46, &v44);
    result = sub_10006D4A8(v28, v29);
    v30 = result;
    if ((v31 & 1) != 0)
    {
      v38 = i;
      v13 = v8;
      v14 = v7;
      v15 = v1;
      v16 = v12;
      v17 = v11;
      v18 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v18[1]);
      *v18 = v28;
      v18[1] = v29;
      v11 = v17;
      v12 = v16;
      v1 = v15;
      v7 = v14;
      v8 = v13;
      i = v38;
      v19 = (_QWORD *)(v3[7] + 32 * v30);
      sub_100050714(v19);
      result = (unint64_t)sub_100075EC4(&v44, v19);
      v6 = v39;
      if (!v39)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v32 = (uint64_t *)(v3[6] + 16 * result);
    *v32 = v28;
    v32[1] = v29;
    result = (unint64_t)sub_100075EC4(&v44, (_OWORD *)(v3[7] + 32 * result));
    v33 = v3[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_34;
    v3[2] = v35;
    v6 = v39;
    if (!v39)
      goto LABEL_11;
LABEL_10:
    v39 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_100079B10(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_100079B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int16 v27;
  char v28;
  char v29;
  char v30;
  char v31;
  unsigned __int8 v32;

  v5 = v32;
  if (v32)
  {
    *(_QWORD *)(v4 - 104) = v1;
    v6 = v32;
    v7 = sub_10007E590(0, v32, 0);
    v8 = a1;
    v1 = *(_QWORD *)(v4 - 104);
    if ((_DWORD)v3)
    {
      if ((_DWORD)v3 == 1)
        v9 = (int)a1;
      else
        v9 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v9 = 0;
    }
    while (1)
    {
      if (!v6)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        __break(1u);
        JUMPOUT(0x100079E74);
      }
      *(_QWORD *)(v4 - 144) = v6;
      if ((_DWORD)v3)
      {
        if ((_DWORD)v3 == 1)
        {
          if (v9 < (int)a1 || v9 >= a1 >> 32)
            goto LABEL_31;
          v10 = v1;
          v11 = v2;
          v12 = ((uint64_t (*)(uint64_t))__DataStorage._bytes.getter)(v7);
          if (!v12)
          {
            __break(1u);
LABEL_38:
            __break(1u);
          }
          v13 = v12;
          v14 = ((uint64_t (*)(void))__DataStorage._offset.getter)();
          v15 = v9 - v14;
          if (__OFSUB__(v9, v14))
            goto LABEL_34;
        }
        else
        {
          if (v9 < *(_QWORD *)(v8 + 16))
            goto LABEL_33;
          if (v9 >= *(_QWORD *)(v8 + 24))
            goto LABEL_35;
          v10 = v1;
          v11 = v2;
          v17 = ((uint64_t (*)(uint64_t))__DataStorage._bytes.getter)(v7);
          if (!v17)
            goto LABEL_38;
          v13 = v17;
          v18 = ((uint64_t (*)(void))__DataStorage._offset.getter)();
          v15 = v9 - v18;
          if (__OFSUB__(v9, v18))
            goto LABEL_36;
        }
        v16 = *(_BYTE *)(v13 + v15);
        v2 = v11;
        v8 = a1;
      }
      else
      {
        if (v9 >= v32)
          goto LABEL_32;
        v10 = v1;
        *(_BYTE *)(v4 - 134) = v8;
        *(_DWORD *)(v4 - 133) = *(_DWORD *)((char *)&a1 + 1);
        *(_WORD *)(v4 - 129) = *(_WORD *)((char *)&a1 + 5);
        *(_BYTE *)(v4 - 127) = HIBYTE(a1);
        *(_WORD *)(v4 - 126) = v27;
        *(_BYTE *)(v4 - 124) = v28;
        *(_BYTE *)(v4 - 123) = v29;
        *(_BYTE *)(v4 - 122) = v30;
        *(_BYTE *)(v4 - 121) = v31;
        v16 = *(_BYTE *)(v4 - 134 + v9);
      }
      *(_BYTE *)(v4 - 134) = v16;
      v7 = sub_10007A150((char *)(v4 - 134), (uint64_t *)(v4 - 120));
      if (v2)
        break;
      v19 = v8;
      v20 = v3;
      v21 = *(_QWORD *)(v4 - 120);
      v22 = *(_QWORD *)(v4 - 112);
      v1 = v10;
      *(_QWORD *)(v4 - 104) = v10;
      v24 = *(_QWORD *)(v10 + 16);
      v23 = *(_QWORD *)(v10 + 24);
      if (v24 >= v23 >> 1)
      {
        v7 = sub_10007E590(v23 > 1, v24 + 1, 1);
        v19 = a1;
        v1 = *(_QWORD *)(v4 - 104);
      }
      *(_QWORD *)(v1 + 16) = v24 + 1;
      v25 = v1 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v21;
      *(_QWORD *)(v25 + 40) = v22;
      ++v9;
      v6 = *(_QWORD *)(v4 - 144) - 1;
      --v5;
      v3 = v20;
      v8 = v19;
      if (!v5)
        return v1;
    }
    swift_release(v10);
  }
  return v1;
}

id sub_100079F44()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FBANotificationManager()), "init");
  qword_100119F58 = (uint64_t)result;
  return result;
}

uint64_t sub_100079FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v3 = v2;
  sub_100079B10(a1, a2);
  v5 = v4;
  v22[0] = v4;
  v6 = sub_10004BB9C((uint64_t *)&unk_1001178D0);
  v7 = sub_1000793A4();
  v8 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease(v5);
  v11 = (uint64_t *)(v3 + OBJC_IVAR____TtC18Feedback_Assistant22FBANotificationManager_apnsToken);
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18Feedback_Assistant22FBANotificationManager_apnsToken + 8);
  *v11 = v8;
  v11[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = sub_10004BB9C((uint64_t *)&unk_1001178F0);
  v14 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1000CC730;
  strcpy((char *)v22, "APNS Token: ");
  BYTE5(v22[1]) = 0;
  HIWORD(v22[1]) = -5120;
  v15 = v11[1];
  if (v15)
  {
    v16 = *v11;
    v17 = (void *)v11[1];
  }
  else
  {
    v17 = (void *)0xE800000000000000;
    v16 = 0x6E656B6F74206F6ELL;
  }
  swift_bridgeObjectRetain(v15);
  v18._countAndFlagsBits = v16;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v17);
  v19 = v22[0];
  v20 = v22[1];
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 32) = v19;
  *(_QWORD *)(v14 + 40) = v20;
  debugPrint(_:separator:terminator:)(v14, 32, 0xE100000000000000, 10, 0xE100000000000000);
  return swift_bridgeObjectRelease(v14);
}

uint64_t sub_10007A150@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  v4 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1000CC730;
  *(_QWORD *)(v5 + 56) = &type metadata for UInt8;
  *(_QWORD *)(v5 + 64) = &protocol witness table for UInt8;
  *(_BYTE *)(v5 + 32) = v3;
  result = String.init(format:_:)(0x786868322E323025, 0xE800000000000000, v5);
  *a2 = result;
  a2[1] = v7;
  return result;
}

void sub_10007A250(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  void *ObjCClassFromMetadata;
  unint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  Class isa;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void **aBlock;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t (*v27)();
  uint64_t v28;
  _BYTE v29[104];

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant22FBANotificationManager_apnsToken + 8);
  if (v3)
  {
    v6 = sub_10005CB34();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v6);
    swift_bridgeObjectRetain(v3);
    if (objc_msgSend(ObjCClassFromMetadata, "platform") == (id)1)
      v8 = 0xE300000000000000;
    else
      v8 = 0xE500000000000000;
    v9 = sub_10004BB9C(&qword_100117388);
    inited = swift_initStackObject(v9, v29);
    *(_OWORD *)(inited + 16) = xmmword_1000CCB20;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKPushPlatformKey);
    *(_QWORD *)(inited + 40) = v11;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(inited + 48) = v12;
    *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKPushDeviceTokenKey);
    *(_QWORD *)(inited + 64) = v13;
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    *(_QWORD *)(inited + 72) = v14;
    *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKPushParticipantIDKey);
    *(_QWORD *)(inited + 88) = v15;
    objc_msgSend(a1, "integerValue");
    *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
    v16 = sub_10007B1DC(inited);
    v17 = sub_1000797AC(v16);
    swift_bridgeObjectRelease(v16);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v17);
    v27 = FBAMailboxesViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:);
    v28 = 0;
    aBlock = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_10007A548;
    v26 = &unk_1000E9B38;
    v19 = _Block_copy(&aBlock);
    v27 = FBAMailboxesViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:);
    v28 = 0;
    aBlock = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_10004B098;
    v26 = &unk_1000E9B60;
    v20 = _Block_copy(&aBlock);
    objc_msgSend(a2, "registerAPNSWithRequestDictionary:success:error:", isa, v19, v20);
    _Block_release(v20);
    _Block_release(v19);

  }
  else
  {
    v21 = sub_10004BB9C((uint64_t *)&unk_1001178F0);
    v22 = swift_allocObject(v21, 64, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1000CC730;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    *(_QWORD *)(v22 + 32) = 0xD000000000000043;
    *(_QWORD *)(v22 + 40) = 0x80000001000D7C00;
    debugPrint(_:separator:terminator:)(v22, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v22);
  }
}

uint64_t sub_10007A548(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, unint64_t);
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v4 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;

  v4(v6, v8);
  sub_100050694(v6, v8);
  return swift_release(v3);
}

id sub_10007A620()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBANotificationManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBANotificationManager()
{
  return objc_opt_self(_TtC18Feedback_Assistant22FBANotificationManager);
}

uint64_t sub_10007A684(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007A694(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10007A6A4()
{
  strcpy((char *)&qword_1001173A0, "make_visible");
  BYTE5(qword_1001173A8) = 0;
  HIWORD(qword_1001173A8) = -5120;
}

void sub_10007A6D0()
{
  qword_1001173B0 = 0x64695F6D726F66;
  qword_1001173B8 = 0xE700000000000000;
}

void sub_10007A6F4()
{
  qword_1001173C0 = 0x73726577736E61;
  qword_1001173C8 = 0xE700000000000000;
}

void sub_10007A718()
{
  qword_1001173D0 = 0x69747061635F7369;
  qword_1001173D8 = 0xEA00000000006576;
}

id FBACustomBehavior.__allocating_init(dictionary:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return FBACustomBehavior.init(dictionary:)(a1);
}

id FBACustomBehavior.init(dictionary:)(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  id v42;
  void *v43;
  objc_class *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  objc_super v49;

  v2 = v1;
  v4 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_makeVisible;
  v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_makeVisible] = 0;
  v5 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_notifyOnUpload;
  v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_notifyOnUpload] = 0;
  v46 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_formId;
  *(_QWORD *)&v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_formId] = 0;
  v6 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_answers;
  *(_QWORD *)&v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_answers] = 0;
  v7 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_launchNewDraft;
  v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_launchNewDraft] = 0;
  v8 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_isCaptive;
  v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_isCaptive] = 0;
  v9 = qword_100115E10;
  v10 = v2;
  if (v9 == -1)
  {
    v11 = *(_QWORD *)(a1 + 16);
    if (!v11)
      goto LABEL_8;
  }
  else
  {
    swift_once(&qword_100115E10, sub_10007A6A4);
    v11 = *(_QWORD *)(a1 + 16);
    if (!v11)
      goto LABEL_8;
  }
  v12 = qword_1001173A8;
  v13 = qword_1001173A0;
  swift_bridgeObjectRetain(qword_1001173A8);
  v14 = sub_10006D4A8(v13, v12);
  if ((v15 & 1) != 0)
  {
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v14);
    swift_unknownObjectRetain(v16);
    swift_bridgeObjectRelease(v12);
    v48 = v16;
    if ((swift_dynamicCast(&v47, &v48, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Bool, 6) & 1) != 0)
    {
      LOBYTE(v11) = v47;
      goto LABEL_8;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v12);
  }
  LOBYTE(v11) = 0;
LABEL_8:
  v2[v4] = v11;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v18 = sub_10006D4A8(0xD000000000000010, 0x80000001000D7C70);
    if ((v19 & 1) != 0
      && (v48 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v18),
          swift_unknownObjectRetain(v48),
          swift_dynamicCast(&v47, &v48, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Bool, 6)))
    {
      LOBYTE(v17) = v47;
    }
    else
    {
      LOBYTE(v17) = 0;
    }
  }
  v2[v5] = v17;
  if (qword_100115E20 == -1)
  {
    v20 = *(_QWORD *)(a1 + 16);
    if (!v20)
      goto LABEL_20;
  }
  else
  {
    swift_once(&qword_100115E20, sub_10007A6F4);
    v20 = *(_QWORD *)(a1 + 16);
    if (!v20)
      goto LABEL_20;
  }
  v21 = qword_1001173C8;
  v22 = qword_1001173C0;
  swift_bridgeObjectRetain(qword_1001173C8);
  v23 = sub_10006D4A8(v22, v21);
  if ((v24 & 1) != 0)
  {
    v25 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v23);
    swift_unknownObjectRetain(v25);
    swift_bridgeObjectRelease(v21);
    v48 = v25;
    v26 = sub_10004BB9C(&qword_100117410);
    if ((swift_dynamicCast(&v47, &v48, (char *)&type metadata for Swift.AnyObject + 8, v26, 6) & 1) != 0)
    {
      v20 = v47;
      goto LABEL_20;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v21);
  }
  v20 = 0;
LABEL_20:
  v27 = *(_QWORD *)&v2[v6];
  *(_QWORD *)&v2[v6] = v20;
  swift_bridgeObjectRelease(v27);
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v29 = sub_10006D4A8(0xD000000000000010, 0x80000001000D7C90);
    if ((v30 & 1) != 0
      && (v48 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v29),
          swift_unknownObjectRetain(v48),
          swift_dynamicCast(&v47, &v48, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Bool, 6)))
    {
      LOBYTE(v28) = v47;
    }
    else
    {
      LOBYTE(v28) = 0;
    }
  }
  v2[v7] = v28;
  if (qword_100115E28 == -1)
  {
    v31 = *(_QWORD *)(a1 + 16);
    if (!v31)
      goto LABEL_32;
  }
  else
  {
    swift_once(&qword_100115E28, sub_10007A718);
    v31 = *(_QWORD *)(a1 + 16);
    if (!v31)
      goto LABEL_32;
  }
  v32 = qword_1001173D8;
  v33 = qword_1001173D0;
  swift_bridgeObjectRetain(qword_1001173D8);
  v34 = sub_10006D4A8(v33, v32);
  if ((v35 & 1) != 0)
  {
    v36 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v34);
    swift_unknownObjectRetain(v36);
    swift_bridgeObjectRelease(v32);
    v48 = v36;
    if ((swift_dynamicCast(&v47, &v48, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Bool, 6) & 1) != 0)
    {
      LOBYTE(v31) = v47;
      goto LABEL_32;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v32);
  }
  LOBYTE(v31) = 0;
LABEL_32:
  v2[v8] = v31;
  if (qword_100115E18 == -1)
  {
    if (!*(_QWORD *)(a1 + 16))
    {
LABEL_38:
      swift_bridgeObjectRelease(a1);
      goto LABEL_39;
    }
  }
  else
  {
    swift_once(&qword_100115E18, sub_10007A6D0);
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_38;
  }
  v37 = qword_1001173B8;
  v38 = qword_1001173B0;
  swift_bridgeObjectRetain(qword_1001173B8);
  v39 = sub_10006D4A8(v38, v37);
  if ((v40 & 1) == 0)
  {
    swift_bridgeObjectRelease(v37);
    goto LABEL_38;
  }
  v41 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v39);
  swift_unknownObjectRetain(v41);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(a1);
  v48 = v41;
  if ((swift_dynamicCast(&v47, &v48, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Int, 6) & 1) == 0)
  {
LABEL_39:

    goto LABEL_40;
  }
  v42 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v47);
  v43 = *(void **)&v2[v46];
  *(_QWORD *)&v2[v46] = v42;

LABEL_40:
  v44 = (objc_class *)type metadata accessor for FBACustomBehavior();
  v49.receiver = v10;
  v49.super_class = v44;
  return objc_msgSendSuper2(&v49, "init");
}

uint64_t FBACustomBehavior.description.getter()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Swift::String v13;
  id v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  Swift::String v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  Swift::String v22;
  uint64_t v23;
  Swift::String v24;
  void *v25;
  id v27;
  uint64_t v28;
  unint64_t v29;

  v28 = 0;
  v29 = 0xE000000000000000;
  _StringGuts.grow(_:)(109);
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  v1._object = (void *)0x80000001000D7CB0;
  String.append(_:)(v1);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_isCaptive))
    v2 = 1702195828;
  else
    v2 = 0x65736C6166;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_isCaptive))
    v3 = 0xE400000000000000;
  else
    v3 = 0xE500000000000000;
  v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease(v3);
  v5._countAndFlagsBits = 0x736956656B616D20;
  v5._object = (void *)0xEE00203A656C6269;
  String.append(_:)(v5);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_makeVisible))
    v6 = 1702195828;
  else
    v6 = 0x65736C6166;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_makeVisible))
    v7 = 0xE400000000000000;
  else
    v7 = 0xE500000000000000;
  v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease(v7);
  v9._object = (void *)0x80000001000D7CD0;
  v9._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v9);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_notifyOnUpload))
    v10 = 1702195828;
  else
    v10 = 0x65736C6166;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_notifyOnUpload))
    v11 = 0xE400000000000000;
  else
    v11 = 0xE500000000000000;
  v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 0x3A64496D726F6620;
  v13._object = (void *)0xE900000000000020;
  String.append(_:)(v13);
  v27 = *(id *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_formId);
  v14 = v27;
  v15 = sub_10004BB9C(&qword_100117018);
  v16._countAndFlagsBits = String.init<A>(describing:)(&v27, v15);
  object = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(object);
  v18._object = (void *)0x80000001000D7CF0;
  v18._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v18);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_launchNewDraft))
    v19 = 1702195828;
  else
    v19 = 0x65736C6166;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_launchNewDraft))
    v20 = 0xE400000000000000;
  else
    v20 = 0xE500000000000000;
  v21 = v20;
  String.append(_:)(*(Swift::String *)&v19);
  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0x73726577736E6120;
  v22._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v22);
  v27 = *(id *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_answers);
  swift_bridgeObjectRetain(v27);
  v23 = sub_10004BB9C(&qword_100117418);
  v24._countAndFlagsBits = String.init<A>(describing:)(&v27, v23);
  v25 = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v25);
  return v28;
}

void FBACustomBehavior.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Feedback_Assistant.FBACustomBehavior", 36, "init()", 6, 0);
  __break(1u);
}

id FBACustomBehavior.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBACustomBehavior();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBACustomBehavior()
{
  return objc_opt_self(_TtC18Feedback_Assistant17FBACustomBehavior);
}

unint64_t sub_10007B1C0(uint64_t a1)
{
  return sub_10007B3FC(a1, &qword_1001174C8, &qword_1001174D0, (uint64_t (*)(uint64_t))sub_10006D50C);
}

unint64_t sub_10007B1DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004BB9C(&qword_1001174C0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_unknownObjectRetain(v9);
    result = sub_10006D4A8(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007B2F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004BB9C(&qword_1001174B8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    result = sub_10006D50C();
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007B3FC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004BB9C(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_10004F544(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_100075EC4(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10007B524(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_10007E058(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007B678(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1000824DC(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_10007B830(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_10007E164(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

void sub_10007BA8C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  id i;
  void *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t j;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  char *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  Class isa;

  v3 = v2;
  v4 = (uint64_t)&v2[OBJC_IVAR____TtC18Feedback_Assistant25FBAResponseItemDetailCell_questionGroupsStack];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18Feedback_Assistant25FBAResponseItemDetailCell_questionGroupsStack], a2);
  if (!Strong)
  {
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  v6 = (void *)Strong;
  sub_10007C39C();

  v8 = (void *)swift_unknownObjectWeakLoadStrong(v4, v7);
  if (!v8)
    goto LABEL_87;
  v9 = v8;
  objc_msgSend(v8, "setSpacing:", 20.0);

  v11 = OBJC_IVAR____TtC18Feedback_Assistant25FBAResponseItemDetailCell_contentItem;
  v12 = *(void **)&v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAResponseItemDetailCell_contentItem];
  if (!v12)
  {
    v22 = objc_msgSend((id)objc_opt_self(FBALog), "appHandle");
    if (v22)
    {
      v23 = v22;
      v24 = static os_log_type_t.error.getter(v22);
      os_log(_:dso:log:type:_:)("Content item is nil. Will not show content", 42, 2, &_mh_execute_header, v23, v24, _swiftEmptyArrayStorage);

      goto LABEL_60;
    }
    goto LABEL_90;
  }
  v13 = swift_unknownObjectWeakLoadStrong(v4, v10);
  if (!v13)
  {
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v14 = (void *)v13;
  v88 = v12;
  v15 = objc_msgSend(v88, "displayTitle");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = *(void **)&v3[v11];
  if (v19)
  {
    v20 = objc_msgSend(v19, "feedback");
    v21 = objc_msgSend(v20, "status");

  }
  else
  {
    v21 = 0;
  }
  sub_10007C4C8(v16, v18, v21, (char)objc_msgSend(v88, "isClosedFeedback"));

  swift_bridgeObjectRelease(v18);
  v26 = objc_msgSend(v88, "formResponseStub");
  if (!v26)
  {

    goto LABEL_60;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "questionGroupStubs");
  if (!v28)
  {

    goto LABEL_60;
  }
  v29 = v28;
  v86 = v27;
  v30 = sub_100053458(0, &qword_100117480, FBKQuestionGroupStub_ptr);
  v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

  v89 = v31;
  v87 = v3;
  if ((unint64_t)v31 >> 62)
    goto LABEL_50;
  v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v32)
  {
    v33 = 0;
    v91 = v4;
    v90 = v32;
    while (1)
    {
      if ((v89 & 0xC000000000000001) != 0)
      {
        v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v33, v89);
      }
      else
      {
        if (v33 >= *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_49;
        v34 = *(id *)(v89 + 32 + 8 * v33);
      }
      v36 = v34;
      if (__OFADD__(v33++, 1))
        break;
      v38 = swift_unknownObjectWeakLoadStrong(v4, v35);
      if (!v38)
        goto LABEL_84;
      v39 = (void *)v38;
      v31 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UIStackView), "init", v86);
      objc_msgSend((id)v31, "setAxis:", 1);
      objc_msgSend((id)v31, "setSpacing:", 20.0);
      v40 = objc_msgSend(v36, "title");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v42 = v41;

      sub_10007CAB0();
      swift_bridgeObjectRelease(v42);
      v43 = objc_msgSend(v36, "questionAnswerPairs");
      v44 = sub_100053458(0, &qword_100117488, FBKQuestionAnswerPair_ptr);
      v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, v44);

      v92 = v36;
      if ((unint64_t)v45 >> 62)
      {
        if (v45 < 0)
          v50 = v45;
        else
          v50 = v45 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v45);
        v4 = _CocoaArrayWrapper.endIndex.getter(v50);
        swift_bridgeObjectRelease(v45);
        if (v4)
        {
LABEL_23:
          if (v4 < 1)
            goto LABEL_48;
          v46 = 0;
          do
          {
            if ((v45 & 0xC000000000000001) != 0)
              v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v46, v45);
            else
              v47 = *(id *)(v45 + 8 * v46 + 32);
            v48 = v47;
            ++v46;
            v49 = sub_10007CFC8(v47);
            objc_msgSend((id)v31, "addArrangedSubview:", v49);

          }
          while (v4 != v46);
        }
      }
      else
      {
        v4 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v4)
          goto LABEL_23;
      }
      swift_bridgeObjectRelease(v45);
      objc_msgSend(v39, "addArrangedSubview:", v31);

      v4 = v91;
      v52 = swift_unknownObjectWeakLoadStrong(v91, v51);
      if (!v52)
        goto LABEL_85;
      v31 = v52;
      v53 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      objc_msgSend(v53, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v54 = objc_msgSend(v53, "heightAnchor");
      v55 = objc_msgSend(v54, "constraintEqualToConstant:", 0.5);

      objc_msgSend(v55, "setActive:", 1);
      v56 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
      objc_msgSend(v53, "setBackgroundColor:", v56);

      objc_msgSend((id)v31, "addArrangedSubview:", v53);
      objc_msgSend((id)v31, "setCustomSpacing:afterView:", v53, 8.0);

      if (v33 == v90)
        goto LABEL_35;
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    if (v31 < 0)
      v71 = v31;
    else
      v71 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v31);
    v32 = _CocoaArrayWrapper.endIndex.getter(v71);
    swift_bridgeObjectRelease(v31);
  }
LABEL_35:
  swift_bridgeObjectRelease(v89);
  v58 = (void *)swift_unknownObjectWeakLoadStrong(v4, v57);
  if (!v58)
    goto LABEL_91;
  v59 = v58;
  v60 = objc_msgSend(v58, "arrangedSubviews");

  v61 = sub_100053458(0, (unint64_t *)&qword_100116D00, UIView_ptr);
  v62 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v60, v61);

  v3 = v87;
  v63 = (uint64_t)v88;
  if (!((unint64_t)v62 >> 62))
  {
    v64 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v64)
      goto LABEL_38;
LABEL_59:

    swift_bridgeObjectRelease(v62);
    goto LABEL_60;
  }
  if (v62 < 0)
    v72 = v62;
  else
    v72 = v62 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v62);
  v64 = _CocoaArrayWrapper.endIndex.getter(v72);
  swift_bridgeObjectRelease(v62);
  if (!v64)
    goto LABEL_59;
LABEL_38:
  v65 = v64 - 1;
  if (__OFSUB__(v64, 1))
    goto LABEL_80;
  if ((v62 & 0xC000000000000001) != 0)
    goto LABEL_81;
  if ((v65 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_83;
  }
  if (v65 >= *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  for (i = *(id *)(v62 + 8 * v65 + 32); ; i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v65, v62))
  {
    v67 = i;
    swift_bridgeObjectRelease(v62);
    v69 = (void *)swift_unknownObjectWeakLoadStrong(v4, v68);
    if (!v69)
      break;
    v70 = v69;
    objc_msgSend(v69, "removeArrangedSubview:", v67);

    objc_msgSend(v67, "removeFromSuperview");
LABEL_60:
    v73 = (void *)swift_unknownObjectWeakLoadStrong(v4, v25);
    if (!v73)
      goto LABEL_88;
    v62 = (uint64_t)v73;
    v74 = objc_msgSend(v73, "arrangedSubviews");

    v75 = sub_100053458(0, (unint64_t *)&qword_100116D00, UIView_ptr);
    v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v74, v75);

    if ((unint64_t)v63 >> 62)
    {
      if (v63 < 0)
        v62 = v63;
      else
        v62 = v63 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v63);
      v76 = _CocoaArrayWrapper.endIndex.getter(v62);
      v65 = swift_bridgeObjectRelease(v63);
      if (!v76)
        goto LABEL_78;
    }
    else
    {
      v76 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v76)
        goto LABEL_78;
    }
    if (v76 >= 1)
    {
      for (j = 0; j != v76; ++j)
      {
        if ((v63 & 0xC000000000000001) != 0)
          v80 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v63);
        else
          v80 = *(id *)(v63 + 8 * j + 32);
        v81 = v80;
        v82 = objc_opt_self(UILabel);
        v83 = swift_dynamicCastObjCClass(v81, v82);
        if (v83 || (v84 = objc_opt_self(UIStackView), (v83 = swift_dynamicCastObjCClass(v81, v84)) != 0))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v83);
          v78 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v78);
          v79 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v78, v81);
          specialized ContiguousArray._endMutation()(v79);
        }
        else
        {

        }
      }
LABEL_78:
      swift_bridgeObjectRelease(v63);
      v85 = sub_10007D800((uint64_t)_swiftEmptyArrayStorage);
      swift_release(_swiftEmptyArrayStorage);
      sub_10007B830(v85);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      objc_msgSend(v3, "setAccessibilityElements:", isa);

      return;
    }
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    ;
  }
LABEL_92:
  __break(1u);
}

void sub_10007C39C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  v1 = objc_msgSend(v0, "arrangedSubviews");
  v2 = sub_100053458(0, (unint64_t *)&qword_100116D00, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v8 = v3;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v6 = *(id *)(v3 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      objc_msgSend(v0, "removeArrangedSubview:", v6);
      objc_msgSend(v7, "removeFromSuperview");

    }
    while (v4 != v5);
    goto LABEL_13;
  }
  __break(1u);
}

void sub_10007C4C8(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  void *v4;
  id v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  void *object;
  NSString v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  Swift::String v27;

  v7 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v7, "setNumberOfLines:", 0);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setText:", v8);

  v9 = sub_10007CDC8();
  objc_msgSend(v7, "setFont:", v9);

  objc_msgSend(v4, "addArrangedSubview:", v7);
  if ((a4 & 1) != 0)
  {
    v10 = objc_allocWithZone((Class)UILabel);
    v11 = v7;
    v26 = objc_msgSend(v10, "init");
    objc_msgSend(v26, "setNumberOfLines:", 0);
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
    v14 = v13;
    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v27._object = (void *)0xE000000000000000;
    v16._object = (void *)0x80000001000D7F90;
    v16._countAndFlagsBits = 0xD000000000000015;
    v17.value._countAndFlagsBits = v12;
    v17.value._object = v14;
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v27._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v27)._object;
    swift_bridgeObjectRelease(v14);

    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v26, "setText:", v20);

    v21 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    objc_msgSend(v26, "setTextColor:", v21);

    objc_msgSend(v4, "addArrangedSubview:", v26);
    objc_msgSend(v4, "setCustomSpacing:afterView:", v11, 5.0);

    if (!a3)
      goto LABEL_6;
    goto LABEL_5;
  }
  v26 = v7;
  if (a3)
  {
LABEL_5:
    v22 = objc_allocWithZone((Class)UILabel);
    v23 = a3;
    v24 = objc_msgSend(v22, "init");
    objc_msgSend(v24, "setNumberOfLines:", 0);
    v25 = objc_msgSend(v23, "attributedStringRepresentation");
    objc_msgSend(v24, "setAttributedText:", v25);

    objc_msgSend(v4, "addArrangedSubview:", v24);
    objc_msgSend(v4, "setCustomSpacing:afterView:", v26, 5.0);

    v26 = v24;
  }
LABEL_6:
  sub_10007C7D0();

}

void sub_10007C7D0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = objc_msgSend(v4, "heightAnchor");
  v2 = objc_msgSend(v1, "constraintEqualToConstant:", 0.5);

  objc_msgSend(v2, "setActive:", 1);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  objc_msgSend(v4, "setBackgroundColor:", v3);

  objc_msgSend(v0, "addArrangedSubview:", v4);
  objc_msgSend(v0, "setCustomSpacing:afterView:", v4, 8.0);

}

void sub_10007C8E4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  objc_super v19;

  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for FBAResponseItemDetailCell();
  objc_msgSendSuper2(&v19, "layoutSubviews");
  v1 = &v0[OBJC_IVAR____TtC18Feedback_Assistant25FBAResponseItemDetailCell_questionGroupsStack];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18Feedback_Assistant25FBAResponseItemDetailCell_questionGroupsStack], v2);
  if (!Strong)
    goto LABEL_18;
  v4 = Strong;
  objc_msgSend(Strong, "sizeToFit");

  v6 = (void *)swift_unknownObjectWeakLoadStrong(v1, v5);
  if (!v6)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "arrangedSubviews");

  v9 = sub_100053458(0, (unint64_t *)&qword_100116D00, UIView_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v15 = v10;
    else
      v15 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v10);
    if (!v11)
      goto LABEL_15;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      goto LABEL_15;
  }
  if (v11 < 1)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  for (i = 0; i != v11; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
    else
      v13 = *(id *)(v10 + 8 * i + 32);
    v14 = v13;
    objc_msgSend(v13, "layoutSubviews");

  }
LABEL_15:
  swift_bridgeObjectRelease(v10);
  v17 = (void *)swift_unknownObjectWeakLoadStrong(v1, v16);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "layoutSubviews");

    return;
  }
LABEL_20:
  __break(1u);
}

void sub_10007CAB0()
{
  void *v0;
  id v1;
  void *object;
  NSString v3;
  id v4;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v5, "setNumberOfLines:", 0);
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v5, "setFont:", v1);

  object = String.uppercased()()._object;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v5, "setText:", v3);

  v4 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v5, "setTextColor:", v4);

  objc_msgSend(v0, "addArrangedSubview:", v5);
  objc_msgSend(v0, "setCustomSpacing:afterView:", v5, 8.0);

}

id sub_10007CD40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAResponseItemDetailCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAResponseItemDetailCell()
{
  return objc_opt_self(_TtC18Feedback_Assistant25FBAResponseItemDetailCell);
}

id sub_10007CDC8()
{
  uint64_t v0;
  uint64_t inited;
  NSString *v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString *v7;
  unint64_t v8;
  Class isa;
  id v10;
  id v11;
  id v12;
  id v13;
  _BYTE v15[72];
  _BYTE v16[48];

  v0 = sub_10004BB9C(&qword_100117490);
  inited = swift_initStackObject(v0, v16);
  *(_OWORD *)(inited + 16) = xmmword_1000CC730;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightBold;
  v2 = UIFontWeightTrait;
  v3 = sub_10007B2F4(inited);
  v4 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleHeadline);
  v5 = sub_10004BB9C(&qword_100117498);
  v6 = swift_initStackObject(v5, v15);
  *(_OWORD *)(v6 + 16) = xmmword_1000CC730;
  *(_QWORD *)(v6 + 32) = UIFontDescriptorTraitsAttribute;
  *(_QWORD *)(v6 + 64) = sub_10004BB9C(&qword_1001174A0);
  *(_QWORD *)(v6 + 40) = v3;
  v7 = UIFontDescriptorTraitsAttribute;
  v8 = sub_10007B3FC(v6, &qword_1001174A8, &qword_1001174B0, (uint64_t (*)(uint64_t))sub_10006D50C);
  type metadata accessor for AttributeName(0);
  sub_10007D300();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend(v4, "fontDescriptorByAddingAttributes:", isa);

  v11 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v10, 20.0);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleHeadline);
  v13 = objc_msgSend(v12, "scaledFontForFont:", v11);

  return v13;
}

id sub_10007CFC8(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *object;
  NSString v21;
  Swift::String v23;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v2, "setAxis:", 1);
  objc_msgSend(v2, "setSpacing:", 3.0);
  v3 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v3, "setNumberOfLines:", 0);
  v4 = (void *)objc_opt_self(UIFont);
  v5 = objc_msgSend(v4, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  objc_msgSend(v3, "setFont:", v5);

  v6 = objc_msgSend(a1, "questionText");
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v8 = v7;
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
  }
  objc_msgSend(v3, "setText:", v6);

  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setNumberOfLines:", 0);
  v10 = objc_msgSend(v4, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v9, "setFont:", v10);

  v11 = objc_msgSend(a1, "answerText");
  if (!v11)
    goto LABEL_7;
  v12 = v11;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v15 = v14;
  v16 = String.count.getter(v13);
  swift_bridgeObjectRelease(v15);
  if (v16 < 1)
  {

LABEL_7:
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v23._countAndFlagsBits = 0xD000000000000026;
    v23._object = (void *)0x80000001000D7F60;
    v18._object = (void *)0x80000001000D7F40;
    v18._countAndFlagsBits = 0xD00000000000001FLL;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v23)._object;

    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v9, "setText:", v21);

    v12 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    objc_msgSend(v9, "setTextColor:", v12);
    goto LABEL_8;
  }
  objc_msgSend(v9, "setText:", v12);
LABEL_8:

  objc_msgSend(v2, "addArrangedSubview:", v3);
  objc_msgSend(v2, "addArrangedSubview:", v9);

  return v2;
}

unint64_t sub_10007D300()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116098;
  if (!qword_100116098)
  {
    type metadata accessor for AttributeName(255);
    result = swift_getWitnessTable(&unk_1000CC1F0, v1);
    atomic_store(result, (unint64_t *)&qword_100116098);
  }
  return result;
}

void sub_10007D348(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  void *v37;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
    v5 = sub_10008536C((unint64_t *)&qword_100116998, (unint64_t *)&qword_100116990, FBKContentItem_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    isUniquelyReferenced_nonNull_native = (uint64_t)Set.Iterator.init(_cocoa:)(v36, v3, v4, v5);
    v1 = v36[0];
    v34 = v36[1];
    v8 = v36[2];
    v7 = v36[3];
    v9 = v36[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v34 = a1 + 56;
    v8 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain(a1);
    v7 = 0;
  }
  v31 = v8;
  v33 = (unint64_t)(v8 + 64) >> 6;
  v32 = _swiftEmptyArrayStorage;
  while (1)
  {
    v13 = v7;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    v16 = __CocoaSet.Iterator.next()(isUniquelyReferenced_nonNull_native);
    if (!v16)
      goto LABEL_41;
    v17 = v16;
    v35 = v16;
    v18 = sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
    swift_unknownObjectRetain(v17);
    swift_dynamicCast(&v37, &v35, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
    v19 = v37;
    swift_unknownObjectRelease(v17);
    if (!v19)
      goto LABEL_41;
LABEL_34:
    v23 = objc_msgSend(v19, "area", v31);
    if (v23)
    {
      v24 = v23;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v27 = v26;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_10007E058(0, v32[2] + 1, 1, v32);
        v32 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v29 = v32[2];
      v28 = v32[3];
      if (v29 >= v28 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_10007E058((_QWORD *)(v28 > 1), v29 + 1, 1, v32);
        v32 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v32[2] = v29 + 1;
      v30 = &v32[2 * v29];
      v30[4] = v25;
      v30[5] = v27;
    }
    else
    {

    }
  }
  if (v9)
  {
    v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v15 = v14 | (v7 << 6);
LABEL_33:
    v19 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v19)
      goto LABEL_41;
    goto LABEL_34;
  }
  v20 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v20 >= v33)
      goto LABEL_41;
    v21 = *(_QWORD *)(v34 + 8 * v20);
    ++v7;
    if (!v21)
    {
      v7 = v13 + 2;
      if (v13 + 2 >= v33)
        goto LABEL_41;
      v21 = *(_QWORD *)(v34 + 8 * v7);
      if (!v21)
      {
        v7 = v13 + 3;
        if (v13 + 3 >= v33)
          goto LABEL_41;
        v21 = *(_QWORD *)(v34 + 8 * v7);
        if (!v21)
        {
          v7 = v13 + 4;
          if (v13 + 4 >= v33)
            goto LABEL_41;
          v21 = *(_QWORD *)(v34 + 8 * v7);
          if (!v21)
          {
            v7 = v13 + 5;
            if (v13 + 5 >= v33)
              goto LABEL_41;
            v21 = *(_QWORD *)(v34 + 8 * v7);
            if (!v21)
            {
              v22 = v13 + 6;
              while (v33 != v22)
              {
                v21 = *(_QWORD *)(v34 + 8 * v22++);
                if (v21)
                {
                  v7 = v22 - 1;
                  goto LABEL_32;
                }
              }
LABEL_41:
              sub_10005BEE4(v1);
              return;
            }
          }
        }
      }
    }
LABEL_32:
    v9 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v7 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

_QWORD *sub_10007D6D4(uint64_t a1)
{
  return sub_10007D710(a1, &qword_100116610, FBKTeam_ptr);
}

uint64_t sub_10007D6E8(uint64_t a1)
{
  return sub_10007D814(a1, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
}

_QWORD *sub_10007D6FC(uint64_t a1)
{
  return sub_10007D710(a1, (unint64_t *)&qword_100116C18, FBKParticipant_ptr);
}

_QWORD *sub_10007D710(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[32];
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(a1 + 16);
  result = &_swiftEmptyArrayStorage;
  if (v4)
  {
    v16 = &_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    v8 = a1 + 32;
    do
    {
      sub_1000506D8(v8, (uint64_t)v14);
      v9 = sub_100053458(0, a2, a3);
      v10 = swift_dynamicCast(&v15, v14, (char *)&type metadata for Any + 8, v9, 7);
      v11 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
      v8 += 32;
      --v4;
    }
    while (v4);
    return v16;
  }
  return result;
}

uint64_t sub_10007D800(uint64_t a1)
{
  return sub_10007D814(a1, (unint64_t *)&qword_100116D00, UIView_ptr);
}

uint64_t sub_10007D814(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t i;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id *v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  _OWORD v20[2];
  _QWORD *v21;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = &_swiftEmptyArrayStorage;
  if (!v6)
    return (uint64_t)v7;
  v21 = &_swiftEmptyArrayStorage;
  result = sub_10007E574(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v6; ++i)
      {
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v10 = sub_100053458(0, a2, a3);
        swift_dynamicCast(v20, &v19, v10, (char *)&type metadata for Any + 8, 7);
        v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_10007E574(0, v7[2] + 1, 1);
          v7 = v21;
        }
        v12 = v7[2];
        v11 = v7[3];
        if (v12 >= v11 >> 1)
        {
          sub_10007E574(v11 > 1, v12 + 1, 1);
          v7 = v21;
        }
        v7[2] = v12 + 1;
        sub_100075EC4(v20, &v7[4 * v12 + 4]);
      }
    }
    else
    {
      v13 = (id *)(a1 + 32);
      v14 = sub_100053458(0, a2, a3);
      do
      {
        v19 = *v13;
        v15 = v19;
        swift_dynamicCast(v20, &v19, v14, (char *)&type metadata for Any + 8, 7);
        v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_10007E574(0, v7[2] + 1, 1);
          v7 = v21;
        }
        v17 = v7[2];
        v16 = v7[3];
        if (v17 >= v16 >> 1)
        {
          sub_10007E574(v16 > 1, v17 + 1, 1);
          v7 = v21;
        }
        v7[2] = v17 + 1;
        sub_100075EC4(v20, &v7[4 * v17 + 4]);
        ++v13;
        --v6;
      }
      while (v6);
    }
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

char *sub_10007DBD0@<X0>(id *a1@<X0>, char **a2@<X8>)
{
  id v3;
  id v4;
  id *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  void *v13;
  char *result;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _BYTE v21[40];

  v3 = *a1;
  v4 = objc_msgSend(*a1, "teamType");
  v5 = (id *)&FBKSystemImageNameFilterPersonalTeam;
  if (v4)
    v5 = (id *)&FBKSystemImageNameFilterOtherTeam;
  v6 = *v5;
  sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
  v7 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1000CC730;
  v9 = sub_10004BB9C((uint64_t *)&unk_100117030);
  inited = swift_initStackObject(v9, v21);
  *(_OWORD *)(inited + 16) = xmmword_1000CCB30;
  *(_QWORD *)(inited + 32) = v3;
  v20 = inited;
  specialized Array._endMutation()(inited);
  v11 = v3;
  v12 = sub_10008319C(v20, &qword_100116610, FBKTeam_ptr, (unint64_t *)&qword_100116618, &qword_100117508);
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)(v8 + 56) = sub_10004BB9C(&qword_1001174F8);
  *(_QWORD *)(v8 + 64) = sub_10004F6D8(&qword_100117500, &qword_1001174F8, (uint64_t)&protocol conformance descriptor for Set<A>);
  *(_QWORD *)(v8 + 32) = v12;
  v13 = (void *)NSPredicate.init(format:_:)(0x6D61657420594E41, 0xEF4025204E492073, v8);
  result = (char *)objc_msgSend(v11, "name");
  if (result)
  {
    v15 = result;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v18 = v17;

    v19 = objc_allocWithZone((Class)type metadata accessor for FBAFilter());
    result = sub_100076FF4(v13, v16, v18, v6);
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10007DE50(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_10004BB9C(&qword_100117540);
  v11 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10008303C(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

_QWORD *sub_10007E058(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004BB9C(&qword_100116890);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100082F4C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10007E164(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004BB9C((uint64_t *)&unk_1001178F0);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000833CC(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t **sub_10007E270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t **result;
  uint64_t v9;

  v1 = a1;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (v2)
      goto LABEL_5;
    return (uint64_t **)&_swiftEmptyArrayStorage;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v2 = __CocoaSet.count.getter(a1);
  if (!v2)
    return (uint64_t **)&_swiftEmptyArrayStorage;
LABEL_5:
  if (v2 <= 0)
  {
    v4 = (uint64_t **)&_swiftEmptyArrayStorage;
  }
  else
  {
    v3 = sub_10004BB9C((uint64_t *)&unk_100117030);
    v4 = (uint64_t **)swift_allocObject(v3, 8 * v2 + 32, 7);
    v5 = j__malloc_size(v4);
    v6 = v5 - 32;
    if (v5 < 32)
      v6 = v5 - 25;
    v4[2] = (uint64_t *)v2;
    v4[3] = (uint64_t *)((2 * (v6 >> 3)) | 1);
  }
  swift_bridgeObjectRetain(v1);
  v7 = sub_1000827DC(&v9, v4 + 4, v2, v1);
  result = (uint64_t **)sub_10005BEE4(v9);
  if (v7 == (uint64_t *)v2)
    return v4;
  __break(1u);
  return result;
}

_QWORD *sub_10007E368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10004BB9C(&qword_100117538);
  v4 = *(_QWORD *)(type metadata accessor for FBKFeedbackUpload.BugSession(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      v11 = sub_100082AEC(&v13, (uint64_t)v8 + v7, v1, a1);
      v12 = v13;
      swift_bridgeObjectRetain(a1);
      sub_10005BEE4(v12);
      if (v11 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_10007E480(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = sub_10004BB9C((uint64_t *)&unk_100117030);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = j__malloc_size(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    v7 = sub_1000824DC((unint64_t)(v4 + 4), v2, v1);
    v1 = v8;
    swift_bridgeObjectRelease(v7);
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v9 = v1;
    else
      v9 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_10007E574(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10007E5AC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10007E590(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10007E718(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10007E5AC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004BB9C((uint64_t *)&unk_1001178F0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007E718(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004BB9C(&qword_100116890);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

Swift::Int sub_10007E880(uint64_t a1)
{
  return sub_10007EE78(a1, &qword_100117528);
}

Swift::Int sub_10007E88C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  Swift::Int result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10004BB9C(&qword_1001174F0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    result = swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v9)
      {
        v16 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v10)
          goto LABEL_36;
        v19 = v33[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v10)
            goto LABEL_36;
          v19 = v33[v13];
          if (!v19)
          {
            v13 = v18 + 2;
            if (v18 + 2 >= v10)
              goto LABEL_36;
            v19 = v33[v13];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  v13 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v13 >= v10)
                    goto LABEL_36;
                  v19 = v33[v13];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v13 = v20;
            }
          }
        }
LABEL_26:
        v9 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v17);
      v22 = *v21;
      v23 = v21[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v22, v23);
      result = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v14);
      *v15 = v22;
      v15[1] = v23;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release(v3);
  *v2 = v6;
  return result;
}

uint64_t sub_10007EB68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  _QWORD v36[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10004BB9C(&qword_100117520);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v33 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v35 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v34 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    result = swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v16 >= v34)
          goto LABEL_36;
        v17 = v35[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v34)
            goto LABEL_36;
          v17 = v35[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v34)
              goto LABEL_36;
            v17 = v35[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v34)
              {
LABEL_36:
                swift_release(v3);
                v2 = v33;
                v32 = 1 << *(_BYTE *)(v3 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v17 = v35[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_42;
                  if (v12 >= v34)
                    goto LABEL_36;
                  v17 = v35[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_26;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_26:
        v9 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
      v20 = *(_QWORD *)(v6 + 40);
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v23 = v22;
      Hasher.init(_seed:)(v36, v20);
      String.hash(into:)(v36, v21, v23);
      v24 = Hasher._finalize()();
      result = swift_bridgeObjectRelease(v23);
      v25 = -1 << *(_BYTE *)(v6 + 32);
      v26 = v24 & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v10 + 8 * v27);
        }
        while (v31 == -1);
        v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release(v3);
  *v2 = v6;
  return result;
}

Swift::Int sub_10007EE78(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  Swift::Int result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10004BB9C(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v31 = v3;
    v8 = 1 << *(_BYTE *)(v4 + 32);
    v9 = (_QWORD *)(v4 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 56;
    result = swift_retain(v4);
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v19 >= v12)
          goto LABEL_36;
        v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v12)
            goto LABEL_36;
          v20 = v9[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v12)
              goto LABEL_36;
            v20 = v9[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v12)
              {
LABEL_36:
                swift_release(v4);
                v3 = v31;
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v20 = v9[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_42;
                  if (v15 >= v12)
                    goto LABEL_36;
                  v20 = v9[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_26;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_26:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v18);
      result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v7 + 40));
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release(v4);
  *v3 = v7;
  return result;
}

unint64_t sub_10007F114(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

Swift::Int sub_10007F194(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  Swift::Int v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_10007F2F0((Swift::Int)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v2);
    v9 = swift_release(v2);
    if (v1)
      swift_willThrow(v9);
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v7, -1);
    bzero(v10, v7);
    v8 = sub_10007F2F0((Swift::Int)v10, v6, v2);
    swift_release(v2);
    swift_slowDealloc(v10, -1, -1);
  }
  return v8;
}

Swift::Int sub_10007F2F0(Swift::Int result, uint64_t a2, uint64_t a3)
{
  unint64_t *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v5 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v14 = v13 | (v7 << 6);
LABEL_5:
    v15 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v14);
    v17 = *v15;
    v16 = v15[1];
    v18 = v17 & 0xFFFFFFFFFFFFLL;
    if ((v16 & 0x2000000000000000) != 0)
      v19 = HIBYTE(v16) & 0xF;
    else
      v19 = v18;
    if (v19)
    {
      *(_QWORD *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_27:
        swift_retain(a3);
        return sub_10007F6D0(v5, a2, v6, a3);
      }
    }
  }
  v20 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v20 >= v12)
    goto LABEL_27;
  v21 = *(_QWORD *)(v8 + 8 * v20);
  ++v7;
  if (v21)
    goto LABEL_23;
  v7 = v20 + 1;
  if (v20 + 1 >= v12)
    goto LABEL_27;
  v21 = *(_QWORD *)(v8 + 8 * v7);
  if (v21)
    goto LABEL_23;
  v7 = v20 + 2;
  if (v20 + 2 >= v12)
    goto LABEL_27;
  v21 = *(_QWORD *)(v8 + 8 * v7);
  if (v21)
  {
LABEL_23:
    v11 = (v21 - 1) & v21;
    v14 = __clz(__rbit64(v21)) + (v7 << 6);
    goto LABEL_5;
  }
  v22 = v20 + 3;
  if (v22 >= v12)
    goto LABEL_27;
  v21 = *(_QWORD *)(v8 + 8 * v22);
  if (v21)
  {
    v7 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v7 >= v12)
      goto LABEL_27;
    v21 = *(_QWORD *)(v8 + 8 * v7);
    ++v22;
    if (v21)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

Swift::Int sub_10007F474(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_10004BB9C(&qword_100117528);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v29[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v29[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = v9[5];
    v19 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = NSObject._rawHashValue(seed:)(v18);
    v20 = -1 << *((_BYTE *)v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v29[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v29[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_10007F6D0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _QWORD v32[9];

  v4 = a4;
  if (!a3)
  {
    v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_10004BB9C(&qword_1001174F0);
  result = static _SetStorage.allocate(capacity:)(v5);
  v8 = (_QWORD *)result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    Hasher.init(_seed:)(v32, v8[5]);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(v32, v18, v19);
    result = Hasher._finalize()();
    v20 = -1 << *((_BYTE *)v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(v8[6] + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10007F964(Swift::Int *a1, void *a2)
{
  return sub_10007FD54(a1, a2, &qword_100116958, FBKUploadTask_ptr, &qword_100117528);
}

uint64_t sub_10007F980(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain(a3);
  sub_1000803AC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10007FB2C(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  uint64_t v32;
  void *v34;
  id v35;
  _QWORD v36[9];

  v3 = v2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 40);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v10 = v9;
  Hasher.init(_seed:)(v36, v7);
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(v36, v8, v10);
  v11 = Hasher._finalize()();
  swift_bridgeObjectRelease(v10);
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v36[0] = *v3;
    *v3 = 0x8000000000000000;
    v31 = a2;
    sub_100080544(v31, v13, isUniquelyReferenced_nonNull_native);
    v32 = *v3;
    *v3 = v36[0];
    swift_bridgeObjectRelease(v32);
    *a1 = v31;
    return 1;
  }
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13));
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v14 == v17 && v16 == v18)
  {
LABEL_16:
    swift_bridgeObjectRelease_n(v16, 2);
  }
  else
  {
    v20 = v18;
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) == 0)
    {
      v22 = ~v12;
      do
      {
        v13 = (v13 + 1) & v22;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          goto LABEL_15;
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13));
        v16 = v24;
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
        if (v23 == v25 && v16 == v26)
          goto LABEL_16;
        v28 = v26;
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v16, v25, v26, 0);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease(v28);
      }
      while ((v29 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease(v6);
  v34 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v13);
  *a1 = v34;
  v35 = v34;
  return 0;
}

uint64_t sub_10007FD54(Swift::Int *a1, void *a2, unint64_t *a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  Swift::Int v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  void *v27;
  id v28;
  Swift::Int v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v42;
  Swift::Int v43;

  v9 = v5;
  v12 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v12 < 0)
      v13 = *v5;
    else
      v13 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v5);
    v14 = a2;
    v15 = __CocoaSet.member(for:)();

    if (v15)
    {
      swift_bridgeObjectRelease(v12);

      v42 = v15;
      v16 = sub_100053458(0, a3, a4);
      swift_unknownObjectRetain(v15);
      swift_dynamicCast(&v43, &v42, (char *)&type metadata for Swift.AnyObject + 8, v16, 7);
      *a1 = v43;
      swift_unknownObjectRelease(v15);
      return 0;
    }
    result = __CocoaSet.count.getter(v13);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v29 = sub_10008001C(v13, result + 1, a5, a3, a4);
    v43 = v29;
    v30 = *(_QWORD *)(v29 + 16);
    if (*(_QWORD *)(v29 + 24) <= v30)
    {
      v36 = v30 + 1;
      v37 = v14;
      sub_10007EE78(v36, a5);
      v31 = v43;
    }
    else
    {
      v31 = v29;
      v32 = v14;
    }
    sub_10007F114((uint64_t)v14, v31);
    v38 = *v9;
    *v9 = v31;
    swift_bridgeObjectRelease(v38);
    *a1 = (Swift::Int)v14;
  }
  else
  {
    v18 = *(_QWORD *)(v12 + 40);
    swift_bridgeObjectRetain(v12);
    v19 = NSObject._rawHashValue(seed:)(v18);
    v20 = -1 << *(_BYTE *)(v12 + 32);
    v21 = v19 & ~v20;
    v39 = a4;
    if (((*(_QWORD *)(v12 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
    {
      sub_100053458(0, a3, a4);
      v22 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * v21);
      v23 = static NSObject.== infix(_:_:)(v22, a2);

      if ((v23 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v12);
        v27 = *(void **)(*(_QWORD *)(*v9 + 48) + 8 * v21);
        *a1 = (Swift::Int)v27;
        v28 = v27;
        return 0;
      }
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v12 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * v21);
        v26 = static NSObject.== infix(_:_:)(v25, a2);

        if ((v26 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
    v43 = *v9;
    *v9 = 0x8000000000000000;
    v34 = a2;
    sub_10008021C((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v39);
    v35 = *v9;
    *v9 = v43;
    swift_bridgeObjectRelease(v35);
    *a1 = (Swift::Int)v34;
  }
  return 1;
}

Swift::Int sub_10008001C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a2)
  {
    sub_10004BB9C(a3);
    v10 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v29 = v10;
    v11 = __CocoaSet.makeIterator()(a1);
    v12 = __CocoaSet.Iterator.next()(v11);
    if (v12)
    {
      v13 = v12;
      v14 = sub_100053458(0, a4, a5);
      do
      {
        v27 = v13;
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v14, 7);
        v10 = v29;
        v22 = *(_QWORD *)(v29 + 16);
        if (*(_QWORD *)(v29 + 24) <= v22)
        {
          sub_10007EE78(v22 + 1, a3);
          v10 = v29;
        }
        v15 = v28;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v10 + 40));
        v17 = v10 + 56;
        v18 = -1 << *(_BYTE *)(v10 + 32);
        v19 = result & ~v18;
        v20 = v19 >> 6;
        if (((-1 << v19) & ~*(_QWORD *)(v10 + 56 + 8 * (v19 >> 6))) != 0)
        {
          v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v10 + 56 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v23 = 0;
          v24 = (unint64_t)(63 - v18) >> 6;
          do
          {
            if (++v20 == v24 && (v23 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v25 = v20 == v24;
            if (v20 == v24)
              v20 = 0;
            v23 |= v25;
            v26 = *(_QWORD *)(v17 + 8 * v20);
          }
          while (v26 == -1);
          v21 = __clz(__rbit64(~v26)) + (v20 << 6);
        }
        *(_QWORD *)(v17 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
        *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v21) = v15;
        ++*(_QWORD *)(v10 + 16);
        v13 = __CocoaSet.Iterator.next()(result);
      }
      while (v13);
    }
    swift_release(v11);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v10;
}

void sub_10008021C(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5, _QWORD *a6)
{
  uint64_t *v6;
  uint64_t *v9;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v9 = v6;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_14;
  v14 = v12 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10007EE78(v14, a4);
  }
  else
  {
    if (v13 > v12)
    {
      sub_100080AC8(a4);
      goto LABEL_14;
    }
    sub_1000811F0(v14, a4);
  }
  v15 = *v6;
  v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v6 + 40));
  v17 = -1 << *(_BYTE *)(v15 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = sub_100053458(0, a5, a6);
    v19 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * a2);
    v20 = static NSObject.== infix(_:_:)(v19, a1);

    if ((v20 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v18);
      __break(1u);
    }
    else
    {
      v21 = ~v17;
      while (1)
      {
        a2 = (a2 + 1) & v21;
        if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * a2);
        v23 = static NSObject.== infix(_:_:)(v22, a1);

        if ((v23 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v24 = *v9;
  *(_QWORD *)(*v9 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v24 + 48) + 8 * a2) = a1;
  v25 = *(_QWORD *)(v24 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v27;
}

uint64_t sub_1000803AC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD v28[9];

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_10007E88C(v11);
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_100080770();
      goto LABEL_22;
    }
    sub_100080C68(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v28, *(_QWORD *)(*v4 + 40));
  String.hash(into:)(v28, v8, a2);
  result = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v12 + 32);
  a3 = result & ~v13;
  v14 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v15 = *(_QWORD *)(v12 + 48);
    v16 = (_QWORD *)(v15 + 16 * a3);
    v17 = v16[1];
    v18 = *v16 == v8 && v17 == a2;
    if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, a2, 0), (result & 1) != 0))
    {
LABEL_21:
      result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v19 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v19;
        if (((*(_QWORD *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v20 = (_QWORD *)(v15 + 16 * a3);
        v21 = v20[1];
        if (*v20 != v8 || v21 != a2)
        {
          result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, a2, 0);
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v23 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v24 = (uint64_t *)(*(_QWORD *)(v23 + 48) + 16 * a3);
  *v24 = v8;
  v24[1] = a2;
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
    __break(1u);
  else
    *(_QWORD *)(v23 + 16) = v27;
  return result;
}

id sub_100080544(id result, unint64_t a2, char a3)
{
  Swift::Int v3;
  uint64_t *v4;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[9];

  v4 = (uint64_t *)v3;
  v6 = result;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10007EB68(v9);
  }
  else
  {
    if (v8 > v7)
    {
      result = sub_100080920();
LABEL_22:
      v31 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v31 + 48) + 8 * a2) = v6;
      v32 = *(_QWORD *)(v31 + 16);
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (!v33)
      {
        *(_QWORD *)(v31 + 16) = v34;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_100080F14(v9);
  }
  v10 = *(_QWORD *)v3;
  v11 = *(_QWORD *)(*(_QWORD *)v3 + 40);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v14 = v13;
  Hasher.init(_seed:)(v36, v11);
  String.hash(into:)(v36, v12, v14);
  v3 = Hasher._finalize()();
  result = (id)swift_bridgeObjectRelease(v14);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v3 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2));
  v3 = v17;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v16 == v18 && v3 == v19)
  {
LABEL_25:
    swift_bridgeObjectRelease_n(v3, 2);
    goto LABEL_26;
  }
  v21 = v19;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v3, v18, v19, 0);
  swift_bridgeObjectRelease(v3);
  result = (id)swift_bridgeObjectRelease(v21);
  if ((v22 & 1) == 0)
  {
    v23 = ~v15;
    do
    {
      a2 = (a2 + 1) & v23;
      if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2));
      v3 = v25;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      if (v24 == v26 && v3 == v27)
        goto LABEL_25;
      v29 = v27;
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v3, v26, v27, 0);
      swift_bridgeObjectRelease(v3);
      result = (id)swift_bridgeObjectRelease(v29);
    }
    while ((v30 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for URLResourceKey(0);
  result = (id)ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v35);
  __break(1u);
  return result;
}

void *sub_100080770()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10004BB9C(&qword_1001174F0);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain(v18);
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_100080920()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_10004BB9C(&qword_100117520);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_100080AC8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_10004BB9C(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

Swift::Int sub_100080C68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10004BB9C(&qword_1001174F0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = swift_release(v3);
LABEL_38:
    *v2 = v6;
    return result;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  result = swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_27;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v32)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v32)
        goto LABEL_36;
      v19 = *(_QWORD *)(v8 + 8 * v13);
      if (!v19)
      {
        v13 = v18 + 2;
        if (v18 + 2 >= v32)
          goto LABEL_36;
        v19 = *(_QWORD *)(v8 + 8 * v13);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_27:
    v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain(v23);
    String.hash(into:)(v33, v22, v23);
    result = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v14);
    *v15 = v22;
    v15[1] = v23;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_36:
    result = swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v13 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v32)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100080F14(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  _QWORD v36[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10004BB9C(&qword_100117520);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = swift_release(v3);
LABEL_38:
    *v2 = v6;
    return result;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v33 = v2;
  v34 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v35 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  result = swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_27;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v35)
      goto LABEL_36;
    v17 = *(_QWORD *)(v34 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v35)
        goto LABEL_36;
      v17 = *(_QWORD *)(v34 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v35)
          goto LABEL_36;
        v17 = *(_QWORD *)(v34 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_27:
    v19 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v15);
    v20 = *(_QWORD *)(v6 + 40);
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v23 = v22;
    Hasher.init(_seed:)(v36, v20);
    v24 = v19;
    String.hash(into:)(v36, v21, v23);
    v25 = Hasher._finalize()();
    result = swift_bridgeObjectRelease(v23);
    v26 = -1 << *(_BYTE *)(v6 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v10 + 8 * v28);
      }
      while (v32 == -1);
      v13 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v24;
    ++*(_QWORD *)(v6 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v35)
  {
LABEL_36:
    result = swift_release_n(v3, 2);
    v2 = v33;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v34 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v35)
      goto LABEL_36;
    v17 = *(_QWORD *)(v34 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_1000811F0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  Swift::Int result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  Swift::Int v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10004BB9C(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release(v4);
LABEL_38:
    *v3 = v7;
    return result;
  }
  v31 = v3;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = v4 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v8 + 63) >> 6;
  v13 = v6 + 56;
  result = swift_retain(v4);
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_27;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v19 >= v12)
      goto LABEL_36;
    v20 = *(_QWORD *)(v9 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v12)
        goto LABEL_36;
      v20 = *(_QWORD *)(v9 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v12)
          goto LABEL_36;
        v20 = *(_QWORD *)(v9 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_26:
    v11 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_27:
    v22 = *(_QWORD *)(v7 + 40);
    v23 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    result = NSObject._rawHashValue(seed:)(v22);
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v26);
      }
      while (v30 == -1);
      v16 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v12)
  {
LABEL_36:
    result = swift_release_n(v4, 2);
    v3 = v31;
    goto LABEL_38;
  }
  v20 = *(_QWORD *)(v9 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_26;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v12)
      goto LABEL_36;
    v20 = *(_QWORD *)(v9 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100081464(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  Swift::Int v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100082F38(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  v5 = sub_1000814DC(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

Swift::Int sub_1000814DC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id *v26;
  int v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v40;
  Swift::Int v41;
  Swift::Int v42;
  uint64_t *v43;
  uint64_t v44;
  Swift::Int v45;
  uint64_t v46;
  Swift::Int v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v61;
  void *v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  Swift::Int v122;
  char *v123;
  char *v124;
  Swift::Int v125;
  Swift::Int v126;
  Swift::Int v127;
  int v128;
  uint64_t v129;
  void **v130;
  uint64_t v131;
  Swift::Int v132;
  Swift::Int v133;
  Swift::Int v134;
  uint64_t v135;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_150;
    if (v3)
      return sub_100081D94(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_158;
  v122 = result;
  v119 = a1;
  if (v3 < 2)
  {
    v9 = (char *)_swiftEmptyArrayStorage;
    v135 = (uint64_t)_swiftEmptyArrayStorage;
    v130 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
LABEL_116:
      if (v12 >= 2)
      {
        v112 = *v119;
        do
        {
          v113 = v12 - 2;
          if (v12 < 2)
            goto LABEL_145;
          if (!v112)
            goto LABEL_157;
          v114 = *(_QWORD *)&v9[16 * v113 + 32];
          v115 = *(_QWORD *)&v9[16 * v12 + 24];
          sub_100081F14((void **)(v112 + 8 * v114), (id *)(v112 + 8 * *(_QWORD *)&v9[16 * v12 + 16]), (id *)(v112 + 8 * v115), v130);
          if (v1)
            break;
          if (v115 < v114)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_1000824C8((uint64_t)v9);
          if (v113 >= *((_QWORD *)v9 + 2))
            goto LABEL_147;
          v116 = &v9[16 * v113 + 32];
          *(_QWORD *)v116 = v114;
          *((_QWORD *)v116 + 1) = v115;
          v117 = *((_QWORD *)v9 + 2);
          if (v12 > v117)
            goto LABEL_148;
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v117 - v12));
          *((_QWORD *)v9 + 2) = v117 - 1;
          v12 = v117 - 1;
        }
        while (v117 > 2);
      }
LABEL_127:
      v118 = swift_bridgeObjectRelease(v9);
      *(_QWORD *)((v135 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v118);
      return swift_bridgeObjectRelease(v135);
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = type metadata accessor for FBAFilter();
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v130 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v135 = v8;
  }
  v10 = 0;
  v11 = *a1;
  v120 = *a1 + 16;
  v121 = *a1 - 8;
  v9 = (char *)_swiftEmptyArrayStorage;
  v127 = v3;
  v131 = *a1;
  while (2)
  {
    v13 = v10 + 1;
    v126 = v10;
    if (v10 + 1 >= v3)
      goto LABEL_45;
    v123 = v9;
    v14 = *(void **)(v11 + 8 * v10);
    v15 = *(id *)(v11 + 8 * v13);
    v16 = v14;
    v17 = objc_msgSend(v15, "title");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v21 = objc_msgSend(v16, "title");
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    if (v18 == v22 && v20 == v24)
    {
      v128 = 0;
      v24 = v20;
    }
    else
    {
      v128 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v24, 1);
    }
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v24);

    v13 = v10 + 2;
    v3 = v127;
    if (v10 + 2 >= v127)
      goto LABEL_36;
    v26 = (id *)(v120 + 8 * v10);
    while (1)
    {
      v132 = v13;
      v28 = *(v26 - 1);
      v29 = *v26;
      v30 = v28;
      v31 = objc_msgSend(v29, "title");
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v34 = v33;

      v35 = objc_msgSend(v30, "title");
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

      if (v32 == v36 && v34 == v38)
      {

        swift_bridgeObjectRelease_n(v34, 2);
        if ((v128 & 1) != 0)
        {
          v9 = v123;
          v10 = v126;
          v3 = v127;
          v11 = v131;
          v13 = v132;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v36, v38, 1);

      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v38);
      if (((v128 ^ v27) & 1) != 0)
        break;
LABEL_25:
      v13 = v132 + 1;
      ++v26;
      v3 = v127;
      if (v127 == v132 + 1)
      {
        v13 = v127;
        goto LABEL_35;
      }
    }
    v3 = v127;
    v13 = v132;
LABEL_35:
    v10 = v126;
LABEL_36:
    v9 = v123;
    v11 = v131;
    if ((v128 & 1) != 0)
    {
LABEL_37:
      if (v13 < v10)
        goto LABEL_151;
      if (v10 < v13)
      {
        v40 = (uint64_t *)(v121 + 8 * v13);
        v41 = v13;
        v42 = v10;
        v43 = (uint64_t *)(v11 + 8 * v10);
        do
        {
          if (v42 != --v41)
          {
            if (!v11)
              goto LABEL_156;
            v44 = *v43;
            *v43 = *v40;
            *v40 = v44;
          }
          ++v42;
          --v40;
          ++v43;
        }
        while (v42 < v41);
      }
    }
LABEL_45:
    if (v13 >= v3)
      goto LABEL_68;
    if (__OFSUB__(v13, v10))
      goto LABEL_149;
    if (v13 - v10 >= v122)
    {
LABEL_68:
      if (v13 < v10)
        goto LABEL_144;
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        v9 = sub_100082328(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v64 = *((_QWORD *)v9 + 2);
      v63 = *((_QWORD *)v9 + 3);
      v12 = v64 + 1;
      if (v64 >= v63 >> 1)
        v9 = sub_100082328((char *)(v63 > 1), v64 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v12;
      v65 = v9 + 32;
      v66 = &v9[16 * v64 + 32];
      *(_QWORD *)v66 = v10;
      *((_QWORD *)v66 + 1) = v13;
      v134 = v13;
      if (!v64)
      {
        v12 = 1;
LABEL_14:
        v3 = v127;
        v10 = v134;
        if (v134 >= v127)
          goto LABEL_116;
        continue;
      }
      while (1)
      {
        v67 = v12 - 1;
        if (v12 >= 4)
        {
          v72 = &v65[16 * v12];
          v73 = *((_QWORD *)v72 - 8);
          v74 = *((_QWORD *)v72 - 7);
          v78 = __OFSUB__(v74, v73);
          v75 = v74 - v73;
          if (v78)
            goto LABEL_133;
          v77 = *((_QWORD *)v72 - 6);
          v76 = *((_QWORD *)v72 - 5);
          v78 = __OFSUB__(v76, v77);
          v70 = v76 - v77;
          v71 = v78;
          if (v78)
            goto LABEL_134;
          v79 = v12 - 2;
          v80 = &v65[16 * v12 - 32];
          v82 = *(_QWORD *)v80;
          v81 = *((_QWORD *)v80 + 1);
          v78 = __OFSUB__(v81, v82);
          v83 = v81 - v82;
          if (v78)
            goto LABEL_136;
          v78 = __OFADD__(v70, v83);
          v84 = v70 + v83;
          if (v78)
            goto LABEL_139;
          if (v84 >= v75)
          {
            v102 = &v65[16 * v67];
            v104 = *(_QWORD *)v102;
            v103 = *((_QWORD *)v102 + 1);
            v78 = __OFSUB__(v103, v104);
            v105 = v103 - v104;
            if (v78)
              goto LABEL_143;
            v95 = v70 < v105;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v96 = *((_QWORD *)v9 + 4);
            v97 = *((_QWORD *)v9 + 5);
            v78 = __OFSUB__(v97, v96);
            v89 = v97 - v96;
            v90 = v78;
            goto LABEL_99;
          }
          v69 = *((_QWORD *)v9 + 4);
          v68 = *((_QWORD *)v9 + 5);
          v78 = __OFSUB__(v68, v69);
          v70 = v68 - v69;
          v71 = v78;
        }
        if ((v71 & 1) != 0)
          goto LABEL_135;
        v79 = v12 - 2;
        v85 = &v65[16 * v12 - 32];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v88 = __OFSUB__(v86, v87);
        v89 = v86 - v87;
        v90 = v88;
        if (v88)
          goto LABEL_138;
        v91 = &v65[16 * v67];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v78 = __OFSUB__(v92, v93);
        v94 = v92 - v93;
        if (v78)
          goto LABEL_141;
        if (__OFADD__(v89, v94))
          goto LABEL_142;
        if (v89 + v94 >= v70)
        {
          v95 = v70 < v94;
LABEL_105:
          if (v95)
            v67 = v79;
          goto LABEL_107;
        }
LABEL_99:
        if ((v90 & 1) != 0)
          goto LABEL_137;
        v98 = &v65[16 * v67];
        v100 = *(_QWORD *)v98;
        v99 = *((_QWORD *)v98 + 1);
        v78 = __OFSUB__(v99, v100);
        v101 = v99 - v100;
        if (v78)
          goto LABEL_140;
        if (v101 < v89)
          goto LABEL_14;
LABEL_107:
        v106 = v67 - 1;
        if (v67 - 1 >= v12)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v11)
          goto LABEL_155;
        v107 = &v65[16 * v106];
        v108 = *(_QWORD *)v107;
        v109 = &v65[16 * v67];
        v110 = *((_QWORD *)v109 + 1);
        sub_100081F14((void **)(v11 + 8 * *(_QWORD *)v107), (id *)(v11 + 8 * *(_QWORD *)v109), (id *)(v11 + 8 * v110), v130);
        if (v1)
          goto LABEL_127;
        if (v110 < v108)
          goto LABEL_130;
        if (v67 > *((_QWORD *)v9 + 2))
          goto LABEL_131;
        *(_QWORD *)v107 = v108;
        *(_QWORD *)&v65[16 * v106 + 8] = v110;
        v111 = *((_QWORD *)v9 + 2);
        if (v67 >= v111)
          goto LABEL_132;
        v12 = v111 - 1;
        memmove(&v65[16 * v67], v109 + 16, 16 * (v111 - 1 - v67));
        *((_QWORD *)v9 + 2) = v111 - 1;
        if (v111 <= 2)
          goto LABEL_14;
      }
    }
    break;
  }
  if (__OFADD__(v10, v122))
    goto LABEL_152;
  if (v10 + v122 >= v3)
    v45 = v3;
  else
    v45 = v10 + v122;
  if (v45 >= v10)
  {
    if (v13 != v45)
    {
      v124 = v9;
      v125 = v45;
      v46 = v121 + 8 * v13;
      do
      {
        v48 = *(void **)(v11 + 8 * v13);
        v129 = v46;
        v133 = v13;
        while (1)
        {
          v49 = *(void **)v46;
          v50 = v48;
          v51 = v49;
          v52 = objc_msgSend(v50, "title");
          v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
          v55 = v54;

          v56 = objc_msgSend(v51, "title");
          v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
          v59 = v58;

          if (v53 == v57 && v55 == v59)
          {

            swift_bridgeObjectRelease_n(v55, 2);
            v11 = v131;
            v47 = v133;
            goto LABEL_56;
          }
          v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v55, v57, v59, 1);

          swift_bridgeObjectRelease(v55);
          swift_bridgeObjectRelease(v59);
          v11 = v131;
          if ((v61 & 1) == 0)
            break;
          if (!v131)
            goto LABEL_154;
          v62 = *(void **)v46;
          v48 = *(void **)(v46 + 8);
          *(_QWORD *)v46 = v48;
          *(_QWORD *)(v46 + 8) = v62;
          v46 -= 8;
          ++v10;
          v47 = v133;
          if (v133 == v10)
            goto LABEL_56;
        }
        v47 = v133;
LABEL_56:
        v13 = v47 + 1;
        v46 = v129 + 8;
        v10 = v126;
      }
      while (v13 != v125);
      v13 = v125;
      v9 = v124;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

uint64_t sub_100081D94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v25 = *a4;
    v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v25 + 8 * a3);
    v7 = v23;
    v24 = v4;
    v26 = a3;
    while (1)
    {
      v8 = *(void **)v4;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, "title");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      v15 = objc_msgSend(v10, "title");
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        result = swift_bridgeObjectRelease_n(v14, 2);
        v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        v4 = v24 + 8;
        if (a3 == a2)
          return result;
        goto LABEL_6;
      }
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v16, v18, 1);

      swift_bridgeObjectRelease(v14);
      result = swift_bridgeObjectRelease(v18);
      v5 = v26;
      if ((v20 & 1) == 0)
        goto LABEL_5;
      if (!v25)
        break;
      v21 = *(void **)v4;
      v6 = *(void **)(v4 + 8);
      *(_QWORD *)v4 = v6;
      *(_QWORD *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100081F14(void **__src, id *a2, id *a3, void **__dst)
{
  void **v4;
  id *v5;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  id *v28;
  void **v29;
  id *v30;
  void **v31;
  id *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  id *v48;
  unint64_t v49;
  uint64_t result;
  void **v51;
  id *v52;
  void **v53;
  id *v54;
  void **v55;
  id *v56;
  id *v57;
  id *v58;
  void **v59;
  void **v60;
  id *v61;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v61 = __src;
  v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_53;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v51 = v4;
    v31 = &v4[v13];
    v59 = v31;
    v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_100082420((void **)&v61, (const void **)&v60, &v59);
      return 1;
    }
    v32 = v6;
    v56 = v7;
    while (1)
    {
      v52 = v31;
      v54 = v6;
      v58 = v5;
      v34 = *--v31;
      v33 = v34;
      v35 = *--v32;
      v36 = v33;
      v37 = v35;
      v38 = objc_msgSend(v36, "title");
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v41 = v40;

      v42 = objc_msgSend(v37, "title");
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v45 = v44;

      if (v39 == v43 && v41 == v45)
        break;
      v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v45, 1);

      swift_bridgeObjectRelease(v41);
      swift_bridgeObjectRelease(v45);
      v48 = v58;
      v5 = v58 - 1;
      if ((v47 & 1) == 0)
        goto LABEL_46;
      v49 = (unint64_t)v56;
      v31 = v52;
      if (v58 != v54 || v5 >= v54)
        *v5 = *v32;
      v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        v6 = v32;
        if (v31 > v51)
          continue;
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n(v41, 2);
    v48 = v58;
    v5 = v58 - 1;
LABEL_46:
    v32 = v54;
    v49 = (unint64_t)v56;
    v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52)
      *v5 = *v31;
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v53 = &v4[v10];
    v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      v57 = v5;
      while (1)
      {
        v55 = v7;
        v14 = v6;
        v15 = *v4;
        v16 = *v6;
        v17 = v15;
        v18 = objc_msgSend(v16, "title");
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v21 = v20;

        v22 = objc_msgSend(v17, "title");
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v25 = v24;

        if (v19 == v23 && v21 == v25)
          break;
        v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v25, 1);

        swift_bridgeObjectRelease(v21);
        swift_bridgeObjectRelease(v25);
        if ((v27 & 1) == 0)
          goto LABEL_23;
        v28 = v14 + 1;
        v29 = v55;
        v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14)
          *v55 = *v14;
LABEL_26:
        v7 = v29 + 1;
        if (v4 < v53)
        {
          v6 = v28;
          if (v28 < v30)
            continue;
        }
        v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n(v21, 2);
LABEL_23:
      v29 = v55;
      v30 = v57;
      if (v55 != v4)
        *v55 = *v4;
      v60 = ++v4;
      v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100082328(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004BB9C(&qword_1001174E8);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_100082420(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1000824C8(uint64_t a1)
{
  return sub_100082328(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000824DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10004F6D8(&qword_1001174E0, &qword_1001174D8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10004BB9C(&qword_1001174D8);
          v13 = sub_1000826E8(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for FBAFilter();
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void (*sub_1000826E8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100082768(v6, a2, a3);
  return sub_10008273C;
}

void sub_10008273C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_100082768(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1000827D4;
  }
  __break(1u);
  return result;
}

void sub_1000827D4(id *a1)
{

}

uint64_t *sub_1000827DC(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD v35[5];

  v4 = a4;
  v6 = a2;
  v31 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v7 = a4;
    else
      v7 = a4 & 0xFFFFFFFFFFFFFF8;
    v8 = __CocoaSet.makeIterator()(v7);
    v9 = sub_100053458(0, &qword_100116610, FBKTeam_ptr);
    v10 = sub_10008536C((unint64_t *)&qword_100116618, &qword_100116610, FBKTeam_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    result = Set.Iterator.init(_cocoa:)(v35, v8, v9, v10);
    v4 = v35[0];
    v11 = v35[1];
    v12 = v35[2];
    v13 = v35[3];
    v14 = v35[4];
    if (v6)
      goto LABEL_6;
LABEL_39:
    v15 = 0;
    goto LABEL_41;
  }
  v13 = 0;
  v26 = -1 << *(_BYTE *)(a4 + 32);
  v11 = a4 + 56;
  v12 = ~v26;
  v27 = -v26;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  else
    v28 = -1;
  v14 = v28 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_39;
LABEL_6:
  if (!a3)
  {
    v15 = 0;
LABEL_41:
    v29 = v31;
LABEL_44:
    *v29 = v4;
    v29[1] = v11;
    v29[2] = v12;
    v29[3] = v13;
    v29[4] = v14;
    return (uint64_t *)v15;
  }
  if (a3 < 0)
    goto LABEL_51;
  v15 = 0;
  v32 = (unint64_t)(v12 + 64) >> 6;
  v30 = v12;
  while (1)
  {
    if (v4 < 0)
    {
      v22 = __CocoaSet.Iterator.next()(result);
      if (!v22)
        goto LABEL_43;
      v23 = v22;
      v33 = v22;
      v24 = sub_100053458(0, &qword_100116610, FBKTeam_ptr);
      swift_unknownObjectRetain(v23);
      swift_dynamicCast(&v34, &v33, (char *)&type metadata for Swift.AnyObject + 8, v24, 7);
      v18 = v34;
      result = (uint64_t *)swift_unknownObjectRelease(v23);
      if (!v18)
        goto LABEL_43;
      goto LABEL_11;
    }
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_10;
    }
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v19 >= v32)
    {
      v14 = 0;
      goto LABEL_43;
    }
    v20 = *(_QWORD *)(v11 + 8 * v19);
    if (v20)
      goto LABEL_26;
    v21 = v13 + 2;
    if (v13 + 2 >= v32)
    {
      v14 = 0;
      ++v13;
      goto LABEL_43;
    }
    v20 = *(_QWORD *)(v11 + 8 * v21);
    if (!v20)
    {
      if (v13 + 3 >= v32)
        goto LABEL_47;
      v20 = *(_QWORD *)(v11 + 8 * (v13 + 3));
      if (v20)
      {
        v19 = v13 + 3;
        goto LABEL_26;
      }
      v21 = v13 + 4;
      if (v13 + 4 >= v32)
      {
        v14 = 0;
        v13 += 3;
        goto LABEL_43;
      }
      v20 = *(_QWORD *)(v11 + 8 * v21);
      if (!v20)
      {
        v19 = v13 + 5;
        if (v13 + 5 >= v32)
        {
LABEL_47:
          v14 = 0;
          v13 = v21;
          goto LABEL_43;
        }
        v20 = *(_QWORD *)(v11 + 8 * v19);
        if (!v20)
        {
          v25 = v13 + 6;
          while (v32 != v25)
          {
            v20 = *(_QWORD *)(v11 + 8 * v25++);
            if (v20)
            {
              v19 = v25 - 1;
              goto LABEL_26;
            }
          }
          v14 = 0;
          v13 = v32 - 1;
          goto LABEL_43;
        }
        goto LABEL_26;
      }
    }
    v19 = v21;
LABEL_26:
    v14 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v19 << 6);
    v13 = v19;
LABEL_10:
    result = (uint64_t *)*(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    v18 = result;
    if (!result)
      goto LABEL_43;
LABEL_11:
    ++v15;
    *v6++ = v18;
    if (v15 == a3)
    {
      v15 = a3;
LABEL_43:
      v12 = v30;
      v29 = v31;
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_100082AEC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = type metadata accessor for FBKFeedbackUpload.BugSession(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 24);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 48) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100082DB4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_100082E54(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100082F38(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_100082F4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10008303C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100083154(uint64_t a1)
{
  return sub_10008319C(a1, &qword_100116958, FBKUploadTask_ptr, (unint64_t *)&unk_100116960, &qword_100117528);
}

uint64_t sub_100083178(uint64_t a1)
{
  return sub_10008319C(a1, &qword_1001169B0, FBKBugSession_ptr, &qword_1001169B8, &qword_100117530);
}

uint64_t sub_10008319C(uint64_t a1, unint64_t *a2, _QWORD *a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  void **v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;

  v10 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v21 = a1;
    else
      v21 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = sub_100053458(0, a2, a3);
  v13 = sub_10008536C(a4, a2, a3, (uint64_t)&protocol conformance descriptor for NSObject);
  result = Set.init(minimumCapacity:)(v11, v12, v13);
  v23 = result;
  if (v10)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v15 = _CocoaArrayWrapper.endIndex.getter(v16);
    result = swift_bridgeObjectRelease(a1);
    if (!v15)
      return v23;
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return v23;
  }
  if (v15 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v15; ++i)
      {
        v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        sub_10007FD54((Swift::Int *)&v22, v18, a2, a3, a5);

      }
    }
    else
    {
      v19 = (void **)(a1 + 32);
      do
      {
        v20 = *v19++;
        sub_10007FD54((Swift::Int *)&v22, v20, a2, a3, a5);

        --v15;
      }
      while (v15);
    }
    return v23;
  }
  __break(1u);
  return result;
}

uint64_t sub_100083338(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[2];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = Set.init(minimumCapacity:)(v2, &type metadata for String, &protocol witness table for String);
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain(*v4);
      sub_10007F980(v7, v5, v6);
      swift_bridgeObjectRelease(v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1000833CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_1000834C0()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  id v10;
  Swift::String v12;

  sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
  v0 = (void *)NSPredicate.init(format:_:)(0xD000000000000012, 0x80000001000D82B0, _swiftEmptyArrayStorage);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5._countAndFlagsBits = 0xD000000000000016;
  v12._object = (void *)0xE000000000000000;
  v5._object = (void *)0x80000001000D82D0;
  v6.value._countAndFlagsBits = v1;
  v6.value._object = v3;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v12._countAndFlagsBits = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v12);
  swift_bridgeObjectRelease(v3);

  v9 = (void *)FBKSystemImageNameFilterNeedsAttention;
  v10 = objc_allocWithZone((Class)type metadata accessor for FBAFilter());
  return sub_100076FF4(v0, v8._countAndFlagsBits, (uint64_t)v8._object, v9);
}

char *sub_1000835FC()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  id v10;
  char *v11;
  Swift::String v13;

  sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
  v0 = (void *)NSPredicate.init(format:_:)(0xD000000000000016, 0x80000001000D8290, _swiftEmptyArrayStorage);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v13._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x4F5F5245544C4946;
  v5._object = (void *)0xEB000000004E4550;
  v6.value._countAndFlagsBits = v1;
  v6.value._object = v3;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v13);
  swift_bridgeObjectRelease(v3);

  v9 = (void *)FBKSystemImageNameFilterOpen;
  v10 = objc_allocWithZone((Class)type metadata accessor for FBAFilter());
  v11 = sub_100076FF4(v0, v8._countAndFlagsBits, (uint64_t)v8._object, v9);
  objc_msgSend(v11, "setActive:", 1);
  return v11;
}

void sub_100083750()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  Swift::String v13;
  void *v14;
  id v15;
  Swift::String v16;

  v0 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1000CC730;
  v2 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
  v3 = objc_msgSend(v2, "currentUser");

  if (v3)
  {
    v4 = objc_msgSend(v3, "ID");

    if (v4)
    {
      sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
      *(_QWORD *)(v1 + 56) = sub_100053458(0, &qword_1001169A0, NSNumber_ptr);
      *(_QWORD *)(v1 + 64) = sub_10008536C(&qword_100117510, &qword_1001169A0, NSNumber_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)(v1 + 32) = v4;
      v5 = (void *)NSPredicate.init(format:_:)(0xD000000000000017, 0x80000001000D8350, v1);
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
      v8 = v7;
      v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v16._object = (void *)0xE000000000000000;
      v10._object = (void *)0x80000001000D8370;
      v10._countAndFlagsBits = 0xD000000000000015;
      v11.value._countAndFlagsBits = v6;
      v11.value._object = v8;
      v12._countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      v16._countAndFlagsBits = 0;
      v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v16);
      swift_bridgeObjectRelease(v8);

      v14 = (void *)FBKSystemImageNameFilterAssignedToMe;
      v15 = objc_allocWithZone((Class)type metadata accessor for FBAFilter());
      objc_msgSend(sub_100076FF4(v5, v13._countAndFlagsBits, (uint64_t)v13._object, v14), "setActive:", 1);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100083984()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  Swift::String v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  objc_class *v21;
  _BYTE *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  objc_super v27;
  Swift::String v28;

  v0 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1000CC730;
  v2 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
  v3 = objc_msgSend(v2, "currentUser");

  if (v3)
  {
    v4 = objc_msgSend(v3, "ID");

    if (v4)
    {
      sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
      *(_QWORD *)(v1 + 56) = sub_100053458(0, &qword_1001169A0, NSNumber_ptr);
      *(_QWORD *)(v1 + 64) = sub_10008536C(&qword_100117510, &qword_1001169A0, NSNumber_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)(v1 + 32) = v4;
      v5 = (void *)NSPredicate.init(format:_:)(0xD000000000000019, 0x80000001000D8310, v1);
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
      v8 = v7;
      v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v28._object = (void *)0xE000000000000000;
      v10._object = (void *)0x80000001000D8330;
      v10._countAndFlagsBits = 0xD000000000000017;
      v11.value._countAndFlagsBits = v6;
      v11.value._object = v8;
      v12._countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      v28._countAndFlagsBits = 0;
      v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v28);
      swift_bridgeObjectRelease(v8);

      v14 = (void *)FBKImageNameFilterOriginatedByMe;
      v15 = (void *)objc_opt_self(UIImage);
      static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;
      v18 = v14;
      v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      v20 = objc_msgSend(v15, "imageNamed:", v19);

      v21 = (objc_class *)type metadata accessor for FBAFilter();
      v22 = objc_allocWithZone(v21);
      v23 = OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image;
      *(_QWORD *)&v22[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = 0;
      v22[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active] = 0;
      swift_unknownObjectWeakInit(&v22[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], 0);
      *(_QWORD *)&v22[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate] = v5;
      *(Swift::String *)&v22[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title] = v13;
      v24 = *(void **)&v22[v23];
      *(_QWORD *)&v22[v23] = v20;
      v25 = v5;
      v26 = v20;

      v27.receiver = v22;
      v27.super_class = v21;
      objc_msgSendSuper2(&v27, "init");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_100083C94()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  objc_class *v16;
  _BYTE *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  objc_super v24;
  Swift::String v25;

  sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
  v0 = (void *)NSPredicate.init(format:_:)(0xD000000000000011, 0x80000001000D82F0, _swiftEmptyArrayStorage);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v25._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x4F5F5245544C4946;
  v5._object = (void *)0xEF44454E41485052;
  v6.value._countAndFlagsBits = v1;
  v6.value._object = v3;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v25);
  swift_bridgeObjectRelease(v3);

  v9 = (void *)FBKImageNameFilterOrphaned;
  v10 = (void *)objc_opt_self(UIImage);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;
  v13 = v9;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v15 = objc_msgSend(v10, "imageNamed:", v14);

  v16 = (objc_class *)type metadata accessor for FBAFilter();
  v17 = objc_allocWithZone(v16);
  v18 = OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image;
  *(_QWORD *)&v17[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = 0;
  v17[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active] = 0;
  swift_unknownObjectWeakInit(&v17[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], 0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate] = v0;
  *(Swift::String *)&v17[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title] = v8;
  v19 = *(void **)&v17[v18];
  *(_QWORD *)&v17[v18] = v15;
  v20 = v0;
  v21 = v15;

  v24.receiver = v17;
  v24.super_class = v16;
  v22 = objc_msgSendSuper2(&v24, "init");

  return v22;
}

id sub_100083EC8(void *a1)
{
  id v2;
  id v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  Swift::String v18;
  objc_class *v19;
  char *v20;
  Swift::String *v21;
  void *object;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id result;
  uint64_t i;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  Swift::String v39;
  Swift::String_optional v40;
  Swift::String v41;
  Swift::String v42;
  objc_class *v43;
  char *v44;
  Swift::String *v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t j;
  char *v50;
  void *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  objc_super v56;
  objc_super v57;
  uint64_t v58;
  Swift::String v59;
  Swift::String v60;

  v2 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
  v3 = objc_msgSend(v2, "currentUser");

  if (!v3)
  {
    if (!a1)
      goto LABEL_15;
LABEL_6:
    if (!objc_msgSend(a1, "teamType"))
      goto LABEL_15;
LABEL_7:
    v5 = sub_10004BB9C((uint64_t *)&unk_100117030);
    v6 = swift_allocObject(v5, 72, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1000CD140;
    *(_QWORD *)(v6 + 32) = sub_1000834C0();
    *(_QWORD *)(v6 + 40) = sub_1000835FC();
    sub_100083750();
    *(_QWORD *)(v6 + 48) = v7;
    sub_100083984();
    *(_QWORD *)(v6 + 56) = v8;
    v9 = sub_100083C94();
    *(_QWORD *)(v6 + 64) = v9;
    v58 = v6;
    specialized Array._endMutation()(v9);
    v10 = v6;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v59._object = (void *)0xE000000000000000;
    v15._object = (void *)0x80000001000D8270;
    v15._countAndFlagsBits = 0xD000000000000011;
    v16.value._countAndFlagsBits = v11;
    v16.value._object = v13;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v59._countAndFlagsBits = 0;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v59);
    swift_bridgeObjectRelease(v13);

    v19 = (objc_class *)type metadata accessor for FBAFilterGroup();
    v20 = (char *)objc_allocWithZone(v19);
    swift_unknownObjectWeakInit(&v20[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filterManager], 0);
    v21 = (Swift::String *)&v20[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
    v21->_countAndFlagsBits = 0;
    v21->_object = 0;
    *(_QWORD *)&v20[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
    *(_QWORD *)&v20[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = v10;
    object = v21->_object;
    *v21 = v18;
    swift_bridgeObjectRelease(object);
    v56.receiver = v20;
    v56.super_class = v19;
    v23 = (char *)objc_msgSendSuper2(&v56, "init");
    v24 = v23;
    v25 = *(_QWORD *)&v23[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
    if ((unint64_t)v25 >> 62)
    {
      if (v25 < 0)
        v52 = *(_QWORD *)&v23[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
      else
        v52 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*(_QWORD *)&v23[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
      v53 = v24;
      result = (id)_CocoaArrayWrapper.endIndex.getter(v52);
      v26 = (uint64_t)result;
      if (!result)
        goto LABEL_32;
    }
    else
    {
      v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(*(_QWORD *)&v23[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
      result = v24;
      if (!v26)
        goto LABEL_32;
    }
    if (v26 >= 1)
    {
      for (i = 0; i != v26; ++i)
      {
        if ((v25 & 0xC000000000000001) != 0)
          v29 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v25);
        else
          v29 = (char *)*(id *)(v25 + 8 * i + 32);
        v30 = v29;
        swift_unknownObjectWeakAssign(&v29[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], v24);

      }
      goto LABEL_32;
    }
    __break(1u);
    goto LABEL_34;
  }
  v4 = objc_msgSend(v3, "hasManagedTeams");

  if (a1)
    goto LABEL_6;
  if ((v4 & 1) != 0)
    goto LABEL_7;
LABEL_15:
  v31 = sub_10004BB9C((uint64_t *)&unk_100117030);
  v32 = swift_allocObject(v31, 48, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1000CD150;
  *(_QWORD *)(v32 + 32) = sub_1000834C0();
  v33 = sub_1000835FC();
  *(_QWORD *)(v32 + 40) = v33;
  v58 = v32;
  specialized Array._endMutation()(v33);
  v34 = v32;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v37 = v36;
  v38 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v60._object = (void *)0xE000000000000000;
  v39._object = (void *)0x80000001000D8270;
  v39._countAndFlagsBits = 0xD000000000000011;
  v40.value._countAndFlagsBits = v35;
  v40.value._object = v37;
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  v60._countAndFlagsBits = 0;
  v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v60);
  swift_bridgeObjectRelease(v37);

  v43 = (objc_class *)type metadata accessor for FBAFilterGroup();
  v44 = (char *)objc_allocWithZone(v43);
  swift_unknownObjectWeakInit(&v44[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filterManager], 0);
  v45 = (Swift::String *)&v44[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
  v45->_countAndFlagsBits = 0;
  v45->_object = 0;
  *(_QWORD *)&v44[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
  *(_QWORD *)&v44[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = v34;
  v46 = v45->_object;
  *v45 = v42;
  swift_bridgeObjectRelease(v46);
  v57.receiver = v44;
  v57.super_class = v43;
  v47 = (char *)objc_msgSendSuper2(&v57, "init");
  v24 = v47;
  v25 = *(_QWORD *)&v47[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  if (!((unint64_t)v25 >> 62))
  {
    v48 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)&v47[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
    result = v24;
    if (v48)
      goto LABEL_17;
LABEL_32:

    swift_bridgeObjectRelease_n(v25, 2);
    return v24;
  }
  if (v25 < 0)
    v54 = *(_QWORD *)&v47[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  else
    v54 = v25 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)&v47[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
  v55 = v24;
  result = (id)_CocoaArrayWrapper.endIndex.getter(v54);
  v48 = (uint64_t)result;
  if (!result)
    goto LABEL_32;
LABEL_17:
  if (v48 >= 1)
  {
    for (j = 0; j != v48; ++j)
    {
      if ((v25 & 0xC000000000000001) != 0)
        v50 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v25);
      else
        v50 = (char *)*(id *)(v25 + 8 * j + 32);
      v51 = v50;
      swift_unknownObjectWeakAssign(&v50[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], v24);

    }
    goto LABEL_32;
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_1000843E4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_10004BB9C(&qword_100117518);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v45 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    v43 = v1;
    while (1)
    {
      while (1)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
        v11 = __OFADD__(v9++, 1);
        if (v11)
        {
          __break(1u);
          goto LABEL_42;
        }
        v12 = v10;
        v13 = NSObject._rawHashValue(seed:)(v4[5]);
        v14 = -1 << *((_BYTE *)v4 + 32);
        v15 = v13 & ~v14;
        v16 = v15 >> 6;
        v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
        v18 = 1 << v15;
        if (((1 << v15) & v17) != 0)
          break;
LABEL_26:
        *(_QWORD *)&v8[8 * v16] = v18 | v17;
        *(_QWORD *)(v4[6] + 8 * v15) = v12;
        v24 = v4[2];
        v11 = __OFADD__(v24, 1);
        v25 = v24 + 1;
        if (v11)
          goto LABEL_43;
        v4[2] = v25;
        if (v9 == v5)
          return;
      }
      sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
      v19 = *(id *)(v4[6] + 8 * v15);
      v20 = static NSObject.== infix(_:_:)(v19, v12);

      if ((v20 & 1) == 0)
      {
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22, v12);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
        v1 = v43;
        v5 = v45;
        goto LABEL_26;
      }
LABEL_17:
      swift_unknownObjectRelease(v12);
      v1 = v43;
      v5 = v45;
      if (v9 == v45)
        return;
    }
  }
  v26 = 0;
  v42 = v1 + 32;
  v44 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v44)
  {
    v27 = v4[5];
    v28 = *(id *)(v42 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35, v28);

      if ((v36 & 1) != 0)
      {
LABEL_30:

        goto LABEL_31;
      }
      v37 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v37;
        v32 = v31 >> 6;
        v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
        v34 = 1 << v31;
        if ((v33 & (1 << v31)) == 0)
          break;
        v38 = *(id *)(v4[6] + 8 * v31);
        v39 = static NSObject.== infix(_:_:)(v38, v28);

        if ((v39 & 1) != 0)
          goto LABEL_30;
      }
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_44;
    v4[2] = v41;
LABEL_31:
    if (++v26 == v45)
      return;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

uint64_t sub_100084740(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  objc_class *v18;
  id v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  Swift::String v40;
  objc_class *v41;
  char *v42;
  Swift::String *v43;
  void *object;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t i;
  char *v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t result;
  char v54;
  objc_super v55;
  objc_super v56;
  _QWORD *v57;
  Swift::String v58;

  sub_10007D348(a1);
  v2 = (char *)v1;
  v3 = sub_100083338(v1);
  swift_bridgeObjectRelease(v2);
  v4 = sub_10007F194(v3);
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v57 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v6);
    v7 = sub_100082DB4(v5);
    v9 = v8;
    v11 = v10 & 1;
    sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
    do
    {
      if (v7 < 0 || v7 >= 1 << *(_BYTE *)(v5 + 32))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      if (((*(_QWORD *)(v5 + 56 + (((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_21;
      if (*(_DWORD *)(v5 + 36) != (_DWORD)v9)
        goto LABEL_22;
      v12 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v7);
      v13 = *v12;
      v14 = v12[1];
      v15 = sub_10004BB9C((uint64_t *)&unk_100116860);
      v54 = v11;
      v16 = swift_allocObject(v15, 72, 7);
      *(_OWORD *)(v16 + 16) = xmmword_1000CC730;
      *(_QWORD *)(v16 + 56) = &type metadata for String;
      *(_QWORD *)(v16 + 64) = sub_100051284();
      *(_QWORD *)(v16 + 32) = v13;
      *(_QWORD *)(v16 + 40) = v14;
      swift_bridgeObjectRetain_n(v14, 2);
      v17 = (void *)NSPredicate.init(format:_:)(0x203D3D2061657261, 0xEA00000000004025, v16);
      v18 = (objc_class *)type metadata accessor for FBAFilter();
      v19 = objc_allocWithZone(v18);
      v2 = (char *)OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image;
      *(_QWORD *)((char *)v19 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image) = 0;
      *((_BYTE *)v19 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active) = 0;
      swift_unknownObjectWeakInit((char *)v19 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup, 0);
      *(_QWORD *)((char *)v19 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate) = v17;
      v20 = (char *)v19 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title;
      *v20 = v13;
      v20[1] = v14;
      v21 = *(void **)&v2[(_QWORD)v19];
      *(_QWORD *)&v2[(_QWORD)v19] = 0;
      v22 = v17;

      v56.receiver = v19;
      v56.super_class = v18;
      v23 = objc_msgSendSuper2(&v56, "init");

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      v25 = v57[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
      v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
      specialized ContiguousArray._endMutation()(v26);
      v27 = sub_100082E54(v7, (int)v9, v54 & 1, v5);
      v7 = v27;
      v9 = (uint64_t *)v28;
      v11 = v29 & 1;
      --v6;
    }
    while (v6);
    sub_100084C4C(v27, v28, v29 & 1);
    v30 = (unint64_t)v57;
    swift_release(v5);
    swift_bridgeObjectRetain(v30);
    if ((v30 & 0x8000000000000000) != 0 || (v31 = (_QWORD *)v30, (v30 & 0x4000000000000000) != 0))
    {
      v31 = sub_10007E480(v30);
      swift_release(v30);
    }
    v57 = v31;
    sub_100081464((uint64_t *)&v57);
    swift_release(v30);
    v32 = v57;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
    v35 = v34;
    v36 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v58._object = (void *)0xE000000000000000;
    v37._object = (void *)0x80000001000D8160;
    v37._countAndFlagsBits = 0xD000000000000019;
    v38.value._countAndFlagsBits = v33;
    v38.value._object = v35;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    v58._countAndFlagsBits = 0;
    v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v58);
    swift_bridgeObjectRelease(v35);

    v41 = (objc_class *)type metadata accessor for FBAFilterGroup();
    v42 = (char *)objc_allocWithZone(v41);
    swift_unknownObjectWeakInit(&v42[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filterManager], 0);
    v43 = (Swift::String *)&v42[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
    v43->_countAndFlagsBits = 0;
    v43->_object = 0;
    v9 = &OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType;
    *(_QWORD *)&v42[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
    *(_QWORD *)&v42[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = v32;
    object = v43->_object;
    *v43 = v40;
    swift_bridgeObjectRelease(object);
    v55.receiver = v42;
    v55.super_class = v41;
    v45 = (char *)objc_msgSendSuper2(&v55, "init");
    v2 = v45;
    v11 = *(_QWORD *)&v45[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
    if (!((unint64_t)v11 >> 62))
    {
      v46 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(*(_QWORD *)&v45[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
      v47 = v2;
      if (v46)
        goto LABEL_13;
LABEL_27:

      swift_bridgeObjectRelease_n(v11, 2);
      *(_QWORD *)&v2[*v9] = 2;
      return (uint64_t)v2;
    }
LABEL_23:
    if (v11 < 0)
      v51 = v11;
    else
      v51 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v11, 2);
    v52 = v2;
    v46 = _CocoaArrayWrapper.endIndex.getter(v51);
    if (!v46)
      goto LABEL_27;
LABEL_13:
    if (v46 >= 1)
    {
      for (i = 0; i != v46; ++i)
      {
        if ((v11 & 0xC000000000000001) != 0)
          v49 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v11);
        else
          v49 = (char *)*(id *)(v11 + 8 * i + 32);
        v50 = v49;
        swift_unknownObjectWeakAssign(&v49[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], v2);

      }
      goto LABEL_27;
    }
    __break(1u);
    result = swift_release(v57);
    __break(1u);
  }
  else
  {
    swift_release(v4);
    return 0;
  }
  return result;
}

uint64_t sub_100084C4C(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

_QWORD *sub_100084C5C(void *a1)
{
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v18;

  v2 = sub_100083EC8(a1);
  v3 = objc_msgSend(a1, "contentItems");
  if (v3)
  {
    v4 = v3;
    v5 = sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
    v6 = sub_10008536C((unint64_t *)&qword_100116998, (unint64_t *)&qword_100116990, FBKContentItem_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v7 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
         && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1000843E4((uint64_t)_swiftEmptyArrayStorage);
    v7 = v18;
  }
  else
  {
    v7 = &_swiftEmptySetSingleton;
  }
  v8 = (void *)sub_100084740((uint64_t)v7);
  swift_bridgeObjectRelease(v7);
  v9 = v2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
  specialized Array._endMutation()(v12);
  if (v8)
  {
    v13 = v8;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v15 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
    v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
    specialized Array._endMutation()(v16);
  }

  return _swiftEmptyArrayStorage;
}

uint64_t sub_100084E2C()
{
  id v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t **v7;
  NSArray v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  objc_class *v33;
  char *v34;
  Swift::String *v35;
  void *object;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t i;
  char *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t result;
  objc_super v47;
  id v48;
  char *v49;
  _QWORD *v50;
  Swift::String v51;

  v0 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
  v1 = (char *)objc_msgSend(v0, "currentUser");

  if (!v1)
    return (uint64_t)v1;
  v2 = objc_msgSend(v1, "teams");
  if (!v2)
  {

    return 0;
  }
  v3 = v2;
  v4 = sub_100053458(0, &qword_100116610, FBKTeam_ptr);
  v5 = sub_10008536C((unint64_t *)&qword_100116618, &qword_100116610, FBKTeam_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

  if ((objc_msgSend(v1, "hasManagedTeams") & 1) == 0)
  {

    swift_bridgeObjectRelease(v6);
    return 0;
  }
  v7 = sub_10007E270(v6);
  swift_bridgeObjectRelease(v6);
  v8.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_release(v7);
  isa = (Class)objc_msgSend((id)objc_opt_self(FBKTeam), "sortDescriptors");
  if (!isa)
  {
    v10 = sub_100053458(0, &qword_100116620, NSSortDescriptor_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v10);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
  }
  v12 = -[objc_class sortedArrayUsingDescriptors:](v8.super.isa, "sortedArrayUsingDescriptors:", isa);

  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, (char *)&type metadata for Any + 8);
  v14 = (uint64_t)sub_10007D710(v13, &qword_100116610, FBKTeam_ptr);
  swift_bridgeObjectRelease(v13);
  if ((unint64_t)v14 >> 62)
    goto LABEL_20;
  v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v15)
  {
    while (1)
    {
      v50 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v15);
      if (v15 < 0)
        break;
      v16 = 0;
      while (v15 != v16)
      {
        if ((v14 & 0xC000000000000001) != 0)
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v14);
        else
          v17 = *(id *)(v14 + 8 * v16 + 32);
        v18 = v17;
        v48 = v17;
        sub_10007DBD0(&v48, &v49);

        ++v16;
        v19 = v49;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v21 = v50[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
        v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
        specialized ContiguousArray._endMutation()(v22);
        if (v15 == v16)
        {
          v23 = v50;
          swift_bridgeObjectRelease(v14);

          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_20:
      if (v14 < 0)
        v24 = v14;
      else
        v24 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v15 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(v14);
      if (!v15)
        goto LABEL_24;
    }
    __break(1u);
    goto LABEL_40;
  }
LABEL_24:
  swift_bridgeObjectRelease(v14);

  v23 = _swiftEmptyArrayStorage;
LABEL_25:
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v27 = v26;
  v28 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v51._object = (void *)0xE000000000000000;
  v29._object = (void *)0x80000001000D8250;
  v29._countAndFlagsBits = 0xD000000000000011;
  v30.value._countAndFlagsBits = v25;
  v30.value._object = v27;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v51._countAndFlagsBits = 0;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v51);
  swift_bridgeObjectRelease(v27);

  v33 = (objc_class *)type metadata accessor for FBAFilterGroup();
  v34 = (char *)objc_allocWithZone(v33);
  swift_unknownObjectWeakInit(&v34[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filterManager], 0);
  v35 = (Swift::String *)&v34[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
  v35->_countAndFlagsBits = 0;
  v35->_object = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
  *(_QWORD *)&v34[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = v23;
  object = v35->_object;
  *v35 = v32;
  swift_bridgeObjectRelease(object);
  v47.receiver = v34;
  v47.super_class = v33;
  v37 = (char *)objc_msgSendSuper2(&v47, "init");
  v1 = v37;
  v38 = *(_QWORD *)&v37[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  if (!((unint64_t)v38 >> 62))
  {
    v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)&v37[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
    v40 = v1;
    if (v39)
      goto LABEL_27;
LABEL_37:

    swift_bridgeObjectRelease_n(v38, 2);
    *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 2;
    return (uint64_t)v1;
  }
  if (v38 < 0)
    v44 = *(_QWORD *)&v37[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  else
    v44 = v38 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)&v37[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
  v45 = v1;
  v39 = _CocoaArrayWrapper.endIndex.getter(v44);
  if (!v39)
    goto LABEL_37;
LABEL_27:
  if (v39 >= 1)
  {
    for (i = 0; i != v39; ++i)
    {
      if ((v38 & 0xC000000000000001) != 0)
        v42 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v38);
      else
        v42 = (char *)*(id *)(v38 + 8 * i + 32);
      v43 = v42;
      swift_unknownObjectWeakAssign(&v42[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], v1);

    }
    goto LABEL_37;
  }
LABEL_40:
  __break(1u);
  result = swift_release(v50);
  __break(1u);
  return result;
}

uint64_t sub_10008536C(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100053458(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000853AC()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v0 = sub_100083EC8(0);
  v1 = (void *)sub_100084E2C();
  v2 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
  v3 = objc_msgSend(v2, "currentUser");

  if (!v3)
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = objc_msgSend(v3, "contentItems");

  if (!v4)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v5 = sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
  v6 = sub_10008536C((unint64_t *)&qword_100116998, (unint64_t *)&qword_100116990, FBKContentItem_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

  v8 = (void *)sub_100084740(v7);
  swift_bridgeObjectRelease(v7);
  v9 = v0;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
  specialized Array._endMutation()(v12);
  if (v1)
  {
    v13 = v1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v15 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
    v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
    specialized Array._endMutation()(v16);
  }
  if (v8)
  {
    v17 = v8;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v20);
  }

}

id sub_1000855FC()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  objc_class *v16;
  _BYTE *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  objc_super v24;
  Swift::String v25;

  sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
  v0 = (void *)NSPredicate.init(format:_:)(0xD000000000000017, 0x80000001000D8390, _swiftEmptyArrayStorage);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v25._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x435F5245544C4946;
  v5._object = (void *)0xED00004445534F4CLL;
  v6.value._countAndFlagsBits = v1;
  v6.value._object = v3;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v25);
  swift_bridgeObjectRelease(v3);

  v9 = (void *)FBKImageNameCloseFeedback;
  v10 = (void *)objc_opt_self(UIImage);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;
  v13 = v9;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v15 = objc_msgSend(v10, "imageNamed:", v14);

  v16 = (objc_class *)type metadata accessor for FBAFilter();
  v17 = objc_allocWithZone(v16);
  v18 = OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image;
  *(_QWORD *)&v17[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = 0;
  v17[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active] = 0;
  swift_unknownObjectWeakInit(&v17[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], 0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate] = v0;
  *(Swift::String *)&v17[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title] = v8;
  v19 = *(void **)&v17[v18];
  *(_QWORD *)&v17[v18] = v15;
  v20 = v0;
  v21 = v15;

  v24.receiver = v17;
  v24.super_class = v16;
  v22 = objc_msgSendSuper2(&v24, "init");

  return v22;
}

id sub_100085830()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  objc_class *v12;
  char *v13;
  Swift::String *v14;
  void *object;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id result;
  uint64_t i;
  char *v22;
  void *v23;
  uint64_t v24;
  id v25;
  objc_super v26;
  uint64_t v27;
  Swift::String v28;

  v0 = sub_10004BB9C((uint64_t *)&unk_100117030);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1000CD150;
  *(_QWORD *)(v1 + 32) = sub_1000834C0();
  v2 = sub_1000835FC();
  *(_QWORD *)(v1 + 40) = v2;
  v27 = v1;
  specialized Array._endMutation()(v2);
  v3 = v1;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v28._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001000D8270;
  v8._countAndFlagsBits = 0xD000000000000011;
  v9.value._countAndFlagsBits = v4;
  v9.value._object = v6;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v28);
  swift_bridgeObjectRelease(v6);

  v12 = (objc_class *)type metadata accessor for FBAFilterGroup();
  v13 = (char *)objc_allocWithZone(v12);
  swift_unknownObjectWeakInit(&v13[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filterManager], 0);
  v14 = (Swift::String *)&v13[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
  v14->_countAndFlagsBits = 0;
  v14->_object = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = v3;
  object = v14->_object;
  *v14 = v11;
  swift_bridgeObjectRelease(object);
  v26.receiver = v13;
  v26.super_class = v12;
  v16 = (char *)objc_msgSendSuper2(&v26, "init");
  v17 = v16;
  v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  if (!((unint64_t)v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)&v16[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
    result = v17;
    if (v19)
      goto LABEL_3;
LABEL_13:

    swift_bridgeObjectRelease_n(v18, 2);
    return v17;
  }
  if (v18 < 0)
    v24 = *(_QWORD *)&v16[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  else
    v24 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)&v16[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters], 2);
  v25 = v17;
  result = (id)_CocoaArrayWrapper.endIndex.getter(v24);
  v19 = (uint64_t)result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v19 >= 1)
  {
    for (i = 0; i != v19; ++i)
    {
      if ((v18 & 0xC000000000000001) != 0)
        v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v18);
      else
        v22 = (char *)*(id *)(v18 + 8 * i + 32);
      v23 = v22;
      swift_unknownObjectWeakAssign(&v22[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_filterGroup], v17);

    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100085A94()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  v3 = type metadata accessor for FBATeamListHeaderView();
  v0 = sub_10004BB9C((uint64_t *)&unk_100117590);
  result = String.init<A>(describing:)(&v3, v0);
  qword_100119F60 = result;
  *(_QWORD *)algn_100119F68 = v2;
  return result;
}

void sub_100085BD0(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  Class isa;
  id v45;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t i;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  Class v81;
  uint64_t v82;
  objc_super v83;

  *(_QWORD *)&v4[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_stackView] = 0;
  v83.receiver = v4;
  v83.super_class = (Class)type metadata accessor for FBATeamListHeaderView();
  v9 = objc_msgSendSuper2(&v83, "initWithFrame:", a1, a2, a3, a4);
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = (char *)v9;
  v12 = objc_msgSend(v10, "init");
  v13 = OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel;
  v14 = *(void **)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel];
  *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel] = v12;

  v15 = *(void **)&v11[v13];
  if (!v15)
    goto LABEL_33;
  v16 = (void *)objc_opt_self(UIFont);
  v17 = v15;
  v18 = objc_msgSend(v16, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  objc_msgSend(v17, "setFont:", v18);

  v19 = *(void **)&v11[v13];
  if (!v19)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v19, "setAdjustsFontForContentSizeCategory:", 1);
  v20 = *(void **)&v11[v13];
  if (!v20)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v21 = (void *)objc_opt_self(UIColor);
  v22 = v20;
  v23 = objc_msgSend(v21, "labelColor");
  objc_msgSend(v22, "setTextColor:", v23);

  v24 = *(void **)&v11[v13];
  if (!v24)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v25 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v26 = OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel;
  v27 = *(void **)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel];
  *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel] = v25;

  v28 = *(void **)&v11[v26];
  if (!v28)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v29 = v28;
  v30 = objc_msgSend(v21, "labelColor");
  objc_msgSend(v29, "setTextColor:", v30);

  v31 = *(void **)&v11[v26];
  if (!v31)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  objc_msgSend(v31, "setAdjustsFontForContentSizeCategory:", 1);
  v32 = *(void **)&v11[v26];
  if (!v32)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v33 = v32;
  v34 = objc_msgSend(v16, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v33, "setFont:", v34);

  v35 = *(void **)&v11[v26];
  if (!v35)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "traitCollectionDidChange:", 0);
  v36 = sub_10004BB9C((uint64_t *)&unk_100117030);
  v37 = swift_allocObject(v36, 48, 7);
  *(_OWORD *)(v37 + 16) = xmmword_1000CD150;
  v38 = *(void **)&v11[v13];
  if (!v38)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  *(_QWORD *)(v37 + 32) = v38;
  v39 = *(void **)&v11[v26];
  if (!v39)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  *(_QWORD *)(v37 + 40) = v39;
  v82 = v37;
  specialized Array._endMutation()(v37);
  v40 = objc_allocWithZone((Class)UIStackView);
  v41 = sub_100053458(0, (unint64_t *)&qword_100116D00, UIView_ptr);
  v42 = v38;
  v43 = v39;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v82);
  v45 = objc_msgSend(v40, "initWithArrangedSubviews:", isa);

  v46 = OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_stackView;
  v47 = *(void **)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_stackView];
  *(_QWORD *)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_stackView] = v45;

  v48 = *(void **)&v11[v46];
  if (!v48)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  objc_msgSend(v48, "setAxis:", 1);
  v49 = *(void **)&v11[v46];
  if (!v49)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  objc_msgSend(v49, "setSpacing:", 2.5);
  v50 = *(void **)&v11[v46];
  if (!v50)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v51 = objc_msgSend(v11, "subviews");
  v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, v41);

  if ((unint64_t)v52 >> 62)
  {
    if (v52 < 0)
      v57 = v52;
    else
      v57 = v52 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v52);
    v53 = _CocoaArrayWrapper.endIndex.getter(v57);
    swift_bridgeObjectRelease(v52);
    if (!v53)
      goto LABEL_26;
  }
  else
  {
    v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v53)
      goto LABEL_26;
  }
  if (v53 < 1)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  for (i = 0; i != v53; ++i)
  {
    if ((v52 & 0xC000000000000001) != 0)
      v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v52);
    else
      v55 = *(id *)(v52 + 8 * i + 32);
    v56 = v55;
    objc_msgSend(v55, "removeFromSuperview");

  }
LABEL_26:
  swift_bridgeObjectRelease(v52);
  if (!*(_QWORD *)&v11[v46])
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  objc_msgSend(v11, "addSubview:");
  v58 = swift_allocObject(v36, 64, 7);
  *(_OWORD *)(v58 + 16) = xmmword_1000CD160;
  v59 = *(void **)&v11[v46];
  if (!v59)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v60 = objc_msgSend(v59, "trailingAnchor");
  v61 = objc_msgSend(v11, "layoutMarginsGuide");
  v62 = objc_msgSend(v61, "trailingAnchor");

  v63 = objc_msgSend(v60, "constraintEqualToAnchor:", v62);
  *(_QWORD *)(v58 + 32) = v63;
  v64 = *(void **)&v11[v46];
  if (!v64)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v65 = objc_msgSend(v64, "leadingAnchor");
  v66 = objc_msgSend(v11, "layoutMarginsGuide");
  v67 = objc_msgSend(v66, "leadingAnchor");

  v68 = objc_msgSend(v65, "constraintEqualToAnchor:", v67);
  *(_QWORD *)(v58 + 40) = v68;
  v69 = *(void **)&v11[v46];
  if (!v69)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v70 = objc_msgSend(v69, "topAnchor");
  v71 = objc_msgSend(v11, "layoutMarginsGuide");
  v72 = objc_msgSend(v71, "topAnchor");

  v73 = objc_msgSend(v70, "constraintEqualToAnchor:", v72);
  *(_QWORD *)(v58 + 48) = v73;
  v74 = *(void **)&v11[v46];
  if (v74)
  {
    v75 = (void *)objc_opt_self(NSLayoutConstraint);
    v76 = objc_msgSend(v74, "bottomAnchor");
    v77 = objc_msgSend(v11, "layoutMarginsGuide");
    v78 = objc_msgSend(v77, "bottomAnchor");

    v79 = objc_msgSend(v76, "constraintEqualToAnchor:constant:", v78, -7.0);
    *(_QWORD *)(v58 + 56) = v79;
    specialized Array._endMutation()(v80);
    sub_100053458(0, &qword_100117588, NSLayoutConstraint_ptr);
    v81 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v58);
    objc_msgSend(v75, "activateConstraints:", v81);

    return;
  }
LABEL_50:
  __break(1u);
}

id sub_10008643C(void *a1)
{
  char *v1;
  char *v2;
  id result;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  Swift::String v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  NSString v18;
  void *v19;
  uint64_t v20;
  Swift::String v21;

  v2 = v1;
  result = *(id *)&v2[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_stackView];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  result = objc_msgSend(result, "setHidden:", 0);
  v5 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel];
  if (!v5)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = v5;
  v7 = objc_msgSend(a1, "name");
  objc_msgSend(v6, "setText:", v7);

  result = objc_msgSend(a1, "typeString");
  if (!result)
    goto LABEL_8;
  v8 = result;
  static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v10 = v9;

  result = objc_msgSend(a1, "role");
  if (result != (id)2)
  {
    result = (id)swift_bridgeObjectRelease(v10);
LABEL_8:
    v19 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel];
    if (v19)
    {
      v12 = v19;
      v18 = objc_msgSend(a1, "typeString");
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  v11 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel];
  if (v11)
  {
    v20 = v10;
    v12 = v11;
    v13._countAndFlagsBits = 2108704;
    v13._object = (void *)0xE300000000000000;
    String.append(_:)(v13);
    v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v21._object = (void *)0x80000001000D8500;
    v15._countAndFlagsBits = 0x4E494D4441;
    v15._object = (void *)0xE500000000000000;
    v16._countAndFlagsBits = 0x6E696D6441;
    v16._object = (void *)0xE500000000000000;
    v21._countAndFlagsBits = 0xD000000000000024;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v21);

    String.append(_:)(v17);
    swift_bridgeObjectRelease(v17._object);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
LABEL_10:
    objc_msgSend(v12, "setText:", v18);

    return objc_msgSend(v2, "setNeedsLayout");
  }
LABEL_14:
  __break(1u);
  return result;
}

id sub_1000866F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBATeamListHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBATeamListHeaderView()
{
  return objc_opt_self(_TtC18Feedback_Assistant21FBATeamListHeaderView);
}

id sub_100086790()
{
  char *v0;
  id v1;
  id v2;
  id result;
  uint64_t v4;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  result = *(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel];
  if ((v1 & 1) != 0)
  {
    if (result)
    {
      objc_msgSend(result, "setNumberOfLines:", 0);
      result = *(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel];
      if (result)
      {
        v4 = 0;
        return objc_msgSend(result, "setNumberOfLines:", v4);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v4 = 1;
  objc_msgSend(result, "setNumberOfLines:", 1);
  result = *(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel];
  if (result)
    return objc_msgSend(result, "setNumberOfLines:", v4);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1000868A8()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_currentSelection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_team] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_pickerDelegate], 0);
  v1 = &v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;

  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x80000001000D8850, "Feedback_Assistant/FBABugFormPickerController.swift", 51, 2, 27, 0);
  __break(1u);
}

id sub_1000869C8(uint64_t a1)
{
  char *v1;
  char *v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_currentSelection] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_team] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_pickerDelegate], 0);
  v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_stubsPredicate] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FBABugFormPickerController();
  return objc_msgSendSuper2(&v5, "initWithStyle:", 1);
}

Swift::Int sub_100086A90()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_100086AD4(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

_QWORD *sub_100086B14@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

void sub_100086C20()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  void *object;
  NSString v13;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  objc_super v23;
  Swift::String v24;
  Swift::String v25;

  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for FBABugFormPickerController();
  objc_msgSendSuper2(&v23, "viewDidLoad");
  v1 = objc_msgSend(v0, "navigationItem");
  v2 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v0, "dismissPicker");
  objc_msgSend(v1, "setRightBarButtonItem:", v2);

  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context];
  if (v3 == 1)
  {
    v4 = objc_msgSend(v0, "navigationItem");
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
    v7 = v6;
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v24._object = (void *)0xE000000000000000;
    v9._object = (void *)0x80000001000D87D0;
    v9._countAndFlagsBits = 0xD00000000000001ALL;
    v10.value._countAndFlagsBits = v5;
    v10.value._object = v7;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v24)._object;
    swift_bridgeObjectRelease(v7);

    v13 = String._bridgeToObjectiveC()();
    v14 = object;
  }
  else
  {
    if (v3)
    {
      v22 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context];
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for FBABugFormPickerController.Context, &v22, &type metadata for FBABugFormPickerController.Context, &type metadata for Int);
      __break(1u);
      return;
    }
    v4 = objc_msgSend(v0, "navigationItem");
    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v25._object = (void *)0xE000000000000000;
    v16._countAndFlagsBits = 0x465F455441455243;
    v16._object = (void *)0xEF4B434142444545;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v25._countAndFlagsBits = 0;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v25)._object;

    v13 = String._bridgeToObjectiveC()();
    v14 = v18;
  }
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v4, "setTitle:", v13);

  v19 = objc_msgSend(v0, "navigationController");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, "presentationController");

    if (v21)
    {
      objc_msgSend(v21, "setDelegate:", v0);

    }
  }
  sub_100087694();
}

void sub_100087098(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  NSString v5;
  id v6;
  void *v7;
  id v8;
  NSString v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;

  v2 = v1;
  v4 = off_1001175A8;
  swift_bridgeObjectRetain(off_1001175A8);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v5);

  if (!v6)
  {
    v7 = off_1001175A8;
    v8 = objc_allocWithZone((Class)UITableViewCell);
    swift_bridgeObjectRetain(v7);
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    v6 = objc_msgSend(v8, "initWithStyle:reuseIdentifier:", 3, v9);

  }
  v10 = IndexPath.row.getter();
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs);
  if (!v11)
    goto LABEL_22;
  v12 = v10;
  if ((v11 & 0xC000000000000001) == 0)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v13 = *(id *)(v11 + 8 * v10 + 32);
      goto LABEL_8;
    }
    __break(1u);
LABEL_22:

    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs));
  v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v11);
  swift_bridgeObjectRelease(v11);
LABEL_8:
  v14 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_currentSelection);
  if (v14)
  {
    sub_100053458(0, &qword_100117688, NSObject_ptr);
    v15 = v14;
    if ((static NSObject.== infix(_:_:)(v15, v13) & 1) != 0)
    {
      LOBYTE(v16) = 1;
    }
    else
    {
      v17 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_team);
      if (v17)
      {
        v16 = objc_msgSend(v17, "teamFormStubMatchingFromFormStub:", v15);
        if (v16)
        {
          sub_100053458(0, (unint64_t *)&unk_100117678, FBKBugFormStub_ptr);
          v18 = v13;
          v19 = v16;
          LOBYTE(v16) = static NSObject.== infix(_:_:)(v19, v18);

        }
      }
      else
      {
        LOBYTE(v16) = 0;
      }
    }

  }
  else
  {
    LOBYTE(v16) = 0;
  }
  if (v6)
  {
    objc_msgSend(v6, "configureWithBugFormStub:isSelected:", v13, v16 & 1);

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_100087454(char a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  _BYTE v11[24];
  _QWORD aBlock[3];
  void *ObjectType;
  void (*v14)(uint64_t);
  uint64_t v15;
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for FBABugFormPickerController();
  objc_msgSendSuper2(&v16, "viewDidAppear:", a1 & 1);
  v3 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
  v4 = objc_msgSend(v3, "notificationCenter");

  v5 = FBKDidRefreshFormStubsNotification;
  v6 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v7 = swift_allocObject(&unk_1000E9BB8, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v1);
  v14 = sub_100087FD8;
  v15 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008E628;
  ObjectType = &unk_1000E9BD0;
  v8 = _Block_copy(aBlock);
  swift_release(v15);
  v9 = objc_msgSend(v4, "addObserverForName:object:queue:usingBlock:", v5, 0, v6, v8);
  _Block_release(v8);

  ObjectType = (void *)swift_getObjectType(v9);
  aBlock[0] = v9;
  v10 = (uint64_t)v1 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver;
  swift_beginAccess(v10, v11, 33, 0);
  sub_100087FF8((uint64_t)aBlock, v10);
  swift_endAccess(v11);

}

void sub_100087604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100087694();

  }
}

void sub_100087694()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;

  v1 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
  v2 = objc_msgSend(v1, "currentUser");

  if (v2)
  {
    v4 = objc_msgSend(v2, "bugFormStubsForPickerWithPredicate:team:", *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_stubsPredicate], *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_team]);
    v5 = sub_100053458(0, (unint64_t *)&unk_100117678, FBKBugFormStub_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs];
    *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs] = v6;
    swift_bridgeObjectRelease(v7);
    v8 = objc_msgSend(v0, "tableView");
    if (v8)
    {
      v11 = v8;
      objc_msgSend(v8, "reloadData");

LABEL_6:
      return;
    }
    __break(1u);
  }
  else
  {
    v9 = static os_log_type_t.error.getter(v3);
    v10 = objc_msgSend((id)objc_opt_self(FBALog), "appHandle");
    if (v10)
    {
      v11 = v10;
      os_log(_:dso:log:_:_:)(v9, &_mh_execute_header);
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_100087810(char a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE v10[24];
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  objc_super v15;

  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for FBABugFormPickerController();
  objc_msgSendSuper2(&v15, "viewDidDisappear:", a1 & 1);
  v3 = (uint64_t)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver];
  swift_beginAccess(&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver], v10, 0, 0);
  sub_100087F48(v3, (uint64_t)&v11);
  if (!v12)
    return sub_100051ED0((uint64_t)&v11);
  sub_100075EC4(&v11, &v13);
  v4 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
  v5 = objc_msgSend(v4, "notificationCenter");

  v6 = v14;
  v7 = sub_100087F90(&v13, v14);
  v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
  objc_msgSend(v5, "removeObserver:", v8);

  swift_unknownObjectRelease(v8);
  return sub_100050714(&v13);
}

void sub_100087960(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *Strong;
  void *v4;
  id v5;
  id v6;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_pickerDelegate], a2);
  if (Strong)
  {
    v4 = Strong;
    if ((objc_msgSend(Strong, "respondsToSelector:", "bugFormPickerDidCancel:") & 1) != 0)
      objc_msgSend(v4, "bugFormPickerDidCancel:", v2);
    swift_unknownObjectRelease(v4);
  }
  v5 = objc_msgSend(v2, "presentingViewController");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

id sub_100087B14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBABugFormPickerController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBABugFormPickerController()
{
  return objc_opt_self(_TtC18Feedback_Assistant26FBABugFormPickerController);
}

void sub_100087BDC(void *a1, char a2)
{
  void *v2;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;

  v5 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v5, "labelFontSize");
  v24 = objc_msgSend(v5, "systemFontOfSize:weight:");
  v6 = objc_msgSend(v2, "textLabel");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleHeadline);
    v9 = objc_msgSend(v8, "scaledFontForFont:", v24);

    objc_msgSend(v7, "setFont:", v9);
  }
  v10 = objc_msgSend(v2, "textLabel");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "setAdjustsFontForContentSizeCategory:", 1);

  }
  v12 = objc_msgSend(v2, "textLabel");
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(a1, "name");
    objc_msgSend(v13, "setText:", v14);

  }
  v15 = objc_msgSend(v2, "detailTextLabel");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(a1, "formDescription");
    objc_msgSend(v16, "setText:", v17);

  }
  if ((a2 & 1) != 0)
    v18 = 3;
  else
    v18 = 0;
  objc_msgSend(v2, "setAccessoryType:", v18);
  objc_msgSend(v2, "setAccessibilityTraits:", (unint64_t)objc_msgSend(v2, "accessibilityTraits") | UIAccessibilityTraitButton);
  v19 = objc_msgSend(v2, "detailTextLabel");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v2, "traitCollection");
    v22 = objc_msgSend(v21, "preferredContentSizeCategory");

    LOBYTE(v21) = UIContentSizeCategory.isAccessibilityCategory.getter(v22);
    if ((v21 & 1) != 0)
      v23 = 0;
    else
      v23 = 3;
    objc_msgSend(v20, "setNumberOfLines:", v23);

  }
}

ValueMetadata *type metadata accessor for FBABugFormPickerController.Context()
{
  return &type metadata for FBABugFormPickerController.Context;
}

unint64_t sub_100087F04()
{
  unint64_t result;

  result = qword_100117670;
  if (!qword_100117670)
  {
    result = swift_getWitnessTable(&unk_1000CD278, &type metadata for FBABugFormPickerController.Context);
    atomic_store(result, (unint64_t *)&qword_100117670);
  }
  return result;
}

uint64_t sub_100087F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004BB9C((uint64_t *)&unk_100116D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_100087F90(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100087FB4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100087FD8(uint64_t a1)
{
  uint64_t v1;

  sub_100087604(a1, v1);
}

uint64_t sub_100087FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100087FF0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100087FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004BB9C((uint64_t *)&unk_100116D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100088040(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;

  *(_QWORD *)&v2[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_currentSelection] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_team] = 0;
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_pickerDelegate], 0);
  v5 = &v2[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;

  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, a1, "Feedback_Assistant/FBABugFormPickerController.swift", 51, 2, a2, 0);
  __break(1u);
}

uint64_t sub_100088110()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t countAndFlagsBits;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context);
  if (v1 == 1)
  {
    v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v9 = 0xE000000000000000;
    v3 = 0x80000001000D8780;
    v4 = 0xD00000000000001DLL;
LABEL_5:
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v6 = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, (NSBundle)v2, v5, *(Swift::String *)(&v9 - 1))._countAndFlagsBits;

    return countAndFlagsBits;
  }
  if (!v1)
  {
    v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v4 = 0xD000000000000020;
    v9 = 0xE000000000000000;
    v3 = 0x80000001000D87A0;
    goto LABEL_5;
  }
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context);
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for FBABugFormPickerController.Context, &v10, &type metadata for FBABugFormPickerController.Context, &type metadata for Int);
  __break(1u);
  return result;
}

void sub_100088234(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  v5 = objc_opt_self(UITableViewHeaderFooterView);
  v6 = swift_dynamicCastObjCClass(a1, v5);
  if (v6)
  {
    v7 = (void *)v6;
    v13 = a1;
    v8 = objc_msgSend(v7, "textLabel");
    if (!v8)
    {
LABEL_5:

      return;
    }
    v9 = v8;
    v10 = objc_msgSend(v2, "tableView");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v2, "tableView:titleForHeaderInSection:", v10, a2);

      objc_msgSend(v9, "setText:", v12);
      goto LABEL_5;
    }
    __break(1u);
  }
}

void sub_10008832C()
{
  char *v0;
  char *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *Strong;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;

  v1 = v0;
  v2 = IndexPath.row.getter();
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs];
  if (v3)
  {
    v4 = v2;
    if ((v3 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs]);
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v3);
      swift_bridgeObjectRelease(v3);
LABEL_6:
      v6 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_currentSelection];
      if (v6)
      {
        sub_100053458(0, &qword_100117688, NSObject_ptr);
        v15 = v6;
        if ((static NSObject.== infix(_:_:)(v15, v16) & 1) != 0)
        {
          Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_pickerDelegate], v7);
          if (Strong)
          {
            v9 = Strong;
            if ((objc_msgSend(Strong, "respondsToSelector:", "bugFormPickerDidCancel:") & 1) != 0)
              objc_msgSend(v9, "bugFormPickerDidCancel:", v1);
            swift_unknownObjectRelease(v9);
          }
          v10 = objc_msgSend(v1, "presentingViewController");
          if (v10)
          {
            v14 = v10;
            objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);

            v11 = v14;
          }
          else
          {

            v11 = v15;
          }
LABEL_19:

          return;
        }

      }
      v12 = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_pickerDelegate], v5);
      if (v12)
      {
        v13 = v12;
        objc_msgSend(v12, "bugFormPicker:didSelectBugFormStub:", v1, v16);

        swift_unknownObjectRelease(v13);
        return;
      }
      v11 = v16;
      goto LABEL_19;
    }
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v2 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v16 = *(id *)(v3 + 8 * v2 + 32);
      goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_10008850C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;

  sub_100051D44();
  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v4 = objc_msgSend((id)objc_opt_self(UIStoryboard), "storyboardWithName:bundle:", v3, v2);

  qword_100119F70 = (uint64_t)v4;
}

uint64_t sub_1000885F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_100088698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  unint64_t v9;
  unint64_t v10;
  NSBundle v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  unint64_t v22;
  char *Strong;
  Swift::String v24;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_followup);
  if (!v3)
  {
    Strong = (char *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView, a2);
    if (Strong)
    {
      v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v24._object = (void *)0x80000001000D8A90;
      v16._object = (void *)0x80000001000D8A70;
      v16._countAndFlagsBits = 0xD000000000000015;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v24._countAndFlagsBits = 0x100000000000001ALL;
      v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v24);

      v19 = *(_QWORD *)&Strong[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_placeholderText + 8];
      *(Swift::String *)&Strong[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_placeholderText] = v18;
      swift_bridgeObjectRelease(v19);
      sub_100050848();
LABEL_10:

      return;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  Strong = v3;
  v4 = objc_msgSend(Strong, "requiresComments");
  v6 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView, v5);
  v7 = (char *)v6;
  if (v4)
  {
    if (v6)
    {
      v8 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v22 = 0xAFA680E273746E65;
      v9 = 0x4D4D4F435F444441;
      v10 = 0xEC00000053544E45;
      v11.super.isa = v8;
      v12 = 0;
      v13 = 0xE000000000000000;
      v14 = 0x6D6D6F6320646441;
LABEL_9:
      v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, (Swift::String_optional)0, v11, *(Swift::String *)&v12, *(Swift::String *)&v14);

      v21 = *(_QWORD *)&v7[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_placeholderText + 8];
      *(Swift::String *)&v7[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_placeholderText] = v20;
      swift_bridgeObjectRelease(v21);
      sub_100050848();

      goto LABEL_10;
    }
    goto LABEL_12;
  }
  if (v6)
  {
    v8 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v22 = 0x80000001000D8A90;
    v10 = 0x80000001000D8A70;
    v9 = 0xD000000000000015;
    v11.super.isa = v8;
    v12 = 0;
    v13 = 0xE000000000000000;
    v14 = 0x100000000000001ALL;
    goto LABEL_9;
  }
LABEL_13:
  __break(1u);
}

void sub_1000888F4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  char v8;
  id v9;
  uint64_t v10;
  id v11;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_followup);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_followup) = a1;
  v5 = a1;
  v11 = v5;
  if (a1)
  {
    if (v4)
    {
      sub_100089844();
      v6 = v4;
      v7 = v11;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
        v4 = v6;
        v11 = v7;
LABEL_7:

        v4 = v11;
        goto LABEL_8;
      }
    }
    else
    {
      v9 = v5;
    }
    sub_100088698((uint64_t)v9, v10);
    goto LABEL_7;
  }
LABEL_8:

}

void sub_100088A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *Strong;
  int v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;

  v3 = v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView;
  Strong = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView, a2);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_9;
  }
  v5 = Strong[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing];

  v7 = (char *)swift_unknownObjectWeakLoadStrong(v3, v6);
  v8 = v7;
  if (v5 == 1)
  {
    if (v7)
    {
      v9 = objc_msgSend(v7, "text");

      if (v9)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v9);

        return;
      }
      goto LABEL_10;
    }
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v7)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v7[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText + 8]);

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_100088B20(uint64_t a1)
{
  char *v1;
  double v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  id Strong;

  if ((v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeight + 8] & 1) == 0)
  {
    v2 = *(double *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeight];
    if (v2 < 88.5)
    {
      v3 = static os_log_type_t.debug.getter(a1);
      v4 = objc_msgSend((id)objc_opt_self(FBALog), "appHandle");
      if (!v4)
      {
LABEL_12:
        __break(1u);
        return;
      }
      v5 = v4;
      v6 = sub_10004BB9C((uint64_t *)&unk_100116860);
      v7 = swift_allocObject(v6, 72, 7);
      *(_OWORD *)(v7 + 16) = xmmword_1000CC730;
      *(_QWORD *)(v7 + 56) = &type metadata for CGFloat;
      *(_QWORD *)(v7 + 64) = sub_1000899EC();
      *(double *)(v7 + 32) = v2;
      os_log(_:dso:log:_:_:)(v3, &_mh_execute_header);

      a1 = swift_bridgeObjectRelease(v7);
      v2 = 88.5;
    }
    v8 = static os_log_type_t.debug.getter(a1);
    v9 = objc_msgSend((id)objc_opt_self(FBALog), "appHandle");
    if (v9)
    {
      v10 = v9;
      v11 = sub_10004BB9C((uint64_t *)&unk_100116860);
      v12 = swift_allocObject(v11, 72, 7);
      *(_OWORD *)(v12 + 16) = xmmword_1000CC730;
      *(_QWORD *)(v12 + 56) = &type metadata for CGFloat;
      *(_QWORD *)(v12 + 64) = sub_1000899EC();
      *(double *)(v12 + 32) = v2;
      os_log(_:dso:log:_:_:)(v8, &_mh_execute_header);

      swift_bridgeObjectRelease(v12);
      Strong = (id)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeightConstraint], v13);
      if (Strong)
      {
        objc_msgSend(v1, "frame");
        v15 = v14;
        v17 = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v16);
        if (v17)
        {
          v18 = v17;
          objc_msgSend(v17, "frame");
          v20 = v19;

          objc_msgSend(Strong, "setConstant:", v2 - (v15 - v20));
          return;
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
}

void sub_100088D78()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_super v22;

  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for FBAExpandingTextInputCell();
  objc_msgSendSuper2(&v22, "awakeFromNib");
  v1 = &v0[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], v2);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = Strong;
  objc_msgSend(Strong, "setScrollEnabled:", 0);

  v6 = (void *)swift_unknownObjectWeakLoadStrong(v1, v5);
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = v6;
  objc_msgSend(v6, "setDelegate:", v0);

  v9 = (void *)swift_unknownObjectWeakLoadStrong(v1, v8);
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = v9;
  objc_msgSend(v9, "setAdjustsFontForContentSizeCategory:", 1);

  v12 = (void *)swift_unknownObjectWeakLoadStrong(v1, v11);
  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "text");

  if (v14)
  {
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    v18 = String.count.getter(v15);
    swift_bridgeObjectRelease(v17);
    sub_100088F48(v18, v19);
    sub_100088698(v20, v21);
    objc_msgSend(v0, "setSelectionStyle:", 0);
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_100088F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  Swift::String v23;

  v3 = FBKTextAreaAnswerCharacterLimit - a1;
  if (__OFSUB__(FBKTextAreaAnswerCharacterLimit, a1))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v4 = v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_characterCountLabel;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_characterCountLabel, a2);
  v22 = Strong;
  if (v3 > 99)
  {
    if (Strong)
    {
      objc_msgSend(Strong, "setHidden:", 1);
LABEL_13:

      return;
    }
    goto LABEL_17;
  }
  if (!Strong)
    goto LABEL_15;
  objc_msgSend(Strong, "setHidden:", 0);

  v7 = swift_unknownObjectWeakLoadStrong(v4, v6);
  if (!v7)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v8 = (void *)v7;
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v23._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0x4554434152414843;
  v10._object = (void *)0xEF5446454C5F5352;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v23);

  v13 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1000CC730;
  *(_QWORD *)(v14 + 56) = &type metadata for Int;
  *(_QWORD *)(v14 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v14 + 32) = v3;
  String.init(format:_:)(v12._countAndFlagsBits, v12._object, v14);
  v16 = v15;
  swift_bridgeObjectRelease(v12._object);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  objc_msgSend(v8, "setText:", v17);

  v19 = swift_unknownObjectWeakLoadStrong(v4, v18);
  v20 = (void *)v19;
  if ((v3 & 0x8000000000000000) == 0)
  {
    if (v19)
    {
      v21 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
LABEL_12:
      v22 = v21;
      objc_msgSend(v20, "setTextColor:");

      goto LABEL_13;
    }
    goto LABEL_18;
  }
  if (v19)
  {
    v21 = objc_msgSend((id)objc_opt_self(UIColor), "redColor");
    goto LABEL_12;
  }
LABEL_19:
  __break(1u);
}

id sub_100089230(void *a1)
{
  uint64_t v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  result = objc_msgSend(a1, "text");
  if (!result)
    goto LABEL_6;
  v3 = result;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v6 = v5;

  v7 = String.count.getter(v4);
  swift_bridgeObjectRelease(v6);
  sub_100088F48(v7, v8);
  result = (id)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_delegate, v9);
  if (result)
  {
    v10 = result;
    sub_100064390();
    v11 = objc_opt_self(UIView);
    v12 = swift_allocObject(&unk_1000E9C70, 24, 7);
    *(_QWORD *)(v12 + 16) = v10;
    v13 = swift_allocObject(&unk_1000E9C98, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_100089814;
    *(_QWORD *)(v13 + 24) = v12;
    v17[4] = sub_10004D5F8;
    v18 = v13;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_1000885F0;
    v17[3] = &unk_1000E9CB0;
    v14 = _Block_copy(v17);
    v15 = v18;
    v16 = v10;
    swift_retain(v13);
    swift_release(v15);
    objc_msgSend((id)v11, "performWithoutAnimation:", v14);
    _Block_release(v14);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation(v13, "", 153, 708, 40, 1);

    swift_release(v12);
    result = (id)swift_release(v13);
    if ((v11 & 1) != 0)
    {
      __break(1u);
LABEL_6:
      __break(1u);
    }
  }
  return result;
}

id sub_1000894A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v6;
  char *v7;
  char *v8;
  NSString v9;
  id v10;
  objc_super v12;

  v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier];
  *(_QWORD *)v6 = 0xD000000000000019;
  *((_QWORD *)v6 + 1) = 0x80000001000CD2D0;
  v7 = &v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_followup] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_characterCountLabel], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeightConstraint], 0);
  v8 = &v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeight];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  if (a3)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for FBAExpandingTextInputCell();
  v10 = objc_msgSendSuper2(&v12, "initWithStyle:reuseIdentifier:", a1, v9);

  return v10;
}

id sub_100089614(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  char *v5;
  id v6;
  objc_super v8;

  v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier];
  *(_QWORD *)v3 = 0xD000000000000019;
  *((_QWORD *)v3 + 1) = 0x80000001000CD2D0;
  v4 = &v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_delegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_followup] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_commentsTextView], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_characterCountLabel], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeightConstraint], 0);
  v5 = &v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeight];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for FBAExpandingTextInputCell();
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id sub_100089724()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAExpandingTextInputCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAExpandingTextInputCell()
{
  return objc_opt_self(_TtC18Feedback_Assistant25FBAExpandingTextInputCell);
}

uint64_t sub_1000897F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100089814()
{
  uint64_t v0;

  return sub_100068078(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10008981C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008982C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008983C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100089844()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100117758;
  if (!qword_100117758)
  {
    v1 = objc_opt_self(FBKFeedbackFollowup);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100117758);
  }
  return result;
}

uint64_t sub_100089880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_delegate, a2);
  if (result)
  {
    v4 = (void *)result;
    sub_100064390();
    v5 = objc_opt_self(UIView);
    v6 = swift_allocObject(&unk_1000E9CE8, 24, 7);
    *(_QWORD *)(v6 + 16) = v4;
    v7 = swift_allocObject(&unk_1000E9D10, 32, 7);
    *(_QWORD *)(v7 + 16) = sub_100089A3C;
    *(_QWORD *)(v7 + 24) = v6;
    v11[4] = sub_100089A30;
    v12 = v7;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1000885F0;
    v11[3] = &unk_1000E9D28;
    v8 = _Block_copy(v11);
    v9 = v12;
    v10 = v4;
    swift_retain(v7);
    swift_release(v9);
    objc_msgSend((id)v5, "performWithoutAnimation:", v8);
    _Block_release(v8);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v7, "", 153, 708, 40, 1);

    swift_release(v6);
    result = swift_release(v7);
    if ((v5 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1000899DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1000899EC()
{
  unint64_t result;

  result = qword_100117760;
  if (!qword_100117760)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_100117760);
  }
  return result;
}

uint64_t sub_100089A44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_100089A4C(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_100082DB4(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_10008BF38(result, v3, 0, a1);
  swift_bridgeObjectRetain(v6);
  return v5;
}

uint64_t sub_100089AC8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return String.subscript.getter(15, a1, a2);
  else
    return 0;
}

void sub_100089C4C(void *a1, uint64_t a2, uint64_t a3, const void *a4, const void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;

  v15 = type metadata accessor for URLRequest(0);
  __chkstk_darwin(v15);
  v16 = _Block_copy(a4);
  v17 = _Block_copy(a5);
  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v18 = a1;
  _Block_release(v16);
  _Block_release(v17);
  static os_log_type_t.info.getter();
  v19 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v20 = swift_allocObject(v19, 72, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1000CC730;
  *(_QWORD *)(v20 + 56) = &type metadata for String;
  *(_QWORD *)(v20 + 64) = sub_100051284();
  *(_QWORD *)(v20 + 32) = a6;
  *(_QWORD *)(v20 + 40) = a7;
  os_log(_:dso:log:type:_:)("%s", v21);
  swift_bridgeObjectRelease(v20);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Feedback_Assistant/FBADataClientStub.swift", 42, 2, a8, 0);
  __break(1u);
}

uint64_t sub_100089F68(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = a1[3];
  v4 = sub_100087F90(a1, v3);
  v5 = _bridgeAnythingToObjectiveC<A>(_:)(v4, v3);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, v5);
  return swift_unknownObjectRelease(v5);
}

void sub_10008A1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  NSString v27;
  char *v28;
  id v29;
  id v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  void *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  _QWORD *v53;
  id v54;
  NSString v55;
  id v56;
  id v57;
  _QWORD *v58;
  void *v59;
  _QWORD *v60;
  id v61;
  void *v62;
  const char *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD v70[2];
  __int128 aBlock;
  uint64_t (*v72)(uint64_t);
  void *v73;
  uint64_t (*v74)();
  _QWORD *v75;
  _OWORD v76[2];

  v9 = ((uint64_t (*)(void))URL.path.getter)();
  v11 = v10;
  v12 = URL.query.getter();
  v68 = a5;
  v69 = a2;
  v67 = a4;
  if (v13)
  {
    v14 = v12;
    v15 = v13;
    v16 = swift_bridgeObjectRelease(v11);
    v17 = URL.path.getter(v16);
    v19 = v18;
    *(_QWORD *)&aBlock = v17;
    *((_QWORD *)&aBlock + 1) = v18;
    swift_bridgeObjectRetain(v18);
    v20._countAndFlagsBits = 63;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRetain(*((_QWORD *)&aBlock + 1));
    v21._countAndFlagsBits = v14;
    v21._object = v15;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(*((_QWORD *)&aBlock + 1));
    v12 = swift_bridgeObjectRelease(v15);
    v11 = *((_QWORD *)&aBlock + 1);
    v9 = aBlock;
  }
  v22 = URL.path.getter(v12);
  v24 = v23;
  *(_QWORD *)&aBlock = v22;
  *((_QWORD *)&aBlock + 1) = v23;
  *(_QWORD *)&v76[0] = 63;
  *((_QWORD *)&v76[0] + 1) = 0xE100000000000000;
  v25 = sub_10004F5C4();
  if ((StringProtocol.contains<A>(_:)(v76, &type metadata for String, &type metadata for String, v25, v25) & 1) != 0)
  {
    v26 = objc_allocWithZone((Class)NSURLComponents);
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    v28 = (char *)objc_msgSend(v26, "initWithString:", v27);

    v64 = (const char *)v9;
    v66 = a3;
    v63 = v28;
    if (v28)
    {
      v30 = objc_msgSend(v28, "path", v28);
      if (v30)
      {
        v31 = v30;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
        v24 = v32;

      }
      else
      {
        v24 = 0xE100000000000000;
        v22 = 45;
      }
      v29 = objc_msgSend(v28, "queryItems");
      if (v29)
      {
        v35 = v29;
        v36 = type metadata accessor for URLQueryItem(0);
        v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v36);

        v34 = Array.description.getter(v37, v36);
        v33 = v38;
        v29 = (id)swift_bridgeObjectRelease(v37);
      }
      else
      {
        v33 = 0xE100000000000000;
        v34 = 45;
      }
    }
    else
    {
      v33 = 0xE100000000000000;
      v34 = 45;
      v22 = 45;
      v24 = 0xE100000000000000;
    }
    static os_log_type_t.debug.getter(v29);
    v39 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v40 = swift_allocObject(v39, 112, 7);
    *(_OWORD *)(v40 + 16) = xmmword_1000CC8F0;
    *(_QWORD *)(v40 + 56) = &type metadata for String;
    v41 = sub_100051284();
    *(_QWORD *)(v40 + 32) = v34;
    *(_QWORD *)(v40 + 40) = v33;
    *(_QWORD *)(v40 + 96) = &type metadata for String;
    *(_QWORD *)(v40 + 104) = v41;
    *(_QWORD *)(v40 + 64) = v41;
    *(_QWORD *)(v40 + 72) = v22;
    *(_QWORD *)(v40 + 80) = v24;
    swift_bridgeObjectRetain(v24);
    os_log(_:dso:log:type:_:)("Throwing out query items [%s] when loading fixture [%s]", v63, v64);

    swift_bridgeObjectRelease(v40);
    v9 = v65;
    a3 = v66;
  }
  sub_10008B144(v9, v11, (uint64_t)&aBlock);
  if (v73)
  {
    swift_bridgeObjectRelease(v24);
    v42 = sub_100075EC4(&aBlock, v76);
    static os_log_type_t.debug.getter(v42);
    v43 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v44 = swift_allocObject(v43, 72, 7);
    *(_OWORD *)(v44 + 16) = xmmword_1000CC730;
    *(_QWORD *)(v44 + 56) = &type metadata for String;
    *(_QWORD *)(v44 + 64) = sub_100051284();
    *(_QWORD *)(v44 + 32) = v9;
    *(_QWORD *)(v44 + 40) = v11;
    os_log(_:dso:log:type:_:)("Trying fixture load with query path [%s]", (const char *)v62);
    swift_bridgeObjectRelease(v44);
    v45 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
    sub_1000506D8((uint64_t)v76, (uint64_t)v70);
    v46 = swift_allocObject(&unk_1000E9EA8, 64, 7);
    *(_QWORD *)(v46 + 16) = v69;
    *(_QWORD *)(v46 + 24) = a3;
    sub_100075EC4(v70, (_OWORD *)(v46 + 32));
    v74 = sub_10008C960;
    v75 = (_QWORD *)v46;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v47 = &unk_1000E9EC0;
LABEL_18:
    v72 = sub_10008F5C0;
    v73 = v47;
    v52 = _Block_copy(&aBlock);
    v53 = v75;
    swift_retain(a3);
    swift_release(v53);
    objc_msgSend(v45, "addOperationWithBlock:", v52);
    _Block_release(v52);

    sub_100050714(v76);
    return;
  }
  swift_bridgeObjectRelease(v11);
  sub_10004F588((uint64_t)&aBlock, (uint64_t *)&unk_100116D70);
  sub_10008B144(v22, v24, (uint64_t)&aBlock);
  if (v73)
  {
    v48 = sub_100075EC4(&aBlock, v76);
    static os_log_type_t.debug.getter(v48);
    v49 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v50 = swift_allocObject(v49, 72, 7);
    *(_OWORD *)(v50 + 16) = xmmword_1000CC730;
    *(_QWORD *)(v50 + 56) = &type metadata for String;
    *(_QWORD *)(v50 + 64) = sub_100051284();
    *(_QWORD *)(v50 + 32) = v22;
    *(_QWORD *)(v50 + 40) = v24;
    os_log(_:dso:log:type:_:)("Retrying fixture load WITHOUT query path [%s]", (const char *)v62);
    swift_bridgeObjectRelease(v50);
    v45 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
    sub_1000506D8((uint64_t)v76, (uint64_t)v70);
    v51 = swift_allocObject(&unk_1000E9E58, 64, 7);
    *(_QWORD *)(v51 + 16) = v69;
    *(_QWORD *)(v51 + 24) = a3;
    sub_100075EC4(v70, (_OWORD *)(v51 + 32));
    v74 = sub_10008C6C4;
    v75 = (_QWORD *)v51;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v47 = &unk_1000E9E70;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease(v24);
  sub_10004F588((uint64_t)&aBlock, (uint64_t *)&unk_100116D70);
  v54 = objc_allocWithZone((Class)NSError);
  v55 = String._bridgeToObjectiveC()();
  v56 = objc_msgSend(v54, "initWithDomain:code:userInfo:", v55, 1001, 0);

  v57 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v58 = (_QWORD *)swift_allocObject(&unk_1000E9E08, 40, 7);
  v58[2] = v67;
  v58[3] = v68;
  v58[4] = v56;
  v74 = sub_10008C5F8;
  v75 = v58;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v72 = sub_10008F5C0;
  v73 = &unk_1000E9E20;
  v59 = _Block_copy(&aBlock);
  v60 = v75;
  swift_retain(v68);
  v61 = v56;
  swift_release(v60);
  objc_msgSend(v57, "addOperationWithBlock:", v59);
  _Block_release(v59);

}

void sub_10008AE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  _QWORD *v28;
  void *v29;
  _QWORD *v30;
  id v31;
  id v32;
  _QWORD *v33;
  void *v34;
  _QWORD *v35;
  void **v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  uint64_t (*v40)();
  _QWORD *v41;

  v9 = URL.query.getter();
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    v13 = URL.path.getter(v9);
    v15 = v14;
    v36 = (void **)v13;
    v37 = v14;
    swift_bridgeObjectRetain(v14);
    v16._countAndFlagsBits = 63;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRetain(v37);
    v17._countAndFlagsBits = v11;
    v17._object = v12;
    String.append(_:)(v17);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v12);
    v18 = (uint64_t)v36;
    v19 = v37;
  }
  else
  {
    v18 = URL.path.getter(v9);
    v19 = v20;
  }
  v21 = sub_10008B3A0(v18, v19);
  v23 = v22;
  swift_bridgeObjectRelease(v19);
  if (v23 >> 60 == 15)
  {
    v24 = objc_allocWithZone((Class)NSError);
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v24, "initWithDomain:code:userInfo:", v25, 1002, 0);

    v27 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
    v28 = (_QWORD *)swift_allocObject(&unk_1000E9D68, 40, 7);
    v28[2] = a4;
    v28[3] = a5;
    v28[4] = v26;
    v40 = sub_10008C5F8;
    v41 = v28;
    v36 = _NSConcreteStackBlock;
    v37 = 1107296256;
    v38 = sub_10008F5C0;
    v39 = &unk_1000E9D80;
    v29 = _Block_copy(&v36);
    v30 = v41;
    swift_retain(a5);
    v31 = v26;
    swift_release(v30);
    objc_msgSend(v27, "addOperationWithBlock:", v29);
    _Block_release(v29);

  }
  else
  {
    v32 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
    v33 = (_QWORD *)swift_allocObject(&unk_1000E9DB8, 48, 7);
    v33[2] = a2;
    v33[3] = a3;
    v33[4] = v21;
    v33[5] = v23;
    v40 = sub_10008C640;
    v41 = v33;
    v36 = _NSConcreteStackBlock;
    v37 = 1107296256;
    v38 = sub_10008F5C0;
    v39 = &unk_1000E9DD0;
    v34 = _Block_copy(&v36);
    v35 = v41;
    swift_retain(a3);
    sub_10008C5CC((uint64_t)v21, v23);
    swift_release(v35);
    objc_msgSend(v32, "addOperationWithBlock:", v34);
    _Block_release(v34);

    sub_10008C5E0((uint64_t)v21, v23);
  }
}

double sub_10008B144@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  Class isa;
  id v13;
  id v14;
  double result;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;

  v4 = sub_10008B3A0(a1, a2);
  if (v5 >> 60 == 15)
  {
    v6 = sub_10004BB9C((uint64_t *)&unk_1001178F0);
    v7 = swift_allocObject(v6, 64, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1000CC730;
    *(_QWORD *)(v7 + 56) = &type metadata for String;
    *(_QWORD *)(v7 + 32) = 0x61746164206F6ELL;
    *(_QWORD *)(v7 + 40) = 0xE700000000000000;
    print(_:separator:terminator:)(v7, 32, 0xE100000000000000, 10, 0xE100000000000000);
    v8 = v7;
  }
  else
  {
    v9 = (uint64_t)v4;
    v10 = v5;
    v11 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v26 = 0;
    v13 = objc_msgSend(v11, "JSONObjectWithData:options:error:", isa, 4, &v26);

    v14 = v26;
    if (v13)
    {
      _bridgeAnyObjectToAny(_:)((_QWORD *)a3, v13);
      sub_10008C5E0(v9, v10);
      swift_unknownObjectRelease(v13);
      return result;
    }
    v16 = v14;
    v17 = _convertNSErrorToError(_:)(v14);

    swift_willThrow(v18);
    v19 = sub_10004BB9C((uint64_t *)&unk_1001178F0);
    v20 = swift_allocObject(v19, 64, 7);
    *(_OWORD *)(v20 + 16) = xmmword_1000CC730;
    v26 = 0;
    v27 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    v21._object = (void *)0x80000001000D8C80;
    v21._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v21);
    v25 = v17;
    v22 = sub_10004BB9C((uint64_t *)&unk_100117020);
    _print_unlocked<A, B>(_:_:)(&v25, &v26, v22, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v23 = v26;
    v24 = v27;
    *(_QWORD *)(v20 + 56) = &type metadata for String;
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v24;
    print(_:separator:terminator:)(v20, 32, 0xE100000000000000, 10, 0xE100000000000000);
    sub_10008C5E0(v9, v10);
    swift_errorRelease(v17);
    v8 = v20;
  }
  swift_bridgeObjectRelease(v8);
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

id sub_10008B3A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  id result;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSString v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  void *v102;
  uint64_t v103;
  int v104;
  NSURL *v105;
  uint64_t v106;
  void *v107;
  void *v108;
  id v109;
  NSString v110;
  Class isa;
  id v112;
  unint64_t v113;
  uint64_t v114;
  unsigned int v115;
  uint64_t v116;
  char *v117;
  void (*v118)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v3 = v2;
  v124 = a1;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v119 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v123 = (char *)&v113 - v9;
  v10 = sub_10004BB9C(&qword_100116790);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v120 = (uint64_t)&v113 - v15;
  v16 = __chkstk_darwin(v14);
  v122 = (uint64_t)&v113 - v17;
  v18 = __chkstk_darwin(v16);
  v121 = (char *)&v113 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v113 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v113 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v113 - v26;
  v125 = v6;
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v28((char *)&v113 - v26, 1, 1, v5);
  v29 = sub_10008BF90();
  v117 = v13;
  v126 = v3;
  if (!v30)
  {
    v38 = sub_10004BB9C(&qword_100116890);
    v39 = swift_allocObject(v38, 64, 7);
    *(_OWORD *)(v39 + 16) = xmmword_1000CC8F0;
    *(_QWORD *)(v39 + 32) = 0xD000000000000010;
    *(_QWORD *)(v39 + 40) = 0x80000001000D8BC0;
    v40 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_testFixtureDir + 8);
    *(_QWORD *)(v39 + 48) = *(_QWORD *)(v3 + OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_testFixtureDir);
    *(_QWORD *)(v39 + 56) = v40;
    v127 = v39;
    swift_bridgeObjectRetain(v40);
    v41 = sub_10004BB9C((uint64_t *)&unk_1001178D0);
    v42 = sub_1000793A4();
    v43 = BidirectionalCollection<>.joined(separator:)(47, 0xE100000000000000, v41, v42);
    v116 = v43;
    v45 = v44;
    v46 = swift_bridgeObjectRelease(v39);
    v47 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_Log);
    v115 = static os_log_type_t.debug.getter(v46);
    v118 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10004BB9C((uint64_t *)&unk_100116860);
    v48 = swift_allocObject(v118, 152, 7);
    *(_OWORD *)(v48 + 16) = xmmword_1000CCB20;
    *(_QWORD *)(v48 + 56) = &type metadata for String;
    v49 = sub_100051284();
    *(_QWORD *)(v48 + 32) = 0xD000000000000014;
    *(_QWORD *)(v48 + 40) = 0x80000001000D8C00;
    *(_QWORD *)(v48 + 96) = &type metadata for String;
    *(_QWORD *)(v48 + 104) = v49;
    *(_QWORD *)(v48 + 64) = v49;
    *(_QWORD *)(v48 + 72) = v43;
    *(_QWORD *)(v48 + 80) = v45;
    *(_QWORD *)(v48 + 136) = &type metadata for String;
    *(_QWORD *)(v48 + 144) = v49;
    v113 = v49;
    v50 = v124;
    *(_QWORD *)(v48 + 112) = v124;
    *(_QWORD *)(v48 + 120) = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v45);
    v114 = v47;
    os_log(_:dso:log:type:_:)("%s from [<Test Bundle>/%@%@]", 28, 2, &_mh_execute_header, v47, v115, v48);
    swift_bridgeObjectRelease(v48);
    v51 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v126
                                                                + OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_bundle), "bundleURL"));
    v52 = v119;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v51);

    v53 = v123;
    URL.appendingPathComponent(_:)(v116);
    swift_bridgeObjectRelease(v45);
    v54 = v125;
    v55 = *(void (**)(char *, uint64_t))(v125 + 8);
    v55(v52, v5);
    URL.appendingPathComponent(_:)(v50);
    v56 = v53;
    v57 = (void (*)(uint64_t, uint64_t))v55;
    v55(v56, v5);
    sub_10004F588((uint64_t)v27, &qword_100116790);
    v28(v25, 0, 1, v5);
    v58 = sub_10005B694((uint64_t)v25, (uint64_t)v27);
    v59 = static os_log_type_t.debug.getter(v58);
    v60 = swift_allocObject(v118, 72, 7);
    *(_OWORD *)(v60 + 16) = xmmword_1000CC730;
    v61 = (uint64_t)v121;
    sub_10008C0E0((uint64_t)v27, (uint64_t)v121);
    v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
    result = (id)v62(v61, 1, v5);
    if ((_DWORD)result == 1)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v64 = URL.path.getter();
    v65 = v113;
    *(_QWORD *)(v60 + 56) = &type metadata for String;
    *(_QWORD *)(v60 + 64) = v65;
    *(_QWORD *)(v60 + 32) = v64;
    *(_QWORD *)(v60 + 40) = v66;
    v57(v61, v5);
    os_log(_:dso:log:type:_:)("Will load fixture path %@", 25, 2, &_mh_execute_header, v114, v59, v60);
    goto LABEL_13;
  }
  v31 = v29;
  v32 = v30;
  v118 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v28;
  v119 = v25;
  v121 = v27;
  swift_bridgeObjectRetain(a2);
  v33 = v124;
  v34 = sub_100089AC8(v124, a2);
  v36 = v35;
  swift_bridgeObjectRelease(a2);
  v37 = v123;
  if (!v36)
    goto LABEL_10;
  if (v34 != 47 || v36 != 0xE100000000000000)
  {
    v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36, 47, 0xE100000000000000, 0);
    swift_bridgeObjectRelease(v36);
    if ((v67 & 1) != 0)
      goto LABEL_9;
LABEL_10:
    swift_bridgeObjectRetain(a2);
    goto LABEL_11;
  }
  swift_bridgeObjectRelease(0xE100000000000000);
LABEL_9:
  swift_bridgeObjectRetain(a2);
  v68 = sub_10008C254(1uLL, v33, a2);
  v70 = v69;
  v72 = v71;
  v73 = v37;
  v75 = v74;
  swift_bridgeObjectRelease(a2);
  v76 = static String._fromSubstring(_:)(v68, v70, v72, v75);
  a2 = v77;
  v78 = v75;
  v37 = v73;
  v33 = v76;
  swift_bridgeObjectRelease(v78);
LABEL_11:
  URL.init(fileURLWithPath:)(v31, v32);
  swift_bridgeObjectRelease(v32);
  v79 = (uint64_t)v119;
  URL.appendingPathComponent(_:)(v33);
  swift_bridgeObjectRelease(a2);
  v80 = v37;
  v81 = v125;
  v57 = *(void (**)(uint64_t, uint64_t))(v125 + 8);
  v57((uint64_t)v80, v5);
  v82 = (uint64_t)v121;
  sub_10004F588((uint64_t)v121, &qword_100116790);
  v118(v79, 0, 1, v5);
  v83 = sub_10005B694(v79, v82);
  v84 = *(_QWORD *)(v126 + OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_Log);
  v85 = static os_log_type_t.debug.getter(v83);
  v86 = sub_10004BB9C((uint64_t *)&unk_100116860);
  v60 = swift_allocObject(v86, 112, 7);
  *(_OWORD *)(v60 + 16) = xmmword_1000CC8F0;
  *(_QWORD *)(v60 + 56) = &type metadata for String;
  v87 = sub_100051284();
  *(_QWORD *)(v60 + 64) = v87;
  *(_QWORD *)(v60 + 32) = 0xD000000000000014;
  *(_QWORD *)(v60 + 40) = 0x80000001000D8C00;
  sub_10008C0E0(v82, (uint64_t)v22);
  v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
  result = (id)v62((uint64_t)v22, 1, v5);
  if ((_DWORD)result == 1)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v88 = URL.description.getter();
  *(_QWORD *)(v60 + 96) = &type metadata for String;
  *(_QWORD *)(v60 + 104) = v87;
  *(_QWORD *)(v60 + 72) = v88;
  *(_QWORD *)(v60 + 80) = v89;
  v57((uint64_t)v22, v5);
  os_log(_:dso:log:type:_:)("%s URL [%@]", 11, 2, &_mh_execute_header, v84, v85, v60);
  v27 = v121;
LABEL_13:
  swift_bridgeObjectRelease(v60);
  v90 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v91 = v122;
  sub_10008C0E0((uint64_t)v27, v122);
  result = (id)v62(v91, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  URL.path.getter();
  v93 = v92;
  v94 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v93);
  v57(v91, v5);
  LOBYTE(v93) = objc_msgSend(v90, "fileExistsAtPath:", v94);

  if ((v93 & 1) == 0)
  {
    v96 = sub_10008C128();
    v97 = swift_allocError(&type metadata for SimpleError, v96, 0, 0);
    *v98 = 0xD000000000000013;
    v98[1] = 0x80000001000D8C40;
    sub_10008C2F0(v97, (uint64_t)v27);
    sub_10004F588((uint64_t)v27, &qword_100116790);
    swift_errorRelease(v97);
    return 0;
  }
  v95 = v120;
  sub_10008C0E0((uint64_t)v27, v120);
  result = (id)v62(v95, 1, v5);
  if ((_DWORD)result == 1)
    goto LABEL_26;
  v99 = Data.init(contentsOf:options:)(v95, 3);
  v101 = v100;
  v57(v95, v5);
  result = objc_msgSend((id)objc_opt_self(FBKRequestsLog), "sharedInstance");
  if (result)
  {
    v102 = result;
    v103 = (uint64_t)v117;
    sub_10008C0E0((uint64_t)v27, (uint64_t)v117);
    v104 = v62(v103, 1, v5);
    sub_10008C588(v99, v101);
    v106 = (uint64_t)v27;
    if (v104 == 1)
    {
      v107 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v105);
      v107 = v108;
      v57(v103, v5);
    }
    v109 = objc_allocWithZone((Class)FBKRequestRecordWrapper);
    v110 = String._bridgeToObjectiveC()();
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100050694(v99, v101);
    v112 = objc_msgSend(v109, "initWithURL:httpMethod:responseData:", v107, v110, isa);

    objc_msgSend(v102, "addRequest:", v112);
    sub_10004F588(v106, &qword_100116790);
    return (id)v99;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10008BD88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBADataClientStub();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBADataClientStub()
{
  return objc_opt_self(_TtC18Feedback_Assistant17FBADataClientStub);
}

id sub_10008BE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v11;
  uint64_t v12;
  NSURL *v13;
  void *v14;
  void *v15;
  NSString v16;
  Class isa;
  id v18;

  v6 = v5;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) != 1)
  {
    URL._bridgeToObjectiveC()(v13);
    v14 = v15;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  }
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  if (a5 >> 60 == 15)
  {
    isa = 0;
  }
  else
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_10008C5E0(a4, a5);
  }
  v18 = objc_msgSend(v6, "initWithURL:httpMethod:responseData:", v14, v16, isa);

  return v18;
}

uint64_t sub_10008BF38(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_10008BF90()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  id v8;

  v0 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v1 = objc_msgSend(v0, "environment");

  v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_10006D4A8(0x545849465F414246, 0xEC00000053455255), (v4 & 1) != 0))
  {
    v5 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 16 * v3);
    v6 = *v5;
    swift_bridgeObjectRetain(v5[1]);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    swift_bridgeObjectRelease(v2);
    v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v8 = objc_msgSend(v7, "stringForKey:", FBKFixturePath);

    if (v8)
    {
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

    }
    else
    {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_10008C0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004BB9C(&qword_100116790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10008C128()
{
  unint64_t result;

  result = qword_1001178E0;
  if (!qword_1001178E0)
  {
    result = swift_getWitnessTable(&unk_1000CD360, &type metadata for SimpleError);
    atomic_store(result, (unint64_t *)&qword_1001178E0);
  }
  return result;
}

id sub_10008C16C(void *a1)
{
  char *v1;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  objc_super v12;
  objc_class *v13;

  v3 = OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_Log;
  sub_1000512C8();
  v4 = (objc_class *)type metadata accessor for FBADataClientStub();
  v13 = v4;
  v5 = v1;
  v6 = sub_10004BB9C((uint64_t *)&unk_100117900);
  v7 = String.init<A>(describing:)(&v13, v6);
  *(_QWORD *)&v1[v3] = OS_os_log.init(subsystem:category:)(0xD00000000000002ALL, 0x80000001000D8E10, v7, v8);
  *(_QWORD *)&v5[OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_bundle] = a1;
  v9 = &v5[OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_testFixtureDir];
  *(_QWORD *)v9 = 0x4950412D3356;
  *((_QWORD *)v9 + 1) = 0xE600000000000000;
  v10 = a1;

  v12.receiver = v5;
  v12.super_class = v4;
  return objc_msgSendSuper2(&v12, "init");
}

unint64_t sub_10008C254(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = String.index(_:offsetBy:limitedBy:)(15, result, v5, a2, a3);
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return String.subscript.getter();
  }
  __break(1u);
  return result;
}

id sub_10008C2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  void *v25;
  id result;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[8];
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v28 = a2;
  v3 = sub_10004BB9C(&qword_100116790);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.Encoding(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = 0;
  v34 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  v10._object = (void *)0x80000001000D8C60;
  v10._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v10);
  v32 = a1;
  v11 = sub_10004BB9C((uint64_t *)&unk_100117020);
  _print_unlocked<A, B>(_:_:)(&v32, &v33, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v13 = v33;
  v12 = v34;
  v14 = sub_10004BB9C((uint64_t *)&unk_1001178F0);
  v15 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1000CC730;
  swift_getErrorValue(a1, v31, &v29);
  v16 = v29;
  v17 = v30;
  *(_QWORD *)(v15 + 56) = v30;
  v18 = sub_1000535B0((_QWORD *)(v15 + 32));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v18, v16, v17);
  print(_:separator:terminator:)(v15, 32, 0xE100000000000000, 10, 0xE100000000000000);
  v19 = swift_bridgeObjectRelease(v15);
  static String.Encoding.utf8.getter(v19);
  v20 = String.data(using:allowLossyConversion:)(v9, 0, v13, v12);
  v22 = v21;
  swift_bridgeObjectRelease(v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10008C0E0(v28, (uint64_t)v5);
  v23 = objc_allocWithZone((Class)FBKRequestRecordWrapper);
  sub_10008C5CC(v20, v22);
  v24 = sub_10008BE24((uint64_t)v5, 0x45525554584946, 0xE700000000000000, v20, v22);
  v25 = v24;
  if (v24)
    objc_msgSend(v24, "setIsFailure:", 1);
  result = objc_msgSend((id)objc_opt_self(FBKRequestsLog), "sharedInstance");
  if (result)
  {
    v27 = result;
    objc_msgSend(result, "addRequest:", v25);

    return (id)sub_10008C5E0(v20, v22);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10008C588(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10008C5CC(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10008C588(result, a2);
  return result;
}

uint64_t sub_10008C5E0(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100050694(result, a2);
  return result;
}

uint64_t sub_10008C5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008C60C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10008C614()
{
  _QWORD *v0;

  swift_release(v0[3]);
  sub_100050694(v0[4], v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10008C640()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10008C66C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008C698()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_10008C6C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + 32);
}

uint64_t sub_10008C6F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_100050714((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10008C71C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008C748(_QWORD *a1)
{
  uint64_t v1;

  return sub_100089F68(a1, *(_QWORD *)(v1 + 16));
}

void sub_10008C750()
{
  uint64_t v0;
  uint64_t v1;
  Class isa;

  v1 = *(_QWORD *)(v0 + 16);
  isa = Data._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(v1 + 16))(v1, isa);

}

void sub_10008C790()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)_convertErrorToNSError(_:)();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

_QWORD *initializeBufferWithCopyOfBuffer for SimpleError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for SimpleError(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for SimpleError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for SimpleError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleError()
{
  return &type metadata for SimpleError;
}

uint64_t sub_10008C968()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  objc_super v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for FBASmartMailbox();
  v2 = objc_msgSendSuper2(&v10, "diffableIdentifier");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v11 = v3;
  v12 = v5;
  v6._countAndFlagsBits = 45;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  objc_msgSend(v1, "unreadCountForTeam:", 0);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  return v11;
}

id sub_10008CA84()
{
  return sub_1000728EC(type metadata accessor for FBASmartMailbox);
}

uint64_t type metadata accessor for FBASmartMailbox()
{
  return objc_opt_self(_TtC18Feedback_Assistant15FBASmartMailbox);
}

id sub_10008CC04()
{
  return sub_1000728EC(type metadata accessor for FBAAllInbox);
}

uint64_t type metadata accessor for FBAAllInbox()
{
  return objc_opt_self(_TtC18Feedback_Assistant11FBAAllInbox);
}

uint64_t sub_10008CD30(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t result;

  v3 = sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "entityName");
  if (v4)
  {
    v5 = v4;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    v8 = objc_allocWithZone((Class)NSFetchRequest);
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    v10 = objc_msgSend(v8, "initWithEntityName:", v9);

    v11 = objc_msgSend(v1, "predicateForTeam:", a1);
    objc_msgSend(v10, "setPredicate:", v11);

    v12 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
    v13 = objc_msgSend(v12, "mainQueueContext");

    if (v13)
    {
      v14 = NSManagedObjectContext.count<A>(for:)(v10, v3);

      if ((v14 & 0x8000000000000000) == 0)
        return v14;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
      __break(1u);
    }

    return 0;
  }
  __break(1u);
  result = swift_unexpectedError(a1, "Feedback_Assistant/FBAQuickFilterInboxes.swift", 46, 1, 62);
  __break(1u);
  return result;
}

id sub_10008CF8C()
{
  return sub_1000728EC(type metadata accessor for FBARecentsInbox);
}

uint64_t type metadata accessor for FBARecentsInbox()
{
  return objc_opt_self(_TtC18Feedback_Assistant15FBARecentsInbox);
}

uint64_t sub_10008D0C0(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  Class isa;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t result;

  v3 = (void *)objc_opt_self(FBKData);
  v4 = objc_msgSend(v3, "sharedInstance");
  v5 = objc_msgSend(v4, "currentUser");

  if (!v5)
    return 0;
  v6 = sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(v6), "entityName");
  if (v7)
  {
    v8 = v7;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    v11 = objc_allocWithZone((Class)NSFetchRequest);
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    v13 = objc_msgSend(v11, "initWithEntityName:", v12);

    v14 = objc_msgSend(v1, "predicateForTeam:", a1);
    v15 = (void *)objc_opt_self(FBKContentItem);
    v16 = objc_msgSend(v15, "needsActionPredicate");
    v17 = objc_msgSend(v15, "assignedPredicateForUser:", v5);
    if (v14)
    {
      v18 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v20 >= v19 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
      v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
      specialized Array._endMutation()(v21);
    }
    if (v16)
    {
      v22 = v16;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
      v24 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v23 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v24 >= v23 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
      v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
      specialized Array._endMutation()(v25);
    }
    if (v17)
    {
      v26 = v17;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
      v28 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v27 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
      specialized Array._endMutation()(v29);
    }

    sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v31 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "andPredicateWithSubpredicates:", isa);

    objc_msgSend(v13, "setPredicate:", v31);
    v32 = objc_msgSend(v3, "sharedInstance");
    v33 = objc_msgSend(v32, "mainQueueContext");

    if (v33)
    {
      v34 = NSManagedObjectContext.count<A>(for:)(v13, v6);

      if ((v34 & 0x8000000000000000) == 0)
        return v34;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
      __break(1u);
    }

    return 0;
  }
  __break(1u);
  result = swift_unexpectedError(v3, "Feedback_Assistant/FBAQuickFilterInboxes.swift", 46, 1, 99);
  __break(1u);
  return result;
}

id sub_10008D544()
{
  return sub_1000728EC(type metadata accessor for FBARequestsInbox);
}

uint64_t type metadata accessor for FBARequestsInbox()
{
  return objc_opt_self(_TtC18Feedback_Assistant16FBARequestsInbox);
}

uint64_t sub_10008D670(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  Class isa;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t result;

  v3 = sub_100053458(0, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "entityName");
  if (v4)
  {
    v5 = v4;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    v8 = objc_allocWithZone((Class)NSFetchRequest);
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    v10 = objc_msgSend(v8, "initWithEntityName:", v9);

    v11 = sub_10004BB9C((uint64_t *)&unk_100117030);
    v12 = swift_allocObject(v11, 48, 7);
    *(_OWORD *)(v12 + 16) = xmmword_1000CD150;
    v13 = objc_msgSend(v1, "predicateForTeam:", a1);
    if (v13)
    {
      *(_QWORD *)(v12 + 32) = v13;
      sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
      v14 = NSPredicate.init(format:_:)(0x3D20646165726E75, 0xED0000534559203DLL, _swiftEmptyArrayStorage);
      *(_QWORD *)(v12 + 40) = v14;
      specialized Array._endMutation()(v14);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v12);
      v16 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "andPredicateWithSubpredicates:", isa);

      objc_msgSend(v10, "setPredicate:", v16);
      v17 = objc_msgSend((id)objc_opt_self(FBKData), "sharedInstance");
      v18 = objc_msgSend(v17, "mainQueueContext");

      if (v18)
      {
        v19 = NSManagedObjectContext.count<A>(for:)(v10, v3);

        if ((v19 & 0x8000000000000000) == 0)
          return v19;
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
        __break(1u);
      }

      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError(a1, "Feedback_Assistant/FBAQuickFilterInboxes.swift", 46, 1, 133);
  __break(1u);
  return result;
}

id sub_10008DA84(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_10008DAC0()
{
  return sub_1000728EC(type metadata accessor for FBAAnnouncementsInbox);
}

uint64_t type metadata accessor for FBAAnnouncementsInbox()
{
  return objc_opt_self(_TtC18Feedback_Assistant21FBAAnnouncementsInbox);
}

id sub_10008DC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *, char *, uint64_t);
  _QWORD *v13;
  NSString v14;
  Class isa;
  id v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v19 - v6;
  v8 = Date.init(timeIntervalSinceNow:)(v5, -604800.0);
  Date.init()(v8);
  v9 = sub_10004BB9C((uint64_t *)&unk_1001178F0);
  v10 = swift_allocObject(v9, 96, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1000CC8F0;
  *(_QWORD *)(v10 + 56) = v0;
  v11 = sub_1000535B0((_QWORD *)(v10 + 32));
  v12 = *(void (**)(_QWORD *, char *, uint64_t))(v1 + 16);
  v12(v11, v7, v0);
  *(_QWORD *)(v10 + 88) = v0;
  v13 = sub_1000535B0((_QWORD *)(v10 + 64));
  v12(v13, v4, v0);
  v14 = String._bridgeToObjectiveC()();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  v16 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithFormat:argumentArray:", v14, isa);

  v17 = *(void (**)(char *, uint64_t))(v1 + 8);
  v17(v4, v0);
  v17(v7, v0);
  return v16;
}

id sub_10008DDC8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Class isa;
  id v4;

  v0 = sub_10004BB9C((uint64_t *)&unk_100117030);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1000CD150;
  sub_100053458(0, (unint64_t *)&qword_100117348, NSPredicate_ptr);
  *(_QWORD *)(v1 + 32) = NSPredicate.init(format:_:)(0xD000000000000023, 0x80000001000D8F90, _swiftEmptyArrayStorage);
  v2 = objc_msgSend((id)objc_opt_self(FBKContentItem), "isSurveyAvailablePredicate");
  *(_QWORD *)(v1 + 40) = v2;
  specialized Array._endMutation()(v2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v1);
  v4 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "orPredicateWithSubpredicates:", isa);

  return v4;
}

unint64_t sub_10008DEDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116998;
  if (!qword_100116998)
  {
    v1 = sub_100053458(255, (unint64_t *)&qword_100116990, FBKContentItem_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100116998);
  }
  return result;
}

id sub_10008DFBC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell____lazy_storage___choiceLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell____lazy_storage___choiceLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell____lazy_storage___choiceLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, "setNumberOfLines:", 0);
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    objc_msgSend(v4, "setTextColor:", v5);

    v6 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCallout);
    objc_msgSend(v4, "setFont:", v6);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_10008E0D4(char a1)
{
  id v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t v6;
  void *object;
  id v8;
  NSString v9;
  unint64_t v10;
  id v11;

  if (a1 == 2)
  {
    v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = 0xE000000000000000;
    v3 = 0x80000001000D9080;
    v4 = 0xD000000000000014;
  }
  else
  {
    v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = 0xE000000000000000;
    if ((a1 & 1) != 0)
    {
      v4 = 5457241;
      v3 = 0xE300000000000000;
    }
    else
    {
      v4 = 20302;
      v3 = 0xE200000000000000;
    }
  }
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v6 = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, (NSBundle)v2, v5, *(Swift::String *)(&v10 + -8))._object;

  v8 = sub_10008DFBC();
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v8, "setText:", v9);

  v11 = sub_10008DFBC();
  objc_msgSend(v11, "sizeToFit");

}

void sub_10008E214()
{
  char *v0;
  id v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  id v6;
  NSString v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  NSString v12;
  objc_super v13;
  Swift::String v14;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for FBAFFUValidationCell();
  objc_msgSendSuper2(&v13, "awakeFromNib");
  v1 = sub_10008DFBC();
  objc_msgSend(v0, "setAccessoryView:", v1);

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001000D9080;
  v3._countAndFlagsBits = 0xD000000000000014;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v14)._object;

  v6 = sub_10008DFBC();
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v6, "setText:", v7);

  v8 = sub_10008DFBC();
  objc_msgSend(v8, "sizeToFit");

  v9 = objc_msgSend(v0, "textLabel");
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_validationQuery + 8];
    swift_bridgeObjectRetain(v11);
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    objc_msgSend(v10, "setText:", v12);

  }
}

id sub_10008E3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v5;
  _QWORD *v6;
  NSString v8;
  id v9;
  objc_super v11;

  v5 = &v3[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_itemIdentifier];
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_validationQuery];
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  v3[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_choice] = 2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell____lazy_storage___choiceLabel] = 0;
  if (a3)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for FBAFFUValidationCell();
  v9 = objc_msgSendSuper2(&v11, "initWithStyle:reuseIdentifier:", a1, v8);

  return v9;
}

id sub_10008E4D8(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  id v5;
  objc_super v7;

  v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_itemIdentifier];
  *v3 = 0;
  v3[1] = 0xE000000000000000;
  v4 = &v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_validationQuery];
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_choice] = 2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell____lazy_storage___choiceLabel] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for FBAFFUValidationCell();
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

id sub_10008E588()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFFUValidationCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAFFUValidationCell()
{
  return objc_opt_self(_TtC18Feedback_Assistant20FBAFFUValidationCell);
}

uint64_t sub_10008E628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v11;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Class sub_10008E6E4(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  Class isa;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a3);
  v6 = v5;
  v7 = a1;
  v8 = sub_10008E9EC(v4, v6);

  swift_bridgeObjectRelease(v6);
  sub_100053458(0, &qword_100117AD8, NSManagedObject_ptr);
  sub_10008EF6C();
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v8);
  return isa;
}

uint64_t sub_10008E7D4()
{
  Class isa;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD v8[5];
  __int128 v9;
  __int128 v10;

  isa = Notification._bridgeToObjectiveC()().super.isa;
  v1 = -[objc_class userInfo](isa, "userInfo");

  if (!v1)
  {
    v9 = 0u;
    v10 = 0u;
LABEL_9:
    v6 = 0;
    goto LABEL_10;
  }
  v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  *(_QWORD *)&v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSInvalidatedAllObjectsKey);
  *((_QWORD *)&v9 + 1) = v3;
  AnyHashable.init<A>(_:)(v8, &v9, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v2 + 16) && (v4 = sub_10006D510((uint64_t)v8), (v5 & 1) != 0))
  {
    sub_1000506D8(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  swift_bridgeObjectRelease(v2);
  sub_10006D540((uint64_t)v8);
  if (!*((_QWORD *)&v10 + 1))
    goto LABEL_9;
  v6 = 1;
LABEL_10:
  sub_100051ED0((uint64_t)&v9);
  return v6;
}

uint64_t sub_10008E91C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  _QWORD v3[4];

  Notification.object.getter(v3);
  if (v3[3])
  {
    v0 = sub_100053458(0, &qword_100117AD0, NSManagedObjectContext_ptr);
    if (swift_dynamicCast(&v2, v3, (char *)&type metadata for Any + 8, v0, 6))
      return v2;
  }
  else
  {
    sub_100051ED0((uint64_t)v3);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000026, 0x80000001000D9220, "Feedback_Assistant/NSManagedObjectContext+FBAObservers.swift", 60, 2, 46, 0);
  __break(1u);
  return result;
}

void *sub_10008E9EC(uint64_t a1, uint64_t a2)
{
  Class isa;
  id v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v11[2];
  _QWORD v12[5];
  __int128 v13;
  __int128 v14;

  isa = Notification._bridgeToObjectiveC()().super.isa;
  v5 = -[objc_class userInfo](isa, "userInfo");

  if (!v5)
  {
    v13 = 0u;
    v14 = 0u;
LABEL_10:
    sub_100051ED0((uint64_t)&v13);
    return &_swiftEmptySetSingleton;
  }
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v11[0] = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain(a2);
  AnyHashable.init<A>(_:)(v12, v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_10006D510((uint64_t)v12), (v8 & 1) != 0))
  {
    sub_1000506D8(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease(v6);
  sub_10006D540((uint64_t)v12);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_10;
  v9 = sub_10004BB9C(&qword_100117AC8);
  if (swift_dynamicCast(v12, &v13, (char *)&type metadata for Any + 8, v9, 6))
    return (void *)v12[0];
  return &_swiftEmptySetSingleton;
}

id sub_10008EB68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAManagedObjectChanges(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10008EBD8()
{
  return type metadata accessor for FBAManagedObjectChanges(0);
}

uint64_t type metadata accessor for FBAManagedObjectChanges(uint64_t a1)
{
  uint64_t result;

  result = qword_100117AB8;
  if (!qword_100117AB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FBAManagedObjectChanges);
  return result;
}

uint64_t sub_10008EC1C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Notification(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

id sub_10008EC88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;

  v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v6 = swift_allocObject(&unk_1000EA220, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v11[4] = sub_10008EF4C;
  v12 = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10008E628;
  v11[3] = &unk_1000EA238;
  v7 = _Block_copy(v11);
  v8 = v12;
  swift_retain(a2);
  swift_release(v8);
  v9 = objc_msgSend(v5, "addObserverForName:object:queue:usingBlock:", NSManagedObjectContextObjectsDidChangeNotification, v2, 0, v7);
  _Block_release(v7);

  return v9;
}

void sub_10008ED9C(uint64_t a1, void (*a2)(id))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t, uint64_t);
  objc_class *v9;
  char *v10;
  id v11;
  objc_super v12;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v8(v7, a1, v4);
  v9 = (objc_class *)type metadata accessor for FBAManagedObjectChanges(0);
  v10 = (char *)objc_allocWithZone(v9);
  v8(&v10[OBJC_IVAR____TtC18Feedback_Assistant23FBAManagedObjectChanges_notification], (uint64_t)v7, v4);
  v12.receiver = v10;
  v12.super_class = v9;
  v11 = objc_msgSendSuper2(&v12, "init");
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a2(v11);

}

uint64_t sub_10008EF04()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008EF28()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10008EF4C(uint64_t a1)
{
  uint64_t v1;

  sub_10008ED9C(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_10008EF54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008EF64(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10008EF6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100117AE0;
  if (!qword_100117AE0)
  {
    v1 = sub_100053458(255, &qword_100117AD8, NSManagedObject_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100117AE0);
  }
  return result;
}

void sub_10008EFC4(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_100053458(0, (unint64_t *)&unk_100116F70, FBKGroupedDevice_ptr);
  sub_10005BE04();
  isa = Set._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

id sub_10008F12C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBADevicePickerCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBADevicePickerCoordinator()
{
  return objc_opt_self(_TtC18Feedback_Assistant26FBADevicePickerCoordinator);
}

uint64_t sub_10008F17C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008F1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_100053458(0, (unint64_t *)&unk_100116F70, FBKGroupedDevice_ptr);
  v6 = sub_10005BE04();
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a2, v5, v6);
  swift_retain(v3);
  v4(v7);
  swift_release(v3);
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_10008F218(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053458(0, (unint64_t *)&qword_100116970, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter();
  v12 = swift_allocObject(&unk_1000EA2C0, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_10005BD64;
  v25 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008F5C0;
  aBlock[3] = &unk_1000EA2D8;
  v13 = _Block_copy(aBlock);
  v14 = v25;
  v15 = a2;
  v16 = a1;
  v17 = swift_release(v14);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100073868();
  v19 = sub_10004BB9C((uint64_t *)&unk_100116980);
  v20 = sub_10004BBDC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_10008F400(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8;
  Class isa;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[5];
  uint64_t v14;

  v8 = objc_allocWithZone((Class)FBADevicePickingNavigationController);
  sub_100053458(0, (unint64_t *)&unk_100116F70, FBKGroupedDevice_ptr);
  sub_10005BE04();
  swift_bridgeObjectRetain(a1);
  swift_retain(a4);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v13[4] = a3;
  v14 = a4;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10008F1A0;
  v13[3] = &unk_1000EA288;
  v10 = _Block_copy(v13);
  v11 = objc_msgSend(v8, "initWithDeviceChoices:allowsMultipleSelection:completion:", isa, 1, v10);

  _Block_release(v10);
  swift_release(v14);
  if (v11)
  {
    v12 = v11;
    sub_10008F218(v12, a2);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10008F538(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008F548(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10008F550()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for FBAError.NotLocalized()
{
  return &type metadata for FBAError.NotLocalized;
}

uint64_t sub_10008F594()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_10008F5C0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_10008F688()
{
  qword_100119F78 = 0x65437265746C6946;
  unk_100119F80 = 0xEA00000000006C6CLL;
}

id sub_10008F720(uint64_t a1, uint64_t a2)
{
  char *v2;
  id result;
  void *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;

  result = (id)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_titleLabel], a2);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = result;
  objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v5 = &v2[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_filterImage];
  result = (id)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_filterImage], v6);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v7 = result;
  objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  result = (id)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_countLabel], v8);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v9 = result;
  objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  result = (id)swift_unknownObjectWeakLoadStrong(v5, v10);
  if (result)
  {
    v11 = result;
    v12 = objc_msgSend((id)objc_opt_self(iFBAConstants), "tintColor");
    objc_msgSend(v11, "setTintColor:", v12);

    v13 = objc_msgSend(v2, "traitCollection");
    v14 = objc_msgSend(v13, "preferredContentSizeCategory");

    sub_10008F948((uint64_t)v14);
    objc_msgSend(v2, "setIsAccessibilityElement:", 1);
    return objc_msgSend(v2, "setAccessibilityTraits:", UIAccessibilityTraitButton);
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_10008F948(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v2 = UIContentSizeCategory.isAccessibilityCategory.getter(a1);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_titleLabel, v3);
  v5 = Strong;
  if ((v2 & 1) != 0)
  {
    if (Strong)
    {
      objc_msgSend(Strong, "setNumberOfLines:", 2);

      v7 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_countLabel, v6);
      if (v7)
      {
        v8 = (void *)v7;
        v9 = objc_msgSend((id)objc_opt_self(UIFont), "boldSystemFontOfSize:", 32.0);
LABEL_8:
        v12 = v9;
        objc_msgSend(v8, "setFont:");

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  if (!Strong)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(Strong, "setNumberOfLines:", 1);

  v11 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_countLabel, v10);
  if (v11)
  {
    v8 = (void *)v11;
    v9 = objc_msgSend((id)objc_opt_self(UIFont), "boldSystemFontOfSize:", 24.0);
    goto LABEL_8;
  }
LABEL_12:
  __break(1u);
}

void sub_10008FA74(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t Strong;
  void *v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;

  v3 = v2;
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_titleLabel], a2);
  if (!Strong)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = (void *)Strong;
  v7 = objc_msgSend(a1, "displayText");
  if (!v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v9 = v8;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  objc_msgSend(v6, "setText:", v7);

  v10 = &v3[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_filterImage];
  v12 = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_filterImage], v11);
  if (!v12)
    goto LABEL_16;
  v13 = (void *)v12;
  v14 = objc_msgSend(a1, "iconConfiguration");
  objc_msgSend(v13, "setPreferredSymbolConfiguration:", v14);

  v15 = objc_msgSend(a1, "unreadCountForTeam:", 0);
  v17 = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_countLabel], v16);
  if (!v17)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v18 = (void *)v17;
  dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  v20 = v19;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v18, "setText:", v21);

  v23 = swift_unknownObjectWeakLoadStrong(v10, v22);
  if (!v23)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  v24 = (void *)v23;
  v25 = objc_msgSend(a1, "icon");
  if (v25)
  {
    v26 = v25;
    v27 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:", 20.0);
    v28 = objc_msgSend(v26, "imageByApplyingSymbolConfiguration:", v27);

  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v24, "setImage:", v28);

  v30 = swift_unknownObjectWeakLoadStrong(v10, v29);
  if (!v30)
    goto LABEL_19;
  v31 = (void *)v30;
  v32 = objc_msgSend((id)objc_opt_self(iFBAConstants), "tintColor");
  objc_msgSend(v31, "setTintColor:", v32);

  sub_10008FEA4((uint64_t)v15, a1);
  if (v33)
  {
    v34 = v33;
    v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v34);
  }
  else
  {
    v35 = 0;
  }
  objc_msgSend(v3, "setAccessibilityLabel:", v35);

  v36 = objc_msgSend(v3, "contentView");
  v37 = objc_msgSend(v36, "layer");

  objc_msgSend(v37, "setCornerRadius:", 15.0);
  v38 = objc_msgSend(v3, "contentView");
  v39 = objc_msgSend(v38, "layer");

  objc_msgSend(v39, "setBorderWidth:", 1.0);
  v40 = objc_msgSend(v3, "contentView");
  v41 = objc_msgSend(v40, "layer");

  v42 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v43 = objc_msgSend(v42, "CGColor");

  objc_msgSend(v41, "setBorderColor:", v43);
  v44 = objc_msgSend(v3, "contentView");
  v45 = objc_msgSend(v44, "layer");

  objc_msgSend(v45, "setMasksToBounds:", 1);
}

uint64_t sub_10008FEA4(uint64_t a1, id a2)
{
  unsigned int v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String_optional v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  void *object;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  Swift::String_optional v24;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t countAndFlagsBits;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v41;
  unint64_t v42;

  v4 = objc_msgSend(a2, "isCountingUnreadOnly");
  if (a1 == 1)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
    v7 = v6;
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if (v4)
    {
      v9 = 0xD000000000000021;
      v41 = 0xE000000000000000;
      v10 = 0x80000001000D93F0;
    }
    else
    {
      v9 = 0xD00000000000001ALL;
      v41 = 0xE000000000000000;
      v10 = 0x80000001000D93D0;
    }
    v11.value._countAndFlagsBits = v5;
    v11.value._object = v7;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v13 = 0;
    v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, v11, (NSBundle)v8, v12, *(Swift::String *)(&v41 - 1));
    object = v14._object;
    swift_bridgeObjectRelease(v7);

    v16 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v17 = swift_allocObject(v16, 72, 7);
    *(_OWORD *)(v17 + 16) = xmmword_1000CC730;
    v29 = objc_msgSend(a2, "displayText");
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    *(_QWORD *)(v17 + 56) = &type metadata for String;
    *(_QWORD *)(v17 + 64) = sub_100051284();
    *(_QWORD *)(v17 + 32) = v30;
    *(_QWORD *)(v17 + 40) = v32;
    countAndFlagsBits = v14._countAndFlagsBits;
  }
  else
  {
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKPluralStrings);
    v20 = v19;
    v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v42 = 0xE000000000000000;
    if (v4)
    {
      v22 = 0x80000001000D93B0;
      v23 = 0xD000000000000013;
    }
    else
    {
      v23 = 0x69207525202C4025;
      v22 = 0xEC000000736D6574;
    }
    v24.value._countAndFlagsBits = v18;
    v24.value._object = v20;
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v26 = 0;
    v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v23, v24, (NSBundle)v21, v25, *(Swift::String *)(&v42 - 1));
    object = v27._object;
    swift_bridgeObjectRelease(v20);

    v28 = sub_10004BB9C((uint64_t *)&unk_100116860);
    v17 = swift_allocObject(v28, 112, 7);
    *(_OWORD *)(v17 + 16) = xmmword_1000CC8F0;
    v34 = objc_msgSend(a2, "displayText");
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v37 = v36;

    *(_QWORD *)(v17 + 56) = &type metadata for String;
    v38 = sub_100051284();
    *(_QWORD *)(v17 + 32) = v35;
    *(_QWORD *)(v17 + 40) = v37;
    *(_QWORD *)(v17 + 96) = &type metadata for UInt;
    *(_QWORD *)(v17 + 104) = &protocol witness table for UInt;
    *(_QWORD *)(v17 + 64) = v38;
    *(_QWORD *)(v17 + 72) = a1;
    countAndFlagsBits = v27._countAndFlagsBits;
  }
  v39 = String.init(format:arguments:)(countAndFlagsBits, object, v17);
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(v17);
  return v39;
}

void sub_1000902B8(char *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v2 = objc_msgSend(a1, "contentView");
  v3 = objc_msgSend((id)objc_opt_self(iFBAConstants), "tintColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_titleLabel], v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (void *)objc_opt_self(UIColor);
    v8 = objc_msgSend(v7, "whiteColor");
    objc_msgSend(v6, "setTextColor:", v8);

    v10 = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_countLabel], v9);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = objc_msgSend(v7, "whiteColor");
      objc_msgSend(v11, "setTextColor:", v12);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1000903F0(char *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v2 = objc_msgSend(a1, "contentView");
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "tableCellGroupedBackgroundColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_titleLabel], v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = objc_msgSend(v3, "labelColor");
    objc_msgSend(v7, "setTextColor:", v8);

    v10 = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC18Feedback_Assistant19FBASmartMailboxCell_countLabel], v9);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = objc_msgSend(v3, "labelColor");
      objc_msgSend(v11, "setTextColor:", v12);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1000905B0(char a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  void (*v14)();
  uint64_t v15;

  v3 = (void *)objc_opt_self(UIView);
  if ((a1 & 1) != 0)
  {
    v4 = swift_allocObject(&unk_1000EA418, 24, 7);
    *(_QWORD *)(v4 + 16) = v1;
    v14 = sub_1000908D4;
    v15 = v4;
    v10 = _NSConcreteStackBlock;
    v11 = 1107296256;
    v5 = &unk_1000EA430;
  }
  else
  {
    v6 = swift_allocObject(&unk_1000EA3C8, 24, 7);
    *(_QWORD *)(v6 + 16) = v1;
    v14 = sub_1000908B4;
    v15 = v6;
    v10 = _NSConcreteStackBlock;
    v11 = 1107296256;
    v5 = &unk_1000EA3E0;
  }
  v12 = sub_10008F5C0;
  v13 = v5;
  v7 = _Block_copy(&v10);
  v8 = v15;
  v9 = v1;
  swift_release(v8);
  objc_msgSend(v3, "animateWithDuration:animations:", v7, 0.07, v10, v11);
  _Block_release(v7);
}

id sub_1000907F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBASmartMailboxCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBASmartMailboxCell()
{
  return objc_opt_self(_TtC18Feedback_Assistant19FBASmartMailboxCell);
}

uint64_t sub_100090890()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000908B4()
{
  uint64_t v0;

  sub_1000903F0(*(char **)(v0 + 16));
}

uint64_t sub_1000908BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000908CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000908D4()
{
  uint64_t v0;

  sub_1000902B8(*(char **)(v0 + 16));
}

void sub_100090AA4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  NSString v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  int v50;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  void *v60;
  void *v61;
  id v62;
  Swift::String v63;
  Swift::String v64;
  void *object;
  NSString v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  Swift::String_optional v71;
  Swift::String v72;
  uint64_t v73;
  void *v74;
  void *v75;
  id v76;
  id v77;
  NSString v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  id v86;
  void *v87;
  void *v88;
  id v89;
  id v90;
  void *v91;
  void *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  Swift::String v96;

  v1 = v0;
  v2 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState;
  if (v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState])
  {
    v3 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView;
    v4 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView];
    if (!v4)
    {
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    objc_msgSend(v4, "setHidden:", 0);
    v95 = v3;
    if (v0[v2] == 4)
    {
      v6 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel;
      v7 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
      if (!v7)
      {
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      v8 = (void *)objc_opt_self(iFBAConstants);
      v9 = v7;
      v10 = objc_msgSend(v8, "tintColor");
      objc_msgSend(v9, "setTextColor:", v10);

      if (qword_100115E50 == -1)
      {
        v12 = *(void **)&v1[v3];
        if (v12)
        {
LABEL_7:
          v13 = *(void **)&v1[v6];
          if (!v13)
          {
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
          v14 = *((double *)&xmmword_100117B58 + 1);
          v15 = *(double *)&xmmword_100117B58;
          v16 = qword_100117B68;
          v17 = unk_100117B70;
          v18 = qword_100117B78;
          v19 = unk_100117B80;
          Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_leadingConstraint], v11);
          if (!Strong)
          {
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          v22 = (void *)Strong;
          v94 = v18;
          v23 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_topConstraint], v21);
          if (!v23)
          {
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          v24 = (void *)v23;
          v25 = v12;
          v26 = v13;
          v27 = objc_msgSend(v25, "layer");
          objc_msgSend(v27, "setBorderWidth:", v17);

          v28 = objc_msgSend(v25, "layer");
          goto LABEL_22;
        }
      }
      else
      {
        swift_once(&qword_100115E50, sub_1000930F0);
        v12 = *(void **)&v1[v3];
        if (v12)
          goto LABEL_7;
      }
      __break(1u);
    }
    else if (qword_100115E58 == -1)
    {
      v35 = *(void **)&v0[v3];
      if (!v35)
      {
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
LABEL_18:
      v36 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
      if (!v36)
      {
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      v14 = *((double *)&xmmword_100117B88 + 1);
      v15 = *(double *)&xmmword_100117B88;
      v16 = qword_100117B98;
      v37 = unk_100117BA0;
      v38 = qword_100117BA8;
      v19 = unk_100117BB0;
      v39 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_leadingConstraint], v5);
      if (!v39)
      {
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      v22 = (void *)v39;
      v94 = v38;
      v41 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_topConstraint], v40);
      if (!v41)
      {
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      v24 = (void *)v41;
      v25 = v35;
      v26 = v36;
      v42 = objc_msgSend(v25, "layer");
      objc_msgSend(v42, "setBorderWidth:", v37);

      v28 = objc_msgSend(v25, "layer");
LABEL_22:
      v43 = v28;
      objc_msgSend(v43, "setCornerRadius:", *(double *)&v16);

      objc_msgSend(v25, "setBackgroundColor:", v19);
      objc_msgSend(v22, "setConstant:", v15);
      objc_msgSend(v24, "setConstant:", v14);
      objc_msgSend(v26, "setFont:", v94);

      v44 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
      if (v1[v2] == 1)
      {
        if (!v44)
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        v45 = (void *)objc_opt_self(UIColor);
        v46 = v44;
        v47 = objc_msgSend(v45, "systemGrayColor");
      }
      else
      {
        if (!v44)
        {
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        v48 = (void *)objc_opt_self(iFBAConstants);
        v46 = v44;
        v47 = objc_msgSend(v48, "tintColor");
      }
      v49 = v47;
      objc_msgSend(v46, "setTextColor:", v49);

      sub_1000913CC();
      v50 = v1[v2];
      if (v50 == 4)
      {
        v60 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
        if (!v60)
        {
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        v61 = (void *)objc_opt_self(NSBundle);
        v56 = v60;
        v62 = objc_msgSend(v61, "mainBundle");
        v96._object = (void *)0x80000001000D9660;
        v63._countAndFlagsBits = 0x4E47495353414552;
        v63._object = (void *)0xE800000000000000;
        v64._countAndFlagsBits = 0x6E67697373616552;
        v64._object = (void *)0xE800000000000000;
        v96._countAndFlagsBits = 0xD000000000000056;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)v62, v64, v96)._object;

        v66 = String._bridgeToObjectiveC()();
        v67 = object;
      }
      else
      {
        if (v50 == 1)
        {
          v51 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
          if (!v51)
          {
LABEL_67:
            __break(1u);
            goto LABEL_68;
          }
          v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
          v54 = v53;
          v55 = (void *)objc_opt_self(NSBundle);
          v56 = v51;
          v57 = objc_msgSend(v55, "mainBundle");
          v93 = 0xE000000000000000;
          v58 = 0x54414E494749524FLL;
          v59 = 0xEA0000000000524FLL;
        }
        else
        {
          v68 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
          if (!v68)
          {
LABEL_69:
            __break(1u);
            return;
          }
          v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
          v54 = v69;
          v70 = (void *)objc_opt_self(NSBundle);
          v56 = v68;
          v57 = objc_msgSend(v70, "mainBundle");
          v93 = 0xE000000000000000;
          v58 = 0x45454E4749535341;
          v59 = 0xE800000000000000;
        }
        v71.value._countAndFlagsBits = v52;
        v71.value._object = v54;
        v72._countAndFlagsBits = 0;
        v72._object = (void *)0xE000000000000000;
        v73 = 0;
        v74 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v58, v71, (NSBundle)v57, v72, *(Swift::String *)(&v93 + -8))._object;
        swift_bridgeObjectRelease(v54);

        v66 = String._bridgeToObjectiveC()();
        v67 = v74;
      }
      swift_bridgeObjectRelease(v67);
      objc_msgSend(v56, "setText:", v66);

      v75 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
      if (v75)
      {
        v76 = v75;
        v77 = objc_msgSend(v76, "text");
        v78 = v77;
        if (v77)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
          v80 = v79;

          v81 = sub_10004F5C4();
          StringProtocol.localizedUppercase.getter(&type metadata for String, v81);
          v83 = v82;
          swift_bridgeObjectRelease(v80);
          v78 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v83);
        }
        objc_msgSend(v76, "setText:", v78);

        v84 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint;
        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint], "setActive:", 0);
        if (v1[v2] != 4)
        {
          v88 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel];
          if (v88)
          {
            v86 = objc_msgSend(v88, "centerYAnchor");
            v87 = *(void **)&v1[v95];
            if (v87)
              goto LABEL_44;
            goto LABEL_66;
          }
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
        v85 = objc_msgSend(v1, "contentView");
        v86 = objc_msgSend(v85, "centerYAnchor");

        v87 = *(void **)&v1[v95];
        if (v87)
        {
LABEL_44:
          v89 = objc_msgSend(v87, "centerYAnchor");
          v90 = objc_msgSend(v86, "constraintEqualToAnchor:", v89);

          v91 = *(void **)&v1[v84];
          *(_QWORD *)&v1[v84] = v90;

          v92 = *(void **)&v1[v84];
          if (v92)
            objc_msgSend(v92, "setActive:", 1);
          return;
        }
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      goto LABEL_52;
    }
    swift_once(&qword_100115E58, sub_1000931CC);
    v35 = *(void **)&v1[v3];
    if (!v35)
      goto LABEL_50;
    goto LABEL_18;
  }
  v29 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
  if (!v29)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v30 = v29;
  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setText:", v31);

  v32 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView];
  if (!v32)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  objc_msgSend(v32, "setHidden:", 1);
  v33 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint;
  v34 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint];
  if (v34)
  {
    objc_msgSend(v34, "setActive:", 0);
    v34 = *(void **)&v1[v33];
  }
  *(_QWORD *)&v1[v33] = 0;

}

void sub_1000913CC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState) == 1)
  {
    if (v1)
    {
      v2 = objc_msgSend(v1, "layer");
      v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
      v4 = objc_msgSend(v3, "CGColor");
LABEL_7:
      v6 = v4;

      objc_msgSend(v2, "setBorderColor:", v6);
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
  if (!v1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v2 = objc_msgSend(v1, "layer");
  v5 = objc_msgSend((id)objc_opt_self(iFBAConstants), "tintColor");
  if (v5)
  {
    v3 = v5;
    v4 = objc_msgSend(v5, "CGColor");
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
}

void sub_1000914E8()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for FBAResponseHeaderCell();
  objc_msgSendSuper2(&v16, "awakeFromNib");
  v1 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel];
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel];
  if (!v2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView;
  v4 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView];
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
  if (!v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView;
  v7 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView];
  if (!v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v8 = *(void **)&v0[v3];
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = objc_msgSend(v8, "layer");
  v10 = *(void **)&v0[v3];
  if (!v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v10, "frame");
  objc_msgSend(v9, "setCornerRadius:", v11 * 0.5);

  v12 = *(void **)&v0[v6];
  if (!v12)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v13 = objc_msgSend(v12, "layer");
  objc_msgSend(v13, "setCornerRadius:", 5.0);

  v14 = *(void **)&v0[v6];
  if (v14)
  {
    v15 = objc_msgSend(v14, "layer");
    objc_msgSend(v15, "setBorderWidth:", 1.0);

    return;
  }
LABEL_19:
  __break(1u);
}

void sub_1000916C4(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  void *object;
  NSString v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  id v29;
  Swift::String v30;

  if (a1)
  {
    v2 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel);
    if (v2)
    {
      v3 = a1;
      v4 = v2;
      v5 = objc_msgSend(v3, "fullName");
      if (!v5)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v7 = v6;
        v5 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v7);
      }
      objc_msgSend(v4, "setText:", v5);

      v8 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView);
      if (v8)
      {
        v9 = v8;
        v29 = objc_msgSend(v3, "contactImage");
        objc_msgSend(v9, "setImage:");

LABEL_10:
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
  v10 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel);
  if (!v10)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v13 = v12;
  v14 = (void *)objc_opt_self(NSBundle);
  v15 = v10;
  v16 = objc_msgSend(v14, "mainBundle");
  v30._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0x5F4E574F4E4B4E55;
  v17._object = (void *)0xEC00000052455355;
  v18.value._countAndFlagsBits = v11;
  v18.value._object = v13;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v30)._object;
  swift_bridgeObjectRelease(v13);

  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v15, "setText:", v21);

  v22 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView);
  if (v22)
  {
    v23 = (void *)FBKSystemImageNameGenericUser;
    v24 = (void *)objc_opt_self(UIImage);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;
    v9 = v22;
    v27 = v23;
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v29 = objc_msgSend(v24, "systemImageNamed:", v28);

    objc_msgSend(v9, "setImage:", v29);
    goto LABEL_10;
  }
LABEL_14:
  __break(1u);
}

void sub_100091954(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id v4;
  void *v5;
  id v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  char v17;
  char v18;
  uint64_t v19;

  v2 = v1;
  v4 = objc_msgSend(a1, "originator");
  sub_1000916C4(v4);

  v5 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel];
  if (!v5)
  {
    __break(1u);
    return;
  }
  v6 = v5;
  v7 = objc_msgSend(a1, "formattedCreationDate");
  if (!v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v9 = v8;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  objc_msgSend(v6, "setText:", v7);

  v10 = objc_msgSend(a1, "singleTeam");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "teamType");

    if (!v12)
    {
      v18 = 0;
      goto LABEL_16;
    }
  }
  v13 = objc_msgSend(a1, "originator");
  v14 = objc_msgSend(a1, "assignee");
  v15 = v14;
  if (v13)
  {
    if (v14)
    {
      sub_1000932F4();
      v16 = v13;
      v17 = static NSObject.== infix(_:_:)(v16, v15);

      if ((v17 & 1) == 0)
        goto LABEL_15;
      goto LABEL_11;
    }
    v15 = v13;
LABEL_14:

LABEL_15:
    v18 = 1;
    goto LABEL_16;
  }
  if (v14)
    goto LABEL_14;
LABEL_11:
  v18 = 3;
LABEL_16:
  v2[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState] = v18;
  sub_100090AA4();
  if (objc_msgSend(a1, "canReassignFeedback"))
    v19 = 3;
  else
    v19 = 0;
  objc_msgSend(v2, "setSelectionStyle:", v19);
}

void sub_100091B70(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  void *v22;
  uint64_t v23;
  void *v24;
  Class v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  Class isa;
  NSString v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  char v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  char v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  char v68;
  uint64_t v69;
  char v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  char v75;
  uint64_t v76;

  v2 = v1;
  v4 = sub_10004BB9C(&qword_100117228);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v76 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v76 - v15;
  v17 = objc_msgSend(a1, "originator");
  sub_1000916C4(v17);

  v18 = objc_msgSend(a1, "respondedToAt");
  if (!v18)
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v21(v9, 1, 1, v10);
    goto LABEL_10;
  }
  v19 = v18;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v18);

  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v9, v14, v10);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v21(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_10:
    sub_1000932B4((uint64_t)v9);
    v29 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel);
    if (!v29)
    {
LABEL_58:
      __break(1u);
LABEL_59:
      v21(v7, 1, 1, v10);
      goto LABEL_60;
    }
    v30 = qword_100115E48;
    v31 = v29;
    if (v30 != -1)
      swift_once(&qword_100115E48, sub_100092BD0);
    v32 = (void *)qword_100117B50;
    v33 = objc_msgSend(a1, "createdAt");
    if (!v33)
      goto LABEL_59;
    v34 = v33;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v33);

    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v14, v10);
    v21(v7, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    v36 = objc_msgSend(v32, "stringFromDate:", isa);

    if (!v36)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v10 = v37;
      v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v10);
    }
    objc_msgSend(v31, "setText:", v36);

LABEL_18:
    v38 = objc_msgSend(a1, "feedback");
    if (v38)
    {
      v39 = v38;
      v40 = objc_msgSend(v38, "contentItem");

      if (v40)
      {
        v42 = objc_msgSend(v40, "singleTeam");
        if (v42)
        {
          v43 = v42;
          v44 = objc_msgSend(v42, "teamType");

          if (!v44)
            goto LABEL_53;
        }
        v45 = objc_msgSend(a1, "originator");
        v46 = objc_msgSend(v40, "originator");
        v47 = v46;
        if (v45)
        {
          if (!v46)
          {
LABEL_34:
            v47 = v45;
            goto LABEL_36;
          }
          sub_1000932F4();
          v48 = v45;
          v49 = static NSObject.== infix(_:_:)(v48, v47);

          if ((v49 & 1) == 0)
          {
LABEL_37:
            v64 = objc_msgSend(a1, "originator");
            v65 = objc_msgSend(v40, "originator");
            v66 = v65;
            if (v64)
            {
              if (v65)
              {
                sub_1000932F4();
                v67 = v64;
                v68 = static NSObject.== infix(_:_:)(v67, v66);

                if ((v68 & 1) == 0)
                {
LABEL_45:
                  v71 = objc_msgSend(a1, "originator");
                  v72 = objc_msgSend(v40, "assignee");
                  v73 = v72;
                  if (v71)
                  {
                    if (v72)
                    {
                      sub_1000932F4();
                      v74 = v71;
                      v75 = static NSObject.== infix(_:_:)(v74, v73);

                      if ((v75 & 1) == 0)
                        goto LABEL_53;
                      goto LABEL_50;
                    }
                    v73 = v71;
                  }
                  else if (!v72)
                  {
LABEL_50:
                    v69 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState;
                    v70 = 2;
                    goto LABEL_55;
                  }

LABEL_53:
                  *(_BYTE *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState) = 0;
LABEL_56:
                  sub_100090AA4();

                  return;
                }
LABEL_42:
                v69 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState;
                v70 = 1;
LABEL_55:
                *(_BYTE *)(v2 + v69) = v70;
                goto LABEL_56;
              }
              v66 = v64;
            }
            else if (!v65)
            {
              goto LABEL_42;
            }

            goto LABEL_45;
          }
        }
        else if (v46)
        {
          goto LABEL_36;
        }
        v45 = objc_msgSend(v40, "originator");
        v61 = objc_msgSend(v40, "assignee");
        v47 = v61;
        if (v45)
        {
          if (v61)
          {
            sub_1000932F4();
            v62 = v45;
            v63 = static NSObject.== infix(_:_:)(v62, v47);

            if ((v63 & 1) == 0)
              goto LABEL_37;
LABEL_54:
            v69 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState;
            v70 = 3;
            goto LABEL_55;
          }
          goto LABEL_34;
        }
        if (!v61)
          goto LABEL_54;
LABEL_36:

        goto LABEL_37;
      }
      v50 = static os_log_type_t.error.getter(v41);
      v51 = objc_msgSend((id)objc_opt_self(FBALog), "appHandle");
      if (v51)
      {
        v52 = v51;
        v53 = sub_10004BB9C((uint64_t *)&unk_100116860);
        v54 = swift_allocObject(v53, 72, 7);
        *(_OWORD *)(v54 + 16) = xmmword_1000CC730;
        v55 = objc_msgSend(a1, "ID");
        if (v55)
        {
          v56 = v55;
          v57 = objc_msgSend(v55, "stringValue");

          v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
          v60 = v59;

          *(_QWORD *)(v54 + 56) = &type metadata for String;
          *(_QWORD *)(v54 + 64) = sub_100051284();
          *(_QWORD *)(v54 + 32) = v58;
          *(_QWORD *)(v54 + 40) = v60;
          os_log(_:dso:log:_:_:)(v50, &_mh_execute_header);

          swift_bridgeObjectRelease(v54);
          return;
        }
        goto LABEL_62;
      }
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    __break(1u);
    goto LABEL_58;
  }
  v20(v16, v9, v10);
  v22 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel);
  if (v22)
  {
    v23 = qword_100115E48;
    v7 = v22;
    if (v23 != -1)
      swift_once(&qword_100115E48, sub_100092BD0);
    v24 = (void *)qword_100117B50;
    v25 = Date._bridgeToObjectiveC()().super.isa;
    v26 = objc_msgSend(v24, "stringFromDate:", v25);

    if (!v26)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v28 = v27;
      v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
    }
    objc_msgSend(v7, "setText:", v26);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    goto LABEL_18;
  }
LABEL_63:
  __break(1u);
}

id sub_100092354(void *a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  id result;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  void *object;
  NSString v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  void *v29;
  NSString v30;
  Swift::String v31;
  Swift::String v32;

  v3 = objc_msgSend(a1, "assignee");
  sub_1000916C4(v3);

  if (objc_msgSend(a1, "canReassignFeedback"))
    v4 = 3;
  else
    v4 = 0;
  objc_msgSend(v1, "setSelectionStyle:", v4);
  result = objc_msgSend(a1, "isOrphaned");
  v6 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel];
  if ((_DWORD)result)
  {
    if (v6)
    {
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
      v9 = v8;
      v10 = (void *)objc_opt_self(NSBundle);
      v11 = v6;
      v12 = objc_msgSend(v10, "mainBundle");
      v31._object = (void *)0xE000000000000000;
      v13._countAndFlagsBits = 0x44454E414850524FLL;
      v13._object = (void *)0xEE004C4542414C5FLL;
      v14.value._countAndFlagsBits = v7;
      v14.value._object = v9;
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      v31._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v31)._object;
      swift_bridgeObjectRelease(v9);

      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      objc_msgSend(v11, "setText:", v17);

      if (objc_msgSend(a1, "canReassignFeedback"))
        v18 = 4;
      else
        v18 = 0;
      v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState] = v18;
      sub_100090AA4();
      v19 = 0;
      return objc_msgSend(v1, "setAccessoryType:", v19);
    }
    __break(1u);
  }
  else if (v6)
  {
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
    v22 = v21;
    v23 = (void *)objc_opt_self(NSBundle);
    v24 = v6;
    v25 = objc_msgSend(v23, "mainBundle");
    v32._object = (void *)0xE000000000000000;
    v26._countAndFlagsBits = 0x45454E4749535341;
    v26._object = (void *)0xE800000000000000;
    v27.value._countAndFlagsBits = v20;
    v27.value._object = v22;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v32._countAndFlagsBits = 0;
    v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v32)._object;
    swift_bridgeObjectRelease(v22);

    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    objc_msgSend(v24, "setText:", v30);

    v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState] = 0;
    sub_100090AA4();
    v19 = objc_msgSend(a1, "canReassignFeedback");
    return objc_msgSend(v1, "setAccessoryType:", v19);
  }
  __break(1u);
  return result;
}

void sub_100092660(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  void *object;
  NSString v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  Class isa;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  NSString v40;
  id v41;
  uint64_t v42;
  id v43;
  Swift::String v44;

  v2 = v1;
  v43 = a1;
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004BB9C(&qword_100117228);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel);
  if (!v10)
  {
    __break(1u);
    goto LABEL_12;
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBKCommonStrings);
  v13 = v12;
  v14 = (void *)objc_opt_self(NSBundle);
  v15 = v10;
  v16 = objc_msgSend(v14, "mainBundle");
  v44._countAndFlagsBits = 0xD00000000000001FLL;
  v44._object = (void *)0x80000001000D9640;
  v17._object = (void *)0x80000001000D9620;
  v17._countAndFlagsBits = 0xD000000000000013;
  v18.value._countAndFlagsBits = v11;
  v18.value._object = v13;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v44)._object;
  swift_bridgeObjectRelease(v13);

  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v15, "setText:", v21);

  v22 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel);
  if (!v22)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    goto LABEL_14;
  }
  v23 = v2;
  v24 = qword_100115E48;
  v25 = v22;
  if (v24 != -1)
    swift_once(&qword_100115E48, sub_100092BD0);
  v26 = (void *)qword_100117B50;
  v27 = objc_msgSend(v43, "createdAt");
  if (!v27)
    goto LABEL_13;
  v28 = v27;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v27);

  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v30 = objc_msgSend(v26, "stringFromDate:", isa);

  if (!v30)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v32 = v31;
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
  }
  objc_msgSend(v25, "setText:", v30);

  v33 = *(void **)(v23 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView);
  if (v33)
  {
    v34 = (void *)FBKImageNameAppleAvatar;
    v35 = (void *)objc_opt_self(UIImage);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v37 = v36;
    v38 = v33;
    v39 = v34;
    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
    v41 = objc_msgSend(v35, "imageNamed:", v40);

    objc_msgSend(v38, "setImage:", v41);
    *(_BYTE *)(v23 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState) = 0;
    sub_100090AA4();
    return;
  }
LABEL_15:
  __break(1u);
}

id sub_100092BD0()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v0, "setDateStyle:", 2);
  result = objc_msgSend(v0, "setTimeStyle:", 1);
  qword_100117B50 = (uint64_t)v0;
  return result;
}

id sub_100092C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  NSString v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_leadingConstraint], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_topConstraint], 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState] = 0;
  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for FBAResponseHeaderCell();
  v7 = objc_msgSendSuper2(&v9, "initWithStyle:reuseIdentifier:", a1, v6);

  return v7;
}

id sub_100092D78(void *a1)
{
  _BYTE *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_leadingConstraint], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_topConstraint], 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FBAResponseHeaderCell();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_100092E64()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAResponseHeaderCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAResponseHeaderCell()
{
  return objc_opt_self(_TtC18Feedback_Assistant21FBAResponseHeaderCell);
}

uint64_t getEnumTagSinglePayload for RoleState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RoleState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100093028 + 4 * byte_1000CD615[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10009305C + 4 * byte_1000CD610[v4]))();
}

uint64_t sub_10009305C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100093064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10009306CLL);
  return result;
}

uint64_t sub_100093078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100093080);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100093084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009308C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoleState()
{
  return &type metadata for RoleState;
}

unint64_t sub_1000930AC()
{
  unint64_t result;

  result = qword_100117C28;
  if (!qword_100117C28)
  {
    result = swift_getWitnessTable(&unk_1000CD6A0, &type metadata for RoleState);
    atomic_store(result, (unint64_t *)&qword_100117C28);
  }
  return result;
}

double sub_1000930F0()
{
  id v0;
  id v1;
  id v2;
  id v3;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIFont), "boldSystemFontOfSize:", 14.0);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleCaption1);
  v2 = objc_msgSend(v1, "scaledFontForFont:maximumPointSize:", v0, 18.0);

  v3 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  result = 15.0;
  xmmword_100117B58 = xmmword_1000CD5D0;
  *(_OWORD *)&qword_100117B68 = xmmword_1000CD5E0;
  qword_100117B78 = (uint64_t)v2;
  unk_100117B80 = v3;
  return result;
}

double sub_1000931CC()
{
  id v0;
  id v1;
  id v2;
  id v3;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 10.0, UIFontWeightBold);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleCaption1);
  v2 = objc_msgSend(v1, "scaledFontForFont:maximumPointSize:", v0, 18.0);

  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  result = 7.0;
  xmmword_100117B88 = xmmword_1000CD5F0;
  *(_OWORD *)&qword_100117B98 = xmmword_1000CD600;
  qword_100117BA8 = (uint64_t)v2;
  unk_100117BB0 = v3;
  return result;
}

uint64_t sub_1000932B4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004BB9C(&qword_100117228);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000932F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100116C18;
  if (!qword_100116C18)
  {
    v1 = objc_opt_self(FBKParticipant);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100116C18);
  }
  return result;
}

uint64_t sub_100093330()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_100050734(v0, qword_100119F88);
  sub_10005067C(v0, (uint64_t)qword_100119F88);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
  return Logger.init(subsystem:category:)(v1);
}

void sub_1000933A4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  NSObject *v24;
  _QWORD *v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(NSObject **)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v12 = objc_msgSend(v11, "BOOLForKey:", FBKDirectoriesMigratorDidRun);

  if (v12)
  {
    if (qword_100115E60 != -1)
      swift_once(&qword_100115E60, sub_100093330);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_10005067C(v13, (uint64_t)qword_100119F88);
    v24 = Logger.logObject.getter(v14);
    v15 = static os_log_type_t.debug.getter(v24);
    if (os_log_type_enabled(v24, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v15, "Directory migration already done", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

  }
  else
  {
    sub_10004BB58();
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.background(_:), v7);
    v17 = (void *)static OS_dispatch_queue.global(qos:)(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v18 = swift_allocObject(&unk_1000EA530, 24, 7);
    *(_QWORD *)(v18 + 16) = v23[1];
    aBlock[4] = sub_100094CE0;
    v27 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008F5C0;
    aBlock[3] = &unk_1000EA548;
    v19 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(v19);
    v25 = _swiftEmptyArrayStorage;
    v20 = sub_10004BD78((unint64_t *)&qword_100115FB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v21 = sub_10004BB9C((uint64_t *)&unk_100116980);
    v22 = sub_10004BBDC();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v21, v22, v0, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v2, v19);
    _Block_release(v19);

    ((void (*)(char *, uint64_t))v24[1].isa)(v2, v0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_release(v27);
  }
}

void sub_100093704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100115E60 != -1)
    swift_once(&qword_100115E60, sub_100093330);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10005067C(v4, (uint64_t)qword_100119F88);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Migrating directories", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v10 = objc_msgSend(v9, "URLsForDirectory:inDomains:", 5, 1);

  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v0);
  if (*(_QWORD *)(v11 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, v11 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), v0);
    swift_bridgeObjectRelease(v11);
    sub_100093A94();
    v12 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Did finish migrating directories", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_100093964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v5 = objc_msgSend(v4, "URLsForDirectory:inDomains:", 14, 1);

  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v0);
  if (*(_QWORD *)(v6 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, v6 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), v0);
    swift_bridgeObjectRelease(v6);
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
    v9 = v8;
    URL.appendingPathComponent(_:)(v7);
    swift_bridgeObjectRelease(v9);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100093A94()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  Class v14;
  void *v15;
  NSURL *v16;
  void *v17;
  void *v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  id v42;
  unsigned __int8 v43;
  id v44;
  id v45;
  char **v46;
  id v47;
  id v48;
  unsigned __int8 v49;
  NSURL *v50;
  void *v51;
  void *v52;
  unsigned int v53;
  id v54;
  id v55;
  NSURL *v56;
  void *v57;
  void *v58;
  unsigned __int8 v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint8_t *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint8_t *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint8_t *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  unsigned __int8 v81;
  NSURL *v82;
  void *v83;
  void *v84;
  unsigned int v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint8_t *v94;
  void *v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  void *v99;
  uint8_t *v100;
  id v101;
  unsigned __int8 v102;
  id v103;
  Class isa;
  uint64_t v106;
  uint64_t (*v107)(char *, char *, uint64_t);
  char *v108;
  id v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  char *v112;
  objc_class *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[3];
  char v118[16];
  id v119;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v115 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v106 - v7;
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v106 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v106 - v12;
  v14 = (Class)objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL.appendingPathComponent(_:)(0xD000000000000012);
  v15 = (void *)objc_opt_self(DEUtils);
  URL._bridgeToObjectiveC()(v16);
  v18 = v17;
  v114 = v15;
  v19 = objc_msgSend(v15, "isValidDirectory:", v17);

  if ((v19 & 1) != 0)
  {
    v113 = v14;
    if (qword_100115E60 != -1)
      swift_once(&qword_100115E60, sub_100093330);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_10005067C(v20, (uint64_t)qword_100119F88);
    v22 = *(uint64_t (**)(char *, char *, uint64_t))(v115 + 16);
    v112 = v13;
    v23 = v22(v11, v13, v2);
    v110 = v21;
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter(v24);
    v26 = os_log_type_enabled(v24, v25);
    v108 = v5;
    v109 = v1;
    if (v26)
    {
      v27 = swift_slowAlloc(12, -1);
      v107 = v22;
      v28 = v2;
      v29 = (uint8_t *)v27;
      v30 = (void *)swift_slowAlloc(32, -1);
      v119 = v30;
      *(_DWORD *)v29 = 136315138;
      v31 = sub_10004BD78(&qword_100116870, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v32 = dispatch thunk of CustomStringConvertible.description.getter(v28, v31);
      v34 = v33;
      v116 = sub_100094680(v32, v33, (uint64_t *)&v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
      swift_bridgeObjectRelease(v34);
      v111 = *(void (**)(char *, uint64_t))(v115 + 8);
      v111(v11, v28);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Deleting %s", v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      v35 = v29;
      v2 = v28;
      v22 = v107;
      swift_slowDealloc(v35, -1, -1);
    }
    else
    {
      v111 = *(void (**)(char *, uint64_t))(v115 + 8);
      v111(v11, v2);
    }

    v45 = (id)objc_opt_self(NSUserDefaults);
    v46 = &selRef_sortDescriptorWithKey_ascending_;
    v47 = objc_msgSend(v45, "standardUserDefaults");
    v48 = (id)FBKDirectoriesMigratorDryRun;
    v49 = objc_msgSend(v47, "BOOLForKey:", FBKDirectoriesMigratorDryRun);

    v13 = v112;
    v14 = v113;
    if ((v49 & 1) == 0)
    {
      URL._bridgeToObjectiveC()(v50);
      v52 = v51;
      v119 = 0;
      v53 = -[objc_class removeItemAtURL:error:](v14, "removeItemAtURL:error:", v51, &v119);

      v54 = v119;
      if (!v53)
      {
        v114 = v48;
        v77 = v119;
        v78 = _convertNSErrorToError(_:)(v54);

        swift_willThrow(v79);
        goto LABEL_29;
      }
      v55 = v119;
    }
    sub_100093964();
    URL._bridgeToObjectiveC()(v56);
    v58 = v57;
    v59 = objc_msgSend(v114, "isValidDirectory:", v57);

    if ((v59 & 1) == 0)
    {
      v73 = Logger.logObject.getter(v60);
      v74 = static os_log_type_t.error.getter(v73);
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v75 = 0;
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "Feedback Assistant App Support directory is not reachable", v75, 2u);
        v76 = v75;
        v46 = &selRef_sortDescriptorWithKey_ascending_;
        swift_slowDealloc(v76, -1, -1);
      }

      goto LABEL_27;
    }
    v109 = v45;
    v114 = v48;
    v61 = v108;
    v62 = v22(v108, v8, v2);
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.default.getter(v63);
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc(12, -1);
      v107 = (uint64_t (*)(char *, char *, uint64_t))v8;
      v66 = (uint8_t *)v65;
      v67 = (void *)swift_slowAlloc(32, -1);
      v119 = v67;
      *(_DWORD *)v66 = 136315138;
      v68 = sub_10004BD78(&qword_100116870, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v69 = dispatch thunk of CustomStringConvertible.description.getter(v2, v68);
      v71 = v70;
      v116 = sub_100094680(v69, v70, (uint64_t *)&v119);
      v13 = v112;
      v46 = &selRef_sortDescriptorWithKey_ascending_;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
      swift_bridgeObjectRelease(v71);
      v111(v61, v2);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "Deleting %s", v66, 0xCu);
      swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      v72 = v66;
      v8 = (char *)v107;
      swift_slowDealloc(v72, -1, -1);
    }
    else
    {
      v111(v61, v2);
    }

    v14 = v113;
    v45 = v109;
    v80 = objc_msgSend(v109, v46[13]);
    v48 = v114;
    v81 = objc_msgSend(v80, "BOOLForKey:", v114);

    if ((v81 & 1) != 0)
    {
LABEL_27:
      v111(v8, v2);
      goto LABEL_33;
    }
    URL._bridgeToObjectiveC()(v82);
    v84 = v83;
    v119 = 0;
    v85 = -[objc_class removeItemAtURL:error:](v14, "removeItemAtURL:error:", v83, &v119);

    v86 = v119;
    if (v85)
    {
      v87 = v119;
      goto LABEL_27;
    }
    v88 = v119;
    v78 = _convertNSErrorToError(_:)(v86);

    swift_willThrow(v89);
    v111(v8, v2);
LABEL_29:
    swift_errorRetain(v78);
    v90 = swift_errorRetain(v78);
    v91 = Logger.logObject.getter(v90);
    v92 = static os_log_type_t.error.getter(v91);
    if (os_log_type_enabled(v91, v92))
    {
      v93 = v2;
      v94 = (uint8_t *)swift_slowAlloc(12, -1);
      v95 = (void *)swift_slowAlloc(32, -1);
      v119 = v95;
      *(_DWORD *)v94 = 136315138;
      swift_getErrorValue(v78, v118, v117);
      v96 = Error.localizedDescription.getter(v117[1], v117[2]);
      v98 = v97;
      v116 = sub_100094680(v96, v97, (uint64_t *)&v119);
      v13 = v112;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
      swift_bridgeObjectRelease(v98);
      swift_errorRelease(v78);
      swift_errorRelease(v78);
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "Directory migration failure: %s", v94, 0xCu);
      swift_arrayDestroy(v95, 1, (char *)&type metadata for Any + 8);
      v99 = v95;
      v14 = v113;
      swift_slowDealloc(v99, -1, -1);
      v100 = v94;
      v2 = v93;
      swift_slowDealloc(v100, -1, -1);

      swift_errorRelease(v78);
    }
    else
    {
      swift_errorRelease(v78);
      swift_errorRelease(v78);
      swift_errorRelease(v78);

    }
    v46 = &selRef_sortDescriptorWithKey_ascending_;
    v48 = v114;
LABEL_33:
    v101 = objc_msgSend(v45, v46[13]);
    v102 = objc_msgSend(v101, "BOOLForKey:", v48);

    if ((v102 & 1) == 0)
    {
      v44 = objc_msgSend(v45, v46[13]);
      goto LABEL_35;
    }
    goto LABEL_36;
  }
  if (qword_100115E60 != -1)
    swift_once(&qword_100115E60, sub_100093330);
  v36 = type metadata accessor for Logger(0);
  v37 = sub_10005067C(v36, (uint64_t)qword_100119F88);
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.default.getter(v38);
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Feedback Assistant Library directory does not exist", v40, 2u);
    swift_slowDealloc(v40, -1, -1);
  }

  v41 = (void *)objc_opt_self(NSUserDefaults);
  v42 = objc_msgSend(v41, "standardUserDefaults");
  v43 = objc_msgSend(v42, "BOOLForKey:", FBKDirectoriesMigratorDryRun);

  if ((v43 & 1) == 0)
  {
    v44 = objc_msgSend(v41, "standardUserDefaults");
LABEL_35:
    v103 = v44;
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v103, "setValue:forKey:", isa, FBKDirectoriesMigratorDidRun);

    v14 = isa;
  }
LABEL_36:

  return (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v13, v2);
}

id sub_100094568()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBADirectoriesMigrator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBADirectoriesMigrator()
{
  return objc_opt_self(_TtC18Feedback_Assistant22FBADirectoriesMigrator);
}

uint64_t sub_1000945BC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1000945F0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100094610(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v6 = a4();
  v8 = v7;
  v9 = sub_100094680(v6, v7, a3);
  v10 = *a1 + 8;
  v12 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
  result = swift_bridgeObjectRelease(v8);
  *a1 = v10;
  return result;
}

uint64_t sub_100094680(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_100094750(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1000506D8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1000506D8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_100050714(v12);
  return v7;
}

uint64_t sub_100094750(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_100094908(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_100094908(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10009499C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_100094B74(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100094B74(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10009499C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_100094B10(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_100094B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = sub_10004BB9C(&qword_100117C58);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_100094B74(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004BB9C(&qword_100117C58);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_BYTE **sub_100094CC0(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_100094CD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100094CE0()
{
  sub_100093704();
}

uint64_t sub_100094CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100094CF8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_100094D00@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100094DB0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100116338, &qword_1001163C8).n128_u64[0];
  return result;
}

double sub_100094D58@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100094DB0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100116410, &qword_100116400).n128_u64[0];
  return result;
}

__n128 sub_100094DB0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter();
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_10004F544(v18, v19, a16);
  v41 = v19 + *(int *)(sub_10004BB9C(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

__n128 sub_100094F7C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __n128 result;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header);

    v18 = a15;
    v21 = v40;
    a1 = v41;
    v20 = a10;
    a3 = v42;
    v19 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  v35 = sub_10004BB9C(&qword_100117DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a9, v16, v35);
  v36 = a9 + *(int *)(sub_10004BB9C(&qword_100117D98) + 36);
  v37 = v45[5];
  *(_OWORD *)(v36 + 64) = v45[4];
  *(_OWORD *)(v36 + 80) = v37;
  *(_OWORD *)(v36 + 96) = v45[6];
  v38 = v45[1];
  *(_OWORD *)v36 = v45[0];
  *(_OWORD *)(v36 + 16) = v38;
  result = (__n128)v45[3];
  *(_OWORD *)(v36 + 32) = v45[2];
  *(__n128 *)(v36 + 48) = result;
  return result;
}

uint64_t sub_100095148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  unint64_t v10;
  int *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, uint64_t);
  uint64_t result;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a1;
  v29 = a2;
  v4 = type metadata accessor for Font.TextStyle(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = 0x402C000000000000;
  v7 = enum case for Font.TextStyle.body(_:);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v9(v6, enum case for Font.TextStyle.body(_:), v4);
  v10 = sub_1000953FC();
  ScaledMetric.init(wrappedValue:relativeTo:)(&v30, v6, &type metadata for Double, v10);
  v11 = (int *)type metadata accessor for BatchUIButtonView(0);
  v30 = 0x4038000000000000;
  v9(v6, v7, v4);
  ScaledMetric.init(wrappedValue:relativeTo:)(&v30, v6, &type metadata for Double, v10);
  v30 = 0x4034000000000000;
  v9(v6, v7, v4);
  ScaledMetric.init(wrappedValue:relativeTo:)(&v30, v6, &type metadata for Double, v10);
  v30 = 0x4024000000000000;
  v9(v6, v7, v4);
  ScaledMetric.init(wrappedValue:relativeTo:)(&v30, v6, &type metadata for Double, v10);
  v12 = (_QWORD *)(a3 + v11[8]);
  *v12 = swift_getKeyPath(&unk_1000CD720);
  v13 = sub_10004BB9C(&qword_100117C68);
  swift_storeEnumTagMultiPayload(v12, v13, 0);
  v14 = v11[9];
  v15 = sub_10004BB9C(&qword_100117C70);
  v16 = type metadata accessor for ContentSizeCategory(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = *(unsigned __int8 *)(v17 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v15, v20 + 5 * v18, v19 | 7);
  *(_OWORD *)(v21 + 16) = xmmword_1000CD710;
  v22 = v21 + v20;
  v23 = *(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104);
  v23(v22, enum case for ContentSizeCategory.accessibilityMedium(_:), v16);
  v23(v22 + v18, enum case for ContentSizeCategory.accessibilityLarge(_:), v16);
  v23(v22 + 2 * v18, enum case for ContentSizeCategory.accessibilityExtraLarge(_:), v16);
  v23(v22 + 3 * v18, enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:), v16);
  result = ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v23)(v22 + 4 * v18, enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:), v16);
  *(_QWORD *)(a3 + v14) = v21;
  v25 = (_QWORD *)(a3 + v11[10]);
  v26 = v29;
  *v25 = v28;
  v25[1] = v26;
  return result;
}

unint64_t sub_1000953FC()
{
  unint64_t result;

  result = qword_100117C60;
  if (!qword_100117C60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_100117C60);
  }
  return result;
}

uint64_t type metadata accessor for BatchUIButtonView(uint64_t a1)
{
  uint64_t result;

  result = qword_100117CE0;
  if (!qword_100117CE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BatchUIButtonView);
  return result;
}

uint64_t sub_10009547C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[16];
  uint64_t v31;

  v29 = a1;
  v2 = type metadata accessor for BorderedButtonStyle(0);
  v28 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004BB9C(&qword_100117D40);
  v27 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004BB9C(&qword_100117D48);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)(v1 + *(int *)(type metadata accessor for BatchUIButtonView(0) + 40));
  v14 = *v12;
  v13 = v12[1];
  v31 = v1;
  swift_retain(v13);
  v15 = sub_10004BB9C(&qword_100117D50);
  v16 = sub_100097C5C();
  v17 = Button.init(action:label:)(v14, v13, sub_100097C54, v30, v15, v16);
  BorderedButtonStyle.init()(v17);
  v18 = sub_10004F6D8(&qword_100117DB8, &qword_100117D40, (uint64_t)&protocol conformance descriptor for Button<A>);
  v19 = sub_10004BD78(&qword_100117DC0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
  View.buttonStyle<A>(_:)(v4, v5, v2, v18, v19);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v2);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v7, v5);
  v21 = static Color.accentColor.getter(v20);
  KeyPath = swift_getKeyPath(&unk_1000CD7D8);
  v23 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v29, v11, v8);
  v24 = (uint64_t *)(v23 + *(int *)(sub_10004BB9C(&qword_100117DC8) + 36));
  *v24 = KeyPath;
  v24[1] = v21;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1000956B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  char v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a1;
  v57 = sub_10004BB9C(&qword_100117DD0);
  __chkstk_darwin(v57);
  v2 = (char *)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004BB9C(&qword_100117D88);
  __chkstk_darwin(v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004BB9C(&qword_100117D78);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v55 - v10;
  v56 = sub_10004BB9C(&qword_100117D68);
  v12 = __chkstk_darwin(v56);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v55 - v15;
  v17 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v18 = objc_msgSend(v17, "userInterfaceIdiom");

  v19 = sub_100095A98((uint64_t)v5);
  v20 = static Edge.Set.leading.getter(v19);
  if (v18)
  {
    v21 = EdgeInsets.init(_all:)(2.0);
    v23 = v22;
    v25 = v24;
    v27 = v26;
    sub_10004F544((uint64_t)v5, (uint64_t)v9, &qword_100117D88);
    v28 = &v9[*(int *)(v6 + 36)];
    *v28 = v20;
    *((double *)v28 + 1) = v21;
    *((_QWORD *)v28 + 2) = v23;
    *((_QWORD *)v28 + 3) = v25;
    *((_QWORD *)v28 + 4) = v27;
    v28[40] = 0;
    sub_10004F588((uint64_t)v5, &qword_100117D88);
    sub_10004F500((uint64_t)v9, (uint64_t)v11, &qword_100117D78);
    sub_10004F544((uint64_t)v11, (uint64_t)v2, &qword_100117D78);
    swift_storeEnumTagMultiPayload(v2, v57, 1);
    v29 = sub_100097D30(&qword_100117D60, &qword_100117D68, (void (*)(void))sub_100097CE8);
    v30 = sub_100097CE8();
    _ConditionalContent<>.init(storage:)(v2, v56, v6, v29, v30);
    v31 = (uint64_t)v11;
    v32 = &qword_100117D78;
  }
  else
  {
    v33 = EdgeInsets.init(_all:)(6.0);
    v35 = v34;
    v37 = v36;
    v39 = v38;
    sub_10004F544((uint64_t)v5, (uint64_t)v11, &qword_100117D88);
    v40 = &v11[*(int *)(v6 + 36)];
    *v40 = v20;
    *((double *)v40 + 1) = v33;
    *((_QWORD *)v40 + 2) = v35;
    *((_QWORD *)v40 + 3) = v37;
    *((_QWORD *)v40 + 4) = v39;
    v40[40] = 0;
    v41 = sub_10004F588((uint64_t)v5, &qword_100117D88);
    v42 = static Edge.Set.trailing.getter(v41);
    v43 = EdgeInsets.init(_all:)(9.0);
    v45 = v44;
    v47 = v46;
    v49 = v48;
    sub_10004F544((uint64_t)v11, (uint64_t)v14, &qword_100117D78);
    v50 = v56;
    v51 = &v14[*(int *)(v56 + 36)];
    *v51 = v42;
    *((double *)v51 + 1) = v43;
    *((_QWORD *)v51 + 2) = v45;
    *((_QWORD *)v51 + 3) = v47;
    *((_QWORD *)v51 + 4) = v49;
    v51[40] = 0;
    sub_10004F588((uint64_t)v11, &qword_100117D78);
    sub_10004F500((uint64_t)v14, (uint64_t)v16, &qword_100117D68);
    sub_10004F544((uint64_t)v16, (uint64_t)v2, &qword_100117D68);
    swift_storeEnumTagMultiPayload(v2, v57, 0);
    v52 = sub_100097D30(&qword_100117D60, &qword_100117D68, (void (*)(void))sub_100097CE8);
    v53 = sub_100097CE8();
    _ConditionalContent<>.init(storage:)(v2, v50, v6, v52, v53);
    v31 = (uint64_t)v16;
    v32 = &qword_100117D68;
  }
  return sub_10004F588(v31, v32);
}

uint64_t sub_100095A98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[16];
  uint64_t v37;
  _BYTE v38[16];
  uint64_t v39;
  _OWORD v40[7];

  v35 = a1;
  v2 = sub_10004BB9C(&qword_100117DA0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004BB9C(&qword_100117DD8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004BB9C(&qword_100117D98);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v1;
  v37 = v1;
  v13 = sub_10004BB9C(&qword_100117DE0);
  v14 = sub_10004BB9C(&qword_100117DE8);
  v15 = sub_100098190();
  v16 = sub_100098234();
  Label.init(title:icon:)(sub_100098180, v38, sub_100098188, v36, v13, v14, v15, v16);
  v17 = sub_10004F6D8(&qword_100117DA8, &qword_100117DA0, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v18 = sub_100097E60();
  View.labelStyle<A>(_:)(v18, v2, &type metadata for CenterAligned, v17, v18);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v20 = static Alignment.center.getter(v19);
  v22 = sub_100094F7C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v20, v21);
  v23 = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v22);
  v24 = static Alignment.center.getter(v23);
  LOBYTE(v33) = 1;
  LOBYTE(v32) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v40, 0, 1, 0, 1, 0, 1, 0x403D800000000000, 0, 0, v32, 0, v33, v24, v25);
  v26 = v35;
  sub_10004F544((uint64_t)v12, v35, &qword_100117D98);
  v27 = (_OWORD *)(v26 + *(int *)(sub_10004BB9C(&qword_100117D88) + 36));
  v28 = v40[5];
  v27[4] = v40[4];
  v27[5] = v28;
  v27[6] = v40[6];
  v29 = v40[1];
  *v27 = v40[0];
  v27[1] = v29;
  v30 = v40[3];
  v27[2] = v40[2];
  v27[3] = v30;
  return sub_10004F588((uint64_t)v12, &qword_100117D98);
}

uint64_t sub_100095D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, unint64_t, uint64_t);
  uint64_t v60;
  __int128 v61;
  char v62;
  uint64_t v63;
  char v64;
  __int128 v65;
  __int128 v66;
  char v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;

  v58 = a2;
  v3 = sub_10004BB9C(&qword_100117E10);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10004BB9C(&qword_100117E50);
  __chkstk_darwin(v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContentSizeCategory(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v51 - v14;
  v16 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for BatchUIButtonView(0) + 36));
  v56 = a1;
  swift_bridgeObjectRetain(v16);
  sub_100097EA4((uint64_t)v15);
  v60 = *(_QWORD *)(v16 + 16);
  v57 = v6;
  v55 = v5;
  if (!v60)
  {
    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
LABEL_7:
    v20(v15, v9);
    v22 = swift_bridgeObjectRelease(v16);
    v23 = static VerticalAlignment.center.getter(v22);
    v24 = (uint64_t)v55;
    *v55 = v23;
    *(_QWORD *)(v24 + 8) = 0;
    *(_BYTE *)(v24 + 16) = 1;
    v25 = sub_10004BB9C(&qword_100117E58);
    sub_1000965A4(v24 + *(int *)(v25 + 44));
    sub_10004F544(v24, (uint64_t)v8, &qword_100117E10);
    swift_storeEnumTagMultiPayload(v8, v57, 1);
    v26 = sub_10004BB9C(&qword_100117E00);
    v27 = sub_10004F6D8(&qword_100117DF8, &qword_100117E00, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v28 = sub_10004F6D8(&qword_100117E08, &qword_100117E10, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v8, v26, v3, v27, v28);
    return sub_10004F588(v24, &qword_100117E10);
  }
  v54 = v3;
  v53 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
  v17(v13, v16 + v53, v9);
  v18 = sub_10004BD78(&qword_100117E38, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t)&protocol conformance descriptor for ContentSizeCategory);
  swift_bridgeObjectRetain(v16);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v15, v9, v18);
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v13, v9);
  if ((v19 & 1) != 0)
  {
    swift_bridgeObjectRelease(v16);
    v21 = v54;
LABEL_14:
    v20(v15, v9);
    v35 = swift_bridgeObjectRelease(v16);
    v36 = static VerticalAlignment.center.getter(v35);
    sub_100096284(v56, (uint64_t)&v61);
    v37 = v62;
    v38 = v63;
    v39 = v64;
    v40 = v67;
    v41 = v68;
    v42 = v69;
    v43 = v71;
    v44 = v61;
    v45 = v65;
    v46 = v66;
    v47 = v70;
    LOBYTE(v61) = 1;
    v74 = v62;
    v73 = v67;
    v72 = v69;
    *(_QWORD *)v8 = v36;
    *((_QWORD *)v8 + 1) = 0;
    v8[16] = 1;
    *(_OWORD *)(v8 + 24) = v44;
    v8[40] = v37;
    *((_QWORD *)v8 + 6) = v38;
    v8[56] = v39;
    *((_OWORD *)v8 + 4) = v45;
    *((_OWORD *)v8 + 5) = v46;
    v8[96] = v40;
    *((_QWORD *)v8 + 13) = v41;
    v8[112] = v42;
    *(_OWORD *)(v8 + 120) = v47;
    *((_QWORD *)v8 + 17) = v43;
    swift_storeEnumTagMultiPayload(v8, v57, 0);
    v48 = sub_10004BB9C(&qword_100117E00);
    v49 = sub_10004F6D8(&qword_100117DF8, &qword_100117E00, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v50 = sub_10004F6D8(&qword_100117E08, &qword_100117E10, (uint64_t)&protocol conformance descriptor for HStack<A>);
    return _ConditionalContent<>.init(storage:)(v8, v48, v21, v49, v50);
  }
  v59 = (uint64_t (*)(char *, unint64_t, uint64_t))v17;
  v52 = v16;
  if (v60 == 1)
  {
    v16 = v52;
    swift_bridgeObjectRelease(v52);
    v3 = v54;
    goto LABEL_7;
  }
  v51 = v8;
  v30 = *(_QWORD *)(v10 + 72);
  v31 = v52 + v30 + v53;
  v32 = 1;
  while (1)
  {
    result = v59(v13, v31, v9);
    v33 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    v34 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v15, v9, v18);
    v20(v13, v9);
    if ((v34 & 1) != 0)
    {
      v16 = v52;
      swift_bridgeObjectRelease(v52);
      v21 = v54;
      v8 = v51;
      goto LABEL_14;
    }
    ++v32;
    v31 += v30;
    if (v33 == v60)
    {
      v16 = v52;
      swift_bridgeObjectRelease(v52);
      v3 = v54;
      v8 = v51;
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100096284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  double v41;
  double v42;
  uint64_t v43;
  char v44;
  uint64_t v46;
  int v47;
  double v48[2];

  v46 = a1;
  v3 = sub_10004BB9C(&qword_100117E60);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x80000001000D99C0);
  v7 = Text.init(_:tableName:bundle:comment:)(v6);
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  v14 = static Font.body.getter(v7);
  v15 = Text.font(_:)(v14, v7, v9, v13, v11);
  v17 = v16;
  v47 = v18;
  v20 = v19;
  swift_release(v14);
  sub_10004D630(v7, v9, v13);
  v21 = swift_bridgeObjectRelease(v11);
  v22 = static Edge.Set.leading.getter(v21);
  v23 = EdgeInsets.init(_all:)(4.0);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v30 = (void *)objc_opt_self(UIDevice);
  v31 = objc_msgSend(v30, "currentDevice", v46);
  v32 = objc_msgSend(v31, "userInterfaceIdiom");

  v33 = 0;
  KeyPath = 0;
  v35 = 0;
  if (!v32)
  {
    v36 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v37 = objc_msgSend(v36, "userInterfaceLayoutDirection");

    if (v37)
      v38 = 0xEC0000007466656CLL;
    else
      v38 = 0xED00007468676972;
    v33 = Image.init(systemName:)(0x2E6E6F7276656863, v38);
    v39 = sub_10004BB9C(&qword_100117C78);
    v40 = ScaledMetric.wrappedValue.getter(v48, v39);
    v41 = v48[0];
    v42 = static Font.Weight.bold.getter(v40);
    v43 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v5, 1, 1, v43);
    v35 = static Font.system(size:weight:design:)(*(_QWORD *)&v42, 0, v5, v41);
    sub_10004F588((uint64_t)v5, &qword_100117E60);
    KeyPath = swift_getKeyPath(&unk_1000CD808);
  }
  v44 = v47 & 1;
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v44;
  *(_QWORD *)(a2 + 24) = v20;
  *(_BYTE *)(a2 + 32) = v22;
  *(double *)(a2 + 40) = v23;
  *(_QWORD *)(a2 + 48) = v25;
  *(_QWORD *)(a2 + 56) = v27;
  *(_QWORD *)(a2 + 64) = v29;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 88) = 1;
  *(_QWORD *)(a2 + 96) = v33;
  *(_QWORD *)(a2 + 104) = KeyPath;
  *(_QWORD *)(a2 + 112) = v35;
  sub_10004F47C(v15, v17, v44);
  swift_bridgeObjectRetain(v20);
  sub_1000982B8(v33, KeyPath, v35);
  sub_1000982F4(v33, KeyPath, v35);
  sub_10004D630(v15, v17, v44);
  return swift_bridgeObjectRelease(v20);
}

uint64_t sub_1000965A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  id v34;
  id v35;
  uint64_t KeyPath;
  uint64_t v37;
  id v38;
  id v39;
  unint64_t v40;
  _QWORD *v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  double v73[3];

  v2 = sub_10004BB9C(&qword_100117E60);
  __chkstk_darwin(v2);
  v61 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for ScoreIndicator(0);
  v4 = *(_QWORD *)(v68 - 8);
  v5 = __chkstk_darwin(v68);
  v65 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v60 - v7;
  v9 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x80000001000D99C0);
  v10 = Text.init(_:tableName:bundle:comment:)(v9);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  v17 = static Font.body.getter(v10);
  v18 = Text.font(_:)(v17, v10, v12, v16, v14);
  v66 = v19;
  v67 = v18;
  v21 = v20;
  v70 = v22;
  swift_release(v17);
  sub_10004D630(v10, v12, v16);
  v23 = swift_bridgeObjectRelease(v14);
  v64 = static Edge.Set.leading.getter(v23);
  v24 = EdgeInsets.init(_all:)(4.0);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  type metadata accessor for BatchUIButtonView(0);
  v31 = sub_10004BB9C(&qword_100117C78);
  v32 = ScaledMetric.wrappedValue.getter(v73, v31);
  v33 = v8;
  ScoreIndicator.init(size:)(v32, v73[0]);
  v34 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v35 = objc_msgSend(v34, "userInterfaceIdiom");

  v69 = 0;
  KeyPath = 0;
  v37 = 0;
  if (!v35)
  {
    v38 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v39 = objc_msgSend(v38, "userInterfaceLayoutDirection");

    if (v39)
      v40 = 0xEC0000007466656CLL;
    else
      v40 = 0xED00007468676972;
    v69 = Image.init(systemName:)(0x2E6E6F7276656863, v40);
    v41 = ScaledMetric.wrappedValue.getter(v73, v31);
    v42 = v73[0];
    v43 = static Font.Weight.bold.getter(v41);
    v44 = type metadata accessor for Font.Design(0);
    v45 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v61, 1, 1, v44);
    v37 = static Font.system(size:weight:design:)(*(_QWORD *)&v43, 0, v45, v42);
    sub_10004F588(v45, &qword_100117E60);
    KeyPath = swift_getKeyPath(&unk_1000CD808);
  }
  LOBYTE(v73[0]) = v21 & 1;
  v72 = 0;
  v71 = 1;
  v62 = v33;
  v63 = v4;
  v46 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v47 = v65;
  v48 = v68;
  v46(v65, v33, v68);
  v49 = LOBYTE(v73[0]);
  v50 = v72;
  v51 = v66;
  v52 = v67;
  *(_QWORD *)a1 = v67;
  *(_QWORD *)(a1 + 8) = v51;
  *(_BYTE *)(a1 + 16) = v49;
  *(_QWORD *)(a1 + 24) = v70;
  *(_BYTE *)(a1 + 32) = v64;
  *(double *)(a1 + 40) = v24;
  *(_QWORD *)(a1 + 48) = v26;
  *(_QWORD *)(a1 + 56) = v28;
  *(_QWORD *)(a1 + 64) = v30;
  *(_BYTE *)(a1 + 72) = v50;
  v53 = v71;
  *(_QWORD *)(a1 + 80) = 0;
  *(_BYTE *)(a1 + 88) = v53;
  v54 = sub_10004BB9C(&qword_100117E68);
  v46((char *)(a1 + *(int *)(v54 + 64)), v47, v48);
  v55 = (uint64_t *)(a1 + *(int *)(v54 + 80));
  v56 = v69;
  *v55 = v69;
  v55[1] = KeyPath;
  v55[2] = v37;
  sub_10004F47C(v52, v51, v49);
  v57 = v70;
  swift_bridgeObjectRetain(v70);
  sub_1000982B8(v56, KeyPath, v37);
  v58 = *(void (**)(char *, uint64_t))(v63 + 8);
  v58(v62, v48);
  sub_1000982F4(v56, KeyPath, v37);
  v58(v47, v48);
  sub_10004D630(v52, v51, SLOBYTE(v73[0]));
  return swift_bridgeObjectRelease(v57);
}

uint64_t sub_1000969E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  id v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, unint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;

  v48 = a2;
  v3 = sub_10004BB9C(&qword_100117E30);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10004BB9C(&qword_100117E28);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for ContentSizeCategory(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v40 - v14;
  v16 = type metadata accessor for BatchUIButtonView(0);
  v17 = *(int *)(v16 + 36);
  v46 = v16;
  v47 = a1;
  v18 = *(_QWORD *)(a1 + v17);
  swift_bridgeObjectRetain(v18);
  sub_100097EA4((uint64_t)v15);
  v50 = *(_QWORD *)(v18 + 16);
  if (!v50)
  {
    v23 = *(void (**)(char *, uint64_t))(v10 + 8);
    goto LABEL_6;
  }
  v44 = v6;
  v45 = v5;
  v42 = v8;
  v43 = v3;
  v19 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v20 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
  v20(v13, v18 + v19, v9);
  v21 = sub_10004BD78(&qword_100117E38, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t)&protocol conformance descriptor for ContentSizeCategory);
  swift_bridgeObjectRetain(v18);
  v22 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v15, v9, v21);
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v13, v9);
  if ((v22 & 1) != 0)
  {
LABEL_13:
    swift_bridgeObjectRelease(v18);
    v32 = (uint64_t)v45;
    v23(v15, v9);
    swift_bridgeObjectRelease(v18);
    v33 = sub_10004BB9C(&qword_100117C78);
    v34 = ScaledMetric.wrappedValue.getter(&v51, v33);
    v35 = v51;
    v36 = static HorizontalAlignment.center.getter(v34);
    v37 = (uint64_t)v42;
    *v42 = v36;
    *(_QWORD *)(v37 + 8) = v35;
    *(_BYTE *)(v37 + 16) = 0;
    v38 = sub_10004BB9C(&qword_100117E40);
    sub_100096E08((uint64_t *)(v37 + *(int *)(v38 + 44)));
    sub_10004F544(v37, v32, &qword_100117E28);
    swift_storeEnumTagMultiPayload(v32, v43, 0);
    v39 = sub_10004F6D8(&qword_100117E20, &qword_100117E28, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v32, v44, &type metadata for Image, v39, &protocol witness table for Image);
    return sub_10004F588(v37, &qword_100117E28);
  }
  else
  {
    v49 = (uint64_t (*)(char *, unint64_t, uint64_t))v20;
    v41 = v18;
    if (v50 == 1)
    {
      v18 = v41;
      swift_bridgeObjectRelease(v41);
      v3 = v43;
      v6 = v44;
      v5 = v45;
LABEL_6:
      v23(v15, v9);
      swift_bridgeObjectRelease(v18);
      v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      *v5 = Image.init(_:bundle:)(0xD000000000000024, 0x80000001000D9970, v24);
      swift_storeEnumTagMultiPayload(v5, v3, 1);
      v25 = sub_10004F6D8(&qword_100117E20, &qword_100117E28, (uint64_t)&protocol conformance descriptor for VStack<A>);
      return _ConditionalContent<>.init(storage:)(v5, v6, &type metadata for Image, v25, &protocol witness table for Image);
    }
    v27 = *(_QWORD *)(v10 + 72);
    v28 = v41 + v27 + v19;
    v29 = 1;
    while (1)
    {
      result = v49(v13, v28, v9);
      v30 = v29 + 1;
      if (__OFADD__(v29, 1))
        break;
      v31 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v15, v9, v21);
      v23(v13, v9);
      if ((v31 & 1) != 0)
      {
        v18 = v41;
        goto LABEL_13;
      }
      ++v29;
      v28 += v27;
      if (v30 == v50)
      {
        v18 = v41;
        swift_bridgeObjectRelease(v41);
        v6 = v44;
        v5 = v45;
        v3 = v43;
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100096E08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;
  double v18;

  v2 = type metadata accessor for ScoreIndicator(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v17 - v7;
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = Image.init(_:bundle:)(0xD000000000000024, 0x80000001000D9970, v9);
  type metadata accessor for BatchUIButtonView(0);
  v11 = sub_10004BB9C(&qword_100117C78);
  v12 = ScaledMetric.wrappedValue.getter(&v18, v11);
  ScoreIndicator.init(size:)(v12, v18);
  v13 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v13(v6, v8, v2);
  *a1 = v10;
  v14 = sub_10004BB9C(&qword_100117E48);
  v13((char *)a1 + *(int *)(v14 + 48), v6, v2);
  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  swift_retain(v10);
  v15(v8, v2);
  v15(v6, v2);
  return swift_release(v10);
}

uint64_t sub_100096F78@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  char *v25;

  v25 = a1;
  v1 = type metadata accessor for LabelStyleConfiguration.Title(0);
  v24 = *(_QWORD *)(v1 - 8);
  v2 = v24;
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v24 - v6;
  v8 = type metadata accessor for LabelStyleConfiguration.Icon(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v24 - v14;
  v16 = LabelStyleConfiguration.icon.getter(v13);
  LabelStyleConfiguration.title.getter(v16);
  v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v17(v12, v15, v8);
  v18 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v18(v5, v7, v1);
  v19 = v25;
  v17(v25, v12, v8);
  v20 = sub_10004BB9C(&qword_100117E90);
  v18(&v19[*(int *)(v20 + 48)], v5, v1);
  v21 = *(void (**)(char *, uint64_t))(v24 + 8);
  v21(v7, v1);
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v15, v8);
  v21(v5, v1);
  return ((uint64_t (*)(char *, uint64_t))v22)(v12, v8);
}

uint64_t sub_100097118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v3 = sub_10004BB9C(&qword_100117E88);
  return sub_100096F78((char *)(a2 + *(int *)(v3 + 44)));
}

uint64_t sub_100097164()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_100097184(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ContentSizeCategory(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.sizeCategory.setter(v4);
}

uint64_t *sub_100097204(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_10004BB9C(&qword_100117C78);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(v4, a2, v7);
    v8((uint64_t *)((char *)v4 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)v4 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v8((uint64_t *)((char *)v4 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
    v9 = a3[8];
    v10 = (uint64_t *)((char *)v4 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = sub_10004BB9C(&qword_100117C68);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = v10;
      v15 = v12;
      v16 = 1;
    }
    else
    {
      v18 = *v11;
      *v10 = *v11;
      swift_retain(v18);
      v14 = v10;
      v15 = v12;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
    v19 = a3[9];
    v20 = a3[10];
    v21 = *(uint64_t *)((char *)a2 + v19);
    *(uint64_t *)((char *)v4 + v19) = v21;
    v22 = (uint64_t *)((char *)v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v17 = v23[1];
    *v22 = *v23;
    v22[1] = v17;
    swift_bridgeObjectRetain(v21);
  }
  swift_retain(v17);
  return v4;
}

uint64_t sub_10009736C(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_10004BB9C(&qword_100117C78);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v5(a1 + a2[7], v4);
  v6 = (_QWORD *)(a1 + a2[8]);
  v7 = sub_10004BB9C(&qword_100117C68);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9]));
  return swift_release(*(_QWORD *)(a1 + a2[10] + 8));
}

uint64_t sub_100097450(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = sub_10004BB9C(&qword_100117C78);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v8 = a3[8];
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = sub_10004BB9C(&qword_100117C68);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = v9;
    v14 = v11;
    v15 = 1;
  }
  else
  {
    v16 = *v10;
    *v9 = *v10;
    swift_retain(v16);
    v13 = v9;
    v14 = v11;
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v14, v15);
  v17 = a3[9];
  v18 = a3[10];
  v19 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(a1 + v17) = v19;
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain(v19);
  swift_retain(v22);
  return a1;
}

uint64_t sub_100097590(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_10004BB9C(&qword_100117C78);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  if (a1 != a2)
  {
    v8 = a3[8];
    v9 = (uint64_t *)(a1 + v8);
    v10 = (uint64_t *)(a2 + v8);
    sub_10004F588(a1 + v8, &qword_100117C68);
    v11 = sub_10004BB9C(&qword_100117C68);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = v9;
      v14 = v11;
      v15 = 1;
    }
    else
    {
      v16 = *v10;
      *v9 = *v10;
      swift_retain(v16);
      v13 = v9;
      v14 = v11;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  v17 = a3[9];
  v18 = *(_QWORD *)(a2 + v17);
  v19 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)(a1 + v17) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = a3[10];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  v24 = v21[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_retain(v23);
  swift_release(v24);
  return a1;
}

uint64_t sub_100097700(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_10004BB9C(&qword_100117C78);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_10004BB9C(&qword_100117C68);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_100097828(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_10004BB9C(&qword_100117C78);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  if (a1 != a2)
  {
    v8 = a3[8];
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_10004F588(a1 + v8, &qword_100117C68);
    v11 = sub_10004BB9C(&qword_100117C68);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[9];
  v14 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease(v14);
  v15 = a3[10];
  v16 = *(_QWORD *)(a1 + v15 + 8);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  swift_release(v16);
  return a1;
}

uint64_t sub_100097980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009798C);
}

uint64_t sub_10009798C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_10004BB9C(&qword_100117C78);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_10004BB9C(&qword_100117C80);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100097A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100097A48);
}

uint64_t sub_100097A48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_10004BB9C(&qword_100117C78);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_10004BB9C(&qword_100117C80);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

void sub_100097AF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  sub_100097B98(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = v6[0];
    v6[2] = v6[0];
    v6[3] = v6[0];
    sub_100097BF0(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[6] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    }
  }
}

void sub_100097B98(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100117CF0)
  {
    v2 = sub_1000953FC();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for Double, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100117CF0);
  }
}

void sub_100097BF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100117CF8)
  {
    v2 = type metadata accessor for ContentSizeCategory(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100117CF8);
  }
}

uint64_t sub_100097C44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DC49C, 1);
}

uint64_t sub_100097C54@<X0>(uint64_t a1@<X8>)
{
  return sub_1000956B4(a1);
}

unint64_t sub_100097C5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100117D58;
  if (!qword_100117D58)
  {
    v1 = sub_10004BC28(&qword_100117D50);
    sub_100097D30(&qword_100117D60, &qword_100117D68, (void (*)(void))sub_100097CE8);
    sub_100097CE8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100117D58);
  }
  return result;
}

uint64_t sub_100097CE8()
{
  return sub_100097D30(&qword_100117D70, &qword_100117D78, (void (*)(void))sub_100097D0C);
}

uint64_t sub_100097D0C()
{
  return sub_100097D30(&qword_100117D80, &qword_100117D88, (void (*)(void))sub_100097D98);
}

uint64_t sub_100097D30(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10004BC28(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100097D98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_100117D90;
  if (!qword_100117D90)
  {
    v1 = sub_10004BC28(&qword_100117D98);
    v2[0] = sub_10004BC28(&qword_100117DA0);
    v2[1] = &type metadata for CenterAligned;
    v2[2] = sub_10004F6D8(&qword_100117DA8, &qword_100117DA0, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    v2[3] = sub_100097E60();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100117D90);
  }
  return result;
}

unint64_t sub_100097E60()
{
  unint64_t result;

  result = qword_100117DB0;
  if (!qword_100117DB0)
  {
    result = swift_getWitnessTable(&unk_1000CD848, &type metadata for CenterAligned);
    atomic_store(result, (unint64_t *)&qword_100117DB0);
  }
  return result;
}

uint64_t sub_100097EA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v14;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004BB9C(&qword_100117C68);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004F544(v2, (uint64_t)v10, &qword_100117C68);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, v10, v12);
  }
  else
  {
    v14 = *v10;
    v15 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
    v16 = static Log.runtimeIssuesLog.getter();
    v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v21[1] = a1;
      v20 = v19;
      v23 = v19;
      *(_DWORD *)v18 = 136315138;
      v22 = sub_100094680(0xD000000000000013, 0x80000001000D99A0, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, v14);
    swift_release(v14);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1000980E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100098108(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_100098130@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100098158(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_100098180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100095D60(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100098188@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000969E4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100098190()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100117DF0;
  if (!qword_100117DF0)
  {
    v1 = sub_10004BC28(&qword_100117DE0);
    sub_10004F6D8(&qword_100117DF8, &qword_100117E00, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_10004F6D8(&qword_100117E08, &qword_100117E10, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100117DF0);
  }
  return result;
}

unint64_t sub_100098234()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100117E18;
  if (!qword_100117E18)
  {
    v1 = sub_10004BC28(&qword_100117DE8);
    sub_10004F6D8(&qword_100117E20, &qword_100117E28, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100117E18);
  }
  return result;
}

uint64_t sub_1000982B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (result)
  {
    v4 = result;
    swift_retain(a3);
    swift_retain(v4);
    return swift_retain(a2);
  }
  return result;
}

uint64_t sub_1000982F4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_release(result);
    swift_release(a2);
    return swift_release(a3);
  }
  return result;
}

uint64_t sub_10009832C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100098354(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

ValueMetadata *type metadata accessor for CenterAligned()
{
  return &type metadata for CenterAligned;
}

unint64_t sub_100098390()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_100117E70;
  if (!qword_100117E70)
  {
    v1 = sub_10004BC28(&qword_100117DC8);
    v2[0] = sub_10004BC28(&qword_100117D40);
    v2[1] = type metadata accessor for BorderedButtonStyle(255);
    v2[2] = sub_10004F6D8(&qword_100117DB8, &qword_100117D40, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_10004BD78(&qword_100117DC0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10004F6D8(&qword_100117E78, &qword_100117E80, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100117E70);
  }
  return result;
}

uint64_t sub_100098498(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DC4C4, 1);
}

uint64_t sub_1000984A8()
{
  return sub_10004F6D8(&qword_100117E98, &qword_100117EA0, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t sub_1000984D4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_100050734(v0, qword_100117EA8);
  sub_10005067C(v0, (uint64_t)qword_100117EA8);
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(FBABundleIdentifier);
  return Logger.init(subsystem:category:)(v1);
}

id sub_100098588()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAUserDefaultsMigrator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FBAUserDefaultsMigrator()
{
  return objc_opt_self(_TtC18Feedback_Assistant23FBAUserDefaultsMigrator);
}

uint64_t sub_1000985DC(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_100098AD0()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC18Feedback_AssistantP33_45153A333B915E8C1912987867CEA3EA19ResourceBundleClass);
}

void sub_100098B00(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "item is nil in _controllerForItem", v1, 2u);
}

void sub_100098B40(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error fetching survey", v1, 2u);
}

void sub_100098B80(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001227C((void *)&_mh_execute_header, a1, a3, "Cannot delete draft because content item is nil", a5, a6, a7, a8, 0);
  sub_100012264();
}

void sub_100098BB0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100012254((void *)&_mh_execute_header, a2, a3, "Error While Dismissing Draft on FR [%i]", a5, a6, a7, a8, 0);
  sub_100012264();
}

void sub_100098C18(void *a1)
{
  void *v1;
  os_log_t v2;
  os_log_type_t v3;
  const char *v4;
  uint8_t *v5;
  void *v6;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "description"));
  sub_10001226C();
  _os_log_error_impl(v1, v2, v3, v4, v5, 0xCu);

  sub_1000122A4();
}

void sub_100098C9C(void *a1)
{
  void *v1;
  os_log_t v2;
  os_log_type_t v3;
  const char *v4;
  uint8_t *v5;
  void *v6;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "description"));
  sub_10001226C();
  _os_log_error_impl(v1, v2, v3, v4, v5, 0x16u);

  sub_1000122A4();
}

void sub_100098D34(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001228C((void *)&_mh_execute_header, a2, a3, "Selected cell with identifier [%@] is not a question-answer cell.", a5, a6, a7, a8, 2u);
  sub_10001229C();
}

void sub_100098D98(void *a1, void *a2, NSObject *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "role"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "formResponse"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "ID"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "answerForQuestionID:", v8));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "values"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "componentsJoinedByString:", CFSTR(",")));
  v13 = 138412546;
  v14 = v6;
  v15 = 2112;
  v16 = v11;
  sub_1000122B0((void *)&_mh_execute_header, a3, v12, "Q: [%@] A: [%@]", (uint8_t *)&v13);

}

void sub_100098EB8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001227C((void *)&_mh_execute_header, a1, a3, "Device Diagnostics matched no device", a5, a6, a7, a8, 0);
  sub_100012264();
}

void sub_100098EE8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100012254((void *)&_mh_execute_header, a2, a3, "Cannot delete draft with ID [%i] because content item is nil", a5, a6, a7, a8, 0);
  sub_100012264();
}

void sub_100098F4C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100012254((void *)&_mh_execute_header, a2, a3, "Failed to delete form response [%i]", a5, a6, a7, a8, 0);
  sub_100012264();
}

void sub_100098FB4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100012254((void *)&_mh_execute_header, a2, a3, "Failed to save form response [%i]", a5, a6, a7, a8, 0);
  sub_100012264();
}

void sub_10009901C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001228C((void *)&_mh_execute_header, a1, a3, "%s", a5, a6, a7, a8, 2u);
  sub_10001229C();
}

void sub_10009908C(id *a1, id *a2, NSObject *a3)
{
  id WeakRetained;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  uint8_t buf[4];
  void *v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;

  WeakRetained = objc_loadWeakRetained(a1);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentTeam"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ID"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "stringValue"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*a2, "ID"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "stringValue"));
  v11 = objc_loadWeakRetained(a1);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "formStub"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "serverID"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "stringValue"));
  *(_DWORD *)buf = 138543874;
  v17 = v8;
  v18 = 2114;
  v19 = v10;
  v20 = 2114;
  v21 = v14;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Attempted to switch from team [%{public}@] to team [%{public}@] for stub [%{public}@] but new team does not have a matching form stub. Falling back to old stub.", buf, 0x20u);

}

void sub_1000991EC(uint64_t a1)
{
  void *v1;
  os_log_t v2;
  os_log_type_t v3;
  const char *v4;
  uint8_t *v5;

  objc_msgSend(*(id *)(a1 + 32), "intValue");
  sub_10001226C();
  _os_log_error_impl(v1, v2, v3, v4, v5, 8u);
  sub_10001229C();
}

void sub_10009926C(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  os_log_t v4;
  os_log_type_t v5;
  const char *v6;
  uint8_t *v7;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "formResponse"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "ID"));
  objc_msgSend(v2, "intValue");
  sub_10001226C();
  _os_log_error_impl(v3, v4, v5, v6, v7, 0xEu);

}

void sub_100099328(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  const char *v4;
  __int16 v5;
  uint64_t v6;

  v3 = 136315394;
  v4 = "-[FBABugFormTableViewController didTapDevice:indexPath:]";
  v5 = 2112;
  v6 = a1;
  sub_1000122B0((void *)&_mh_execute_header, a2, a3, "%s %@", (uint8_t *)&v3);
  sub_10001229C();
}

void sub_1000993A4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "cannot display item", v1, 2u);
  sub_100012264();
}

void sub_1000993E0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000142F8((void *)&_mh_execute_header, a1, a3, "will display document on detail view controller from file browser", a5, a6, a7, a8, 0);
  sub_100012264();
}

void sub_100099410(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000142F8((void *)&_mh_execute_header, a1, a3, "will display FBA file controller from file browser", a5, a6, a7, a8, 0);
  sub_100012264();
}

void sub_100099440(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Legal agreement completion called without acceptance", v1, 2u);
}

void sub_100099480(uint64_t a1, void *a2, NSObject *a3)
{
  void *v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  void *v9;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", AKAuthenticationIDMSTokenKey));
  v6 = 138412546;
  v7 = a1;
  v8 = 2112;
  v9 = v5;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "Sign in authenticated for user %@ with tokens %@", (uint8_t *)&v6, 0x16u);

}

void sub_10009953C(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "AuthKit login error: [%{public}@]", (uint8_t *)&v2, 0xCu);
}

void sub_1000995B0(void *a1, NSObject *a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  int v11;
  void *v12;
  __int16 v13;
  void *v14;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "loggerLib"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "startDate"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "fba_toString"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "loggerLib"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "endDate"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "fba_toString"));
  v11 = 138543618;
  v12 = v6;
  v13 = 2114;
  v14 = v9;
  sub_1000199C4((void *)&_mh_execute_header, a2, v10, "Log Archive has invalid dates. Start Date [%{public}@], end date: [%{public}@]", (uint8_t *)&v11);

}

void sub_1000996B8(void *a1, void *a2, NSObject *a3)
{
  void *v5;
  void *v6;
  uint64_t v7;
  int v8;
  void *v9;
  __int16 v10;
  void *v11;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "logArchivePath"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "description"));
  v8 = 138543618;
  v9 = v5;
  v10 = 2114;
  v11 = v6;
  sub_1000199C4((void *)&_mh_execute_header, a3, v7, "Could not initialize FBAOSLogViewerDataSource with logarchive file: [%{public}@] error: [%{public}@]", (uint8_t *)&v8);

}

void sub_100099770(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  objc_msgSend(a1, "numberOfEmptyFetches");
  sub_1000199A4((void *)&_mh_execute_header, v1, v2, "Empty page count: [%lu]", v3, v4, v5, v6, 0);
  sub_1000122A4();
}

void sub_1000997E0(void *a1, NSObject *a2)
{
  _DWORD v3[2];

  v3[0] = 67109120;
  v3[1] = objc_msgSend(a1, "count");
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Fetched [%i] log events from data range batch", (uint8_t *)v3, 8u);
}

void sub_100099868(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error fetching page [%{public}@]", (uint8_t *)&v2, 0xCu);
}

void sub_1000998DC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_1000142F8((void *)&_mh_execute_header, v0, v1, "Got log events", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_100099908()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_1000199B8();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Too many fetches. Aborting", v1, 2u);
  sub_100012264();
}

void sub_100099940()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_1000142F8((void *)&_mh_execute_header, v0, v1, "Reading for date range finished, will read another batch", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009996C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_1000142F8((void *)&_mh_execute_header, v0, v1, "Reading for date range finished, done reading, next page requested ", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_100099998(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "savedEvents"));
  objc_msgSend(v1, "count");
  sub_1000199A4((void *)&_mh_execute_header, v2, v3, "Log events count: [%lu] on completion block", v4, v5, v6, v7, 0);

  sub_1000122A4();
}

void sub_100099A18()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_1000142F8((void *)&_mh_execute_header, v0, v1, "Reading for date range finished, done reading ", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_100099A44(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Done button not supported for multi-select picker", v1, 2u);
}

void sub_100099A84(uint64_t a1, NSObject *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  _DWORD v6[2];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "contentItem"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "ID"));
  v6[0] = 67109120;
  v6[1] = objc_msgSend(v5, "intValue");
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error while fetching response stub with ID [%i]", (uint8_t *)v6, 8u);

}

void sub_100099B48(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Response stub is nil", v1, 2u);
}

void sub_100099B88()
{
  NSObject *v0;
  uint64_t v1;
  int v2;
  const char *v3;

  v2 = 136315394;
  v3 = "-[AppDelegate application:didFinishLaunchingWithOptions:]";
  sub_100020778();
  sub_1000122B0((void *)&_mh_execute_header, v0, v1, "%s with launchOptions %@", (uint8_t *)&v2);
}

void sub_100099C00()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_1000142F8((void *)&_mh_execute_header, v0, v1, "not logged in, removing blur view", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_100099C2C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_1000142F8((void *)&_mh_execute_header, v0, v1, "Will add blur view", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_100099C58()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_1000142F8((void *)&_mh_execute_header, v0, v1, "Will remove blur view", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_100099C84(id *a1, NSObject *a2)
{
  void *v3;
  void *v4;
  _DWORD v5[2];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*a1, "blurView"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "superview"));
  v5[0] = 67109120;
  v5[1] = v4 != 0;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Timer Fired, Authenticated, blurView visible? [%i]", (uint8_t *)v5, 8u);

}

void sub_100099D3C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "Biometrics Evaluation stuck evaluating. Will lock out", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_100099D68()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "Biometrics Evaluation stuck in cancelled state. Will lock out", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_100099D94(id *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  objc_msgSend(*a1, "biometricsState");
  sub_100020764((void *)&_mh_execute_header, v1, v2, "Biometrics Evaluation stuck in state [%lu]", v3, v4, v5, v6, 0);
  sub_1000122A4();
}

void sub_100099E08()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_1000142F8((void *)&_mh_execute_header, v0, v1, "Biometrics disabled. Will not save bio timer", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_100099E34(uint64_t a1, NSObject *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "lastUsedLAContext"));
  v6 = 138412546;
  v7 = v3;
  sub_100020778();
  sub_1000122B0((void *)&_mh_execute_header, a2, v5, "context [%@] last context used [%@]", (uint8_t *)&v6);

}

void sub_100099ED0(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "localizedDescription"));
  sub_100020764((void *)&_mh_execute_header, v2, v3, "APNS Error: %@", v4, v5, v6, v7, 2u);

  sub_1000122A4();
}

void sub_100099F4C()
{
  NSObject *v0;
  uint64_t v1;
  int v2;
  const char *v3;

  v2 = 136446466;
  v3 = "-[AppDelegate userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]";
  sub_100020778();
  sub_1000122B0((void *)&_mh_execute_header, v0, v1, "%{public}s %@", (uint8_t *)&v2);
}

void sub_100099FC4(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "localizedDescription"));
  sub_100020764((void *)&_mh_execute_header, v2, v3, "Error: %@", v4, v5, v6, v7, 2u);

  sub_1000122A4();
}

void sub_10009A040()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "Viewing Followups from notification has been disabled", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009A06C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "Could not get UISupportedInterfaceOrientations", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009A098(uint8_t *buf, _BYTE *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Found unknown interface orientation", buf, 2u);
}

void sub_10009A0D4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Cannot display item of type Unknown", v1, 2u);
}

void sub_10009A114(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "shortDescription"));
  v4 = 138543362;
  v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Cannot track upload progress for item [%{public}@]", (uint8_t *)&v4, 0xCu);

}

void sub_10009A1A8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100027890();
  sub_10001228C((void *)&_mh_execute_header, v0, v1, "selected [%@] for pairing", v2, v3, v4, v5, v6);
  sub_10001229C();
}

void sub_10009A208(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000142F8((void *)&_mh_execute_header, a1, a3, "tapped on this device detail", a5, a6, a7, a8, 0);
}

void sub_10009A23C(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "publicLogDescription"));
  sub_100027890();
  sub_10002789C((void *)&_mh_execute_header, a2, v4, "device [%{public}@] is not valid for FBA pairing removal", v5);

}

void sub_10009A2C4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000142F8((void *)&_mh_execute_header, a1, a3, "tapped on debug, device is not paired or local, will attempt pairing", a5, a6, a7, a8, 0);
}

void sub_10009A2F8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100027890();
  sub_10001228C((void *)&_mh_execute_header, v0, v1, "tapped on debug section %@", v2, v3, v4, v5, v6);
  sub_10001229C();
}

void sub_10009A358()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_100027890();
  sub_10002789C((void *)&_mh_execute_header, v0, v1, "Tapped on device not ready to be configured [%{public}@]", v2);
  sub_10001229C();
}

void sub_10009A3BC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "No draft, stub or form given. Cannot launch feedback.", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009A3E8(NSObject *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  const char *v4;

  v3 = 136446210;
  v4 = "-[FBAMailboxesViewController runDelayedUrlActionIfNeeded]";
  sub_100031F98((void *)&_mh_execute_header, a1, a3, "[%{public}s] action not handled", (uint8_t *)&v3);
  sub_10001229C();
}

void sub_10009A45C(void *a1, NSObject *a2)
{
  uint64_t v3;
  uint8_t v4[24];

  objc_msgSend(a1, "newFeedbackButtonState");
  sub_100027890();
  sub_100031F98((void *)&_mh_execute_header, a2, v3, "Compose button state [%lu]", v4);
}

void sub_10009A4D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100027890();
  sub_100031F88((void *)&_mh_execute_header, v0, v1, "Show Item url action failed. Item not found: [%{public}@]", v2, v3, v4, v5, v6);
  sub_10001229C();
}

void sub_10009A538()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "Submitted inbox is missing!", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009A564()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100027890();
  sub_100031F88((void *)&_mh_execute_header, v0, v1, "Show Item url action is not supported [%{public}@]", v2, v3, v4, v5, v6);
  sub_10001229C();
}

void sub_10009A5C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "Error refreshing feedback", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009A5F0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100031F88((void *)&_mh_execute_header, a2, a3, "Show Item url action failed. Could not get feedback: [%{public}@]", a5, a6, a7, a8, 2u);
  sub_10001229C();
}

void sub_10009A658(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100031F88((void *)&_mh_execute_header, a2, a3, "Show Item url action failed. FFU not found: [%{public}@]", a5, a6, a7, a8, 2u);
  sub_10001229C();
}

void sub_10009A6C0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100031F88((void *)&_mh_execute_header, a2, a3, "Show Item url action failed. Could not get all content for feedback: [%{public}@]", a5, a6, a7, a8, 2u);
  sub_10001229C();
}

void sub_10009A728()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "No teams are available.", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009A754()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;

  sub_100027890();
  v3 = 2048;
  v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Submitted inbox is missing (row: %ld, section: %ld)!", v2, 0x16u);
  sub_10001229C();
}

void sub_10009A7D0(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136446210;
  v2 = "-[FBAMailboxesViewController launchSurveyWithUrlAction:]";
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "[%{public}s] with action that does not launch survey", (uint8_t *)&v1, 0xCu);
  sub_10001229C();
}

void sub_10009A84C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "Error fetching targeted survey", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009A878(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 134217984;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error creation with type [%li] not implemented", (uint8_t *)&v2, 0xCu);
}

void sub_10009A8EC(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "dbFile does not exist, setting to nil", v1, 2u);
}

void sub_10009A92C(sqlite3 **a1, NSObject *a2)
{
  const char *v3;
  int v4;
  const char *v5;

  v3 = sqlite3_errmsg(*a1);
  v4 = 136315138;
  v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v4, 0xCu);
}

void sub_10009A9B8(void *a1)
{
  void *v1;
  os_log_t v2;
  os_log_type_t v3;
  const char *v4;
  uint8_t *v5;
  void *v6;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "action"));
  sub_10001226C();
  _os_log_error_impl(v1, v2, v3, v4, v5, 0xCu);

}

void sub_10009AA44(void *a1)
{
  void *v1;
  void *v2;
  os_log_t v3;
  os_log_type_t v4;
  const char *v5;
  uint8_t *v6;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "ID"));
  objc_msgSend(v1, "intValue");
  sub_10001226C();
  _os_log_error_impl(v2, v3, v4, v5, v6, 8u);

}

void sub_10009AAD4(void *a1)
{
  void *v2;
  void *v3;
  os_log_t v4;
  os_log_type_t v5;
  const char *v6;
  uint8_t *v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "ID"));
  objc_msgSend(v2, "intValue");
  objc_msgSend(a1, "itemType");
  sub_10001226C();
  _os_log_error_impl(v3, v4, v5, v6, v7, 0x12u);

  sub_10003A604();
}

void sub_10009AB7C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001227C((void *)&_mh_execute_header, a1, a3, "Error deleting draft", a5, a6, a7, a8, 0);
  sub_100012264();
}

void sub_10009ABAC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001227C((void *)&_mh_execute_header, a1, a3, "could not find drafting controller or response: cannot save", a5, a6, a7, a8, 0);
  sub_100012264();
}

void sub_10009ABDC(uint64_t a1, NSObject *a2)
{
  int v2;
  _DWORD v3[2];

  v2 = *(_DWORD *)(a1 + 48);
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "background task expired for saving FR [%d]", (uint8_t *)v3, 8u);
  sub_100012264();
}

void sub_10009AC50(uint64_t a1, os_log_t log)
{
  void *v4;
  objc_class *v5;
  NSString *v6;
  int v7;
  void *v8;

  if (a1)
  {
    v5 = (objc_class *)objc_opt_class(a1);
    v6 = NSStringFromClass(v5);
    v4 = (void *)objc_claimAutoreleasedReturnValue(v6);
  }
  else
  {
    v4 = 0;
  }
  v7 = 138412290;
  v8 = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Modal feedback editor [%@]", (uint8_t *)&v7, 0xCu);
  if (a1)

  sub_10003A604();
}

void sub_10009ACFC(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138543618;
  v4 = a1;
  v5 = 2114;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to generate caller name from string [%{public}@] from [%{public}@]", (uint8_t *)&v3, 0x16u);
}

void sub_10009AD80(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to generate caller name with error [%{public}@]", (uint8_t *)&v2, 0xCu);
}

void sub_10009ADF4(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "ID"));
  v4 = 134217984;
  v5 = objc_msgSend(v3, "integerValue");
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Tried to load Information Cell with a non-information type question, question id: %ld", (uint8_t *)&v4, 0xCu);

}

void sub_10009AE8C(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[FBAPinPairingViewController tryPin:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s", (uint8_t *)&v1, 0xCu);
}

void sub_10009AF0C(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[FBADevicePickingNavigationController pairingViewDidClose]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s", (uint8_t *)&v1, 0xCu);
}

void sub_10009AF8C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001227C((void *)&_mh_execute_header, a1, a3, "Device choices made but no completion block given", a5, a6, a7, a8, 0);
}

void sub_10009AFC0(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  id v5;
  __int16 v6;
  const char *v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "question"));
  v4 = 134218242;
  v5 = objc_msgSend(v3, "answerType");
  v6 = 2082;
  v7 = "-[FBABugFormDetailTableViewController tableView:didSelectRowAtIndexPath:]";
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Question type [%lu] not handled in in %{public}s", (uint8_t *)&v4, 0x16u);

}

void sub_10009B06C(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error copying file: [%{public}@] ", (uint8_t *)&v2, 0xCu);
}

void sub_10009B0E0(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138543618;
  v4 = a1;
  v5 = 2114;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "error parsing url [%{public}@] with error [%{public}@]", (uint8_t *)&v3, 0x16u);
}

void sub_10009B164()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "Error refreshing feedback. Will show alert and back out", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009B190()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "viewControllerFeedback is nil", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009B1BC(uint8_t *buf, _BYTE *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FFU has no visible files", buf, 2u);
}

void sub_10009B1F8(uint8_t *a1, void *a2, unsigned int *a3, NSObject *a4)
{
  void *v7;
  unsigned int v8;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "ID"));
  v8 = objc_msgSend(v7, "intValue");
  *(_DWORD *)a1 = 67109120;
  *a3 = v8;
  _os_log_error_impl((void *)&_mh_execute_header, a4, OS_LOG_TYPE_ERROR, "Found complete validation FFU [%i] without response, this is invalid state", a1, 8u);

}

void sub_10009B270()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "No content item. Cannot delete file promise", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009B29C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "Nil formResponseStub. Cannot delete attachment", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009B2C8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_1000199B8();
  sub_10001227C((void *)&_mh_execute_header, v0, v1, "Nil filePromise. Cannot delete attachment", v2, v3, v4, v5, v6);
  sub_100012264();
}

void sub_10009B2F4(uint64_t a1, void *a2)
{
  void *v2;
  void *v4;
  void *v5;
  const char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t v14;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "remoteID"));
  sub_10004ADB0(v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "description"));
  sub_10004AD98();
  sub_10004AD84((void *)&_mh_execute_header, v8, v9, "Error promoting feedback [%lu]: %{public}@", v10, v11, v12, v13, v14);

  sub_10004AD70();
}

void sub_10009B3A4(uint64_t a1, void *a2)
{
  void *v2;
  void *v4;
  void *v5;
  const char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t v14;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentItem"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "remoteID"));
  sub_10004ADB0(v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "description"));
  sub_10004AD98();
  sub_10004AD84((void *)&_mh_execute_header, v8, v9, "Error demoting feedback [%lu]: %{public}@", v10, v11, v12, v13, v14);

  sub_10004AD70();
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImage");
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGRectValue");
}

id objc_msgSend_ID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ID");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URL");
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathExtension:");
}

id objc_msgSend_URLByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByDeletingPathExtension");
}

id objc_msgSend_URLByRemovingInvalidExtensions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByRemovingInvalidExtensions:");
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:");
}

id objc_msgSend_URLForResource_withExtension_subdirectory_localization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:subdirectory:localization:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDString");
}

id objc_msgSend__allDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allDevices");
}

id objc_msgSend__beginBugForTeam_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginBugForTeam:sender:");
}

id objc_msgSend__changeToBugFormStub_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeToBugFormStub:force:");
}

id objc_msgSend__changeToBugFormStub_withTeam_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeToBugFormStub:withTeam:force:");
}

id objc_msgSend__confirmFilePromiseDeletionWithStub_deletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_confirmFilePromiseDeletionWithStub:deletionHandler:");
}

id objc_msgSend__deleteFilePromise_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteFilePromise:completionHandler:");
}

id objc_msgSend__detentWithContainerViewBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detentWithContainerViewBlock:");
}

id objc_msgSend__dimmingViewColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dimmingViewColor");
}

id objc_msgSend__dynamicColorWithColorsByTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dynamicColorWithColorsByTraitCollection:");
}

id objc_msgSend__filePromiseSortDescriptors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filePromiseSortDescriptors");
}

id objc_msgSend__handleLoadingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLoadingError:");
}

id objc_msgSend__initLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initLabel");
}

id objc_msgSend__internalMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_internalMode");
}

id objc_msgSend__invalidateWatchDogTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invalidateWatchDogTimer");
}

id objc_msgSend__isConnectedToCellNetwork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isConnectedToCellNetwork");
}

id objc_msgSend__largeDetent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_largeDetent");
}

id objc_msgSend__largeTitleAccessoryView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_largeTitleAccessoryView");
}

id objc_msgSend__logOutForBiometricsAuthFailure(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logOutForBiometricsAuthFailure");
}

id objc_msgSend__mediumDetent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mediumDetent");
}

id objc_msgSend__opaqueVCWithItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_opaqueVCWithItem:");
}

id objc_msgSend__performBiometricsEvaluationWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performBiometricsEvaluationWithContext:");
}

id objc_msgSend__performInteractiveLoginWithManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performInteractiveLoginWithManager:");
}

id objc_msgSend__refreshFeedbackContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshFeedbackContent");
}

id objc_msgSend__resizeAndScrollTableAfterTextChangeInTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resizeAndScrollTableAfterTextChangeInTextView:");
}

id objc_msgSend__separatorInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_separatorInset");
}

id objc_msgSend__setColorFilterEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setColorFilterEnabled:");
}

id objc_msgSend__setDetents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDetents:");
}

id objc_msgSend__setHeaderAndFooterViewsFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHeaderAndFooterViewsFloat:");
}

id objc_msgSend__setLargeTitleAccessoryView_alignToBaseline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLargeTitleAccessoryView:alignToBaseline:");
}

id objc_msgSend__setSectionContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSectionContentInset:");
}

id objc_msgSend__setShouldDismissWhenTappedOutside_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShouldDismissWhenTappedOutside:");
}

id objc_msgSend__showFormPickerWithSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showFormPickerWithSender:");
}

id objc_msgSend__showInternalUIIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showInternalUIIfNeeded");
}

id objc_msgSend__showSpinnerWithStatus_userInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSpinnerWithStatus:userInteractionEnabled:");
}

id objc_msgSend__startBiometricsTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startBiometricsTimer");
}

id objc_msgSend__stopSpinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopSpinner");
}

id objc_msgSend__tableView_canEditRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tableView:canEditRowAtIndexPath:");
}

id objc_msgSend__touchIDDidTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_touchIDDidTimeout");
}

id objc_msgSend__updateLabels(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLabels");
}

id objc_msgSend_abortAllSessions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "abortAllSessions");
}

id objc_msgSend_absoluteDimension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteDimension:");
}

id objc_msgSend_acceptButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptButton");
}

id objc_msgSend_accessibilityTraits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityTraits");
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "action");
}

id objc_msgSend_actionButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionButton");
}

id objc_msgSend_actionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionView");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_actionWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithURL:");
}

id objc_msgSend_active(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "active");
}

id objc_msgSend_activeInboxSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeInboxSource");
}

id objc_msgSend_activeManagedTeams(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeManagedTeams");
}

id objc_msgSend_activeTeams(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeTeams");
}

id objc_msgSend_activityIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityIndicator");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addActionWithTitle_image_actionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addActionWithTitle:image:actionHandler:");
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addArcWithCenter_radius_startAngle_endAngle_clockwise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArcWithCenter:radius:startAngle:endAngle:clockwise:");
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArrangedSubview:");
}

id objc_msgSend_addAttachmentCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttachmentCell");
}

id objc_msgSend_addAttachmentsController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttachmentsController");
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttribute:value:range:");
}

id objc_msgSend_addAttributes_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttributes:range:");
}

id objc_msgSend_addBlurView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBlurView");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraint:");
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraints:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIndex:");
}

id objc_msgSend_addKeyCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addKeyCommand:");
}

id objc_msgSend_addLayoutManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLayoutManager:");
}

id objc_msgSend_addLineToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLineToPoint:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsDidChangeNotificationObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsDidChangeNotificationObserver:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTimer:forMode:");
}

id objc_msgSend_addToHomeScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addToHomeScreen");
}

id objc_msgSend_addVisibleClickableLinkWithIdentifier_andUrlString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addVisibleClickableLinkWithIdentifier:andUrlString:");
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "address");
}

id objc_msgSend_alertControllerForDismissWithLaunchAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerForDismissWithLaunchAction:");
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_allChoices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allChoices");
}

id objc_msgSend_allDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allDevices");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeys");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allRowsForTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allRowsForTable:");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allValues");
}

id objc_msgSend_allowCellDefaultKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowCellDefaultKey");
}

id objc_msgSend_allowCellUploads(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowCellUploads");
}

id objc_msgSend_allowCellUploadsLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowCellUploadsLabel");
}

id objc_msgSend_allowUnsolicitedFollowup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowUnsolicitedFollowup");
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alpha");
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "andPredicateWithSubpredicates:");
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_annotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotation");
}

id objc_msgSend_announcement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announcement");
}

id objc_msgSend_answer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answer");
}

id objc_msgSend_answerDidChangeForQuestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerDidChangeForQuestion:");
}

id objc_msgSend_answerForQuestionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerForQuestionID:");
}

id objc_msgSend_answerTextView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerTextView");
}

id objc_msgSend_answerType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerType");
}

id objc_msgSend_answersDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answersDictionary");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyObject");
}

id objc_msgSend_api(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "api");
}

id objc_msgSend_app(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "app");
}

id objc_msgSend_appHandle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appHandle");
}

id objc_msgSend_appIconForChoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIconForChoice:");
}

id objc_msgSend_appStoryboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appStoryboard");
}

id objc_msgSend_appendItemsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendItemsWithIdentifiers:");
}

id objc_msgSend_appendItemsWithIdentifiers_intoSectionWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendItemsWithIdentifiers:intoSectionWithIdentifier:");
}

id objc_msgSend_appendSectionsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendSectionsWithIdentifiers:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appleSeedURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appleSeedURL");
}

id objc_msgSend_appleSeedWebsiteButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appleSeedWebsiteButton");
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationState");
}

id objc_msgSend_applySnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applySnapshot");
}

id objc_msgSend_applySnapshot_animatingDifferences_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applySnapshot:animatingDifferences:completion:");
}

id objc_msgSend_applySnapshotAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applySnapshotAnimated:");
}

id objc_msgSend_archiveVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archiveVersion");
}

id objc_msgSend_arguments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arguments");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_assignFeedback_toParticipant_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assignFeedback:toParticipant:completion:");
}

id objc_msgSend_assignee(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assignee");
}

id objc_msgSend_attachAnswersToQuestionsWithGivenData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachAnswersToQuestionsWithGivenData:");
}

id objc_msgSend_attachHandle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachHandle");
}

id objc_msgSend_attachToBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachToBarButtonItem:");
}

id objc_msgSend_attachedPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachedPath");
}

id objc_msgSend_attachmentDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachmentDisplayName");
}

id objc_msgSend_attachmentItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachmentItems");
}

id objc_msgSend_attachments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachments");
}

id objc_msgSend_attachmentsBeingDeletedCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachmentsBeingDeletedCount");
}

id objc_msgSend_attemptedSubmission(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptedSubmission");
}

id objc_msgSend_attributedStringRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedStringRepresentation");
}

id objc_msgSend_attributedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedText");
}

id objc_msgSend_attributesAtIndex_effectiveRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesAtIndex:effectiveRange:");
}

id objc_msgSend_authenticationContextForUsername_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticationContextForUsername:");
}

id objc_msgSend_autoLogOutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoLogOutIfNeeded");
}

id objc_msgSend_automaticallyFillInAllAnswers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "automaticallyFillInAllAnswers");
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColor");
}

id objc_msgSend_backgroundStartupWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundStartupWithCompletion:");
}

id objc_msgSend_batchEvaluationViewControllerWithUseNavigationStack_showsCloseButton_onDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchEvaluationViewControllerWithUseNavigationStack:showsCloseButton:onDismiss:");
}

id objc_msgSend_batchUICellWithCollectionView_indexPath_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchUICellWithCollectionView:indexPath:reuseIdentifier:");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeFirstResponder");
}

id objc_msgSend_beginBackgroundTaskWithName_expirationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginBackgroundTaskWithName:expirationHandler:");
}

id objc_msgSend_beginBugForTeam_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginBugForTeam:sender:");
}

id objc_msgSend_beginEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginEditing");
}

id objc_msgSend_beginEditingQuestion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginEditingQuestion");
}

id objc_msgSend_beginFeedbackForSurvey_contentItem_forTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginFeedbackForSurvey:contentItem:forTeam:");
}

id objc_msgSend_beginFeedbackForSurvey_forTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginFeedbackForSurvey:forTeam:");
}

id objc_msgSend_beginFeedbackForTeam_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginFeedbackForTeam:sender:");
}

id objc_msgSend_beginFeedbackWithDraft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginFeedbackWithDraft:");
}

id objc_msgSend_beginFeedbackWithDraftItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginFeedbackWithDraftItem:");
}

id objc_msgSend_beginFileDownloadForFilePromise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginFileDownloadForFilePromise:");
}

id objc_msgSend_beginObserving_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginObserving:");
}

id objc_msgSend_beginObservingAllUploadTasks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginObservingAllUploadTasks");
}

id objc_msgSend_beginObservingResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginObservingResponse:");
}

id objc_msgSend_beginPairingDevice_showUIBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginPairingDevice:showUIBlock:");
}

id objc_msgSend_beginRefreshing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginRefreshing");
}

id objc_msgSend_beginScanning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginScanning");
}

id objc_msgSend_beginSubmissionForFormResponse_withCollector_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSubmissionForFormResponse:withCollector:completion:");
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginUpdates");
}

id objc_msgSend_beginningOfDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginningOfDocument");
}

id objc_msgSend_bezierPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPath");
}

id objc_msgSend_bezierPathWithOvalInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithOvalInRect:");
}

id objc_msgSend_biometricsState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "biometricsState");
}

id objc_msgSend_biometricsWatchDog(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "biometricsWatchDog");
}

id objc_msgSend_blockLandscapeOrientations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockLandscapeOrientations:");
}

id objc_msgSend_blueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blueColor");
}

id objc_msgSend_blurView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blurView");
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldSystemFontOfSize:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_boundarySupplementaryItemWithLayoutSize_elementKind_alignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:");
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:attributes:context:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_bugForm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bugForm");
}

id objc_msgSend_bugFormEditorDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bugFormEditorDelegate");
}

id objc_msgSend_bugFormFromForDraftItem_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bugFormFromForDraftItem:withCompletion:");
}

id objc_msgSend_bugFormID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bugFormID");
}

id objc_msgSend_bugFormStubs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bugFormStubs");
}

id objc_msgSend_bugFormStubsForPickerWithPredicate_team_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bugFormStubsForPickerWithPredicate:team:");
}

id objc_msgSend_bugFormStubsMatchingBuild_forPlatform_withStubs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bugFormStubsMatchingBuild:forPlatform:withStubs:");
}

id objc_msgSend_build(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "build");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_bytesToUpload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bytesToUpload");
}

id objc_msgSend_bytesUploaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bytesUploaded");
}

id objc_msgSend_cachedCandidateStubsCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedCandidateStubsCount");
}

id objc_msgSend_callStackSymbols(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callStackSymbols");
}

id objc_msgSend_canCancelAttachmentCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canCancelAttachmentCollection:");
}

id objc_msgSend_canCloseFeedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canCloseFeedback");
}

id objc_msgSend_canDeleteAttachment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDeleteAttachment:");
}

id objc_msgSend_canDeleteFiles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDeleteFiles");
}

id objc_msgSend_canDemoteFeedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDemoteFeedback");
}

id objc_msgSend_canDismissPresentedController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDismissPresentedController:");
}

id objc_msgSend_canDisplayExtension_strict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDisplayExtension:strict:");
}

id objc_msgSend_canDisplayURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDisplayURL:");
}

id objc_msgSend_canDownloadFiles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDownloadFiles");
}

id objc_msgSend_canEvaluatePolicy_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canEvaluatePolicy:error:");
}

id objc_msgSend_canLaunchFeedbackDraft(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canLaunchFeedbackDraft");
}

id objc_msgSend_canLaunchSurveyDraft(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canLaunchSurveyDraft");
}

id objc_msgSend_canOpenURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canOpenURL:");
}

id objc_msgSend_canPerformPaste(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPerformPaste");
}

id objc_msgSend_canPreviewItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPreviewItem:");
}

id objc_msgSend_canPromoteFeedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPromoteFeedback");
}

id objc_msgSend_canReassignFeedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canReassignFeedback");
}

id objc_msgSend_canRemoveDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canRemoveDevice:");
}

id objc_msgSend_canResolveNeedsAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canResolveNeedsAction");
}

id objc_msgSend_canRespond(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canRespond");
}

id objc_msgSend_canSelect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSelect");
}

id objc_msgSend_canShowBatchUIWithAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canShowBatchUIWithAction:");
}

id objc_msgSend_canShowItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canShowItems");
}

id objc_msgSend_canStartGathering(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canStartGathering");
}

id objc_msgSend_canStartNewFeedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canStartNewFeedback");
}

id objc_msgSend_canTakeForTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canTakeForTeam:");
}

id objc_msgSend_cancelBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelBarButtonItem");
}

id objc_msgSend_candidateFormStubsPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "candidateFormStubsPredicate");
}

id objc_msgSend_cellConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellConfiguration");
}

id objc_msgSend_cellForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForItemAtIndexPath:");
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForRowAtIndexPath:");
}

id objc_msgSend_cellHeights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellHeights");
}

id objc_msgSend_changedValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changedValues");
}

id objc_msgSend_characterIndexForPoint_inTextContainer_fractionOfDistanceBetweenInsertionPoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:");
}

id objc_msgSend_characterLimit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterLimit");
}

id objc_msgSend_checkLegalAndSubmit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkLegalAndSubmit");
}

id objc_msgSend_checkResourceIsReachableAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkResourceIsReachableAndReturnError:");
}

id objc_msgSend_checkboxAnswersAtStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkboxAnswersAtStart");
}

id objc_msgSend_choice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "choice");
}

id objc_msgSend_choiceDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "choiceDelegate");
}

id objc_msgSend_choiceSetResolver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "choiceSetResolver");
}

id objc_msgSend_circleRectForFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "circleRectForFrame:");
}

id objc_msgSend_cleanupBugSessionDirectoriesForForm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupBugSessionDirectoriesForForm:");
}

id objc_msgSend_clearBlockingUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearBlockingUI");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_clearDetail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearDetail");
}

id objc_msgSend_clearLoginTaskQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearLoginTaskQueue");
}

id objc_msgSend_closeDraftAndDelete_withError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeDraftAndDelete:withError:completion:");
}

id objc_msgSend_closeFeedbackItems_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeFeedbackItems:completion:");
}

id objc_msgSend_closeFeedbackWithItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeFeedbackWithItem:");
}

id objc_msgSend_closePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closePath");
}

id objc_msgSend_closeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeWithCompletion:");
}

id objc_msgSend_closedLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closedLabel");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_collectionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionView");
}

id objc_msgSend_collectsFiles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectsFiles");
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_comesFromFeedbackd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "comesFromFeedbackd");
}

id objc_msgSend_commonInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commonInit");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completion");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_composeCellRegistration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "composeCellRegistration");
}

id objc_msgSend_composeFeedbackToolbarItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "composeFeedbackToolbarItem");
}

id objc_msgSend_configurationByApplyingConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationByApplyingConfiguration:");
}

id objc_msgSend_configurationPreferringMulticolor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationPreferringMulticolor");
}

id objc_msgSend_configurationWithActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithActions:");
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:");
}

id objc_msgSend_configurationWithTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithTextStyle:");
}

id objc_msgSend_configurationWithWeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithWeight:");
}

id objc_msgSend_configureActionsMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureActionsMenu");
}

id objc_msgSend_configureAssigneeForContentItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureAssigneeForContentItem:");
}

id objc_msgSend_configureCollectionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureCollectionView");
}

id objc_msgSend_configureForAppleFeedbackWithFollowup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureForAppleFeedbackWithFollowup:");
}

id objc_msgSend_configureForContentItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureForContentItem:");
}

id objc_msgSend_configureForFollowup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureForFollowup:");
}

id objc_msgSend_configureForTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureForTeam:");
}

id objc_msgSend_configureForTeam_disclosesMoreTeams_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureForTeam:disclosesMoreTeams:");
}

id objc_msgSend_configureKeyboardShortcuts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureKeyboardShortcuts");
}

id objc_msgSend_configureUserCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureUserCell");
}

id objc_msgSend_configureWithContentItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithContentItem:");
}

id objc_msgSend_configureWithInbox_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithInbox:");
}

id objc_msgSend_configuredDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configuredDevices");
}

id objc_msgSend_connectionDidChangeToCellular(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionDidChangeToCellular");
}

id objc_msgSend_connectionDidChangeToWifi(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionDidChangeToWifi");
}

id objc_msgSend_constant(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constant");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintsWithVisualFormat:options:metrics:views:");
}

id objc_msgSend_contactImageForEmailAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactImageForEmailAddress:");
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "container");
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerView");
}

id objc_msgSend_containsAnyAdditionsOrRemovals(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsAnyAdditionsOrRemovals");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "content");
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInset");
}

id objc_msgSend_contentInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInsets");
}

id objc_msgSend_contentItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentItem");
}

id objc_msgSend_contentItemObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentItemObserver");
}

id objc_msgSend_contentItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentItems");
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentOffset");
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentSize");
}

id objc_msgSend_contentUnavailableLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentUnavailableLabel");
}

id objc_msgSend_contentUnavailableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentUnavailableView");
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentView");
}

id objc_msgSend_contents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contents");
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context");
}

id objc_msgSend_contextualActionWithStyle_title_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextualActionWithStyle:title:handler:");
}

id objc_msgSend_controllerForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerForItem:");
}

id objc_msgSend_controllerForUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerForUrl:");
}

id objc_msgSend_controllerForUrl_useFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerForUrl:useFallback:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyItemAtURL:toURL:error:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countForFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForFetchRequest:error:");
}

id objc_msgSend_csvRepresentationForTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csvRepresentationForTable:");
}

id objc_msgSend_currDetailIndexPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currDetailIndexPath");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentDeviceAttachmentManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDeviceAttachmentManager");
}

id objc_msgSend_currentDeviceBugSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDeviceBugSession");
}

id objc_msgSend_currentGroupedDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentGroupedDevice");
}

id objc_msgSend_currentIDMSEnvironmentMatchesCurrentFBKSEnvironment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentIDMSEnvironmentMatchesCurrentFBKSEnvironment");
}

id objc_msgSend_currentLegalVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLegalVersion");
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLocale");
}

id objc_msgSend_currentNotificationCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentNotificationCenter");
}

id objc_msgSend_currentReachabilityStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentReachabilityStatus");
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentRunLoop");
}

id objc_msgSend_currentTeam(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTeam");
}

id objc_msgSend_currentURLActionActivity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentURLActionActivity");
}

id objc_msgSend_currentUser(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentUser");
}

id objc_msgSend_currentiOSLegalDoc(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentiOSLegalDoc");
}

id objc_msgSend_customDetentHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customDetentHeight");
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "data");
}

id objc_msgSend_dataChangeObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataChangeObserver");
}

id objc_msgSend_dataDetectorWithTypes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataDetectorWithTypes:error:");
}

id objc_msgSend_databaseReader(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseReader");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "date");
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromString:");
}

id objc_msgSend_dateLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateLabel");
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dbFile(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dbFile");
}

id objc_msgSend_dbUrl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dbUrl");
}

id objc_msgSend_dbUrlForMetadataUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dbUrlForMetadataUrl:");
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugDescription");
}

id objc_msgSend_debugDetails(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugDetails");
}

id objc_msgSend_debugLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugLabel");
}

id objc_msgSend_declineButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineButton");
}

id objc_msgSend_ded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ded");
}

id objc_msgSend_dedSharingDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dedSharingDevice");
}

id objc_msgSend_ded_findWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ded_findWithBlock:");
}

id objc_msgSend_ded_selectItemsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ded_selectItemsPassingTest:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultTeam(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultTeam");
}

id objc_msgSend_delayedUrlAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delayedUrlAction");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_deleteAllDraftDirectories(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAllDraftDirectories");
}

id objc_msgSend_deleteCharactersInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCharactersInRange:");
}

id objc_msgSend_deleteDraftFromContentItem_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteDraftFromContentItem:completion:");
}

id objc_msgSend_deleteDraftFromContentItem_dismissViewOnCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteDraftFromContentItem:dismissViewOnCompletion:");
}

id objc_msgSend_deleteFilePromiseWithUUID_object_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteFilePromiseWithUUID:object:completion:");
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_deleteStaleAttachmentLegalTextEntries(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteStaleAttachmentLegalTextEntries");
}

id objc_msgSend_deletedObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deletedObjects");
}

id objc_msgSend_demoteFeedback_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "demoteFeedback:completion:");
}

id objc_msgSend_dequeueConfiguredReusableCellWithRegistration_forIndexPath_item_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:");
}

id objc_msgSend_dequeueConfiguredReusableSupplementaryViewWithRegistration_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath:");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_deselectItemAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deselectItemAtIndexPath:animated:");
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deselectRowAtIndexPath:animated:");
}

id objc_msgSend_destinationViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationViewController");
}

id objc_msgSend_destroyDraft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destroyDraft:");
}

id objc_msgSend_destroyItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destroyItemAtIndexPath:");
}

id objc_msgSend_destructiveBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destructiveBarButtonItem");
}

id objc_msgSend_detailLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailLabel");
}

id objc_msgSend_detailLabelTrailingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailLabelTrailingConstraint");
}

id objc_msgSend_detailLabelTrailingConstraintInitial(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailLabelTrailingConstraintInitial");
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailTextLabel");
}

id objc_msgSend_detailedItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailedItem");
}

id objc_msgSend_detentBehavior(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detentBehavior");
}

id objc_msgSend_detentForCustomHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detentForCustomHeight:");
}

id objc_msgSend_detentForPreferredContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detentForPreferredContentSize");
}

id objc_msgSend_developerURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "developerURL");
}

id objc_msgSend_developerWebsiteButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "developerWebsiteButton");
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "device");
}

id objc_msgSend_deviceChoices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceChoices");
}

id objc_msgSend_deviceChoicesController_didChooseDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceChoicesController:didChooseDevices:");
}

id objc_msgSend_deviceChoicesControllerDidCancelWithController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceChoicesControllerDidCancelWithController:");
}

id objc_msgSend_deviceClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceClass");
}

id objc_msgSend_deviceGroups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceGroups");
}

id objc_msgSend_deviceIcon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIcon");
}

id objc_msgSend_deviceImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceImage");
}

id objc_msgSend_deviceSupportsFaceID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceSupportsFaceID");
}

id objc_msgSend_devicesController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devicesController");
}

id objc_msgSend_devicesId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devicesId");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didChangeAnswerToQuestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeAnswerToQuestion:");
}

id objc_msgSend_didChangeDeviceParingWithDeviceAdded_removed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeDeviceParingWithDeviceAdded:removed:");
}

id objc_msgSend_didFetchFormItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFetchFormItems");
}

id objc_msgSend_didFetchFormStubs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFetchFormStubs");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didPinPairWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPinPairWithDevice:");
}

id objc_msgSend_didPressChangeBugForm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPressChangeBugForm:");
}

id objc_msgSend_didRefreshFormStubsNotificationObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didRefreshFormStubsNotificationObserver");
}

id objc_msgSend_didReloadApp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReloadApp");
}

id objc_msgSend_didResetWarnings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didResetWarnings:");
}

id objc_msgSend_didTapAttachment_indexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTapAttachment:indexPath:");
}

id objc_msgSend_didTapCloseFeedbackWithItem_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTapCloseFeedbackWithItem:atIndexPath:");
}

id objc_msgSend_didTapDevice_indexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTapDevice:indexPath:");
}

id objc_msgSend_didTapDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTapDone:");
}

id objc_msgSend_didTapForgetDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTapForgetDevice:");
}

id objc_msgSend_didTapSignOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTapSignOut:");
}

id objc_msgSend_diffableDataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diffableDataSource");
}

id objc_msgSend_diffableIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diffableIdentifier");
}

id objc_msgSend_digits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "digits");
}

id objc_msgSend_dimmingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dimmingView");
}

id objc_msgSend_directoryList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryList");
}

id objc_msgSend_dismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismiss:");
}

id objc_msgSend_dismissSecondaryOrShowEmptyViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissSecondaryOrShowEmptyViewControllerAnimated:");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayName");
}

id objc_msgSend_displayNonParticipant(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayNonParticipant");
}

id objc_msgSend_displaySortDescriptors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displaySortDescriptors");
}

id objc_msgSend_displayText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayText");
}

id objc_msgSend_displayText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayText:");
}

id objc_msgSend_displayTextForAnswer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayTextForAnswer:");
}

id objc_msgSend_displayTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayTitle");
}

id objc_msgSend_displayType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayType");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domain");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_downloadState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadState");
}

id objc_msgSend_draftController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "draftController");
}

id objc_msgSend_draftDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "draftDevices");
}

id objc_msgSend_draftResponsesContentItemsForTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "draftResponsesContentItemsForTeam:");
}

id objc_msgSend_draftingController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "draftingController");
}

id objc_msgSend_drainAndPresentConsentsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drainAndPresentConsentsWithCompletion:");
}

id objc_msgSend_editBarButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editBarButton");
}

id objc_msgSend_editButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editButtonItem");
}

id objc_msgSend_editorDidDismissForQuestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editorDidDismissForQuestion:");
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithStyle:");
}

id objc_msgSend_emailAddress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emailAddress");
}

id objc_msgSend_endBackgroundTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endBackgroundTask:");
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endDate");
}

id objc_msgSend_endEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditing");
}

id objc_msgSend_endEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditing:");
}

id objc_msgSend_endEditingQuestion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditingQuestion");
}

id objc_msgSend_endRefreshing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endRefreshing");
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endUpdates");
}

id objc_msgSend_enhancedLoggingInbox(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enhancedLoggingInbox");
}

id objc_msgSend_enteringDetail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enteringDetail");
}

id objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:");
}

id objc_msgSend_enumerateMatchesInString_options_range_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateMatchesInString:options:range:usingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateSubstringsInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateSubstringsInRange:options:usingBlock:");
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "environment");
}

id objc_msgSend_environmentDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "environmentDescription");
}

id objc_msgSend_errorArrow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorArrow");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_estimatedDimension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "estimatedDimension:");
}

id objc_msgSend_estimatedRowHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "estimatedRowHeight");
}

id objc_msgSend_evaluateJavaScript_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateJavaScript:completionHandler:");
}

id objc_msgSend_evaluatePolicy_options_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluatePolicy:options:reply:");
}

id objc_msgSend_evaluateSelectionWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateSelectionWithValue:");
}

id objc_msgSend_evaluateSelectionWithValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateSelectionWithValues:");
}

id objc_msgSend_evaluateWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateWithObject:");
}

id objc_msgSend_eventCountForCurrentPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventCountForCurrentPage");
}

id objc_msgSend_eventMessage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventMessage");
}

id objc_msgSend_exactMatchFormStub(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exactMatchFormStub");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_exitCaptiveModeRemovingFromHomeScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exitCaptiveModeRemovingFromHomeScreen:");
}

id objc_msgSend_extensionIsTextFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionIsTextFile:");
}

id objc_msgSend_extensions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensions");
}

id objc_msgSend_fallbackToOpaqueViewer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fallbackToOpaqueViewer");
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "familyName");
}

id objc_msgSend_fauxAccessoryView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fauxAccessoryView");
}

id objc_msgSend_fbaDataObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fbaDataObservers");
}

id objc_msgSend_fbaMainStoryboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fbaMainStoryboard");
}

id objc_msgSend_fbaNameLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fbaNameLabel");
}

id objc_msgSend_fba_hasValidStartAndEndDates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fba_hasValidStartAndEndDates");
}

id objc_msgSend_fba_toString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fba_toString");
}

id objc_msgSend_feedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedback");
}

id objc_msgSend_feedbackFollowups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedbackFollowups");
}

id objc_msgSend_feedbackIDAndTitleString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedbackIDAndTitleString");
}

id objc_msgSend_feedbackIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedbackIDString");
}

id objc_msgSend_fetchErrorBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchErrorBlock");
}

id objc_msgSend_fetchFeedbackStatusForFeedback_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchFeedbackStatusForFeedback:completion:");
}

id objc_msgSend_fetchFormItemByTat_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchFormItemByTat:completion:");
}

id objc_msgSend_fetchFromStartDate_toEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchFromStartDate:toEndDate:");
}

id objc_msgSend_fetchIconImageDataForScale_completionCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchIconImageDataForScale:completionCompletion:");
}

id objc_msgSend_fetchRequesForInboxItemsInTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequesForInboxItemsInTeam:");
}

id objc_msgSend_fetchRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequest");
}

id objc_msgSend_fetchWatchdog(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchWatchdog");
}

id objc_msgSend_ffu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ffu");
}

id objc_msgSend_ffuID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ffuID");
}

id objc_msgSend_fileDownloadInProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileDownloadInProgress");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileNameLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileNameLabel");
}

id objc_msgSend_filePromiseSortDescriptors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filePromiseSortDescriptors");
}

id objc_msgSend_filePromiseStubs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filePromiseStubs");
}

id objc_msgSend_filePromises(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filePromises");
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileSize");
}

id objc_msgSend_fileSizeLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileSizeLabel");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_filename(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filename");
}

id objc_msgSend_filesBeingAttachedCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filesBeingAttachedCount");
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fill");
}

id objc_msgSend_filterContentForFilterManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterContentForFilterManager:");
}

id objc_msgSend_filterGroupsForAll(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterGroupsForAll");
}

id objc_msgSend_filterGroupsForTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterGroupsForTeam:");
}

id objc_msgSend_filterManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterManager");
}

id objc_msgSend_filterPlatform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterPlatform");
}

id objc_msgSend_filterSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterSource");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_filteredInboxItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredInboxItems");
}

id objc_msgSend_findExactMatchFormStubAndTeamWithFormStubs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findExactMatchFormStubAndTeamWithFormStubs:");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_firstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstResponder");
}

id objc_msgSend_fixedSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixedSpacing:");
}

id objc_msgSend_flashScrollIndicators(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flashScrollIndicators");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatValue");
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "font");
}

id objc_msgSend_footerRegistration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footerRegistration");
}

id objc_msgSend_formID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formID");
}

id objc_msgSend_formIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formIdentifier");
}

id objc_msgSend_formResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formResponse");
}

id objc_msgSend_formResponseStub(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formResponseStub");
}

id objc_msgSend_formStub(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formStub");
}

id objc_msgSend_formTat(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formTat");
}

id objc_msgSend_formattedMailboxSortDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedMailboxSortDate");
}

id objc_msgSend_forms(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forms");
}

id objc_msgSend_foundCorruptDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "foundCorruptDate");
}

id objc_msgSend_fractionalHeightDimension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fractionalHeightDimension:");
}

id objc_msgSend_fractionalWidthDimension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fractionalWidthDimension:");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_frameOfPresentedViewInContainerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameOfPresentedViewInContainerView");
}

id objc_msgSend_fullAnnouncementHTML(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullAnnouncementHTML");
}

id objc_msgSend_fullHTMLContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullHTMLContent");
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullName");
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_gatherAllMissingRequirementsWithAnswers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gatherAllMissingRequirementsWithAnswers:");
}

id objc_msgSend_gatherAttachment_answers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gatherAttachment:answers:");
}

id objc_msgSend_gatherFilesWithDedExtension_answers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gatherFilesWithDedExtension:answers:");
}

id objc_msgSend_generalPasteboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generalPasteboard");
}

id objc_msgSend_getAllContentForFeedback_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAllContentForFeedback:completion:");
}

id objc_msgSend_getFeedbackForContentItem_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getFeedbackForContentItem:completion:");
}

id objc_msgSend_getFeedbackForContentItem_forceRefresh_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getFeedbackForContentItem:forceRefresh:completion:");
}

id objc_msgSend_getFileDownloadURLForFilePromise_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getFileDownloadURLForFilePromise:completion:");
}

id objc_msgSend_getPathToScrollTo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPathToScrollTo");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "givenName");
}

id objc_msgSend_gotDelegateCallbackInLastFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gotDelegateCallbackInLastFetch");
}

id objc_msgSend_group(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "group");
}

id objc_msgSend_groupedFooterConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupedFooterConfiguration");
}

id objc_msgSend_handleDeviceTapWithDevice_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeviceTapWithDevice:inSection:");
}

id objc_msgSend_handleInteractiveLoginResultWithLoginManager_pendingUI_startupFailures_skipBiometrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInteractiveLoginResultWithLoginManager:pendingUI:startupFailures:skipBiometrics:");
}

id objc_msgSend_handleLaunchAction_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLaunchAction:completion:");
}

id objc_msgSend_handleModelChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleModelChanges:");
}

id objc_msgSend_handlesLogin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlesLogin");
}

id objc_msgSend_hasAttachments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAttachments");
}

id objc_msgSend_hasAttachmentsCollecting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAttachmentsCollecting");
}

id objc_msgSend_hasCandidateStubs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCandidateStubs");
}

id objc_msgSend_hasContentItemsToShow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasContentItemsToShow");
}

id objc_msgSend_hasFileArea(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasFileArea");
}

id objc_msgSend_hasFinishedFirstLoad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasFinishedFirstLoad");
}

id objc_msgSend_hasForms(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasForms");
}

id objc_msgSend_hasGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasGroup");
}

id objc_msgSend_hasIps_dot_synced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasIps_dot_synced:");
}

id objc_msgSend_hasKeyboardFocus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasKeyboardFocus");
}

id objc_msgSend_hasLoadedFormItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasLoadedFormItems");
}

id objc_msgSend_hasLog_dot_number_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasLog_dot_number:");
}

id objc_msgSend_hasLoggingSessions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasLoggingSessions");
}

id objc_msgSend_hasManagedTeams(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasManagedTeams");
}

id objc_msgSend_hasManyManagedTeams(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasManyManagedTeams");
}

id objc_msgSend_hasMoreLogs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasMoreLogs");
}

id objc_msgSend_hasOpenDraft(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasOpenDraft");
}

id objc_msgSend_hasOpenModalFeedbackController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasOpenModalFeedbackController");
}

id objc_msgSend_hasPlaceholder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPlaceholder");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasUnmetRequirementAttachments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasUnmetRequirementAttachments");
}

id objc_msgSend_hasVisibleFiles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasVisibleFiles");
}

id objc_msgSend_hashingKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashingKey");
}

id objc_msgSend_headerRegistration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerRegistration");
}

id objc_msgSend_height(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "height");
}

id objc_msgSend_heightNeededForContentWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightNeededForContentWidth:");
}

id objc_msgSend_hide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hide");
}

id objc_msgSend_hideAccessoryView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideAccessoryView");
}

id objc_msgSend_hideAllInboxes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideAllInboxes");
}

id objc_msgSend_hideAttachmentDeletionSpinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideAttachmentDeletionSpinner");
}

id objc_msgSend_hideContentUnavailableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideContentUnavailableView");
}

id objc_msgSend_hideLoadingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideLoadingView");
}

id objc_msgSend_hideQuestions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideQuestions");
}

id objc_msgSend_hideSpinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideSpinner");
}

id objc_msgSend_hideTouchID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideTouchID");
}

id objc_msgSend_horizontalGroupWithLayoutSize_subitem_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalGroupWithLayoutSize:subitem:count:");
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalSizeClass");
}

id objc_msgSend_humansCanReadFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "humansCanReadFile:");
}

id objc_msgSend_icon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "icon");
}

id objc_msgSend_iconConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconConfiguration");
}

id objc_msgSend_iconForFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconForFileName:");
}

id objc_msgSend_iconForRequirement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconForRequirement");
}

id objc_msgSend_iconSystemImageName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconSystemImageName");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_identifierForVisibleQuestion_hasAttemptedSubmission_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifierForVisibleQuestion:hasAttemptedSubmission:");
}

id objc_msgSend_imageForImageDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForImageDescriptor:");
}

id objc_msgSend_imageForNeedsAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForNeedsAction");
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:");
}

id objc_msgSend_imageProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageProperties");
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageView");
}

id objc_msgSend_imageWithCGImage_scale_orientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:scale:orientation:");
}

id objc_msgSend_imageWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithConfiguration:");
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithData:");
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_inbox(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inbox");
}

id objc_msgSend_inboxItemsForTeam_withSortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inboxItemsForTeam:withSortDescriptors:");
}

id objc_msgSend_inboxLiteMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inboxLiteMode");
}

id objc_msgSend_inboxes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inboxes");
}

id objc_msgSend_indeterminateSpinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indeterminateSpinner");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexPathForItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForItemIdentifier:");
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForRow:inSection:");
}

id objc_msgSend_indexPathForSelectedRow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForSelectedRow");
}

id objc_msgSend_indexPathsForSelectedItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathsForSelectedItems");
}

id objc_msgSend_indexPathsForSelectedRows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathsForSelectedRows");
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoDictionary");
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityIndicatorStyle:");
}

id objc_msgSend_initWithActivityItems_applicationActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityItems:applicationActivities:");
}

id objc_msgSend_initWithAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAppearance:");
}

id objc_msgSend_initWithArchive_pageSize_pageCompletion_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArchive:pageSize:pageCompletion:error:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithArray_copyItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:copyItems:");
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:target:action:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithCollectionView_cellProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCollectionView:cellProvider:");
}

id objc_msgSend_initWithCollectorIdentifier_deviceUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCollectorIdentifier:deviceUUID:");
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCustomView:");
}

id objc_msgSend_initWithDatabaseFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseFile:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevice:completion:");
}

id objc_msgSend_initWithDeviceManager_delegate_filerForm_pendingFileUrls_pendingURLExtensions_draftDeviceIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceManager:delegate:filerForm:pendingFileUrls:pendingURLExtensions:draftDeviceIds:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffect:");
}

id objc_msgSend_initWithFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFile:");
}

id objc_msgSend_initWithFilterGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFilterGroups:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:configuration:");
}

id objc_msgSend_initWithFrame_title_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:title:style:");
}

id objc_msgSend_initWithGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroup:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:");
}

id objc_msgSend_initWithImage_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:style:target:action:");
}

id objc_msgSend_initWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocaleIdentifier:");
}

id objc_msgSend_initWithPresentedViewController_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPresentedViewController:presentingViewController:");
}

id objc_msgSend_initWithQuestionGroup_questionAnswerPairs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQuestionGroup:questionAnswerPairs:");
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootViewController:");
}

id objc_msgSend_initWithSearchResultsController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSearchResultsController:");
}

id objc_msgSend_initWithSectionProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSectionProvider:");
}

id objc_msgSend_initWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:");
}

id objc_msgSend_initWithSize_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:scale:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:attributes:");
}

id objc_msgSend_initWithStubsPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStubsPredicate:");
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:");
}

id objc_msgSend_initWithStyle_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:reuseIdentifier:");
}

id objc_msgSend_initWithTableView_cellProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTableView:cellProvider:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTitle_image_actionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:image:actionHandler:");
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:style:target:action:");
}

id objc_msgSend_initWithTitle_subtitle_actions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:subtitle:actions:");
}

id objc_msgSend_initWithTitle_subtitle_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:subtitle:object:");
}

id objc_msgSend_initWithTitle_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:type:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithURL_options_documentAttributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:options:documentAttributes:error:");
}

id objc_msgSend_initWithUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUrl:");
}

id objc_msgSend_initializeWithFileName_requirement_font_textColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeWithFileName:requirement:font:textColor:");
}

id objc_msgSend_insertArrangedSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertArrangedSubview:atIndex:");
}

id objc_msgSend_insertedObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertedObjects");
}

id objc_msgSend_inspectFBKPairing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inspectFBKPairing");
}

id objc_msgSend_instantiateViewControllerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instantiateViewControllerWithIdentifier:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerForKey:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_interactionControllerWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactionControllerWithURL:");
}

id objc_msgSend_interactiveStartupWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactiveStartupWithCompletion:");
}

id objc_msgSend_interactiveStartupWithLaunchAction_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactiveStartupWithLaunchAction:completion:");
}

id objc_msgSend_intersectsIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectsIndexesInRange:");
}

id objc_msgSend_intersectsSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectsSet:");
}

id objc_msgSend_invalidQuestionIDs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidQuestionIDs");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate");
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isActive");
}

id objc_msgSend_isAnswerExpectedForQuestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnswerExpectedForQuestion:");
}

id objc_msgSend_isApplyingSnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isApplyingSnapshot");
}

id objc_msgSend_isBatchUIEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBatchUIEnabled");
}

id objc_msgSend_isCaptive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCaptive");
}

id objc_msgSend_isCaptiveModeEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCaptiveModeEnabled");
}

id objc_msgSend_isCaptiveModeEnabledForLaunchAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCaptiveModeEnabledForLaunchAction:");
}

id objc_msgSend_isClosedFeedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isClosedFeedback");
}

id objc_msgSend_isCollapsed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCollapsed");
}

id objc_msgSend_isComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isComplete");
}

id objc_msgSend_isConnectedToCellNetwork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConnectedToCellNetwork");
}

id objc_msgSend_isCurrentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentDevice");
}

id objc_msgSend_isCurrentPageComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentPageComplete");
}

id objc_msgSend_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDirectory:");
}

id objc_msgSend_isDirty(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDirty");
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEditing");
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnabled");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToAttributedString:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isFBAErrorWithCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFBAErrorWithCode:");
}

id objc_msgSend_isFBKPaired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFBKPaired");
}

id objc_msgSend_isFFUAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFFUAction");
}

id objc_msgSend_isFileCollectionGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFileCollectionGroup");
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHidden");
}

id objc_msgSend_isLoading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLoading");
}

id objc_msgSend_isLocal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocal");
}

id objc_msgSend_isMultiSelect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMultiSelect");
}

id objc_msgSend_isOn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOn");
}

id objc_msgSend_isOrphaned(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOrphaned");
}

id objc_msgSend_isPresentingFullScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingFullScreen");
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReady");
}

id objc_msgSend_isReadyToDisplayContents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReadyToDisplayContents");
}

id objc_msgSend_isRefreshingForms(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRefreshingForms");
}

id objc_msgSend_isReloadingContentAndFormItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReloadingContentAndFormItems");
}

id objc_msgSend_isShowContentItemAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowContentItemAction");
}

id objc_msgSend_isStub(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStub");
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubclassOfClass:");
}

id objc_msgSend_isSubmitted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubmitted");
}

id objc_msgSend_isSubmitting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubmitting");
}

id objc_msgSend_isToolbarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isToolbarHidden");
}

id objc_msgSend_isUpdatingTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUpdatingTable");
}

id objc_msgSend_isUploadingFiles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUploadingFiles");
}

id objc_msgSend_isValidated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidated");
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isViewLoaded");
}

id objc_msgSend_isVisibleToDED(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVisibleToDED");
}

id objc_msgSend_isWarningsOn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWarningsOn");
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "item");
}

id objc_msgSend_itemForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemForIndexPath:");
}

id objc_msgSend_itemFromDraft(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemFromDraft");
}

id objc_msgSend_itemID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemID");
}

id objc_msgSend_itemIdentifierForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemIdentifierForIndexPath:");
}

id objc_msgSend_itemSubtitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemSubtitle");
}

id objc_msgSend_itemTitleColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemTitleColor");
}

id objc_msgSend_itemType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemType");
}

id objc_msgSend_itemWithLayoutSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemWithLayoutSize:");
}

id objc_msgSend_itemWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemWithURL:");
}

id objc_msgSend_keyCommandWithInput_modifierFlags_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyCommandWithInput:modifierFlags:action:");
}

id objc_msgSend_keyWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyWindow");
}

id objc_msgSend_keyboardHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyboardHeight");
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelColor");
}

id objc_msgSend_lastFetchReturnedZeroEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastFetchReturnedZeroEvents");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPathComponent");
}

id objc_msgSend_lastStage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastStage");
}

id objc_msgSend_lastUsedLAContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastUsedLAContext");
}

id objc_msgSend_launchAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchAction");
}

id objc_msgSend_launchFeedbackDraftWithUrlAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchFeedbackDraftWithUrlAction:");
}

id objc_msgSend_launchInboxWithLaunchAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchInboxWithLaunchAction:");
}

id objc_msgSend_launchNewDraftViewControllerWithBugFormStub_draftItem_surveyBugForm_launchAction_team_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchNewDraftViewControllerWithBugFormStub:draftItem:surveyBugForm:launchAction:team:completion:");
}

id objc_msgSend_launchSurveyWithUrlAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchSurveyWithUrlAction:");
}

id objc_msgSend_launchesBatchUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchesBatchUI");
}

id objc_msgSend_launchesFeedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchesFeedback");
}

id objc_msgSend_launchesInbox(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchesInbox");
}

id objc_msgSend_launchesSurvey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchesSurvey");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutIfNeeded");
}

id objc_msgSend_layoutManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutManager");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingAnchor");
}

id objc_msgSend_leftBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftBarButtonItem");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_lightGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lightGrayColor");
}

id objc_msgSend_lineBreakMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lineBreakMode");
}

id objc_msgSend_linkedAttributedFromString_withFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkedAttributedFromString:withFont:");
}

id objc_msgSend_linkedAttributedFromString_withFont_textColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkedAttributedFromString:withFont:textColor:");
}

id objc_msgSend_listCellRegistration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listCellRegistration");
}

id objc_msgSend_listDiagnosticExtensionsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listDiagnosticExtensionsWithCompletion:");
}

id objc_msgSend_loadFormResponseFromContentItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadFormResponseFromContentItem:");
}

id objc_msgSend_loadHTMLString_baseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadHTMLString:baseURL:");
}

id objc_msgSend_loadNewResponseForBugForm_withTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadNewResponseForBugForm:withTeam:");
}

id objc_msgSend_loadNewResponseForBugFormStub_forTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadNewResponseForBugFormStub:forTeam:");
}

id objc_msgSend_loadNewResponseForBugFormStub_withTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadNewResponseForBugFormStub:withTeam:");
}

id objc_msgSend_loadNibNamed_owner_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadNibNamed:owner:options:");
}

id objc_msgSend_loadRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadRequest:");
}

id objc_msgSend_loadResponseForFeedbackObject_withTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadResponseForFeedbackObject:withTeam:");
}

id objc_msgSend_loadingConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadingConfiguration");
}

id objc_msgSend_localSubmissionStage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localSubmissionStage");
}

id objc_msgSend_localizedCaseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCaseInsensitiveCompare:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescription");
}

id objc_msgSend_localizedDownloadErrorString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDownloadErrorString");
}

id objc_msgSend_localizedErrorStringForMaybeFilePromise_downloadPermission_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedErrorStringForMaybeFilePromise:downloadPermission:");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationInView:");
}

id objc_msgSend_log(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "log");
}

id objc_msgSend_logArchivePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logArchivePath");
}

id objc_msgSend_logAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logAtIndex:");
}

id objc_msgSend_logLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logLabel");
}

id objc_msgSend_logOut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logOut");
}

id objc_msgSend_logOutIfNeededAndRun_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logOutIfNeededAndRun:");
}

id objc_msgSend_logSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSource");
}

id objc_msgSend_logURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logURL");
}

id objc_msgSend_loggerLib(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loggerLib");
}

id objc_msgSend_loggerLibWithArchive_pageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loggerLibWithArchive:pageSize:");
}

id objc_msgSend_loginManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loginManager");
}

id objc_msgSend_loginState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loginState");
}

id objc_msgSend_loginWithUsername_authenticationResults_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loginWithUsername:authenticationResults:completion:");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_machTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "machTimestamp");
}

id objc_msgSend_mailboxSortDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mailboxSortDate");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mainLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainLabel");
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainQueue");
}

id objc_msgSend_mainQueueContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainQueueContext");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_mainViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainViewController");
}

id objc_msgSend_makeCompositionalLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeCompositionalLayout");
}

id objc_msgSend_makeSnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeSnapshot");
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectContext");
}

id objc_msgSend_managedTeams(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedTeams");
}

id objc_msgSend_markAnnouncementRead_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markAnnouncementRead:completion:");
}

id objc_msgSend_matcherPredicates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matcherPredicates");
}

id objc_msgSend_matchesInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchesInString:options:range:");
}

id objc_msgSend_maybeAttachmentWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maybeAttachmentWithIdentifier:");
}

id objc_msgSend_maybeDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maybeDeviceWithIdentifier:");
}

id objc_msgSend_menuForController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuForController:");
}

id objc_msgSend_metricsForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsForTextStyle:");
}

id objc_msgSend_modelCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelCache");
}

id objc_msgSend_monogramAvatarImageForPreferredName_familyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monogramAvatarImageForPreferredName:familyName:");
}

id objc_msgSend_monospacedSystemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monospacedSystemFontOfSize:weight:");
}

id objc_msgSend_moveToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveToPoint:");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_myBetaDevicesLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "myBetaDevicesLabel");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_nameLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameLabel");
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationBar");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationController");
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationItem");
}

id objc_msgSend_navigationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationType");
}

id objc_msgSend_needsAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsAction");
}

id objc_msgSend_needsActionTintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsActionTintColor");
}

id objc_msgSend_needsPairing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsPairing");
}

id objc_msgSend_negativeChoice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "negativeChoice");
}

id objc_msgSend_netMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "netMonitor");
}

id objc_msgSend_networkStatusForFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkStatusForFlags:");
}

id objc_msgSend_newFeedbackButtonState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newFeedbackButtonState");
}

id objc_msgSend_newLAContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newLAContext");
}

id objc_msgSend_newURLActionActivity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newURLActionActivity");
}

id objc_msgSend_nextPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextPage");
}

id objc_msgSend_nextPageForReal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextPageForReal");
}

id objc_msgSend_nibWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nibWithNibName:bundle:");
}

id objc_msgSend_noChoiceText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noChoiceText");
}

id objc_msgSend_notConfiguredDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notConfiguredDevice");
}

id objc_msgSend_notConfiguredDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notConfiguredDevices");
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notification");
}

id objc_msgSend_notificationCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationCenter");
}

id objc_msgSend_notificationObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationObserver");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "null");
}

id objc_msgSend_numberOfEmptyFetches(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfEmptyFetches");
}

id objc_msgSend_numberOfEventsInLastFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfEventsInLastFetch");
}

id objc_msgSend_numberOfLines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfLines");
}

id objc_msgSend_numberOfLogs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfLogs");
}

id objc_msgSend_numberOfMatchesInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfMatchesInString:options:range:");
}

id objc_msgSend_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRowsInSection:");
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfSections");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_objc_preferredAlertStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objc_preferredAlertStyle");
}

id objc_msgSend_objc_truncate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objc_truncate:");
}

id objc_msgSend_objc_updateWithSeparatorSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objc_updateWithSeparatorSpacing:");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "object");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForInfoDictionaryKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForInfoDictionaryKey:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_observedTask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observedTask");
}

id objc_msgSend_observedUploadTasks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observedUploadTasks");
}

id objc_msgSend_observerTokens(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observerTokens");
}

id objc_msgSend_oldestEventMachTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldestEventMachTime");
}

id objc_msgSend_oldestEventTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldestEventTimestamp");
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:options:completionHandler:");
}

id objc_msgSend_orientationMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orientationMask");
}

id objc_msgSend_originator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originator");
}

id objc_msgSend_orphanBadgeTintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orphanBadgeTintColor");
}

id objc_msgSend_orphanImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orphanImageView");
}

id objc_msgSend_pageFetchCompletion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageFetchCompletion");
}

id objc_msgSend_pageSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageSize");
}

id objc_msgSend_pairToFBK(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairToFBK");
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairedDevices");
}

id objc_msgSend_pairedDevicesDidChangeWithAddedDevice_removed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairedDevicesDidChangeWithAddedDevice:removed:");
}

id objc_msgSend_pairingDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairingDevice");
}

id objc_msgSend_pairingViewDidCancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairingViewDidCancel");
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parentViewController");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path");
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathExtension");
}

id objc_msgSend_pendingAttachments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingAttachments");
}

id objc_msgSend_pendingConsents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingConsents");
}

id objc_msgSend_pendingFeedbackObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingFeedbackObject");
}

id objc_msgSend_pendingFollowup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingFollowup");
}

id objc_msgSend_pendingFollowupToShow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingFollowupToShow");
}

id objc_msgSend_pendingItemToShow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingItemToShow");
}

id objc_msgSend_pendingLaunchAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingLaunchAction");
}

id objc_msgSend_pendingNextPageRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingNextPageRequest");
}

id objc_msgSend_pendingQandA(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingQandA");
}

id objc_msgSend_pendingStartupUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingStartupUI");
}

id objc_msgSend_pendingTeam(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingTeam");
}

id objc_msgSend_pendingUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingUI");
}

id objc_msgSend_performBatchUpdates_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBatchUpdates:completion:");
}

id objc_msgSend_performBiometricAuthenticationIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBiometricAuthenticationIfNeeded");
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAndWait:");
}

id objc_msgSend_performOnAppear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performOnAppear");
}

id objc_msgSend_performSegueWithIdentifier_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSegueWithIdentifier:sender:");
}

id objc_msgSend_personalTeamForUser_inContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personalTeamForUser:inContext:");
}

id objc_msgSend_pinPairingInProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pinPairingInProgress");
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "placeholder");
}

id objc_msgSend_placeholderLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "placeholderLabel");
}

id objc_msgSend_platform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "platform");
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointSize");
}

id objc_msgSend_pointsToReachableDir(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointsToReachableDir");
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToRootViewControllerAnimated:");
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popViewControllerAnimated:");
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popoverPresentationController");
}

id objc_msgSend_portalURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "portalURL");
}

id objc_msgSend_positionFromPosition_offset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "positionFromPosition:offset:");
}

id objc_msgSend_positiveChoice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "positiveChoice");
}

id objc_msgSend_postAttachFiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postAttachFiles:");
}

id objc_msgSend_postLaunchAttachLocalFiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postLaunchAttachLocalFiles:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_preAttachFiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preAttachFiles:");
}

id objc_msgSend_predicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicate");
}

id objc_msgSend_predicateForAllStubs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAllStubs");
}

id objc_msgSend_predicateForTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForTeam:");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_preferredContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSize");
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSizeCategory");
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredMaxLayoutWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredMaxLayoutWidth");
}

id objc_msgSend_preferredStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredStyle");
}

id objc_msgSend_preferredTeamForStubPreferringTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredTeamForStubPreferringTeam:");
}

id objc_msgSend_prefilledUsername(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefilledUsername");
}

id objc_msgSend_prepareForNextDateRangeFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForNextDateRangeFetch");
}

id objc_msgSend_prepareForNextPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForNextPage");
}

id objc_msgSend_presentAttachment_fromIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAttachment:fromIndexPath:");
}

id objc_msgSend_presentConnectionErrorUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentConnectionErrorUI");
}

id objc_msgSend_presentNonParticipantView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentNonParticipantView");
}

id objc_msgSend_presentPreviewAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentPreviewAnimated:");
}

id objc_msgSend_presentStartupUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentStartupUI:");
}

id objc_msgSend_presentVersionOutdatedUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentVersionOutdatedUI");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationController");
}

id objc_msgSend_presentedSegueName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedSegueName");
}

id objc_msgSend_presentedView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedView");
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedViewController");
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingViewController");
}

id objc_msgSend_presentsAuthKitUIModally(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentsAuthKitUIModally");
}

id objc_msgSend_previewTypeURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previewTypeURL:");
}

id objc_msgSend_previousToolbarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previousToolbarHidden");
}

id objc_msgSend_process(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "process");
}

id objc_msgSend_processID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processID");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processInfo");
}

id objc_msgSend_processLaunchArgumentsWithArgs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processLaunchArgumentsWithArgs:");
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progress");
}

id objc_msgSend_progressView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressView");
}

id objc_msgSend_promoteFeedback_toTeam_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promoteFeedback:toTeam:completion:");
}

id objc_msgSend_promoteIndividualFeedbackToTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promoteIndividualFeedbackToTeam:");
}

id objc_msgSend_promptLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promptLabel");
}

id objc_msgSend_publicLogDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publicLogDescription");
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushViewController:animated:");
}

id objc_msgSend_quesionAnswerPairs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quesionAnswerPairs");
}

id objc_msgSend_question(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "question");
}

id objc_msgSend_questionAnswerPairs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "questionAnswerPairs");
}

id objc_msgSend_questionGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "questionGroup");
}

id objc_msgSend_questionGroupForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "questionGroupForSection:");
}

id objc_msgSend_questionGroupForSectionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "questionGroupForSectionIdentifier:");
}

id objc_msgSend_questionGroups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "questionGroups");
}

id objc_msgSend_questionLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "questionLabel");
}

id objc_msgSend_questionWithRole_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "questionWithRole:");
}

id objc_msgSend_questions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "questions");
}

id objc_msgSend_questionsForSectionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "questionsForSectionIdentifier:");
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "range");
}

id objc_msgSend_rangeAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeAtIndex:");
}

id objc_msgSend_rangeOfComposedCharacterSequenceAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfComposedCharacterSequenceAtIndex:");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_reachability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachability");
}

id objc_msgSend_reachabilityWithAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachabilityWithAddress:");
}

id objc_msgSend_reachabilityWithHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachabilityWithHost:");
}

id objc_msgSend_reader(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reader");
}

id objc_msgSend_reallyLaunchSurveyWithUrlAction_team_surveyItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reallyLaunchSurveyWithUrlAction:team:surveyItem:");
}

id objc_msgSend_recordCheckboxAnswers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordCheckboxAnswers");
}

id objc_msgSend_rectForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForSection:");
}

id objc_msgSend_redColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "redColor");
}

id objc_msgSend_reduceToFault_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reduceToFault:");
}

id objc_msgSend_reevaluateMatcherPredicates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reevaluateMatcherPredicates");
}

id objc_msgSend_refreshAnnouncementFromContentItem_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshAnnouncementFromContentItem:completion:");
}

id objc_msgSend_refreshControl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshControl");
}

id objc_msgSend_refreshFormResponseStubFromContentItem_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshFormResponseStubFromContentItem:completion:");
}

id objc_msgSend_refreshSurveyFromContentItem_forTeam_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshSurveyFromContentItem:forTeam:completion:");
}

id objc_msgSend_refreshedObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshedObjects");
}

id objc_msgSend_registerApplicationNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerApplicationNotifications");
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellReuseIdentifier:");
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellWithReuseIdentifier:");
}

id objc_msgSend_registerDefaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDefaults:");
}

id objc_msgSend_registerForKeyboardNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForKeyboardNotifications");
}

id objc_msgSend_registerForRemoteNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForRemoteNotifications");
}

id objc_msgSend_registerNib_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerNib:forCellReuseIdentifier:");
}

id objc_msgSend_registrationWithCellClass_configurationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registrationWithCellClass:configurationHandler:");
}

id objc_msgSend_registrationWithSupplementaryClass_elementKind_configurationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registrationWithSupplementaryClass:elementKind:configurationHandler:");
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularExpressionWithPattern:options:error:");
}

id objc_msgSend_reload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reload");
}

id objc_msgSend_reloadAllContentWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadAllContentWithCompletion:");
}

id objc_msgSend_reloadApp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadApp");
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadData");
}

id objc_msgSend_reloadItems_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadItems:completion:");
}

id objc_msgSend_reloadRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_reloadView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadView");
}

id objc_msgSend_remoteID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteID");
}

id objc_msgSend_removeAllAttachments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllAttachments");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeArrangedSubview:");
}

id objc_msgSend_removeAttribute_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAttribute:range:");
}

id objc_msgSend_removeBlurView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeBlurView");
}

id objc_msgSend_removeFBAObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFBAObservers");
}

id objc_msgSend_removeFBKPairing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFBKPairing");
}

id objc_msgSend_removeFromHomeScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromHomeScreen");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removePersistentDomainForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePersistentDomainForName:");
}

id objc_msgSend_removeWalShm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeWalShm:");
}

id objc_msgSend_replaceRange_withText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceRange:withText:");
}

id objc_msgSend_reportFailureToLaunchFormWithFormIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportFailureToLaunchFormWithFormIdentifier:");
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "request");
}

id objc_msgSend_requestPermission(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestPermission");
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:");
}

id objc_msgSend_requireTouchIDCellLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requireTouchIDCellLabel");
}

id objc_msgSend_resetObserverTokens(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetObserverTokens");
}

id objc_msgSend_resetTimerWithInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetTimerWithInterval:");
}

id objc_msgSend_resetViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetViewControllers");
}

id objc_msgSend_resetViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetViewControllers:");
}

id objc_msgSend_resetWarningsCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetWarningsCell");
}

id objc_msgSend_resetWarningsLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetWarningsLabel");
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignFirstResponder");
}

id objc_msgSend_resolved(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolved");
}

id objc_msgSend_respondToLaunchAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondToLaunchAction:");
}

id objc_msgSend_respondToUrlAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondToUrlAction:");
}

id objc_msgSend_responseStub(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseStub");
}

id objc_msgSend_resumeSpinnerWithStatus_userInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeSpinnerWithStatus:userInteractionEnabled:");
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reuseIdentifier");
}

id objc_msgSend_rightBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightBarButtonItem");
}

id objc_msgSend_role(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "role");
}

id objc_msgSend_rootController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootController");
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootViewController");
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "row");
}

id objc_msgSend_rowForTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rowForTimeout:");
}

id objc_msgSend_rowShouldPresentAssigneePicker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rowShouldPresentAssigneePicker:");
}

id objc_msgSend_rows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rows");
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "run");
}

id objc_msgSend_runAfterLogin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runAfterLogin:");
}

id objc_msgSend_runDelayedUrlActionIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runDelayedUrlActionIfNeeded");
}

id objc_msgSend_runQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runQuery:");
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaInsets");
}

id objc_msgSend_sanitizeAnswer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sanitizeAnswer:");
}

id objc_msgSend_saveAnswer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveAnswer");
}

id objc_msgSend_saveBiometricsDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveBiometricsDate");
}

id objc_msgSend_saveDraftIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveDraftIfNeeded");
}

id objc_msgSend_saveFormResponse_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveFormResponse:completion:");
}

id objc_msgSend_saveToStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveToStore:");
}

id objc_msgSend_saveToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveToken:");
}

id objc_msgSend_savedEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savedEvents");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scale");
}

id objc_msgSend_scaledFontForFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledFontForFont:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:repeats:block:");
}

id objc_msgSend_scrollTableToAvoidKeyboardInTableView_keyboardHeight_withPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollTableToAvoidKeyboardInTableView:keyboardHeight:withPadding:");
}

id objc_msgSend_scrollToRowAtIndexPath_atScrollPosition_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToRowAtIndexPath:atScrollPosition:animated:");
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollView");
}

id objc_msgSend_searchBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchBar");
}

id objc_msgSend_searchController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchController");
}

id objc_msgSend_searchResultChoices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchResultChoices");
}

id objc_msgSend_searchResultItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchResultItems");
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryLabelColor");
}

id objc_msgSend_secondarySystemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondarySystemBackgroundColor");
}

id objc_msgSend_secondarySystemGroupedBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondarySystemGroupedBackgroundColor");
}

id objc_msgSend_secondaryTextProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryTextProperties");
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "section");
}

id objc_msgSend_sectionForTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForTeam:");
}

id objc_msgSend_sectionIdentifierForIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionIdentifierForIndex:");
}

id objc_msgSend_sectionIdentifierForSectionContainingItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionIdentifierForSectionContainingItemIdentifier:");
}

id objc_msgSend_sectionIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionIdentifiers");
}

id objc_msgSend_sectionTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionTitle");
}

id objc_msgSend_sectionType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionType");
}

id objc_msgSend_sectionWithGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionWithGroup:");
}

id objc_msgSend_sectionWithListConfiguration_layoutEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionWithListConfiguration:layoutEnvironment:");
}

id objc_msgSend_sections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sections");
}

id objc_msgSend_selectNext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectNext");
}

id objc_msgSend_selectRowAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectRowAtIndexPath:animated:scrollPosition:");
}

id objc_msgSend_selectedDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedDevices");
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorColor");
}

id objc_msgSend_separatorInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorInset");
}

id objc_msgSend_serverID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverID");
}

id objc_msgSend_serverSideIsComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverSideIsComplete");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set");
}

id objc_msgSend_setAccessibilityHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityHint:");
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIdentifier:");
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityLabel:");
}

id objc_msgSend_setAccessibilityTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityTraits:");
}

id objc_msgSend_setAccessories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessories:");
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryType:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActivityIndicatorViewStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityIndicatorViewStyle:");
}

id objc_msgSend_setAddAttachmentCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddAttachmentCell:");
}

id objc_msgSend_setAdjustsFontForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontForContentSizeCategory:");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAllowsAccountCreation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsAccountCreation:");
}

id objc_msgSend_setAllowsMultipleSelectionDuringEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsMultipleSelectionDuringEditing:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setAlwaysBounceVertical_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysBounceVertical:");
}

id objc_msgSend_setAnimationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationsEnabled:");
}

id objc_msgSend_setAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotation:");
}

id objc_msgSend_setAnnouncement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnouncement:");
}

id objc_msgSend_setAnswer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnswer:");
}

id objc_msgSend_setAttachment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachment:");
}

id objc_msgSend_setAttachmentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachmentType:");
}

id objc_msgSend_setAttachmentsBeingDeletedCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachmentsBeingDeletedCount:");
}

id objc_msgSend_setAttemptedSubmission_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptedSubmission:");
}

id objc_msgSend_setAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedString:");
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedText:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxis:");
}

id objc_msgSend_setBackBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackBarButtonItem:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundView:");
}

id objc_msgSend_setBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarButtonItem:");
}

id objc_msgSend_setBatchSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatchSize:");
}

id objc_msgSend_setBiometricsState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBiometricsState:");
}

id objc_msgSend_setBiometricsWatchDog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBiometricsWatchDog:");
}

id objc_msgSend_setBlurView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlurView:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBoundarySupplementaryItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoundarySupplementaryItems:");
}

id objc_msgSend_setBugFormEditorDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBugFormEditorDelegate:");
}

id objc_msgSend_setCachedCandidateStubsCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedCandidateStubsCount:");
}

id objc_msgSend_setCanEditUsername_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanEditUsername:");
}

id objc_msgSend_setCancelBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelBarButtonItem:");
}

id objc_msgSend_setCellHeights_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellHeights:");
}

id objc_msgSend_setCharacterLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCharacterLimit:");
}

id objc_msgSend_setCheckboxAnswersAtStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckboxAnswersAtStart:");
}

id objc_msgSend_setChoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChoice:");
}

id objc_msgSend_setChoiceDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChoiceDelegate:");
}

id objc_msgSend_setClearsSelectionOnViewWillAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClearsSelectionOnViewWillAppear:");
}

id objc_msgSend_setCollectionViewLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionViewLayout:");
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColor:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstant:");
}

id objc_msgSend_setContentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentConfiguration:");
}

id objc_msgSend_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentHuggingPriority:forAxis:");
}

id objc_msgSend_setContentInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsets:");
}

id objc_msgSend_setContentItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentItem:");
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMode:");
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffset:");
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentSize:");
}

id objc_msgSend_setContentUnavailableConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentUnavailableConfiguration:");
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContents:");
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContext:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setCurrDetailIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrDetailIndexPath:");
}

id objc_msgSend_setCurrentSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentSelection:");
}

id objc_msgSend_setCustomDetentHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomDetentHeight:");
}

id objc_msgSend_setDataChangeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataChangeObserver:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDatabaseReader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatabaseReader:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDbFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDbFile:");
}

id objc_msgSend_setDbUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDbUrl:");
}

id objc_msgSend_setDefinesPresentationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefinesPresentationContext:");
}

id objc_msgSend_setDelayedUrlAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelayedUrlAction:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDestructive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestructive:");
}

id objc_msgSend_setDetailLabelTrailingConstraintInitial_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailLabelTrailingConstraintInitial:");
}

id objc_msgSend_setDetailViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailViewController:");
}

id objc_msgSend_setDetentBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetentBehavior:");
}

id objc_msgSend_setDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevice:");
}

id objc_msgSend_setDeviceChoices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceChoices:");
}

id objc_msgSend_setDeviceGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceGroups:");
}

id objc_msgSend_setDevicesController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevicesController:");
}

id objc_msgSend_setDevicesId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevicesId:");
}

id objc_msgSend_setDidRefreshFormStubsNotificationObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidRefreshFormStubsNotificationObserver:");
}

id objc_msgSend_setDiffableDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiffableDataSource:");
}

id objc_msgSend_setDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDigits:");
}

id objc_msgSend_setDirectionalLayoutMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirectionalLayoutMargins:");
}

id objc_msgSend_setDirectoryList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirectoryList:");
}

id objc_msgSend_setDisclosesMoreForms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisclosesMoreForms:");
}

id objc_msgSend_setDiscoverabilityTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverabilityTitle:");
}

id objc_msgSend_setDropDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDropDelegate:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditable:");
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:animated:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEnteringDetail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnteringDetail:");
}

id objc_msgSend_setEstimatedRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstimatedRowHeight:");
}

id objc_msgSend_setEstimatedSectionFooterHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstimatedSectionFooterHeight:");
}

id objc_msgSend_setEstimatedSectionHeaderHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstimatedSectionHeaderHeight:");
}

id objc_msgSend_setEventCountForCurrentPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventCountForCurrentPage:");
}

id objc_msgSend_setExactMatchFormStub_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExactMatchFormStub:");
}

id objc_msgSend_setExcludedActivityTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExcludedActivityTypes:");
}

id objc_msgSend_setExtensions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtensions:");
}

id objc_msgSend_setFBAPreferencesEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFBAPreferencesEnabled:");
}

id objc_msgSend_setFbaDataObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFbaDataObservers:");
}

id objc_msgSend_setFetchWatchdog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchWatchdog:");
}

id objc_msgSend_setFileDownloadInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFileDownloadInProgress:");
}

id objc_msgSend_setFilterDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilterDelegate:");
}

id objc_msgSend_setFilterManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilterManager:");
}

id objc_msgSend_setFilterPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilterPlatform:");
}

id objc_msgSend_setFilteredInboxItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilteredInboxItems:");
}

id objc_msgSend_setFollowup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFollowup:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFooterMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFooterMode:");
}

id objc_msgSend_setFormResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFormResponse:");
}

id objc_msgSend_setFormStub_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFormStub:");
}

id objc_msgSend_setFoundCorruptDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFoundCorruptDate:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setGatherState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGatherState:");
}

id objc_msgSend_setGivenInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGivenInterval:");
}

id objc_msgSend_setGotDelegateCallbackInLastFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGotDelegateCallbackInLastFetch:");
}

id objc_msgSend_setGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroup:");
}

id objc_msgSend_setHasFinishedFirstLoad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasFinishedFirstLoad:");
}

id objc_msgSend_setHasKeyboardFocus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasKeyboardFocus:");
}

id objc_msgSend_setHasLoadedFirstDraft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasLoadedFirstDraft:");
}

id objc_msgSend_setHasLoadedFormItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasLoadedFormItems:");
}

id objc_msgSend_setHasPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPlaceholder:");
}

id objc_msgSend_setHeaderImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderImage:");
}

id objc_msgSend_setHeaderMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderMode:");
}

id objc_msgSend_setHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeight:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHideAllInboxes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHideAllInboxes:");
}

id objc_msgSend_setHideTouchID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHideTouchID:");
}

id objc_msgSend_setHidesBackButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesBackButton:");
}

id objc_msgSend_setHidesNavigationBarDuringPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesNavigationBarDuringPresentation:");
}

id objc_msgSend_setHidesNotConfiguredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesNotConfiguredDevices:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setInbox_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInbox:");
}

id objc_msgSend_setInboxLiteMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInboxLiteMode:");
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteger:forKey:");
}

id objc_msgSend_setInterGroupSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterGroupSpacing:");
}

id objc_msgSend_setInterItemSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterItemSpacing:");
}

id objc_msgSend_setIsAccessibilityElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAccessibilityElement:");
}

id objc_msgSend_setIsApplyingSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsApplyingSnapshot:");
}

id objc_msgSend_setIsBatchUIEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsBatchUIEnabled:");
}

id objc_msgSend_setIsConnectedToCellNetwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsConnectedToCellNetwork:");
}

id objc_msgSend_setIsLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLoading:");
}

id objc_msgSend_setIsMultiSelect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMultiSelect:");
}

id objc_msgSend_setIsPresentingConsentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPresentingConsentView:");
}

id objc_msgSend_setIsSubmitting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSubmitting:");
}

id objc_msgSend_setIsUnsolicited_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUnsolicited:");
}

id objc_msgSend_setItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItem:");
}

id objc_msgSend_setItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemIdentifier:");
}

id objc_msgSend_setKeyboardHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardHeight:");
}

id objc_msgSend_setLargeTitleDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLargeTitleDisplayMode:");
}

id objc_msgSend_setLastStage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastStage:");
}

id objc_msgSend_setLastUsedLAContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUsedLAContext:");
}

id objc_msgSend_setLaunchAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLaunchAction:");
}

id objc_msgSend_setLayoutMarginsRelativeArrangement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutMarginsRelativeArrangement:");
}

id objc_msgSend_setLeftBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftBarButtonItem:");
}

id objc_msgSend_setLeftBarButtonItem_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftBarButtonItem:animated:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setLineFragmentPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineFragmentPadding:");
}

id objc_msgSend_setLineWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineWidth:");
}

id objc_msgSend_setLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoading:");
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocale:");
}

id objc_msgSend_setLogArchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogArchive:");
}

id objc_msgSend_setLogSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogSource:");
}

id objc_msgSend_setLogURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogURL:");
}

id objc_msgSend_setLoggerLib_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggerLib:");
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasksToBounds:");
}

id objc_msgSend_setMaximumNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumNumberOfLines:");
}

id objc_msgSend_setMaximumSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumSize:");
}

id objc_msgSend_setMenu_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenu:");
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessage:");
}

id objc_msgSend_setModalInPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalInPresentation:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setModelCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelCache:");
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:");
}

id objc_msgSend_setNavigationDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationDelegate:");
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsDisplay");
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsLayout");
}

id objc_msgSend_setNetMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetMonitor:");
}

id objc_msgSend_setNotConfiguredDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotConfiguredDevice:");
}

id objc_msgSend_setNotificationObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationObserver:");
}

id objc_msgSend_setNumberOfEmptyFetches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfEmptyFetches:");
}

id objc_msgSend_setNumberOfEventsInLastFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfEventsInLastFetch:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setNumberOfTouchesRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfTouchesRequired:");
}

id objc_msgSend_setOSLogURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOSLogURL:");
}

id objc_msgSend_setObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObscuresBackgroundDuringPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObscuresBackgroundDuringPresentation:");
}

id objc_msgSend_setObservedResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservedResponse:");
}

id objc_msgSend_setObservedTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservedTask:");
}

id objc_msgSend_setObserverTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObserverTokens:");
}

id objc_msgSend_setOldestEventMachTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOldestEventMachTime:");
}

id objc_msgSend_setOldestEventTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOldestEventTimestamp:");
}

id objc_msgSend_setOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOn:");
}

id objc_msgSend_setOn_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOn:animated:");
}

id objc_msgSend_setOptedOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptedOut:");
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptions:");
}

id objc_msgSend_setOrientationMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrientationMask:");
}

id objc_msgSend_setPairedDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedDevices:");
}

id objc_msgSend_setPairingDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingDevice:");
}

id objc_msgSend_setParticipantDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantDelegate:");
}

id objc_msgSend_setPendingAttachments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingAttachments:");
}

id objc_msgSend_setPendingFeedbackObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingFeedbackObject:");
}

id objc_msgSend_setPendingFollowup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingFollowup:");
}

id objc_msgSend_setPendingFollowupToShow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingFollowupToShow:");
}

id objc_msgSend_setPendingItemToShow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingItemToShow:");
}

id objc_msgSend_setPendingLaunchAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingLaunchAction:");
}

id objc_msgSend_setPendingNextPageRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingNextPageRequest:");
}

id objc_msgSend_setPendingQandA_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingQandA:");
}

id objc_msgSend_setPendingStartupUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingStartupUI:");
}

id objc_msgSend_setPendingStub_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingStub:");
}

id objc_msgSend_setPendingTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingTeam:");
}

id objc_msgSend_setPendingUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingUI:");
}

id objc_msgSend_setPerformOnAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerformOnAppear:");
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPermittedArrowDirections:");
}

id objc_msgSend_setPickerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickerDelegate:");
}

id objc_msgSend_setPinPairingInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPinPairingInProgress:");
}

id objc_msgSend_setPlaceholderLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholderLabel:");
}

id objc_msgSend_setPlaceholderText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholderText:");
}

id objc_msgSend_setPowerLogURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPowerLogURL:");
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicate:");
}

id objc_msgSend_setPreferredContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredContentSize:");
}

id objc_msgSend_setPreferredDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredDisplayMode:");
}

id objc_msgSend_setPreferredMaxLayoutWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredMaxLayoutWidth:");
}

id objc_msgSend_setPrefilledUsername_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefilledUsername:");
}

id objc_msgSend_setPresentedSegueName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentedSegueName:");
}

id objc_msgSend_setPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentingViewController:");
}

id objc_msgSend_setPreviousToolbarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousToolbarHidden:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgress:");
}

id objc_msgSend_setQuesionAnswerPairs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuesionAnswerPairs:");
}

id objc_msgSend_setQuestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuestion:");
}

id objc_msgSend_setQuestionGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuestionGroup:");
}

id objc_msgSend_setReachability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReachability:");
}

id objc_msgSend_setReader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReader:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setRefreshControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRefreshControl:");
}

id objc_msgSend_setRepresentedItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRepresentedItem:");
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItem:");
}

id objc_msgSend_setRightBarButtonItem_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItem:animated:");
}

id objc_msgSend_setRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowHeight:");
}

id objc_msgSend_setRows_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRows:");
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEnabled:");
}

id objc_msgSend_setSearchController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchController:");
}

id objc_msgSend_setSearchResultChoices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchResultChoices:");
}

id objc_msgSend_setSearchResultItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchResultItems:");
}

id objc_msgSend_setSearchResultsUpdater_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchResultsUpdater:");
}

id objc_msgSend_setSecondaryText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondaryText:");
}

id objc_msgSend_setSectionFooterHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionFooterHeight:");
}

id objc_msgSend_setSectionHeaderHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionHeaderHeight:");
}

id objc_msgSend_setSections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSections:");
}

id objc_msgSend_setSelectable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectable:");
}

id objc_msgSend_setSelectedTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedTeam:");
}

id objc_msgSend_setSelectionGranularity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionGranularity:");
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionStyle:");
}

id objc_msgSend_setSeparatorInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorInset:");
}

id objc_msgSend_setShouldHideQuestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldHideQuestions:");
}

id objc_msgSend_setShowError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowError:");
}

id objc_msgSend_setShowServiceIcons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowServiceIcons:");
}

id objc_msgSend_setShowingSyntheticInbox_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowingSyntheticInbox:");
}

id objc_msgSend_setShowsDismissButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsDismissButton:");
}

id objc_msgSend_setShowsIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsIcon:");
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsVerticalScrollIndicator:");
}

id objc_msgSend_setSignInViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignInViewController:");
}

id objc_msgSend_setSimpleGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSimpleGroups:");
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSize:");
}

id objc_msgSend_setSortedChoices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortedChoices:");
}

id objc_msgSend_setSortedInboxItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortedInboxItems:");
}

id objc_msgSend_setSortedTeams_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortedTeams:");
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceRect:");
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceView:");
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpacing:");
}

id objc_msgSend_setSpinner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpinner:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setString:");
}

id objc_msgSend_setSubmitBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubmitBarButtonItem:");
}

id objc_msgSend_setSupplementaryViewProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupplementaryViewProvider:");
}

id objc_msgSend_setTableHeaderView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableHeaderView:");
}

id objc_msgSend_setTableNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableNames:");
}

id objc_msgSend_setTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTask:");
}

id objc_msgSend_setTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTeam:");
}

id objc_msgSend_setTeamInfoLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTeamInfoLabel:");
}

id objc_msgSend_setTeams_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTeams:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextChangedHandler:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTextContainerInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextContainerInset:");
}

id objc_msgSend_setThisViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThisViewController:");
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZone:");
}

id objc_msgSend_setTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimer:");
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimingFunction:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:forState:");
}

id objc_msgSend_setToolbarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarHidden:");
}

id objc_msgSend_setToolbarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarHidden:animated:");
}

id objc_msgSend_setToolbarItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarItems:");
}

id objc_msgSend_setToolbarItems_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarItems:animated:");
}

id objc_msgSend_setTransitioningDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitioningDelegate:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrl:");
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setUsername_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsername:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:");
}

id objc_msgSend_setViewController_forColumn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewController:forColumn:");
}

id objc_msgSend_setViewHasBecomeVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewHasBecomeVisible:");
}

id objc_msgSend_setVisibleChoices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisibleChoices:");
}

id objc_msgSend_setWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWebView:");
}

id objc_msgSend_setWebViewHeightConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWebViewHeightConstraint:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithCapacity:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_setZPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZPosition:");
}

id objc_msgSend_setZoomScale_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomScale:animated:");
}

id objc_msgSend_set_allDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_allDevices:");
}

id objc_msgSend_set_attachmentSectionHeaderCached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_attachmentSectionHeaderCached:");
}

id objc_msgSend_set_filePromiseSortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_filePromiseSortDescriptors:");
}

id objc_msgSend_set_internalMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_internalMode:");
}

id objc_msgSend_setupBarButtonItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupBarButtonItems");
}

id objc_msgSend_setupTestingEvn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupTestingEvn");
}

id objc_msgSend_shake(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shake");
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedApplication");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedManager");
}

id objc_msgSend_sharedUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedUserDefaults");
}

id objc_msgSend_sheetForController_selectedIndexPath_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sheetForController:selectedIndexPath:sender:");
}

id objc_msgSend_shortDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortDescription");
}

id objc_msgSend_shouldAllowEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAllowEditing");
}

id objc_msgSend_shouldContinue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldContinue");
}

id objc_msgSend_shouldDisplayChangeButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDisplayChangeButton");
}

id objc_msgSend_shouldDisplayItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDisplayItem:");
}

id objc_msgSend_shouldHaveChoices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHaveChoices");
}

id objc_msgSend_shouldHideQuestions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHideQuestions");
}

id objc_msgSend_shouldMakeFBAVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldMakeFBAVisible");
}

id objc_msgSend_shouldShowAssigneeLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowAssigneeLabel");
}

id objc_msgSend_shouldShowBatchUIWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowBatchUIWithCompletion:");
}

id objc_msgSend_shouldShowDevUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowDevUI");
}

id objc_msgSend_shouldShowForm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowForm");
}

id objc_msgSend_shouldShowFormPicker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowFormPicker");
}

id objc_msgSend_shouldShowStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowStatus");
}

id objc_msgSend_shouldShowWaitingOnWifi(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowWaitingOnWifi");
}

id objc_msgSend_shouldUndoMakeFBAVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUndoMakeFBAVisible");
}

id objc_msgSend_showAccessoryView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAccessoryView");
}

id objc_msgSend_showAttachmentDeletionErrorAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAttachmentDeletionErrorAlert");
}

id objc_msgSend_showAttachmentDeletionErrorAlertWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAttachmentDeletionErrorAlertWithError:");
}

id objc_msgSend_showAttachmentDeletionSpinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAttachmentDeletionSpinner");
}

id objc_msgSend_showBatchUIWithAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBatchUIWithAction:");
}

id objc_msgSend_showContentUnavailableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showContentUnavailableView");
}

id objc_msgSend_showDetailViewController_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showDetailViewController:sender:");
}

id objc_msgSend_showDraftAttachmentOptionsWithAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showDraftAttachmentOptionsWithAction:");
}

id objc_msgSend_showItemWithUrlAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showItemWithUrlAction:");
}

id objc_msgSend_showLoadingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showLoadingView");
}

id objc_msgSend_showLogInUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showLogInUI");
}

id objc_msgSend_showModalFeedbackControllerForContentItem_launchAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showModalFeedbackControllerForContentItem:launchAction:");
}

id objc_msgSend_showPINEntryUIWithFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPINEntryUIWithFlags:");
}

id objc_msgSend_showPinPairingViewForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPinPairingViewForDevice:");
}

id objc_msgSend_showQuestions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showQuestions");
}

id objc_msgSend_showSimpleAlertWithErrorTitle_message_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSimpleAlertWithErrorTitle:message:");
}

id objc_msgSend_showSpinnerWithStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSpinnerWithStatus:");
}

id objc_msgSend_showSpinnerWithStatus_userInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSpinnerWithStatus:userInteractionEnabled:");
}

id objc_msgSend_showTargetedSurveyLoadErrorAlert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTargetedSurveyLoadErrorAlert");
}

id objc_msgSend_showTextViewWithText_title_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTextViewWithText:title:");
}

id objc_msgSend_showToolbarWithStatus_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showToolbarWithStatus:animated:");
}

id objc_msgSend_showToolbarWithStatus_subtitle_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showToolbarWithStatus:subtitle:animated:");
}

id objc_msgSend_showingSyntheticInbox(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showingSyntheticInbox");
}

id objc_msgSend_showsAssigneeRow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showsAssigneeRow");
}

id objc_msgSend_showsEnhancedLoggingSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showsEnhancedLoggingSection");
}

id objc_msgSend_showsItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showsItem");
}

id objc_msgSend_signInViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signInViewController");
}

id objc_msgSend_signOutButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signOutButton");
}

id objc_msgSend_simpleGroups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "simpleGroups");
}

id objc_msgSend_singleTeam(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleTeam");
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "size");
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeToFit");
}

id objc_msgSend_sizeWithWidthDimension_heightDimension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeWithWidthDimension:heightDimension:");
}

id objc_msgSend_smartMailboxes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smartMailboxes");
}

id objc_msgSend_snapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshot");
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortDescriptors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptors");
}

id objc_msgSend_sortOrder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortOrder");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingDescriptors:");
}

id objc_msgSend_sortedChoices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedChoices");
}

id objc_msgSend_sortedDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedDevices:");
}

id objc_msgSend_sortedInboxItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedInboxItems");
}

id objc_msgSend_sortedTeams(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedTeams");
}

id objc_msgSend_spaceFromSuperViewToLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spaceFromSuperViewToLabel");
}

id objc_msgSend_spinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spinner");
}

id objc_msgSend_splitViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitViewController");
}

id objc_msgSend_stackView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackView");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "start");
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimating");
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDate");
}

id objc_msgSend_startNotifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startNotifier");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "state");
}

id objc_msgSend_statusIndicatorImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusIndicatorImageView");
}

id objc_msgSend_statusLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusLabel");
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stop");
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAnimating");
}

id objc_msgSend_stopNotifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopNotifier");
}

id objc_msgSend_stopObserving_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObserving:");
}

id objc_msgSend_stopObservingResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObservingResponse:");
}

id objc_msgSend_stopScanning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopScanning");
}

id objc_msgSend_storyboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storyboard");
}

id objc_msgSend_storyboardWithName_bundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storyboardWithName:bundle:");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathExtension:");
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByDeletingPathExtension");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:");
}

id objc_msgSend_stringFromByteCount_countStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromByteCount:countStyle:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValue");
}

id objc_msgSend_stringValueOfTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValueOfTable:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_stroke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stroke");
}

id objc_msgSend_subLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subLabel");
}

id objc_msgSend_submitBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "submitBarButtonItem");
}

id objc_msgSend_submitButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "submitButton");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_subsystem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subsystem");
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtitle");
}

id objc_msgSend_subtitleCellConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtitleCellConfiguration");
}

id objc_msgSend_subtitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtitleLabel");
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superview");
}

id objc_msgSend_superviewWithClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superviewWithClass:");
}

id objc_msgSend_supportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedInterfaceOrientations");
}

id objc_msgSend_supportsBiometricsLock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsBiometricsLock");
}

id objc_msgSend_supportsDeletion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsDeletion");
}

id objc_msgSend_supportsMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsMenu");
}

id objc_msgSend_supportsSelection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsSelection");
}

id objc_msgSend_suppressUnsolicitedResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suppressUnsolicitedResponse");
}

id objc_msgSend_surveyActionTextForTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "surveyActionTextForTeam:");
}

id objc_msgSend_surveyBugForm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "surveyBugForm");
}

id objc_msgSend_suspendReturningToLastApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suspendReturningToLastApp:");
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronize");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBackgroundColor");
}

id objc_msgSend_systemButtonWithImage_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemButtonWithImage:target:action:");
}

id objc_msgSend_systemFillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFillColor");
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:");
}

id objc_msgSend_systemFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontSize");
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGrayColor");
}

id objc_msgSend_systemGreenColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGreenColor");
}

id objc_msgSend_systemGroupedBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGroupedBackgroundColor");
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:withConfiguration:");
}

id objc_msgSend_systemLayoutSizeFittingSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemLayoutSizeFittingSize:");
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemRedColor");
}

id objc_msgSend_tableNames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableNames");
}

id objc_msgSend_tableNamesFromDatabase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableNamesFromDatabase");
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView");
}

id objc_msgSend_tableView_cellForRowAtIndexPath_withItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:cellForRowAtIndexPath:withItemIdentifier:");
}

id objc_msgSend_tableView_didSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:didSelectRowAtIndexPath:");
}

id objc_msgSend_tableView_loadingSpinnerViewForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:loadingSpinnerViewForSection:");
}

id objc_msgSend_tableView_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:numberOfRowsInSection:");
}

id objc_msgSend_tableView_titleForHeaderInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:titleForHeaderInSection:");
}

id objc_msgSend_task(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "task");
}

id objc_msgSend_taskIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "taskIdentifier");
}

id objc_msgSend_team(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "team");
}

id objc_msgSend_teamForExactMatchFormStub(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamForExactMatchFormStub");
}

id objc_msgSend_teamForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamForIndexPath:");
}

id objc_msgSend_teamForItemPreferringTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamForItemPreferringTeam:");
}

id objc_msgSend_teamForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamForSection:");
}

id objc_msgSend_teamFormStubMatchingFromFormStub_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamFormStubMatchingFromFormStub:");
}

id objc_msgSend_teamInfoLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamInfoLabel");
}

id objc_msgSend_teamPickerRowIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamPickerRowIdentifier");
}

id objc_msgSend_teamSortDescriptors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamSortDescriptors");
}

id objc_msgSend_teamType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamType");
}

id objc_msgSend_teams(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teams");
}

id objc_msgSend_teamsContainingContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamsContainingContent");
}

id objc_msgSend_teamsMatchingFormID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamsMatchingFormID");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "text");
}

id objc_msgSend_textContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textContainer");
}

id objc_msgSend_textContainerInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textContainerInset");
}

id objc_msgSend_textFileForString_withFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textFileForString:withFileName:");
}

id objc_msgSend_textFileForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textFileForURL:");
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textLabel");
}

id objc_msgSend_textProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textProperties");
}

id objc_msgSend_textRangeFromPosition_toPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRangeFromPosition:toPosition:");
}

id objc_msgSend_textResponsesCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textResponsesCount");
}

id objc_msgSend_textResponsesSummary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textResponsesSummary");
}

id objc_msgSend_textStorage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textStorage");
}

id objc_msgSend_textView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textView");
}

id objc_msgSend_textViewDidChangeContentHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textViewDidChangeContentHeight:");
}

id objc_msgSend_thisViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thisViewController");
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeZoneForSecondsFromGMT_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeZoneForSecondsFromGMT:");
}

id objc_msgSend_timeoutForRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeoutForRow:");
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timer");
}

id objc_msgSend_timer_didTimeoutForTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timer:didTimeoutForTask:");
}

id objc_msgSend_timerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timestamp");
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tintColor");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "title");
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleLabel");
}

id objc_msgSend_toggleActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleActive");
}

id objc_msgSend_toolbar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toolbar");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topAnchor");
}

id objc_msgSend_topMostController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topMostController");
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewController");
}

id objc_msgSend_touchIDSwitch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchIDSwitch");
}

id objc_msgSend_touchIDTimeoutLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchIDTimeoutLabel");
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingAnchor");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_traitCollectionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionDidChange:");
}

id objc_msgSend_traitCollectionWithUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionWithUserInterfaceStyle:");
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionCoordinator");
}

id objc_msgSend_transportsForDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transportsForDisplay");
}

id objc_msgSend_tryLaunchingDraft_orStub_forTeam_withSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tryLaunchingDraft:orStub:forTeam:withSender:");
}

id objc_msgSend_tryPairingDevice_withPin_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tryPairingDevice:withPin:completion:");
}

id objc_msgSend_tryPin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tryPin:");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "type");
}

id objc_msgSend_typeLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "typeLabel");
}

id objc_msgSend_typeString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "typeString");
}

id objc_msgSend_uniqueFormStubsWithPreferredTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueFormStubsWithPreferredTeam:");
}

id objc_msgSend_unreachableDevicesInPlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unreachableDevicesInPlay");
}

id objc_msgSend_unread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unread");
}

id objc_msgSend_unreadCountForTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unreadCountForTeam:");
}

id objc_msgSend_unreadImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unreadImageView");
}

id objc_msgSend_unreadImageViewHeightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unreadImageViewHeightConstraint");
}

id objc_msgSend_unreadInboxPredicateWithTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unreadInboxPredicateWithTeam:");
}

id objc_msgSend_unregisterApplicationNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterApplicationNotifications");
}

id objc_msgSend_unregisterForKeyboardNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterForKeyboardNotifications");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntValue");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedLongLongValue");
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedLongValue");
}

id objc_msgSend_updateActionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateActionView");
}

id objc_msgSend_updateAnnouncementWithID_success_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAnnouncementWithID:success:error:");
}

id objc_msgSend_updateBarButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBarButton");
}

id objc_msgSend_updateBody(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBody");
}

id objc_msgSend_updateCachedCandidateStubsCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCachedCandidateStubsCount");
}

id objc_msgSend_updateCheckboxDelegateIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCheckboxDelegateIfNeeded");
}

id objc_msgSend_updateChoices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateChoices");
}

id objc_msgSend_updateContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContent");
}

id objc_msgSend_updateContentInsetWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContentInsetWithValue:");
}

id objc_msgSend_updateErrorArrow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateErrorArrow");
}

id objc_msgSend_updateEverything(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateEverything");
}

id objc_msgSend_updateForNetworkStateChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateForNetworkStateChange:");
}

id objc_msgSend_updateHeader(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHeader");
}

id objc_msgSend_updateHomeScreenVisibilityFromLaunchAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHomeScreenVisibilityFromLaunchAction:");
}

id objc_msgSend_updateLabelLinesForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelLinesForContentSizeCategory:");
}

id objc_msgSend_updateLoginViewVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLoginViewVisibility");
}

id objc_msgSend_updateNewFeedbackButtonState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNewFeedbackButtonState");
}

id objc_msgSend_updateNumberOfLines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNumberOfLines");
}

id objc_msgSend_updateProgressForTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateProgressForTask:");
}

id objc_msgSend_updateProgressWithFormResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateProgressWithFormResponse:");
}

id objc_msgSend_updateScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateScrollView");
}

id objc_msgSend_updateSearchBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSearchBar");
}

id objc_msgSend_updateSearchResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSearchResults");
}

id objc_msgSend_updateSearchResultsForSearchController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSearchResultsForSearchController:");
}

id objc_msgSend_updateSubmitButtonState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSubmitButtonState");
}

id objc_msgSend_updateSuperviewToAttachmentLabelSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSuperviewToAttachmentLabelSpacing:");
}

id objc_msgSend_updateTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTitle");
}

id objc_msgSend_updateTitleView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTitleView");
}

id objc_msgSend_updateUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUI");
}

id objc_msgSend_updateUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUI:");
}

id objc_msgSend_updateUI_canDismissKeyboard_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUI:canDismissKeyboard:withCompletion:");
}

id objc_msgSend_updateUIAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUIAnimated:");
}

id objc_msgSend_updateUploadStage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUploadStage:");
}

id objc_msgSend_updateViewport(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateViewport");
}

id objc_msgSend_updateWebView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWebView");
}

id objc_msgSend_updateWithChoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithChoice:");
}

id objc_msgSend_updateWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithDevice:");
}

id objc_msgSend_updateWithDevice_showsDetail_showsTransport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithDevice:showsDetail:showsTransport:");
}

id objc_msgSend_updateWithDevice_showsDetail_showsTransport_isSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithDevice:showsDetail:showsTransport:isSelected:");
}

id objc_msgSend_updateWithEnhancedLoggingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithEnhancedLoggingSession:");
}

id objc_msgSend_updateWithItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithItem:");
}

id objc_msgSend_updateWithItem_showingTeamName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithItem:showingTeamName:");
}

id objc_msgSend_updatedAt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedAt");
}

id objc_msgSend_updatedObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedObjects");
}

id objc_msgSend_uploadTask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uploadTask");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uppercaseString");
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "url");
}

id objc_msgSend_urlPointsToTextFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlPointsToTextFile:");
}

id objc_msgSend_useTouchIDSwitchCellLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useTouchIDSwitchCellLabel");
}

id objc_msgSend_user(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "user");
}

id objc_msgSend_userDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDescription");
}

id objc_msgSend_userImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userImage");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfo");
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceIdiom");
}

id objc_msgSend_userIsEnrolledInAnySeedingProgram(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userIsEnrolledInAnySeedingProgram");
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "username");
}

id objc_msgSend_usernameCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usernameCell");
}

id objc_msgSend_validFeedbackFollowups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validFeedbackFollowups");
}

id objc_msgSend_validate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validate:");
}

id objc_msgSend_validateURLSchemeFilePathsDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateURLSchemeFilePathsDictionary:");
}

id objc_msgSend_validationResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validationResponse");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_valueCellConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueCellConfiguration");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKeyPath:");
}

id objc_msgSend_values(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "values");
}

id objc_msgSend_versionFooter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "versionFooter");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "view");
}

id objc_msgSend_viewControllerForColumn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForColumn:");
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllers");
}

id objc_msgSend_viewHasBecomeVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewHasBecomeVisible");
}

id objc_msgSend_visibleCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleCells");
}

id objc_msgSend_visibleChoices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleChoices");
}

id objc_msgSend_visibleFeedbackClosedStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleFeedbackClosedStatus");
}

id objc_msgSend_visibleFilePromises(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleFilePromises");
}

id objc_msgSend_visibleQuestionForSectionIdentifier_itemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleQuestionForSectionIdentifier:itemIdentifier:");
}

id objc_msgSend_wasFBAVisibleAtFirstLaunch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasFBAVisibleAtFirstLaunch");
}

id objc_msgSend_webView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webView");
}

id objc_msgSend_webViewHeightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewHeightConstraint");
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceAndNewlineCharacterSet");
}

id objc_msgSend_whooshSoundID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whooshSoundID");
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willMoveToParentViewController:");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "window");
}

id objc_msgSend_windows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windows");
}

id objc_msgSend_writeToFile_atomically_encoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:atomically:encoding:error:");
}
