_QWORD *sub_100006338(char a1, void *a2, void *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __objc2_class_ro *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;

  v7 = OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_authenticationManager;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_authenticationManager] = 0;
  v8 = OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_state;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_state] = 4;
  v9 = v3;
  v10 = &BIABubbleOptionsiOSViewController;
  v11 = objc_msgSend(a3, "rootObject");
  if (v11)
  {
    v12 = v11;
    v13 = objc_opt_self(BCInternalAuthenticationRequest);
    v14 = swift_dynamicCastObjCClass(v12, v13);
    if (v14)
    {
      v15 = objc_msgSend(objc_allocWithZone((Class)BCInternalAuthenticationManager), "initWithAuthenticationRequest:", v14);
      v16 = a1;
      v17 = a2;
      v18 = *(void **)&v3[v7];
      *(_QWORD *)&v3[v7] = v15;
      v19 = v15;

      a2 = v17;
      a1 = v16;
      v10 = &BIABubbleOptionsiOSViewController;
      v20 = objc_msgSend(v19, "state");

      swift_unknownObjectRelease(v12);
      *(_QWORD *)&v3[v8] = v20;
    }
    else
    {
      swift_unknownObjectRelease(v12);
    }
  }
  v21 = objc_msgSend(a3, *(SEL *)&v10[42].ivar_base_size);
  if (v21)
  {
    v22 = v21;
    v23 = objc_opt_self(BCInternalAuthenticationResponse);
    v24 = (void *)swift_dynamicCastObjCClass(v22, v23);
    if (v24)
    {
      v25 = objc_msgSend(v24, "error");

      swift_unknownObjectRelease(v22);
      *(_QWORD *)&v3[v8] = v25 != 0;
    }
    else
    {
      swift_unknownObjectRelease(v22);
    }
  }

  return sub_10007F810(a1 & 1, a2, a3);
}

void sub_100006554()
{
  uint64_t v0;
  void *v1;
  char **v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;

  sub_10007FB34();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_message);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_type))
    v2 = &selRef_replyMessage;
  else
    v2 = &selRef_receivedMessage;
  v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                              + OBJC_IVAR____TtC8Business19IMBActionBubbleView_message), *v2));
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_shouldShowImage) = *(_QWORD *)(v0
                                                                                              + OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_state) == 0;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_titleLabel);
  v4 = (void *)objc_opt_self(UIFont);
  v5 = objc_msgSend(v4, "preferredFontForTextStyle:", UIFontTextStyleCaption2);
  v6 = objc_msgSend(v5, "fontDescriptor");
  v7 = objc_msgSend(v6, "fontDescriptorWithSymbolicTraits:", 2);

  if (v7)
  {
    v8 = objc_msgSend(v4, "fontWithDescriptor:size:", v7, 0.0);

    objc_msgSend(v3, "setFont:", v8);
    v9 = *(void **)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_subtitleLabel);
    v10 = objc_msgSend(v4, "preferredFontForTextStyle:", UIFontTextStyleCaption2);
    objc_msgSend(v9, "setFont:", v10);

    v11 = *(void **)(v0 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_tapIndicator);
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_isInvalid) & 1) != 0)
      v12 = 1;
    else
      v12 = (uint64_t)objc_msgSend(v1, "isFromMe");
    objc_msgSend(v11, "setHidden:", v12);
    v13 = v16;
    if (v16)
      v13 = objc_msgSend(v16, "image");
    v14 = *(void **)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_image);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_image) = v13;
    v15 = v13;

    sub_1000AA424();
    sub_1000067B4();

  }
  else
  {
    __break(1u);
  }
}

id sub_1000067B4()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  NSString v51;
  uint64_t *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  NSString v56;
  void *v57;
  void *v58;
  id v59;
  NSString v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  NSString v66;
  uint64_t v67;
  uint64_t v68;

  switch(*(_QWORD *)&v0[OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_state])
  {
    case 0:
      v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business19IMBActionBubbleView_message], "replyMessage");
      v2 = v1;
      if (!v1)
        goto LABEL_17;
      goto LABEL_7;
    case 1:
      v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business19IMBActionBubbleView_message], "replyMessage");
      v2 = v1;
      if (v1)
        goto LABEL_7;
      goto LABEL_17;
    case 2:
      v6 = OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_authenticationManager;
      v7 = *(void **)&v0[OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_authenticationManager];
      if (v7 && (v8 = objc_msgSend(v7, "title")) != 0)
      {
        v9 = v8;
        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        v12 = v11;

      }
      else
      {
        v10 = 0;
        v12 = 0;
      }
      v31 = (uint64_t *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_title];
      v32 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_title + 8];
      *v31 = v10;
      v31[1] = v12;
      swift_bridgeObjectRelease(v32);
      sub_1000AA190();
      v33 = *(void **)&v0[v6];
      if (v33 && (v34 = objc_msgSend(v33, "subtitle")) != 0)
      {
        v35 = v34;
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        v38 = v37;

      }
      else
      {
        v36 = 0;
        v38 = 0;
      }
      v47 = (uint64_t *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitle];
      v48 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitle + 8];
      *v47 = v36;
      v47[1] = v38;
      swift_bridgeObjectRelease(v48);
      v49 = *(void **)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitleLabel];
      v50 = v47[1];
      if (v50)
      {
        swift_bridgeObjectRetain(v47[1]);
        v51 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v50);
      }
      else
      {
        v51 = 0;
      }
      objc_msgSend(v49, "setText:", v51);

      v57 = *(void **)&v0[OBJC_IVAR____TtC8Business19IMBActionBubbleView_tapIndicator];
      v58 = *(void **)&v0[v6];
      if (v58)
      {
        v59 = objc_msgSend(v58, "action");
        v60 = v59;
        if (v59)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
          v62 = v61;

          v60 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v62);
        }
      }
      else
      {
        v60 = 0;
      }
      objc_msgSend(v57, "setText:", v60);

      v29 = 1;
      objc_msgSend(v49, "setNumberOfLines:", 1);
      return objc_msgSend(v0, "setUserInteractionEnabled:", v29);
    case 3:
      v13 = OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_authenticationManager;
      v14 = *(void **)&v0[OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_authenticationManager];
      if (v14 && (v15 = objc_msgSend(v14, "title")) != 0)
      {
        v16 = v15;
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v19 = v18;

      }
      else
      {
        v17 = 0;
        v19 = 0;
      }
      v39 = (uint64_t *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_title];
      v40 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_title + 8];
      *v39 = v17;
      v39[1] = v19;
      swift_bridgeObjectRelease(v40);
      sub_1000AA190();
      v41 = *(void **)&v0[v13];
      if (v41 && (v42 = objc_msgSend(v41, "subtitle")) != 0)
      {
        v43 = v42;
        v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
        v46 = v45;

      }
      else
      {
        v44 = 0;
        v46 = 0;
      }
      v52 = (uint64_t *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitle];
      v53 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitle + 8];
      *v52 = v44;
      v52[1] = v46;
      swift_bridgeObjectRelease(v53);
      v54 = *(void **)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitleLabel];
      v55 = v52[1];
      if (v55)
      {
        swift_bridgeObjectRetain(v52[1]);
        v56 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v55);
      }
      else
      {
        v56 = 0;
      }
      objc_msgSend(v54, "setText:", v56);

      v63 = *(void **)&v0[OBJC_IVAR____TtC8Business19IMBActionBubbleView_tapIndicator];
      v64 = *(void **)&v0[v13];
      if (v64)
      {
        v65 = objc_msgSend(v64, "action");
        v66 = v65;
        if (v65)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
          v68 = v67;

          v66 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v68);
        }
      }
      else
      {
        v66 = 0;
      }
      objc_msgSend(v63, "setText:", v66);

      objc_msgSend(v54, "setNumberOfLines:", 0);
      v29 = 1;
      return objc_msgSend(v0, "setUserInteractionEnabled:", v29);
    case 4:
      v20 = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
      v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v23 = String._bridgeToObjectiveC()();
      v24 = String._bridgeToObjectiveC()();
      v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);

      v2 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v5 = v26;

      goto LABEL_18;
    default:
      v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business19IMBActionBubbleView_message], "replyMessage");
      v2 = v1;
      if (!v1)
        goto LABEL_17;
LABEL_7:
      v3 = objc_msgSend(v1, "title");

      if (v3)
      {
        v2 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
        v5 = v4;

      }
      else
      {
        v2 = 0;
LABEL_17:
        v5 = 0;
      }
LABEL_18:
      v27 = &v0[OBJC_IVAR____TtC8Business13IMBBubbleView_title];
      v28 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_title + 8];
      *(_QWORD *)v27 = v2;
      *((_QWORD *)v27 + 1) = v5;
      swift_bridgeObjectRelease(v28);
      sub_1000AA190();
      v29 = 0;
      return objc_msgSend(v0, "setUserInteractionEnabled:", v29);
  }
}

void sub_100006D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_state);
  if (v6 == 3)
  {
    v15 = *(void **)(v0 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_message);
    v16 = objc_msgSend(v15, "rootKey");
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    LOBYTE(v16) = objc_msgSend(v15, "isFromMe");
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCLoggingEventNameAttemptSignIn);
    v22 = v21;
    sub_100085D10(v17, v19, (char)v16, v20, v21, (uint64_t)objc_msgSend(v15, "version"));
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v22);
    v23 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_urlHelper);
    sub_100008FA4(v23, v23[3]);
    v24 = sub_100008FA4(v23, v23[3]);
    (*(void (**)(char *, _QWORD *, uint64_t))(v2 + 16))(v5, v24, v1);
    sub_10004E4AC((uint64_t)v5, 1, 0, 0);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  else if (v6 == 2)
  {
    v7 = *(void **)(v0 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_message);
    v8 = objc_msgSend(v7, "rootKey");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    LOBYTE(v8) = objc_msgSend(v7, "isFromMe");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCLoggingEventNameAuthenticate);
    v14 = v13;
    sub_100085D10(v9, v11, (char)v8, v12, v13, (uint64_t)objc_msgSend(v7, "version"));
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v14);
    sub_100006FEC();
  }
}

void sub_100006FEC()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  char *v16;
  _QWORD v17[5];
  uint64_t v18;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8Business13IMBBubbleView_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType(Strong);
    v7 = (void *)(*(uint64_t (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 40))(v1, &off_1000DA838, ObjectType, v5);
    swift_unknownObjectRelease(v4);
    if (v7)
    {
      v8 = objc_msgSend(v7, "recipientAddresses");
      v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for String);

      v10 = *(_QWORD *)(v9 + 16);
      swift_bridgeObjectRelease(v9);
      if (v10 == 1 && (sub_100007504() & 1) != 0)
      {
        v11 = *(void **)&v1[OBJC_IVAR____TtC8Business35IMBInternalAuthenticationBubbleView_authenticationManager];
        if (v11)
        {
          v12 = swift_allocObject(&unk_1000D6510, 32, 7);
          *(_QWORD *)(v12 + 16) = v11;
          *(_QWORD *)(v12 + 24) = v1;
          v17[4] = sub_100009064;
          v18 = v12;
          v17[0] = _NSConcreteStackBlock;
          v17[1] = 1107296256;
          v17[2] = sub_100048D88;
          v17[3] = &unk_1000D6528;
          v13 = _Block_copy(v17);
          v14 = v18;
          v15 = v11;
          v16 = v1;
          swift_release(v14);
          objc_msgSend(v15, "fetchCredentials:", v13);
          _Block_release(v13);

        }
      }
    }
  }
}

void sub_10000716C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t Strong;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t (*v40)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v41;
  id v42;
  id v43;
  id v44;
  NSString v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  NSString v56;
  id v57;

  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v9 = qword_1000F8A90;
  v10 = static os_log_type_t.default.getter();
  v11 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v12 = swift_allocObject(v11, 112, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1000ADFC0;
  v51 = a1;
  v52 = a1;
  v53 = a2;
  swift_bridgeObjectRetain(a2);
  v13 = sub_100007D40((uint64_t *)&unk_1000EBE50);
  v14 = String.init<A>(describing:)(&v52, v13);
  v16 = v15;
  *(_QWORD *)(v12 + 56) = &type metadata for String;
  v17 = sub_100009084();
  *(_QWORD *)(v12 + 64) = v17;
  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = v16;
  v52 = a3;
  swift_errorRetain(a3);
  v18 = sub_100007D40(&qword_1000EBE60);
  v19 = String.init<A>(describing:)(&v52, v18);
  *(_QWORD *)(v12 + 96) = &type metadata for String;
  *(_QWORD *)(v12 + 104) = v17;
  *(_QWORD *)(v12 + 72) = v19;
  *(_QWORD *)(v12 + 80) = v20;
  os_log(_:dso:log:type:_:)("IMBInternalAuthenticationBubbleView: credential retrieved: %@,  error?: %@", 74, 2, &_mh_execute_header, v9, v10, v12);
  swift_bridgeObjectRelease(v12);
  v21 = objc_msgSend(a4, "authenticationRequest");
  v22 = objc_msgSend(v21, "businessIdentifier");
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = objc_msgSend(v21, "groupIdentifier");
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  if (a3)
    a3 = _convertErrorToNSError(_:)(a3);
  v30 = objc_allocWithZone((Class)BCInternalAuthenticationResponse);
  swift_bridgeObjectRetain(a2);
  v31 = sub_100007FAC(v23, v25, v27, v29, v51, a2, a3);
  v32 = *(void **)(a5 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_message);
  v33 = objc_msgSend(v31, "responseMessageFor:message:", a4, v32);
  v34 = sub_10000774C(v33, v31);
  v35 = a5 + OBJC_IVAR____TtC8Business13IMBBubbleView_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a5 + OBJC_IVAR____TtC8Business13IMBBubbleView_delegate);
  if (Strong)
  {
    v37 = Strong;
    v38 = *(_QWORD *)(v35 + 8);
    ObjectType = swift_getObjectType(Strong);
    v40 = *(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v38 + 40);
    v41 = v32;
    v42 = (id)v40(a5, &off_1000DA838, ObjectType, v38);
    swift_unknownObjectRelease(v37);
    if (v42)
      goto LABEL_10;
  }
  else
  {
    v43 = v32;
  }
  v42 = objc_msgSend(objc_allocWithZone((Class)MSConversation), "init");
LABEL_10:
  v44 = objc_msgSend(v33, "replyMessage");
  v45 = objc_msgSend(v33, "rootKey");
  if (!v45)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v47 = v46;
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v47);
  }
  v52 = (uint64_t)v32;
  v53 = (uint64_t)v34;
  v54 = v42;
  v55 = v44;
  v56 = v45;
  v57 = v31;
  v48 = v31;
  v49 = v34;
  sub_1000371DC(1);

}

uint64_t sub_100007504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  _QWORD v22[5];
  _QWORD v23[5];

  v1 = v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_delegate;
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_delegate);
  if (!result)
    return result;
  v3 = result;
  v4 = *(_QWORD *)(v1 + 8);
  ObjectType = swift_getObjectType(result);
  v6 = (void *)(*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 40))(v0, &off_1000DA838, ObjectType, v4);
  swift_unknownObjectRelease(v3);
  if (!v6)
    return 0;
  v7 = objc_msgSend(v6, "recipientAddresses");
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
  {
LABEL_14:

    swift_bridgeObjectRelease(v8);
    return 0;
  }
  result = objc_opt_self(BCConstants);
  v10 = 0;
  v21 = (id)result;
  while (1)
  {
    if (v10 >= *(_QWORD *)(v8 + 16))
    {
      __break(1u);
      return result;
    }
    v11 = (uint64_t *)(v8 + 32 + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    swift_bridgeObjectRetain(v12);
    v14 = objc_msgSend(v21, "allowedAppleURNs");
    v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v22[0] = v13;
    v22[1] = v12;
    AnyHashable.init<A>(_:)(v23, v22, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v15 + 16))
    {
      v16 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v15 + 40));
      v17 = -1 << *(_BYTE *)(v15 + 32);
      v18 = v16 & ~v17;
      if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
        break;
    }
LABEL_5:
    ++v10;
    swift_bridgeObjectRelease(v15);
    result = sub_100009004((uint64_t)v23);
    if (v10 == v9)
      goto LABEL_14;
  }
  v19 = ~v17;
  while (1)
  {
    sub_100008FC8(*(_QWORD *)(v15 + 48) + 40 * v18, (uint64_t)v22);
    v20 = static AnyHashable.== infix(_:_:)(v22, v23);
    sub_100009004((uint64_t)v22);
    if ((v20 & 1) != 0)
      break;
    v18 = (v18 + 1) & v19;
    if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease(v15);
  sub_100009004((uint64_t)v23);

  swift_bridgeObjectRelease(v8);
  return 1;
}

id sub_10000774C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  NSString v32;
  NSString v33;
  id v34;
  uint64_t v36;
  void *v37;

  v5 = v2 + OBJC_IVAR____TtC8Business13IMBBubbleView_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Business13IMBBubbleView_delegate);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType();
    v10 = (void *)(*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v8 + 40))(v2, &off_1000DA838, ObjectType, v8);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v10, "selectedMessage");
  v12 = objc_msgSend(v11, "session");

  if (!v12)
    v12 = objc_msgSend(objc_allocWithZone((Class)MSSession), "init");
  v13 = objc_msgSend(objc_allocWithZone((Class)MSMessageTemplateLayout), "init");
  v14 = objc_msgSend(a1, "replyMessage");
  v37 = v10;
  if (v14 && (v15 = v14, v16 = objc_msgSend(v14, "title"), v15, v16))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v18 = v17;

  }
  else
  {
    v18 = 0;
  }
  v19 = objc_msgSend(a1, "replyMessage");
  if (v19
    && (v20 = v19, v21 = objc_msgSend(v19, "subtitle"), v20, v21))
  {
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v23 = v22;

  }
  else
  {
    v36 = 0;
    v23 = 0;
  }
  v24 = objc_msgSend(objc_allocWithZone((Class)MSMessage), "initWithSession:", v12);
  v25 = objc_msgSend(a2, "error");

  if (v25)
  {
    if (v18)
    {
LABEL_16:
      swift_bridgeObjectRetain(v18);
      v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v18);
      goto LABEL_24;
    }
  }
  else
  {
    v27 = objc_msgSend(a1, "replyMessage");
    if (!v27
      || (v28 = v27, v29 = objc_msgSend(v27, "image"), v28, !v29))
    {
      v30 = objc_msgSend(a1, "receivedMessage", v36, v37);
      if (v30)
      {
        v31 = v30;
        v29 = objc_msgSend(v30, "image");

      }
      else
      {
        v29 = 0;
      }
    }
    objc_msgSend(v13, "setImage:", v29, v36);

    if (v18)
      goto LABEL_16;
  }
  v26 = 0;
LABEL_24:
  objc_msgSend(v13, "setCaption:", v26, v36);

  if (v23)
  {
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    v32 = 0;
  }
  objc_msgSend(v13, "setSubcaption:", v32);

  if (v18)
  {
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v33 = 0;
  }
  objc_msgSend(v24, "setAccessibilityLabel:", v33);

  v34 = objc_msgSend(objc_allocWithZone((Class)MSMessageLiveLayout), "initWithAlternateLayout:", v13);
  objc_msgSend(v24, "setLayout:", v34);

  return v24;
}

void sub_100007B04()
{
  uint64_t v0;

}

id sub_100007B14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBInternalAuthenticationBubbleView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t variable initialization expression of IMBJITAppBundleManager.$__lazy_storage_$_containerID()
{
  return 0;
}

uint64_t variable initialization expression of IMBApplePayManager.tryAgainAuthorizationStatus()
{
  return 1000;
}

uint64_t variable initialization expression of IMBJITAppBundleManager.delegate()
{
  return 0;
}

uint64_t variable initialization expression of Reachability.previousFlags()
{
  return 0x100000000;
}

uint64_t variable initialization expression of Reachability.reachabilityQueue()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  _QWORD *v18;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5, v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9, v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000090C8(0, (unint64_t *)&qword_1000EBD00, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter();
  v18 = _swiftEmptyArrayStorage;
  v13 = sub_1000086B8((unint64_t *)&qword_1000EBD08, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_100007D40(&qword_1000EBD10);
  v15 = sub_100007D80();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v14, v15, v5, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000026, 0x80000001000B3C40, v12, v8, v4, 0);
}

uint64_t sub_100007D40(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_100007D80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EBD18;
  if (!qword_1000EBD18)
  {
    v1 = sub_100007DCC(&qword_1000EBD10);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000EBD18);
  }
  return result;
}

uint64_t sub_100007DCC(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t variable initialization expression of IMBJITAppBundleManager.pendingBundleUpdate()
{
  return 0;
}

id variable initialization expression of Reachability.notificationCenter()
{
  return objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
}

id variable initialization expression of IMBJITAppBundleManager.userDefaults()
{
  return objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
}

uint64_t variable initialization expression of IMBJITAppBundleManager.pendingUpdateVersion()
{
  return 3157552;
}

uint64_t type metadata accessor for IMBInternalAuthenticationBubbleView()
{
  return objc_opt_self(_TtC8Business35IMBInternalAuthenticationBubbleView);
}

__n128 initializeWithTake for NotificationOptionsMacCatalystView(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_100007EB0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100007ED0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBD58, (uint64_t)&unk_1000D63C8);
}

void type metadata accessor for BCBubbleViewStyle(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBD60, (uint64_t)&unk_1000D63F0);
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBD68, (uint64_t)&unk_1000D6418);
}

void type metadata accessor for SCNetworkReachabilityFlags(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBD70, (uint64_t)&unk_1000D6438);
}

void type metadata accessor for SCNetworkReachability(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBD78, (uint64_t)&unk_1000D6460);
}

void type metadata accessor for BCApplePayStatus(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBD80, (uint64_t)&unk_1000D6490);
}

void type metadata accessor for PKPaymentSummaryItemType(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBD88, (uint64_t)&unk_1000D64B0);
}

void type metadata accessor for BCInternalAuthenticationState(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBD90, (uint64_t)&unk_1000D64D0);
}

void type metadata accessor for MSMessagesAppPresentationStyle(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBD98, (uint64_t)&unk_1000D64F0);
}

id sub_100007FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  NSString v12;
  NSString v13;
  NSString v14;
  void *v15;
  id v16;

  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (!a6)
  {
    v14 = 0;
    if (a7)
      goto LABEL_3;
LABEL_5:
    v15 = 0;
    goto LABEL_6;
  }
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
  if (!a7)
    goto LABEL_5;
LABEL_3:
  v15 = (void *)_convertErrorToNSError(_:)(a7);
  swift_errorRelease(a7);
LABEL_6:
  v16 = objc_msgSend(v7, "initWithBusinessIdentifier:groupIdentifier:credentials:error:", v12, v13, v14, v15);

  return v16;
}

uint64_t sub_100008098(uint64_t a1, uint64_t a2)
{
  return sub_100008D3C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_1000080B0(uint64_t a1, uint64_t a2)
{
  return sub_100008D3C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

NSNumber sub_1000080C4()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_1000080CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static Float._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_10000811C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_100008170(float *a1@<X8>)
{
  *a1 = static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

NSNumber sub_100008194()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_10000819C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static CGFloat._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_1000081EC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_100008240(double *a1@<X8>)
{
  *a1 = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

BOOL sub_100008264(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_100008278(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_100008284(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

_DWORD *sub_100008298@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1000082A4(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1000082AC@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1000082C0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1000082D4@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1000082E8(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_100008318@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_100008344@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_100008368(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_10000837C(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_100008390(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_1000083A4@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1000083B8(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000083CC(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1000083E0(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1000083F4()
{
  _DWORD *v0;

  return *v0 == 0;
}

uint64_t sub_100008404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_DWORD *sub_10000841C(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

void sub_100008430(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_100008444(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1000AEF44, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_100008480(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1000AEF44, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_1000084C8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  WitnessTable = swift_getWitnessTable(&unk_1000AEF44, a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

uint64_t sub_100008520(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_100008594(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_100008610@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

uint64_t sub_100008650@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4;
  uint64_t result;

  v4 = sub_100008F6C(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_10000868C()
{
  return sub_1000086B8(&qword_1000EBDA0, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_1000AE258);
}

uint64_t sub_1000086B8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000086F8()
{
  return sub_1000086B8(&qword_1000EBDA8, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_1000AE228);
}

uint64_t sub_100008724()
{
  return sub_1000086B8(&qword_1000EBDB0, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_1000AE280);
}

uint64_t sub_100008750()
{
  return sub_1000086B8(&qword_1000EBDB8, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_1000AE2B8);
}

uint64_t sub_10000877C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_1000AEF44, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

uint64_t sub_1000087C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000086B8(&qword_1000EBDD8, (uint64_t (*)(uint64_t))type metadata accessor for BCBubbleViewStyle, (uint64_t)&unk_1000AE470);
  v3 = sub_1000086B8(&qword_1000EBDE0, (uint64_t (*)(uint64_t))type metadata accessor for BCBubbleViewStyle, (uint64_t)&unk_1000AE418);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000884C()
{
  return sub_1000086B8(&qword_1000EBDC0, (uint64_t (*)(uint64_t))type metadata accessor for BCBubbleViewStyle, (uint64_t)&unk_1000AE3E0);
}

uint64_t sub_100008878()
{
  return sub_1000086B8(&qword_1000EBDC8, (uint64_t (*)(uint64_t))type metadata accessor for BCBubbleViewStyle, (uint64_t)&unk_1000AE3B8);
}

uint64_t sub_1000088A4()
{
  return sub_1000086B8(&qword_1000EBDD0, (uint64_t (*)(uint64_t))type metadata accessor for BCBubbleViewStyle, (uint64_t)&unk_1000AE448);
}

uint64_t sub_1000088D0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000088F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000086B8((unint64_t *)&qword_1000EBF80, (uint64_t (*)(uint64_t))type metadata accessor for PKContactField, (uint64_t)&unk_1000AEF04);
  v3 = sub_1000086B8(&qword_1000EBF88, (uint64_t (*)(uint64_t))type metadata accessor for PKContactField, (uint64_t)&unk_1000AED24);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000897C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000086B8(&qword_1000EBF70, (uint64_t (*)(uint64_t))type metadata accessor for PKPaymentNetwork, (uint64_t)&unk_1000AEE7C);
  v3 = sub_1000086B8(&qword_1000EBF78, (uint64_t (*)(uint64_t))type metadata accessor for PKPaymentNetwork, (uint64_t)&unk_1000AEE24);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

_DWORD *sub_100008A00@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_100008A10@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_100008A1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000086B8(&qword_1000EBF90, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1000AEC34);
  v3 = sub_1000086B8(&qword_1000EBF98, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1000AEBD4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Float);
}

_QWORD *sub_100008AB0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

double sub_100008AC0@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_100008ACC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = sub_1000086B8(&qword_1000EBFB0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1000AE980);
  v3 = sub_1000086B8(&qword_1000EBFB8, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1000AE920);
  v4 = sub_1000095EC();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, v4);
}

uint64_t sub_100008B6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000086B8((unint64_t *)&qword_1000EBFA0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1000AEFB4);
  v3 = sub_1000086B8(&qword_1000EBFA8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1000AEA84);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100008BF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000086B8((unint64_t *)&qword_1000EBFD8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000AEFF8);
  v3 = sub_1000086B8((unint64_t *)&unk_1000EBFE0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000AE6B4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100008C74@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_100008CB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000086B8(&qword_1000EBFC8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000AE828);
  v3 = sub_1000086B8(&qword_1000EBFD0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000AE7C8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100008D3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100008D78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100008DB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  _QWORD v6[9];

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v0);
  v3 = v2;
  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, v1, v3);
  v4 = Hasher._finalize()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_100008E28()
{
  float *v0;

  return Float.hashValue.getter(*v0);
}

void sub_100008E30()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;

  if ((*v0 & 0x7FFFFFFF) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_100008E60(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFF) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

uint64_t sub_100008E74()
{
  double *v0;

  return Double.hashValue.getter(*v0);
}

void sub_100008E7C()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;

  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_100008EAC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:_:)(a1, v2);
}

uint64_t sub_100008EBC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

BOOL sub_100008F44(float *a1, float *a2)
{
  return *a1 == *a2;
}

BOOL sub_100008F58(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100008F6C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

_QWORD *sub_100008FA4(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100008FC8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_100009004(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_100009038()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100009064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10000716C(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_10000906C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10000907C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100009084()
{
  unint64_t result;

  result = qword_1000ECE60;
  if (!qword_1000ECE60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000ECE60);
  }
  return result;
}

uint64_t sub_1000090C8(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for PKPaymentNetwork(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBE70, (uint64_t)&unk_1000D6560);
}

void type metadata accessor for PKContactField(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBE78, (uint64_t)&unk_1000D6588);
}

void type metadata accessor for PKPaymentMethodType(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBE80, (uint64_t)&unk_1000D65B0);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBE88, (uint64_t)&unk_1000D65D0);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBE90, (uint64_t)&unk_1000D65F8);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBE98, (uint64_t)&unk_1000D6628);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBEA0, (uint64_t)&unk_1000D6650);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBEA8, (uint64_t)&unk_1000D6678);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1000091B4(a1, &qword_1000EBEB0, (uint64_t)&unk_1000D66A0);
}

void sub_1000091B4(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1000091F8()
{
  return sub_1000086B8(&qword_1000EBEB8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000AE678);
}

uint64_t sub_100009224()
{
  return sub_1000086B8(&qword_1000EBEC0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000AE64C);
}

uint64_t sub_100009250()
{
  return sub_1000086B8(&qword_1000EBEC8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000AE78C);
}

uint64_t sub_10000927C()
{
  return sub_1000086B8(&qword_1000EBED0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000AE760);
}

uint64_t sub_1000092A8()
{
  return sub_1000086B8(&qword_1000EBED8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000AE7FC);
}

uint64_t sub_1000092D4()
{
  return sub_1000086B8(&qword_1000EBEE0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1000AE8E4);
}

uint64_t sub_100009300()
{
  return sub_1000086B8(&qword_1000EBEE8, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1000AE8B8);
}

uint64_t sub_10000932C()
{
  return sub_1000086B8(&qword_1000EBEF0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1000AE954);
}

uint64_t sub_100009358()
{
  return sub_1000086B8(&qword_1000EBEF8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1000AEA48);
}

uint64_t sub_100009384()
{
  return sub_1000086B8(&qword_1000EBF00, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1000AEA1C);
}

uint64_t sub_1000093B0()
{
  return sub_1000086B8(&qword_1000EBF08, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1000AEB98);
}

uint64_t sub_1000093DC()
{
  return sub_1000086B8(&qword_1000EBF10, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1000AEB6C);
}

uint64_t sub_100009408()
{
  return sub_1000086B8(&qword_1000EBF18, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1000AEC08);
}

uint64_t sub_100009434()
{
  return sub_1000086B8(&qword_1000EBF20, (uint64_t (*)(uint64_t))type metadata accessor for PKContactField, (uint64_t)&unk_1000AECEC);
}

uint64_t sub_100009460()
{
  return sub_1000086B8(&qword_1000EBF28, (uint64_t (*)(uint64_t))type metadata accessor for PKContactField, (uint64_t)&unk_1000AECC4);
}

uint64_t sub_10000948C()
{
  return sub_1000086B8(&qword_1000EBF30, (uint64_t (*)(uint64_t))type metadata accessor for PKPaymentNetwork, (uint64_t)&unk_1000AEDEC);
}

uint64_t sub_1000094B8()
{
  return sub_1000086B8(&qword_1000EBF38, (uint64_t (*)(uint64_t))type metadata accessor for PKPaymentNetwork, (uint64_t)&unk_1000AEDC4);
}

uint64_t sub_1000094E4()
{
  return sub_1000086B8(&qword_1000EBF40, (uint64_t (*)(uint64_t))type metadata accessor for PKPaymentNetwork, (uint64_t)&unk_1000AEE54);
}

uint64_t sub_100009510()
{
  return sub_1000086B8(&qword_1000EBF48, (uint64_t (*)(uint64_t))type metadata accessor for PKContactField, (uint64_t)&unk_1000AED54);
}

uint64_t sub_10000953C()
{
  return sub_1000086B8((unint64_t *)&qword_1000EBF50, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1000AEF70);
}

uint64_t sub_100009568()
{
  return sub_1000086B8(&qword_1000EBF58, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1000AEB40);
}

uint64_t sub_100009594()
{
  return sub_1000086B8(&qword_1000EBF60, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1000AEAB8);
}

uint64_t sub_1000095C0()
{
  return sub_1000086B8(&qword_1000EBF68, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000AE6E8);
}

unint64_t sub_1000095EC()
{
  unint64_t result;

  result = qword_1000EBFC0;
  if (!qword_1000EBFC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1000EBFC0);
  }
  return result;
}

_QWORD *sub_10000964C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;

  v2 = v1;
  if (!*(_QWORD *)(a1 + 16)
    || (v4 = sub_10004F068(0x746E756F6D61, 0xE600000000000000), (v5 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v31),
        (swift_dynamicCast(&v29, &v31, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
    v14 = swift_bridgeObjectRelease(a1);
    if (qword_1000EBCB8 != -1)
      v14 = swift_once(&qword_1000EBCB8, sub_100082798);
    v15 = qword_1000F8A90;
    v16 = static os_log_type_t.error.getter(v14);
    os_log(_:dso:log:type:_:)("Unable to create total item: amount is missing", 46, 2, &_mh_execute_header, v15, v16, _swiftEmptyArrayStorage);
    goto LABEL_13;
  }
  v6 = v30;
  if (!*(_QWORD *)(a1 + 16)
    || (v7 = v29, v8 = sub_10004F068(1701869940, 0xE400000000000000), (v9 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v31),
        (swift_dynamicCast(&v29, &v31, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
    swift_bridgeObjectRelease(v6);
    v19 = swift_bridgeObjectRelease(a1);
    if (qword_1000EBCB8 != -1)
      v19 = swift_once(&qword_1000EBCB8, sub_100082798);
    v20 = qword_1000F8A90;
    v21 = static os_log_type_t.error.getter(v19);
    os_log(_:dso:log:type:_:)("Unable to create total item: type is missing", 44, 2, &_mh_execute_header, v20, v21, _swiftEmptyArrayStorage);
    goto LABEL_13;
  }
  v11 = v29;
  v10 = v30;
  if (*(_QWORD *)(a1 + 16) && (v12 = sub_10004F068(0x6C6562616CLL, 0xE500000000000000), (v13 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  swift_bridgeObjectRelease(a1);
  if (!*((_QWORD *)&v32 + 1))
  {
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v10);
    v25 = sub_100009CB0((uint64_t)&v31);
LABEL_26:
    if (qword_1000EBCB8 != -1)
      v25 = swift_once(&qword_1000EBCB8, sub_100082798);
    v26 = qword_1000F8A90;
    v27 = static os_log_type_t.error.getter(v25);
    os_log(_:dso:log:type:_:)("Unable to create total item: label is missing", 45, 2, &_mh_execute_header, v26, v27, _swiftEmptyArrayStorage);
LABEL_13:
    v17 = type metadata accessor for IMBTotalItem();
    swift_deallocPartialClassInstance(v2, v17, 56, 7);
    return 0;
  }
  if ((swift_dynamicCast(&v29, &v31, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v6);
    v25 = swift_bridgeObjectRelease(v10);
    goto LABEL_26;
  }
  v22 = v29;
  v23 = v30;
  if (v11 == 0x676E69646E6570 && v10 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    v24 = 1;
  }
  else
  {
    v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v10, 0x676E69646E6570, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(v10);
    v24 = v28 & 1;
  }
  v2[2] = v7;
  v2[3] = v6;
  v2[4] = v24;
  v2[5] = v22;
  v2[6] = v23;
  return v2;
}

void *sub_1000099FC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  _OWORD v11[2];
  __int128 v12;
  void *v13;

  v1 = v0;
  v2 = v0[2];
  v3 = v0[3];
  v13 = &type metadata for String;
  *(_QWORD *)&v12 = v2;
  *((_QWORD *)&v12 + 1) = v3;
  sub_100009CF0(&v12, v11);
  swift_bridgeObjectRetain(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v11, 0x746E756F6D61, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(0x8000000000000000);
  v5 = v1[5];
  v6 = v1[6];
  v13 = &type metadata for String;
  *(_QWORD *)&v12 = v5;
  *((_QWORD *)&v12 + 1) = v6;
  sub_100009CF0(&v12, v11);
  swift_bridgeObjectRetain(v6);
  v7 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v11, 0x6C6562616CLL, 0xE500000000000000, v7);
  swift_bridgeObjectRelease(0x8000000000000000);
  v8 = v1[4];
  v13 = &type metadata for UInt;
  *(_QWORD *)&v12 = v8;
  sub_100009CF0(&v12, v11);
  v9 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v11, 1701869940, 0xE400000000000000, v9);
  swift_bridgeObjectRelease(0x8000000000000000);
  return &_swiftEmptyDictionarySingleton;
}

id sub_100009B40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  id v5;
  NSString v6;
  id v7;

  v1 = v0[6];
  v2 = v0[3];
  v3 = objc_allocWithZone((Class)NSDecimalNumber);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v5 = objc_msgSend(v3, "initWithString:", v4);

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v7 = objc_msgSend((id)objc_opt_self(PKPaymentSummaryItem), "summaryItemWithLabel:amount:", v6, v5);

  objc_msgSend(v7, "setType:", v0[4]);
  return v7;
}

uint64_t sub_100009C28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for IMBTotalItem()
{
  return objc_opt_self(_TtC8Business12IMBTotalItem);
}

uint64_t sub_100009C74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100009CB0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007D40((uint64_t *)&unk_1000EEB60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_100009CF0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100009D00(uint64_t *a1, uint64_t *a2)
{
  return sub_10000EED0(*a1, *a2);
}

uint64_t sub_100009D0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  void *v90;
  id v91;
  Class isa;
  id v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  id v99;
  void *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __objc2_prot_list **p_prots;
  uint64_t *v106;
  Swift::String *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  Class v118;
  id v119;
  uint64_t v120;
  void *v121;
  id v122;
  id v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __objc2_prot_list **v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  id v148;
  NSURL *v149;
  void *v150;
  void *v151;
  void *v152;
  __objc2_prot_list *v153;
  void *v154;
  id v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  id v172;
  NSURL *v173;
  void *v174;
  void *v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  Swift::String *v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  id v210;
  NSString v211;
  id v212;
  NSString v213;
  id v214;
  unint64_t v215;
  unint64_t v216;
  void *v217;
  uint64_t v218;
  id v219;
  Class v220;
  uint64_t *v221;
  Swift::String *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  _QWORD *v227;
  void *v228;
  id v229;
  id v230;
  id v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  Class v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t i;
  id v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  id v248;
  Class v249;
  id v250;
  uint64_t v251;
  unint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void *v256;
  id v257;
  Class v258;
  char v259;
  void *v260;
  id v261;
  id v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  void *v266;
  uint64_t v267;
  uint64_t v268;
  id v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  Class v273;
  void *v274;
  id v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  id v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char v283;
  id v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  id v299;
  void *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  void (*v308)(char *, uint64_t, uint64_t);
  uint64_t v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t countAndFlagsBits;
  void *v317;
  id v318;
  void *v319;
  Class v320;
  void *v321;
  uint64_t v322;
  uint64_t v323;
  void *v324;
  id v325;
  void *v326;
  Class v327;
  void *v328;
  uint64_t v329;
  uint64_t v330;
  int v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  int v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  id v339;
  Class v340;
  id v341;
  uint64_t v342;
  void *v343;
  id v344;
  id v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  void *v349;
  uint64_t v350;
  uint64_t v351;
  id v352;
  Class v353;
  id v354;
  uint64_t v355;
  void *v356;
  id v357;
  id v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  void *v362;
  uint64_t v363;
  unsigned __int8 v364;
  unsigned __int8 v365;
  void *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  void *v371;
  uint64_t v372;
  void *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  id v381;
  uint64_t v382;
  uint64_t v383;
  id v384;
  unint64_t v385;
  uint64_t v386;
  char *v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  char *v391;
  char *v392;
  uint64_t v393;
  char *v394;
  char *v395;
  char *v396;
  char *v397;
  char *v398;
  uint64_t v399;
  uint64_t v400;
  __int128 v401;
  uint64_t v402;
  _QWORD *v403;
  unint64_t v404;
  Swift::String v405;
  uint64_t v406;
  __int128 v407;
  uint64_t v408;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v402 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4, v5);
  v395 = (char *)&v381 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6, v8);
  v392 = (char *)&v381 - v10;
  __chkstk_darwin(v9, v11);
  v387 = (char *)&v381 - v12;
  v390 = sub_100007D40(&qword_1000ED070);
  v14 = __chkstk_darwin(v390, v13);
  v388 = (uint64_t)&v381 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  v389 = (char *)&v381 - v17;
  v18 = sub_100007D40((uint64_t *)&unk_1000ED480);
  v20 = __chkstk_darwin(v18, v19);
  v398 = (char *)&v381 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20, v22);
  v399 = (uint64_t)&v381 - v24;
  v26 = __chkstk_darwin(v23, v25);
  v396 = (char *)&v381 - v27;
  v29 = __chkstk_darwin(v26, v28);
  v394 = (char *)&v381 - v30;
  v32 = __chkstk_darwin(v29, v31);
  v393 = (uint64_t)&v381 - v33;
  v35 = __chkstk_darwin(v32, v34);
  v391 = (char *)&v381 - v36;
  v38 = __chkstk_darwin(v35, v37);
  v397 = (char *)&v381 - v39;
  if (qword_1000EBCB8 != -1)
    v38 = swift_once(&qword_1000EBCB8, sub_100082798);
  v40 = qword_1000F8A90;
  v41 = static os_log_type_t.info.getter(v38);
  v42 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v43 = swift_allocObject(v42, 72, 7);
  v401 = xmmword_1000AF070;
  *(_OWORD *)(v43 + 16) = xmmword_1000AF070;
  swift_bridgeObjectRetain(a1);
  v44 = sub_100007D40((uint64_t *)&unk_1000EEB60);
  v45 = Dictionary.description.getter(a1, &type metadata for String, v44, &protocol witness table for String);
  v47 = v46;
  swift_bridgeObjectRelease(a1);
  *(_QWORD *)(v43 + 56) = &type metadata for String;
  v48 = sub_100009084();
  *(_QWORD *)(v43 + 64) = v48;
  *(_QWORD *)(v43 + 32) = v45;
  *(_QWORD *)(v43 + 40) = v47;
  os_log(_:dso:log:type:_:)("Creating IMBPaymentRequest from dictionary: %@", 46, 2, &_mh_execute_header, v40, v41, v43);
  v49 = swift_bridgeObjectRelease(v43);
  if (!*(_QWORD *)(a1 + 16) || (v49 = sub_10004F068(0x746E696F70646E65, 0xE900000000000073), (v50 & 1) == 0))
  {
    v51 = &unk_1000F8000;
    goto LABEL_20;
  }
  sub_100010BA4(*(_QWORD *)(a1 + 56) + 32 * v49, (uint64_t)&v405, (uint64_t *)&unk_1000EEB60);
  sub_100010B1C((uint64_t)&v405, (uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
  v51 = (_QWORD *)&unk_1000F8000;
  if (!v408)
  {
    v49 = sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
    goto LABEL_20;
  }
  v52 = sub_100007D40(&qword_1000EC488);
  v49 = swift_dynamicCast(&v403, &v407, (char *)&type metadata for Any + 8, v52, 6);
  if ((v49 & 1) == 0)
  {
LABEL_20:
    v85 = v51[338];
    v86 = static os_log_type_t.error.getter(v49);
    v82 = os_log(_:dso:log:type:_:)("Unable to create PKPaymentRequest: endpoints dictionary is missing", 66, 2, &_mh_execute_header, v85, v86, _swiftEmptyArrayStorage);
    v53 = 0;
    goto LABEL_21;
  }
  v53 = (uint64_t)v403;
  swift_bridgeObjectRetain(v403);
  v54 = sub_10005FD4C(0xD000000000000018, 0x80000001000B3F50, v53);
  v56 = v55;
  swift_bridgeObjectRelease(v53);
  if (v56)
  {
    v57 = (uint64_t)v397;
    URL.init(string:)(v54, v56);
    swift_bridgeObjectRelease(v56);
    v58 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl, &v407, 33, 0);
    sub_100010B60(v57, v58, (uint64_t *)&unk_1000ED480);
    swift_endAccess(&v407);
  }
  swift_bridgeObjectRetain(v53);
  v59 = sub_10005FD4C(0xD000000000000010, 0x80000001000B3EF0, v53);
  v61 = v60;
  swift_bridgeObjectRelease(v53);
  if (v61)
  {
    v62 = (uint64_t)v397;
    URL.init(string:)(v59, v61);
    swift_bridgeObjectRelease(v61);
    v63 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl, &v407, 33, 0);
    sub_100010B60(v62, v63, (uint64_t *)&unk_1000ED480);
    swift_endAccess(&v407);
  }
  swift_bridgeObjectRetain(v53);
  v64 = sub_10005FD4C(0xD000000000000017, 0x80000001000B3F70, v53);
  v66 = v65;
  swift_bridgeObjectRelease(v53);
  if (v66)
  {
    v67 = (uint64_t)v397;
    URL.init(string:)(v64, v66);
    swift_bridgeObjectRelease(v66);
    v68 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl, &v407, 33, 0);
    sub_100010B60(v67, v68, (uint64_t *)&unk_1000ED480);
    swift_endAccess(&v407);
  }
  swift_bridgeObjectRetain(v53);
  v69 = sub_10005FD4C(0xD000000000000016, 0x80000001000B3F30, v53);
  v71 = v70;
  swift_bridgeObjectRelease(v53);
  if (v71)
  {
    v72 = (uint64_t)v397;
    URL.init(string:)(v69, v71);
    swift_bridgeObjectRelease(v71);
    v73 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl, &v407, 33, 0);
    sub_100010B60(v72, v73, (uint64_t *)&unk_1000ED480);
    swift_endAccess(&v407);
  }
  swift_bridgeObjectRetain(v53);
  v74 = sub_10005FD4C(0x6B6361626C6C6166, 0xEB000000006C7255, v53);
  v76 = v75;
  swift_bridgeObjectRelease(v53);
  if (v76)
  {
    v77 = (uint64_t)v397;
    URL.init(string:)(v74, v76);
    swift_bridgeObjectRelease(v76);
    v78 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl, &v407, 33, 0);
    sub_100010B60(v77, v78, (uint64_t *)&unk_1000ED480);
    swift_endAccess(&v407);
  }
  swift_bridgeObjectRetain(v53);
  v79 = sub_10005FD4C(0x55746375646F7270, 0xEA00000000006C72, v53);
  v81 = v80;
  v82 = swift_bridgeObjectRelease(v53);
  if (v81)
  {
    v83 = (uint64_t)v397;
    URL.init(string:)(v79, v81);
    swift_bridgeObjectRelease(v81);
    v84 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl, &v407, 33, 0);
    sub_100010B60(v83, v84, (uint64_t *)&unk_1000ED480);
    v82 = swift_endAccess(&v407);
  }
LABEL_21:
  v87 = *(_QWORD *)(a1 + 16);
  v400 = a1;
  if (!v87)
    goto LABEL_32;
  v82 = sub_10004F068(0x52746E656D796170, 0xEE00747365757165);
  if ((v88 & 1) == 0)
    goto LABEL_32;
  sub_100010BA4(*(_QWORD *)(a1 + 56) + 32 * v82, (uint64_t)&v405, (uint64_t *)&unk_1000EEB60);
  sub_100010B1C((uint64_t)&v405, (uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
  if (!v408)
  {
    v82 = sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
LABEL_32:
    v103 = v51[338];
    v104 = static os_log_type_t.default.getter(v82);
    os_log(_:dso:log:type:_:)("Unable to create PKPaymentRequest: paymentRequest is missing", 60, 2, &_mh_execute_header, v103, v104, _swiftEmptyArrayStorage);
    goto LABEL_33;
  }
  v386 = v4;
  v385 = v48;
  v89 = sub_100007D40(&qword_1000EC478);
  v82 = swift_dynamicCast(&v403, &v407, (char *)&type metadata for Any + 8, v89, 6);
  if ((v82 & 1) == 0)
  {
    v48 = v385;
    v4 = v386;
    goto LABEL_32;
  }
  v90 = v403;
  v91 = objc_allocWithZone((Class)PKPaymentRequest);
  swift_bridgeObjectRetain(v90);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v384 = v90;
  swift_bridgeObjectRelease(v90);
  *(_QWORD *)&v407 = 0;
  v93 = objc_msgSend(v91, "initWithDictionary:error:", isa, &v407);

  v94 = (void *)v407;
  if (v93)
  {
    v95 = OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest;
    v96 = v2;
    v97 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
    *(_QWORD *)(v96 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest) = v93;
    v98 = v94;
    v99 = v93;

    v2 = v96;
    v100 = *(void **)(v96 + v95);
    if (v100)
    {
      v101 = v100;
      objc_msgSend(v101, "setAPIType:", 3);

    }
    a1 = v400;
    v51 = (_QWORD *)&unk_1000F8000;
    v102 = (uint64_t)v384;
  }
  else
  {
    v262 = (id)v407;
    v263 = _convertNSErrorToError(_:)(v94);

    swift_willThrow(v264);
    swift_errorRelease(v263);
    v51 = (_QWORD *)&unk_1000F8000;
    v102 = (uint64_t)v384;
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest))
      sub_10000C5A8((uint64_t)v384);
  }
  sub_10005FCF8(0x746163696C707061uLL, 0xEF617461446E6F69, a1, &v405);
  if (v406 == 1)
  {
    sub_100010A98((uint64_t)&v405, &qword_1000EC480);
  }
  else
  {
    sub_100010B1C((uint64_t)&v405, (uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
    if (v408)
    {
      if ((swift_dynamicCast(&v403, &v407, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v265 = v404;
        v266 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
        if (v266)
        {
          v267 = v89;
          v268 = (uint64_t)v403;
          v269 = v266;
          v270 = Data.init(base64Encoded:options:)(v268, v265, 1);
          v272 = v271;
          swift_bridgeObjectRelease(v265);
          if (v272 >> 60 == 15)
          {
            v273 = 0;
          }
          else
          {
            v273 = Data._bridgeToObjectiveC()().super.isa;
            sub_100010BE8(v270, v272);
          }
          v51 = (_QWORD *)&unk_1000F8000;
          v89 = v267;
          objc_msgSend(v269, "setApplicationData:", v273);

          v102 = (uint64_t)v384;
        }
        else
        {
          swift_bridgeObjectRelease(v404);
          v102 = (uint64_t)v384;
        }
      }
    }
    else
    {
      sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
    }
  }
  sub_10005FCA8(0xD00000000000001DLL, 0x80000001000B4540, v102, &v407);
  if (v408)
  {
    v315 = sub_100007D40(qword_1000EEBB0);
    if ((swift_dynamicCast(&v405, &v407, (char *)&type metadata for Any + 8, v315, 6) & 1) != 0)
    {
      countAndFlagsBits = v405._countAndFlagsBits;
      v317 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v317)
      {
        v318 = v317;
        v319 = sub_100082460(countAndFlagsBits);
        swift_bridgeObjectRelease(countAndFlagsBits);
        type metadata accessor for PKContactField(0);
        sub_1000086B8((unint64_t *)&qword_1000EBF80, (uint64_t (*)(uint64_t))type metadata accessor for PKContactField, (uint64_t)&unk_1000AEF04);
        v320 = Set._bridgeToObjectiveC()().super.isa;
        v321 = v319;
        v51 = (_QWORD *)&unk_1000F8000;
        swift_bridgeObjectRelease(v321);
        objc_msgSend(v318, "setRequiredShippingContactFields:", v320);

        v102 = (uint64_t)v384;
      }
      else
      {
        swift_bridgeObjectRelease(v405._countAndFlagsBits);
      }
    }
  }
  else
  {
    sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
  }
  sub_10005FCA8(0xD00000000000001CLL, 0x80000001000B4560, v102, &v407);
  if (v408)
  {
    v322 = sub_100007D40(qword_1000EEBB0);
    if ((swift_dynamicCast(&v405, &v407, (char *)&type metadata for Any + 8, v322, 6) & 1) != 0)
    {
      v323 = v405._countAndFlagsBits;
      v324 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v324)
      {
        v325 = v324;
        v326 = sub_100082460(v323);
        swift_bridgeObjectRelease(v323);
        type metadata accessor for PKContactField(0);
        sub_1000086B8((unint64_t *)&qword_1000EBF80, (uint64_t (*)(uint64_t))type metadata accessor for PKContactField, (uint64_t)&unk_1000AEF04);
        v327 = Set._bridgeToObjectiveC()().super.isa;
        v328 = v326;
        v51 = (_QWORD *)&unk_1000F8000;
        swift_bridgeObjectRelease(v328);
        objc_msgSend(v325, "setRequiredBillingContactFields:", v327);

        v102 = (uint64_t)v384;
      }
      else
      {
        swift_bridgeObjectRelease(v405._countAndFlagsBits);
      }
    }
  }
  else
  {
    sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
  }
  sub_10005FCA8(0x796150656C707061, 0xE800000000000000, v102, &v407);
  if (v408)
  {
    if ((swift_dynamicCast(&v405, &v407, (char *)&type metadata for Any + 8, v89, 6) & 1) != 0)
    {
      v329 = v405._countAndFlagsBits;
      sub_10005FCA8(0xD000000000000011, 0x80000001000B3FC0, v405._countAndFlagsBits, &v407);
      if (v408)
      {
        v330 = sub_100007D40(qword_1000EEBB0);
        v331 = swift_dynamicCast(&v405, &v407, (char *)&type metadata for Any + 8, v330, 6);
        v332 = v405._countAndFlagsBits;
        if (!v331)
          v332 = 0;
      }
      else
      {
        sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
        v332 = 0;
      }
      v333 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_supportedNetworks);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_supportedNetworks) = v332;
      swift_bridgeObjectRelease(v333);
      sub_10005FCA8(0xD000000000000014, 0x80000001000B3FA0, v329, &v407);
      swift_bridgeObjectRelease(v329);
      if (v408)
      {
        v334 = sub_100007D40(qword_1000EEBB0);
        v335 = swift_dynamicCast(&v405, &v407, (char *)&type metadata for Any + 8, v334, 6);
        v336 = v405._countAndFlagsBits;
        if (!v335)
          v336 = 0;
      }
      else
      {
        sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
        v336 = 0;
      }
      v337 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantCapabilities);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantCapabilities) = v336;
      swift_bridgeObjectRelease(v337);
    }
  }
  else
  {
    sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
  }
  sub_10005FCA8(0x43676E696C6C6962, 0xEE00746361746E6FLL, v102, &v407);
  if (v408)
  {
    if ((swift_dynamicCast(&v405, &v407, (char *)&type metadata for Any + 8, v89, 6) & 1) != 0)
    {
      v338 = v405._countAndFlagsBits;
      v339 = objc_allocWithZone((Class)PKContact);
      v340 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v338);
      *(_QWORD *)&v407 = 0;
      v341 = objc_msgSend(v339, "initWithDictionary:error:", v340, &v407);

      v342 = v407;
      if (v341)
      {
        v343 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
        v344 = (id)v407;
        if (v343)
          objc_msgSend(v343, "setBillingContact:", v341);
        v51 = (_QWORD *)&unk_1000F8000;
        v348 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
        v349 = (void *)static OS_os_log.default.getter(v348);
        v350 = static os_log_type_t.default.getter(v349);
        os_log(_:dso:log:type:_:)("BusinessChat: A billingContact was assigned", 43, 2, &_mh_execute_header, v349, v350, _swiftEmptyArrayStorage);

      }
      else
      {
        v345 = (id)v407;
        v346 = _convertNSErrorToError(_:)(v342);

        swift_willThrow(v347);
        swift_errorRelease(v346);
        v51 = (_QWORD *)&unk_1000F8000;
      }
      v102 = (uint64_t)v384;
    }
  }
  else
  {
    sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
  }
  sub_10005FCA8(0x676E697070696873, 0xEF746361746E6F43, v102, &v407);
  if (v408)
  {
    if ((swift_dynamicCast(&v405, &v407, (char *)&type metadata for Any + 8, v89, 6) & 1) != 0)
    {
      v351 = v405._countAndFlagsBits;
      v352 = objc_allocWithZone((Class)PKContact);
      v353 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v351);
      *(_QWORD *)&v407 = 0;
      v354 = objc_msgSend(v352, "initWithDictionary:error:", v353, &v407);

      v355 = v407;
      if (v354)
      {
        v356 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
        v357 = (id)v407;
        if (v356)
          objc_msgSend(v356, "setShippingContact:", v354);
        v51 = (_QWORD *)&unk_1000F8000;
        v361 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
        v362 = (void *)static OS_os_log.default.getter(v361);
        v363 = static os_log_type_t.default.getter(v362);
        os_log(_:dso:log:type:_:)("BusinessChat: A shippingContact was assigned", 44, 2, &_mh_execute_header, v362, v363, _swiftEmptyArrayStorage);

      }
      else
      {
        v358 = (id)v407;
        v359 = _convertNSErrorToError(_:)(v355);

        swift_willThrow(v360);
        swift_errorRelease(v359);
        v51 = (_QWORD *)&unk_1000F8000;
      }
      v102 = (uint64_t)v384;
    }
  }
  else
  {
    sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
  }
  sub_10005FCA8(0x676E697070696873, 0xEC00000065707954, v102, &v407);
  swift_bridgeObjectRelease(v102);
  if (v408)
  {
    if ((swift_dynamicCast(&v405, &v407, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v364 = sub_100010AD4(v405);
      v48 = v385;
      v4 = v386;
      if (v364 != 4)
      {
        v365 = v364;
        v366 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
        if (v366)
          objc_msgSend(v366, "setShippingType:", 3 - v365);
        v367 = swift_allocObject(v42, 72, 7);
        *(_OWORD *)(v367 + 16) = v401;
        *(_QWORD *)&v407 = 3 - v365;
        v368 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
        *(_QWORD *)(v367 + 56) = &type metadata for String;
        *(_QWORD *)(v367 + 64) = v48;
        *(_QWORD *)(v367 + 32) = v368;
        *(_QWORD *)(v367 + 40) = v369;
        v370 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
        v371 = (void *)static OS_os_log.default.getter(v370);
        v372 = static os_log_type_t.default.getter(v371);
        os_log(_:dso:log:type:_:)("BusinessChat: A shippingType was assigned with value = %@", 57, 2, &_mh_execute_header, v371, v372, v367);
        swift_bridgeObjectRelease(v367);

        v51 = (_QWORD *)&unk_1000F8000;
      }
      goto LABEL_33;
    }
  }
  else
  {
    sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
  }
  v48 = v385;
  v4 = v386;
LABEL_33:
  sub_10005FCF8(0x746E61686372656DuLL, 0xEF6E6F6973736553, a1, &v405);
  p_prots = &OBJC_PROTOCOL___NSObject.prots;
  if (v406 == 1)
  {
    v106 = &qword_1000EC480;
    v107 = &v405;
LABEL_42:
    v109 = sub_100010A98((uint64_t)v107, v106);
    goto LABEL_43;
  }
  sub_100010B1C((uint64_t)&v405, (uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
  if (!v408)
  {
    v106 = (uint64_t *)&unk_1000EEB60;
    v107 = (Swift::String *)&v407;
    goto LABEL_42;
  }
  v108 = sub_100007D40(&qword_1000EC478);
  v109 = swift_dynamicCast(&v403, &v407, (char *)&type metadata for Any + 8, v108, 6);
  if ((v109 & 1) == 0)
  {
LABEL_43:
    v132 = v51[338];
    v133 = static os_log_type_t.default.getter(v109);
    os_log(_:dso:log:type:_:)("BusinessChat: this payment request did not contain a merchantSession", 68, 2, &_mh_execute_header, v132, v133, _swiftEmptyArrayStorage);
    goto LABEL_44;
  }
  v386 = v4;
  v110 = (uint64_t)v403;
  v111 = v51[338];
  v112 = static os_log_type_t.default.getter(v109);
  v113 = swift_allocObject(v42, 72, 7);
  *(_OWORD *)(v113 + 16) = v401;
  v114 = Dictionary.debugDescription.getter(v110, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  *(_QWORD *)(v113 + 56) = &type metadata for String;
  *(_QWORD *)(v113 + 64) = v48;
  *(_QWORD *)(v113 + 32) = v114;
  *(_QWORD *)(v113 + 40) = v115;
  os_log(_:dso:log:type:_:)("Creating PaymentSession with dictionary: %@", 43, 2, &_mh_execute_header, v111, v112, v113);
  swift_bridgeObjectRelease(v113);
  v116 = sub_10004C9C0(v110);
  v117 = objc_allocWithZone((Class)PKPaymentMerchantSession);
  v118 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v116);
  v119 = objc_msgSend(v117, "initWithDictionary:", v118);

  v120 = OBJC_IVAR____TtC8Business17IMBPaymentRequest_session;
  v121 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_session);
  v384 = v119;
  v383 = OBJC_IVAR____TtC8Business17IMBPaymentRequest_session;
  if (!v121)
    goto LABEL_146;
  v385 = v48;
  v382 = v42;
  v122 = v121;
  v123 = objc_msgSend(v122, "merchantIdentifier");
  v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
  v125 = v119;
  v127 = v126;

  v128 = objc_msgSend(v125, "merchantIdentifier");
  v129 = static String._unconditionallyBridgeFromObjectiveC(_:)(v128);
  v131 = v130;

  if (v124 == v129 && v127 == v131)
  {
    swift_bridgeObjectRelease_n(v127, 2);

LABEL_128:
    v120 = v383;
    v260 = *(void **)(v2 + v383);
    v119 = v384;
    *(_QWORD *)(v2 + v383) = v384;
    v261 = v119;

    v42 = v382;
    v48 = v385;
    goto LABEL_147;
  }
  v259 = _stringCompareWithSmolCheck(_:_:expecting:)(v124, v127, v129, v131, 0);
  swift_bridgeObjectRelease(v127);
  swift_bridgeObjectRelease(v131);

  if ((v259 & 1) != 0)
    goto LABEL_128;
  v120 = v383;
  v274 = *(void **)(v2 + v383);
  v42 = v382;
  v48 = v385;
  v119 = v384;
  if (!v274)
  {
LABEL_146:
    *(_QWORD *)(v2 + v120) = v119;
    v284 = v119;
LABEL_147:
    v285 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_sessionDictionary);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_sessionDictionary) = v110;
    swift_bridgeObjectRetain(v110);
    swift_bridgeObjectRelease(v285);
    sub_10005FCA8(0x4173657269707865, 0xE900000000000074, v110, &v407);
    swift_bridgeObjectRelease(v110);
    v4 = v386;
    if (v408)
    {
      if ((swift_dynamicCast(&v405, &v407, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
      {
        v286 = (uint64_t)v389;
        Date.init(timeIntervalSince1970:)(*(double *)&v405._countAndFlagsBits / 1000.0);
        v287 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v287 - 8) + 56))(v286, 0, 1, v287);
        v288 = v388;
        sub_100010B1C(v286, v388, &qword_1000ED070);
        v289 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate;
        swift_beginAccess(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate, &v407, 33, 0);
        sub_100010B60(v288, v289, &qword_1000ED070);
        v290 = swift_endAccess(&v407);
        v388 = qword_1000F8A90;
        v291 = static os_log_type_t.default.getter(v290);
        v292 = v48;
        v293 = swift_allocObject(v42, 72, 7);
        *(_OWORD *)(v293 + 16) = v401;
        sub_100010BA4(v289, v286, &qword_1000ED070);
        v294 = Optional.debugDescription.getter(v390);
        v296 = v295;
        v4 = v386;
        sub_100010A98(v286, &qword_1000ED070);
        *(_QWORD *)(v293 + 56) = &type metadata for String;
        *(_QWORD *)(v293 + 64) = v292;
        *(_QWORD *)(v293 + 32) = v294;
        *(_QWORD *)(v293 + 40) = v296;
        v119 = v384;
        v297 = v291;
        v120 = v383;
        os_log(_:dso:log:type:_:)("Merchant Session Expiration Date set to: %@", 43, 2, &_mh_execute_header, v388, v297, v293);
        v298 = v293;
        v48 = v292;
        swift_bridgeObjectRelease(v298);
      }
    }
    else
    {
      sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
    }
    v299 = *(id *)(v2 + v120);
    p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___NSObject + 16);
    if (v299)
    {
      v299 = objc_msgSend(v299, "initiativeContext");
      if (v299)
      {
        v300 = v299;
        v301 = static String._unconditionallyBridgeFromObjectiveC(_:)(v299);
        v303 = v302;

        v304 = (uint64_t)v391;
        URL.init(string:)(v301, v303);
        swift_bridgeObjectRelease(v303);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v402 + 48))(v304, 1, v4) != 1)
        {

          v307 = v402;
          v308 = *(void (**)(char *, uint64_t, uint64_t))(v402 + 32);
          v309 = v304;
          v310 = v387;
          v308(v387, v309, v4);
          v311 = (uint64_t)v397;
          v308(v397, (uint64_t)v310, v4);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v307 + 56))(v311, 0, 1, v4);
          v312 = v393;
          sub_100010B1C(v311, v393, (uint64_t *)&unk_1000ED480);
          v313 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl;
          swift_beginAccess(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl, &v407, 33, 0);
          v314 = v312;
          p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___NSObject + 16);
          sub_100010B60(v314, v313, (uint64_t *)&unk_1000ED480);
          swift_endAccess(&v407);
          v51 = (_QWORD *)&unk_1000F8000;
LABEL_44:
          if (os_variant_has_internal_content("com.apple.icloud.messages"))
          {
            if (v53)
            {
              v134 = sub_10005FD4C(0xD000000000000011, 0x80000001000B3F10, v53);
              v136 = v135;
              swift_bridgeObjectRelease(v53);
              if (v136)
              {
                v137 = v42;
                v138 = p_prots;
                v139 = (uint64_t)v394;
                URL.init(string:)(v134, v136);
                swift_bridgeObjectRelease(v136);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v402 + 48))(v139, 1, v4) == 1)
                {
                  sub_100010A98(v139, (uint64_t *)&unk_1000ED480);
                }
                else
                {
                  v140 = v402;
                  v141 = v392;
                  (*(void (**)(char *, uint64_t, uint64_t))(v402 + 32))(v392, v139, v4);
                  v142 = v397;
                  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v397, v141, v4);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v142, 0, 1, v4);
                  v143 = (uint64_t)v142;
                  v144 = v393;
                  sub_100010B1C(v143, v393, (uint64_t *)&unk_1000ED480);
                  v145 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl;
                  swift_beginAccess(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl, &v407, 33, 0);
                  sub_100010B60(v144, v145, (uint64_t *)&unk_1000ED480);
                  swift_endAccess(&v407);
                  v146 = OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest;
                  v147 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
                  if (v147)
                  {
                    v148 = v147;
                    URL._bridgeToObjectiveC()(v149);
                    v151 = v150;
                    objc_msgSend(v148, "setOriginatingURL:", v150);

                    v152 = *(void **)(v2 + v146);
                    if (v152)
                      objc_msgSend(v152, "setMerchantSession:", *(uint64_t *)((char *)&v138[36]->count + v2));
                  }
                  (*(void (**)(char *, uint64_t))(v402 + 8))(v141, v4);
                }
                p_prots = v138;
                v42 = v137;
              }
            }
          }
          else
          {
            swift_bridgeObjectRelease(v53);
          }
          v153 = p_prots[36];
          v154 = *(void **)((char *)&v153->count + v2);
          if (v154)
          {
            v155 = objc_msgSend(v154, "initiativeContext");
            if (v155)
            {
              v156 = v155;
              v157 = static String._unconditionallyBridgeFromObjectiveC(_:)(v155);
              v159 = v158;

              v160 = (uint64_t)v396;
              URL.init(string:)(v157, v159);
              swift_bridgeObjectRelease(v159);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v402 + 48))(v160, 1, v4) != 1)
              {
                v168 = v395;
                (*(void (**)(char *, uint64_t, uint64_t))(v402 + 32))(v395, v160, v4);
                v169 = v2;
                v170 = OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest;
                v171 = *(void **)(v169 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
                if (v171)
                {
                  v172 = v171;
                  URL._bridgeToObjectiveC()(v173);
                  v175 = v174;
                  objc_msgSend(v172, "setOriginatingURL:", v174);

                  v176 = *(void **)(v169 + v170);
                  if (v176)
                    objc_msgSend(v176, "setMerchantSession:", *(uint64_t *)((char *)&v153->count + v169));
                }
                (*(void (**)(char *, uint64_t))(v402 + 8))(v168, v4);
                v2 = v169;
                v163 = v400;
                goto LABEL_71;
              }
              sub_100010A98(v160, (uint64_t *)&unk_1000ED480);
              v51 = &unk_1000F8000;
            }
          }
          v161 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
          if (!v161)
          {
            v167 = v399;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v402 + 56))(v399, 1, 1, v4);
            v163 = v400;
LABEL_69:
            v178 = sub_100010A98(v167, (uint64_t *)&unk_1000ED480);
            v179 = v51[338];
            v180 = static os_log_type_t.error.getter(v178);
            os_log(_:dso:log:type:_:)("BusinessChat: Failed to create originatingURL", 45, 2, &_mh_execute_header, v179, v180, _swiftEmptyArrayStorage);
            goto LABEL_71;
          }
          v162 = objc_msgSend(v161, "originatingURL");
          v163 = v400;
          if (v162)
          {
            v164 = v162;
            v165 = (uint64_t)v398;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            v166 = 0;
          }
          else
          {
            v166 = 1;
            v165 = (uint64_t)v398;
          }
          v177 = v402;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v402 + 56))(v165, v166, 1, v4);
          v167 = v399;
          sub_100010B1C(v165, v399, (uint64_t *)&unk_1000ED480);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v177 + 48))(v167, 1, v4) == 1)
            goto LABEL_69;
          sub_100010A98(v167, (uint64_t *)&unk_1000ED480);
LABEL_71:
          sub_10005FCF8(0x6574617473uLL, 0xE500000000000000, v163, &v405);
          if (v406 == 1)
          {
            v181 = &qword_1000EC480;
            v182 = &v405;
          }
          else
          {
            sub_100010B1C((uint64_t)&v405, (uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
            if (v408)
            {
              if ((swift_dynamicCast(&v403, &v407, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
              {
                v183 = sub_10006103C((uint64_t)v403, v404);
                if ((v184 & 1) == 0)
                {
                  v185 = v183;
                  v186 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
                  *(_QWORD *)v186 = v183;
                  *(_BYTE *)(v186 + 8) = 0;
                  v187 = swift_allocObject(v42, 72, 7);
                  *(_OWORD *)(v187 + 16) = v401;
                  v188 = sub_100060F1C(v185);
                  *(_QWORD *)(v187 + 56) = &type metadata for String;
                  *(_QWORD *)(v187 + 64) = v48;
                  *(_QWORD *)(v187 + 32) = v188;
                  *(_QWORD *)(v187 + 40) = v189;
                  v190 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
                  v191 = (void *)static OS_os_log.default.getter(v190);
                  v192 = static os_log_type_t.default.getter(v191);
                  os_log(_:dso:log:type:_:)("BusinessChat: IMBPaymentRequest: Payment State set to %@\tFrom Payload", 69, 2, &_mh_execute_header, v191, v192, v187);
                  goto LABEL_80;
                }
              }
LABEL_79:
              v193 = sub_10000D1CC();
              v194 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
              *(_QWORD *)v194 = v193;
              *(_BYTE *)(v194 + 8) = 0;
              v187 = swift_allocObject(v42, 72, 7);
              *(_OWORD *)(v187 + 16) = v401;
              v195 = sub_100060F1C(v193);
              *(_QWORD *)(v187 + 56) = &type metadata for String;
              *(_QWORD *)(v187 + 64) = v48;
              *(_QWORD *)(v187 + 32) = v195;
              *(_QWORD *)(v187 + 40) = v196;
              v197 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
              v191 = (void *)static OS_os_log.default.getter(v197);
              v198 = static os_log_type_t.default.getter(v191);
              os_log(_:dso:log:type:_:)("BusinessChat: IMBPaymentRequest: Payment State set to %@", 56, 2, &_mh_execute_header, v191, v198, v187);
LABEL_80:
              swift_bridgeObjectRelease(v187);

              sub_10005FCF8(0x49656E694C77656EuLL, 0xEC000000736D6574, v163, &v405);
              if (v406 == 1)
              {
                sub_100010A98((uint64_t)&v405, &qword_1000EC480);
              }
              else
              {
                sub_100010B1C((uint64_t)&v405, (uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
                if (v408)
                {
                  v199 = sub_100007D40(&qword_1000ED040);
                  if ((swift_dynamicCast(&v403, &v407, (char *)&type metadata for Any + 8, v199, 6) & 1) != 0)
                  {
                    v402 = v2;
                    *(_QWORD *)&v407 = _swiftEmptyArrayStorage;
                    *(_QWORD *)&v401 = v403;
                    v200 = v403[2];
                    if (v200)
                    {
                      v201 = (uint64_t *)(v401 + 32);
                      v202 = type metadata accessor for IMBLineItem();
                      do
                      {
                        v204 = *v201;
                        swift_allocObject(v202, 56, 7);
                        v205 = swift_bridgeObjectRetain(v204);
                        v206 = sub_10007C184(v205);
                        if (v206)
                        {
                          v207 = v206;
                          v208 = v206[3];
                          v209 = v206[5];
                          v210 = objc_allocWithZone((Class)NSDecimalNumber);
                          swift_bridgeObjectRetain(v208);
                          swift_bridgeObjectRetain(v209);
                          v211 = String._bridgeToObjectiveC()();
                          swift_bridgeObjectRelease(v209);
                          v212 = objc_msgSend(v210, "initWithString:", v211);

                          v213 = String._bridgeToObjectiveC()();
                          swift_bridgeObjectRelease(v208);
                          v214 = objc_msgSend((id)objc_opt_self(PKPaymentSummaryItem), "summaryItemWithLabel:amount:", v213, v212);

                          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v214, "setType:", v207[6]));
                          v216 = *(_QWORD *)((v407 & 0xFFFFFFFFFFFFFF8) + 0x10);
                          v215 = *(_QWORD *)((v407 & 0xFFFFFFFFFFFFFF8) + 0x18);
                          if (v216 >= v215 >> 1)
                            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v215 > 1, v216 + 1, 1);
                          v203 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v216, v214);
                          specialized Array._endMutation()(v203);
                          swift_release(v207);
                        }
                        ++v201;
                        --v200;
                      }
                      while (v200);
                    }
                    swift_bridgeObjectRelease(v401);
                    v2 = v402;
                    v217 = *(void **)(v402 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
                    if (v217)
                    {
                      v218 = v407;
                      sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
                      v219 = v217;
                      v220 = Array._bridgeToObjectiveC()().super.isa;
                      swift_bridgeObjectRelease(v218);
                      objc_msgSend(v219, "setPaymentSummaryItems:", v220);

                    }
                    else
                    {
                      swift_bridgeObjectRelease(v407);
                    }
                    v163 = v400;
                  }
                }
                else
                {
                  sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
                }
              }
              sub_10005FCF8(0x6C61746F5477656EuLL, 0xE800000000000000, v163, &v405);
              if (v406 == 1)
              {
                v221 = &qword_1000EC480;
                v222 = &v405;
              }
              else
              {
                sub_100010B1C((uint64_t)&v405, (uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
                if (v408)
                {
                  v223 = sub_100007D40(&qword_1000EC478);
                  if ((swift_dynamicCast(&v403, &v407, (char *)&type metadata for Any + 8, v223, 6) & 1) != 0)
                  {
                    v224 = (uint64_t)v403;
                    v225 = type metadata accessor for IMBLineItem();
                    swift_allocObject(v225, 56, 7);
                    v226 = sub_10007C184(v224);
                    if (v226)
                    {
                      v227 = v226;
                      v228 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
                      if (v228)
                      {
                        v229 = v228;
                        v230 = sub_10007C600();
                        v231 = objc_msgSend(v229, "paymentSummaryItems");
                        v232 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
                        v233 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v231, v232);

                        *(_QWORD *)&v407 = v233;
                        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v234);
                        v236 = *(_QWORD *)((v407 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        v235 = *(_QWORD *)((v407 & 0xFFFFFFFFFFFFFF8) + 0x18);
                        if (v236 >= v235 >> 1)
                          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v235 > 1, v236 + 1, 1);
                        v237 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v236, v230);
                        specialized Array._endMutation()(v237);
                        v238 = v407;
                        v239 = Array._bridgeToObjectiveC()().super.isa;
                        swift_bridgeObjectRelease(v238);
                        objc_msgSend(v229, "setPaymentSummaryItems:", v239);

                      }
                      swift_release(v227);
                    }
                  }
LABEL_108:
                  sub_10005FCF8(0xD000000000000012, 0x80000001000B43D0, v163, &v405);
                  if (v406 == 1)
                  {
                    sub_100010A98((uint64_t)&v405, &qword_1000EC480);
                    goto LABEL_218;
                  }
                  sub_100010B1C((uint64_t)&v405, (uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
                  if (!v408)
                  {
                    sub_100010A98((uint64_t)&v407, (uint64_t *)&unk_1000EEB60);
                    goto LABEL_218;
                  }
                  v240 = sub_100007D40(&qword_1000ED040);
                  if ((swift_dynamicCast(&v403, &v407, (char *)&type metadata for Any + 8, v240, 6) & 1) == 0)
                  {
LABEL_218:
                    swift_retain(v2);
                    return v2;
                  }
                  v402 = v2;
                  v241 = (uint64_t)v403;
                  *(_QWORD *)&v407 = _swiftEmptyArrayStorage;
                  v242 = v403[2];
                  if (v242)
                  {
                    for (i = 0; i != v242; ++i)
                    {
                      v247 = *(_QWORD *)(v241 + 8 * i + 32);
                      v248 = objc_allocWithZone((Class)PKShippingMethod);
                      swift_bridgeObjectRetain(v247);
                      v249 = Dictionary._bridgeToObjectiveC()().super.isa;
                      swift_bridgeObjectRelease(v247);
                      v405._countAndFlagsBits = 0;
                      v250 = objc_msgSend(v248, "initWithDictionary:error:", v249, &v405);

                      v251 = v405._countAndFlagsBits;
                      if (v250)
                      {
                        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()((id)v405._countAndFlagsBits);
                        v253 = *(_QWORD *)((v407 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        v252 = *(_QWORD *)((v407 & 0xFFFFFFFFFFFFFF8) + 0x18);
                        if (v253 >= v252 >> 1)
                          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v252 > 1, v253 + 1, 1);
                        v254 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v253, v250);
                        specialized Array._endMutation()(v254);
                      }
                      else
                      {
                        v244 = (id)v405._countAndFlagsBits;
                        v245 = _convertNSErrorToError(_:)(v251);

                        swift_willThrow(v246);
                        swift_errorRelease(v245);
                      }
                    }
                    swift_bridgeObjectRelease(v241);
                    v255 = v407;
                  }
                  else
                  {
                    swift_bridgeObjectRelease(v403);
                    v255 = (uint64_t)_swiftEmptyArrayStorage;
                  }
                  v2 = v402;
                  if ((unint64_t)v255 >> 62)
                  {
                    if (v255 < 0)
                      v378 = v255;
                    else
                      v378 = v255 & 0xFFFFFFFFFFFFFF8;
                    swift_bridgeObjectRetain(v255);
                    v379 = _CocoaArrayWrapper.endIndex.getter(v378);
                    swift_bridgeObjectRelease(v255);
                    if (!v379)
                      goto LABEL_217;
                  }
                  else if (!*(_QWORD *)((v255 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    goto LABEL_217;
                  }
                  v256 = *(void **)(v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
                  if (v256)
                  {
                    sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
                    v257 = v256;
                    v258 = Array._bridgeToObjectiveC()().super.isa;
                    swift_bridgeObjectRelease(v255);
                    objc_msgSend(v257, "setShippingMethods:", v258);

                    v2 = v402;
                    goto LABEL_218;
                  }
LABEL_217:
                  swift_bridgeObjectRelease(v255);
                  goto LABEL_218;
                }
                v221 = (uint64_t *)&unk_1000EEB60;
                v222 = (Swift::String *)&v407;
              }
              sub_100010A98((uint64_t)v222, v221);
              goto LABEL_108;
            }
            v181 = (uint64_t *)&unk_1000EEB60;
            v182 = (Swift::String *)&v407;
          }
          sub_100010A98((uint64_t)v182, v181);
          goto LABEL_79;
        }
        v299 = (id)sub_100010A98(v304, (uint64_t *)&unk_1000ED480);
      }
    }
    v51 = &unk_1000F8000;
    v305 = qword_1000F8A90;
    v306 = static os_log_type_t.error.getter(v299);
    os_log(_:dso:log:type:_:)("BusinessChat: A paymentGatewayUrl was not set", 45, 2, &_mh_execute_header, v305, v306, _swiftEmptyArrayStorage);

    goto LABEL_44;
  }
  v381 = v274;
  v275 = objc_msgSend(v381, "merchantIdentifier");
  v276 = static String._unconditionallyBridgeFromObjectiveC(_:)(v275);
  v278 = v277;

  v279 = objc_msgSend(v119, "merchantIdentifier");
  v280 = static String._unconditionallyBridgeFromObjectiveC(_:)(v279);
  v282 = v281;

  if (v276 == v280 && v278 == v282)
  {

    swift_bridgeObjectRelease_n(v278, 2);
    goto LABEL_145;
  }
  v283 = _stringCompareWithSmolCheck(_:_:expecting:)(v276, v278, v280, v282, 0);
  swift_bridgeObjectRelease(v278);
  swift_bridgeObjectRelease(v282);
  if ((v283 & 1) != 0)
  {

LABEL_145:
    v119 = v384;
    v120 = v383;
    v48 = v385;
    if (*(_QWORD *)(v2 + v383))
      goto LABEL_147;
    goto LABEL_146;
  }
  swift_bridgeObjectRelease(v110);
  swift_bridgeObjectRelease(v53);
  v373 = *(void **)(v2 + v383);
  *(_QWORD *)(v2 + v383) = 0;

  v374 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
  *(_QWORD *)v374 = 7;
  *(_BYTE *)(v374 + 8) = 0;
  v375 = qword_1000F8A90;
  v377 = static os_log_type_t.error.getter(v376);
  os_log(_:dso:log:type:_:)("BusinessChat: passed in value for merchantSession's merchantIdentifier did not match previous value", 99, 2, &_mh_execute_header, v375, v377, _swiftEmptyArrayStorage);
  swift_retain(v2);

  return v2;
}

void sub_10000C5A8(uint64_t a1)
{
  __objc2_class_ro *v1;
  __objc2_class_ro *v2;
  __objc2_class_ro *v3;
  unint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSString v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  id v15;
  NSString v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  Class isa;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSString v43;
  id v44;
  NSString v45;
  id v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  unint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  Class v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  Class v75;
  id v76;
  _QWORD *v77;
  _QWORD *v78;
  id v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  Class v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  char *v94;
  void *v95;
  __objc2_class_ro *v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  Class v108;
  void *v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  Class v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  __objc2_class_ro *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123[4];

  v3 = v1;
  if (!*(_QWORD *)(a1 + 16)
    || (v5 = sub_10004F068(0x437972746E756F63, 0xEB0000000065646FLL), (v6 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)v123),
        (swift_dynamicCast(&v121, v123, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
LABEL_6:
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_14;
    goto LABEL_7;
  }
  v7 = v122;
  v8 = *(void **)((char *)&v3->flags + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
  if (v8)
  {
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    objc_msgSend(v9, "setCountryCode:", v10);

    goto LABEL_6;
  }
  swift_bridgeObjectRelease(v122);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_14;
LABEL_7:
  v11 = sub_10004F068(0x79636E6572727563, 0xEC00000065646F43);
  if ((v12 & 1) != 0)
  {
    sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v123);
    if ((swift_dynamicCast(&v121, v123, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v13 = v122;
      v14 = *(void **)((char *)&v3->flags + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v14)
      {
        v15 = v14;
        v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v13);
        objc_msgSend(v15, "setCurrencyCode:", v16);

      }
      else
      {
        swift_bridgeObjectRelease(v122);
      }
    }
  }
LABEL_14:
  if (!*(_QWORD *)(a1 + 16)
    || (v17 = sub_10004F068(0xD000000000000012, 0x80000001000B4210), (v18 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v17, (uint64_t)v123),
        v19 = sub_100007D40(qword_1000EEBB0),
        (swift_dynamicCast(&v121, v123, (char *)&type metadata for Any + 8, v19, 6) & 1) == 0))
  {
LABEL_22:
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_53;
    goto LABEL_23;
  }
  v2 = v3;
  v20 = v121;
  v121 = &_swiftEmptySetSingleton;
  v21 = v20[2];
  if (v21)
  {
    v22 = v20 + 5;
    do
    {
      v23 = *(v22 - 1);
      v24 = *v22;
      swift_bridgeObjectRetain(*v22);
      sub_10009FED0(v123, v23, v24);
      swift_bridgeObjectRelease(v123[1]);
      v22 += 2;
      --v21;
    }
    while (v21);
  }
  swift_bridgeObjectRelease(v20);
  v3 = v2;
  v25 = *(void **)((char *)&v2->flags + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
  if (v25)
  {
    v26 = v121;
    v27 = v25;
    isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v26);
    objc_msgSend(v27, "setSupportedCountries:", isa);

    goto LABEL_22;
  }
  swift_bridgeObjectRelease(v121);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_53;
LABEL_23:
  v29 = sub_10004F068(0x6D657449656E696CLL, 0xE900000000000073);
  if ((v30 & 1) != 0)
  {
    sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v29, (uint64_t)v123);
    v31 = sub_100007D40(&qword_1000ED040);
    if ((swift_dynamicCast(&v121, v123, (char *)&type metadata for Any + 8, v31, 6) & 1) != 0)
    {
      v120 = v3;
      v123[0] = (uint64_t)_swiftEmptyArrayStorage;
      v119 = v121;
      v32 = v121[2];
      if (v32)
      {
        v33 = v121 + 4;
        v34 = type metadata accessor for IMBLineItem();
        do
        {
          v36 = *v33;
          swift_allocObject(v34, 56, 7);
          v37 = swift_bridgeObjectRetain(v36);
          v38 = sub_10007C184(v37);
          if (v38)
          {
            v39 = v38;
            v40 = v38[3];
            v41 = v38[5];
            v42 = objc_allocWithZone((Class)NSDecimalNumber);
            swift_bridgeObjectRetain(v40);
            swift_bridgeObjectRetain(v41);
            v43 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v41);
            v44 = objc_msgSend(v42, "initWithString:", v43);

            v45 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v40);
            v46 = objc_msgSend((id)objc_opt_self(PKPaymentSummaryItem), "summaryItemWithLabel:amount:", v45, v44);

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v46, "setType:", v39[6]));
            v2 = *(__objc2_class_ro **)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
            v47 = *(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
            if ((unint64_t)v2 >= v47 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, (char *)&v2->flags + 1, 1);
            v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v46);
            specialized Array._endMutation()(v35);
            swift_release(v39);
          }
          ++v33;
          --v32;
        }
        while (v32);
      }
      swift_bridgeObjectRelease(v119);
      v48 = OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest;
      v3 = v120;
      v49 = *(void **)((char *)&v120->flags + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (!v49)
      {
        v59 = v123[0];
        goto LABEL_52;
      }
      v50 = objc_msgSend(v49, "paymentSummaryItems");
      v51 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
      v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v50, v51);

      if ((unint64_t)v52 >> 62)
      {
        if (v52 < 0)
          v60 = v52;
        else
          v60 = v52 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v52);
        v54 = (char *)_CocoaArrayWrapper.endIndex.getter(v60);
        swift_bridgeObjectRelease(v52);
        if (v54)
        {
LABEL_35:
          v55 = (unint64_t)(v54 - 1);
          if (__OFSUB__(v54, 1))
          {
            __break(1u);
          }
          else if ((v52 & 0xC000000000000001) == 0)
          {
            if ((v55 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else
            {
              v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v55 < v53)
              {
                v56 = *(id *)(v52 + 8 * v55 + 32);
                goto LABEL_40;
              }
            }
            __break(1u);
            goto LABEL_95;
          }
          v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v55, v52);
LABEL_40:
          v57 = v56;
          swift_bridgeObjectRelease(v52);
          v54 = v57;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
          v3 = *(__objc2_class_ro **)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v53 = *(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if ((unint64_t)v3 < v53 >> 1)
          {
LABEL_41:
            v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, v54);
            specialized Array._endMutation()(v58);

            v3 = v120;
            goto LABEL_50;
          }
LABEL_95:
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, (char *)&v3->flags + 1, 1);
          goto LABEL_41;
        }
      }
      else
      {
        v53 = v52 & 0xFFFFFFFFFFFFF8;
        v54 = *(char **)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v54)
          goto LABEL_35;
      }
      swift_bridgeObjectRelease(v52);
LABEL_50:
      v61 = *(void **)((char *)&v3->flags + v48);
      v59 = v123[0];
      if (v61)
      {
        v62 = v61;
        v63 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v59);
        objc_msgSend(v62, "setPaymentSummaryItems:", v63);

        goto LABEL_53;
      }
LABEL_52:
      swift_bridgeObjectRelease(v59);
    }
  }
LABEL_53:
  if (*(_QWORD *)(a1 + 16))
  {
    v64 = sub_10004F068(0x676E697070696873, 0xEF73646F6874654DLL);
    if ((v65 & 1) != 0)
    {
      sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v64, (uint64_t)v123);
      v66 = sub_100007D40(&qword_1000ED040);
      if ((swift_dynamicCast(&v121, v123, (char *)&type metadata for Any + 8, v66, 6) & 1) != 0)
      {
        v67 = v121;
        v123[0] = (uint64_t)_swiftEmptyArrayStorage;
        v68 = v121[2];
        if (v68)
        {
          v69 = 0;
          v2 = (__objc2_class_ro *)&protocol witness table for String;
          do
          {
            v73 = v67[v69 + 4];
            v74 = objc_allocWithZone((Class)PKShippingMethod);
            swift_bridgeObjectRetain(v73);
            v75 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v73);
            v121 = 0;
            v76 = objc_msgSend(v74, "initWithDictionary:error:", v75, &v121);

            v77 = v121;
            if (v76)
            {
              v78 = v121;
              v79 = v76;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
              v81 = *(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
              v80 = *(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v81 >= v80 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
              v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v79);
              specialized Array._endMutation()(v82);

            }
            else
            {
              v70 = v121;
              v71 = _convertNSErrorToError(_:)(v77);

              swift_willThrow(v72);
              swift_errorRelease(v71);
            }
            ++v69;
          }
          while (v68 != v69);
          swift_bridgeObjectRelease(v67);
          v83 = v123[0];
          if (!((unint64_t)v123[0] >> 62))
          {
LABEL_65:
            if (!*(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_89;
LABEL_66:
            v84 = *(void **)((char *)&v3->flags + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
            if (v84)
            {
              sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
              v85 = v84;
              v86 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v83);
              objc_msgSend(v85, "setShippingMethods:", v86);

              goto LABEL_68;
            }
LABEL_89:
            swift_bridgeObjectRelease(v83);
            if (!*(_QWORD *)(a1 + 16))
              return;
            goto LABEL_69;
          }
        }
        else
        {
          swift_bridgeObjectRelease(v121);
          v83 = (uint64_t)_swiftEmptyArrayStorage;
          if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
            goto LABEL_65;
        }
        if (v83 < 0)
          v116 = v83;
        else
          v116 = v83 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v83);
        v117 = _CocoaArrayWrapper.endIndex.getter(v116);
        swift_bridgeObjectRelease(v83);
        if (!v117)
          goto LABEL_89;
        goto LABEL_66;
      }
    }
  }
LABEL_68:
  if (!*(_QWORD *)(a1 + 16))
    return;
LABEL_69:
  v87 = sub_10004F068(0x6C61746F74, 0xE500000000000000);
  if ((v88 & 1) != 0)
  {
    sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v87, (uint64_t)v123);
    v89 = sub_100007D40(&qword_1000EC478);
    if ((swift_dynamicCast(&v121, v123, (char *)&type metadata for Any + 8, v89, 6) & 1) != 0)
    {
      v90 = (uint64_t)v121;
      v91 = type metadata accessor for IMBTotalItem();
      swift_allocObject(v91, 56, 7);
      v92 = sub_10000964C(v90);
      if (v92)
      {
        v93 = v92;
        v94 = (char *)OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest;
        v95 = *(void **)((char *)&v3->flags + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
        if (!v95)
          goto LABEL_83;
        v96 = v3;
        v97 = v95;
        v98 = objc_msgSend(v97, "paymentSummaryItems");
        v99 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
        v100 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v98, v99);

        if ((unint64_t)v100 >> 62)
        {
          if (v100 < 0)
            v118 = v100;
          else
            v118 = v100 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v100);
          v102 = _CocoaArrayWrapper.endIndex.getter(v118);
          swift_bridgeObjectRelease(v100);
          if (v102)
            goto LABEL_75;
        }
        else
        {
          v101 = v100 & 0xFFFFFFFFFFFFF8;
          v102 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v102)
          {
LABEL_75:
            isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v100);
            v123[0] = v100;
            if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v100 < 0 || (v100 & 0x4000000000000000) != 0)
            {
              isUniquelyReferenced_nonNull_bridgeObject = sub_10000EE68(v100);
              v100 = isUniquelyReferenced_nonNull_bridgeObject;
              v123[0] = isUniquelyReferenced_nonNull_bridgeObject;
            }
            v101 = v100 & 0xFFFFFFFFFFFFFF8;
            v104 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v104)
            {
              v105 = v104 - 1;
              v106 = *(void **)((v100 & 0xFFFFFFFFFFFFFF8) + 8 * v105 + 0x20);
              *(_QWORD *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10) = v105;
              specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
              v107 = v123[0];
              v108 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v107);
              v2 = &BIABubbleOptionsiOSViewController;
              objc_msgSend(v97, "setPaymentSummaryItems:", v108);

              v109 = *(void **)&v94[(_QWORD)v96];
              if (v109)
              {
                v94 = v109;
                v97 = sub_100009B40();
                v110 = objc_msgSend(v94, "paymentSummaryItems");
                v111 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v110, v99);

                v123[0] = v111;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v112);
                v102 = *(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
                v101 = *(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v102 < v101 >> 1)
                {
LABEL_82:
                  v113 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v102, v97);
                  specialized Array._endMutation()(v113);
                  v114 = v123[0];
                  v115 = Array._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease(v114);
                  objc_msgSend(v94, (SEL)v2[48].base_prots, v115);

                  goto LABEL_83;
                }
LABEL_102:
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v101 > 1, v102 + 1, 1);
                goto LABEL_82;
              }
LABEL_83:
              swift_release(v93);
              return;
            }
LABEL_101:
            __break(1u);
            goto LABEL_102;
          }
        }
        __break(1u);
        goto LABEL_101;
      }
    }
  }
}

uint64_t sub_10000D1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  Class isa;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  _BYTE v50[24];

  v1 = sub_100007D40(&qword_1000ED070);
  __chkstk_darwin(v1, v2);
  v4 = &v50[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v8 = __chkstk_darwin(v5, v7);
  v10 = &v50[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8, v11);
  v13 = &v50[-v12 - 8];
  if (!sub_10000D654())
    return 1;
  v14 = v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate, v50, 0, 0);
  sub_100010BA4(v14, (uint64_t)v4, &qword_1000ED070);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100010A98((uint64_t)v4, &qword_1000ED070);
  }
  else
  {
    v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v13, v4, v5);
    Date.init()(v16);
    v17 = static Date.> infix(_:_:)(v10, v13);
    v18 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
    v19 = v18(v10, v5);
    if ((v17 & 1) != 0)
    {
      if (qword_1000EBCB8 != -1)
        v19 = swift_once(&qword_1000EBCB8, sub_100082798);
      v49 = qword_1000F8A90;
      v20 = static os_log_type_t.default.getter(v19);
      v21 = sub_100007D40((uint64_t *)&unk_1000ECE50);
      v22 = swift_allocObject(v21, 112, 7);
      *(_OWORD *)(v22 + 16) = xmmword_1000ADFC0;
      v23 = ((uint64_t (*)(void))Date.debugDescription.getter)();
      v25 = v24;
      *(_QWORD *)(v22 + 56) = &type metadata for String;
      v26 = sub_100009084();
      *(_QWORD *)(v22 + 64) = v26;
      *(_QWORD *)(v22 + 32) = v23;
      *(_QWORD *)(v22 + 40) = v25;
      v27 = Date.init()(v26);
      v28 = Date.debugDescription.getter(v27);
      v30 = v29;
      v18(v10, v5);
      *(_QWORD *)(v22 + 96) = &type metadata for String;
      *(_QWORD *)(v22 + 104) = v26;
      *(_QWORD *)(v22 + 72) = v28;
      *(_QWORD *)(v22 + 80) = v30;
      v15 = 2;
      os_log(_:dso:log:type:_:)("Merchant Session Expire Date: %@ is before current date: %@", 59, 2, &_mh_execute_header, v49, v20, v22);
      swift_bridgeObjectRelease(v22);
      v18(v13, v5);
      return v15;
    }
    v18(v13, v5);
  }
  v31 = (void *)objc_opt_self(PKPaymentAuthorizationController);
  v32 = (uint64_t)objc_msgSend(v31, "canMakePayments");
  if ((v32 & 1) != 0)
  {
    v33 = OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest;
    v34 = *(void **)(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
    if (v34)
    {
      v35 = objc_msgSend(v34, "supportedNetworks");
      type metadata accessor for PKPaymentNetwork(0);
      v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v36);

      v38 = *(void **)(v0 + v33);
      if (v38)
      {
        v39 = objc_msgSend(v38, "merchantCapabilities");
        isa = Array._bridgeToObjectiveC()().super.isa;
        v41 = objc_msgSend(v31, "canMakePaymentsUsingNetworks:capabilities:", isa, v39);
        swift_bridgeObjectRelease(v37);

        if ((v41 & 1) == 0)
        {
          if (qword_1000EBCB8 != -1)
            v34 = (void *)swift_once(&qword_1000EBCB8, sub_100082798);
          v42 = qword_1000F8A90;
          v43 = static os_log_type_t.default.getter(v34);
          os_log(_:dso:log:type:_:)("Device can make payments, but not for provided networks", 55, 2, &_mh_execute_header, v42, v43, _swiftEmptyArrayStorage);
          return 5;
        }
      }
      else
      {
        v34 = (void *)swift_bridgeObjectRelease(v37);
      }
    }
    if (qword_1000EBCB8 != -1)
      v34 = (void *)swift_once(&qword_1000EBCB8, sub_100082798);
    v46 = qword_1000F8A90;
    v47 = static os_log_type_t.default.getter(v34);
    os_log(_:dso:log:type:_:)("Device supports payments and can make payments with provided networks", 69, 2, &_mh_execute_header, v46, v47, _swiftEmptyArrayStorage);
    return 0;
  }
  else
  {
    if (qword_1000EBCB8 != -1)
      v32 = swift_once(&qword_1000EBCB8, sub_100082798);
    v44 = qword_1000F8A90;
    v45 = static os_log_type_t.default.getter(v32);
    os_log(_:dso:log:type:_:)("Device cannot make payments", 27, 2, &_mh_execute_header, v44, v45, _swiftEmptyArrayStorage);
    return 6;
  }
}

BOOL sub_10000D654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[24];
  _BYTE v36[24];

  v1 = sub_100007D40(&qword_1000ED070);
  __chkstk_darwin(v1, v2);
  v4 = &v35[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v5, v6);
  v8 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
  if (!v10)
    goto LABEL_23;
  v11 = objc_msgSend(v10, "paymentSummaryItems");
  v12 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_4;
LABEL_22:
    swift_bridgeObjectRelease(v13);
    goto LABEL_23;
  }
  if (v13 < 0)
    v31 = v13;
  else
    v31 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v14 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v13);
  if (!v14)
    goto LABEL_22;
LABEL_4:
  v15 = v14 - 1;
  if (__OFSUB__(v14, 1))
  {
    __break(1u);
  }
  else if ((v13 & 0xC000000000000001) == 0)
  {
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v15 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v16 = *(id *)(v13 + 8 * v15 + 32);
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_32;
  }
  v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13);
LABEL_9:
  v17 = v16;
  swift_bridgeObjectRelease(v13);
  v18 = objc_msgSend(v17, "amount");

  v19 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", 0);
  v20 = objc_msgSend(v18, "compare:", v19);

  if (v20 != (id)1)
  {
LABEL_23:
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v32 = qword_1000F8A90;
    v33 = static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)("Payment request has a total that is zero or less", 48, 2, &_mh_execute_header, v32, v33, _swiftEmptyArrayStorage);
    return 0;
  }
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_supportedNetworks);
  if (v21 && !*(_QWORD *)(v21 + 16))
  {
    if (qword_1000EBCB8 == -1)
    {
LABEL_17:
      v29 = qword_1000F8A90;
      v30 = static os_log_type_t.error.getter();
      os_log(_:dso:log:type:_:)("Payment request has no supportedNetworks", 40, 2, &_mh_execute_header, v29, v30, _swiftEmptyArrayStorage);
      return 0;
    }
LABEL_32:
    swift_once(&qword_1000EBCB8, sub_100082798);
    goto LABEL_17;
  }
  v22 = v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl, v36, 0, 0);
  sub_100010BA4(v22, (uint64_t)v8, (uint64_t *)&unk_1000ED480);
  v23 = type metadata accessor for URL(0);
  LODWORD(v22) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v8, 1, v23);
  sub_100010A98((uint64_t)v8, (uint64_t *)&unk_1000ED480);
  if ((_DWORD)v22 == 1)
    return 0;
  v24 = *(void **)(v0 + v9);
  if (!v24)
    return 0;
  v25 = objc_msgSend(v24, "merchantSession");
  if (!v25)
    return 0;

  v26 = v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate;
  swift_beginAccess(v26, v35, 0, 0);
  sub_100010BA4(v26, (uint64_t)v4, &qword_1000ED070);
  v27 = type metadata accessor for Date(0);
  v28 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v4, 1, v27) != 1;
  sub_100010A98((uint64_t)v4, &qword_1000ED070);
  return v28;
}

void *sub_10000DA94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  unint64_t v18;
  void *v19;
  char v20;
  void *v21;
  void *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  void *v27;
  _OWORD v29[2];
  __int128 v30;
  void *v31;
  void *v32;

  v1 = v0;
  v32 = &_swiftEmptyDictionarySingleton;
  v2 = v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState + 8) & 1) != 0)
  {
    sub_100039FE8(0x6574617473, 0xE500000000000000, &v30);
    sub_100010A98((uint64_t)&v30, (uint64_t *)&unk_1000EEB60);
  }
  else
  {
    v3 = sub_100060F1C(*(_QWORD *)v2);
    v31 = &type metadata for String;
    *(_QWORD *)&v30 = v3;
    *((_QWORD *)&v30 + 1) = v4;
    sub_100009CF0(&v30, v29);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v29, 0x6574617473, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
    v32 = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v6 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1000AF070;
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    v8 = 0;
    v9 = 0;
  }
  else
  {
    v8 = sub_100060F1C(*(_QWORD *)v2);
    v9 = v10;
  }
  *(_QWORD *)(v7 + 56) = &type metadata for String;
  *(_QWORD *)(v7 + 64) = sub_100009084();
  v11 = 7104878;
  if (v9)
    v11 = v8;
  v12 = 0xE300000000000000;
  if (v9)
    v12 = v9;
  *(_QWORD *)(v7 + 32) = v11;
  *(_QWORD *)(v7 + 40) = v12;
  v13 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
  v14 = (void *)static OS_os_log.default.getter(v13);
  v15 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("Sending back Payment State = %@", 31, 2, &_mh_execute_header, v14, v15, v7);
  swift_bridgeObjectRelease(v7);

  v16 = *(void **)(v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
  if (v16)
  {
    v17 = v16;
    v18 = sub_100021094(v1);

    v31 = (void *)sub_100007D40(&qword_1000EC478);
    *(_QWORD *)&v30 = v18;
    sub_100009CF0(&v30, v29);
    v19 = v32;
    v20 = swift_isUniquelyReferenced_nonNull_native(v32);
    v32 = (void *)0x8000000000000000;
    sub_10003A658(v29, 0x52746E656D796170, 0xEE00747365757165, v20);
    v21 = v19;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0x52746E656D796170, 0xEE00747365757165, &v30);
    sub_100010A98((uint64_t)&v30, (uint64_t *)&unk_1000EEB60);
    v21 = v32;
  }
  v22 = sub_10000E418();
  v23 = sub_100007D40(&qword_1000EC478);
  v31 = (void *)v23;
  *(_QWORD *)&v30 = v22;
  sub_100009CF0(&v30, v29);
  v24 = swift_isUniquelyReferenced_nonNull_native(v21);
  sub_10003A658(v29, 0x746E696F70646E65, 0xE900000000000073, v24);
  v32 = v21;
  swift_bridgeObjectRelease(0x8000000000000000);
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_sessionDictionary);
  if (v25)
  {
    v31 = (void *)v23;
    *(_QWORD *)&v30 = v25;
    sub_100009CF0(&v30, v29);
    swift_bridgeObjectRetain(v25);
    v26 = swift_isUniquelyReferenced_nonNull_native(v21);
    sub_10003A658(v29, 0x746E61686372656DLL, 0xEF6E6F6973736553, v26);
    v27 = v21;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0x746E61686372656DLL, 0xEF6E6F6973736553, &v30);
    sub_100010A98((uint64_t)&v30, (uint64_t *)&unk_1000EEB60);
    return v32;
  }
  return v27;
}

uint64_t sub_10000DE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  char v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  char v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  char v39;
  void *v40;
  _OWORD v41[2];
  __int128 v42;
  uint64_t v43;
  void *v44;

  v1 = v0;
  v44 = &_swiftEmptyDictionarySingleton;
  v2 = OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
  if (v3
    && (v4 = objc_msgSend(v3, "billingContact")) != 0
    && (v5 = v4,
        v6 = objc_msgSend(v4, "dictionaryRepresentation"),
        v5,
        v6))
  {
    v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v43 = sub_100007D40(&qword_1000EC470);
    *(_QWORD *)&v42 = v7;
    sub_100009CF0(&v42, v41);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v40 = &_swiftEmptyDictionarySingleton;
    sub_10003A658(v41, 0x43676E696C6C6962, 0xEE00746361746E6FLL, isUniquelyReferenced_nonNull_native);
    v44 = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(0x8000000000000000);
    v9 = *(void **)(v0 + v2);
    if (!v9)
      goto LABEL_10;
  }
  else
  {
    sub_100039FE8(0x43676E696C6C6962, 0xEE00746361746E6FLL, &v42);
    sub_100010A98((uint64_t)&v42, (uint64_t *)&unk_1000EEB60);
    v9 = *(void **)(v0 + v2);
    if (!v9)
    {
LABEL_10:
      sub_100039FE8(0x676E697070696873, 0xEF746361746E6F43, &v42);
      sub_100010A98((uint64_t)&v42, (uint64_t *)&unk_1000EEB60);
      goto LABEL_11;
    }
  }
  v10 = objc_msgSend(v9, "shippingContact", v40);
  if (!v10)
    goto LABEL_10;
  v11 = v10;
  v12 = objc_msgSend(v10, "dictionaryRepresentation");

  if (!v12)
    goto LABEL_10;
  v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v43 = sub_100007D40(&qword_1000EC470);
  *(_QWORD *)&v42 = v13;
  sub_100009CF0(&v42, v41);
  v14 = v44;
  v15 = swift_isUniquelyReferenced_nonNull_native(v44);
  v40 = v14;
  sub_10003A658(v41, 0x676E697070696873, 0xEF746361746E6F43, v15);
  v44 = v14;
  swift_bridgeObjectRelease(0x8000000000000000);
LABEL_11:
  v16 = *(void **)(v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_selectedShippingMethod);
  if (v16 && (v17 = objc_msgSend(v16, "dictionaryRepresentation")) != 0)
  {
    v18 = v17;
    v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v43 = sub_100007D40(&qword_1000EC470);
    *(_QWORD *)&v42 = v19;
    sub_100009CF0(&v42, v41);
    v20 = v44;
    v21 = swift_isUniquelyReferenced_nonNull_native(v44);
    v40 = v20;
    sub_10003A658(v41, 0x676E697070696873, 0xEE00646F6874654DLL, v21);
    v44 = v20;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0x676E697070696873, 0xEE00646F6874654DLL, &v42);
    sub_100010A98((uint64_t)&v42, (uint64_t *)&unk_1000EEB60);
  }
  v22 = *(void **)(v1 + v2);
  if (v22)
  {
    v23 = objc_msgSend(v22, "paymentSummaryItems");
    v24 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

    if (!((unint64_t)v25 >> 62))
      goto LABEL_17;
  }
  else
  {
    v25 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_17:
      v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v26)
        goto LABEL_18;
LABEL_35:
      swift_bridgeObjectRelease(v25);
      v29 = _swiftEmptyArrayStorage;
LABEL_36:
      v43 = sub_100007D40(&qword_1000EC468);
      *(_QWORD *)&v42 = v29;
      sub_100009CF0(&v42, v41);
      v38 = v44;
      v39 = swift_isUniquelyReferenced_nonNull_native(v44);
      sub_10003A658(v41, 0x497972616D6D7573, 0xEC000000736D6574, v39);
      swift_bridgeObjectRelease(0x8000000000000000);
      return (uint64_t)v38;
    }
  }
  if (v25 < 0)
    v37 = v25;
  else
    v37 = v25 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v25);
  v26 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_bridgeObjectRelease(v25);
  if (!v26)
    goto LABEL_35;
LABEL_18:
  *(_QWORD *)&v42 = _swiftEmptyArrayStorage;
  result = sub_10009CA68(0, v26 & ~(v26 >> 63), 0);
  if ((v26 & 0x8000000000000000) == 0)
  {
    v28 = 0;
    v29 = (_QWORD *)v42;
    do
    {
      if ((v25 & 0xC000000000000001) != 0)
        v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v25);
      else
        v30 = *(id *)(v25 + 8 * v28 + 32);
      v31 = v30;
      v32 = objc_msgSend(v30, "dictionaryRepresentation", v40);
      if (v32)
      {
        v33 = v32;
        v34 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v32, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      }
      else
      {

        v34 = 0;
      }
      *(_QWORD *)&v42 = v29;
      v36 = v29[2];
      v35 = v29[3];
      if (v36 >= v35 >> 1)
      {
        sub_10009CA68(v35 > 1, v36 + 1, 1);
        v29 = (_QWORD *)v42;
      }
      ++v28;
      v29[2] = v36 + 1;
      v29[v36 + 4] = v34;
    }
    while (v26 != v28);
    swift_bridgeObjectRelease(v25);
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

void *sub_10000E418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char v64;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  _OWORD v69[2];
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  char v74[24];
  __int128 v75;
  void *v76;
  void *v77;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007D40((uint64_t *)&unk_1000ED480);
  v9 = __chkstk_darwin(v7, v8);
  v67 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)&v66 - v13;
  v16 = __chkstk_darwin(v12, v15);
  v18 = (char *)&v66 - v17;
  v20 = __chkstk_darwin(v16, v19);
  v22 = (char *)&v66 - v21;
  __chkstk_darwin(v20, v23);
  v25 = (char *)&v66 - v24;
  v77 = &_swiftEmptyDictionarySingleton;
  v26 = v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl, v74, 0, 0);
  sub_100010BA4(v26, (uint64_t)v25, (uint64_t *)&unk_1000ED480);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v27(v25, 1, v2))
  {
    sub_100010A98((uint64_t)v25, (uint64_t *)&unk_1000ED480);
    sub_100039FE8(0xD000000000000016, 0x80000001000B3F30, &v75);
    sub_100010A98((uint64_t)&v75, (uint64_t *)&unk_1000EEB60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v25, v2);
    v28 = sub_100010A98((uint64_t)v25, (uint64_t *)&unk_1000ED480);
    v29 = URL.absoluteString.getter(v28);
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v76 = &type metadata for String;
    *(_QWORD *)&v75 = v29;
    *((_QWORD *)&v75 + 1) = v31;
    sub_100009CF0(&v75, v69);
    v32 = v77;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v77);
    v73 = v32;
    sub_10003A658(v69, 0xD000000000000016, 0x80000001000B3F30, isUniquelyReferenced_nonNull_native);
    v77 = v73;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v34 = v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl, &v73, 0, 0);
  sub_100010BA4(v34, (uint64_t)v22, (uint64_t *)&unk_1000ED480);
  if (v27(v22, 1, v2))
  {
    sub_100010A98((uint64_t)v22, (uint64_t *)&unk_1000ED480);
    sub_100039FE8(0xD000000000000018, 0x80000001000B3F50, &v75);
    sub_100010A98((uint64_t)&v75, (uint64_t *)&unk_1000EEB60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v22, v2);
    v35 = sub_100010A98((uint64_t)v22, (uint64_t *)&unk_1000ED480);
    v36 = URL.absoluteString.getter(v35);
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v76 = &type metadata for String;
    *(_QWORD *)&v75 = v36;
    *((_QWORD *)&v75 + 1) = v38;
    sub_100009CF0(&v75, v69);
    v39 = v77;
    v40 = swift_isUniquelyReferenced_nonNull_native(v77);
    v72 = v39;
    sub_10003A658(v69, 0xD000000000000018, 0x80000001000B3F50, v40);
    v77 = v72;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v41 = v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl, &v72, 0, 0);
  sub_100010BA4(v41, (uint64_t)v18, (uint64_t *)&unk_1000ED480);
  if (v27(v18, 1, v2))
  {
    sub_100010A98((uint64_t)v18, (uint64_t *)&unk_1000ED480);
    sub_100039FE8(0xD000000000000017, 0x80000001000B3F70, &v75);
    sub_100010A98((uint64_t)&v75, (uint64_t *)&unk_1000EEB60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v18, v2);
    v42 = sub_100010A98((uint64_t)v18, (uint64_t *)&unk_1000ED480);
    v43 = URL.absoluteString.getter(v42);
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v76 = &type metadata for String;
    *(_QWORD *)&v75 = v43;
    *((_QWORD *)&v75 + 1) = v45;
    sub_100009CF0(&v75, v69);
    v46 = v77;
    v47 = swift_isUniquelyReferenced_nonNull_native(v77);
    v71 = v46;
    sub_10003A658(v69, 0xD000000000000017, 0x80000001000B3F70, v47);
    v77 = v71;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v48 = v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl, &v71, 0, 0);
  sub_100010BA4(v48, (uint64_t)v14, (uint64_t *)&unk_1000ED480);
  if (v27(v14, 1, v2))
  {
    sub_100010A98((uint64_t)v14, (uint64_t *)&unk_1000ED480);
    sub_100039FE8(0xD000000000000010, 0x80000001000B3EF0, &v75);
    sub_100010A98((uint64_t)&v75, (uint64_t *)&unk_1000EEB60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v14, v2);
    v49 = sub_100010A98((uint64_t)v14, (uint64_t *)&unk_1000ED480);
    v50 = URL.absoluteString.getter(v49);
    v52 = v51;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v76 = &type metadata for String;
    *(_QWORD *)&v75 = v50;
    *((_QWORD *)&v75 + 1) = v52;
    sub_100009CF0(&v75, v69);
    v53 = v77;
    v54 = swift_isUniquelyReferenced_nonNull_native(v77);
    v70 = v53;
    sub_10003A658(v69, 0xD000000000000010, 0x80000001000B3EF0, v54);
    v77 = v70;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v55 = v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl, &v70, 0, 0);
  v56 = v55;
  v57 = v67;
  sub_100010BA4(v56, v67, (uint64_t *)&unk_1000ED480);
  if (v27((char *)v57, 1, v2))
  {
    sub_100010A98(v57, (uint64_t *)&unk_1000ED480);
    sub_100039FE8(0x6B6361626C6C6166, 0xEB000000006C7255, &v75);
    sub_100010A98((uint64_t)&v75, (uint64_t *)&unk_1000EEB60);
    return v77;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v57, v2);
    v59 = sub_100010A98(v57, (uint64_t *)&unk_1000ED480);
    v60 = URL.absoluteString.getter(v59);
    v62 = v61;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v76 = &type metadata for String;
    *(_QWORD *)&v75 = v60;
    *((_QWORD *)&v75 + 1) = v62;
    sub_100009CF0(&v75, v69);
    v63 = v77;
    v64 = swift_isUniquelyReferenced_nonNull_native(v77);
    v68 = v63;
    sub_10003A658(v69, 0x6B6361626C6C6166, 0xEB000000006C7255, v64);
    v58 = v68;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  return v58;
}

uint64_t sub_10000EB88()
{
  uint64_t v0;

  sub_100010A98(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl, (uint64_t *)&unk_1000ED480);
  sub_100010A98(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl, (uint64_t *)&unk_1000ED480);
  sub_100010A98(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl, (uint64_t *)&unk_1000ED480);
  sub_100010A98(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl, (uint64_t *)&unk_1000ED480);
  sub_100010A98(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl, (uint64_t *)&unk_1000ED480);
  sub_100010A98(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl, (uint64_t *)&unk_1000ED480);
  sub_100010A98(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl, (uint64_t *)&unk_1000ED480);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantCapabilities));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_supportedNetworks));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_sessionDictionary));

  sub_100010C40((_QWORD *)(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentAuthorizationController));
  sub_100010A98(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate, &qword_1000ED070);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_errors));

  return v0;
}

uint64_t sub_10000ECD0()
{
  uint64_t v0;

  sub_10000EB88();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10000ECF4()
{
  return type metadata accessor for IMBPaymentRequest(0);
}

uint64_t type metadata accessor for IMBPaymentRequest(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EC150;
  if (!qword_1000EC150)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IMBPaymentRequest);
  return result;
}

void sub_10000ED38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[17];

  sub_10000EE1C(319, (unint64_t *)&qword_1000EF650, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = v6[0];
    v6[2] = v6[0];
    v6[3] = v6[0];
    v6[4] = v6[0];
    v6[5] = v6[0];
    v6[6] = v6[0];
    v6[7] = "\b";
    v6[8] = "\b";
    v6[9] = "\b";
    v6[10] = "\b";
    v6[11] = &unk_1000AF0B0;
    v6[12] = &unk_1000AF0C8;
    sub_10000EE1C(319, (unint64_t *)&unk_1000EC160, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v6[13] = *(_QWORD *)(v4 - 8) + 64;
      v6[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[15] = "\b";
      v6[16] = "\b";
      swift_updateClassMetadata2(a1, 256, 17, v6, a1 + 80);
    }
  }
}

void sub_10000EE1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_10000EE68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

uint64_t sub_10000EED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t, uint64_t);
  char *v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char v145;
  void (*v146)(char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int v153;
  uint64_t v154;
  char *v155;
  unsigned int v156;
  uint64_t v157;
  char v158;
  char *v160;
  char *v161;
  uint64_t v162;
  char v163;
  uint64_t *v164;
  void (*v165)(char *, uint64_t);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char v177;
  uint64_t *v178;
  void (*v179)(char *, uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t *v193;
  void (*v194)(char *, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char v206;
  void (*v207)(char *, uint64_t);
  void *v208;
  void *v209;
  uint64_t v210;
  id v211;
  id v212;
  char v213;
  void *v214;
  void *v215;
  id v216;
  id v217;
  char v218;
  uint64_t v219;
  uint64_t v220;
  unsigned int (*v221)(uint64_t, uint64_t, uint64_t);
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  void (*v230)(char *, uint64_t);
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unsigned int (*v235)(uint64_t, uint64_t, uint64_t);
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  void (*v242)(char *, uint64_t);
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  void (*v253)(char *, uint64_t);
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char v263;
  void (*v264)(char *, uint64_t);
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char v274;
  void (*v275)(char *, uint64_t);
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  void (*v284)(char *, uint64_t);
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  char v333[24];
  char v334[24];
  char v335[24];
  char v336[24];
  char v337[24];
  char v338[24];
  char v339[32];

  v325 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v325 - 8);
  __chkstk_darwin(v325, v5);
  v321 = (char *)&v285 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007D40(&qword_1000EC450);
  v9 = __chkstk_darwin(v7, v8);
  v291 = (uint64_t)&v285 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9, v11);
  v294 = (uint64_t)&v285 - v13;
  v15 = __chkstk_darwin(v12, v14);
  v297 = (uint64_t)&v285 - v16;
  v18 = __chkstk_darwin(v15, v17);
  v299 = (uint64_t)&v285 - v19;
  v21 = __chkstk_darwin(v18, v20);
  v303 = (uint64_t)&v285 - v22;
  v24 = __chkstk_darwin(v21, v23);
  v305 = (uint64_t)&v285 - v25;
  v27 = __chkstk_darwin(v24, v26);
  v309 = (char *)&v285 - v28;
  v30 = __chkstk_darwin(v27, v29);
  v311 = (uint64_t)&v285 - v31;
  v33 = __chkstk_darwin(v30, v32);
  v314 = (uint64_t)&v285 - v34;
  v36 = __chkstk_darwin(v33, v35);
  v316 = (uint64_t)&v285 - v37;
  v39 = __chkstk_darwin(v36, v38);
  v320 = (uint64_t)&v285 - v40;
  __chkstk_darwin(v39, v41);
  v43 = (char *)&v285 - v42;
  v44 = sub_100007D40((uint64_t *)&unk_1000ED480);
  v46 = __chkstk_darwin(v44, v45);
  v289 = (uint64_t)&v285 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __chkstk_darwin(v46, v48);
  v290 = (uint64_t)&v285 - v50;
  v52 = __chkstk_darwin(v49, v51);
  v292 = (uint64_t)&v285 - v53;
  v55 = __chkstk_darwin(v52, v54);
  v293 = (uint64_t)&v285 - v56;
  v58 = __chkstk_darwin(v55, v57);
  v295 = (uint64_t)&v285 - v59;
  v61 = __chkstk_darwin(v58, v60);
  v296 = (uint64_t)&v285 - v62;
  v64 = __chkstk_darwin(v61, v63);
  v298 = (uint64_t)&v285 - v65;
  v67 = __chkstk_darwin(v64, v66);
  v300 = (uint64_t)&v285 - v68;
  v70 = __chkstk_darwin(v67, v69);
  v301 = (uint64_t)&v285 - v71;
  v73 = __chkstk_darwin(v70, v72);
  v304 = (uint64_t)&v285 - v74;
  v76 = __chkstk_darwin(v73, v75);
  v302 = (uint64_t)&v285 - v77;
  v79 = __chkstk_darwin(v76, v78);
  v306 = (char *)&v285 - v80;
  v82 = __chkstk_darwin(v79, v81);
  v307 = (uint64_t)&v285 - v83;
  v85 = __chkstk_darwin(v82, v84);
  v308 = (uint64_t)&v285 - v86;
  v88 = __chkstk_darwin(v85, v87);
  v310 = (uint64_t)&v285 - v89;
  v91 = __chkstk_darwin(v88, v90);
  v313 = (uint64_t)&v285 - v92;
  v94 = __chkstk_darwin(v91, v93);
  v312 = (uint64_t)&v285 - v95;
  v97 = __chkstk_darwin(v94, v96);
  v317 = (uint64_t)&v285 - v98;
  v100 = __chkstk_darwin(v97, v99);
  v315 = (uint64_t *)((char *)&v285 - v101);
  v103 = __chkstk_darwin(v100, v102);
  v318 = (uint64_t)&v285 - v104;
  v106 = __chkstk_darwin(v103, v105);
  v319 = (uint64_t)&v285 - v107;
  v109 = __chkstk_darwin(v106, v108);
  v322 = (uint64_t)&v285 - v110;
  v112 = __chkstk_darwin(v109, v111);
  v114 = (char *)&v285 - v113;
  __chkstk_darwin(v112, v115);
  v117 = (char *)&v285 - v116;
  v323 = a1;
  v118 = a1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl;
  swift_beginAccess(v118, v339, 0, 0);
  sub_100010BA4(v118, (uint64_t)v117, (uint64_t *)&unk_1000ED480);
  v324 = a2;
  v119 = a2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl, v338, 0, 0);
  v120 = v7;
  v121 = (uint64_t)&v43[*(int *)(v7 + 48)];
  sub_100010BA4((uint64_t)v117, (uint64_t)v43, (uint64_t *)&unk_1000ED480);
  v122 = v119;
  v123 = v325;
  sub_100010BA4(v122, v121, (uint64_t *)&unk_1000ED480);
  v124 = *(uint64_t **)(v4 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v124)(v43, 1, v123) == 1)
  {
    sub_100010A98((uint64_t)v117, (uint64_t *)&unk_1000ED480);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v121, 1, v123) != 1)
      goto LABEL_6;
    sub_100010A98((uint64_t)v43, (uint64_t *)&unk_1000ED480);
    v125 = v120;
  }
  else
  {
    sub_100010BA4((uint64_t)v43, (uint64_t)v114, (uint64_t *)&unk_1000ED480);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v121, 1, v123) == 1)
    {
      sub_100010A98((uint64_t)v117, (uint64_t *)&unk_1000ED480);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v114, v123);
      goto LABEL_6;
    }
    v127 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
    v288 = v120;
    v128 = v321;
    v127(v321, v121, v123);
    v129 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    LODWORD(v286) = dispatch thunk of static Equatable.== infix(_:_:)(v114, v128, v123, v129);
    v130 = v124;
    v131 = v4;
    v132 = v123;
    v133 = *(void (**)(char *, uint64_t))(v131 + 8);
    v125 = v288;
    v133(v128, v132);
    sub_100010A98((uint64_t)v117, (uint64_t *)&unk_1000ED480);
    v133(v114, v132);
    v123 = v132;
    v4 = v131;
    v124 = v130;
    sub_100010A98((uint64_t)v43, (uint64_t *)&unk_1000ED480);
    if ((v286 & 1) == 0)
      goto LABEL_22;
  }
  v287 = v4;
  v134 = v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl;
  swift_beginAccess(v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl, v337, 0, 0);
  v135 = v322;
  sub_100010BA4(v134, v322, (uint64_t *)&unk_1000ED480);
  v136 = v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl;
  swift_beginAccess(v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl, v336, 0, 0);
  v137 = v320;
  v138 = v320 + *(int *)(v125 + 48);
  sub_100010BA4(v135, v320, (uint64_t *)&unk_1000ED480);
  v286 = v136;
  sub_100010BA4(v136, v138, (uint64_t *)&unk_1000ED480);
  v139 = v125;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v137, 1, v123) == 1)
  {
    sub_100010A98(v135, (uint64_t *)&unk_1000ED480);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v138, 1, v123) != 1)
      goto LABEL_13;
    v285 = v134;
    sub_100010A98(v137, (uint64_t *)&unk_1000ED480);
LABEL_15:
    v147 = v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl;
    swift_beginAccess(v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl, v335, 0, 0);
    v148 = v318;
    sub_100010BA4(v147, v318, (uint64_t *)&unk_1000ED480);
    v149 = v139;
    v150 = v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl;
    swift_beginAccess(v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl, v334, 0, 0);
    v288 = v149;
    v151 = v316;
    v152 = v316 + *(int *)(v149 + 48);
    sub_100010BA4(v148, v316, (uint64_t *)&unk_1000ED480);
    v322 = v150;
    sub_100010BA4(v150, v152, (uint64_t *)&unk_1000ED480);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v151, 1, v123) == 1)
    {
      sub_100010A98(v148, (uint64_t *)&unk_1000ED480);
      v153 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v124)(v152, 1, v123);
      v154 = v317;
      if (v153 != 1)
        goto LABEL_20;
      v320 = v147;
      sub_100010A98(v151, (uint64_t *)&unk_1000ED480);
    }
    else
    {
      v155 = (char *)v315;
      sub_100010BA4(v151, (uint64_t)v315, (uint64_t *)&unk_1000ED480);
      v156 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v124)(v152, 1, v123);
      v154 = v317;
      v157 = v287;
      if (v156 == 1)
      {
        sub_100010A98(v148, (uint64_t *)&unk_1000ED480);
        (*(void (**)(char *, uint64_t))(v157 + 8))(v155, v123);
        goto LABEL_20;
      }
      v320 = v147;
      v160 = v155;
      v161 = v321;
      (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v152, v123);
      v162 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v163 = dispatch thunk of static Equatable.== infix(_:_:)(v160, v161, v123, v162);
      v164 = v124;
      v165 = *(void (**)(char *, uint64_t))(v157 + 8);
      v165(v161, v123);
      sub_100010A98(v318, (uint64_t *)&unk_1000ED480);
      v165(v160, v123);
      v124 = v164;
      sub_100010A98(v151, (uint64_t *)&unk_1000ED480);
      if ((v163 & 1) == 0)
        goto LABEL_22;
    }
    v166 = v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl;
    swift_beginAccess(v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl, v333, 0, 0);
    sub_100010BA4(v166, v154, (uint64_t *)&unk_1000ED480);
    v167 = v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl;
    swift_beginAccess(v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl, &v332, 0, 0);
    v168 = v314;
    v169 = v314 + *(int *)(v288 + 48);
    sub_100010BA4(v154, v314, (uint64_t *)&unk_1000ED480);
    v137 = v168;
    sub_100010BA4(v167, v169, (uint64_t *)&unk_1000ED480);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v168, 1, v123) == 1)
    {
      sub_100010A98(v154, (uint64_t *)&unk_1000ED480);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v169, 1, v123) == 1)
      {
        v319 = v166;
        sub_100010A98(v168, (uint64_t *)&unk_1000ED480);
        goto LABEL_31;
      }
    }
    else
    {
      v170 = v168;
      v171 = v312;
      sub_100010BA4(v170, v312, (uint64_t *)&unk_1000ED480);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v169, 1, v123) != 1)
      {
        v319 = v166;
        v172 = v287;
        v173 = v171;
        v174 = v137;
        v175 = v321;
        (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v169, v123);
        v176 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v177 = dispatch thunk of static Equatable.== infix(_:_:)(v173, v175, v123, v176);
        v178 = v124;
        v179 = *(void (**)(char *, uint64_t))(v172 + 8);
        v179(v175, v123);
        sub_100010A98(v317, (uint64_t *)&unk_1000ED480);
        v179((char *)v173, v123);
        v124 = v178;
        sub_100010A98(v174, (uint64_t *)&unk_1000ED480);
        if ((v177 & 1) == 0)
          goto LABEL_22;
LABEL_31:
        v180 = v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl;
        swift_beginAccess(v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl, &v331, 0, 0);
        v318 = v180;
        v181 = v313;
        sub_100010BA4(v180, v313, (uint64_t *)&unk_1000ED480);
        v182 = v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl;
        swift_beginAccess(v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl, &v330, 0, 0);
        v183 = v288;
        v184 = v311;
        v185 = v311 + *(int *)(v288 + 48);
        sub_100010BA4(v181, v311, (uint64_t *)&unk_1000ED480);
        v317 = v182;
        sub_100010BA4(v182, v185, (uint64_t *)&unk_1000ED480);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v184, 1, v123) == 1)
        {
          sub_100010A98(v181, (uint64_t *)&unk_1000ED480);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v185, 1, v123) == 1)
          {
            v186 = v183;
            v316 = v167;
            sub_100010A98(v184, (uint64_t *)&unk_1000ED480);
            goto LABEL_38;
          }
        }
        else
        {
          v187 = v310;
          sub_100010BA4(v184, v310, (uint64_t *)&unk_1000ED480);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v185, 1, v123) != 1)
          {
            v186 = v183;
            v316 = v167;
            v188 = v287;
            v189 = v321;
            (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v185, v123);
            v190 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
            v191 = dispatch thunk of static Equatable.== infix(_:_:)(v187, v189, v123, v190);
            v192 = v184;
            v193 = v124;
            v194 = *(void (**)(char *, uint64_t))(v188 + 8);
            v194(v189, v123);
            sub_100010A98(v313, (uint64_t *)&unk_1000ED480);
            v194((char *)v187, v123);
            v124 = v193;
            sub_100010A98(v192, (uint64_t *)&unk_1000ED480);
            if ((v191 & 1) == 0)
              goto LABEL_22;
LABEL_38:
            v195 = v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl;
            swift_beginAccess(v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl, &v329, 0, 0);
            v196 = v308;
            sub_100010BA4(v195, v308, (uint64_t *)&unk_1000ED480);
            v197 = v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl;
            swift_beginAccess(v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl, &v328, 0, 0);
            v198 = *(int *)(v186 + 48);
            v43 = v309;
            v199 = (uint64_t)&v309[v198];
            sub_100010BA4(v196, (uint64_t)v309, (uint64_t *)&unk_1000ED480);
            sub_100010BA4(v197, v199, (uint64_t *)&unk_1000ED480);
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v124)(v43, 1, v123) == 1)
            {
              sub_100010A98(v196, (uint64_t *)&unk_1000ED480);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v199, 1, v123) == 1)
              {
                v314 = v197;
                v315 = v124;
                sub_100010A98((uint64_t)v43, (uint64_t *)&unk_1000ED480);
                goto LABEL_44;
              }
            }
            else
            {
              v200 = v307;
              sub_100010BA4((uint64_t)v43, v307, (uint64_t *)&unk_1000ED480);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v199, 1, v123) != 1)
              {
                v314 = v197;
                v315 = v124;
                v201 = v196;
                v202 = v200;
                v203 = v287;
                v204 = v321;
                (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v199, v123);
                v205 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
                v206 = dispatch thunk of static Equatable.== infix(_:_:)(v202, v204, v123, v205);
                v207 = *(void (**)(char *, uint64_t))(v203 + 8);
                v207(v204, v123);
                sub_100010A98(v201, (uint64_t *)&unk_1000ED480);
                v207((char *)v202, v123);
                sub_100010A98((uint64_t)v43, (uint64_t *)&unk_1000ED480);
                if ((v206 & 1) == 0)
                  goto LABEL_22;
LABEL_44:
                v208 = *(void **)(v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_selectedShippingMethod);
                v209 = *(void **)(v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_selectedShippingMethod);
                if (v208)
                {
                  v210 = (uint64_t)v306;
                  if (!v209)
                    goto LABEL_22;
                  sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
                  v211 = v209;
                  v212 = v208;
                  v213 = static NSObject.== infix(_:_:)();

                  if ((v213 & 1) == 0)
                    goto LABEL_22;
                }
                else
                {
                  v210 = (uint64_t)v306;
                  if (v209)
                    goto LABEL_22;
                }
                v214 = *(void **)(v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
                v215 = *(void **)(v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
                if (v214)
                {
                  if (!v215)
                    goto LABEL_22;
                  sub_1000090C8(0, &qword_1000EC460, PKPaymentRequest_ptr);
                  v216 = v215;
                  v217 = v214;
                  v218 = static NSObject.== infix(_:_:)();

                  if ((v218 & 1) == 0)
                    goto LABEL_22;
                }
                else if (v215)
                {
                  goto LABEL_22;
                }
                sub_100010BA4(v285, v210, (uint64_t *)&unk_1000ED480);
                v219 = v305;
                v220 = v305 + *(int *)(v288 + 48);
                sub_100010BA4(v210, v305, (uint64_t *)&unk_1000ED480);
                sub_100010BA4(v286, v220, (uint64_t *)&unk_1000ED480);
                v221 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v315;
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v219, 1, v123) == 1)
                {
                  sub_100010A98(v210, (uint64_t *)&unk_1000ED480);
                  if (v221(v220, 1, v123) == 1)
                  {
                    v222 = v195;
                    sub_100010A98(v219, (uint64_t *)&unk_1000ED480);
                    goto LABEL_61;
                  }
                }
                else
                {
                  v223 = v302;
                  sub_100010BA4(v219, v302, (uint64_t *)&unk_1000ED480);
                  if (v221(v220, 1, v123) != 1)
                  {
                    v222 = v195;
                    v224 = v287;
                    v225 = v210;
                    v226 = v321;
                    (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v220, v123);
                    v227 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
                    v228 = dispatch thunk of static Equatable.== infix(_:_:)(v223, v226, v123, v227);
                    v229 = v219;
                    v230 = *(void (**)(char *, uint64_t))(v224 + 8);
                    v230(v226, v123);
                    sub_100010A98(v225, (uint64_t *)&unk_1000ED480);
                    v230((char *)v223, v123);
                    sub_100010A98(v229, (uint64_t *)&unk_1000ED480);
                    if ((v228 & 1) == 0)
                      goto LABEL_22;
LABEL_61:
                    v231 = v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl;
                    swift_beginAccess(v323 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl, &v327, 0, 0);
                    v232 = v304;
                    sub_100010BA4(v231, v304, (uint64_t *)&unk_1000ED480);
                    v233 = v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl;
                    swift_beginAccess(v324 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl, &v326, 0, 0);
                    v151 = v303;
                    v234 = v303 + *(int *)(v288 + 48);
                    sub_100010BA4(v232, v303, (uint64_t *)&unk_1000ED480);
                    sub_100010BA4(v233, v234, (uint64_t *)&unk_1000ED480);
                    v235 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v315;
                    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v151, 1, v123) == 1)
                    {
                      sub_100010A98(v304, (uint64_t *)&unk_1000ED480);
                      v236 = v123;
                      if (v235(v234, 1, v123) == 1)
                      {
                        sub_100010A98(v151, (uint64_t *)&unk_1000ED480);
                        goto LABEL_67;
                      }
                    }
                    else
                    {
                      sub_100010BA4(v151, v301, (uint64_t *)&unk_1000ED480);
                      v236 = v123;
                      if (v235(v234, 1, v123) != 1)
                      {
                        v237 = v287;
                        v238 = v321;
                        (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v234, v123);
                        v239 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
                        v240 = v301;
                        v241 = dispatch thunk of static Equatable.== infix(_:_:)(v301, v238, v123, v239);
                        v242 = *(void (**)(char *, uint64_t))(v237 + 8);
                        v242(v238, v123);
                        sub_100010A98(v304, (uint64_t *)&unk_1000ED480);
                        v242((char *)v240, v123);
                        sub_100010A98(v303, (uint64_t *)&unk_1000ED480);
                        if ((v241 & 1) == 0)
                          goto LABEL_22;
LABEL_67:
                        v243 = v300;
                        sub_100010BA4(v320, v300, (uint64_t *)&unk_1000ED480);
                        v244 = v299;
                        v245 = v299 + *(int *)(v288 + 48);
                        sub_100010BA4(v243, v299, (uint64_t *)&unk_1000ED480);
                        sub_100010BA4(v322, v245, (uint64_t *)&unk_1000ED480);
                        v246 = v244;
                        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v244, 1, v236) == 1)
                        {
                          sub_100010A98(v300, (uint64_t *)&unk_1000ED480);
                          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v245, 1, v236) == 1)
                          {
                            sub_100010A98(v244, (uint64_t *)&unk_1000ED480);
                            goto LABEL_74;
                          }
                        }
                        else
                        {
                          sub_100010BA4(v244, v298, (uint64_t *)&unk_1000ED480);
                          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v245, 1, v236) != 1)
                          {
                            v247 = v287;
                            v248 = v321;
                            v249 = v236;
                            (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v245, v236);
                            v250 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
                            v251 = v298;
                            v252 = dispatch thunk of static Equatable.== infix(_:_:)(v298, v248, v249, v250);
                            v253 = *(void (**)(char *, uint64_t))(v247 + 8);
                            v253(v248, v249);
                            sub_100010A98(v300, (uint64_t *)&unk_1000ED480);
                            v254 = v251;
                            v236 = v249;
                            v253((char *)v254, v249);
                            sub_100010A98(v246, (uint64_t *)&unk_1000ED480);
                            if ((v252 & 1) == 0)
                              goto LABEL_22;
LABEL_74:
                            v255 = v296;
                            sub_100010BA4(v319, v296, (uint64_t *)&unk_1000ED480);
                            v256 = v297;
                            v257 = v297 + *(int *)(v288 + 48);
                            sub_100010BA4(v255, v297, (uint64_t *)&unk_1000ED480);
                            sub_100010BA4(v316, v257, (uint64_t *)&unk_1000ED480);
                            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v256, 1, v236) == 1)
                            {
                              sub_100010A98(v296, (uint64_t *)&unk_1000ED480);
                              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v257, 1, v236) == 1)
                              {
                                sub_100010A98(v297, (uint64_t *)&unk_1000ED480);
LABEL_81:
                                v266 = v293;
                                sub_100010BA4(v318, v293, (uint64_t *)&unk_1000ED480);
                                v267 = v294;
                                v268 = v294 + *(int *)(v288 + 48);
                                sub_100010BA4(v266, v294, (uint64_t *)&unk_1000ED480);
                                sub_100010BA4(v317, v268, (uint64_t *)&unk_1000ED480);
                                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v267, 1, v236) == 1)
                                {
                                  sub_100010A98(v293, (uint64_t *)&unk_1000ED480);
                                  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v268, 1, v236) == 1)
                                  {
                                    sub_100010A98(v294, (uint64_t *)&unk_1000ED480);
LABEL_88:
                                    v277 = v290;
                                    sub_100010BA4(v222, v290, (uint64_t *)&unk_1000ED480);
                                    v278 = v291;
                                    v279 = v291 + *(int *)(v288 + 48);
                                    sub_100010BA4(v277, v291, (uint64_t *)&unk_1000ED480);
                                    sub_100010BA4(v314, v279, (uint64_t *)&unk_1000ED480);
                                    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v278, 1, v236) == 1)
                                    {
                                      sub_100010A98(v290, (uint64_t *)&unk_1000ED480);
                                      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v279, 1, v236) == 1)
                                      {
                                        sub_100010A98(v291, (uint64_t *)&unk_1000ED480);
                                        v158 = 1;
                                        return v158 & 1;
                                      }
                                    }
                                    else
                                    {
                                      sub_100010BA4(v291, v289, (uint64_t *)&unk_1000ED480);
                                      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v279, 1, v236) != 1)
                                      {
                                        v280 = v287;
                                        v281 = v321;
                                        (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v279, v236);
                                        v282 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
                                        v283 = v289;
                                        v158 = dispatch thunk of static Equatable.== infix(_:_:)(v289, v281, v236, v282);
                                        v284 = *(void (**)(char *, uint64_t))(v280 + 8);
                                        v284(v281, v236);
                                        sub_100010A98(v290, (uint64_t *)&unk_1000ED480);
                                        v284((char *)v283, v236);
                                        sub_100010A98(v291, (uint64_t *)&unk_1000ED480);
                                        return v158 & 1;
                                      }
                                      sub_100010A98(v290, (uint64_t *)&unk_1000ED480);
                                      (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v289, v236);
                                    }
                                    v126 = v291;
                                    goto LABEL_21;
                                  }
                                }
                                else
                                {
                                  sub_100010BA4(v294, v292, (uint64_t *)&unk_1000ED480);
                                  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v268, 1, v236) != 1)
                                  {
                                    v269 = v287;
                                    v270 = v321;
                                    v271 = v236;
                                    (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v268, v236);
                                    v272 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
                                    v273 = v292;
                                    v274 = dispatch thunk of static Equatable.== infix(_:_:)(v292, v270, v271, v272);
                                    v275 = *(void (**)(char *, uint64_t))(v269 + 8);
                                    v275(v270, v271);
                                    sub_100010A98(v293, (uint64_t *)&unk_1000ED480);
                                    v276 = v273;
                                    v236 = v271;
                                    v275((char *)v276, v271);
                                    sub_100010A98(v294, (uint64_t *)&unk_1000ED480);
                                    if ((v274 & 1) == 0)
                                      goto LABEL_22;
                                    goto LABEL_88;
                                  }
                                  sub_100010A98(v293, (uint64_t *)&unk_1000ED480);
                                  (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v292, v236);
                                }
                                v126 = v294;
LABEL_21:
                                sub_100010A98(v126, &qword_1000EC450);
                                goto LABEL_22;
                              }
                            }
                            else
                            {
                              sub_100010BA4(v297, v295, (uint64_t *)&unk_1000ED480);
                              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v315)(v257, 1, v236) != 1)
                              {
                                v258 = v287;
                                v259 = v321;
                                v260 = v236;
                                (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v257, v236);
                                v261 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
                                v262 = v295;
                                v263 = dispatch thunk of static Equatable.== infix(_:_:)(v295, v259, v260, v261);
                                v264 = *(void (**)(char *, uint64_t))(v258 + 8);
                                v264(v259, v260);
                                sub_100010A98(v296, (uint64_t *)&unk_1000ED480);
                                v265 = v262;
                                v236 = v260;
                                v264((char *)v265, v260);
                                sub_100010A98(v297, (uint64_t *)&unk_1000ED480);
                                if ((v263 & 1) == 0)
                                  goto LABEL_22;
                                goto LABEL_81;
                              }
                              sub_100010A98(v296, (uint64_t *)&unk_1000ED480);
                              (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v295, v236);
                            }
                            v126 = v297;
                            goto LABEL_21;
                          }
                          sub_100010A98(v300, (uint64_t *)&unk_1000ED480);
                          (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v298, v236);
                        }
                        v126 = v244;
                        goto LABEL_21;
                      }
                      sub_100010A98(v304, (uint64_t *)&unk_1000ED480);
                      (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v301, v123);
                      v151 = v303;
                    }
LABEL_20:
                    v126 = v151;
                    goto LABEL_21;
                  }
                  sub_100010A98(v210, (uint64_t *)&unk_1000ED480);
                  (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v223, v123);
                }
                v126 = v219;
                goto LABEL_21;
              }
              sub_100010A98(v196, (uint64_t *)&unk_1000ED480);
              (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v200, v123);
            }
LABEL_6:
            v126 = (uint64_t)v43;
            goto LABEL_21;
          }
          sub_100010A98(v313, (uint64_t *)&unk_1000ED480);
          (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v187, v123);
        }
        v126 = v184;
        goto LABEL_21;
      }
      sub_100010A98(v154, (uint64_t *)&unk_1000ED480);
      (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v171, v123);
    }
LABEL_13:
    v126 = v137;
    goto LABEL_21;
  }
  v140 = v319;
  sub_100010BA4(v137, v319, (uint64_t *)&unk_1000ED480);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v138, 1, v123) == 1)
  {
    sub_100010A98(v322, (uint64_t *)&unk_1000ED480);
    (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v140, v123);
    goto LABEL_13;
  }
  v285 = v134;
  v141 = v287;
  v142 = v137;
  v143 = v321;
  (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v321, v138, v123);
  v144 = sub_1000086B8(&qword_1000EC458, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v145 = dispatch thunk of static Equatable.== infix(_:_:)(v140, v143, v123, v144);
  v146 = *(void (**)(char *, uint64_t))(v141 + 8);
  v146(v143, v123);
  sub_100010A98(v322, (uint64_t *)&unk_1000ED480);
  v146((char *)v140, v123);
  sub_100010A98(v142, (uint64_t *)&unk_1000ED480);
  if ((v145 & 1) != 0)
    goto LABEL_15;
LABEL_22:
  v158 = 0;
  return v158 & 1;
}

uint64_t sub_100010A98(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100007D40(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100010AD4(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D5BA8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t sub_100010B1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100007D40(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100010B60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100007D40(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100010BA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100007D40(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100010BE8(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100010BFC(result, a2);
  return result;
}

uint64_t sub_100010BFC(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_100010C40(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

id sub_100010C60(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v11;
  char *v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _UNKNOWN **v21;
  uint64_t v22;
  double v23;
  void *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  NSArray v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  Class isa;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  NSArray v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  Class v84;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  id v91;
  void *v92;
  void *v93;
  void *v94;
  uint64_t v95;
  void *v96;
  void *v97;
  uint64_t *v98;
  uint64_t v99;
  objc_super v100;

  v11 = &v5[OBJC_IVAR____TtC8Business24QuickReplyToMeBubbleView_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11, 0);
  v12 = &v5[OBJC_IVAR____TtC8Business24QuickReplyToMeBubbleView_model];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  v12[16] = a3 & 1;
  v13 = &v5[OBJC_IVAR____TtC8Business24QuickReplyToMeBubbleView_onItemSelected];
  *(_QWORD *)v13 = a4;
  *((_QWORD *)v13 + 1) = a5;
  v100.receiver = v5;
  v100.super_class = (Class)type metadata accessor for QuickReplyToMeBubbleView();
  swift_bridgeObjectRetain(a1);
  swift_retain(a5);
  v14 = objc_msgSendSuper2(&v100, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = qword_1000EBBD8;
  v16 = v14;
  if (v15 != -1)
    swift_once(&qword_1000EBBD8, sub_10002D56C);
  objc_msgSend(v16, "setBackgroundColor:", qword_1000F8958);
  v17 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "init");
  v18 = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "init");
  v19 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  objc_msgSend(v19, "setNumberOfTapsRequired:", 2);
  v94 = v17;
  objc_msgSend(v16, "addGestureRecognizer:", v17);
  v93 = v18;
  objc_msgSend(v16, "addGestureRecognizer:", v18);
  v92 = v19;
  objc_msgSend(v16, "addGestureRecognizer:", v19);
  v20 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "addSubview:", v20);
  v21 = &_ss6HasherV8_combineyys5UInt8VF_ptr;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v87 = a5;
    v89 = (id)objc_opt_self(NSLayoutConstraint);
    v23 = 600.0 / (double)v22;
    swift_bridgeObjectRetain(a1);
    v24 = 0;
    v25 = 0;
    v86 = a1;
    v26 = (uint64_t *)(a1 + 56);
    v99 = v22 - 1;
    v90 = v22;
    v91 = v16;
    v88 = v20;
    do
    {
      v35 = *(v26 - 2);
      v34 = *(v26 - 1);
      v98 = v26;
      v36 = *v26;
      v37 = objc_allocWithZone((Class)UITapGestureRecognizer);
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v36);
      v38 = objc_msgSend(v37, "initWithTarget:action:", v16, "tapGestureRecognized:");
      objc_msgSend(v38, "requireGestureRecognizerToFail:", v94);
      objc_msgSend(v38, "requireGestureRecognizerToFail:", v93);
      objc_msgSend(v38, "requireGestureRecognizerToFail:", v92);
      v39 = objc_allocWithZone((Class)type metadata accessor for QuickReplyItemButton());
      swift_bridgeObjectRetain(v36);
      v40 = sub_10006064C(v34, v36, v99 != v25);
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v35);
      v95 = v25;
      objc_msgSend(v40, "setTag:", v25);
      v96 = v38;
      objc_msgSend(v40, "addGestureRecognizer:", v38);
      objc_msgSend(v20, "addSubview:", v40);
      v41 = sub_100007D40((uint64_t *)&unk_1000ED490);
      v42 = swift_allocObject(v41, 56, 7);
      *(_OWORD *)(v42 + 16) = xmmword_1000AF110;
      v43 = objc_msgSend(v40, "leftAnchor");
      v44 = objc_msgSend(v20, "leftAnchor");
      v45 = v20;
      v46 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

      *(_QWORD *)(v42 + 32) = v46;
      v47 = objc_msgSend(v40, "rightAnchor");
      v48 = objc_msgSend(v45, "rightAnchor");
      v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

      *(_QWORD *)(v42 + 40) = v49;
      v50 = objc_msgSend(v40, "heightAnchor");
      v51 = objc_msgSend(v50, "constraintLessThanOrEqualToConstant:", v23);

      *(_QWORD *)(v42 + 48) = v51;
      specialized Array._endMutation()(v52);
      sub_100011A28();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v42);
      objc_msgSend(v89, "activateConstraints:", isa);

      v97 = v24;
      if (v24)
      {
        v54 = swift_allocObject(v41, 40, 7);
        *(_OWORD *)(v54 + 16) = xmmword_1000AF120;
        v55 = v24;
        v56 = objc_msgSend(v40, "topAnchor");
        v57 = objc_msgSend(v55, "bottomAnchor");
        v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

        *(_QWORD *)(v54 + 32) = v58;
        specialized Array._endMutation()(v59);
        v60 = v54;
        v61.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v60);
        objc_msgSend(v89, "activateConstraints:", v61.super.isa);

        v20 = v88;
      }
      else
      {
        v62 = swift_allocObject(v41, 40, 7);
        *(_OWORD *)(v62 + 16) = xmmword_1000AF120;
        v63 = objc_msgSend(v40, "topAnchor");
        v20 = v88;
        v64 = objc_msgSend(v88, "topAnchor");
        v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

        *(_QWORD *)(v62 + 32) = v65;
        specialized Array._endMutation()(v66);
        v61.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v62);
        objc_msgSend(v89, "activateConstraints:", v61.super.isa);
      }

      if (v99 == v95)
      {
        v27 = swift_allocObject(v41, 40, 7);
        *(_OWORD *)(v27 + 16) = xmmword_1000AF120;
        v28 = objc_msgSend(v40, "bottomAnchor");
        v29 = objc_msgSend(v20, "bottomAnchor");
        v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

        *(_QWORD *)(v27 + 32) = v30;
        specialized Array._endMutation()(v31);
        v32.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v27);
        objc_msgSend(v89, "activateConstraints:", v32.super.isa);

        v33 = v90;
        v16 = v91;
      }
      else
      {
        v33 = v90;
        v16 = v91;
        v32.super.isa = (Class)v96;
      }
      v25 = v95 + 1;
      v26 = v98 + 4;

      v24 = v40;
    }
    while (v33 != v95 + 1);
    v67 = v40;
    a1 = v86;
    swift_bridgeObjectRelease(v86);
    a5 = v87;
    v21 = &_ss6HasherV8_combineyys5UInt8VF_ptr;
  }
  else
  {
    v67 = 0;
  }
  swift_bridgeObjectRelease(a1);
  v68 = (void *)objc_opt_self(v21[121]);
  v69 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v70 = swift_allocObject(v69, 64, 7);
  *(_OWORD *)(v70 + 16) = xmmword_1000AF130;
  v71 = objc_msgSend(v20, "topAnchor");
  v72 = objc_msgSend(v16, "topAnchor");
  v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

  *(_QWORD *)(v70 + 32) = v73;
  v74 = objc_msgSend(v20, "leftAnchor");
  v75 = objc_msgSend(v16, "leftAnchor");
  if (qword_1000EBBF0 != -1)
    swift_once(&qword_1000EBBF0, sub_10002D62C);
  v76 = objc_msgSend(v74, "constraintEqualToAnchor:constant:", v75, *(double *)&qword_1000F8970 + 4.0);

  *(_QWORD *)(v70 + 40) = v76;
  v77 = objc_msgSend(v20, "bottomAnchor");
  v78 = objc_msgSend(v16, "bottomAnchor");
  v79 = objc_msgSend(v77, "constraintEqualToAnchor:", v78);

  *(_QWORD *)(v70 + 48) = v79;
  v80 = objc_msgSend(v20, "rightAnchor");
  v81 = objc_msgSend(v16, "rightAnchor");
  v82 = objc_msgSend(v80, "constraintEqualToAnchor:", v81);

  *(_QWORD *)(v70 + 56) = v82;
  specialized Array._endMutation()(v83);
  sub_100011A28();
  v84 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v70);
  objc_msgSend(v68, "activateConstraints:", v84);

  swift_release(a5);
  return v16;
}

double sub_100011700(double a1, double a2, double a3, double a4)
{
  void *v4;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  LODWORD(a3) = 1148846080;
  LODWORD(a4) = 1112014848;
  objc_msgSend(v4, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", fmin(a1, 263.0), a2, a3, a4);
  v8 = v7;
  v10 = v9;
  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v11 = qword_1000F8A90;
  v12 = static os_log_type_t.debug.getter();
  v13 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v14 = swift_allocObject(v13, 112, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1000ADFC0;
  v15 = CGSize.debugDescription.getter(a1, a2);
  v17 = v16;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  v18 = sub_100009084();
  *(_QWORD *)(v14 + 64) = v18;
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v17;
  v19 = CGSize.debugDescription.getter(v8, v10);
  *(_QWORD *)(v14 + 96) = &type metadata for String;
  *(_QWORD *)(v14 + 104) = v18;
  *(_QWORD *)(v14 + 72) = v19;
  *(_QWORD *)(v14 + 80) = v20;
  os_log(_:dso:log:type:_:)("QuickReplyToMeBubbleView.contentSizeThatFits: size %@ preferredSize: %@", 71, 2, &_mh_execute_header, v11, v12, v14);
  swift_bridgeObjectRelease(v14);
  return v8;
}

id sub_10001194C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QuickReplyToMeBubbleView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for QuickReplyToMeBubbleView()
{
  return objc_opt_self(_TtC8Business24QuickReplyToMeBubbleView);
}

uint64_t sub_1000119E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business24QuickReplyToMeBubbleView_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

unint64_t sub_100011A28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EEB90;
  if (!qword_1000EEB90)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000EEB90);
  }
  return result;
}

uint64_t sub_100011A64(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_100011A88(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  char v45;
  BOOL v46;
  uint64_t v47;
  id v48;
  NSString v49;
  uint64_t v50;
  char v51;
  id v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  Class isa;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  double v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;

  v3 = v2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = __chkstk_darwin(v6, v8);
  v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  v14 = (char *)&v95 - v13;
  v15 = sub_100007D40(&qword_1000EC5F0);
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[10] = 0;
  v2[11] = 0;
  v2[2] = objc_msgSend(objc_allocWithZone((Class)EKEventStore), "init");
  if (!*(_QWORD *)(a1 + 16)
    || (v19 = sub_10004F068(0x696669746E656469, 0xEA00000000007265), (v20 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v19, (uint64_t)&v107),
        (swift_dynamicCast(&v105, &v107, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
    swift_bridgeObjectRelease(a1);
    v30 = swift_bridgeObjectRelease(a2);
    if (qword_1000EBCB8 != -1)
      v30 = swift_once(&qword_1000EBCB8, sub_100082798);
    v31 = qword_1000F8A90;
    v32 = static os_log_type_t.error.getter(v30);
    os_log(_:dso:log:type:_:)("Unable to create event: IdentifierDictionaryKey is missing", 58, 2, &_mh_execute_header, v31, v32, _swiftEmptyArrayStorage);
    goto LABEL_17;
  }
  v100 = v106;
  if (!*(_QWORD *)(a1 + 16) || (v99 = v105, v21 = sub_10004F068(0x656C746974, 0xE500000000000000), (v22 & 1) == 0))
  {
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(a2);
    v35 = v100;
LABEL_20:
    v36 = swift_bridgeObjectRelease(v35);
    if (qword_1000EBCB8 != -1)
      v36 = swift_once(&qword_1000EBCB8, sub_100082798);
    v37 = qword_1000F8A90;
    v38 = static os_log_type_t.error.getter(v36);
    os_log(_:dso:log:type:_:)("Unable to create event: TitleDictionaryKey is missing", 53, 2, &_mh_execute_header, v37, v38, _swiftEmptyArrayStorage);
LABEL_17:

    swift_bridgeObjectRelease(v3[10]);
    v33 = type metadata accessor for IMBProposedEvent();
    swift_deallocPartialClassInstance(v3, v33, 96, 7);
    return 0;
  }
  sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)&v107);
  if ((swift_dynamicCast(&v105, &v107, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v100);
    swift_bridgeObjectRelease(a1);
    v35 = a2;
    goto LABEL_20;
  }
  v97 = v106;
  v98 = v105;
  v104 = v14;
  if (!a2)
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 16))
  {
    v23 = sub_10004F068(0x6564496567616D69, 0xEF7265696669746ELL);
    if ((v24 & 1) != 0)
    {
      sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v23, (uint64_t)&v107);
      if ((swift_dynamicCast(&v105, &v107, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v25 = v106;
        if (*(_QWORD *)(a2 + 16))
        {
          v26 = sub_10004F068(v105, v106);
          if ((v27 & 1) != 0)
          {
            v28 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v26);
            swift_bridgeObjectRelease(v25);
            swift_bridgeObjectRelease(a2);
            v29 = (void *)v3[11];
            v3[11] = v28;

            goto LABEL_26;
          }
        }
        swift_bridgeObjectRelease(v25);
      }
    }
  }
  swift_bridgeObjectRelease(a2);
LABEL_26:
  v39 = *(_QWORD *)(a1 + 16);
  v103 = v7;
  if (!v39)
  {
    v43 = _swiftEmptyArrayStorage;
LABEL_38:
    v47 = 0;
    v46 = 1;
    goto LABEL_39;
  }
  v40 = sub_10004F068(0x746F6C73656D6974, 0xE900000000000073);
  if ((v41 & 1) != 0
    && (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v40, (uint64_t)&v107),
        v42 = sub_100007D40(&qword_1000ED040),
        swift_dynamicCast(&v105, &v107, (char *)&type metadata for Any + 8, v42, 6)))
  {
    v43 = (_QWORD *)v105;
  }
  else
  {
    v43 = _swiftEmptyArrayStorage;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_38;
  v44 = sub_10004F068(0x656E6F7A656D6974, 0xEE0074657366664FLL);
  if ((v45 & 1) == 0)
    goto LABEL_38;
  sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v44, (uint64_t)&v107);
  if ((swift_dynamicCast(&v105, &v107, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
    goto LABEL_38;
  v46 = v105 == 0;
  if (!v105)
  {
    v47 = 0;
LABEL_39:
    v3[8] = v47;
    *((_BYTE *)v3 + 72) = v46;
    v48 = objc_msgSend((id)objc_opt_self(EKEvent), "eventWithEventStore:", v3[2]);
    v49 = String._bridgeToObjectiveC()();
    objc_msgSend(v48, "setTitle:", v49);

    v50 = v3[8];
    v51 = *((_BYTE *)v3 + 72);
    v52 = v48;
    if ((v51 & 1) != 0 || !v50)
    {
      static TimeZone.current.getter();
      v53 = type metadata accessor for TimeZone(0);
      v55 = *(_QWORD *)(v53 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v18, 0, 1, v53);
      v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48))(v18, 1, v53);
    }
    else
    {
      TimeZone.init(secondsFromGMT:)(v50);
      v53 = type metadata accessor for TimeZone(0);
      v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v18, 1, v53);
    }
    isa = 0;
    if (v54 != 1)
    {
      isa = TimeZone._bridgeToObjectiveC()().super.isa;
      type metadata accessor for TimeZone(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v18, v53);
    }
    objc_msgSend(v52, "setTimeZone:", isa);

    if (*(_QWORD *)(a1 + 16))
    {
      v57 = sub_10004F068(0x6E6F697461636F6CLL, 0xE800000000000000);
      if ((v58 & 1) != 0)
      {
        sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v57, (uint64_t)&v107);
      }
      else
      {
        v107 = 0u;
        v108 = 0u;
      }
    }
    else
    {
      v107 = 0u;
      v108 = 0u;
    }
    swift_bridgeObjectRelease(a1);
    v102 = v6;
    if (*((_QWORD *)&v108 + 1))
    {
      v59 = sub_100007D40(&qword_1000EC478);
      if ((swift_dynamicCast(&v105, &v107, (char *)&type metadata for Any + 8, v59, 6) & 1) != 0)
      {
        v60 = v105;
        sub_10001392C();
        v61 = sub_10004CD84(v60);
        swift_bridgeObjectRelease(v60);
        v62 = sub_1000645EC(v61);
        objc_msgSend(v52, "setStructuredLocation:", v62);

      }
    }
    else
    {
      sub_100010A98((uint64_t)&v107, (uint64_t *)&unk_1000EEB60);
    }
    v3[7] = v52;
    *(_QWORD *)&v107 = _swiftEmptyArrayStorage;
    v95 = v52;
    v63 = v104;
    Date.init()(v95);
    v96 = v43;
    v64 = v43[2];
    if (v64)
    {
      v65 = v96 + 4;
      v66 = type metadata accessor for IMBProposedTimeslot(0);
      v101 = xmmword_1000AF070;
      do
      {
        v71 = *v65;
        swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
        swift_bridgeObjectRetain_n(v71, 2);
        v86 = sub_10004C284(v71);
        if (v86)
        {
          v72 = v86;
          v73 = Date.timeIntervalSince1970.getter(v86);
          v74 = Date.init(timeIntervalSince1970:)(v73 + (double)*(uint64_t *)&v72[OBJC_IVAR____TtC8Business19IMBProposedTimeslot_duration]);
          v75 = Date.timeIntervalSince1970.getter(v74);
          v76 = (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v11, v102);
          if (Date.timeIntervalSince1970.getter(v76) < v75)
          {
            swift_bridgeObjectRelease(v71);
            v78 = swift_retain(v72);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78);
            v80 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v79 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v80 >= v79 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v80 + 1, 1);
            v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v72);
            specialized Array._endMutation()(v81);
            swift_release(v72);
            goto LABEL_60;
          }
          if (qword_1000EBCB8 != -1)
            v77 = swift_once(&qword_1000EBCB8, sub_100082798);
          v82 = qword_1000F8A90;
          v83 = static os_log_type_t.error.getter(v77);
          v84 = sub_100007D40((uint64_t *)&unk_1000ECE50);
          v85 = swift_allocObject(v84, 72, 7);
          *(_OWORD *)(v85 + 16) = v101;
          *(_QWORD *)(v85 + 56) = sub_100007D40(&qword_1000EC478);
          *(_QWORD *)(v85 + 64) = sub_10001383C();
          *(_QWORD *)(v85 + 32) = v71;
          os_log(_:dso:log:type:_:)("Filtering out timeslot since the date is in the past: %@", 56, 2, &_mh_execute_header, v82, v83, v85);
          swift_bridgeObjectRelease(v85);
          swift_release(v72);
        }
        else
        {
          if (qword_1000EBCB8 != -1)
            v86 = (char *)swift_once(&qword_1000EBCB8, sub_100082798);
          v67 = qword_1000F8A90;
          v68 = static os_log_type_t.error.getter(v86);
          v69 = sub_100007D40((uint64_t *)&unk_1000ECE50);
          v70 = swift_allocObject(v69, 72, 7);
          *(_OWORD *)(v70 + 16) = v101;
          *(_QWORD *)(v70 + 56) = sub_100007D40(&qword_1000EC478);
          *(_QWORD *)(v70 + 64) = sub_10001383C();
          *(_QWORD *)(v70 + 32) = v71;
          os_log(_:dso:log:type:_:)("Unable to create timeslot for dictionary: %@", 44, 2, &_mh_execute_header, v67, v68, v70);
          swift_bridgeObjectRelease(v70);
        }
        v63 = v104;
LABEL_60:
        ++v65;
        --v64;
      }
      while (v64);
    }
    swift_bridgeObjectRelease(v96);
    v87 = v107;
    if ((v107 & 0x8000000000000000) != 0 || (v107 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n(v107, 2);
      v88 = (uint64_t)sub_1000A2A58(v87);
      swift_bridgeObjectRelease(v87);
    }
    else
    {
      v88 = v107 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v107, 2);
    }
    v89 = v102;
    v105 = v88;
    sub_100013888(&v105, sub_1000A62B4, type metadata accessor for IMBProposedTimeslot, (uint64_t)&OBJC_IVAR____TtC8Business19IMBProposedTimeslot_startTime, (void (*)(char **, char **, _QWORD **))sub_1000A4150);
    swift_bridgeObjectRelease(v87);
    v90 = v105;
    swift_bridgeObjectRelease(v87);
    v91 = v100;
    v3[3] = v99;
    v3[4] = v91;
    v92 = v97;
    v3[5] = v98;
    v3[6] = v92;
    v93 = sub_10001255C(v90);

    swift_release(v90);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v63, v89);
    v94 = v3[10];
    v3[10] = v93;
    swift_bridgeObjectRelease(v94);
    return (uint64_t)v3;
  }
  v47 = 60 * v105;
  if ((unsigned __int128)(v105 * (__int128)60) >> 64 == (60 * v105) >> 63)
  {
    v46 = 0;
    goto LABEL_39;
  }
  __break(1u);
  result = swift_release(v105);
  __break(1u);
  return result;
}

uint64_t sub_10001255C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  Class v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t result;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[3];

  v3 = type metadata accessor for Date(0);
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  __chkstk_darwin(v3, v4);
  v61 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007D40(&qword_1000EC5F0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  v13 = (char *)&v61 - v12;
  v14 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v14, "setDateStyle:", 1);
  v66 = v14;
  objc_msgSend(v14, "setTimeStyle:", 0);
  v15 = objc_msgSend(*(id *)(v1 + 56), "timeZone");
  if (v15)
  {
    v16 = v15;
    static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

    v17 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 0, 1, v17);
  }
  else
  {
    v17 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  }
  sub_100014560((uint64_t)v10, (uint64_t)v13);
  type metadata accessor for TimeZone(0);
  v18 = *(_QWORD *)(v17 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17) != 1)
  {
    isa = TimeZone._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
  }
  objc_msgSend(v66, "setTimeZone:", isa);

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v55 = a1;
    else
      v55 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v20 = _CocoaArrayWrapper.endIndex.getter(v55);
    if (v20)
      goto LABEL_8;
LABEL_26:
    v22 = &_swiftEmptyDictionarySingleton;
LABEL_27:
    swift_bridgeObjectRelease(a1);
    v56 = swift_bridgeObjectRetain(v22);
    v57 = (uint64_t)sub_1000A2A4C(v56);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRetain(v57);
    if (v57 < 0 || (v58 = (_QWORD *)v57, (v57 & 0x4000000000000000) != 0))
    {
      v58 = sub_1000A2A40(v57);
      swift_release(v57);
    }
    v69[0] = (uint64_t)v58;
    sub_100013888(v69, sub_1000A62B4, type metadata accessor for IMBProposedDate, (uint64_t)&OBJC_IVAR____TtC8Business15IMBProposedDate_date, (void (*)(char **, char **, _QWORD **))sub_1000A4150);
    swift_release(v57);

    v59 = v69[0];
    swift_bridgeObjectRelease(v22);
    return v59;
  }
  v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v20)
    goto LABEL_26;
LABEL_8:
  if (v20 >= 1)
  {
    v21 = 0;
    v22 = &_swiftEmptyDictionarySingleton;
    v64 = a1 & 0xC000000000000001;
    v65 = v20;
    while (1)
    {
      if (v64)
      {
        v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, a1);
      }
      else
      {
        v23 = *(_QWORD *)(a1 + 8 * v21 + 32);
        swift_retain(v23);
      }
      v24 = v23 + OBJC_IVAR____TtC8Business19IMBProposedTimeslot_startTime;
      v25 = Date._bridgeToObjectiveC()().super.isa;
      v26 = objc_msgSend(v66, "stringFromDate:", v25);

      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v29 = v28;

      if (!v22[2])
        goto LABEL_17;
      swift_bridgeObjectRetain(v29);
      v30 = sub_10004F068(v27, v29);
      if ((v31 & 1) == 0)
        break;
      v32 = *(_QWORD *)(v22[7] + 8 * v30);
      swift_retain(v32);
      swift_bridgeObjectRelease(v29);
      v33 = OBJC_IVAR____TtC8Business15IMBProposedDate_timeslots;
LABEL_18:
      v48 = (_QWORD *)(v32 + v33);
      swift_beginAccess(v32 + v33, v69, 33, 0);
      swift_retain(v32);
      v49 = swift_retain(v23);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
      v51 = *(_QWORD *)((*v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v50 = *(_QWORD *)((*v48 & 0xFFFFFFFFFFFFFF8) + 0x18);
      v52 = v65;
      if (v51 >= v50 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
      ++v21;
      v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v23);
      specialized Array._endMutation()(v53);
      swift_endAccess(v69);
      swift_retain(v32);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
      v69[0] = (uint64_t)v22;
      sub_10003A788(v32, v27, v29, isUniquelyReferenced_nonNull_native);
      v22 = (_QWORD *)v69[0];
      swift_release_n(v32, 2);
      swift_release(v23);
      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease(0x8000000000000000);
      if (v52 == v21)
        goto LABEL_27;
    }
    swift_bridgeObjectRelease(v29);
LABEL_17:
    v34 = objc_msgSend(objc_allocWithZone((Class)NSUUID), "init");
    v35 = objc_msgSend(v34, "UUIDString");

    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v68 = v23;
    v37 = a1;
    v39 = v38;

    v40 = v62;
    v41 = v63;
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
    v67 = v27;
    v43 = v29;
    v44 = v22;
    v45 = v61;
    v42(v61, v24, v63);
    v46 = type metadata accessor for IMBProposedDate(0);
    v32 = swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
    *(_BYTE *)(v32 + OBJC_IVAR____TtC8Business15IMBProposedDate_expanded) = 0;
    *(_QWORD *)(v32 + 16) = v36;
    *(_QWORD *)(v32 + 24) = v39;
    a1 = v37;
    v47 = v45;
    v22 = v44;
    v29 = v43;
    v27 = v67;
    v23 = v68;
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v32 + OBJC_IVAR____TtC8Business15IMBProposedDate_date, v47, v41);
    v33 = OBJC_IVAR____TtC8Business15IMBProposedDate_timeslots;
    *(_QWORD *)(v32 + OBJC_IVAR____TtC8Business15IMBProposedDate_timeslots) = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  __break(1u);
  result = swift_release(v69[0]);
  __break(1u);
  return result;
}

uint64_t sub_100012B64()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Class isa;
  uint64_t v41;
  Class v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t v63;
  _BOOL8 v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  char v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  _QWORD *v85;
  unint64_t v86;
  char v87;
  _QWORD *v88;
  id v89;
  void *v90;
  void *v91;
  char v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  char v103;
  uint64_t result;
  _QWORD *v105;
  unint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _OWORD v121[2];
  __int128 v122;
  void *v123;
  char v124[24];
  _QWORD *v125;

  v1 = sub_100007D40(&qword_1000EC5F0);
  v3 = __chkstk_darwin(v1, v2);
  v118 = (uint64_t)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v5);
  v119 = (uint64_t)&v106 - v6;
  v7 = (uint64_t)&_swiftEmptyDictionarySingleton;
  v125 = &_swiftEmptyDictionarySingleton;
  v8 = *(_QWORD *)(v0 + 80);
  if (!v8)
  {
    __break(1u);
LABEL_91:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return result;
  }
  v9 = (_QWORD *)(v8 & 0xFFFFFFFFFFFFFF8);
  if ((unint64_t)v8 >> 62)
    goto LABEL_86;
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 80));
LABEL_4:
  v106 = v0;
  if (!v10)
  {
    swift_bridgeObjectRelease(v8);
    v9 = _swiftEmptyArrayStorage;
    v76 = &_swiftEmptyDictionarySingleton;
    goto LABEL_68;
  }
  v108 = v9;
  v0 = 0;
  v111 = v8 & 0xC000000000000001;
  v9 = _swiftEmptyArrayStorage;
  v107 = v8 + 32;
  v114 = 0x80000001000B4950;
  v110 = v8;
  v109 = v10;
  do
  {
    if (v111)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v0, v8);
      v12 = __OFADD__(v0++, 1);
      if (v12)
        goto LABEL_83;
    }
    else
    {
      if (v0 >= v108[2])
        goto LABEL_85;
      v11 = *(_QWORD *)(v107 + 8 * v0);
      swift_retain(v11);
      v12 = __OFADD__(v0++, 1);
      if (v12)
        goto LABEL_83;
    }
    v13 = (uint64_t *)(v11 + OBJC_IVAR____TtC8Business15IMBProposedDate_timeslots);
    swift_beginAccess(v11 + OBJC_IVAR____TtC8Business15IMBProposedDate_timeslots, v124, 0, 0);
    v14 = *v13;
    v117 = v14;
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v74 = v117;
      else
        v74 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v117);
      v75 = v74;
      v14 = v117;
      v15 = _CocoaArrayWrapper.endIndex.getter(v75);
      if (!v15)
        goto LABEL_65;
LABEL_15:
      if (v15 < 1)
        goto LABEL_84;
      v112 = v11;
      v113 = (_QWORD *)v0;
      v16 = 0;
      v115 = v15;
      v116 = v14 & 0xC000000000000001;
      while (1)
      {
        if (v116)
        {
          v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v14);
        }
        else
        {
          v17 = *(_QWORD *)(v14 + 8 * v16 + 32);
          swift_retain(v17);
        }
        v18 = *(_QWORD *)(v17 + 16);
        v19 = *(_QWORD *)(v17 + 24);
        v123 = &type metadata for String;
        *(_QWORD *)&v122 = v18;
        *((_QWORD *)&v122 + 1) = v19;
        sub_100009CF0(&v122, v121);
        swift_bridgeObjectRetain(v19);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
        v120 = (_QWORD *)v7;
        v0 = v7;
        v22 = sub_10004F068(0x696669746E656469, 0xEA00000000007265);
        v23 = *(_QWORD *)(v7 + 16);
        v24 = (v21 & 1) == 0;
        v25 = v23 + v24;
        if (__OFADD__(v23, v24))
        {
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          if (v8 >= 0)
            v105 = v9;
          else
            v105 = (_QWORD *)v8;
          swift_bridgeObjectRetain(v8);
          v10 = _CocoaArrayWrapper.endIndex.getter(v105);
          goto LABEL_4;
        }
        v26 = v21;
        if (*(_QWORD *)(v7 + 24) >= v25)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v29 = v120;
            if ((v21 & 1) != 0)
              goto LABEL_27;
          }
          else
          {
            v0 = (unint64_t)&v120;
            sub_10003ACC4();
            v29 = v120;
            if ((v26 & 1) != 0)
              goto LABEL_27;
          }
        }
        else
        {
          sub_100038EE4(v25, isUniquelyReferenced_nonNull_native);
          v0 = (unint64_t)v120;
          v27 = sub_10004F068(0x696669746E656469, 0xEA00000000007265);
          if ((v26 & 1) != (v28 & 1))
            goto LABEL_91;
          v22 = v27;
          v29 = v120;
          if ((v26 & 1) != 0)
          {
LABEL_27:
            v30 = (_QWORD *)(v29[7] + 32 * v22);
            sub_100010C40(v30);
            sub_100009CF0(v121, v30);
            goto LABEL_31;
          }
        }
        v29[(v22 >> 6) + 8] |= 1 << v22;
        v31 = (_QWORD *)(v29[6] + 16 * v22);
        *v31 = 0x696669746E656469;
        v31[1] = 0xEA00000000007265;
        sub_100009CF0(v121, (_OWORD *)(v29[7] + 32 * v22));
        v32 = v29[2];
        v12 = __OFADD__(v32, 1);
        v33 = v32 + 1;
        if (v12)
          goto LABEL_80;
        v29[2] = v33;
LABEL_31:
        swift_bridgeObjectRelease(0x8000000000000000);
        v8 = OBJC_IVAR____TtC8Business19IMBProposedTimeslot_startTime;
        v34 = v119;
        TimeZone.init(abbreviation:)(5524807, 0xE300000000000000);
        v35 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
        v36 = String._bridgeToObjectiveC()();
        objc_msgSend(v35, "setDateFormat:", v36);

        v37 = v118;
        sub_100014518(v34, v118);
        v38 = type metadata accessor for TimeZone(0);
        v39 = *(_QWORD *)(v38 - 8);
        isa = 0;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) != 1)
        {
          v41 = v118;
          isa = TimeZone._bridgeToObjectiveC()().super.isa;
          (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
        }
        objc_msgSend(v35, "setTimeZone:", isa, v106);

        v42 = Date._bridgeToObjectiveC()().super.isa;
        v43 = objc_msgSend(v35, "stringFromDate:", v42);

        v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
        v46 = v45;

        sub_100010A98(v119, &qword_1000EC5F0);
        v123 = &type metadata for String;
        *(_QWORD *)&v122 = v44;
        *((_QWORD *)&v122 + 1) = v46;
        sub_100009CF0(&v122, v121);
        v7 = swift_isUniquelyReferenced_nonNull_native(v29);
        v120 = v29;
        v0 = (unint64_t)v29;
        v48 = sub_10004F068(0x6D69547472617473, 0xE900000000000065);
        v49 = v29[2];
        v50 = (v47 & 1) == 0;
        v51 = v49 + v50;
        if (__OFADD__(v49, v50))
          goto LABEL_78;
        v52 = v47;
        if (v29[3] >= v51)
        {
          v55 = v115;
          if ((v7 & 1) != 0)
          {
            v0 = (unint64_t)v120;
            if ((v47 & 1) != 0)
              goto LABEL_40;
          }
          else
          {
            sub_10003ACC4();
            v0 = (unint64_t)v120;
            if ((v52 & 1) != 0)
              goto LABEL_40;
          }
        }
        else
        {
          sub_100038EE4(v51, v7);
          v53 = sub_10004F068(0x6D69547472617473, 0xE900000000000065);
          v55 = v115;
          if ((v52 & 1) != (v54 & 1))
            goto LABEL_91;
          v48 = v53;
          v0 = (unint64_t)v120;
          if ((v52 & 1) != 0)
          {
LABEL_40:
            v56 = (_QWORD *)(*(_QWORD *)(v0 + 56) + 32 * v48);
            sub_100010C40(v56);
            sub_100009CF0(v121, v56);
            goto LABEL_44;
          }
        }
        *(_QWORD *)(v0 + 8 * (v48 >> 6) + 64) |= 1 << v48;
        v57 = (_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v48);
        *v57 = 0x6D69547472617473;
        v57[1] = 0xE900000000000065;
        sub_100009CF0(v121, (_OWORD *)(*(_QWORD *)(v0 + 56) + 32 * v48));
        v58 = *(_QWORD *)(v0 + 16);
        v12 = __OFADD__(v58, 1);
        v59 = v58 + 1;
        if (v12)
          goto LABEL_81;
        *(_QWORD *)(v0 + 16) = v59;
LABEL_44:
        swift_bridgeObjectRelease(0x8000000000000000);
        v60 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Business19IMBProposedTimeslot_duration);
        v123 = &type metadata for Int;
        *(_QWORD *)&v122 = v60;
        sub_100009CF0(&v122, v121);
        v7 = swift_isUniquelyReferenced_nonNull_native(v0);
        v120 = (_QWORD *)v0;
        v62 = sub_10004F068(0x6E6F697461727564, 0xE800000000000000);
        v63 = *(_QWORD *)(v0 + 16);
        v64 = (v61 & 1) == 0;
        v65 = v63 + v64;
        if (__OFADD__(v63, v64))
          goto LABEL_79;
        v66 = v61;
        if (*(_QWORD *)(v0 + 24) >= v65)
        {
          if ((v7 & 1) != 0)
          {
            v7 = (uint64_t)v120;
            if ((v61 & 1) != 0)
              goto LABEL_51;
          }
          else
          {
            v0 = (unint64_t)&v120;
            sub_10003ACC4();
            v7 = (uint64_t)v120;
            if ((v66 & 1) != 0)
              goto LABEL_51;
          }
        }
        else
        {
          sub_100038EE4(v65, v7);
          v0 = (unint64_t)v120;
          v67 = sub_10004F068(0x6E6F697461727564, 0xE800000000000000);
          if ((v66 & 1) != (v68 & 1))
            goto LABEL_91;
          v62 = v67;
          v7 = (uint64_t)v120;
          if ((v66 & 1) != 0)
          {
LABEL_51:
            v69 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 32 * v62);
            sub_100010C40(v69);
            sub_100009CF0(v121, v69);
            goto LABEL_55;
          }
        }
        *(_QWORD *)(v7 + 8 * (v62 >> 6) + 64) |= 1 << v62;
        v70 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v62);
        *v70 = 0x6E6F697461727564;
        v70[1] = 0xE800000000000000;
        sub_100009CF0(v121, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v62));
        v71 = *(_QWORD *)(v7 + 16);
        v12 = __OFADD__(v71, 1);
        v72 = v71 + 1;
        if (v12)
          goto LABEL_82;
        *(_QWORD *)(v7 + 16) = v72;
LABEL_55:
        swift_bridgeObjectRelease(0x8000000000000000);
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          v9 = sub_100038784(0, v9[2] + 1, 1, v9);
        v8 = v9[2];
        v73 = v9[3];
        if (v8 >= v73 >> 1)
          v9 = sub_100038784((_QWORD *)(v73 > 1), v8 + 1, 1, v9);
        ++v16;
        v9[2] = v8 + 1;
        v9[v8 + 4] = v7;
        swift_release(v17);
        v7 = (uint64_t)&_swiftEmptyDictionarySingleton;
        v14 = v117;
        if (v55 == v16)
        {
          swift_release(v112);
          v8 = v110;
          v10 = v109;
          v0 = (unint64_t)v113;
          goto LABEL_6;
        }
      }
    }
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v14);
    if (v15)
      goto LABEL_15;
LABEL_65:
    swift_release(v11);
LABEL_6:
    swift_bridgeObjectRelease(v14);
  }
  while (v0 != v10);
  swift_bridgeObjectRelease(v8);
  v76 = v125;
LABEL_68:
  v77 = v106;
  v78 = *(_QWORD *)(v106 + 40);
  v79 = *(_QWORD *)(v106 + 48);
  v123 = &type metadata for String;
  *(_QWORD *)&v122 = v78;
  *((_QWORD *)&v122 + 1) = v79;
  sub_100009CF0(&v122, v121);
  swift_bridgeObjectRetain(v79);
  v80 = swift_isUniquelyReferenced_nonNull_native(v76);
  v120 = v76;
  sub_10003A658(v121, 0x656C746974, 0xE500000000000000, v80);
  v81 = v120;
  swift_bridgeObjectRelease(0x8000000000000000);
  v82 = *(_QWORD *)(v77 + 24);
  v83 = *(_QWORD *)(v77 + 32);
  v123 = &type metadata for String;
  *(_QWORD *)&v122 = v82;
  *((_QWORD *)&v122 + 1) = v83;
  sub_100009CF0(&v122, v121);
  swift_bridgeObjectRetain(v83);
  v84 = swift_isUniquelyReferenced_nonNull_native(v81);
  v120 = v81;
  sub_10003A658(v121, 0x696669746E656469, 0xEA00000000007265, v84);
  v85 = v120;
  swift_bridgeObjectRelease(0x8000000000000000);
  v123 = (void *)sub_100007D40(&qword_1000ED040);
  *(_QWORD *)&v122 = v9;
  v86 = v77;
  sub_100009CF0(&v122, v121);
  v87 = swift_isUniquelyReferenced_nonNull_native(v85);
  v120 = v85;
  sub_10003A658(v121, 0x746F6C73656D6974, 0xE900000000000073, v87);
  v88 = v120;
  v125 = v120;
  swift_bridgeObjectRelease(0x8000000000000000);
  v89 = objc_msgSend(*(id *)(v77 + 56), "structuredLocation");
  if (v89)
  {
    v90 = v89;
    v91 = sub_100064AA8();

    v123 = (void *)sub_100007D40(&qword_1000EC478);
    *(_QWORD *)&v122 = v91;
    v86 = v106;
    sub_100009CF0(&v122, v121);
    v92 = swift_isUniquelyReferenced_nonNull_native(v88);
    v120 = v88;
    sub_10003A658(v121, 0x6E6F697461636F6CLL, 0xE800000000000000, v92);
    v125 = v120;
    swift_bridgeObjectRelease(0x8000000000000000);
    v93 = *(void **)(v86 + 88);
    if (v93)
      goto LABEL_70;
LABEL_72:
    sub_100039FE8(0x6564496567616D69, 0xEF7265696669746ELL, &v122);
    sub_100010A98((uint64_t)&v122, (uint64_t *)&unk_1000EEB60);
  }
  else
  {
    sub_100039FE8(0x6E6F697461636F6CLL, 0xE800000000000000, &v122);
    sub_100010A98((uint64_t)&v122, (uint64_t *)&unk_1000EEB60);
    v93 = *(void **)(v77 + 88);
    if (!v93)
      goto LABEL_72;
LABEL_70:
    v94 = objc_msgSend(v93, "identifier", v106);
    v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
    v97 = v96;

    v123 = &type metadata for String;
    *(_QWORD *)&v122 = v95;
    *((_QWORD *)&v122 + 1) = v97;
    v86 = v106;
    sub_100009CF0(&v122, v121);
    v98 = v125;
    v99 = swift_isUniquelyReferenced_nonNull_native(v125);
    v120 = v98;
    sub_10003A658(v121, 0x6564496567616D69, 0xEF7265696669746ELL, v99);
    v125 = v120;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  if (*(_BYTE *)(v86 + 72) == 1)
    return (uint64_t)v125;
  v101 = *(_QWORD *)(v86 + 64) / 60;
  v123 = &type metadata for Int;
  *(_QWORD *)&v122 = v101;
  sub_100009CF0(&v122, v121);
  v102 = v125;
  v103 = swift_isUniquelyReferenced_nonNull_native(v125);
  v120 = v102;
  sub_10003A658(v121, 0x656E6F7A656D6974, 0xEE0074657366664FLL, v103);
  v100 = v120;
  swift_bridgeObjectRelease(0x8000000000000000);
  return (uint64_t)v100;
}

uint64_t sub_1000137D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for IMBProposedEvent()
{
  return objc_opt_self(_TtC8Business16IMBProposedEvent);
}

unint64_t sub_10001383C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EC5F8;
  if (!qword_1000EC5F8)
  {
    v1 = sub_100007DCC(&qword_1000EC478);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1000EC5F8);
  }
  return result;
}

uint64_t sub_100013888(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD), uint64_t a4, void (*a5)(char **, char **, _QWORD **))
{
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v15[2];

  v10 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = a2(v10);
    *a1 = v10;
  }
  v12 = *(_QWORD *)(v10 + 16);
  v15[0] = v10 + 32;
  v15[1] = v12;
  v13 = sub_100013968(v15, a3, a4, a5);
  return specialized ContiguousArray._endMutation()(v13);
}

unint64_t sub_10001392C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EC600[0];
  if (!qword_1000EC600[0])
  {
    v1 = objc_opt_self(EKStructuredLocation);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, qword_1000EC600);
  }
  return result;
}

Swift::Int sub_100013968(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t a3, void (*a4)(char **, char **, _QWORD **))
{
  uint64_t v4;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  Swift::Int v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  double v32;
  uint64_t *v33;
  Swift::Int v34;
  Swift::Int v35;
  uint64_t *v36;
  uint64_t v37;
  Swift::Int v38;
  uint64_t *v39;
  uint64_t v40;
  Swift::Int v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  Swift::Int v112;
  Swift::Int v113;
  Swift::Int v115;
  char *v116;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v7 = v4;
  v8 = a1[1];
  result = _minimumMergeRunLength(_:)(v8);
  if (result >= v8)
  {
    if (v8 < 0)
      goto LABEL_134;
    if (v8)
      return sub_1000140F8(0, v8, 1, a1);
    return result;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_142;
  v112 = result;
  v118 = a3;
  if (v8 < 2)
  {
    v14 = (char *)_swiftEmptyArrayStorage;
    v120 = (uint64_t)_swiftEmptyArrayStorage;
    v116 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v8 != 1)
    {
      v17 = _swiftEmptyArrayStorage[2];
      if (v17 >= 2)
        goto LABEL_98;
LABEL_110:
      v101 = v14;
LABEL_111:
      v108 = swift_bridgeObjectRelease(v101);
      *(_QWORD *)((v120 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v108);
      return swift_bridgeObjectRelease(v120);
    }
  }
  else
  {
    v11 = v10 >> 1;
    v12 = a2(0);
    v13 = static Array._allocateBufferUninitialized(minimumCapacity:)(v11, v12);
    *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) = v11;
    v116 = (char *)((v13 & 0xFFFFFFFFFFFFFF8) + 32);
    v120 = v13;
  }
  v15 = 0;
  v16 = *a1;
  v110 = *a1 - 8;
  v111 = *a1 + 16;
  v14 = (char *)_swiftEmptyArrayStorage;
  v113 = v8;
  v119 = *a1;
  while (1)
  {
    v18 = v15++;
    if (v15 < v8)
    {
      v19 = v14;
      v20 = *(_QWORD *)(v16 + 8 * v15);
      v21 = *(_QWORD *)(v16 + 8 * v18);
      swift_retain(v20);
      v22 = swift_retain(v21);
      v23 = Date.timeIntervalSince1970.getter(v22);
      v25 = Date.timeIntervalSince1970.getter(v24);
      swift_release(v20);
      swift_release(v21);
      v15 = v18 + 2;
      if (v18 + 2 < v8)
      {
        v26 = (_QWORD *)(v111 + 8 * v18);
        while (1)
        {
          v28 = *(v26 - 1);
          v27 = *v26;
          swift_retain(*v26);
          v29 = swift_retain(v28);
          v30 = Date.timeIntervalSince1970.getter(v29);
          v32 = Date.timeIntervalSince1970.getter(v31);
          swift_release(v27);
          swift_release(v28);
          if (v23 < v25 == v30 >= v32)
            break;
          ++v15;
          ++v26;
          if (v8 == v15)
          {
            v15 = v8;
            break;
          }
        }
      }
      v14 = v19;
      v16 = v119;
      if (v23 < v25)
      {
        if (v15 < v18)
          goto LABEL_135;
        if (v18 < v15)
        {
          v33 = (uint64_t *)(v110 + 8 * v15);
          v34 = v15;
          v35 = v18;
          v36 = (uint64_t *)(v119 + 8 * v18);
          do
          {
            if (v35 != --v34)
            {
              if (!v119)
                goto LABEL_140;
              v37 = *v36;
              *v36 = *v33;
              *v33 = v37;
            }
            ++v35;
            --v33;
            ++v36;
          }
          while (v35 < v34);
        }
      }
    }
    if (v15 >= v8)
      goto LABEL_48;
    if (__OFSUB__(v15, v18))
      goto LABEL_133;
    if (v15 - v18 >= v112)
      goto LABEL_48;
    if (__OFADD__(v18, v112))
      goto LABEL_136;
    v38 = v18 + v112 >= v8 ? v8 : v18 + v112;
    if (v38 < v18)
      break;
    if (v15 != v38)
    {
      v115 = v18;
      v109 = v14;
      v39 = (uint64_t *)(v110 + 8 * v15);
      do
      {
        v40 = *(_QWORD *)(v16 + 8 * v15);
        v41 = v115;
        v42 = v39;
        while (1)
        {
          v43 = *v42;
          swift_retain(v40);
          v44 = swift_retain(v43);
          v45 = Date.timeIntervalSince1970.getter(v44);
          v47 = Date.timeIntervalSince1970.getter(v46);
          swift_release(v40);
          swift_release(v43);
          if (v45 >= v47)
            break;
          v16 = v119;
          if (!v119)
            goto LABEL_138;
          v48 = *v42;
          v40 = v42[1];
          *v42 = v40;
          v42[1] = v48;
          --v42;
          if (v15 == ++v41)
            goto LABEL_41;
        }
        v16 = v119;
LABEL_41:
        ++v15;
        ++v39;
      }
      while (v15 != v38);
      v15 = v38;
      v14 = v109;
      v18 = v115;
    }
LABEL_48:
    if (v15 < v18)
      goto LABEL_128;
    v49 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) != 0)
      v14 = v49;
    else
      v14 = sub_1000A4058(0, *((_QWORD *)v49 + 2) + 1, 1, v49);
    v51 = *((_QWORD *)v14 + 2);
    v50 = *((_QWORD *)v14 + 3);
    v17 = v51 + 1;
    v16 = v119;
    if (v51 >= v50 >> 1)
    {
      v100 = sub_1000A4058((char *)(v50 > 1), v51 + 1, 1, v14);
      v16 = v119;
      v14 = v100;
    }
    *((_QWORD *)v14 + 2) = v17;
    v52 = v14 + 32;
    v53 = &v14[16 * v51 + 32];
    *(_QWORD *)v53 = v18;
    *((_QWORD *)v53 + 1) = v15;
    if (v51)
    {
      while (1)
      {
        v54 = v17 - 1;
        if (v17 >= 4)
        {
          v59 = &v52[16 * v17];
          v60 = *((_QWORD *)v59 - 8);
          v61 = *((_QWORD *)v59 - 7);
          v65 = __OFSUB__(v61, v60);
          v62 = v61 - v60;
          if (v65)
            goto LABEL_117;
          v64 = *((_QWORD *)v59 - 6);
          v63 = *((_QWORD *)v59 - 5);
          v65 = __OFSUB__(v63, v64);
          v57 = v63 - v64;
          v58 = v65;
          if (v65)
            goto LABEL_118;
          v66 = v17 - 2;
          v67 = &v52[16 * v17 - 32];
          v69 = *(_QWORD *)v67;
          v68 = *((_QWORD *)v67 + 1);
          v65 = __OFSUB__(v68, v69);
          v70 = v68 - v69;
          if (v65)
            goto LABEL_120;
          v65 = __OFADD__(v57, v70);
          v71 = v57 + v70;
          if (v65)
            goto LABEL_123;
          if (v71 >= v62)
          {
            v89 = &v52[16 * v54];
            v91 = *(_QWORD *)v89;
            v90 = *((_QWORD *)v89 + 1);
            v65 = __OFSUB__(v90, v91);
            v92 = v90 - v91;
            if (v65)
              goto LABEL_127;
            v82 = v57 < v92;
            goto LABEL_85;
          }
        }
        else
        {
          if (v17 != 3)
          {
            v83 = *((_QWORD *)v14 + 4);
            v84 = *((_QWORD *)v14 + 5);
            v65 = __OFSUB__(v84, v83);
            v76 = v84 - v83;
            v77 = v65;
            goto LABEL_79;
          }
          v56 = *((_QWORD *)v14 + 4);
          v55 = *((_QWORD *)v14 + 5);
          v65 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          v58 = v65;
        }
        if ((v58 & 1) != 0)
          goto LABEL_119;
        v66 = v17 - 2;
        v72 = &v52[16 * v17 - 32];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v75 = __OFSUB__(v73, v74);
        v76 = v73 - v74;
        v77 = v75;
        if (v75)
          goto LABEL_122;
        v78 = &v52[16 * v54];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v65 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v65)
          goto LABEL_125;
        if (__OFADD__(v76, v81))
          goto LABEL_126;
        if (v76 + v81 >= v57)
        {
          v82 = v57 < v81;
LABEL_85:
          if (v82)
            v54 = v66;
          goto LABEL_87;
        }
LABEL_79:
        if ((v77 & 1) != 0)
          goto LABEL_121;
        v85 = &v52[16 * v54];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v65 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v65)
          goto LABEL_124;
        if (v88 < v76)
          goto LABEL_14;
LABEL_87:
        v93 = v54 - 1;
        if (v54 - 1 >= v17)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v16)
          goto LABEL_139;
        v94 = v14;
        v95 = &v52[16 * v93];
        v96 = *(_QWORD *)v95;
        v97 = &v52[16 * v54];
        v98 = *((_QWORD *)v97 + 1);
        sub_1000141F4((char *)(v16 + 8 * *(_QWORD *)v95), (char *)(v16 + 8 * *(_QWORD *)v97), v16 + 8 * v98, v116, v118, a4);
        if (v4)
        {
LABEL_96:
          v101 = v94;
          goto LABEL_111;
        }
        if (v98 < v96)
          goto LABEL_114;
        if (v54 > *((_QWORD *)v94 + 2))
          goto LABEL_115;
        *(_QWORD *)v95 = v96;
        *(_QWORD *)&v52[16 * v93 + 8] = v98;
        v99 = *((_QWORD *)v94 + 2);
        if (v54 >= v99)
          goto LABEL_116;
        v17 = v99 - 1;
        memmove(&v52[16 * v54], v97 + 16, 16 * (v99 - 1 - v54));
        v14 = v94;
        *((_QWORD *)v94 + 2) = v99 - 1;
        v16 = v119;
        if (v99 <= 2)
          goto LABEL_14;
      }
    }
    v17 = 1;
LABEL_14:
    v8 = v113;
    if (v15 >= v113)
    {
      v7 = v4;
      if (v17 < 2)
        goto LABEL_110;
LABEL_98:
      v102 = *a1;
      while (1)
      {
        v103 = v17 - 2;
        if (v17 < 2)
          goto LABEL_129;
        if (!v102)
          goto LABEL_141;
        v94 = v14;
        v104 = *(_QWORD *)&v14[16 * v103 + 32];
        v105 = *(_QWORD *)&v14[16 * v17 + 24];
        sub_1000141F4((char *)(v102 + 8 * v104), (char *)(v102 + 8 * *(_QWORD *)&v14[16 * v17 + 16]), v102 + 8 * v105, v116, v118, a4);
        if (v7)
          goto LABEL_96;
        if (v105 < v104)
          goto LABEL_130;
        if ((swift_isUniquelyReferenced_nonNull_native(v94) & 1) == 0)
          v94 = sub_1000A4308((uint64_t)v94);
        if (v103 >= *((_QWORD *)v94 + 2))
          goto LABEL_131;
        v106 = &v94[16 * v103 + 32];
        *(_QWORD *)v106 = v104;
        *((_QWORD *)v106 + 1) = v105;
        v107 = *((_QWORD *)v94 + 2);
        if (v17 > v107)
          goto LABEL_132;
        memmove(&v94[16 * v17 + 16], &v94[16 * v17 + 32], 16 * (v107 - v17));
        v14 = v94;
        *((_QWORD *)v94 + 2) = v107 - 1;
        v17 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_110;
      }
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000140F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v17;

  v17 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(_QWORD *)(v5 + 8 * v4);
    v8 = v17;
    v9 = (uint64_t *)v6;
    while (1)
    {
      v10 = *v9;
      swift_retain(v7);
      v11 = swift_retain(v10);
      v12 = Date.timeIntervalSince1970.getter(v11);
      v14 = Date.timeIntervalSince1970.getter(v13);
      swift_release(v7);
      result = swift_release(v10);
      if (v12 >= v14)
      {
LABEL_4:
        ++v4;
        v6 += 8;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v15 = *v9;
      v7 = v9[1];
      *v9 = v7;
      v9[1] = v15;
      --v9;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000141F4(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t a5, void (*a6)(char **, char **, _QWORD **))
{
  char *v6;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  double v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  double v35;
  uint64_t result;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;

  v6 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v11 = a2 - __src;
  v12 = v11 >> 3;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 3;
  v43 = __src;
  v42 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[8 * v15] <= __dst)
        memmove(__dst, a2, 8 * v15);
      v24 = &v6[8 * v15];
      v41 = v24;
      v43 = v8;
      v39 = v9;
      if (v9 < v8 && v13 >= 8)
      {
        v25 = (char *)(a3 - 8);
        v26 = v8;
        v38 = v6;
        do
        {
          v40 = v8;
          v27 = v25 + 8;
          v29 = v24 - 8;
          v28 = *((_QWORD *)v24 - 1);
          v30 = *((_QWORD *)v26 - 1);
          v26 -= 8;
          v31 = (unint64_t)v24;
          swift_retain(v28);
          v32 = swift_retain(v30);
          v33 = Date.timeIntervalSince1970.getter(v32);
          v35 = Date.timeIntervalSince1970.getter(v34);
          swift_release(v28);
          swift_release(v30);
          if (v33 >= v35)
          {
            v41 = v29;
            if ((unint64_t)v27 < v31 || (unint64_t)v25 >= v31 || v27 != (char *)v31)
              *(_QWORD *)v25 = *(_QWORD *)v29;
            v26 = v40;
            v24 = v29;
          }
          else
          {
            v24 = (char *)v31;
            if (v27 != v40 || v25 >= v40)
              *(_QWORD *)v25 = *(_QWORD *)v26;
            v43 = v26;
          }
          if (v26 <= v39)
            break;
          v25 -= 8;
          v8 = v26;
        }
        while (v24 > v38);
      }
      goto LABEL_42;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[8 * v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v16 = &v6[8 * v12];
    v41 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      do
      {
        v17 = *(_QWORD *)v8;
        v18 = *(_QWORD *)v6;
        swift_retain(*(_QWORD *)v8);
        v19 = swift_retain(v18);
        v20 = Date.timeIntervalSince1970.getter(v19);
        v22 = Date.timeIntervalSince1970.getter(v21);
        swift_release(v17);
        swift_release(v18);
        if (v20 >= v22)
        {
          if (v9 != v6)
            *(_QWORD *)v9 = *(_QWORD *)v6;
          v6 += 8;
          v42 = v6;
          v23 = v8;
        }
        else
        {
          v23 = v8 + 8;
          if (v9 < v8 || v9 >= v23 || v9 != v8)
            *(_QWORD *)v9 = *(_QWORD *)v8;
        }
        v9 += 8;
        if (v6 >= v16)
          break;
        v8 = v23;
      }
      while ((unint64_t)v23 < a3);
      v43 = v9;
    }
LABEL_42:
    a6(&v43, &v42, (_QWORD **)&v41);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100014518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000EC5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100014560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000EC5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000145A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_1000145B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_100014620(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain(v8);
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      swift_errorRetain(*a2);
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_100014744(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return swift_errorRelease(*a1);
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_10001478C + 4 * byte_1000AF1DD[v5]))();
  }
}

_QWORD *sub_1000147E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *a2;
    swift_errorRetain(*a2);
    *a1 = v8;
    v9 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v9 = 0;
  }
  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

uint64_t *sub_1000148C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_errorRelease(*a1);
    else
      (*(void (**)(uint64_t *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      swift_errorRetain(v12);
      *a1 = v12;
      v13 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      v13 = 0;
    }
    *((_BYTE *)a1 + v7) = v13;
  }
  return a1;
}

_QWORD *sub_100014A5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_100014B30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_errorRelease(*a1);
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_100014CBC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100014D80 + 4 * byte_1000AF200[(v4 - 1)]))();
}

void sub_100014DCC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = &dword_100000004;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = &_mh_execute_header.magic + 1;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_100014F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_100014FBC + 4 * byte_1000AF20E[v3]))();
}

void sub_100015004(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for Outcome(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000150D8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Outcome);
}

uint64_t sub_1000150D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

id sub_100015104()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___titleLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v5 = sub_1000907D4((uint64_t)UIFontTextStyleTitle3, 0, *(uint64_t *)&UIFontWeightSemibold, 0, 1, 15.0);
    objc_msgSend(v4, "setFont:", v5);

    v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    objc_msgSend(v4, "setTextColor:", v6);

    objc_msgSend(v4, "setNumberOfLines:", 0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_100015210()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v5 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleSubheadline);
    v6 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v5, 11.0);
    v7 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleSubheadline);
    v8 = objc_msgSend(v7, "scaledFontForFont:", v6);

    objc_msgSend(v4, "setFont:", v8);
    v9 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    objc_msgSend(v4, "setTextColor:", v9);

    objc_msgSend(v4, "setNumberOfLines:", 0);
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1000153A4()
{
  char *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___separatorView] = 0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for MacTableHeaderView();
  v1 = objc_msgSendSuper2(&v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = qword_1000EBBF8;
  v3 = v1;
  if (v2 != -1)
    swift_once(&qword_1000EBBF8, sub_10002D65C);
  objc_msgSend(v3, "setBackgroundColor:", qword_1000F8978);
  v4 = sub_100015104();
  objc_msgSend(v3, "addSubview:", v4);

  v5 = sub_100015210();
  objc_msgSend(v3, "addSubview:", v5);

  v6 = sub_100015968();
  objc_msgSend(v3, "addSubview:", v6);

  sub_100015570();
  return v3;
}

void sub_100015570()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;

  v1 = sub_100015104();
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v2 = sub_100015104();
  v3 = objc_msgSend(v2, "topAnchor");

  v4 = objc_msgSend(v0, "topAnchor");
  v5 = objc_msgSend(v3, "constraintEqualToAnchor:constant:", v4, 22.0);

  objc_msgSend(v5, "setActive:", 1);
  v6 = sub_100015104();
  v7 = objc_msgSend(v6, "leadingAnchor");

  v8 = objc_msgSend(v0, "leadingAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v8, 16.0);

  objc_msgSend(v9, "setActive:", 1);
  v10 = sub_100015104();
  v11 = objc_msgSend(v10, "trailingAnchor");

  v12 = objc_msgSend(v0, "trailingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, -16.0);

  objc_msgSend(v13, "setActive:", 1);
  v14 = sub_100015210();
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v15 = sub_100015210();
  v16 = objc_msgSend(v15, "topAnchor");

  v17 = sub_100015104();
  v18 = objc_msgSend(v17, "bottomAnchor");

  v19 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v18, 2.0);
  objc_msgSend(v19, "setActive:", 1);

  v20 = sub_100015210();
  v21 = objc_msgSend(v20, "leadingAnchor");

  v22 = objc_msgSend(v0, "leadingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, 16.0);

  objc_msgSend(v23, "setActive:", 1);
  v24 = sub_100015210();
  v25 = objc_msgSend(v24, "trailingAnchor");

  v26 = objc_msgSend(v0, "trailingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v26, -16.0);

  objc_msgSend(v27, "setActive:", 1);
  v28 = sub_100015968();
  v29 = objc_msgSend(v28, "topAnchor");

  v30 = sub_100015210();
  v31 = objc_msgSend(v30, "bottomAnchor");

  v32 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v31, 12.0);
  objc_msgSend(v32, "setActive:", 1);

  v33 = v0;
  sub_100015AA0(1, v33, v33, v33, v33, 0.0, 16.0, 16.0);

}

id sub_100015968()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business18MacTableHeaderView____lazy_storage___separatorView);
  }
  else
  {
    v4 = type metadata accessor for SeparatorView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_100015A08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MacTableHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MacTableHeaderView()
{
  return objc_opt_self(_TtC8Business18MacTableHeaderView);
}

void sub_100015AA0(char a1, void *a2, void *a3, void *a4, void *a5, double a6, double a7, double a8)
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  double v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;

  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = sub_100015968();

  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = v18;
  v21 = sub_100015968();

  v22 = objc_msgSend(v21, "heightAnchor");
  v23 = objc_msgSend(v20, "traitCollection");
  objc_msgSend(v23, "displayScale");
  v25 = v24;

  if (v25 <= 0.0)
  {
    v26 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v26, "scale");
    v25 = v27;

    if (v25 <= 0.0)
      v25 = 1.0;
  }
  v28 = objc_msgSend(v22, "constraintEqualToConstant:", 1.0 / v25);

  objc_msgSend(v28, "setActive:", 1);
  v29 = v20;
  v30 = sub_100015968();

  if ((a1 & 1) != 0)
  {
    v31 = objc_msgSend(v30, "bottomAnchor");

    v32 = objc_msgSend(v15, "bottomAnchor");
  }
  else
  {
    v31 = objc_msgSend(v30, "topAnchor");

    v32 = objc_msgSend(v15, "topAnchor");
  }
  v33 = v32;
  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, a6);

  objc_msgSend(v34, "setActive:", 1);
  v35 = v29;
  v36 = sub_100015968();

  v37 = objc_msgSend(v36, "leadingAnchor");
  v38 = objc_msgSend(v16, "leadingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, a7);

  objc_msgSend(v39, "setActive:", 1);
  v40 = v35;
  v41 = sub_100015968();

  v42 = objc_msgSend(v41, "trailingAnchor");
  v43 = objc_msgSend(v17, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, -a8);

  objc_msgSend(v44, "setActive:", 1);
}

BOOL sub_100015E1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_100015E34()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100015E78()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100015EA0()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

id sub_100015F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  NSString v19;
  id v20;
  UIAccessibilityTraits v21;
  id v22;
  objc_super v24;

  v6 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_horizontalStackView;
  v7 = objc_allocWithZone((Class)UIStackView);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_verticalStackView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v10 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_titleLabel;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_subtitleLabel;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listImageView;
  *(_QWORD *)&v8[v12] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v13 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_iconImageView;
  *(_QWORD *)&v8[v13] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v8[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showingIcon] = 0;
  v8[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_multipleSelectionEnabled] = 1;
  v8[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showsSeparator] = 1;
  v14 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_notSelectedIconTintColor;
  sub_1000090C8(0, (unint64_t *)&qword_1000EC788, UIColor_ptr);
  *(UIColor *)&v8[v14] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.78039, 0.78039, 0.8, 1.0);
  v15 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_selectedIconTintColor;
  *(UIColor *)&v8[v15] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.086275, 0.50196, 0.98431, 1.0);
  v16 = &v8[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_notSelectedIconMultiString];
  *(_QWORD *)v16 = 0xD000000000000027;
  *((_QWORD *)v16 + 1) = 0x80000001000B4C70;
  v17 = &v8[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_selectedIconMultiString];
  *(_QWORD *)v17 = 0xD000000000000023;
  *((_QWORD *)v17 + 1) = 0x80000001000B4CA0;
  v18 = &v8[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_checkmarkImageName];
  *(_QWORD *)v18 = 0x72616D6B63656863;
  *((_QWORD *)v18 + 1) = 0xE90000000000006BLL;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listItem] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Business23ListPickerTableViewCell____lazy_storage___separatorView] = 0;

  if (a3)
  {
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v19 = 0;
  }
  v24.receiver = v8;
  v24.super_class = (Class)type metadata accessor for ListPickerTableViewCell();
  v20 = objc_msgSendSuper2(&v24, "initWithStyle:reuseIdentifier:", a1, v19);

  v21 = UIAccessibilityTraitButton;
  v22 = v20;
  objc_msgSend(v22, "setAccessibilityTraits:", v21);
  sub_100016250();
  sub_100016624();

  return v22;
}

void sub_100016250()
{
  char *v0;
  id v1;
  void *v2;
  char v3;
  void *v4;
  const UIFontTextStyle *v5;
  id v6;
  void *v7;
  char v8;
  void *v9;
  const UIFontTextStyle *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;

  if (sub_10002DA10() == 2)
  {
    v1 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v0, "setBackgroundColor:", v1);

  }
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_titleLabel];
  v3 = sub_10002DA10();
  v4 = (void *)objc_opt_self(UIFont);
  v5 = &UIFontTextStyleHeadline;
  if ((v3 & 0xFE) != 0)
    v5 = &UIFontTextStyleTitle2;
  v6 = objc_msgSend(v4, "preferredFontForTextStyle:", *v5);
  objc_msgSend(v2, "setFont:", v6);

  v7 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_subtitleLabel];
  v8 = sub_10002DA10();
  v9 = (void *)objc_opt_self(UIFont);
  v10 = &UIFontTextStyleSubheadline;
  if ((v8 & 0xFE) != 0)
    v10 = &UIFontTextStyleTitle3;
  v11 = objc_msgSend(v9, "preferredFontForTextStyle:", *v10);
  objc_msgSend(v7, "setFont:", v11);

  v12 = (void *)objc_opt_self(UIColor);
  v13 = objc_msgSend(v12, "labelColor");
  objc_msgSend(v2, "setTextColor:", v13);

  v14 = objc_msgSend(v12, "secondaryLabelColor");
  objc_msgSend(v7, "setTextColor:", v14);

  objc_msgSend(v2, "setNumberOfLines:", 0);
  objc_msgSend(v7, "setNumberOfLines:", 0);
  v15 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listImageView];
  v16 = objc_msgSend(v15, "layer");
  objc_msgSend(v16, "setCornerRadius:", 4.0);

  objc_msgSend(v15, "setContentMode:", 2);
  v17 = objc_msgSend(v15, "layer");
  objc_msgSend(v17, "setMasksToBounds:", 1);

  v18 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_iconImageView];
  objc_msgSend(v18, "setContentMode:", 4);
  v19 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_verticalStackView];
  objc_msgSend(v19, "setAxis:", 1);
  objc_msgSend(v19, "setAlignment:", 1);
  objc_msgSend(v19, "setDistribution:", 0);
  objc_msgSend(v19, "addArrangedSubview:", v2);
  objc_msgSend(v19, "addArrangedSubview:", v7);
  v20 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_horizontalStackView];
  objc_msgSend(v20, "setAxis:", 0);
  objc_msgSend(v20, "setAlignment:", 3);
  objc_msgSend(v20, "setDistribution:", 0);
  objc_msgSend(v20, "setSpacing:", 15.0);
  objc_msgSend(v20, "addArrangedSubview:", v15);
  objc_msgSend(v20, "addArrangedSubview:", v19);
  objc_msgSend(v20, "addArrangedSubview:", v18);
  v21 = objc_msgSend(v0, "contentView");
  objc_msgSend(v21, "addSubview:", v20);

  v22 = objc_msgSend(v0, "contentView");
  v23 = sub_100017244();
  objc_msgSend(v22, "addSubview:", v23);

}

void sub_100016624()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  double v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  double v27;
  id v28;
  id v29;
  id v30;
  id v31;
  double v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  char v38;
  double v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_horizontalStackView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v1, "topAnchor");
  v3 = objc_msgSend(v0, "contentView");
  v4 = objc_msgSend(v3, "topAnchor");

  v5 = 20.0;
  v6 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v4, 20.0);

  objc_msgSend(v6, "setActive:", 1);
  v7 = objc_msgSend(v1, "bottomAnchor");
  v8 = objc_msgSend(v0, "contentView");
  v9 = objc_msgSend(v8, "bottomAnchor");

  v10 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v9, -20.0);
  objc_msgSend(v10, "setActive:", 1);

  v11 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listImageView];
  v12 = objc_msgSend(v11, "heightAnchor");
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", 60.0);

  objc_msgSend(v13, "setActive:", 1);
  v14 = objc_msgSend(v11, "widthAnchor");
  v15 = objc_msgSend(v11, "heightAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  objc_msgSend(v16, "setActive:", 1);
  v17 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_iconImageView];
  v18 = objc_msgSend(v17, "heightAnchor");
  v19 = objc_msgSend(v18, "constraintEqualToConstant:", 28.0);

  objc_msgSend(v19, "setActive:", 1);
  v20 = objc_msgSend(v17, "widthAnchor");
  v21 = objc_msgSend(v17, "heightAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  objc_msgSend(v22, "setActive:", 1);
  LODWORD(v22) = sub_10002DA10();
  v23 = objc_msgSend(v1, "leftAnchor");
  v24 = objc_msgSend(v0, "contentView");
  v25 = v24;
  if ((_DWORD)v22 == 2)
  {
    v26 = objc_msgSend(v24, "leftAnchor");

    if ((sub_10002DA10() & 0xFE) != 0)
      v27 = 16.0;
    else
      v27 = 20.0;
    v28 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v26, v27);

    objc_msgSend(v28, "setActive:", 1);
    v29 = objc_msgSend(v1, "rightAnchor");
    v30 = objc_msgSend(v0, "contentView");
    v31 = objc_msgSend(v30, "rightAnchor");

    if ((sub_10002DA10() & 0xFE) != 0)
      v32 = 16.0;
    else
      v32 = 20.0;
    v33 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v31, -v32);

    objc_msgSend(v33, "setActive:", 1);
    v34 = objc_msgSend(v0, "contentView");
    v35 = *(id *)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_verticalStackView];
    if ((sub_10002DA10() & 0xFE) != 0)
      v5 = 16.0;
    v46 = objc_msgSend(v0, "contentView");
    sub_1000175C0(1, v34, v35, v46, v0, 0.0, 0.0, v5);

  }
  else
  {
    v36 = objc_msgSend(v24, "layoutMarginsGuide");

    v37 = objc_msgSend(v36, "leftAnchor");
    v38 = sub_10002DA10();
    v39 = 15.0;
    if ((v38 & 0xFE) == 0)
      v39 = 0.0;
    v40 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v37, v39);

    objc_msgSend(v40, "setActive:", 1);
    v41 = objc_msgSend(v1, "rightAnchor");
    v42 = objc_msgSend(v0, "contentView");
    v43 = objc_msgSend(v42, "layoutMarginsGuide");

    v44 = objc_msgSend(v43, "rightAnchor");
    v45 = objc_msgSend(v41, "constraintEqualToAnchor:", v44);

    objc_msgSend(v45, "setActive:", 1);
    v46 = objc_msgSend(v0, "contentView");
    sub_100090A58(1, v46);
  }

}

void sub_100016C54()
{
  char *v0;
  char *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  void *v7;
  NSString v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  NSArray v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;

  v1 = v0;
  v2 = *(_QWORD **)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listItem];
  if (v2)
  {
    v3 = *(void **)&v1[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_titleLabel];
    v4 = v2[6];
    swift_bridgeObjectRetain(v4);
    swift_retain(v2);
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    objc_msgSend(v3, "setText:", v5);

    v6 = v2[8];
    v7 = *(void **)&v1[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_subtitleLabel];
    if (v6)
    {
      swift_bridgeObjectRetain(v2[8]);
      v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
      objc_msgSend(v7, "setText:", v8);

      objc_msgSend(v7, "setHidden:", 0);
    }
    else
    {
      objc_msgSend(v7, "setHidden:", 1);
    }
    swift_retain(v2);
    v9 = sub_100061330();
    swift_release(v2);
    v10 = *(void **)&v1[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listImageView];
    if (v9)
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listImageView], "setImage:", v9);
      objc_msgSend(v10, "setHidden:", 0);
      v11 = (void *)v2[11];
      if (v11)
      {
        v12 = objc_msgSend(v11, "imageDescription");
        v13 = v12;
        if (v12)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
          v15 = v14;

          v13 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v15);
        }
      }
      else
      {
        v13 = 0;
      }
      objc_msgSend(v10, "setAccessibilityLabel:", v13);

      v22 = sub_100007D40(&qword_1000ED4B0);
      v23 = swift_allocObject(v22, 128, 7);
      *(_OWORD *)(v23 + 16) = xmmword_1000AF280;
      v24 = sub_1000090C8(0, &qword_1000EC778, UILabel_ptr);
      *(_QWORD *)(v23 + 32) = v3;
      *(_QWORD *)(v23 + 88) = v24;
      *(_QWORD *)(v23 + 56) = v24;
      *(_QWORD *)(v23 + 64) = v7;
      *(_QWORD *)(v23 + 120) = sub_1000090C8(0, &qword_1000EC780, UIImageView_ptr);
      *(_QWORD *)(v23 + 96) = v10;
      v25 = v3;
      v26 = v7;
      v27 = v10;
      v21.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v23);
      objc_msgSend(v1, "setAccessibilityElements:", v21.super.isa);

    }
    else
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listImageView], "setHidden:", 1);
      objc_msgSend(v10, "setAccessibilityLabel:", 0);
      v16 = sub_100007D40(&qword_1000ED4B0);
      v17 = swift_allocObject(v16, 96, 7);
      *(_OWORD *)(v17 + 16) = xmmword_1000ADFC0;
      v18 = sub_1000090C8(0, &qword_1000EC778, UILabel_ptr);
      *(_QWORD *)(v17 + 32) = v3;
      *(_QWORD *)(v17 + 88) = v18;
      *(_QWORD *)(v17 + 56) = v18;
      *(_QWORD *)(v17 + 64) = v7;
      v19 = v3;
      v20 = v7;
      v21.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v17);
      objc_msgSend(v1, "setAccessibilityElements:", v21.super.isa);
    }

    swift_release(v2);
  }
}

void sub_100016FAC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  NSString v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_iconImageView);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_multipleSelectionEnabled) == 1)
  {
    v2 = (void *)objc_opt_self(UIImage);
    v3 = String._bridgeToObjectiveC()();
    v4 = objc_msgSend(v2, "kitImageNamed:", v3);

    if (v4)
    {
      objc_msgSend(v4, "size");
      v5 = objc_msgSend(v2, "_tintedImageForSize:withTint:effectsImage:maskImage:style:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_notSelectedIconTintColor), 0, v4, 0);

    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v1, "setImage:", v5);

  }
  else
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_iconImageView), "setImage:", 0);
  }
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showingIcon) = 0;
}

void sub_1000170D0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_iconImageView);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_multipleSelectionEnabled) == 1)
  {
    v2 = (void *)objc_opt_self(UIImage);
    v3 = String._bridgeToObjectiveC()();
    v4 = objc_msgSend(v2, "kitImageNamed:", v3);

    if (!v4)
    {
      v7 = 0;
      goto LABEL_7;
    }
    objc_msgSend(v4, "size");
    v5 = objc_msgSend(v2, "_tintedImageForSize:withTint:effectsImage:maskImage:style:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_selectedIconTintColor), 0, v4, 0);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_checkmarkImageName + 8);
    swift_bridgeObjectRetain(v6);
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    v5 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v4);
  }
  v7 = v5;

LABEL_7:
  objc_msgSend(v1, "setImage:", v7);

  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showingIcon) = 1;
}

id sub_100017244()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell____lazy_storage___separatorView);
  }
  else
  {
    v4 = type metadata accessor for SeparatorView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1000172B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ListPickerTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ListPickerTableViewCell()
{
  return objc_opt_self(_TtC8Business23ListPickerTableViewCell);
}

_BYTE *initializeBufferWithCopyOfBuffer for IMBBubbleType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for IMBBubbleType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ListPickerTableViewCell.ShowingIconType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000174E4 + 4 * byte_1000AF295[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100017518 + 4 * byte_1000AF290[v4]))();
}

uint64_t sub_100017518(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100017520(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100017528);
  return result;
}

uint64_t sub_100017534(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10001753CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100017540(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100017548(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100017554(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_10001755C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ListPickerTableViewCell.ShowingIconType()
{
  return &type metadata for ListPickerTableViewCell.ShowingIconType;
}

unint64_t sub_10001757C()
{
  unint64_t result;

  result = qword_1000EC770;
  if (!qword_1000EC770)
  {
    result = swift_getWitnessTable(&unk_1000AF308, &type metadata for ListPickerTableViewCell.ShowingIconType);
    atomic_store(result, (unint64_t *)&qword_1000EC770);
  }
  return result;
}

void sub_1000175C0(char a1, void *a2, void *a3, void *a4, void *a5, double a6, double a7, double a8)
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  double v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;

  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = sub_100017244();

  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = v18;
  v21 = sub_100017244();

  v22 = objc_msgSend(v21, "heightAnchor");
  v23 = objc_msgSend(v20, "traitCollection");
  objc_msgSend(v23, "displayScale");
  v25 = v24;

  if (v25 <= 0.0)
  {
    v26 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v26, "scale");
    v25 = v27;

    if (v25 <= 0.0)
      v25 = 1.0;
  }
  v28 = objc_msgSend(v22, "constraintEqualToConstant:", 1.0 / v25);

  objc_msgSend(v28, "setActive:", 1);
  v29 = v20;
  v30 = sub_100017244();

  if ((a1 & 1) != 0)
  {
    v31 = objc_msgSend(v30, "bottomAnchor");

    v32 = objc_msgSend(v15, "bottomAnchor");
  }
  else
  {
    v31 = objc_msgSend(v30, "topAnchor");

    v32 = objc_msgSend(v15, "topAnchor");
  }
  v33 = v32;
  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, a6);

  objc_msgSend(v34, "setActive:", 1);
  v35 = v29;
  v36 = sub_100017244();

  v37 = objc_msgSend(v36, "leadingAnchor");
  v38 = objc_msgSend(v16, "leadingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, a7);

  objc_msgSend(v39, "setActive:", 1);
  v40 = v35;
  v41 = sub_100017244();

  v42 = objc_msgSend(v41, "trailingAnchor");
  v43 = objc_msgSend(v17, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, -a8);

  objc_msgSend(v44, "setActive:", 1);
}

void sub_10001793C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;

  v1 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_horizontalStackView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v2 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_verticalStackView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v3 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_titleLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v4 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_subtitleLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listImageView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v6 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_iconImageView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showingIcon] = 0;
  v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_multipleSelectionEnabled] = 1;
  v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showsSeparator] = 1;
  v7 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_notSelectedIconTintColor;
  sub_1000090C8(0, (unint64_t *)&qword_1000EC788, UIColor_ptr);
  *(UIColor *)&v0[v7] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.78039, 0.78039, 0.8, 1.0);
  v8 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_selectedIconTintColor;
  *(UIColor *)&v0[v8] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.086275, 0.50196, 0.98431, 1.0);
  v9 = &v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_notSelectedIconMultiString];
  *v9 = 0xD000000000000027;
  v9[1] = 0x80000001000B4C70;
  v10 = &v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_selectedIconMultiString];
  *v10 = 0xD000000000000023;
  v10[1] = 0x80000001000B4CA0;
  v11 = &v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_checkmarkImageName];
  *v11 = 0x72616D6B63656863;
  v11[1] = 0xE90000000000006BLL;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23ListPickerTableViewCell____lazy_storage___separatorView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000B3DA0, "Business/ListPickerTableViewCell.swift", 38, 2, 86, 0);
  __break(1u);
}

void sub_100017B90(uint64_t a1)
{
  sub_100017BF0(0.52157, 0.55686, 0.59608, a1, &qword_1000F88E0);
}

void sub_100017BC0(uint64_t a1)
{
  sub_100017BF0(0.41031, 0.44045, 0.47586, a1, &qword_1000F88E8);
}

void sub_100017BF0(Swift::Float a1, Swift::Float a2, Swift::Float a3, uint64_t a4, _QWORD *a5)
{
  Class isa;
  id v10;

  sub_100017F94();
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(a1, a2, a3, 1.0).super.isa;
  v10 = -[objc_class CGColor](isa, "CGColor");

  *a5 = v10;
}

void sub_100017C74(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  objc_super v21;

  v21.receiver = v4;
  v21.super_class = (Class)type metadata accessor for IMBAuthenticationTapIndicator();
  v9 = objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  v10 = objc_msgSend(v9, "layer");
  objc_msgSend(v10, "setMasksToBounds:", 1);

  objc_msgSend(v9, "_setContinuousCornerRadius:", 8.0);
  v11 = (void *)objc_opt_self(UIFont);
  v12 = v9;
  v13 = objc_msgSend(v11, "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  v14 = objc_msgSend(v13, "fontDescriptor");
  v15 = objc_msgSend(v14, "fontDescriptorWithSymbolicTraits:", 2);

  if (v15)
  {
    v16 = objc_msgSend(v11, "fontWithDescriptor:size:", v15, 0.0);

    objc_msgSend(v12, "setFont:", v16);
    objc_msgSend(v12, "setTextAlignment:", 1);
    v17 = (void *)objc_opt_self(UIColor);
    v18 = v12;
    v19 = objc_msgSend(v17, "whiteColor");
    objc_msgSend(v18, "setTextColor:", v19);

    v20 = objc_msgSend(v18, "layer");
    if (qword_1000EBBA0 != -1)
      swift_once(&qword_1000EBBA0, sub_100017B90);
    objc_msgSend(v20, "setBackgroundColor:", qword_1000F88E0);

  }
  else
  {
    __break(1u);
  }
}

id sub_100017F40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBAuthenticationTapIndicator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBAuthenticationTapIndicator()
{
  return objc_opt_self(_TtC8Business29IMBAuthenticationTapIndicator);
}

unint64_t sub_100017F94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EC788;
  if (!qword_1000EC788)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000EC788);
  }
  return result;
}

uint64_t sub_100017FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for BubbleView(319, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_initClassMetadata2(a1, 0, 2, v7, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100018050()
{
  sub_1000182A0();
}

uint64_t sub_10001807C(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void sub_100018094()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = type metadata accessor for BubbleHostingView();
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "init");
  v2 = *(void **)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x68));
  v3 = objc_msgSend(v2, "view");
  sub_100093FF8(v3);

  objc_msgSend(v0, "setView:", v4);
  objc_msgSend(v0, "addChildViewController:", v2);
  objc_msgSend(v2, "didMoveToParentViewController:", v0);

}

void sub_100018164(void *a1)
{
  id v1;

  v1 = a1;
  sub_100018094();

}

void sub_100018198(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;

  v4 = a4;
  sub_1000182F8(v5, v6, v7, v8);
}

id sub_1000181D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for BubbleHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100018220(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v5;
  uint64_t v6;

  v5 = (char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0x60);
  v6 = type metadata accessor for BubbleView(0, *(_QWORD *)((swift_isaMask & *a1) + 0x50), *(_QWORD *)((swift_isaMask & *a1) + 0x58), a4);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

}

uint64_t type metadata accessor for BubbleHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000150D8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BubbleHostingController);
}

void sub_1000182A0()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000B3DA0, "Business/BubbleHostingController.swift", 38, 2, 30, 0);
  __break(1u);
}

void sub_1000182F8(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  _swift_stdlib_reportUnimplementedInitializer("Business.BubbleHostingController", 32, "init(nibName:bundle:)", 21, 0, a1, a2, a3, a4);
  __break(1u);
}

id sub_100018404()
{
  return sub_1000187C8(type metadata accessor for _PluginBubbleContextDictionaryWrapper);
}

uint64_t type metadata accessor for _PluginBubbleContextDictionaryWrapper()
{
  return objc_opt_self(_TtC8Business37_PluginBubbleContextDictionaryWrapper);
}

id sub_100018440(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  objc_super v18;

  v3 = v2;
  v6 = OBJC_IVAR____TtC8Business19PluginBubbleContext_appController;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business19PluginBubbleContext_appController] = a1;
  v7 = OBJC_IVAR____TtC8Business19PluginBubbleContext_conversation;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business19PluginBubbleContext_conversation] = a2;
  v8 = v3;
  v9 = a1;
  v10 = a2;
  v11 = objc_msgSend(v10, "selectedMessage");
  if (v11 && (v12 = v11, type metadata accessor for IMBMessage(), (v13 = sub_1000873D0(v12)) != 0))
  {
    *(_QWORD *)&v8[OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage] = v13;

    v18.receiver = v8;
    v18.super_class = (Class)type metadata accessor for PluginBubbleContext();
    v14 = objc_msgSendSuper2(&v18, "init");

  }
  else
  {

    v15 = *(void **)&v3[v6];
    v16 = type metadata accessor for PluginBubbleContext();
    swift_deallocPartialClassInstance(v8, v16, 32, 7);
    return 0;
  }
  return v14;
}

void sub_100018560(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  NSString v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  NSString v12;
  void *v13;
  objc_class *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  objc_super v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;

  v5 = objc_msgSend(objc_allocWithZone((Class)MSMessageTemplateLayout), "init");
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setCaption:", v6);

  v7 = *(void **)(v2 + OBJC_IVAR____TtC8Business19PluginBubbleContext_conversation);
  v8 = objc_msgSend(v7, "selectedMessage");
  v9 = objc_msgSend(v8, "session");

  if (!v9)
    v9 = objc_msgSend(objc_allocWithZone((Class)MSSession), "init");
  v10 = objc_msgSend(objc_allocWithZone((Class)MSMessage), "initWithSession:", v9);

  v11 = objc_msgSend(objc_allocWithZone((Class)MSMessageLiveLayout), "initWithAlternateLayout:", v5);
  objc_msgSend(v10, "setLayout:", v11);

  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setSummaryText:", v12);

  v13 = *(void **)(v2 + OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage);
  v14 = (objc_class *)type metadata accessor for _PluginBubbleContextDictionaryWrapper();
  v15 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Business37_PluginBubbleContextDictionaryWrapper_dictionaryValue] = a2;
  v21.receiver = v15;
  v21.super_class = v14;
  v16 = v13;
  v17 = v10;
  v18 = v7;
  v19 = a1;
  swift_bridgeObjectRetain(a2);
  v20 = objc_msgSendSuper2(&v21, "init");
  v22 = v16;
  v23 = v17;
  v24 = v18;
  v25 = 0;
  v26 = v19;
  v27 = v20;
  sub_1000371DC(1);

}

uint64_t sub_100018770(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id sub_1000187BC()
{
  return sub_1000187C8(type metadata accessor for PluginBubbleContext);
}

id sub_1000187C8(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for PluginBubbleContext()
{
  return objc_opt_self(_TtC8Business19PluginBubbleContext);
}

BOOL sub_100018860(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100018884()
{
  uint64_t result;
  uint64_t v1;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootNotificationKey);
  qword_1000F88F0 = result;
  qword_1000F88F8 = v1;
  return result;
}

uint64_t sub_1000188B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  int v34;
  int v35;
  unint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  _BYTE v68[168];

  v3 = v2;
  v6 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  v10 = objc_msgSend(a1, "messageData");
  if (!v10
    || (v11 = v10, v12 = objc_msgSend(v10, "jsonDictionary"),
                   v11,
                   !v12))
  {
    v66 = 0u;
    v67 = 0u;
    goto LABEL_25;
  }
  v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (qword_1000EBBB0 == -1)
  {
    if (*(_QWORD *)(v13 + 16))
      goto LABEL_5;
LABEL_23:
    v66 = 0u;
    v67 = 0u;
    goto LABEL_24;
  }
  swift_once(&qword_1000EBBB0, sub_100018884);
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_23;
LABEL_5:
  v14 = qword_1000F88F8;
  v15 = qword_1000F88F0;
  swift_bridgeObjectRetain(qword_1000F88F8);
  v16 = sub_10004F068(v15, v14);
  if ((v17 & 1) == 0)
  {
    v66 = 0u;
    v67 = 0u;
    swift_bridgeObjectRelease(v14);
LABEL_24:
    swift_bridgeObjectRelease(v13);
    goto LABEL_25;
  }
  sub_100009C74(*(_QWORD *)(v13 + 56) + 32 * v16, (uint64_t)&v66);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v13);
  if (!*((_QWORD *)&v67 + 1))
  {
LABEL_25:
    sub_100009CB0((uint64_t)&v66);
    goto LABEL_26;
  }
  v18 = sub_100007D40(&qword_1000EC478);
  if ((swift_dynamicCast(&v64, &v66, (char *)&type metadata for Any + 8, v18, 6) & 1) == 0)
  {
LABEL_26:
    v36 = sub_100018F94();
    v28 = swift_allocError(&type metadata for BIAPayloadBCMessageParseError, v36, 0, 0);
    v30 = 1;
    goto LABEL_27;
  }
  v19 = v64;
  if (!*(_QWORD *)(v64 + 16)
    || (v20 = sub_10004F068(0x656C746974, 0xE500000000000000), (v21 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v66),
        (swift_dynamicCast(&v64, &v66, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
    swift_bridgeObjectRelease(v19);
    v27 = sub_100018F94();
    v28 = swift_allocError(&type metadata for BIAPayloadBCMessageParseError, v27, 0, 0);
    v30 = 2;
LABEL_27:
    *v29 = v30;
    swift_willThrow(v28);

    v35 = 0;
    v34 = 0;
    goto LABEL_28;
  }
  v22 = *((_QWORD *)&v64 + 1);
  *(_QWORD *)(a2 + 48) = v64;
  *(_QWORD *)(a2 + 56) = v22;
  if (!*(_QWORD *)(v19 + 16)
    || (v23 = sub_10004F068(0xD000000000000017, 0x80000001000B4F40), (v24 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(v19 + 56) + 32 * v23, (uint64_t)&v66),
        (swift_dynamicCast(&v64, &v66, (char *)&type metadata for Any + 8, v18, 6) & 1) == 0))
  {
    swift_bridgeObjectRelease(v19);
    v31 = sub_100018F94();
    v32 = swift_allocError(&type metadata for BIAPayloadBCMessageParseError, v31, 0, 0);
    *v33 = 3;
    swift_willThrow(v32);

    goto LABEL_20;
  }
  *((_QWORD *)&v65 + 1) = v18;
  v25 = sub_100019050();
  v26 = sub_100019094();
  static DictionarySerialization.decode(_:from:)(&v66, &type metadata for BIAUserInteractionParadigm, &v64, &type metadata for BIAUserInteractionParadigm, v25, v26);
  if (v3)
  {
    swift_bridgeObjectRelease(v19);

    sub_100010C40(&v64);
LABEL_20:
    v34 = 0;
    v35 = 1;
LABEL_28:
    swift_bridgeObjectRelease(*(_QWORD *)(a2 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(a2 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(a2 + 40));
    if (v35)
      swift_bridgeObjectRelease(*(_QWORD *)(a2 + 56));
    result = swift_bridgeObjectRelease(*(_QWORD *)(a2 + 72));
    if (v34)
    {
      v38 = type metadata accessor for BIAPayload(0);
      return sub_100019014(a2 + *(int *)(v38 + 36));
    }
    return result;
  }
  sub_100010C40(&v64);
  sub_1000190D8((uint64_t)&v66, (uint64_t)v68);
  sub_100051178();
  sub_100019114((uint64_t)v68);
  v39 = type metadata accessor for BIAPayload(0);
  sub_10001931C((uint64_t)v9, a2 + *(int *)(v39 + 36));
  if (*(_QWORD *)(v19 + 16))
  {
    v40 = sub_10004F068(0x636E657265666572, 0xEB00000000644965);
    if ((v41 & 1) != 0)
    {
      sub_100009C74(*(_QWORD *)(v19 + 56) + 32 * v40, (uint64_t)&v66);
      sub_100019360((uint64_t)&v66, (uint64_t)&v64);
      if (*((_QWORD *)&v65 + 1))
      {
        if ((swift_dynamicCast(&v62, &v64, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
        {
          v42 = v62;
          v43 = v63;
          goto LABEL_39;
        }
      }
      else
      {
        sub_100009CB0((uint64_t)&v64);
      }
      swift_bridgeObjectRelease(v19);
      v59 = sub_100018F94();
      v60 = swift_allocError(&type metadata for BIAPayloadBCMessageParseError, v59, 0, 0);
      *v61 = 4;
      swift_willThrow(v60);

      sub_100009CB0((uint64_t)&v66);
      v35 = 1;
      v34 = 1;
      goto LABEL_28;
    }
  }
  v42 = 0;
  v43 = 0;
  v66 = 0u;
  v67 = 0u;
LABEL_39:
  swift_bridgeObjectRelease(*(_QWORD *)(a2 + 8));
  *(_QWORD *)a2 = v42;
  *(_QWORD *)(a2 + 8) = v43;
  if (*(_QWORD *)(v19 + 16) && (v44 = sub_10004F068(0x656C746974627573, 0xE800000000000000), (v45 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v19 + 56) + 32 * v44, (uint64_t)&v64);
    v46 = swift_dynamicCast(&v62, &v64, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v46)
      v47 = v62;
    else
      v47 = 0;
    if (v46)
      v48 = v63;
    else
      v48 = 0;
  }
  else
  {
    v47 = 0;
    v48 = 0;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a2 + 72));
  *(_QWORD *)(a2 + 64) = v47;
  *(_QWORD *)(a2 + 72) = v48;
  if (*(_QWORD *)(v19 + 16) && (v49 = sub_10004F068(1852793705, 0xE400000000000000), (v50 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v19 + 56) + 32 * v49, (uint64_t)&v64);
    v51 = swift_dynamicCast(&v62, &v64, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v51)
      v52 = v62;
    else
      v52 = 0;
    if (v51)
      v53 = v63;
    else
      v53 = 0;
  }
  else
  {
    v52 = 0;
    v53 = 0;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a2 + 24));
  *(_QWORD *)(a2 + 16) = v52;
  *(_QWORD *)(a2 + 24) = v53;
  if (*(_QWORD *)(v19 + 16) && (v54 = sub_10004F068(1869768040, 0xE400000000000000), (v55 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v19 + 56) + 32 * v54, (uint64_t)&v64);
  }
  else
  {
    v64 = 0u;
    v65 = 0u;
  }

  swift_bridgeObjectRelease(v19);
  sub_100009CB0((uint64_t)&v66);
  if (*((_QWORD *)&v65 + 1))
  {
    v56 = swift_dynamicCast(&v62, &v64, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v56)
      v57 = v62;
    else
      v57 = 0;
    if (v56)
      v58 = v63;
    else
      v58 = 0;
  }
  else
  {
    sub_100009CB0((uint64_t)&v64);
    v57 = 0;
    v58 = 0;
  }
  result = swift_bridgeObjectRelease(*(_QWORD *)(a2 + 40));
  *(_QWORD *)(a2 + 32) = v57;
  *(_QWORD *)(a2 + 40) = v58;
  return result;
}

unint64_t sub_100018F94()
{
  unint64_t result;

  result = qword_1000EC8A8;
  if (!qword_1000EC8A8)
  {
    result = swift_getWitnessTable(&unk_1000AF4E8, &type metadata for BIAPayloadBCMessageParseError);
    atomic_store(result, (unint64_t *)&qword_1000EC8A8);
  }
  return result;
}

uint64_t type metadata accessor for BIAPayload(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EC928;
  if (!qword_1000EC928)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BIAPayload);
  return result;
}

uint64_t sub_100019014(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100019050()
{
  unint64_t result;

  result = qword_1000EC8B0;
  if (!qword_1000EC8B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIAUserInteractionParadigm, &type metadata for BIAUserInteractionParadigm);
    atomic_store(result, (unint64_t *)&qword_1000EC8B0);
  }
  return result;
}

unint64_t sub_100019094()
{
  unint64_t result;

  result = qword_1000EC8B8;
  if (!qword_1000EC8B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIAUserInteractionParadigm, &type metadata for BIAUserInteractionParadigm);
    atomic_store(result, (unint64_t *)&qword_1000EC8B8);
  }
  return result;
}

uint64_t sub_1000190D8(uint64_t a1, uint64_t a2)
{
  initializeWithTake for BIAUserInteractionParadigm(a2, a1);
  return a2;
}

uint64_t sub_100019114(uint64_t a1)
{
  sub_100019174(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152));
  return a1;
}

uint64_t sub_100019174(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v20 = a7;
  v21 = a6;
  v22 = a5;
  v23 = a4;
  v24 = (a16 >> 61) & 3;
  if ((_DWORD)v24 == 2)
  {
    swift_bridgeObjectRelease(a2);
    sub_1000192C8(v23, v22, v21, v20, a8, a9, a10);
    swift_bridgeObjectRelease(a12);
    result = a14;
    a2 = a15;
    a4 = a17;
    a3 = a16 & 0x9FFFFFFFFFFFFFFFLL;
    a5 = a18;
    a6 = a19;
    a7 = a20;
    return sub_1000192C8(result, a2, a3, a4, a5, a6, a7);
  }
  v25 = a3;
  if ((_DWORD)v24 != 1)
  {
    if ((_DWORD)v24)
      return result;
    return sub_1000192C8(result, a2, a3, a4, a5, a6, a7);
  }
  swift_bridgeObjectRelease(a2);
  return swift_bridgeObjectRelease(v25);
}

uint64_t sub_1000192C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a2);
  if (a3 < 0)
  {
    swift_bridgeObjectRelease(a5);
    return swift_bridgeObjectRelease(a7);
  }
  return result;
}

uint64_t sub_10001931C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100019360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40((uint64_t *)&unk_1000EEB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for BIAPayloadBCMessageParseError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BIAPayloadBCMessageParseError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100019484 + 4 * byte_1000AF415[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1000194B8 + 4 * byte_1000AF410[v4]))();
}

uint64_t sub_1000194B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000194C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000194C8);
  return result;
}

uint64_t sub_1000194D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000194DCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1000194E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000194E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1000194F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BIAPayloadBCMessageParseError()
{
  return &type metadata for BIAPayloadBCMessageParseError;
}

uint64_t *sub_10001950C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v21 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v21 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v21);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    v10 = *(int *)(a3 + 36);
    v11 = (uint64_t *)((char *)a2 + v10);
    v12 = (uint64_t *)((char *)a1 + v10);
    a1[8] = a2[8];
    a1[9] = v9;
    v13 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v13);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v22 = v11[1];
        *v12 = *v11;
        v12[1] = v22;
        v23 = (void *)v11[2];
        v24 = (void *)v11[3];
        v12[2] = v23;
        v12[3] = v24;
        swift_bridgeObjectRetain(v22);
        v25 = v23;
        v26 = v24;
        v27 = sub_100007D40(&qword_1000EC8C0);
        v28 = *(int *)(v27 + 80);
        v29 = (char *)v12 + v28;
        v30 = (char *)v11 + v28;
        v31 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
        {
          v32 = *((_QWORD *)v30 + 1);
          *(_QWORD *)v29 = *(_QWORD *)v30;
          *((_QWORD *)v29 + 1) = v32;
          v29[16] = v30[16];
          v33 = *((_QWORD *)v30 + 4);
          *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
          *((_QWORD *)v29 + 4) = v33;
          v34 = *((_QWORD *)v30 + 5);
          v35 = *((_QWORD *)v30 + 6);
          *((_QWORD *)v29 + 5) = v34;
          *((_QWORD *)v29 + 6) = v35;
          swift_bridgeObjectRetain(v32);
          swift_bridgeObjectRetain(v33);
          swift_bridgeObjectRetain(v35);
          v36 = 1;
        }
        else
        {
          v42 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v29, v30, v42);
          v36 = 0;
        }
        swift_storeEnumTagMultiPayload(v29, v31, v36);
        v43 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
        v44 = (_QWORD *)((char *)v12 + v43);
        v45 = (_QWORD *)((char *)v11 + v43);
        v46 = v45[1];
        *v44 = *v45;
        v44[1] = v46;
        v47 = (void *)v45[2];
        v48 = (void *)v45[3];
        v44[2] = v47;
        v44[3] = v48;
        v49 = *(int *)(v27 + 80);
        v50 = (char *)v44 + v49;
        v51 = (char *)v45 + v49;
        swift_bridgeObjectRetain(v46);
        v52 = v47;
        v53 = v48;
        if (swift_getEnumCaseMultiPayload(v51, v31) == 1)
        {
          v54 = *((_QWORD *)v51 + 1);
          *(_QWORD *)v50 = *(_QWORD *)v51;
          *((_QWORD *)v50 + 1) = v54;
          v50[16] = v51[16];
          v55 = *((_QWORD *)v51 + 4);
          *((_QWORD *)v50 + 3) = *((_QWORD *)v51 + 3);
          *((_QWORD *)v50 + 4) = v55;
          v56 = *((_QWORD *)v51 + 5);
          v57 = *((_QWORD *)v51 + 6);
          *((_QWORD *)v50 + 5) = v56;
          *((_QWORD *)v50 + 6) = v57;
          swift_bridgeObjectRetain(v54);
          swift_bridgeObjectRetain(v55);
          swift_bridgeObjectRetain(v57);
          v58 = 1;
        }
        else
        {
          v59 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v50, v51, v59);
          v58 = 0;
        }
        swift_storeEnumTagMultiPayload(v50, v31, v58);
        v39 = v12;
        v40 = v13;
        v41 = 2;
        goto LABEL_19;
      case 1:
        v37 = v11[1];
        *v12 = *v11;
        v12[1] = v37;
        v38 = v11[2];
        v12[2] = v38;
        swift_bridgeObjectRetain(v37);
        swift_bridgeObjectRetain(v38);
        v39 = v12;
        v40 = v13;
        v41 = 1;
LABEL_19:
        swift_storeEnumTagMultiPayload(v39, v40, v41);
        return v3;
      case 0:
        v15 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(v11, v15) == 1)
        {
          v16 = v11[1];
          *v12 = *v11;
          v12[1] = v16;
          *((_BYTE *)v12 + 16) = *((_BYTE *)v11 + 16);
          v17 = v11[4];
          v12[3] = v11[3];
          v12[4] = v17;
          v18 = v11[5];
          v19 = v11[6];
          v12[5] = v18;
          v12[6] = v19;
          swift_bridgeObjectRetain(v16);
          swift_bridgeObjectRetain(v17);
          swift_bridgeObjectRetain(v19);
          v20 = 1;
        }
        else
        {
          v60 = type metadata accessor for URL(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v12, v11, v60);
          v20 = 0;
        }
        swift_storeEnumTagMultiPayload(v12, v15, v20);
        v39 = v12;
        v40 = v13;
        v41 = 0;
        goto LABEL_19;
    }
    memcpy(v12, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  return v3;
}

uint64_t sub_100019874(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  v4 = (char *)a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  result = swift_getEnumCaseMultiPayload(v4, v5);
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease(*((_QWORD *)v4 + 1));

      v10 = sub_100007D40(&qword_1000EC8C0);
      v11 = &v4[*(int *)(v10 + 80)];
      v12 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
      {
        swift_bridgeObjectRelease(*((_QWORD *)v11 + 1));
        swift_bridgeObjectRelease(*((_QWORD *)v11 + 4));
        swift_bridgeObjectRelease(*((_QWORD *)v11 + 6));
      }
      else
      {
        v13 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
      }
      v14 = &v4[*(int *)(sub_100007D40(&qword_1000EC8C8) + 48)];
      swift_bridgeObjectRelease(*((_QWORD *)v14 + 1));

      v4 = &v14[*(int *)(v10 + 80)];
      v8 = v4;
      v7 = v12;
      goto LABEL_11;
    case 1:
      swift_bridgeObjectRelease(*((_QWORD *)v4 + 1));
      v9 = *((_QWORD *)v4 + 2);
      return swift_bridgeObjectRelease(v9);
    case 0:
      v7 = type metadata accessor for BIABubbleViewModelUserAction(0);
      v8 = v4;
LABEL_11:
      if (swift_getEnumCaseMultiPayload(v8, v7) == 1)
      {
        swift_bridgeObjectRelease(*((_QWORD *)v4 + 1));
        swift_bridgeObjectRelease(*((_QWORD *)v4 + 4));
        v9 = *((_QWORD *)v4 + 6);
        return swift_bridgeObjectRelease(v9);
      }
      v15 = type metadata accessor for URL(0);
      return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v4, v15);
  }
  return result;
}

_QWORD *sub_100019A34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  v9 = *(int *)(a3 + 36);
  v10 = (_QWORD *)((char *)a2 + v9);
  v11 = (_QWORD *)((char *)a1 + v9);
  a1[8] = a2[8];
  a1[9] = v8;
  v12 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v12);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v20 = v10[1];
      *v11 = *v10;
      v11[1] = v20;
      v21 = (void *)v10[2];
      v22 = (void *)v10[3];
      v11[2] = v21;
      v11[3] = v22;
      swift_bridgeObjectRetain(v20);
      v23 = v21;
      v24 = v22;
      v25 = sub_100007D40(&qword_1000EC8C0);
      v26 = *(int *)(v25 + 80);
      v27 = (char *)v11 + v26;
      v28 = (char *)v10 + v26;
      v29 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
      {
        v30 = *((_QWORD *)v28 + 1);
        *(_QWORD *)v27 = *(_QWORD *)v28;
        *((_QWORD *)v27 + 1) = v30;
        v27[16] = v28[16];
        v31 = *((_QWORD *)v28 + 4);
        *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
        *((_QWORD *)v27 + 4) = v31;
        v32 = *((_QWORD *)v28 + 5);
        v33 = *((_QWORD *)v28 + 6);
        *((_QWORD *)v27 + 5) = v32;
        *((_QWORD *)v27 + 6) = v33;
        swift_bridgeObjectRetain(v30);
        swift_bridgeObjectRetain(v31);
        swift_bridgeObjectRetain(v33);
        v34 = 1;
      }
      else
      {
        v40 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v27, v28, v40);
        v34 = 0;
      }
      swift_storeEnumTagMultiPayload(v27, v29, v34);
      v41 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
      v42 = (_QWORD *)((char *)v11 + v41);
      v43 = (_QWORD *)((char *)v10 + v41);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      v45 = (void *)v43[2];
      v46 = (void *)v43[3];
      v42[2] = v45;
      v42[3] = v46;
      v47 = *(int *)(v25 + 80);
      v48 = (char *)v42 + v47;
      v49 = (char *)v43 + v47;
      swift_bridgeObjectRetain(v44);
      v50 = v45;
      v51 = v46;
      if (swift_getEnumCaseMultiPayload(v49, v29) == 1)
      {
        v52 = *((_QWORD *)v49 + 1);
        *(_QWORD *)v48 = *(_QWORD *)v49;
        *((_QWORD *)v48 + 1) = v52;
        v48[16] = v49[16];
        v53 = *((_QWORD *)v49 + 4);
        *((_QWORD *)v48 + 3) = *((_QWORD *)v49 + 3);
        *((_QWORD *)v48 + 4) = v53;
        v54 = *((_QWORD *)v49 + 5);
        v55 = *((_QWORD *)v49 + 6);
        *((_QWORD *)v48 + 5) = v54;
        *((_QWORD *)v48 + 6) = v55;
        swift_bridgeObjectRetain(v52);
        swift_bridgeObjectRetain(v53);
        swift_bridgeObjectRetain(v55);
        v56 = 1;
      }
      else
      {
        v57 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v48, v49, v57);
        v56 = 0;
      }
      swift_storeEnumTagMultiPayload(v48, v29, v56);
      v37 = v11;
      v38 = v12;
      v39 = 2;
      goto LABEL_17;
    case 1:
      v35 = v10[1];
      *v11 = *v10;
      v11[1] = v35;
      v36 = v10[2];
      v11[2] = v36;
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v36);
      v37 = v11;
      v38 = v12;
      v39 = 1;
LABEL_17:
      swift_storeEnumTagMultiPayload(v37, v38, v39);
      return a1;
    case 0:
      v14 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v10, v14) == 1)
      {
        v15 = v10[1];
        *v11 = *v10;
        v11[1] = v15;
        *((_BYTE *)v11 + 16) = *((_BYTE *)v10 + 16);
        v16 = v10[4];
        v11[3] = v10[3];
        v11[4] = v16;
        v17 = v10[5];
        v18 = v10[6];
        v11[5] = v17;
        v11[6] = v18;
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRetain(v18);
        v19 = 1;
      }
      else
      {
        v58 = type metadata accessor for URL(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v11, v10, v58);
        v19 = 0;
      }
      swift_storeEnumTagMultiPayload(v11, v14, v19);
      v37 = v11;
      v38 = v12;
      v39 = 0;
      goto LABEL_17;
  }
  memcpy(v11, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  return a1;
}

_QWORD *sub_100019D70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[4] = a2[4];
  v10 = a2[5];
  v11 = a1[5];
  a1[5] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[6] = a2[6];
  v12 = a2[7];
  v13 = a1[7];
  a1[7] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[8] = a2[8];
  v14 = a2[9];
  v15 = a1[9];
  a1[9] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  if (a1 != a2)
  {
    v16 = *(int *)(a3 + 36);
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    sub_100019014((uint64_t)a1 + v16);
    v19 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v19);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *v17 = *v18;
        v26 = v18[1];
        v17[1] = v26;
        v27 = (void *)v18[2];
        v17[2] = v27;
        v28 = (void *)v18[3];
        v17[3] = v28;
        swift_bridgeObjectRetain(v26);
        v29 = v27;
        v30 = v28;
        v31 = sub_100007D40(&qword_1000EC8C0);
        v32 = *(int *)(v31 + 80);
        v33 = (char *)v17 + v32;
        v34 = (char *)v18 + v32;
        v35 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
        {
          *(_QWORD *)v33 = *(_QWORD *)v34;
          v36 = *((_QWORD *)v34 + 1);
          *((_QWORD *)v33 + 1) = v36;
          v33[16] = v34[16];
          *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
          v37 = *((_QWORD *)v34 + 4);
          *((_QWORD *)v33 + 4) = v37;
          *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
          v38 = *((_QWORD *)v34 + 6);
          *((_QWORD *)v33 + 6) = v38;
          swift_bridgeObjectRetain(v36);
          swift_bridgeObjectRetain(v37);
          swift_bridgeObjectRetain(v38);
          v39 = 1;
        }
        else
        {
          v46 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v33, v34, v46);
          v39 = 0;
        }
        swift_storeEnumTagMultiPayload(v33, v35, v39);
        v47 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
        v48 = (_QWORD *)((char *)v17 + v47);
        v49 = (_QWORD *)((char *)v18 + v47);
        *v48 = *v49;
        v50 = v49[1];
        v48[1] = v50;
        v51 = (void *)v49[2];
        v48[2] = v51;
        v52 = (void *)v49[3];
        v48[3] = v52;
        v53 = *(int *)(v31 + 80);
        v54 = (char *)v48 + v53;
        v55 = (char *)v49 + v53;
        swift_bridgeObjectRetain(v50);
        v56 = v51;
        v57 = v52;
        if (swift_getEnumCaseMultiPayload(v55, v35) == 1)
        {
          *(_QWORD *)v54 = *(_QWORD *)v55;
          v58 = *((_QWORD *)v55 + 1);
          *((_QWORD *)v54 + 1) = v58;
          v54[16] = v55[16];
          *((_QWORD *)v54 + 3) = *((_QWORD *)v55 + 3);
          v59 = *((_QWORD *)v55 + 4);
          *((_QWORD *)v54 + 4) = v59;
          *((_QWORD *)v54 + 5) = *((_QWORD *)v55 + 5);
          v60 = *((_QWORD *)v55 + 6);
          *((_QWORD *)v54 + 6) = v60;
          swift_bridgeObjectRetain(v58);
          swift_bridgeObjectRetain(v59);
          swift_bridgeObjectRetain(v60);
          v61 = 1;
        }
        else
        {
          v62 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v54, v55, v62);
          v61 = 0;
        }
        swift_storeEnumTagMultiPayload(v54, v35, v61);
        v42 = v17;
        v43 = v19;
        v44 = 2;
        goto LABEL_18;
      case 1:
        *v17 = *v18;
        v40 = v18[1];
        v17[1] = v40;
        v41 = v18[2];
        v17[2] = v41;
        swift_bridgeObjectRetain(v40);
        swift_bridgeObjectRetain(v41);
        v42 = v17;
        v43 = v19;
        v44 = 1;
LABEL_18:
        swift_storeEnumTagMultiPayload(v42, v43, v44);
        return a1;
      case 0:
        v21 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(v18, v21) == 1)
        {
          *v17 = *v18;
          v22 = v18[1];
          v17[1] = v22;
          *((_BYTE *)v17 + 16) = *((_BYTE *)v18 + 16);
          v17[3] = v18[3];
          v23 = v18[4];
          v17[4] = v23;
          v17[5] = v18[5];
          v24 = v18[6];
          v17[6] = v24;
          swift_bridgeObjectRetain(v22);
          swift_bridgeObjectRetain(v23);
          swift_bridgeObjectRetain(v24);
          v25 = 1;
        }
        else
        {
          v45 = type metadata accessor for URL(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v17, v18, v45);
          v25 = 0;
        }
        swift_storeEnumTagMultiPayload(v17, v21, v25);
        v42 = v17;
        v43 = v19;
        v44 = 0;
        goto LABEL_18;
    }
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_10001A184(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 36);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
  if (EnumCaseMultiPayload == 2)
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v13 = sub_100007D40(&qword_1000EC8C0);
    v14 = *(int *)(v13 + 80);
    v15 = (char *)v7 + v14;
    v16 = (char *)v8 + v14;
    v17 = type metadata accessor for BIABubbleViewModelUserAction(0);
    if (swift_getEnumCaseMultiPayload(v16, v17))
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v22 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v15, v16, v22);
      swift_storeEnumTagMultiPayload(v15, v17, 0);
    }
    v23 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
    v24 = (_OWORD *)((char *)v7 + v23);
    v25 = (_OWORD *)((char *)v8 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = *(int *)(v13 + 80);
    v28 = (char *)v24 + v27;
    v29 = (char *)v25 + v27;
    if (swift_getEnumCaseMultiPayload((char *)v25 + v27, v17))
    {
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v30 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      swift_storeEnumTagMultiPayload(v28, v17, 0);
    }
    v19 = v7;
    v20 = v9;
    v21 = 2;
    goto LABEL_15;
  }
  if (!EnumCaseMultiPayload)
  {
    v11 = type metadata accessor for BIABubbleViewModelUserAction(0);
    if (swift_getEnumCaseMultiPayload(v8, v11))
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v18 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v7, v8, v18);
      swift_storeEnumTagMultiPayload(v7, v11, 0);
    }
    v19 = v7;
    v20 = v9;
    v21 = 0;
LABEL_15:
    swift_storeEnumTagMultiPayload(v19, v20, v21);
    return a1;
  }
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  return a1;
}

_QWORD *sub_10001A3AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[9];
  v15 = a1[9];
  a1[8] = a2[8];
  a1[9] = v14;
  swift_bridgeObjectRelease(v15);
  if (a1 != a2)
  {
    v16 = *(int *)(a3 + 36);
    v17 = (_OWORD *)((char *)a1 + v16);
    v18 = (_OWORD *)((char *)a2 + v16);
    sub_100019014((uint64_t)a1 + v16);
    v19 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v19);
    if (EnumCaseMultiPayload == 2)
    {
      v22 = v18[1];
      *v17 = *v18;
      v17[1] = v22;
      v23 = sub_100007D40(&qword_1000EC8C0);
      v24 = *(int *)(v23 + 80);
      v25 = (char *)v17 + v24;
      v26 = (char *)v18 + v24;
      v27 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v26, v27))
      {
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v32 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v25, v26, v32);
        swift_storeEnumTagMultiPayload(v25, v27, 0);
      }
      v33 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
      v34 = (_OWORD *)((char *)v17 + v33);
      v35 = (_OWORD *)((char *)v18 + v33);
      v36 = v35[1];
      *v34 = *v35;
      v34[1] = v36;
      v37 = *(int *)(v23 + 80);
      v38 = (char *)v34 + v37;
      v39 = (char *)v35 + v37;
      if (swift_getEnumCaseMultiPayload((char *)v35 + v37, v27))
      {
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v40 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        swift_storeEnumTagMultiPayload(v38, v27, 0);
      }
      v29 = v17;
      v30 = v19;
      v31 = 2;
      goto LABEL_16;
    }
    if (!EnumCaseMultiPayload)
    {
      v21 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v18, v21))
      {
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v28 = type metadata accessor for URL(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v17, v18, v28);
        swift_storeEnumTagMultiPayload(v17, v21, 0);
      }
      v29 = v17;
      v30 = v19;
      v31 = 0;
LABEL_16:
      swift_storeEnumTagMultiPayload(v29, v30, v31);
      return a1;
    }
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10001A624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001A630);
}

uint64_t sub_10001A630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_10001A6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001A6B8);
}

uint64_t sub_10001A6B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 56) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_10001A72C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_1000AF450;
  v4[1] = &unk_1000AF450;
  v4[2] = &unk_1000AF450;
  v4[3] = &unk_1000AF468;
  v4[4] = &unk_1000AF450;
  result = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_10001A7B4()
{
  unint64_t result;

  result = qword_1000EC970;
  if (!qword_1000EC970)
  {
    result = swift_getWitnessTable(&unk_1000AF4C0, &type metadata for BIAPayloadBCMessageParseError);
    atomic_store(result, (unint64_t *)&qword_1000EC970);
  }
  return result;
}

void *sub_10001A85C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char isUniquelyReferenced_nonNull_native;
  Swift::String v16;
  char v17;
  char v18;
  _OWORD v19[2];
  Swift::String v20;
  void *v21;
  _BYTE v22[24];

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Business15IMBProposedDate_timeslots);
  swift_beginAccess(v2, v22, 0, 0);
  v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (void *)swift_bridgeObjectRetain(*v2);
    if (v4)
      goto LABEL_3;
LABEL_18:
    v7 = _swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease(v3);
    v13 = *(_QWORD *)(v1 + 16);
    v14 = *(void **)(v1 + 24);
    v21 = &type metadata for String;
    v20._countAndFlagsBits = v13;
    v20._object = v14;
    sub_100009CF0(&v20, v19);
    swift_bridgeObjectRetain(v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v19, 0x696669746E656469, 0xEA00000000007265, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);
    v16 = Date.toUTCString()();
    v21 = &type metadata for String;
    v20 = v16;
    sub_100009CF0(&v20, v19);
    v17 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v19, 1702125924, 0xE400000000000000, v17);
    swift_bridgeObjectRelease(0x8000000000000000);
    v21 = (void *)sub_100007D40(&qword_1000ED040);
    v20._countAndFlagsBits = (uint64_t)v7;
    sub_100009CF0(&v20, v19);
    v18 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v19, 0x746F6C73656D6974, 0xE900000000000073, v18);
    swift_bridgeObjectRelease(0x8000000000000000);
    return &_swiftEmptyDictionarySingleton;
  }
  if (v3 < 0)
    v12 = *v2;
  else
    v12 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  result = (void *)_CocoaArrayWrapper.endIndex.getter(v12);
  v4 = (uint64_t)result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = _swiftEmptyArrayStorage;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      }
      else
      {
        v8 = *(_QWORD *)(v3 + 8 * v6 + 32);
        swift_retain(v8);
      }
      v9 = sub_10004C738();
      if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        v7 = sub_100038784(0, v7[2] + 1, 1, v7);
      v11 = v7[2];
      v10 = v7[3];
      if (v11 >= v10 >> 1)
        v7 = sub_100038784((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
      ++v6;
      v7[2] = v11 + 1;
      v7[v11 + 4] = v9;
      swift_release(v8);
    }
    while (v4 != v6);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001AB0C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[3]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Business15IMBProposedDate_date;
  v2 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Business15IMBProposedDate_timeslots));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10001AB74()
{
  return type metadata accessor for IMBProposedDate(0);
}

uint64_t type metadata accessor for IMBProposedDate(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EC9A0;
  if (!qword_1000EC9A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IMBProposedDate);
  return result;
}

uint64_t sub_10001ABB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1000AF548;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = &unk_1000AF560;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

id sub_10001AC48()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  NSString v16;
  void *v17;
  id v18;
  Swift::String v20;

  v1 = OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___previousButtonItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___previousButtonItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___previousButtonItem];
  }
  else
  {
    v4 = (void *)objc_opt_self(UIImage);
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v4, "kitImageNamed:", v5);

    v7 = objc_allocWithZone((Class)UIBarButtonItem);
    v8 = v0;
    v9 = objc_msgSend(v7, "initWithImage:style:target:action:", v6, 0, v8, "previousPage");

    v10 = (void *)objc_opt_self(NSBundle);
    v11 = v9;
    v12 = objc_msgSend(v10, "mainBundle");
    v20._object = (void *)0xE000000000000000;
    v13._countAndFlagsBits = 1262698818;
    v13._object = (void *)0xE400000000000000;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v20)._object;

    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v11, "setAccessibilityLabel:", v16);

    v17 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v11;
    v3 = v11;

    v2 = 0;
  }
  v18 = v2;
  return v3;
}

id sub_10001ADF4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  NSString v16;
  void *v17;
  id v18;
  Swift::String v20;

  v1 = OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___nextButtonItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___nextButtonItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___nextButtonItem];
  }
  else
  {
    v4 = (void *)objc_opt_self(UIImage);
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v4, "kitImageNamed:", v5);

    v7 = objc_allocWithZone((Class)UIBarButtonItem);
    v8 = v0;
    v9 = objc_msgSend(v7, "initWithImage:style:target:action:", v6, 0, v8, "nextPage");

    v10 = (void *)objc_opt_self(NSBundle);
    v11 = v9;
    v12 = objc_msgSend(v10, "mainBundle");
    v20._object = (void *)0xE000000000000000;
    v13._countAndFlagsBits = 0x44524157524F46;
    v13._object = (void *)0xE700000000000000;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v20)._object;

    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v11, "setAccessibilityLabel:", v16);

    v17 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v11;
    v3 = v11;

    v2 = 0;
  }
  v18 = v2;
  return v3;
}

id sub_10001AFA8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  NSString v16;
  void *v17;
  id v18;
  Swift::String v20;

  v1 = OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___refreshButtonItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___refreshButtonItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___refreshButtonItem];
  }
  else
  {
    v4 = (void *)objc_opt_self(UIImage);
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v4, "kitImageNamed:", v5);

    v7 = objc_allocWithZone((Class)UIBarButtonItem);
    v8 = v0;
    v9 = objc_msgSend(v7, "initWithImage:style:target:action:", v6, 0, v8, "refresh");

    v10 = (void *)objc_opt_self(NSBundle);
    v11 = v9;
    v12 = objc_msgSend(v10, "mainBundle");
    v20._object = (void *)0xE000000000000000;
    v13._countAndFlagsBits = 0x44414F4C4552;
    v13._object = (void *)0xE600000000000000;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v20)._object;

    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v11, "setAccessibilityLabel:", v16);

    v17 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v11;
    v3 = v11;

    v2 = 0;
  }
  v18 = v2;
  return v3;
}

id sub_10001B158()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___doneButtonItem;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___doneButtonItem);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___doneButtonItem);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ABSBarButtonItem()), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10001B1C8()
{
  char *v0;
  id v1;
  objc_super v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___previousButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___nextButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___refreshButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___doneButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___secureContentMessageItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar_actionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for IMBWebNavigationToolbar();
  v1 = objc_msgSendSuper2(&v3, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10001B2BC();

  return v1;
}

void sub_10001B2BC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  Class isa;
  Swift::String v18;

  v1 = v0;
  if (sub_10002DA10() == 2)
  {
    v2 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
    objc_msgSend(v2, "addTarget:action:forControlEvents:", v0, "done", 64);
    v3 = sub_10001B158();
    objc_msgSend(v3, "setCustomView:", v2);

    v4 = sub_10001B158();
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18._object = (void *)0xE000000000000000;
    v6._countAndFlagsBits = 1162760004;
    v6._object = (void *)0xE400000000000000;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v18)._object;

    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v4, "setTitle:", v9);

    objc_msgSend(v1, "setClipsToBounds:", 1);
    v10 = sub_100007D40((uint64_t *)&unk_1000ED490);
    v11 = swift_allocObject(v10, 88, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1000AF590;
    *(_QWORD *)(v11 + 32) = sub_10001AC48();
    v12 = (void *)objc_opt_self(UIBarButtonItem);
    *(_QWORD *)(v11 + 40) = objc_msgSend(v12, "fixedSpaceItemOfWidth:", 40.0);
    *(_QWORD *)(v11 + 48) = sub_10001ADF4();
    *(_QWORD *)(v11 + 56) = objc_msgSend(v12, "fixedSpaceItemOfWidth:", 40.0);
    *(_QWORD *)(v11 + 64) = sub_10001AFA8();
    *(_QWORD *)(v11 + 72) = objc_msgSend(v12, "flexibleSpaceItem");
    *(_QWORD *)(v11 + 80) = sub_10001B158();
    specialized Array._endMutation()();
    v13 = v11;

  }
  else
  {
    v14 = sub_100007D40((uint64_t *)&unk_1000ED490);
    v15 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1000AF580;
    *(_QWORD *)(v15 + 32) = sub_10001AC48();
    v16 = (void *)objc_opt_self(UIBarButtonItem);
    *(_QWORD *)(v15 + 40) = objc_msgSend(v16, "fixedSpaceItemOfWidth:", 60.0);
    *(_QWORD *)(v15 + 48) = sub_10001ADF4();
    *(_QWORD *)(v15 + 56) = objc_msgSend(v16, "flexibleSpaceItem");
    *(_QWORD *)(v15 + 64) = sub_10001AFA8();
    specialized Array._endMutation()();
    v13 = v15;
  }
  sub_10001BA64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v1, "setItems:animated:", isa, 0);

}

void sub_10001B5FC(void *a1, uint64_t a2, const char *a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  char *v13;

  v8 = qword_1000EBCB8;
  v13 = a1;
  if (v8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v9 = qword_1000F8A90;
  v10 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)(a3, a4, 2, &_mh_execute_header, v9, v10, _swiftEmptyArrayStorage);
  Strong = swift_unknownObjectWeakLoadStrong(&v13[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar_actionDelegate]);
  if (Strong)
  {
    v12 = Strong;
    a5();

    swift_unknownObjectRelease(v12);
  }
  else
  {

  }
}

uint64_t sub_10001B6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  objc_super v6;

  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v1 = qword_1000F8A90;
  v2 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("IMBWebToolbar: refresh", 22, 2, &_mh_execute_header, v1, v2, _swiftEmptyArrayStorage);
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar_actionDelegate);
  if (result)
  {
    v4 = (void *)result;
    v5 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("IMBWebViewController: reload", 28, 2, &_mh_execute_header, v1, v5, _swiftEmptyArrayStorage);
    v6.receiver = v4;
    v6.super_class = (Class)type metadata accessor for IMBWebViewController();
    objc_msgSendSuper2(&v6, "reload");
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_10001B7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v1 = qword_1000F8A90;
  v2 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("IMBWebToolbar: done", 19, 2, &_mh_execute_header, v1, v2, _swiftEmptyArrayStorage);
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar_actionDelegate);
  if (result)
  {
    v4 = (void *)result;
    v5 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("IMBWebViewController: done", 26, 2, &_mh_execute_header, v1, v5, _swiftEmptyArrayStorage);
    v6 = objc_msgSend(v4, "delegate");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "dismiss");
      swift_unknownObjectRelease(v4);
      v4 = v7;
    }
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

id sub_10001B99C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBWebNavigationToolbar();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBWebNavigationToolbar()
{
  return objc_opt_self(_TtC8Business23IMBWebNavigationToolbar);
}

unint64_t sub_10001BA64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ECAE0;
  if (!qword_1000ECAE0)
  {
    v1 = objc_opt_self(UIBarButtonItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000ECAE0);
  }
  return result;
}

void sub_10001BAA0()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___previousButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___nextButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___refreshButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___doneButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar____lazy_storage___secureContentMessageItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar_actionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000B3DA0, "Business/IMBWebNavigationBar.swift", 34, 2, 54, 0);
  __break(1u);
}

uint64_t destroy for BIAReply(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  return swift_bridgeObjectRelease(a1[6]);
}

uint64_t initializeWithCopy for BIAReply(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for BIAReply(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

__n128 initializeWithTake for BIAReply(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BIAReply(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for BIAReply(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BIAReply(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BIAReply()
{
  return &type metadata for BIAReply;
}

uint64_t sub_10001BD94()
{
  _BYTE *v0;

  if (*v0)
    return 28526;
  else
    return 7562617;
}

uint64_t sub_10001BDBC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10001C85C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10001BDE0()
{
  return 0;
}

void sub_10001BDEC(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10001BDF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001DDB8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001BE20(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001DDB8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001BE48(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  char v27;

  v25 = a2;
  v3 = sub_100007D40(&qword_1000ECBD8);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007D40(&qword_1000ECBE0);
  v7 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22, v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007D40(&qword_1000ECBE8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  sub_100008FA4(a1, v16);
  v18 = sub_10001DDB8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for BIAReplyDeterminateResponseType.CodingKeys, &type metadata for BIAReplyDeterminateResponseType.CodingKeys, v18, v16, v17);
  if ((v25 & 1) != 0)
  {
    v27 = 1;
    v20 = sub_10001DDFC();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIAReplyDeterminateResponseType.NoCodingKeys, &v27, v11, &type metadata for BIAReplyDeterminateResponseType.NoCodingKeys, v20);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  }
  else
  {
    v26 = 0;
    v19 = sub_10001DE40();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIAReplyDeterminateResponseType.YesCodingKeys, &v26, v11, &type metadata for BIAReplyDeterminateResponseType.YesCodingKeys, v19);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_10001C018(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  char v18;
  _BYTE v19[40];
  __int128 v20[2];

  v3 = v1;
  v5 = sub_100007D40(&qword_1000ECB00);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100008FA4(a1, v10);
  v12 = sub_10001CF38();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for BIAReply.CodingKeys, &type metadata for BIAReply.CodingKeys, v12, v10, v11);
  v13 = *(_QWORD *)v3;
  v14 = *((_QWORD *)v3 + 1);
  v19[0] = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v13, v14, v19, v5);
  if (!v2)
  {
    sub_10001CFC0(v3 + 1, (uint64_t)v20);
    sub_10001CFC0(v20, (uint64_t)v19);
    v18 = 1;
    v15 = sub_10001CFD8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v19, &v18, v5, &type metadata for BIAReplyDisplayContent, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10001C154(_QWORD *a1)
{
  __int128 *v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;

  sub_10001CFC0(v1, (uint64_t)v33);
  v3 = v33[0];
  v29 = v35;
  v30 = v34;
  v27 = v37;
  v28 = v36;
  v4 = sub_100007D40(&qword_1000ECB58);
  v31 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007D40(&qword_1000ECB60);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  v15 = a1;
  v17 = v16;
  sub_100008FA4(v15, v13);
  v18 = sub_10001D854();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for BIAReplyDisplayContent.CodingKeys, &type metadata for BIAReplyDisplayContent.CodingKeys, v18, v13, v14);
  v19 = sub_10001D898();
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIAReplyDisplayContent.DeterminateResponseCodingKeys, v20, v17, &type metadata for BIAReplyDisplayContent.DeterminateResponseCodingKeys, v19);
  v39 = v3;
  v38 = 0;
  v21 = sub_10001D920();
  v22 = v32;
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v39, &v38, v4, &type metadata for BIAReplyDeterminateResponseType, v21);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v4);
  }
  else
  {
    v23 = v28;
    v24 = v31;
    v39 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v30, v29, &v39, v4);
    v39 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v23, v27, &v39, v4);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v17);
}

uint64_t sub_10001C35C()
{
  return 0;
}

uint64_t sub_10001C368@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

void sub_10001C394(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10001C3A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001DDFC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001C3C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001DDFC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001C3F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001DE40();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001C418(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001DE40();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001C440@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10001C924(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_10001C46C(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_10001BE48(a1, *v1);
}

uint64_t sub_10001C484()
{
  _BYTE *v0;

  if (*v0)
    return 0x4379616C70736964;
  else
    return 25705;
}

uint64_t sub_10001C4C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10001CC50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10001C4E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001CF38();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001C50C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001CF38();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10001C534@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_10001CD4C(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_10001C580(_QWORD *a1)
{
  return sub_10001C018(a1);
}

uint64_t sub_10001C5C0()
{
  return 1;
}

Swift::Int sub_10001C5C8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_10001C608()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_10001C62C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

unint64_t sub_10001C668()
{
  return 0xD000000000000013;
}

uint64_t sub_10001C684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10001D31C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10001C6AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001D854();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001C6D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001D854();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001C6FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C746974;
  if (*v0 != 1)
    v1 = 0x656C746974627573;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_10001C74C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10001D3A0(a1, a2);
  *a3 = result;
  return result;
}

void sub_10001C770(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10001C77C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001D898();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001C7A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001D898();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001C7CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[2];

  result = sub_10001D4DC(a1, (uint64_t)v5);
  if (!v2)
    return sub_10001CFC0(v5, a2);
  return result;
}

uint64_t sub_10001C810(_QWORD *a1)
{
  __int128 *v1;
  _BYTE v4[40];

  sub_10001CFC0(v1, (uint64_t)v4);
  return sub_10001C154(a1);
}

uint64_t sub_10001C85C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 7562617 && a2 == 0xE300000000000000)
  {
    v5 = 0xE300000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7562617, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 28526 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease(0xE200000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(28526, 0xE200000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10001C924(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  char v39;

  v35 = sub_100007D40(&qword_1000ECBA8);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35, v2);
  v36 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007D40(&qword_1000ECBB0);
  v4 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34, v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007D40(&qword_1000ECBB8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  sub_100008FA4(a1, v13);
  v15 = sub_10001DDB8();
  v16 = v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for BIAReplyDeterminateResponseType.CodingKeys, &type metadata for BIAReplyDeterminateResponseType.CodingKeys, v15, v13, v14);
  if (v16)
    goto LABEL_7;
  v17 = v7;
  v18 = v36;
  v32 = a1;
  v37 = v9;
  v19 = KeyedDecodingContainer.allKeys.getter(v8);
  v20 = v19;
  v21 = v8;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v24 = type metadata accessor for DecodingError(0);
    swift_allocError(v24, &protocol witness table for DecodingError, 0, 0);
    v25 = v12;
    v27 = v26;
    sub_100007D40(&qword_1000ECB40);
    *v27 = &type metadata for BIAReplyDeterminateResponseType;
    v28 = KeyedDecodingContainer.codingPath.getter(v8);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v28, 0xD00000000000002BLL, 0x80000001000B52C0, 0);
    v29 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v24);
    swift_willThrow(v29);
    swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v8);
    a1 = v32;
LABEL_7:
    sub_100010C40(a1);
    return v8;
  }
  v8 = *(unsigned __int8 *)(v19 + 32);
  if ((v8 & 1) != 0)
  {
    v39 = 1;
    v22 = sub_10001DDFC();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIAReplyDeterminateResponseType.NoCodingKeys, &v39, v21, &type metadata for BIAReplyDeterminateResponseType.NoCodingKeys, v22);
    v23 = v37;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v35);
  }
  else
  {
    v38 = 0;
    v30 = sub_10001DE40();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIAReplyDeterminateResponseType.YesCodingKeys, &v38, v21, &type metadata for BIAReplyDeterminateResponseType.YesCodingKeys, v30);
    v23 = v37;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v34);
  }
  swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v21);
  sub_100010C40(v32);
  return v8;
}

uint64_t sub_10001CC50(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x4379616C70736964 && a2 == 0xEE00746E65746E6FLL)
  {
    swift_bridgeObjectRelease(0xEE00746E65746E6FLL);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x4379616C70736964, 0xEE00746E65746E6FLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10001CD4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD v23[4];
  uint64_t v24;
  char v25;

  v5 = sub_100007D40(&qword_1000ECAE8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v23[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100008FA4(a1, v10);
  v12 = sub_10001CF38();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for BIAReply.CodingKeys, &type metadata for BIAReply.CodingKeys, v12, v10, v11);
  if (v2)
    return sub_100010C40(a1);
  LOBYTE(v23[0]) = 0;
  v13 = KeyedDecodingContainer.decode(_:forKey:)(v23, v5);
  v15 = v14;
  v25 = 1;
  v16 = sub_10001CF7C();
  swift_bridgeObjectRetain(v15);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v23, &type metadata for BIAReplyDisplayContent, &v25, v5, &type metadata for BIAReplyDisplayContent, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v17 = v23[0];
  v19 = v23[1];
  v18 = v23[2];
  v20 = v24;
  v22 = v23[3];
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v18);
  sub_100010C40(a1);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v18);
  result = swift_bridgeObjectRelease(v15);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 48) = v20;
  return result;
}

unint64_t sub_10001CF38()
{
  unint64_t result;

  result = qword_1000ECAF0;
  if (!qword_1000ECAF0)
  {
    result = swift_getWitnessTable(&unk_1000AF790, &type metadata for BIAReply.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECAF0);
  }
  return result;
}

unint64_t sub_10001CF7C()
{
  unint64_t result;

  result = qword_1000ECAF8;
  if (!qword_1000ECAF8)
  {
    result = swift_getWitnessTable(&unk_1000AF768, &type metadata for BIAReplyDisplayContent);
    atomic_store(result, (unint64_t *)&qword_1000ECAF8);
  }
  return result;
}

uint64_t sub_10001CFC0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_10001CFD8()
{
  unint64_t result;

  result = qword_1000ECB08;
  if (!qword_1000ECB08)
  {
    result = swift_getWitnessTable(&unk_1000AF740, &type metadata for BIAReplyDisplayContent);
    atomic_store(result, (unint64_t *)&qword_1000ECB08);
  }
  return result;
}

ValueMetadata *type metadata accessor for BIAReply.CodingKeys()
{
  return &type metadata for BIAReply.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for QuickReplyModel.Item(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t destroy for BIAReplyDisplayContent(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for BIAReplyDisplayContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for BIAReplyDisplayContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

__n128 initializeWithTake for BIAReplyDisplayContent(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BIAReplyDisplayContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for BIAReplyDisplayContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BIAReplyDisplayContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BIAReplyDisplayContent()
{
  return &type metadata for BIAReplyDisplayContent;
}

unint64_t sub_10001D248()
{
  unint64_t result;

  result = qword_1000ECB10;
  if (!qword_1000ECB10)
  {
    result = swift_getWitnessTable(&unk_1000AF718, &type metadata for BIAReply.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECB10);
  }
  return result;
}

unint64_t sub_10001D290()
{
  unint64_t result;

  result = qword_1000ECB18;
  if (!qword_1000ECB18)
  {
    result = swift_getWitnessTable(&unk_1000AF688, &type metadata for BIAReply.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECB18);
  }
  return result;
}

unint64_t sub_10001D2D8()
{
  unint64_t result;

  result = qword_1000ECB20;
  if (!qword_1000ECB20)
  {
    result = swift_getWitnessTable(&unk_1000AF6B0, &type metadata for BIAReply.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECB20);
  }
  return result;
}

uint64_t sub_10001D31C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001000B52F0)
  {
    swift_bridgeObjectRelease(0x80000001000B52F0);
    v3 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x80000001000B52F0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v3 = v4 ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_10001D3A0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_10001D4DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;

  v44 = a2;
  v3 = sub_100007D40(&qword_1000ECB28);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007D40(&qword_1000ECB30);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  v45 = a1;
  sub_100008FA4(a1, v13);
  v15 = sub_10001D854();
  v16 = v46;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for BIAReplyDisplayContent.CodingKeys, &type metadata for BIAReplyDisplayContent.CodingKeys, v15, v13, v14);
  if (!v16)
  {
    v43 = v4;
    v17 = v44;
    v46 = v9;
    v18 = KeyedDecodingContainer.allKeys.getter(v8);
    v19 = v8;
    if (*(_QWORD *)(v18 + 16) == 1)
    {
      v20 = sub_10001D898();
      v21 = v7;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIAReplyDisplayContent.DeterminateResponseCodingKeys, v22, v19, &type metadata for BIAReplyDisplayContent.DeterminateResponseCodingKeys, v20);
      v30 = v18;
      v49 = 0;
      v31 = sub_10001D8DC();
      v32 = v3;
      KeyedDecodingContainer.decode<A>(_:forKey:)(&v50, &type metadata for BIAReplyDeterminateResponseType, &v49, v3, &type metadata for BIAReplyDeterminateResponseType, v31);
      v33 = v21;
      LOBYTE(v21) = v50;
      v48 = 1;
      v41 = KeyedDecodingContainer.decode(_:forKey:)(&v48, v3);
      v42 = v34;
      v47 = 2;
      v35 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v47, v3);
      v36 = v33;
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v36, v32);
      swift_bridgeObjectRelease(v30);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v19);
      result = sub_100010C40(v45);
      *(_BYTE *)v17 = (_BYTE)v21;
      v40 = v42;
      *(_QWORD *)(v17 + 8) = v41;
      *(_QWORD *)(v17 + 16) = v40;
      *(_QWORD *)(v17 + 24) = v35;
      *(_QWORD *)(v17 + 32) = v38;
      return result;
    }
    v23 = v18;
    v24 = v8;
    v25 = type metadata accessor for DecodingError(0);
    swift_allocError(v25, &protocol witness table for DecodingError, 0, 0);
    v27 = v26;
    sub_100007D40(&qword_1000ECB40);
    *v27 = &type metadata for BIAReplyDisplayContent;
    v28 = KeyedDecodingContainer.codingPath.getter(v24);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v28, 0xD00000000000002BLL, 0x80000001000B52C0, 0);
    v29 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v25);
    swift_willThrow(v29);
    swift_bridgeObjectRelease(v23);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v24);
  }
  return sub_100010C40(v45);
}

unint64_t sub_10001D854()
{
  unint64_t result;

  result = qword_1000ECB38;
  if (!qword_1000ECB38)
  {
    result = swift_getWitnessTable(&unk_1000AFA98, &type metadata for BIAReplyDisplayContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECB38);
  }
  return result;
}

unint64_t sub_10001D898()
{
  unint64_t result;

  result = qword_1000ECB48;
  if (!qword_1000ECB48)
  {
    result = swift_getWitnessTable(&unk_1000AFA48, &type metadata for BIAReplyDisplayContent.DeterminateResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECB48);
  }
  return result;
}

unint64_t sub_10001D8DC()
{
  unint64_t result;

  result = qword_1000ECB50;
  if (!qword_1000ECB50)
  {
    result = swift_getWitnessTable(&unk_1000AFA20, &type metadata for BIAReplyDeterminateResponseType);
    atomic_store(result, (unint64_t *)&qword_1000ECB50);
  }
  return result;
}

unint64_t sub_10001D920()
{
  unint64_t result;

  result = qword_1000ECB68;
  if (!qword_1000ECB68)
  {
    result = swift_getWitnessTable(&unk_1000AF9F8, &type metadata for BIAReplyDeterminateResponseType);
    atomic_store(result, (unint64_t *)&qword_1000ECB68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IMBListItemStyle(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for BIAReplyDisplayContent.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10001D9F8 + 4 * asc_1000AF5E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10001DA18 + 4 * byte_1000AF5E5[v4]))();
}

_BYTE *sub_10001D9F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10001DA18(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10001DA20(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10001DA28(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10001DA30(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10001DA38(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BIAReplyDisplayContent.CodingKeys()
{
  return &type metadata for BIAReplyDisplayContent.CodingKeys;
}

uint64_t getEnumTagSinglePayload for BIAReplyDisplayContent.DeterminateResponseCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BIAReplyDisplayContent.DeterminateResponseCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10001DB30 + 4 * byte_1000AF5EF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10001DB64 + 4 * byte_1000AF5EA[v4]))();
}

uint64_t sub_10001DB64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001DB6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10001DB74);
  return result;
}

uint64_t sub_10001DB80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10001DB88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10001DB8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001DB94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BIAReplyDisplayContent.DeterminateResponseCodingKeys()
{
  return &type metadata for BIAReplyDisplayContent.DeterminateResponseCodingKeys;
}

ValueMetadata *type metadata accessor for BIAReplyDeterminateResponseType()
{
  return &type metadata for BIAReplyDeterminateResponseType;
}

unint64_t sub_10001DBC4()
{
  unint64_t result;

  result = qword_1000ECB70;
  if (!qword_1000ECB70)
  {
    result = swift_getWitnessTable(&unk_1000AF860, &type metadata for BIAReplyDeterminateResponseType);
    atomic_store(result, (unint64_t *)&qword_1000ECB70);
  }
  return result;
}

unint64_t sub_10001DC0C()
{
  unint64_t result;

  result = qword_1000ECB78;
  if (!qword_1000ECB78)
  {
    result = swift_getWitnessTable(&unk_1000AF918, &type metadata for BIAReplyDisplayContent.DeterminateResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECB78);
  }
  return result;
}

unint64_t sub_10001DC54()
{
  unint64_t result;

  result = qword_1000ECB80;
  if (!qword_1000ECB80)
  {
    result = swift_getWitnessTable(&unk_1000AF9D0, &type metadata for BIAReplyDisplayContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECB80);
  }
  return result;
}

unint64_t sub_10001DC9C()
{
  unint64_t result;

  result = qword_1000ECB88;
  if (!qword_1000ECB88)
  {
    result = swift_getWitnessTable(&unk_1000AF888, &type metadata for BIAReplyDisplayContent.DeterminateResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECB88);
  }
  return result;
}

unint64_t sub_10001DCE4()
{
  unint64_t result;

  result = qword_1000ECB90;
  if (!qword_1000ECB90)
  {
    result = swift_getWitnessTable(&unk_1000AF8B0, &type metadata for BIAReplyDisplayContent.DeterminateResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECB90);
  }
  return result;
}

unint64_t sub_10001DD2C()
{
  unint64_t result;

  result = qword_1000ECB98;
  if (!qword_1000ECB98)
  {
    result = swift_getWitnessTable(&unk_1000AF940, &type metadata for BIAReplyDisplayContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECB98);
  }
  return result;
}

unint64_t sub_10001DD74()
{
  unint64_t result;

  result = qword_1000ECBA0;
  if (!qword_1000ECBA0)
  {
    result = swift_getWitnessTable(&unk_1000AF968, &type metadata for BIAReplyDisplayContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECBA0);
  }
  return result;
}

unint64_t sub_10001DDB8()
{
  unint64_t result;

  result = qword_1000ECBC0;
  if (!qword_1000ECBC0)
  {
    result = swift_getWitnessTable(&unk_1000AFCFC, &type metadata for BIAReplyDeterminateResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECBC0);
  }
  return result;
}

unint64_t sub_10001DDFC()
{
  unint64_t result;

  result = qword_1000ECBC8;
  if (!qword_1000ECBC8)
  {
    result = swift_getWitnessTable(&unk_1000AFCAC, &type metadata for BIAReplyDeterminateResponseType.NoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECBC8);
  }
  return result;
}

unint64_t sub_10001DE40()
{
  unint64_t result;

  result = qword_1000ECBD0;
  if (!qword_1000ECBD0)
  {
    result = swift_getWitnessTable(&unk_1000AFC5C, &type metadata for BIAReplyDeterminateResponseType.YesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECBD0);
  }
  return result;
}

uint64_t _s8Business31BIAReplyDeterminateResponseTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10001DED0 + 4 * byte_1000AF5F9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10001DF04 + 4 * byte_1000AF5F4[v4]))();
}

uint64_t sub_10001DF04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001DF0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10001DF14);
  return result;
}

uint64_t sub_10001DF20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10001DF28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10001DF2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001DF34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BIAReplyDeterminateResponseType.CodingKeys()
{
  return &type metadata for BIAReplyDeterminateResponseType.CodingKeys;
}

ValueMetadata *type metadata accessor for BIAReplyDeterminateResponseType.YesCodingKeys()
{
  return &type metadata for BIAReplyDeterminateResponseType.YesCodingKeys;
}

ValueMetadata *type metadata accessor for BIAReplyDeterminateResponseType.NoCodingKeys()
{
  return &type metadata for BIAReplyDeterminateResponseType.NoCodingKeys;
}

unint64_t sub_10001DF74()
{
  unint64_t result;

  result = qword_1000ECBF0;
  if (!qword_1000ECBF0)
  {
    result = swift_getWitnessTable(&unk_1000AFC34, &type metadata for BIAReplyDeterminateResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECBF0);
  }
  return result;
}

unint64_t sub_10001DFBC()
{
  unint64_t result;

  result = qword_1000ECBF8;
  if (!qword_1000ECBF8)
  {
    result = swift_getWitnessTable(&unk_1000AFB54, &type metadata for BIAReplyDeterminateResponseType.YesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECBF8);
  }
  return result;
}

unint64_t sub_10001E004()
{
  unint64_t result;

  result = qword_1000ECC00;
  if (!qword_1000ECC00)
  {
    result = swift_getWitnessTable(&unk_1000AFB7C, &type metadata for BIAReplyDeterminateResponseType.YesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECC00);
  }
  return result;
}

unint64_t sub_10001E04C()
{
  unint64_t result;

  result = qword_1000ECC08;
  if (!qword_1000ECC08)
  {
    result = swift_getWitnessTable(&unk_1000AFB04, &type metadata for BIAReplyDeterminateResponseType.NoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECC08);
  }
  return result;
}

unint64_t sub_10001E094()
{
  unint64_t result;

  result = qword_1000ECC10;
  if (!qword_1000ECC10)
  {
    result = swift_getWitnessTable(&unk_1000AFB2C, &type metadata for BIAReplyDeterminateResponseType.NoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECC10);
  }
  return result;
}

unint64_t sub_10001E0DC()
{
  unint64_t result;

  result = qword_1000ECC18;
  if (!qword_1000ECC18)
  {
    result = swift_getWitnessTable(&unk_1000AFBA4, &type metadata for BIAReplyDeterminateResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECC18);
  }
  return result;
}

unint64_t sub_10001E124()
{
  unint64_t result;

  result = qword_1000ECC20;
  if (!qword_1000ECC20)
  {
    result = swift_getWitnessTable(&unk_1000AFBCC, &type metadata for BIAReplyDeterminateResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ECC20);
  }
  return result;
}

char *sub_10001E180(void *a1, void *a2, char a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  id v18;
  char *v19;
  void *v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v7 = type metadata accessor for URLHelper(0);
  v9 = __chkstk_darwin(v7, v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  v14 = (char *)&v29 - v13;
  v3[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_multipleSelectionEnabled] = 0;
  v3[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_cellShouldHaveSelectionIcon] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest] = 0;
  v15 = OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems;
  v16 = v3;
  *(_QWORD *)&v3[v15] = sub_10004DD84((uint64_t)_swiftEmptyArrayStorage);
  v16[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_userCanSelect] = a3;

  v17 = a1;
  v18 = a2;
  sub_10004EA08((uint64_t)v14);
  sub_100020D60((uint64_t)v14, (uint64_t)v11);
  v19 = (char *)sub_1000A5FB4(v17, v18, (uint64_t)v11, v16);

  sub_100020DA4((uint64_t)v14);
  v20 = *(void **)&v19[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message];
  v21 = v19;
  v22 = v20;
  v23 = objc_msgSend(v22, "rootObject");

  if (v23)
  {
    v24 = type metadata accessor for IMBListRequest();
    v25 = swift_dynamicCastClass(v23, v24);
    if (v25)
    {
      v26 = v25;
      v27 = *(_QWORD *)&v21[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest];
      *(_QWORD *)&v21[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest] = v25;
      swift_unknownObjectRetain(v23);
      swift_release(v27);
      LOBYTE(v26) = *(_BYTE *)(v26 + 16);
      swift_unknownObjectRelease(v23);
      v21[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_multipleSelectionEnabled] = v26;
    }
    else
    {
      swift_unknownObjectRelease(v23);
    }
  }
  return v21;
}

id sub_10001E404()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  char v8[24];
  objc_super v9;

  v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for IMBListPickerTableViewController();
  objc_msgSendSuper2(&v9, "viewDidLoad");
  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message], "isFromMe") & 1) == 0&& v0[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_multipleSelectionEnabled] == 1)
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView], "setAllowsMultipleSelection:", 1);
  }
  v0[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_cellShouldHaveSelectionIcon] = 1;
  v2 = &v0[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems], v8, 0, 0);
  if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    v3 = sub_100082DDC();
    v5 = v4;
    ObjectType = swift_getObjectType(v3);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 + 48))(0, ObjectType, v5);

  }
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView], "setSeparatorStyle:", 0);
}

void sub_10001E550()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  uint64_t v16;
  NSString v17;
  Swift::String v18;

  sub_100082930();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView);
  v2 = type metadata accessor for ListPickerTableViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v4);

  v5 = type metadata accessor for IMBDefaultSectionHeader();
  v6 = swift_getObjCClassFromMetadata(v5);
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "registerClass:forHeaderFooterViewReuseIdentifier:", v6, v7);

  objc_msgSend(v1, "setEstimatedRowHeight:", 140.0);
  objc_msgSend(v1, "setSectionHeaderHeight:", UITableViewAutomaticDimension);
  objc_msgSend(v1, "setEstimatedSectionHeaderHeight:", 80.0);
  objc_msgSend(v1, "setAllowsSelection:", *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_userCanSelect));
  v8 = *(void **)(v0 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_nothingAvailableLabel);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest);
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 24);
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v16 = *(_QWORD *)(v9 + 24);
      else
        v16 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v11 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v8, "setHidden:", v11 > 0);
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v18._object = (void *)0xE000000000000000;
  v13._object = (void *)0x80000001000B54E0;
  v13._countAndFlagsBits = 0xD000000000000012;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v18._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v18)._object;

  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v8, "setText:", v17);

}

char *sub_10001E7A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  unint64_t v25;

  v1 = OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_userCanSelect;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_userCanSelect) == 1)
  {
    v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message), "receivedMessage");
    if (!v3 || (v4 = v3, v5 = objc_msgSend(v3, "title"), v4, !v5))
    {
      v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v25 = 0xE000000000000000;
      v6 = 0x80000001000B54C0;
      v7 = 0xD000000000000019;
LABEL_9:
      v12._countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      v13 = 0;
      v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, (NSBundle)v5, v12, *(Swift::String *)(&v25 - 1));
      object = v14._object;
      countAndFlagsBits = v14._countAndFlagsBits;
      goto LABEL_10;
    }
  }
  else
  {
    v8 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message), "replyMessage");
    if (!v8 || (v9 = v8, v5 = objc_msgSend(v8, "title"), v9, !v5))
    {
      v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v7 = 0xD000000000000022;
      v25 = 0xE000000000000000;
      v6 = 0x80000001000B5490;
      goto LABEL_9;
    }
  }
  countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
LABEL_10:
  v15 = countAndFlagsBits;
  v16 = (uint64_t)object;

  if (*(_BYTE *)(v0 + v1) != 1)
    goto LABEL_14;
  v17 = objc_msgSend(v2, "receivedMessage");
  v18 = v17;
  if (!v17)
  {
LABEL_15:
    v21 = 0;
    goto LABEL_16;
  }
  v19 = objc_msgSend(v17, "subtitle");

  if (!v19)
  {
LABEL_14:
    v18 = 0;
    goto LABEL_15;
  }
  v18 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;

LABEL_16:
  v22 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView), "separatorColor");
  v23 = objc_allocWithZone((Class)type metadata accessor for IMBTableHeaderView());
  return sub_10009102C(v15, v16, (uint64_t)v18, v21, v22);
}

double sub_10001EA08()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  Swift::String v7;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v7._object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 1145980243;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v7);

  v4 = type metadata accessor for FooterToolbarModel();
  v5 = swift_allocObject(v4, 97, 7);
  *(_QWORD *)(v5 + 80) = 0;
  *(_QWORD *)(v5 + 88) = 0;
  *(_BYTE *)(v5 + 96) = 1;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0xE000000000000000;
  *(_QWORD *)(v5 + 32) = 0;
  *(Swift::String *)(v5 + 40) = v3;
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v5 + 56) = xmmword_1000AFD50;
  *(_QWORD *)(v5 + 72) = 0xE000000000000000;
  return result;
}

void sub_10001EACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  Class isa;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  _BOOL8 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BOOL8 v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  Class v92;
  id v93;
  uint64_t v94;
  char *v95;
  id v96;
  uint64_t v97;
  void *v98;
  void *v99;
  NSString v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  id v122;
  uint64_t v123;
  char *v124;
  void (*v125)(char *, unint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE v129[32];
  _BYTE v130[32];

  v3 = v1;
  v5 = sub_100007D40(&qword_1000ECC88);
  __chkstk_darwin(v5, v6);
  v8 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexPath(0, v9, v10);
  v12 = *(_QWORD *)(v11 - 8);
  v14 = __chkstk_darwin(v11, v13);
  v16 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v14, v17);
  v127 = (uint64_t)&v113 - v19;
  __chkstk_darwin(v18, v20);
  v22 = (char *)&v113 - v21;
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest);
  if (!v23)
    return;
  v124 = v8;
  v24 = *(_QWORD *)(v23 + 24);
  v25 = swift_retain(v23);
  v26 = IndexPath.section.getter(v25);
  if ((v24 & 0xC000000000000001) == 0)
  {
    if ((v26 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v26 < *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v27 = *(_QWORD *)(v24 + 8 * v26 + 32);
      swift_retain(v27);
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_31;
  }
  v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v24);
LABEL_6:
  v24 = *(_QWORD *)(v27 + 40);
  swift_bridgeObjectRetain(v24);
  v28 = swift_release(v27);
  v26 = IndexPath.row.getter(v28);
  if ((v24 & 0xC000000000000001) == 0)
  {
    if ((v26 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v26 < *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v2 = *(_QWORD *)(v24 + 8 * v26 + 32);
      swift_retain(v2);
      goto LABEL_10;
    }
    __break(1u);
LABEL_34:
    v50 = specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v24);
    v51 = *(_BYTE *)(v50 + 48);
    swift_unknownObjectRelease(v50);
    if ((v51 & 1) != 0)
      goto LABEL_18;
    goto LABEL_35;
  }
LABEL_31:
  v2 = specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v24);
LABEL_10:
  swift_bridgeObjectRelease(v24);
  v29 = *(void **)(v3 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v121 = v29;
  v31 = objc_msgSend(v29, "cellForRowAtIndexPath:", isa);

  if (v31)
  {
    v33 = type metadata accessor for ListPickerTableViewCell();
    v32 = (void *)swift_dynamicCastClass(v31, v33);
    v122 = v32;
    if (v32)
      goto LABEL_14;

  }
  v122 = 0;
LABEL_14:
  v24 = *(_QWORD *)(v23 + 24);
  v26 = IndexPath.section.getter(v32);
  if ((v24 & 0xC000000000000001) != 0)
    goto LABEL_34;
  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_72;
  }
  if (v26 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_72:
    __break(1u);
    return;
  }
  if ((*(_BYTE *)(*(_QWORD *)(v24 + 8 * v26 + 32) + 48) & 1) != 0)
  {
LABEL_18:
    if (v122)
    {
      v34 = v122;
      objc_msgSend(v34, "setSelected:", objc_msgSend(v34, "isSelected") ^ 1);
      if ((*((_BYTE *)v34 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showingIcon) & 1) != 0)
        sub_100016FAC();
      else
        sub_1000170D0();

    }
    v35 = (_QWORD *)(v3 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems);
    swift_beginAccess(v3 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems, v130, 0, 0);
    v36 = *v35;
    v37 = a1;
    if (*(_QWORD *)(*v35 + 16)
      && (swift_bridgeObjectRetain(*v35),
          sub_10004F190(a1, v38, v39),
          v41 = v40,
          swift_bridgeObjectRelease(v36),
          (v41 & 1) != 0))
    {
      swift_beginAccess(v35, v129, 33, 0);
      v42 = sub_10003A148(v37);
      swift_endAccess(v129);
      swift_release(v42);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v16, v37, v11);
      swift_beginAccess(v35, v129, 33, 0);
      swift_retain(v2);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v35);
      v128 = *v35;
      *v35 = 0x8000000000000000;
      sub_10003A8F4(v2, (uint64_t)v16, isUniquelyReferenced_nonNull_native);
      v44 = *v35;
      *v35 = v128;
      swift_bridgeObjectRelease(v44);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
      swift_endAccess(v129);
    }
    v45 = *(_QWORD *)(*v35 + 16) != 0;
    v46 = sub_100082DDC();
    v48 = v47;
    ObjectType = swift_getObjectType(v46);
    (*(void (**)(_BOOL8, uint64_t, uint64_t))(v48 + 48))(v45, ObjectType, v48);
    swift_release(v2);

    swift_release(v23);
    return;
  }
LABEL_35:
  v118 = v23;
  v52 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems);
  v53 = swift_beginAccess(v3 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems, v130, 0, 0);
  v123 = a1;
  v54 = *v52;
  __chkstk_darwin(v53, v55);
  *(&v113 - 2) = v123;
  swift_bridgeObjectRetain(v54);
  v56 = sub_10001F51C((uint64_t (*)(char *))sub_100020E64, (uint64_t)(&v113 - 4), v54);
  v57 = v123;
  __chkstk_darwin(v56, v58);
  *(&v113 - 2) = v57;
  v119 = v59;
  if (sub_100063368((uint64_t (*)(char *))sub_100020EAC, (_BOOL8)(&v113 - 4), v59))
  {
    swift_beginAccess(v52, v129, 33, 0);
    v60 = sub_10003A148(v57);
    swift_endAccess(v129);
    swift_release(v60);
    v61 = *(_QWORD *)(*v52 + 16);
    v62 = sub_100082DDC();
    v64 = v63;
    v65 = swift_getObjectType(v62);
    v66 = v127;
    (*(void (**)(BOOL, uint64_t, uint64_t))(v64 + 48))(v61 != 0, v65, v64);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v22, v57, v11);
    swift_beginAccess(v52, v129, 33, 0);
    swift_retain(v2);
    v67 = swift_isUniquelyReferenced_nonNull_native(*v52);
    v128 = *v52;
    *v52 = 0x8000000000000000;
    sub_10003A8F4(v2, (uint64_t)v22, v67);
    v68 = *v52;
    *v52 = v128;
    swift_bridgeObjectRelease(v68);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v11);
    swift_endAccess(v129);
    v69 = *(_QWORD *)(*v52 + 16);
    v62 = sub_100082DDC();
    v71 = v70;
    v72 = swift_getObjectType(v62);
    (*(void (**)(BOOL, uint64_t, uint64_t))(v71 + 48))(v69 != 0, v72, v71);
    v66 = v127;
  }

  v73 = v124;
  if (v122)
  {
    v74 = v122;
    objc_msgSend(v74, "setSelected:", objc_msgSend(v74, "isSelected") ^ 1);
    if ((*((_BYTE *)v74 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showingIcon) & 1) != 0)
      sub_100016FAC();
    else
      sub_1000170D0();

  }
  v117 = v2;
  v75 = *(_QWORD *)(v119 + 16);
  if (v75)
  {
    v120 = v3;
    v76 = v119 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v77 = *(_QWORD *)(v12 + 72);
    v125 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
    v126 = v77;
    v125(v73, v76, v11);
    while (1)
    {
      v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v87(v73, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v73, 1, v11) == 1)
        break;
      v88 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v66, v73, v11);
      v91 = sub_100020EC8(v88, v89, v90);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(v66, v57, v11, v91) & 1) == 0)
      {
        v92 = IndexPath._bridgeToObjectiveC()().super.isa;
        v93 = objc_msgSend(v121, "cellForRowAtIndexPath:", v92);

        if (v93)
        {
          v94 = type metadata accessor for ListPickerTableViewCell();
          v95 = (char *)swift_dynamicCastClass(v93, v94);
          if (v95)
          {
            v96 = v93;
            objc_msgSend(v95, "setSelected:", objc_msgSend(v95, "isSelected") ^ 1);
            v97 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showingIcon;
            if ((v95[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showingIcon] & 1) != 0)
            {
              v98 = *(void **)&v95[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_iconImageView];
              if (v95[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_multipleSelectionEnabled] == 1)
              {
                v115 = OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showingIcon;
                v116 = v98;
                v99 = (void *)objc_opt_self(UIImage);
                v100 = String._bridgeToObjectiveC()();
                v114 = v99;
                v101 = objc_msgSend(v99, "kitImageNamed:", v100);

                if (v101)
                {
                  objc_msgSend(v101, "size");
                  v102 = objc_msgSend(v114, "_tintedImageForSize:withTint:effectsImage:maskImage:style:", *(_QWORD *)&v95[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_notSelectedIconTintColor], 0, v101, 0);

                }
                else
                {
                  v102 = 0;
                }
                v97 = v115;
                objc_msgSend(v116, "setImage:", v102);

              }
              else
              {
                objc_msgSend(v98, "setImage:", 0);
              }
              v95[v97] = 0;
            }
            else
            {
              sub_1000170D0();
            }
          }

        }
        else
        {
          v95 = 0;
        }
        swift_beginAccess(v52, v129, 33, 0);
        v103 = *v52;
        swift_bridgeObjectRetain(*v52);
        v106 = sub_10004F190(v127, v104, v105);
        v108 = v107;
        swift_bridgeObjectRelease(v103);
        if ((v108 & 1) != 0)
        {
          v109 = swift_isUniquelyReferenced_nonNull_native(*v52);
          v112 = *v52;
          v128 = *v52;
          *v52 = 0x8000000000000000;
          if (!(_DWORD)v109)
          {
            sub_10003AEA8(v109, v110, v111);
            v112 = v128;
          }
          (*(void (**)(unint64_t, uint64_t))(v12 + 8))(*(_QWORD *)(v112 + 48) + v106 * v126, v11);
          v78 = v128;
          v79 = *(_QWORD *)(*(_QWORD *)(v128 + 56) + 8 * v106);
          sub_10003A3F4(v106, v128, v80);
          v81 = *v52;
          *v52 = v78;
          swift_release(v79);
          swift_bridgeObjectRelease(v81);
        }
        swift_endAccess(v129);
        v82 = *(_QWORD *)(*v52 + 16) != 0;
        v83 = sub_100082DDC();
        v85 = v84;
        v86 = swift_getObjectType(v83);
        (*(void (**)(_BOOL8, uint64_t, uint64_t))(v85 + 48))(v82, v86, v85);

        v57 = v123;
        v73 = v124;
        v66 = v127;
      }
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v66, v11);
      v76 += v126;
      if (!--v75)
        goto LABEL_68;
      v125(v73, v76, v11);
    }
  }
  else
  {
    v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
LABEL_68:
    v87(v73, 1, 1, v11);
  }
  swift_release(v117);
  swift_bridgeObjectRelease(v119);
  swift_release(v118);

}

uint64_t sub_10001F51C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *);
  char *v35;
  char *v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t (*v48)(char *);
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  char *v52;
  _QWORD *v53;

  v4 = v3;
  v48 = a1;
  v49 = a2;
  v6 = sub_100007D40(&qword_1000ECC88);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0, v10, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v15 = __chkstk_darwin(v12, v14);
  v47 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v15, v17);
  v52 = (char *)&v43 - v19;
  v20 = 0;
  v53 = _swiftEmptyArrayStorage;
  v21 = *(_QWORD *)(a3 + 64);
  v43 = a3;
  v44 = a3 + 64;
  v22 = 1 << *(_BYTE *)(a3 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v45 = (unint64_t)(v22 + 63) >> 6;
  while (1)
  {
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v26 = (v24 - 1) & v24;
      v27 = v25 | (v20 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v20++, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v45)
      goto LABEL_34;
    v29 = *(_QWORD *)(v44 + 8 * v20);
    if (!v29)
      break;
LABEL_20:
    v26 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v20 << 6);
LABEL_21:
    v31 = *(_QWORD *)(v13 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v9, *(_QWORD *)(a3 + 48) + v31 * v27, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
      goto LABEL_35;
    v50 = v26;
    v51 = v20;
    v32 = v12;
    v33 = v13;
    v34 = *(void (**)(char *, char *))(v13 + 32);
    v35 = v52;
    v36 = v9;
    v37 = v32;
    v34(v52, v9);
    v38 = v48(v35);
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v52, v37);
      swift_release(a3);
      return swift_release(v53);
    }
    if ((v38 & 1) != 0)
    {
      ((void (*)(char *, char *, uint64_t))v34)(v47, v52, v37);
      v39 = v53;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v53);
      v46 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10009CAA0(0, v39[2] + 1, 1);
        v39 = v53;
      }
      v42 = v39[2];
      v41 = v39[3];
      if (v42 >= v41 >> 1)
      {
        sub_10009CAA0(v41 > 1, v42 + 1, 1);
        v39 = v53;
      }
      v39[2] = v42 + 1;
      v13 = v33;
      result = ((uint64_t (*)(char *, char *, uint64_t))v34)((char *)v39+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ v42 * v31, v47, v37);
      v12 = v37;
      v53 = v39;
      v4 = v46;
      a3 = v43;
    }
    else
    {
      v13 = v33;
      v12 = v37;
      result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v52, v37);
    }
    v9 = v36;
    v24 = v50;
    v20 = v51;
  }
  v30 = v20 + 1;
  if (v20 + 1 >= v45)
    goto LABEL_34;
  v29 = *(_QWORD *)(v44 + 8 * v30);
  if (v29)
    goto LABEL_19;
  v30 = v20 + 2;
  if (v20 + 2 >= v45)
    goto LABEL_34;
  v29 = *(_QWORD *)(v44 + 8 * v30);
  if (v29)
    goto LABEL_19;
  v30 = v20 + 3;
  if (v20 + 3 >= v45)
    goto LABEL_34;
  v29 = *(_QWORD *)(v44 + 8 * v30);
  if (v29)
    goto LABEL_19;
  v30 = v20 + 4;
  if (v20 + 4 >= v45)
  {
LABEL_34:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
LABEL_35:
    swift_release(a3);
    sub_100020F10((uint64_t)v9);
    return (uint64_t)v53;
  }
  v29 = *(_QWORD *)(v44 + 8 * v30);
  if (v29)
  {
LABEL_19:
    v20 = v30;
    goto LABEL_20;
  }
  while (1)
  {
    v20 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v20 >= v45)
      goto LABEL_34;
    v29 = *(_QWORD *)(v44 + 8 * v20);
    ++v30;
    if (v29)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

id sub_10001F8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id result;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  Class isa;
  id v42;
  Class v43;
  id v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  int64_t v51;
  uint64_t *v52;
  _QWORD *v53;
  int64_t v54;
  uint64_t v55;
  int64_t v56;
  char v57[24];

  v4 = v3;
  v5 = type metadata accessor for IndexPath(0, a2, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007D40(&qword_1000ECC78);
  v12 = __chkstk_darwin(v10, v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  v17 = (char *)&v50 - v16;
  if (qword_1000EBCC0 != -1)
LABEL_34:
    swift_once(&qword_1000EBCC0, sub_1000827F0);
  v18 = qword_1000F8A98;
  v19 = static os_log_type_t.debug.getter();
  os_log(_:dso:log:type:_:)("Left button tapped", 18, 2, &_mh_execute_header, v18, v19, _swiftEmptyArrayStorage);
  v20 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems);
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems, v57, 1, 0);
  v21 = *v20;
  v23 = (_QWORD *)(*v20 + 64);
  v22 = *v23;
  v52 = v20;
  v53 = v23;
  v24 = 1 << *(_BYTE *)(v21 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v22;
  v54 = (unint64_t)(v24 + 63) >> 6;
  v55 = v21;
  v51 = v54 - 1;
  result = (id)swift_bridgeObjectRetain(v21);
  v56 = 0;
  while (1)
  {
    if (v26)
    {
      v28 = __clz(__rbit64(v26));
      v26 &= v26 - 1;
      v29 = v28 | (v56 << 6);
LABEL_8:
      v30 = v55;
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v14, *(_QWORD *)(v55 + 48) + *(_QWORD *)(v6 + 72) * v29, v5);
      v31 = *(_QWORD *)(v30 + 56);
      v32 = sub_100007D40(&qword_1000ECC80);
      v33 = *(_QWORD *)(v31 + 8 * v29);
      *(_QWORD *)&v14[*(int *)(v32 + 48)] = v33;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v14, 0, 1, v32);
      swift_retain(v33);
      goto LABEL_27;
    }
    v34 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v34 < v54)
    {
      v35 = v53[v34];
      if (v35)
        goto LABEL_12;
      v36 = v56 + 2;
      ++v56;
      if (v34 + 1 < v54)
      {
        v35 = v53[v36];
        if (v35)
          goto LABEL_15;
        v56 = v34 + 1;
        if (v34 + 2 < v54)
        {
          v35 = v53[v34 + 2];
          if (v35)
          {
            v34 += 2;
            goto LABEL_12;
          }
          v36 = v34 + 3;
          v56 = v34 + 2;
          if (v34 + 3 < v54)
            break;
        }
      }
    }
LABEL_26:
    v37 = sub_100007D40(&qword_1000ECC80);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v14, 1, 1, v37);
    v26 = 0;
LABEL_27:
    sub_100020E1C((uint64_t)v14, (uint64_t)v17);
    v38 = sub_100007D40(&qword_1000ECC80);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v17, 1, v38) == 1)
    {
      swift_release(v55);
      v45 = *v52;
      *v52 = (uint64_t)&_swiftEmptyDictionarySingleton;
      swift_bridgeObjectRelease(v45);
      v46 = sub_100082DDC();
      v48 = v47;
      ObjectType = swift_getObjectType(v46);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v48 + 48))(0, ObjectType, v48);

      return objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView), "reloadData");
    }
    swift_release(*(_QWORD *)&v17[*(int *)(v38 + 48)]);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v17, v5);
    sub_10001EACC((uint64_t)v9);
    v39 = v4;
    v40 = *(void **)(v4 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v42 = objc_msgSend(v40, "cellForRowAtIndexPath:", isa);

    if (v42)
    {
      objc_msgSend(v42, "setAccessoryType:", 0);

    }
    v43 = IndexPath._bridgeToObjectiveC()().super.isa;
    v44 = objc_msgSend(v40, "cellForRowAtIndexPath:", v43);

    if (v44)
    {
      objc_msgSend(v44, "setSelected:", 0);

    }
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v4 = v39;
  }
  v35 = v53[v36];
  if (v35)
  {
LABEL_15:
    v34 = v36;
LABEL_12:
    v26 = (v35 - 1) & v35;
    v29 = __clz(__rbit64(v35)) + (v34 << 6);
    v56 = v34;
    goto LABEL_8;
  }
  while (1)
  {
    v34 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v34 >= v54)
    {
      v56 = v51;
      goto LABEL_26;
    }
    v35 = v53[v34];
    ++v36;
    if (v35)
      goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_10001FDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  _BYTE v26[24];

  v1 = v0;
  if (qword_1000EBCC0 != -1)
    swift_once(&qword_1000EBCC0, sub_1000827F0);
  v2 = qword_1000F8A98;
  v3 = static os_log_type_t.debug.getter();
  os_log(_:dso:log:type:_:)("Right button tapped", 19, 2, &_mh_execute_header, v2, v3, _swiftEmptyArrayStorage);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest);
  if (v4)
  {
    v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems);
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems, v26, 0, 0);
    v6 = *v5;
    swift_retain_n(v4, 2);
    v7 = swift_bridgeObjectRetain(v6);
    v8 = sub_1000A2A64(v7);
    swift_bridgeObjectRelease(v6);
    v9 = type metadata accessor for IMBListResponse();
    v10 = (_QWORD *)swift_allocObject(v9, 40, 7);
    v10[4] = 0;
    v10[2] = v4;
    v25 = v8;
    swift_retain(v4);
    swift_retain(v8);
    sub_1000A28DC(&v25, v11, v12);
    swift_release(v8);
    swift_release(v4);
    v13 = *(void **)(v1 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_conversation);
    v10[3] = v25;
    sub_1000613F4(v13, *(id *)(v1 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message));
    v14 = v1 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate);
    swift_unknownObjectRelease(Strong);
    if (Strong)
    {
      v16 = swift_unknownObjectWeakLoadStrong(v14);
      if (v16)
      {
        v17 = v16;
        v18 = *(_QWORD *)(v14 + 8);
        ObjectType = swift_getObjectType(v16);
        v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 16);
        v21 = type metadata accessor for IMBListPickerTableViewController();
        v20(v1, v21, ObjectType, v18);
        swift_release(v10);
        swift_unknownObjectRelease(v17);
      }
      else
      {
        swift_release(v10);
      }
      swift_release(v4);
    }
    else
    {
      __break(1u);
      swift_release(v25);
      __break(1u);
    }
  }
  else
  {
    v22 = sub_100020DE0();
    v24 = (id)static OS_os_log.default.getter(v22);
    v23 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("Failed to send reply because there is no list request", 53, 2, &_mh_execute_header, v24, v23, _swiftEmptyArrayStorage);

  }
}

unint64_t sub_10002010C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  char *v54;
  id v55;
  char v56[24];

  v4 = v3;
  v7 = type metadata accessor for IndexPath(0, a2, a3);
  v8 = *(_QWORD *)(v7 - 8);
  v10 = __chkstk_darwin(v7, v9);
  v12 = &v56[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10, v13);
  v15 = &v56[-v14 - 8];
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v16);

  if (v17)
  {
    v18 = type metadata accessor for ListPickerTableViewCell();
    v19 = swift_dynamicCastClass(v17, v18);
    if (v19)
    {
      v20 = (char *)v19;
      v55 = a1;
      *(_BYTE *)(v19 + OBJC_IVAR____TtC8Business23ListPickerTableViewCell_multipleSelectionEnabled) = *(_BYTE *)(v4 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_multipleSelectionEnabled);
      v21 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView), "separatorColor");
      v22 = v17;
      v23 = sub_100017244();

      objc_msgSend(v23, "setBackgroundColor:", v21);
      v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest);
      if (!v24)
        goto LABEL_13;
      v25 = *(_QWORD *)(v24 + 24);
      v26 = swift_bridgeObjectRetain(v25);
      result = IndexPath.section.getter(v26);
      if ((v25 & 0xC000000000000001) == 0)
      {
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (result < *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v28 = *(_QWORD *)(v25 + 8 * result + 32);
          swift_retain(v28);
          goto LABEL_8;
        }
        __break(1u);
        goto LABEL_39;
      }
      v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v25);
LABEL_8:
      swift_bridgeObjectRelease(v25);
      v25 = *(_QWORD *)(v28 + 40);
      swift_bridgeObjectRetain(v25);
      v29 = swift_release(v28);
      result = IndexPath.row.getter(v29);
      if ((v25 & 0xC000000000000001) == 0)
      {
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (result < *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v30 = *(_QWORD *)(v25 + 8 * result + 32);
          swift_retain(v30);
LABEL_12:
          swift_bridgeObjectRelease(v25);
          v31 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listItem];
          *(_QWORD *)&v20[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_listItem] = v30;
          swift_retain_n(v30, 2);
          swift_release(v31);
          sub_100016C54();
          swift_release_n(v30, 2);
LABEL_13:
          v32 = OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_userCanSelect;
          v33 = *(_BYTE *)(v4 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_userCanSelect);
          v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
          v35 = v34(v15, a2, v7);
          if ((v33 & 1) != 0)
          {
            v36 = *(void (**)(char *, uint64_t))(v8 + 8);
            v36(v15, v7);
          }
          else
          {
            v39 = IndexPath.section.getter(v35);
            v36 = *(void (**)(char *, uint64_t))(v8 + 8);
            v36(v15, v7);
            if (v39 == 1)
            {
              v40 = objc_msgSend(v20, "contentView");
              objc_msgSend(v40, "setAlpha:", 0.3);
LABEL_22:

              if (*(_BYTE *)(v4
                            + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_cellShouldHaveSelectionIcon) == 1)
              {
                v41 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems);
                swift_beginAccess(v4 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems, v56, 0, 0);
                v42 = *v41;
                if (*(_QWORD *)(v42 + 16)
                  && (swift_bridgeObjectRetain(v42),
                      sub_10004F190(a2, v43, v44),
                      v46 = v45,
                      swift_bridgeObjectRelease(v42),
                      (v46 & 1) != 0))
                {
                  sub_1000170D0();
                }
                else
                {
                  sub_100016FAC();
                }
              }
              objc_msgSend(v20, "setSelectionStyle:", 0);
              if ((*(_BYTE *)(v4 + v32) & 1) == 0)
                objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_iconImageView], "setHidden:", 1);
              v47 = sub_10002DA10();
              v48 = v34(v12, a2, v7);
              if (v47 != 2)
              {
                v36(v12, v7);
                goto LABEL_34;
              }
              v49 = IndexPath.row.getter(v48);
              v50 = IndexPath.section.getter(v49);
              v51 = (char *)objc_msgSend(v55, "numberOfRowsInSection:", v50);
              result = ((uint64_t (*)(char *, uint64_t))v36)(v12, v7);
              if (!__OFSUB__(v51, 1))
              {
                if ((char *)v49 == v51 - 1)
                {
                  v52 = &v20[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showsSeparator];
                  v20[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showsSeparator] = 0;
                  v53 = sub_100017244();
                  objc_msgSend(v53, "setHidden:", (*v52 & 1) == 0);
LABEL_35:

                  return (unint64_t)v20;
                }
LABEL_34:
                v54 = &v20[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showsSeparator];
                v20[OBJC_IVAR____TtC8Business23ListPickerTableViewCell_showsSeparator] = 1;
                v53 = sub_100017244();
                objc_msgSend(v53, "setHidden:", (*v54 & 1) == 0);
                goto LABEL_35;
              }
              goto LABEL_42;
            }
          }
          v40 = objc_msgSend(v20, "contentView");
          objc_msgSend(v40, "setAlpha:", 1.0);
          goto LABEL_22;
        }
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
LABEL_39:
      v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v25);
      goto LABEL_12;
    }

  }
  if (qword_1000EBCC0 != -1)
    swift_once(&qword_1000EBCC0, sub_1000827F0);
  v37 = qword_1000F8A98;
  v38 = static os_log_type_t.info.getter();
  os_log(_:dso:log:type:_:)("cellForRowAtIndexPath unable to dequeue cell", 44, 2, &_mh_execute_header, v37, v38, _swiftEmptyArrayStorage);
  return (unint64_t)objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
}

uint64_t sub_100020738(void *a1, unint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *object;
  NSString v20;
  id v21;
  id v22;
  id v23;
  id v24;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest);
  if (!v5)
    return 0;
  v8 = *(_QWORD *)(v5 + 24);
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
    {
      v9 = *(_QWORD *)(v8 + 8 * a2 + 32);
      swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest));
      swift_retain(v9);
      goto LABEL_6;
    }
    __break(1u);
LABEL_23:
    v24 = v3;
    v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v4);
    goto LABEL_15;
  }
  swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest));
  v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v8);
LABEL_6:
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  swift_release(v9);
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v12
    || (v13 = String._bridgeToObjectiveC()(),
        v8 = (unint64_t)objc_msgSend(a1, "dequeueReusableHeaderFooterViewWithIdentifier:", v13),
        v13,
        !v8))
  {
    swift_release(v5);
    return 0;
  }
  v14 = type metadata accessor for IMBDefaultSectionHeader();
  result = swift_dynamicCastClass(v8, v14);
  a1 = (void *)result;
  if (!result)
  {

    swift_release(v5);
    return (uint64_t)a1;
  }
  v3 = *(void **)(result + OBJC_IVAR____TtC8Business23IMBDefaultSectionHeader_headerLabel);
  v4 = *(_QWORD *)(v5 + 24);
  if ((v4 & 0xC000000000000001) != 0)
    goto LABEL_23;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v16 = *(_QWORD *)(v4 + 8 * a2 + 32);
    v17 = v3;
    swift_retain(v16);
LABEL_15:
    v18 = *(_QWORD *)(v16 + 24);
    swift_bridgeObjectRetain(v18);
    swift_release(v16);
    object = String.uppercased()()._object;
    swift_bridgeObjectRelease(v18);
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v3, "setText:", v20);

    v21 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView), "separatorColor");
    v22 = (id)v8;
    v23 = sub_10008DA74();

    objc_msgSend(v23, "setBackgroundColor:", v21);
    swift_release(v5);

    return (uint64_t)a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100020CAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_selectedItems));
}

id sub_100020CD8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBListPickerTableViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBListPickerTableViewController()
{
  return objc_opt_self(_TtC8Business32IMBListPickerTableViewController);
}

uint64_t sub_100020D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLHelper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100020DA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for URLHelper(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100020DE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ECE70;
  if (!qword_1000ECE70)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000ECE70);
  }
  return result;
}

uint64_t sub_100020E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000ECC78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_100020E64()
{
  uint64_t v0;

  v0 = IndexPath.section.getter();
  return v0 == IndexPath.section.getter();
}

uint64_t sub_100020EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10006330C(a1, *(_QWORD *)(v3 + 16), a3) & 1;
}

unint64_t sub_100020EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result;
  uint64_t v4;

  result = qword_1000ECC90;
  if (!qword_1000ECC90)
  {
    v4 = type metadata accessor for IndexPath(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v4);
    atomic_store(result, (unint64_t *)&qword_1000ECC90);
  }
  return result;
}

uint64_t sub_100020F10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007D40(&qword_1000ECC88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100020F50(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business32IMBListPickerTableViewController_listRequest);
  if (!v2)
    return 0;
  v3 = a1;
  v4 = *(_QWORD *)(v2 + 24);
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 24));
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v4);
    swift_bridgeObjectRelease(v4);
    v3 = *(_QWORD *)(v7 + 40);
    swift_bridgeObjectRetain(v3);
    swift_unknownObjectRelease(v7);
    if ((v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0)
    {
      v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease(v3);
      return v5;
    }
    goto LABEL_16;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v4 + 8 * a1 + 32) + 40);
    if ((v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0)
      return *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_15;
  }
  __break(1u);
LABEL_15:
  swift_bridgeObjectRetain(v3);
LABEL_16:
  if (v3 < 0)
    v8 = v3;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v5 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease_n(v3, 2);
  return v5;
}

id sub_10002105C(uint64_t a1)
{
  return objc_msgSend((id)objc_opt_self(BCFeatureFlag), "isFeatureEnabledForFeature:", a1);
}

unint64_t sub_100021094(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t result;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  void *v76;
  char v77;
  id v78;
  uint64_t v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  void *v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  _OWORD v91[2];
  __int128 v92;
  void *v93;
  void *v94;

  v2 = v1;
  v4 = objc_msgSend(v1, "countryCode");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v93 = &type metadata for String;
  *(_QWORD *)&v92 = v5;
  *((_QWORD *)&v92 + 1) = v7;
  sub_100009CF0(&v92, v91);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v91, 0x437972746E756F63, 0xEB0000000065646FLL, isUniquelyReferenced_nonNull_native);
  v94 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(0x8000000000000000);
  v9 = objc_msgSend(v2, "currencyCode");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v93 = &type metadata for String;
  *(_QWORD *)&v92 = v10;
  *((_QWORD *)&v92 + 1) = v12;
  sub_100009CF0(&v92, v91);
  v13 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v91, 0x79636E6572727563, 0xEC00000065646F43, v13);
  swift_bridgeObjectRelease(0x8000000000000000);
  v14 = objc_msgSend(v2, "supportedCountries");
  if (v14)
  {
    v15 = v14;
    v16 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for String, &protocol witness table for String);

    v17 = sub_1000A295C(v16);
    swift_bridgeObjectRelease(v16);
    v93 = (void *)sub_100007D40(qword_1000EEBB0);
    *(_QWORD *)&v92 = v17;
    sub_100009CF0(&v92, v91);
    v18 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v91, 0xD000000000000012, 0x80000001000B4210, v18);
    v94 = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v19 = objc_msgSend(v2, "merchantIdentifier");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v93 = &type metadata for String;
  *(_QWORD *)&v92 = v20;
  *((_QWORD *)&v92 + 1) = v22;
  sub_100009CF0(&v92, v91);
  v23 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v91, 0xD000000000000012, 0x80000001000B5540, v23);
  swift_bridgeObjectRelease(0x8000000000000000);
  v24 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_supportedNetworks);
  if (v24)
  {
    v93 = (void *)sub_100007D40(qword_1000EEBB0);
    *(_QWORD *)&v92 = v24;
    sub_100009CF0(&v92, v91);
    swift_bridgeObjectRetain(v24);
    v25 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v91, 0xD000000000000011, 0x80000001000B3FC0, v25);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0xD000000000000011, 0x80000001000B3FC0, &v92);
    sub_100009CB0((uint64_t)&v92);
  }
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantCapabilities);
  if (v26)
  {
    v93 = (void *)sub_100007D40(qword_1000EEBB0);
    *(_QWORD *)&v92 = v26;
    sub_100009CF0(&v92, v91);
    swift_bridgeObjectRetain(v26);
    v27 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v91, 0xD000000000000014, 0x80000001000B3FA0, v27);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0xD000000000000014, 0x80000001000B3FA0, &v92);
    sub_100009CB0((uint64_t)&v92);
  }
  v93 = (void *)sub_100007D40(&qword_1000EC478);
  *(_QWORD *)&v92 = &_swiftEmptyDictionarySingleton;
  sub_100009CF0(&v92, v91);
  swift_bridgeObjectRetain(&_swiftEmptyDictionarySingleton);
  v28 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v91, 0x796150656C707061, 0xE800000000000000, v28);
  v94 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(0x8000000000000000);
  v29 = objc_msgSend(v2, "requiredBillingContactFields");
  type metadata accessor for PKContactField(0);
  v31 = v30;
  v32 = sub_100021C60();
  v33 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v29, v31, v32);

  sub_100082268(v33);
  v35 = v34;
  swift_bridgeObjectRelease(v33);
  v36 = sub_100007D40(qword_1000EEBB0);
  v93 = (void *)v36;
  *(_QWORD *)&v92 = v35;
  sub_100009CF0(&v92, v91);
  v37 = v94;
  v38 = swift_isUniquelyReferenced_nonNull_native(v94);
  sub_10003A658(v91, 0xD00000000000001CLL, 0x80000001000B4560, v38);
  v94 = v37;
  swift_bridgeObjectRelease(0x8000000000000000);
  v39 = objc_msgSend(v2, "requiredShippingContactFields");
  v40 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v39, v31, v32);

  sub_100082268(v40);
  v42 = v41;
  swift_bridgeObjectRelease(v40);
  v93 = (void *)v36;
  *(_QWORD *)&v92 = v42;
  sub_100009CF0(&v92, v91);
  v43 = v94;
  v44 = swift_isUniquelyReferenced_nonNull_native(v94);
  sub_10003A658(v91, 0xD00000000000001CLL, 0x80000001000B4560, v44);
  v94 = v43;
  swift_bridgeObjectRelease(0x8000000000000000);
  v45 = (uint64_t)objc_msgSend(v2, "paymentSummaryItems");
  v46 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
  v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v46);

  v89 = v46;
  if ((unint64_t)v47 >> 62)
  {
    if (v47 < 0)
      v45 = v47;
    else
      v45 = v47 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v47);
    v48 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease(v47);
  }
  else
  {
    v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v90 = v2;
  if (v48)
  {
    *(_QWORD *)&v92 = _swiftEmptyArrayStorage;
    result = sub_10009CA68(0, v48 & ~(v48 >> 63), 0);
    if (v48 < 0)
    {
      __break(1u);
      goto LABEL_70;
    }
    v87 = a1;
    v50 = 0;
    v51 = (_QWORD *)v92;
    do
    {
      if ((v47 & 0xC000000000000001) != 0)
        v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v47);
      else
        v52 = *(id *)(v47 + 8 * v50 + 32);
      v53 = v52;
      v54 = objc_msgSend(v52, "dictionaryRepresentation", v87, v89);
      if (v54)
      {
        v55 = v54;
        v56 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v54, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      }
      else
      {

        v56 = 0;
      }
      *(_QWORD *)&v92 = v51;
      v58 = v51[2];
      v57 = v51[3];
      if (v58 >= v57 >> 1)
      {
        sub_10009CA68(v57 > 1, v58 + 1, 1);
        v51 = (_QWORD *)v92;
      }
      ++v50;
      v51[2] = v58 + 1;
      v51[v58 + 4] = v56;
    }
    while (v48 != v50);
    swift_bridgeObjectRelease(v47);
    a1 = v87;
  }
  else
  {
    swift_bridgeObjectRelease(v47);
    v51 = _swiftEmptyArrayStorage;
  }
  v59 = sub_100007D40(&qword_1000EC468);
  v93 = (void *)v59;
  *(_QWORD *)&v92 = v51;
  sub_100009CF0(&v92, v91);
  v45 = (uint64_t)v94;
  v60 = swift_isUniquelyReferenced_nonNull_native(v94);
  sub_10003A658(v91, 0x6D657449656E696CLL, 0xE900000000000073, v60);
  v94 = (void *)v45;
  swift_bridgeObjectRelease(0x8000000000000000);
  v61 = *(void **)(a1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
  if (v61)
  {
    v62 = objc_msgSend(v61, "shippingMethods");
    v63 = v90;
    if (v62)
    {
      v45 = (uint64_t)v62;
      v64 = sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
      v65 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v64);

      if ((unint64_t)v65 >> 62)
      {
LABEL_44:
        if (v65 < 0)
          v45 = v65;
        else
          v45 = v65 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v65);
        v66 = _CocoaArrayWrapper.endIndex.getter(v45);
        swift_bridgeObjectRelease(v65);
        if (!v66)
          goto LABEL_48;
        goto LABEL_31;
      }
    }
    else
    {
      v65 = (uint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
        goto LABEL_44;
    }
  }
  else
  {
    v65 = (uint64_t)_swiftEmptyArrayStorage;
    v63 = v90;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      goto LABEL_44;
  }
  v66 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v66)
  {
LABEL_48:
    swift_bridgeObjectRelease(v65);
    v68 = _swiftEmptyArrayStorage;
    goto LABEL_49;
  }
LABEL_31:
  *(_QWORD *)&v92 = _swiftEmptyArrayStorage;
  result = sub_10009CA68(0, v66 & ~(v66 >> 63), 0);
  if (v66 < 0)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v88 = v59;
  v67 = 0;
  v68 = (_QWORD *)v92;
  do
  {
    if ((v65 & 0xC000000000000001) != 0)
      v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v67, v65);
    else
      v69 = *(id *)(v65 + 8 * v67 + 32);
    v70 = v69;
    v71 = objc_msgSend(v69, "dictionaryRepresentation", v88);
    if (v71)
    {
      v72 = v71;
      v73 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v71, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    }
    else
    {

      v73 = 0;
    }
    *(_QWORD *)&v92 = v68;
    v75 = v68[2];
    v74 = v68[3];
    if (v75 >= v74 >> 1)
    {
      sub_10009CA68(v74 > 1, v75 + 1, 1);
      v68 = (_QWORD *)v92;
    }
    ++v67;
    v68[2] = v75 + 1;
    v68[v75 + 4] = v73;
  }
  while (v66 != v67);
  swift_bridgeObjectRelease(v65);
  v63 = v90;
  v59 = v88;
LABEL_49:
  swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);
  v93 = (void *)v59;
  *(_QWORD *)&v92 = v68;
  sub_100009CF0(&v92, v91);
  v76 = v94;
  v77 = swift_isUniquelyReferenced_nonNull_native(v94);
  sub_10003A658(v91, 0x676E697070696873, 0xEF73646F6874654DLL, v77);
  v94 = v76;
  swift_bridgeObjectRelease(0x8000000000000000);
  v78 = objc_msgSend(v63, "paymentSummaryItems");
  v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, v89);

  if (!((unint64_t)v45 >> 62))
  {
    v79 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v79)
      goto LABEL_51;
LABEL_66:
    swift_bridgeObjectRelease(v45);
    goto LABEL_67;
  }
  if (v45 < 0)
    v86 = v45;
  else
    v86 = v45 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v45);
  v79 = _CocoaArrayWrapper.endIndex.getter(v86);
  swift_bridgeObjectRelease(v45);
  if (!v79)
    goto LABEL_66;
LABEL_51:
  result = v79 - 1;
  if (__OFSUB__(v79, 1))
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if ((v45 & 0xC000000000000001) != 0)
  {
LABEL_72:
    v80 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v45);
LABEL_56:
    v81 = v80;
    swift_bridgeObjectRelease(v45);
    v82 = objc_msgSend(v81, "dictionaryRepresentation");

    if (v82)
    {
      v83 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v82, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v93 = (void *)sub_100007D40(&qword_1000EC470);
      *(_QWORD *)&v92 = v83;
      sub_100009CF0(&v92, v91);
      v84 = v94;
      v85 = swift_isUniquelyReferenced_nonNull_native(v94);
      sub_10003A658(v91, 0x6C61746F74, 0xE500000000000000, v85);
      swift_bridgeObjectRelease(0x8000000000000000);
      return (unint64_t)v84;
    }
LABEL_67:
    sub_100039FE8(0x6C61746F74, 0xE500000000000000, &v92);
    sub_100009CB0((uint64_t)&v92);
    return (unint64_t)v94;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v80 = *(id *)(v45 + 8 * result + 32);
    goto LABEL_56;
  }
  __break(1u);
  return result;
}

unint64_t sub_100021C60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EBF80;
  if (!qword_1000EBF80)
  {
    type metadata accessor for PKContactField(255);
    result = swift_getWitnessTable(&unk_1000AEF04, v1);
    atomic_store(result, (unint64_t *)&qword_1000EBF80);
  }
  return result;
}

void sub_100021CA8(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_100021D04()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 + 1, 0x80000001000B3A30);
  swift_bridgeObjectRelease(0x80000001000B3A30);
  return Hasher._finalize()();
}

void sub_100021D7C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_100021DC4(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, v1 + 1, 0x80000001000B3A30);
  return swift_bridgeObjectRelease(0x80000001000B3A30);
}

void sub_100021E24(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  __asm { BR              X10 }
}

Swift::Int sub_100021E7C()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 + 1, 0x80000001000B3A30);
  swift_bridgeObjectRelease(0x80000001000B3A30);
  return Hasher._finalize()();
}

uint64_t sub_100021EF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100021F30 + 4 * byte_1000AFDDC[a1]))(0xD000000000000016, 0x80000001000B3A10);
}

uint64_t sub_100021F30()
{
  uint64_t v0;

  return v0 + 1;
}

unint64_t sub_100021F48()
{
  return 0xD000000000000014;
}

uint64_t sub_100021F64()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_100021F7C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100021FB8 + 4 * byte_1000AFDE0[a1]))(0x6D754E656E6F6870, 0xEB00000000726562);
}

uint64_t sub_100021FB8()
{
  return 0x6464416C69616D65;
}

uint64_t sub_100021FD8()
{
  return 1701667182;
}

uint64_t sub_100021FE8()
{
  return 0x636974656E6F6870;
}

uint64_t sub_100022008()
{
  return 0x64416C6174736F70;
}

uint64_t sub_10002202C()
{
  return 0x4C73736572646461;
}

uint64_t sub_10002204C()
{
  return 0x7974696C61636F6CLL;
}

uint64_t sub_100022064()
{
  return 0x6C61636F4C627573;
}

uint64_t sub_100022084()
{
  return 0x6F436C6174736F70;
}

unint64_t sub_1000220A0()
{
  return 0xD000000000000012;
}

unint64_t sub_1000220BC()
{
  return 0xD000000000000015;
}

uint64_t sub_1000220DC()
{
  return 0x7972746E756F63;
}

uint64_t sub_1000220F4()
{
  return 0x437972746E756F63;
}

void sub_100022114(char *a1)
{
  sub_10004FE74(*a1);
}

void sub_100022120()
{
  char *v0;

  sub_100021CA8(*v0);
}

void sub_100022128(uint64_t a1)
{
  char *v1;

  sub_100021D7C(a1, *v1);
}

void sub_100022130(uint64_t a1)
{
  char *v1;

  sub_100021E24(a1, *v1);
}

unint64_t sub_100022138@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100022CFC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100022164@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100021EF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10002218C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = sub_100021F7C(*a1);
  v5 = v4;
  v6 = sub_100021F7C(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_100022214()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6);
  v2 = sub_100021F7C(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100022274(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_100021F7C(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000222B4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6);
  v2 = sub_100021F7C(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

unint64_t sub_100022310@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100022D44(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10002233C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100021F7C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100022364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  void *v9;
  _OWORD v10[2];
  __int128 v11;
  void *v12;
  void *v13;

  v1 = v0;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
  v4 = v3;
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v12 = &type metadata for String;
  if (!v6)
    v5 = 0;
  v7 = 0xE000000000000000;
  if (v6)
    v7 = v6;
  *(_QWORD *)&v11 = v5;
  *((_QWORD *)&v11 + 1) = v7;
  sub_100009CF0(&v11, v10);
  swift_bridgeObjectRetain(v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  v13 = (void *)0x8000000000000000;
  sub_10003A658(v10, v2, v4, isUniquelyReferenced_nonNull_native);
  v9 = v13;
  v13 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v9);
  __asm { BR              X11 }
}

unint64_t sub_100022450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v14;
  _OWORD v15[2];
  __int128 v16;
  uint64_t v17;
  unint64_t v18;

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(PKContactFieldEmailAddress);
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(PKPaymentErrorPostalAddressUserInfoKey);
  v6 = v5;
  sub_100039FE8(v4, v5, v15);
  swift_bridgeObjectRelease(v6);
  sub_100009CB0((uint64_t)v15);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(PKPaymentErrorContactFieldUserInfoKey);
  v9 = v8;
  v17 = v0;
  *(_QWORD *)&v16 = v1;
  *((_QWORD *)&v16 + 1) = v3;
  sub_100009CF0(&v16, v15);
  v10 = v18;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  v14 = v10;
  v18 = 0x8000000000000000;
  sub_10003A658(v15, v7, v9, isUniquelyReferenced_nonNull_native);
  v12 = v18;
  v18 = v14;
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v12);
  return v18;
}

void sub_10002265C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v0 = qword_1000F8A90;
  v1 = static os_log_type_t.error.getter();
  os_log(_:dso:log:type:_:)("BusinessChat: contactField on apple pay error was not a recognized field", 72, 2, &_mh_execute_header, v0, v1, _swiftEmptyArrayStorage);
  JUMPOUT(0x10002263CLL);
}

void sub_100022724()
{
  __asm { BR              X13 }
}

uint64_t sub_100022774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _OWORD v11[2];
  __int128 v12;
  ValueMetadata *v13;

  v13 = (ValueMetadata *)&type metadata for String;
  *(_QWORD *)&v12 = v0 + 1;
  *((_QWORD *)&v12 + 1) = 0x80000001000B3A30;
  sub_100009CF0(&v12, v11);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v11, 1701080931, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 - 40) = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(0x8000000000000000);
  v4 = *(unsigned __int8 *)(v1 + 17);
  if (v4 != 13)
  {
    v13 = &type metadata for ApplePayContactField;
    LOBYTE(v12) = v4;
    sub_100009CF0(&v12, v11);
    v9 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v11, 0x46746361746E6F63, 0xEC000000646C6569, v9);
    *(_QWORD *)(v2 - 40) = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(0x8000000000000000);
    v5 = *(_QWORD *)(v1 + 32);
    if (v5)
      goto LABEL_3;
LABEL_5:
    sub_100039FE8(0x6567617373656DLL, 0xE700000000000000, &v12);
    sub_100009CB0((uint64_t)&v12);
    return *(_QWORD *)(v2 - 40);
  }
  sub_100039FE8(0x46746361746E6F63, 0xEC000000646C6569, &v12);
  sub_100009CB0((uint64_t)&v12);
  v5 = *(_QWORD *)(v1 + 32);
  if (!v5)
    goto LABEL_5;
LABEL_3:
  v6 = *(_QWORD *)(v1 + 24);
  v13 = (ValueMetadata *)&type metadata for String;
  *(_QWORD *)&v12 = v6;
  *((_QWORD *)&v12 + 1) = v5;
  sub_100009CF0(&v12, v11);
  swift_bridgeObjectRetain(v5);
  v7 = *(_QWORD *)(v2 - 40);
  v8 = swift_isUniquelyReferenced_nonNull_native(v7);
  sub_10003A658(v11, 0x6567617373656DLL, 0xE700000000000000, v8);
  swift_bridgeObjectRelease(0x8000000000000000);
  return v7;
}

uint64_t sub_100022970()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for IMBApplePayError()
{
  return objc_opt_self(_TtC8Business16IMBApplePayError);
}

uint64_t getEnumTagSinglePayload for ApplePayContactField(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplePayContactField(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_100022A90 + 4 * byte_1000AFE04[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_100022AC4 + 4 * byte_1000AFDFF[v4]))();
}

uint64_t sub_100022AC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100022ACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100022AD4);
  return result;
}

uint64_t sub_100022AE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100022AE8);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_100022AEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100022AF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApplePayContactField()
{
  return &type metadata for ApplePayContactField;
}

uint64_t getEnumTagSinglePayload for TransactionError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100022BEC + 4 * byte_1000AFE0E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100022C20 + 4 * byte_1000AFE09[v4]))();
}

uint64_t sub_100022C20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100022C28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100022C30);
  return result;
}

uint64_t sub_100022C3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100022C44);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100022C48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100022C50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransactionError()
{
  return &type metadata for TransactionError;
}

unint64_t sub_100022C70()
{
  unint64_t result;

  result = qword_1000ECD60;
  if (!qword_1000ECD60)
  {
    result = swift_getWitnessTable(&unk_1000AFEFC, &type metadata for TransactionError);
    atomic_store(result, (unint64_t *)&qword_1000ECD60);
  }
  return result;
}

unint64_t sub_100022CB8()
{
  unint64_t result;

  result = qword_1000ECD68;
  if (!qword_1000ECD68)
  {
    result = swift_getWitnessTable(&unk_1000AFF9C, &type metadata for ApplePayContactField);
    atomic_store(result, (unint64_t *)&qword_1000ECD68);
  }
  return result;
}

unint64_t sub_100022CFC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D5C68, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_100022D44(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D5CE8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xD)
    return 13;
  else
    return v3;
}

uint64_t sub_100022D8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  char v14;
  Swift::String v15;
  Swift::String v17;

  v12 = type metadata accessor for IMBApplePayError();
  v13 = swift_allocObject(v12, 40, 7);
  v17._countAndFlagsBits = a1;
  v17._object = a2;
  v14 = sub_100022CFC(v17);
  if (v14 == 4)
  {
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a4);
    swift_deallocPartialClassInstance(v13, v12, 40, 7);
    return 0;
  }
  else
  {
    *(_BYTE *)(v13 + 16) = v14;
    *(_QWORD *)(v13 + 24) = a3;
    *(_QWORD *)(v13 + 32) = a4;
    if (a6)
      v15._countAndFlagsBits = a5;
    else
      v15._countAndFlagsBits = 0;
    if (a6)
      v15._object = a6;
    else
      v15._object = (void *)0xE000000000000000;
    *(_BYTE *)(v13 + 17) = sub_100022D44(v15);
  }
  return v13;
}

uint64_t sub_100022E54(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  __int128 v19;
  __int128 v20;

  if (!*(_QWORD *)(a1 + 16)
    || (v2 = sub_10004F068(1701080931, 0xE400000000000000), (v3 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v19),
        (swift_dynamicCast(&v17, &v19, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
    swift_bridgeObjectRelease(a1);
    return 0;
  }
  v4 = v17;
  v5 = v18;
  if (!*(_QWORD *)(a1 + 16))
  {
    v10 = 0;
    v9 = 0;
    goto LABEL_20;
  }
  v6 = sub_10004F068(0x6567617373656DLL, 0xE700000000000000);
  if ((v7 & 1) == 0)
  {
    v9 = 0;
    v10 = 0;
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_18;
LABEL_20:
    v19 = 0u;
    v20 = 0u;
    goto LABEL_21;
  }
  sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)&v19);
  v8 = swift_dynamicCast(&v17, &v19, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if (v8)
    v9 = v17;
  else
    v9 = 0;
  if (v8)
    v10 = (uint64_t)v18;
  else
    v10 = 0;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_20;
LABEL_18:
  v12 = sub_10004F068(0x46746361746E6F63, 0xEC000000646C6569);
  if ((v13 & 1) == 0)
    goto LABEL_20;
  sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)&v19);
LABEL_21:
  swift_bridgeObjectRelease(a1);
  if (*((_QWORD *)&v20 + 1))
  {
    v14 = swift_dynamicCast(&v17, &v19, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v14)
      v15 = v17;
    else
      v15 = 0;
    if (v14)
      v16 = v18;
    else
      v16 = 0;
  }
  else
  {
    sub_100009CB0((uint64_t)&v19);
    v15 = 0;
    v16 = 0;
  }
  return sub_100022D8C(v4, v5, v9, v10, v15, v16);
}

uint64_t sub_100023020(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  unint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;

  v3 = v1;
  v5 = objc_msgSend(a1, "messageData");
  if (!v5
    || (v6 = v5, v7 = objc_msgSend(v5, "jsonDictionary"), v6, !v7))
  {
    v17 = sub_1000232CC();
    v18 = swift_allocError(&type metadata for BIADeterminateReplyPayloadBCMessageParseError, v17, 0, 0);
    *v19 = 0;
LABEL_13:
    swift_willThrow(v18);

    goto LABEL_14;
  }
  v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootNotificationKey);
  v11 = v10;
  if (!*(_QWORD *)(v8 + 16) || (v12 = sub_10004F068(v9, v10), (v13 & 1) == 0))
  {
    v29 = 0u;
    v30 = 0u;
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v8);
    goto LABEL_11;
  }
  sub_100009C74(*(_QWORD *)(v8 + 56) + 32 * v12, (uint64_t)&v29);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v8);
  if (!*((_QWORD *)&v30 + 1))
  {
LABEL_11:
    sub_100009CB0((uint64_t)&v29);
    goto LABEL_12;
  }
  v14 = sub_100007D40(&qword_1000EC478);
  if ((swift_dynamicCast(v28, &v29, (char *)&type metadata for Any + 8, v14, 6) & 1) == 0)
  {
LABEL_12:
    v20 = sub_100018F94();
    v18 = swift_allocError(&type metadata for BIAPayloadBCMessageParseError, v20, 0, 0);
    *v21 = 1;
    goto LABEL_13;
  }
  v28[3] = v14;
  v15 = sub_100023310();
  v16 = sub_100023354();
  static DictionarySerialization.decode(_:from:)(&v29, &type metadata for BIAReply, v28, &type metadata for BIAReply, v15, v16);
  if (!v2)
  {

    sub_100010C40(v28);
    v24 = *((_QWORD *)&v29 + 1);
    v25 = v30;
    v26 = *((_QWORD *)&v30 + 1);
    v27 = v31;
    *(_QWORD *)(v3 + 16) = v29;
    *(_QWORD *)(v3 + 24) = v24;
    *(_BYTE *)(v3 + 32) = v25;
    *(_QWORD *)(v3 + 40) = v26;
    *(_QWORD *)(v3 + 48) = v27;
    *(_OWORD *)(v3 + 56) = v32;
    return v3;
  }

  sub_100010C40(v28);
LABEL_14:
  v22 = type metadata accessor for BIAReplyPayload();
  swift_deallocPartialClassInstance(v3, v22, 72, 7);
  return v3;
}

uint64_t sub_100023260()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[8];
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for BIAReplyPayload()
{
  return objc_opt_self(_TtC8Business15BIAReplyPayload);
}

unint64_t sub_1000232CC()
{
  unint64_t result;

  result = qword_1000ECE10;
  if (!qword_1000ECE10)
  {
    result = swift_getWitnessTable(&unk_1000B00A8, &type metadata for BIADeterminateReplyPayloadBCMessageParseError);
    atomic_store(result, (unint64_t *)&qword_1000ECE10);
  }
  return result;
}

unint64_t sub_100023310()
{
  unint64_t result;

  result = qword_1000ECE18;
  if (!qword_1000ECE18)
  {
    result = swift_getWitnessTable(&unk_1000AF638, &type metadata for BIAReply);
    atomic_store(result, (unint64_t *)&qword_1000ECE18);
  }
  return result;
}

unint64_t sub_100023354()
{
  unint64_t result;

  result = qword_1000ECE20;
  if (!qword_1000ECE20)
  {
    result = swift_getWitnessTable(&unk_1000AF610, &type metadata for BIAReply);
    atomic_store(result, (unint64_t *)&qword_1000ECE20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BIADeterminateReplyPayloadBCMessageParseError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000233E4 + 4 * byte_1000AFFD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100023418 + 4 * byte_1000AFFD0[v4]))();
}

uint64_t sub_100023418(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100023420(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100023428);
  return result;
}

uint64_t sub_100023434(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002343CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100023440(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100023448(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BIADeterminateReplyPayloadBCMessageParseError()
{
  return &type metadata for BIADeterminateReplyPayloadBCMessageParseError;
}

unint64_t sub_100023468()
{
  unint64_t result;

  result = qword_1000ECE28;
  if (!qword_1000ECE28)
  {
    result = swift_getWitnessTable(&unk_1000B0080, &type metadata for BIADeterminateReplyPayloadBCMessageParseError);
    atomic_store(result, (unint64_t *)&qword_1000ECE28);
  }
  return result;
}

uint64_t IMBApplePayManager.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t IMBApplePayManager.delegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

void (*IMBApplePayManager.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_100023654;
}

void sub_100023654(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

id IMBApplePayManager.message()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id result;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = v0;
  v2 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC8Business18IMBApplePayManager_imbMessage;
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Business18IMBApplePayManager_imbMessage), "data"));
  if (v7)
  {
    v8 = v7;
    v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0xF000000000000000;
  }
  v12 = objc_msgSend(*(id *)(v1 + v6), "url");
  if (v12)
  {
    v13 = v12;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v14 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 0, 1, v14);
  }
  else
  {
    v15 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v5, 1, 1, v15);
  }
  v16 = objc_msgSend(*(id *)(v1 + v6), "messageGUID");
  if (v16)
  {
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  type metadata accessor for IMBMessage();
  result = sub_10003C284(v9, v11, (uint64_t)v5, v18, v20, (char)objc_msgSend(*(id *)(v1 + v6), "isFromMe"));
  if (result)
  {
    v22 = result;
    v23 = *(_QWORD **)(v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
    swift_retain(v23);
    sub_1000287E8(v22, v23);
    swift_release(v23);
    v24 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v25 = swift_allocObject(v24, 192, 7);
    *(_OWORD *)(v25 + 16) = xmmword_1000B00F0;
    v26 = objc_msgSend(v22, "title");
    if (v26)
    {
      v27 = v26;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v30 = v29;

    }
    else
    {
      v28 = 0;
      v30 = 0;
    }
    v58 = v28;
    v59 = v30;
    v31 = sub_100007D40((uint64_t *)&unk_1000EBE50);
    v32 = ((uint64_t (*)(void))Optional.debugDescription.getter)();
    v34 = v33;
    swift_bridgeObjectRelease(v30);
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    v35 = sub_100009084();
    *(_QWORD *)(v25 + 64) = v35;
    *(_QWORD *)(v25 + 32) = v32;
    *(_QWORD *)(v25 + 40) = v34;
    v36 = objc_msgSend(v22, "subtitle");
    v58 = (uint64_t)v36;
    v37 = sub_100007D40(&qword_1000ECE68);
    v38 = Optional.debugDescription.getter(v37);
    v40 = v39;

    *(_QWORD *)(v25 + 96) = &type metadata for String;
    *(_QWORD *)(v25 + 104) = v35;
    *(_QWORD *)(v25 + 72) = v38;
    *(_QWORD *)(v25 + 80) = v40;
    v41 = objc_msgSend(v22, "subcaption");
    if (v41)
    {
      v42 = v41;
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v45 = v44;

    }
    else
    {
      v43 = 0;
      v45 = 0;
    }
    v58 = v43;
    v59 = v45;
    v46 = Optional.debugDescription.getter(v31);
    v48 = v47;
    swift_bridgeObjectRelease(v45);
    *(_QWORD *)(v25 + 136) = &type metadata for String;
    *(_QWORD *)(v25 + 144) = v35;
    *(_QWORD *)(v25 + 112) = v46;
    *(_QWORD *)(v25 + 120) = v48;
    v49 = objc_msgSend(v22, "messageGUID");
    if (v49)
    {
      v50 = v49;
      v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v53 = v52;

      v54 = (uint64_t *)(v25 + 152);
      *(_QWORD *)(v25 + 176) = &type metadata for String;
      *(_QWORD *)(v25 + 184) = v35;
      if (v53)
      {
        *v54 = v51;
LABEL_22:
        *(_QWORD *)(v25 + 160) = v53;
        v55 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
        v56 = (void *)static OS_os_log.default.getter(v55);
        v57 = static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)("BusinessChat: BCApplePayManager: Creating message with title: %@ subtitle: %@ subcaption: %@ guid: %@", 101, 2, &_mh_execute_header, v56, v57, v25);
        swift_bridgeObjectRelease(v25);

        return v22;
      }
    }
    else
    {
      v54 = (uint64_t *)(v25 + 152);
      *(_QWORD *)(v25 + 176) = &type metadata for String;
      *(_QWORD *)(v25 + 184) = v35;
    }
    *v54 = 7104878;
    v53 = 0xE300000000000000;
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t IMBApplePayManager.applePayStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (!v1)
    return 1;
  v2 = v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
    return 1;
  v3 = *(_QWORD *)v2;
  v4 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1000AF070;
  v6 = sub_100060F1C(v3);
  v8 = v7;
  *(_QWORD *)(v5 + 56) = &type metadata for String;
  *(_QWORD *)(v5 + 64) = sub_100009084();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  v9 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
  v10 = (void *)static OS_os_log.default.getter(v9);
  v11 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("BusinessChat: Returned apple pay status = %@", 44, 2, &_mh_execute_header, v10, v11, v5);
  swift_bridgeObjectRelease(v5);

  return v3;
}

void sub_100023C10()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  Class isa;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  _QWORD aBlock[5];
  uint64_t v38;
  char v39[24];

  v1 = v0;
  v2 = sub_100007D40(&qword_1000ED070);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = __chkstk_darwin(v6, v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  v14 = (char *)&aBlock[-1] - v13;
  v15 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
  v16 = (void *)static OS_os_log.default.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  os_log(_:dso:log:type:_:)("BusinessChat: IMBApplePayManager resetExpireTimer", 49, 2, &_mh_execute_header, v16, v17, _swiftEmptyArrayStorage);

  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_9;
  }
  if ((*(_BYTE *)(v18 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState + 8) & 1) == 0
    && *(_QWORD *)(v18 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState) == 3)
  {
    return;
  }
  v19 = v18 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate, v39, 0, 0);
  sub_100010BA4(v19, (uint64_t)v5, &qword_1000ED070);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_9:
    sub_100010A98((uint64_t)v5, &qword_1000ED070);
    return;
  }
  v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v14, v5, v6);
  if ((*(_BYTE *)(v18 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState + 8) & 1) != 0
    || *(_QWORD *)(v18 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState) != 3)
  {
    Date.init()(v20);
    v21 = sub_10002B66C();
    v22 = dispatch thunk of static Comparable.< infix(_:_:)(v14, v11, v6, v21);
    v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v11, v6);
    if ((v22 & 1) == 0)
    {
      v24 = OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentExpireTimer;
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentExpireTimer], "invalidate");
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v14, v6);
      v25 = swift_allocObject(&unk_1000D7538, 24, 7);
      *(_QWORD *)(v25 + 16) = v1;
      v26 = objc_allocWithZone((Class)NSTimer);
      v27 = v1;
      isa = Date._bridgeToObjectiveC()().super.isa;
      aBlock[4] = sub_10002B6B4;
      v38 = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100028798;
      aBlock[3] = &unk_1000D7550;
      v29 = _Block_copy(aBlock);
      v30 = objc_msgSend(v26, "initWithFireDate:interval:repeats:block:", isa, 0, v29, 0.0);
      _Block_release(v29);

      v23(v11, v6);
      swift_release(v38);
      v31 = *(void **)&v1[v24];
      *(_QWORD *)&v1[v24] = v30;

      v32 = *(void **)&v1[v24];
      if (v32)
      {
        v33 = (void *)objc_opt_self(NSRunLoop);
        v34 = v32;
        v35 = objc_msgSend(v33, "mainRunLoop");
        objc_msgSend(v35, "addTimer:forMode:", v34, NSDefaultRunLoopMode);

      }
    }
    v23(v14, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  }
}

void sub_100023FC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (qword_1000EBCB8 != -1)
    a1 = swift_once(&qword_1000EBCB8, sub_100082798);
  v1 = qword_1000F8A90;
  v2 = static os_log_type_t.default.getter(a1);
  os_log(_:dso:log:type:_:)("BusinessChat: Expire date timer fired", 37, 2, &_mh_execute_header, v1, v2, _swiftEmptyArrayStorage);
  sub_100024048();
}

void sub_100024048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *Strong;
  void *v17;
  _BYTE v18[24];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (v2)
  {
    v3 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
    *(_QWORD *)v3 = 2;
    *(_BYTE *)(v3 + 8) = 0;
  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
  swift_retain(v4);
  v5 = sub_10008BCA8();
  v7 = v6;
  v9 = v8;
  swift_release(v4);
  v10 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v11 = swift_allocObject(v10, 112, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1000ADFC0;
  *(_QWORD *)(v11 + 56) = &type metadata for String;
  *(_QWORD *)(v11 + 64) = sub_100009084();
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 96) = sub_1000090C8(0, &qword_1000ED060, NSAttributedString_ptr);
  *(_QWORD *)(v11 + 104) = sub_10002B614();
  *(_QWORD *)(v11 + 72) = v9;
  sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
  v12 = v9;
  v13 = (void *)static OS_os_log.default.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  os_log(_:dso:log:type:_:)("BusinessChat: Expire Payment title: %@ subtitle: %@", 51, 2, &_mh_execute_header, v13, v14, v11);
  swift_bridgeObjectRelease(v11);

  v15 = v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate, v18, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v15);
  if (Strong)
  {
    v17 = Strong;
    objc_msgSend(Strong, "paymentRequestDidUpdate:", v1);
    swift_unknownObjectRelease(v17);
  }

}

Swift::Void __swiftcall IMBApplePayManager.presentApplePay(with:)(UIWindow_optional with)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Class isa;
  void *v7;
  id v8;
  objc_class *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  _QWORD v17[5];
  uint64_t v18;

  if ((byte_1000F8918 & 1) != 0)
  {
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v2 = qword_1000F8A90;
    v3 = static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)("IMBApplePayManager: Cannot present apple pay because one modal is already on screen", 83, 2, &_mh_execute_header, v2, v3, _swiftEmptyArrayStorage);
  }
  else
  {
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
    if (v4)
    {
      v5 = *(void **)(v4 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v5)
      {
        isa = with.value.super.super.super.isa;
        v7 = *(void **)&v1[OBJC_IVAR____TtC8Business18IMBApplePayManager_window];
        *(_QWORD *)&v1[OBJC_IVAR____TtC8Business18IMBApplePayManager_window] = with.value.super.super.super.isa;
        v8 = v5;
        v9 = isa;

        v10 = objc_msgSend(objc_allocWithZone((Class)PKPaymentAuthorizationController), "initWithPaymentRequest:", v8);
        v11 = *(void **)&v1[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizationController];
        *(_QWORD *)&v1[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizationController] = v10;
        v12 = v10;

        objc_msgSend(v12, "setDelegate:", v1);
        byte_1000F8918 = 1;
        v13 = swift_allocObject(&unk_1000D7428, 24, 7);
        *(_QWORD *)(v13 + 16) = v1;
        v17[4] = sub_100028940;
        v18 = v13;
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 1107296256;
        v17[2] = sub_100024640;
        v17[3] = &unk_1000D7440;
        v14 = _Block_copy(v17);
        v15 = v18;
        v16 = v1;
        swift_release(v15);
        objc_msgSend(v12, "presentWithCompletion:", v14);
        _Block_release(v14);

      }
    }
  }
}

void sub_1000243CC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *Strong;
  void *v28;
  uint64_t v29;
  _BYTE v30[24];

  byte_1000F8918 = a1;
  if ((a1 & 1) != 0)
  {
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v2 = qword_1000F8A90;
    v3 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("ApplePaySheet has been presented", 32, 2, &_mh_execute_header, v2, v3, _swiftEmptyArrayStorage);
  }
  else
  {
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v5 = qword_1000F8A90;
    v6 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("ApplePaySheet has not been presented", 36, 2, &_mh_execute_header, v5, v6, _swiftEmptyArrayStorage);
    v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
    swift_retain(v7);
    v8 = sub_10008BAC0();
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v15 = swift_release(v7);
    v29 = qword_1000F8A90;
    v16 = static os_log_type_t.info.getter(v15);
    v17 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v18 = swift_allocObject(v17, 152, 7);
    *(_OWORD *)(v18 + 16) = xmmword_1000AF280;
    *(_QWORD *)(v18 + 56) = &type metadata for String;
    v19 = sub_100009084();
    *(_QWORD *)(v18 + 64) = v19;
    *(_QWORD *)(v18 + 32) = v8;
    *(_QWORD *)(v18 + 40) = v10;
    v20 = objc_msgSend(v12, "string");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    *(_QWORD *)(v18 + 96) = &type metadata for String;
    *(_QWORD *)(v18 + 104) = v19;
    *(_QWORD *)(v18 + 72) = v21;
    *(_QWORD *)(v18 + 80) = v23;
    v24 = sub_100060F1C(v14);
    *(_QWORD *)(v18 + 136) = &type metadata for String;
    *(_QWORD *)(v18 + 144) = v19;
    *(_QWORD *)(v18 + 112) = v24;
    *(_QWORD *)(v18 + 120) = v25;
    os_log(_:dso:log:type:_:)("PresentApplePay\tSending to delegate\ttitle: %@, subtitle: %@, state: %@", 70, 2, &_mh_execute_header, v29, v16, v18);
    swift_bridgeObjectRelease(v18);
    v26 = a2 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate;
    swift_beginAccess(a2 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate, v30, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v26);
    if (Strong)
    {
      v28 = Strong;
      objc_msgSend(Strong, "paymentRequestDidUpdate:", a2);

      swift_unknownObjectRelease(v28);
    }
    else
    {

    }
  }
}

uint64_t sub_100024640(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void sub_1000246D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(id);
  uint64_t v4;
  id v5;
  Class isa;
  id v7;

  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v1 = qword_1000F8A90;
  v2 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("In try again for apple pay", 26, 2, &_mh_execute_header, v1, v2, _swiftEmptyArrayStorage);
  v3 = *(void (**)(id))(v0 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion + 8);
    v5 = objc_allocWithZone((Class)PKPaymentAuthorizationResult);
    swift_retain(v4);
    sub_100007D40(&qword_1000F07D0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v7 = objc_msgSend(v5, "initWithStatus:errors:", 1000, isa);

    v3(v7);
    sub_100028980((uint64_t)v3, v4);

  }
}

void sub_10002482C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  objc_class *v23;
  id v24;
  char *v25;
  char *v26;
  char *v27;
  void (*v28)(id);
  uint64_t v29;
  id v30;
  Class isa;
  id v32;
  _QWORD v33[3];
  objc_class *v34;
  _UNKNOWN **v35;
  char *v36;
  _OWORD v37[2];

  v2 = v1;
  v4 = type metadata accessor for Endpoint(0);
  v6 = __chkstk_darwin(v4, v5);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v6, v9);
  v12 = (_QWORD *)((char *)v33 - v11);
  if (qword_1000EBCB8 != -1)
    v10 = swift_once(&qword_1000EBCB8, sub_100082798);
  v13 = qword_1000F8A90;
  v14 = static os_log_type_t.default.getter(v10);
  os_log(_:dso:log:type:_:)("Handling retry attempt", 22, 2, &_mh_execute_header, v13, v14, _swiftEmptyArrayStorage);
  v15 = objc_msgSend(a1, "userInfo");
  if (v15)
  {
    v16 = v15;
    _bridgeAnyObjectToAny(_:)(v37);
    swift_unknownObjectRelease(v16);
  }
  else
  {
    memset(v37, 0, sizeof(v37));
  }
  sub_10002B588((uint64_t)v37, (uint64_t)v33);
  if (v34)
  {
    v17 = type metadata accessor for IMBDelayedAuthResponse(0);
    if ((swift_dynamicCast(&v36, v33, (char *)&type metadata for Any + 8, v17, 6) & 1) != 0)
    {
      v18 = v36;
      v19 = *(_QWORD *)&v36[OBJC_IVAR____TtC8Business22IMBDelayedAuthResponse_messageBody];
      v20 = (char *)v12 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
      *v12 = v19;
      v21 = &v18[OBJC_IVAR____TtC8Business22IMBDelayedAuthResponse_url];
      v22 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      sub_10002B4F0((uint64_t)v12, (uint64_t)v8);
      v23 = (objc_class *)type metadata accessor for HttpClient(0);
      objc_allocWithZone(v23);
      swift_bridgeObjectRetain_n(v19, 2);
      v24 = sub_100031BDC((uint64_t)v8);
      v34 = v23;
      v35 = &off_1000D78E8;
      v33[0] = v24;
      sub_10002B534((uint64_t)v12);
      v25 = (char *)*sub_100008FA4(v33, (uint64_t)v23);
      swift_bridgeObjectRetain(v19);
      v26 = v2;
      sub_10003322C(v25, v19, v26);

      swift_bridgeObjectRelease_n(v19, 2);
      sub_100010C40(v33);
      return;
    }
  }
  else
  {
    sub_100010A98((uint64_t)v33, (uint64_t *)&unk_1000EEB60);
  }
  v27 = &v2[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion];
  v28 = *(void (**)(id))&v2[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion];
  if (v28)
  {
    v29 = *((_QWORD *)v27 + 1);
    v30 = objc_allocWithZone((Class)PKPaymentAuthorizationResult);
    swift_retain(v29);
    sub_100007D40(&qword_1000F07D0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v32 = objc_msgSend(v30, "initWithStatus:errors:", 1, isa);

    v28(v32);
    sub_100028980((uint64_t)v28, v29);

  }
}

void sub_100024B2C(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  objc_class *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  char *v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD v21[4];
  _QWORD v22[4];

  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    sub_1000250EC(a1);
    sub_10002B57C(a1, 1);
  }
  else
  {
    v7 = (objc_class *)type metadata accessor for IMBDelayedAuthResponse(0);
    objc_allocWithZone(v7);
    swift_bridgeObjectRetain(a3);
    sub_10002B570(a1, 0);
    v8 = (char *)sub_10005A5D8(a1, a3);
    if (v8)
    {
      v9 = v8;
      if (qword_1000EBCB8 != -1)
        v8 = (char *)swift_once(&qword_1000EBCB8, sub_100082798);
      v10 = qword_1000F8A90;
      v11 = static os_log_type_t.default.getter(v8);
      os_log(_:dso:log:type:_:)("In additional retry", 19, 2, &_mh_execute_header, v10, v11, _swiftEmptyArrayStorage);
      sub_1000090C8(0, &qword_1000ED048, NSTimer_ptr);
      v12 = *(double *)&v9[OBJC_IVAR____TtC8Business22IMBDelayedAuthResponse_delay];
      v22[3] = type metadata accessor for IMBApplePayManager();
      v21[3] = v7;
      v22[0] = a4;
      v21[0] = v9;
      v13 = a4;
      v14 = v9;
      v15 = sub_100024DAC(v22, (uint64_t)"handlePaymentAuthorizationRetryWithTimer:", v21, 0, v12);
      v16 = *(void **)&v13[OBJC_IVAR____TtC8Business18IMBApplePayManager_authorizePaymentRetryTimer];
      *(_QWORD *)&v13[OBJC_IVAR____TtC8Business18IMBApplePayManager_authorizePaymentRetryTimer] = v15;
      v17 = v15;

      v20 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
      objc_msgSend(v20, "addTimer:forMode:", v17, NSDefaultRunLoopMode);

    }
    else
    {
      if (qword_1000EBCB8 != -1)
        v8 = (char *)swift_once(&qword_1000EBCB8, sub_100082798);
      v18 = qword_1000F8A90;
      v19 = static os_log_type_t.default.getter(v8);
      os_log(_:dso:log:type:_:)("Did get success in retry attempt", 32, 2, &_mh_execute_header, v18, v19, _swiftEmptyArrayStorage);
      sub_100024F18(a1);
    }
  }
}

id sub_100024DAC(_QWORD *a1, uint64_t a2, _QWORD *a3, char a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  id v24;
  _QWORD v26[2];

  v6 = v5;
  v12 = a1[3];
  v13 = sub_100008FA4(a1, v12);
  v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v12);
  v15 = a3[3];
  if (v15)
  {
    v16 = sub_100008FA4(a3, a3[3]);
    v26[1] = v26;
    v17 = a4;
    v18 = a2;
    v19 = *(_QWORD *)(v15 - 8);
    __chkstk_darwin(v16, v16);
    v21 = (char *)v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v19 + 16))(v21);
    v22 = _bridgeAnythingToObjectiveC<A>(_:)(v21, v15);
    v23 = *(void (**)(char *, uint64_t))(v19 + 8);
    a2 = v18;
    a4 = v17;
    v23(v21, v15);
    sub_100010C40(a3);
  }
  else
  {
    v22 = 0;
  }
  v24 = objc_msgSend((id)swift_getObjCClassFromMetadata(v6), "timerWithTimeInterval:target:selector:userInfo:repeats:", v14, a2, v22, a4 & 1, a5);
  swift_unknownObjectRelease(v14);
  swift_unknownObjectRelease(v22);
  sub_100010C40(a1);
  return v24;
}

void sub_100024F18(uint64_t a1)
{
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  id v11;
  NSString v12;
  Class isa;
  id v14;
  id v15;
  id v16;
  _BYTE v17[80];

  v1 = sub_10004CD84(a1);
  v2 = sub_100063F38(v1);
  if (v2)
  {
    v5 = v3;
    v6 = v4;
    v16 = v2;
    sub_1000289A0(v2, v3);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v5);

  }
  else
  {
    v7 = sub_100007D40(&qword_1000ED050);
    inited = swift_initStackObject(v7, v17);
    *(_OWORD *)(inited + 16) = xmmword_1000AF070;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v9;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD00000000000002CLL;
    *(_QWORD *)(inited + 56) = 0x80000001000B5E30;
    v10 = sub_10004DF18(inited);
    v11 = objc_allocWithZone((Class)NSError);
    v12 = String._bridgeToObjectiveC()();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v10);
    v14 = objc_msgSend(v11, "initWithDomain:code:userInfo:", v12, 800, isa);

    v15 = v14;
    sub_1000250EC((uint64_t)v15);

  }
}

void sub_1000250EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *Strong;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(id);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Class isa;
  id v36;
  _QWORD v37[3];
  _BYTE v38[8];
  _BYTE v39[24];

  v2 = v1;
  v4 = (void *)_convertErrorToNSError(_:)(a1);
  v5 = (_QWORD *)&unk_1000F8000;
  if (objc_msgSend(v4, "code"))
  {
    v6 = OBJC_IVAR____TtC8Business18IMBApplePayManager_imbMessage;
    v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                               + OBJC_IVAR____TtC8Business18IMBApplePayManager_imbMessage), "rootKey"));
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    LOBYTE(v7) = objc_msgSend(*(id *)(v2 + v6), "isFromMe");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCLoggingEventNameFailure);
    v13 = v12;
    sub_100085D10(v8, v10, (char)v7, v11, v12, (uint64_t)objc_msgSend(*(id *)(v2 + v6), "version"));
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v13);
    v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v14)
    {
      v15 = v14 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
      *(_QWORD *)v15 = 7;
      *(_BYTE *)(v15 + 8) = 0;
    }
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
    swift_retain(v16);
    sub_10008B5A8(7);
    swift_release(v16);
    v5 = &unk_1000F8000;
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v17 = qword_1000F8A90;
    v18 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("BusinessChat: UpdateTransactionStatus Error: the payment authorization result could not be parsed or server unavailable", 119, 2, &_mh_execute_header, v17, v18, _swiftEmptyArrayStorage);
    v19 = v2 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate, v39, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v19);
    if (Strong)
    {
      v21 = Strong;
      objc_msgSend(Strong, "paymentRequestDidUpdate:", v2);
      swift_unknownObjectRelease(v21);
    }
  }
  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v22 = v5[338];
  v23 = static os_log_type_t.default.getter();
  v24 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v25 = swift_allocObject(v24, 72, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1000AF070;
  swift_getErrorValue(a1, v38, v37);
  v26 = Error.localizedDescription.getter(v37[1], v37[2]);
  v28 = v27;
  *(_QWORD *)(v25 + 56) = &type metadata for String;
  *(_QWORD *)(v25 + 64) = sub_100009084();
  *(_QWORD *)(v25 + 32) = v26;
  *(_QWORD *)(v25 + 40) = v28;
  os_log(_:dso:log:type:_:)("BusinessChat: Did get error in network request in paymentGatewayUrl: %@", 71, 2, &_mh_execute_header, v22, v23, v25);
  swift_bridgeObjectRelease(v25);
  v29 = v2 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion;
  v30 = *(void (**)(id))(v2 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion);
  if (v30)
  {
    v31 = *(_QWORD *)(v29 + 8);
    v32 = sub_100007D40((uint64_t *)&unk_1000ED030);
    v33 = swift_allocObject(v32, 40, 7);
    *(_OWORD *)(v33 + 16) = xmmword_1000AF070;
    *(_QWORD *)(v33 + 32) = a1;
    v34 = objc_allocWithZone((Class)PKPaymentAuthorizationResult);
    sub_10002B604((uint64_t)v30, v31);
    swift_errorRetain(a1);
    sub_100007D40(&qword_1000F07D0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v33);
    v36 = objc_msgSend(v34, "initWithStatus:errors:", 1, isa);

    v30(v36);
    sub_100028980((uint64_t)v30, v31);

  }
}

uint64_t sub_100025470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  objc_class *v29;
  id v30;
  id v31;
  char *v32;
  uint64_t v33;
  void (*v34)(id);
  uint64_t v36;
  void (*v37)(id);
  _QWORD v38[5];
  char v39[24];

  v37 = (void (*)(id))a2;
  v6 = type metadata accessor for Endpoint(0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  v13 = (uint64_t *)((char *)&v36 - v12);
  v14 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (v23)
  {
    v36 = a3;
    v24 = v23 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl;
    swift_beginAccess(v23 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl, v39, 0, 0);
    sub_100010BA4(v24, (uint64_t)v17, (uint64_t *)&unk_1000ED480);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
      v25 = *(void **)(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_imbNetworkBody);
      swift_retain(v23);
      v26 = v25;
      v27 = sub_100092014(v23, a1);
      swift_bridgeObjectRetain(v27);

      v28 = (char *)v13 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
      *v13 = v27;
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v28, v22, v18);
      sub_10002B4F0((uint64_t)v13, (uint64_t)v10);
      v29 = (objc_class *)type metadata accessor for HttpClient(0);
      v30 = objc_allocWithZone(v29);
      v31 = sub_100031BDC((uint64_t)v10);
      v38[3] = v29;
      v38[4] = &off_1000D78E8;
      v38[0] = v31;
      sub_10002B534((uint64_t)v13);
      v32 = (char *)*sub_100008FA4(v38, (uint64_t)v29);
      v33 = v36;
      v34 = v37;
      sub_10002B604((uint64_t)v37, v36);
      sub_100032AC4(v32, v34, v33);
      sub_100028980((uint64_t)v34, v33);
      swift_release(v23);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      return sub_100010C40(v38);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  }
  return sub_100010A98((uint64_t)v17, (uint64_t *)&unk_1000ED480);
}

uint64_t sub_10002571C(uint64_t result, char a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    if (a3)
    {
      v4 = result;
      swift_errorRetain(result);
      a3(v4);
      return sub_10002B57C(v4, 1);
    }
  }
  else if (a3)
  {
    return ((uint64_t (*)(_QWORD))a3)(0);
  }
  return result;
}

id IMBJITAppBundleManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void IMBApplePayManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Business.IMBApplePayManager", 27, "init()", 6, 0);
  __break(1u);
}

id IMBApplePayManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBApplePayManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Void __swiftcall IMBApplePayManager.paymentAuthorizationControllerDidFinish(_:)(PKPaymentAuthorizationController a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v3 = qword_1000F8A90;
  v4 = static os_log_type_t.debug.getter();
  v5 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1000AF070;
  v7 = -[objc_class description](a1.super.isa, "description");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  *(_QWORD *)(v6 + 56) = &type metadata for String;
  *(_QWORD *)(v6 + 64) = sub_100009084();
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v10;
  os_log(_:dso:log:type:_:)("BusinessChat: paymentAuthorizationControllerDidFinish: %@", 57, 2, &_mh_execute_header, v3, v4, v6);
  swift_bridgeObjectRelease(v6);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayTryAgainTimer), "invalidate");
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_authorizePaymentRetryTimer), "invalidate");
  v12[4] = sub_100025AA4;
  v12[5] = 0;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100025AB0;
  v12[3] = &unk_1000D7468;
  v11 = _Block_copy(v12);
  -[objc_class dismissWithCompletion:](a1.super.isa, "dismissWithCompletion:", v11);
  _Block_release(v11);
}

void sub_100025AA4()
{
  byte_1000F8918 = 0;
}

uint64_t sub_100025AB0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_100025B30(void *a1, void *a2, char *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (**v19)();
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v6 = swift_allocObject(&unk_1000D74E8, 24, 7);
  *(_QWORD *)(v6 + 16) = a4;
  _Block_copy(a4);
  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v23 = qword_1000F8A90;
  v7 = static os_log_type_t.debug.getter();
  v8 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v9 = swift_allocObject(v8, 112, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1000ADFC0;
  v10 = objc_msgSend(a1, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)(v9 + 56) = &type metadata for String;
  v14 = sub_100009084();
  *(_QWORD *)(v9 + 64) = v14;
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  v15 = objc_msgSend(a2, "description");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  *(_QWORD *)(v9 + 96) = &type metadata for String;
  *(_QWORD *)(v9 + 104) = v14;
  *(_QWORD *)(v9 + 72) = v16;
  *(_QWORD *)(v9 + 80) = v18;
  os_log(_:dso:log:type:_:)("BusinessChat: paymentAuthorizationController: %@, didAuthorizePayment: %@", 73, 2, &_mh_execute_header, v23, v7, v9);
  swift_bridgeObjectRelease(v9);
  v19 = (uint64_t (**)())&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion];
  v20 = *(_QWORD *)&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion];
  v21 = *(_QWORD *)&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion + 8];
  *v19 = sub_10002B5D0;
  v19[1] = (uint64_t (*)())v6;
  swift_retain(v6);
  sub_100028980(v20, v21);
  sub_100029320(a2, a3, (void (**)(_QWORD, _QWORD))a4);
  _Block_release(a4);
  return swift_release(v6);
}

void IMBApplePayManager.paymentAuthorizationController(_:didAuthorizePayment:handler:)(void *a1, void *a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (**v20)(id);
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;

  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v24 = qword_1000F8A90;
  v23 = static os_log_type_t.debug.getter();
  v9 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v10 = swift_allocObject(v9, 112, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1000ADFC0;
  v11 = objc_msgSend(a1, "description");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  *(_QWORD *)(v10 + 56) = &type metadata for String;
  v15 = sub_100009084();
  *(_QWORD *)(v10 + 64) = v15;
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v14;
  v16 = objc_msgSend(a2, "description");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  *(_QWORD *)(v10 + 96) = &type metadata for String;
  *(_QWORD *)(v10 + 104) = v15;
  *(_QWORD *)(v10 + 72) = v17;
  *(_QWORD *)(v10 + 80) = v19;
  os_log(_:dso:log:type:_:)("BusinessChat: paymentAuthorizationController: %@, didAuthorizePayment: %@", 73, 2, &_mh_execute_header, v24, v23, v10);
  swift_bridgeObjectRelease(v10);
  v20 = (void (**)(id))(v4 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion);
  v21 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion);
  v22 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion + 8);
  *v20 = a3;
  v20[1] = (void (*)(id))a4;
  swift_retain(a4);
  sub_100028980(v21, v22);
  sub_100025E90(a2, a3, a4);
}

void sub_100025E90(void *a1, void (*a2)(id), uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  objc_class *v38;
  id v39;
  id v40;
  char *v41;
  char *v42;
  id v43;
  id v44;
  Class isa;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  Class v50;
  id v51;
  void *v52;
  uint64_t v53;
  char *v54;
  _QWORD v55[3];
  uint64_t v56;
  _UNKNOWN **v57;
  _OWORD v58[2];

  v52 = a1;
  v6 = type metadata accessor for Endpoint(0);
  v8 = __chkstk_darwin(v6, v7);
  v53 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  v12 = (uint64_t *)((char *)&v52 - v11);
  v13 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  v54 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v3[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion];
  v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion];
  v23 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion + 8];
  *(_QWORD *)v21 = a2;
  *((_QWORD *)v21 + 1) = a3;
  swift_retain(a3);
  sub_100028980(v22, v23);
  sub_1000090C8(0, &qword_1000ED048, NSTimer_ptr);
  v56 = type metadata accessor for IMBApplePayManager();
  v55[0] = v3;
  memset(v58, 0, sizeof(v58));
  v24 = v3;
  v25 = sub_100024DAC(v55, (uint64_t)"extendApplePayTimeout", v58, 0, 29.0);
  v26 = *(void **)&v24[OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayTryAgainTimer];
  *(_QWORD *)&v24[OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayTryAgainTimer] = v25;
  v27 = v25;

  v28 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  objc_msgSend(v28, "addTimer:forMode:", v27, NSDefaultRunLoopMode);

  v29 = *(_QWORD *)&v24[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
  if (!v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_6;
  }
  v30 = v29 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl;
  swift_beginAccess(v29 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl, v58, 0, 0);
  sub_100010BA4(v30, (uint64_t)v16, (uint64_t *)&unk_1000ED480);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_6:
    sub_100010A98((uint64_t)v16, (uint64_t *)&unk_1000ED480);
    v44 = objc_allocWithZone((Class)PKPaymentAuthorizationResult);
    sub_100007D40(&qword_1000F07D0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v46 = objc_msgSend(v44, "initWithStatus:errors:", 1, isa, v52);

    a2(v46);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v54, v16, v17);
  swift_retain(v29);
  v31 = sub_10000D654();
  v32 = swift_release(v29);
  if (v31)
  {
    v33 = *(id *)&v24[OBJC_IVAR____TtC8Business18IMBApplePayManager_imbNetworkBody];
    v34 = sub_100092200(v52);
    swift_bridgeObjectRetain(v34);

    v35 = (char *)v12 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
    *v12 = v34;
    v36 = v54;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v35, v54, v17);
    v37 = v53;
    sub_10002B4F0((uint64_t)v12, v53);
    v38 = (objc_class *)type metadata accessor for HttpClient(0);
    v39 = objc_allocWithZone(v38);
    swift_bridgeObjectRetain(v34);
    v40 = sub_100031BDC(v37);
    v56 = (uint64_t)v38;
    v57 = &off_1000D78E8;
    v55[0] = v40;
    sub_10002B534((uint64_t)v12);
    v41 = (char *)*sub_100008FA4(v55, (uint64_t)v38);
    v42 = v24;
    v43 = v27;
    swift_bridgeObjectRetain(v34);
    sub_100033950(v41, v43, v34, v42);

    swift_bridgeObjectRelease_n(v34, 2);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v36, v17);
    sub_100010C40(v55);
  }
  else
  {
    if (qword_1000EBCB8 != -1)
      v32 = swift_once(&qword_1000EBCB8, sub_100082798);
    v47 = qword_1000F8A90;
    v48 = static os_log_type_t.error.getter(v32);
    os_log(_:dso:log:type:_:)("BusinessChat: this message is no longer valid at authorization time", 67, 2, &_mh_execute_header, v47, v48, _swiftEmptyArrayStorage, v52);
    v49 = objc_allocWithZone((Class)PKPaymentAuthorizationResult);
    sub_100007D40(&qword_1000F07D0);
    v50 = Array._bridgeToObjectiveC()().super.isa;
    v51 = objc_msgSend(v49, "initWithStatus:errors:", 1, v50);

    a2(v51);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v54, v17);
  }
}

uint64_t IMBApplePayManager.paymentAuthorizationController(_:didSelectPaymentMethod:handler:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100026D64(a1, a2, a3, a4, (SEL *)&selRef_debugDescription, "BusinessChat: paymentAuthorizationController: %@, didSelectPaymentMethod: %@", 76, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100026434);
}

void sub_100026434(void *a1, void (*a2)(id), uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  Class isa;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  objc_class *v31;
  id v32;
  id v33;
  char *v34;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(id);
  uint64_t v42;
  _QWORD v43[5];
  char v44[24];

  v4 = v3;
  v41 = a2;
  v42 = a3;
  v6 = type metadata accessor for Endpoint(0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  v13 = (uint64_t *)((char *)&v41 - v12);
  v14 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_allocWithZone((Class)PKPaymentRequestPaymentMethodUpdate);
  sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v25 = objc_msgSend(v23, "initWithPaymentSummaryItems:", isa);

  v26 = *(id *)&v4[OBJC_IVAR____TtC8Business18IMBApplePayManager_imbNetworkBody];
  v27 = sub_10009231C(a1);
  swift_bridgeObjectRetain(v27);

  v28 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
  if (v28)
  {
    v29 = v28 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl;
    swift_beginAccess(v28 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl, v44, 0, 0);
    sub_100010BA4(v29, (uint64_t)v17, (uint64_t *)&unk_1000ED480);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
      v30 = (char *)v13 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
      *v13 = v27;
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v30, v22, v18);
      sub_10002B4F0((uint64_t)v13, (uint64_t)v10);
      v31 = (objc_class *)type metadata accessor for HttpClient(0);
      v32 = objc_allocWithZone(v31);
      v33 = sub_100031BDC((uint64_t)v10);
      v43[3] = v31;
      v43[4] = &off_1000D78E8;
      v43[0] = v33;
      sub_10002B534((uint64_t)v13);
      v34 = (char *)*sub_100008FA4(v43, (uint64_t)v31);
      v35 = v4;
      v36 = v42;
      swift_retain(v42);
      v37 = v25;
      sub_100034900(v34, v35, v41, v36, v37);

      swift_release(v36);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      sub_100010C40(v43);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  }
  swift_bridgeObjectRelease(v27);
  sub_100010A98((uint64_t)v17, (uint64_t *)&unk_1000ED480);
  v38 = ((uint64_t (*)(id))v41)(v25);
  if (qword_1000EBCB8 != -1)
    v38 = swift_once(&qword_1000EBCB8, sub_100082798);
  v39 = qword_1000F8A90;
  v40 = static os_log_type_t.error.getter(v38);
  os_log(_:dso:log:type:_:)("didSelectPaymentMethod did fail due to nil paymentMethodUpdateUrl", 65, 2, &_mh_execute_header, v39, v40, _swiftEmptyArrayStorage);

}

uint64_t sub_1000267F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

uint64_t IMBApplePayManager.paymentAuthorizationController(_:didSelectShippingMethod:handler:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100026D64(a1, a2, a3, a4, (SEL *)&selRef_description, "BusinessChat: paymentAuthorizationController: %@, didSelectShippingMethod: %@", 77, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100026828);
}

void sub_100026828(void *a1, void (*a2)(id), uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  objc_class *v37;
  id v38;
  id v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  Class isa;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void *v55;
  void (*v56)(id);
  _QWORD v57[5];
  char v58[24];

  v4 = v3;
  v55 = a1;
  v56 = a2;
  v6 = type metadata accessor for Endpoint(0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  v13 = (uint64_t *)((char *)&v53 - v12);
  v14 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
  v24 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
  if (v24)
  {
    v54 = v10;
    v25 = v4;
    v26 = a3;
    v27 = v24 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl;
    swift_beginAccess(v24 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl, v58, 0, 0);
    v28 = v27;
    v29 = v26;
    v4 = v25;
    sub_100010BA4(v28, (uint64_t)v17, (uint64_t *)&unk_1000ED480);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
      v30 = *(void **)(v24 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_selectedShippingMethod);
      v31 = v55;
      *(_QWORD *)(v24 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_selectedShippingMethod) = v55;
      v32 = v31;

      v33 = *(id *)&v25[OBJC_IVAR____TtC8Business18IMBApplePayManager_imbNetworkBody];
      v34 = sub_1000925CC(v32);
      swift_bridgeObjectRetain(v34);

      v35 = (char *)v13 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
      *v13 = v34;
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v35, v22, v18);
      v36 = (uint64_t)v54;
      sub_10002B4F0((uint64_t)v13, (uint64_t)v54);
      v37 = (objc_class *)type metadata accessor for HttpClient(0);
      v38 = objc_allocWithZone(v37);
      v39 = sub_100031BDC(v36);
      v57[3] = v37;
      v57[4] = &off_1000D78E8;
      v57[0] = v39;
      sub_10002B534((uint64_t)v13);
      v40 = (char *)*sub_100008FA4(v57, (uint64_t)v37);
      v41 = v25;
      swift_retain(v29);
      sub_100035854(v40, v41, v56, v29);

      swift_release(v29);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      sub_100010C40(v57);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  }
  sub_100010A98((uint64_t)v17, (uint64_t *)&unk_1000ED480);
  v42 = *(_QWORD *)&v4[v23];
  if (v42 && (v43 = *(void **)(v42 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest)) != 0)
  {
    swift_retain(v42);
    v44 = objc_msgSend(v43, "paymentSummaryItems");
    v45 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v46 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v45);
    swift_release(v42);

  }
  else
  {
    v46 = _swiftEmptyArrayStorage;
  }
  v47 = objc_allocWithZone((Class)PKPaymentRequestShippingMethodUpdate);
  sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v46);
  v49 = objc_msgSend(v47, "initWithPaymentSummaryItems:", isa);

  v50 = ((uint64_t (*)(id))v56)(v49);
  if (qword_1000EBCB8 != -1)
    v50 = swift_once(&qword_1000EBCB8, sub_100082798);
  v51 = qword_1000F8A90;
  v52 = static os_log_type_t.error.getter(v50);
  os_log(_:dso:log:type:_:)("didSelectShippingMethod did fail due to nil shippingMethodUpdateUrl", 67, 2, &_mh_execute_header, v51, v52, _swiftEmptyArrayStorage);

}

void sub_100026C88(void *a1, int a2, void *a3, void *a4, void *aBlock, SEL *a6, const char *a7, uint64_t a8, void (*a9)(void *, uint64_t, void *))
{
  void *v15;
  id v16;
  id v17;
  id v18;

  v15 = _Block_copy(aBlock);
  _Block_copy(v15);
  v16 = a3;
  v17 = a4;
  v18 = a1;
  sub_10002B37C(v16, v17, (uint64_t)v18, v15, a6, a7, a8, a9);
  _Block_release(v15);
  _Block_release(v15);

}

uint64_t IMBApplePayManager.paymentAuthorizationController(_:didSelectShippingContact:handler:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100026D64(a1, a2, a3, a4, (SEL *)&selRef_description, "BusinessChat: paymentAuthorizationController: %@, didSelectShippingContact: %@", 78, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100026ED0);
}

uint64_t sub_100026D64(void *a1, void *a2, uint64_t a3, uint64_t a4, SEL *a5, const char *a6, uint64_t a7, uint64_t (*a8)(void *, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v12 = qword_1000F8A90;
  v13 = static os_log_type_t.debug.getter();
  v14 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v15 = swift_allocObject(v14, 112, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1000ADFC0;
  v16 = objc_msgSend(a1, "description");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v20 = sub_100009084();
  *(_QWORD *)(v15 + 64) = v20;
  *(_QWORD *)(v15 + 32) = v17;
  *(_QWORD *)(v15 + 40) = v19;
  v21 = objc_msgSend(a2, *a5);
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  *(_QWORD *)(v15 + 96) = &type metadata for String;
  *(_QWORD *)(v15 + 104) = v20;
  *(_QWORD *)(v15 + 72) = v22;
  *(_QWORD *)(v15 + 80) = v24;
  os_log(_:dso:log:type:_:)(a6, a7, 2, &_mh_execute_header, v12, v13, v15);
  swift_bridgeObjectRelease(v15);
  return a8(a2, a3, a4);
}

void sub_100026ED0(void *a1, void (*a2)(id), uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  objc_class *v32;
  id v33;
  id v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void (*v53)(id);
  void *v54;
  uint64_t v55;
  _QWORD *v56;
  id v57;
  Class isa;
  Class v59;
  Class v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(id);
  _QWORD v66[5];
  char v67[24];

  v65 = a2;
  v6 = type metadata accessor for Endpoint(0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  v13 = (uint64_t *)((char *)&v64 - v12);
  v14 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v3;
  v64 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
  v24 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
  if (v24)
  {
    v25 = a3;
    v26 = v24 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl;
    swift_beginAccess(v24 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl, v67, 0, 0);
    v27 = v26;
    v28 = v25;
    sub_100010BA4(v27, (uint64_t)v17, (uint64_t *)&unk_1000ED480);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
      v29 = *(id *)&v23[OBJC_IVAR____TtC8Business18IMBApplePayManager_imbNetworkBody];
      v30 = sub_100092760(a1);
      swift_bridgeObjectRetain(v30);

      v31 = (char *)v13 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
      *v13 = v30;
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v31, v22, v18);
      sub_10002B4F0((uint64_t)v13, (uint64_t)v10);
      v32 = (objc_class *)type metadata accessor for HttpClient(0);
      v33 = objc_allocWithZone(v32);
      v34 = sub_100031BDC((uint64_t)v10);
      v66[3] = v32;
      v66[4] = &off_1000D78E8;
      v66[0] = v34;
      sub_10002B534((uint64_t)v13);
      v35 = (char *)*sub_100008FA4(v66, (uint64_t)v32);
      v36 = v23;
      swift_retain(v28);
      sub_1000369A4(v35, v36, v65, v28);

      swift_release(v28);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      sub_100010C40(v66);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  }
  v37 = sub_100010A98((uint64_t)v17, (uint64_t *)&unk_1000ED480);
  if (qword_1000EBCB8 != -1)
    v37 = swift_once(&qword_1000EBCB8, sub_100082798);
  v38 = qword_1000F8A90;
  v39 = static os_log_type_t.error.getter(v37);
  v40 = (uint64_t)_swiftEmptyArrayStorage;
  os_log(_:dso:log:type:_:)("didSelectShippingContact did fail due to nil shippingContactUpdateUrl", 69, 2, &_mh_execute_header, v38, v39, _swiftEmptyArrayStorage);
  v41 = v23;
  v42 = v64;
  v43 = *(_QWORD *)&v41[v64];
  if (v43)
  {
    v44 = *(void **)(v43 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
    if (v44)
    {
      swift_retain(*(_QWORD *)&v41[v64]);
      v45 = objc_msgSend(v44, "shippingMethods");
      if (v45)
      {
        v46 = v45;
        v47 = sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
        v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);
        swift_release(v43);

        goto LABEL_13;
      }
      swift_release(v43);
    }
    v40 = (uint64_t)_swiftEmptyArrayStorage;
  }
LABEL_13:
  if ((unint64_t)v40 >> 62)
  {
    if (v40 < 0)
      v62 = v40;
    else
      v62 = v40 & 0xFFFFFFFFFFFFFF8;
    v63 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    swift_bridgeObjectRetain(v40);
    v49 = _bridgeCocoaArray<A>(_:)(v62, v63);
    swift_bridgeObjectRelease(v40);
  }
  else
  {
    v48 = swift_bridgeObjectRetain(v40);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v48);
    sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v49 = v40;
  }
  swift_bridgeObjectRelease(v40);
  v50 = *(_QWORD *)&v41[v42];
  if (v50 && (v51 = *(void **)(v50 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest)) != 0)
  {
    swift_retain(v50);
    v52 = objc_msgSend(v51, "shippingMethods");
    v53 = v65;
    if (v52)
    {
      v54 = v52;
      v55 = sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
      v56 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);
      swift_release(v50);

    }
    else
    {
      swift_release(v50);
      v56 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    v56 = _swiftEmptyArrayStorage;
    v53 = v65;
  }
  v57 = objc_allocWithZone((Class)PKPaymentRequestShippingContactUpdate);
  sub_100007D40(&qword_1000F07D0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
  v59 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v49);
  sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
  v60 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v56);
  v61 = objc_msgSend(v57, "initWithErrors:paymentSummaryItems:shippingMethods:", isa, v59, v60);

  v53(v61);
}

UIWindow_optional __swiftcall IMBApplePayManager.presentationWindow(for:)(PKPaymentAuthorizationController a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  Swift::Bool v4;
  objc_class *v5;
  UIWindow_optional result;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_window);
  v3 = v2;
  v5 = (objc_class *)v2;
  result.value.super.super.super.isa = v5;
  result.is_nil = v4;
  return result;
}

void *sub_1000274D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *result;
  void *v8;
  _QWORD v9[6];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
  swift_retain(v2);
  sub_10008B5A8(7);
  swift_release(v2);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizationController);
  if (v3)
  {
    v9[4] = IMBJITAppBundleState.rawValue.getter;
    v9[5] = 0;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_100025AB0;
    v9[3] = &unk_1000D74B0;
    v4 = _Block_copy(v9);
    v5 = v3;
    objc_msgSend(v5, "dismissWithCompletion:", v4);
    _Block_release(v4);

  }
  v6 = v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate, v9, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v8 = result;
    objc_msgSend(result, "paymentRequestDidUpdate:", v1);
    return (void *)swift_unknownObjectRelease(v8);
  }
  return result;
}

void sub_1000275E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v3 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (v4)
  {
    swift_retain(v4);
    v6 = sub_10004CD84(a1);
    v7 = sub_100009D0C(v6);
    swift_release(v4);
    swift_bridgeObjectRelease(v6);
    v8 = *(_QWORD *)(v2 + v3);
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  *(_QWORD *)(v2 + v3) = v7;
  swift_release(v8);
  sub_100023C10();
  v9 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v10 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1000AF070;
  v11 = *(_QWORD *)(v2 + v3);
  if (v11 && (v12 = v11 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState, (*(_BYTE *)(v12 + 8) & 1) == 0))
  {
    v13 = sub_100060F1C(*(_QWORD *)v12);
    v14 = v15;
  }
  else
  {
    v13 = 0;
    v14 = 0;
  }
  *(_QWORD *)(v10 + 56) = &type metadata for String;
  *(_QWORD *)(v10 + 64) = sub_100009084();
  v16 = 7104878;
  if (v14)
    v16 = v13;
  v17 = 0xE300000000000000;
  if (v14)
    v17 = v14;
  *(_QWORD *)(v10 + 32) = v16;
  *(_QWORD *)(v10 + 40) = v17;
  v18 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
  v19 = (void *)static OS_os_log.default.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  os_log(_:dso:log:type:_:)("BusinessChat: Did get paymentState = %@", 39, 2, &_mh_execute_header, v19, v20, v10);
  swift_bridgeObjectRelease(v10);

  v21 = *(_QWORD *)(v2 + v3);
  if (v21)
  {
    v22 = v21 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
    if ((*(_BYTE *)(v22 + 8) & 1) == 0 && *(_QWORD *)v22 == 7)
      sub_1000274D4();
  }
}

void sub_100027798(uint64_t a1, char a2, id a3, uint64_t a4, void *a5)
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  char *v14;
  double v15;
  char *v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  _QWORD v22[4];
  _QWORD v23[4];

  v9 = objc_msgSend(a3, "invalidate");
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    sub_1000250EC(a1);
    sub_10002B57C(a1, 1);
  }
  else
  {
    if (qword_1000EBCB8 != -1)
      v9 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v10 = qword_1000F8A90;
    v11 = static os_log_type_t.default.getter(v9);
    os_log(_:dso:log:type:_:)("Did get successful network request in paymentGatewayUrl", 55, 2, &_mh_execute_header, v10, v11, _swiftEmptyArrayStorage);
    v12 = (objc_class *)type metadata accessor for IMBDelayedAuthResponse(0);
    objc_allocWithZone(v12);
    swift_bridgeObjectRetain(a4);
    sub_10002B570(a1, 0);
    v13 = (char *)sub_10005A5D8(a1, a4);
    if (v13)
    {
      v14 = v13;
      sub_1000090C8(0, &qword_1000ED048, NSTimer_ptr);
      v15 = *(double *)&v14[OBJC_IVAR____TtC8Business22IMBDelayedAuthResponse_delay];
      v23[3] = type metadata accessor for IMBApplePayManager();
      v22[3] = v12;
      v23[0] = a5;
      v22[0] = v14;
      v16 = a5;
      v17 = v14;
      v18 = sub_100024DAC(v23, (uint64_t)"handlePaymentAuthorizationRetryWithTimer:", v22, 0, v15);
      v19 = *(void **)&v16[OBJC_IVAR____TtC8Business18IMBApplePayManager_authorizePaymentRetryTimer];
      *(_QWORD *)&v16[OBJC_IVAR____TtC8Business18IMBApplePayManager_authorizePaymentRetryTimer] = v18;
      v20 = v18;

      v21 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
      objc_msgSend(v21, "addTimer:forMode:", v20, NSDefaultRunLoopMode);

    }
    else
    {
      sub_100024F18(a1);
    }
  }
}

void sub_1000279CC(uint64_t a1, char a2, uint64_t a3, void (*a4)(id), uint64_t a5, void *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  _QWORD v34[3];
  _BYTE v35[8];

  v8 = a1;
  if ((a2 & 1) != 0)
  {
    v19 = swift_errorRetain(a1);
    if (qword_1000EBCB8 != -1)
      v19 = swift_once(&qword_1000EBCB8, sub_100082798);
    v20 = qword_1000F8A90;
    v21 = static os_log_type_t.error.getter(v19);
    v22 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1000AF070;
    swift_getErrorValue(v8, v35, v34);
    v24 = Error.localizedDescription.getter(v34[1], v34[2]);
    v26 = v25;
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    *(_QWORD *)(v23 + 64) = sub_100009084();
    *(_QWORD *)(v23 + 32) = v24;
    *(_QWORD *)(v23 + 40) = v26;
    os_log(_:dso:log:type:_:)("Did get error in network request in paymentMethodUpdateUrl: %@", 62, 2, &_mh_execute_header, v20, v21, v23);
    swift_bridgeObjectRelease(v23);
    a4(a6);
    v27 = (void *)_convertErrorToNSError(_:)(v8);
    v28 = objc_msgSend(v27, "code");

    if (v28 == (id)500)
    {
      v30 = qword_1000F8A90;
      v31 = static os_log_type_t.error.getter(v29);
      os_log(_:dso:log:type:_:)("BusinessChat: dismissing sheet as a 500 response was received", 61, 2, &_mh_execute_header, v30, v31, _swiftEmptyArrayStorage);
      v32 = *(void **)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizationController);
      if (v32)
        objc_msgSend(v32, "dismissWithCompletion:", 0);
    }
    sub_10002B57C(v8, 1);
  }
  else
  {
    if (qword_1000EBCB8 != -1)
      a1 = swift_once(&qword_1000EBCB8, sub_100082798);
    v9 = qword_1000F8A90;
    v10 = static os_log_type_t.default.getter(a1);
    v11 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:type:_:)("Did get successful network request in paymentMethodUpdateUrl", 60, 2, &_mh_execute_header, v9, v10, _swiftEmptyArrayStorage);
    sub_1000275E4(v8);
    v12 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v12)
    {
      v13 = *(void **)(v12 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v13)
      {
        swift_retain(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest));
        v14 = objc_msgSend(v13, "paymentSummaryItems");
        v15 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
        v11 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);
        swift_release(v12);

      }
    }
    v16 = objc_allocWithZone((Class)PKPaymentRequestPaymentMethodUpdate);
    sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
    v33 = objc_msgSend(v16, "initWithPaymentSummaryItems:", isa);

    a4(v33);
  }
}

void sub_100027D04(uint64_t a1, char a2, uint64_t a3, void (*a4)(id))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  Class isa;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  Class v38;
  id v39;
  _QWORD v40[3];
  _BYTE v41[8];

  if ((a2 & 1) != 0)
  {
    v15 = swift_errorRetain(a1);
    if (qword_1000EBCB8 != -1)
      v15 = swift_once(&qword_1000EBCB8, sub_100082798);
    v16 = qword_1000F8A90;
    v17 = static os_log_type_t.error.getter(v15);
    v18 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1000AF070;
    swift_getErrorValue(a1, v41, v40);
    v20 = Error.localizedDescription.getter(v40[1], v40[2]);
    v22 = v21;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_100009084();
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v22;
    os_log(_:dso:log:type:_:)("Did get error in network request in shippingMethodUpdateUrl: %@", 63, 2, &_mh_execute_header, v16, v17, v19);
    swift_bridgeObjectRelease(v19);
    v23 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v23 && (v24 = *(void **)(v23 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest)) != 0)
    {
      swift_retain(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest));
      v25 = objc_msgSend(v24, "paymentSummaryItems");
      v26 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
      v27 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);
      swift_release(v23);

    }
    else
    {
      v27 = _swiftEmptyArrayStorage;
    }
    v28 = objc_allocWithZone((Class)PKPaymentRequestShippingMethodUpdate);
    sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v27);
    v30 = objc_msgSend(v28, "initWithPaymentSummaryItems:", isa);

    objc_msgSend(v30, "setStatus:", 1);
    a4(v30);
    v31 = (void *)_convertErrorToNSError(_:)(a1);
    v32 = objc_msgSend(v31, "code");

    if (v32 == (id)500)
    {
      v34 = qword_1000F8A90;
      v35 = static os_log_type_t.error.getter(v33);
      os_log(_:dso:log:type:_:)("BusinessChat: dismissing sheet as a 500 response was received", 61, 2, &_mh_execute_header, v34, v35, _swiftEmptyArrayStorage);
      v36 = *(void **)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizationController);
      if (v36)
        objc_msgSend(v36, "dismissWithCompletion:", 0);
    }

    sub_10002B57C(a1, 1);
  }
  else
  {
    sub_1000275E4(a1);
    if (qword_1000EBCB8 != -1)
      v7 = swift_once(&qword_1000EBCB8, sub_100082798);
    v8 = qword_1000F8A90;
    v9 = static os_log_type_t.default.getter(v7);
    v10 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:type:_:)("Did get successful network request in shippingMethodUpdateUrl", 61, 2, &_mh_execute_header, v8, v9, _swiftEmptyArrayStorage);
    v11 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v11)
    {
      v12 = *(void **)(v11 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v12)
      {
        swift_retain(v11);
        v13 = objc_msgSend(v12, "paymentSummaryItems");
        v14 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
        v10 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);
        swift_release(v11);

      }
      else
      {
        v10 = _swiftEmptyArrayStorage;
      }
    }
    v37 = objc_allocWithZone((Class)PKPaymentRequestShippingMethodUpdate);
    sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v38 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v10);
    v39 = objc_msgSend(v37, "initWithPaymentSummaryItems:", v38);

    a4(v39);
  }
}

void sub_100028138(uint64_t a1, char a2, uint64_t a3, void (*a4)(id))
{
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  Class v46;
  Class v47;
  Class v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  Class isa;
  Class v58;
  Class v59;
  id v60;
  _QWORD v61[3];
  _BYTE v62[8];

  if ((a2 & 1) == 0)
  {
    sub_1000275E4(a1);
    v7 = sub_10004CD84(a1);
    v8 = sub_100028FCC(v7);
    v9 = swift_bridgeObjectRelease(v7);
    if (qword_1000EBCB8 != -1)
      v9 = swift_once(&qword_1000EBCB8, sub_100082798);
    v10 = qword_1000F8A90;
    v11 = static os_log_type_t.default.getter(v9);
    v12 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:type:_:)("Did get successful network request in shippingContactUpdateUrl", 62, 2, &_mh_execute_header, v10, v11, _swiftEmptyArrayStorage);
    v13 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
    v14 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v14)
    {
      v15 = *(void **)(v14 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v15)
      {
        swift_retain(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest));
        v16 = objc_msgSend(v15, "paymentSummaryItems");
        v17 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
        v12 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);
        swift_release(v14);

        v14 = *(_QWORD *)(a3 + v13);
        if (!v14)
          goto LABEL_31;
      }
      else
      {
        v12 = _swiftEmptyArrayStorage;
      }
      v41 = *(void **)(v14 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v41)
      {
        swift_retain(v14);
        v42 = objc_msgSend(v41, "shippingMethods");
        if (v42)
        {
          v43 = v42;
          v44 = sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
          v40 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, v44);
          swift_release(v14);

          goto LABEL_32;
        }
        swift_release(v14);
      }
LABEL_31:
      v40 = _swiftEmptyArrayStorage;
      goto LABEL_32;
    }
    v40 = _swiftEmptyArrayStorage;
LABEL_32:
    v56 = objc_allocWithZone((Class)PKPaymentRequestShippingContactUpdate);
    sub_100007D40(&qword_1000F07D0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v8);
    sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v58 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v12);
    sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
    v59 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v40);
    v60 = objc_msgSend(v56, "initWithErrors:paymentSummaryItems:shippingMethods:", isa, v58, v59);

    a4(v60);
    return;
  }
  v18 = swift_errorRetain(a1);
  if (qword_1000EBCB8 != -1)
    v18 = swift_once(&qword_1000EBCB8, sub_100082798);
  v19 = qword_1000F8A90;
  v20 = static os_log_type_t.error.getter(v18);
  v21 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1000AF070;
  swift_getErrorValue(a1, v62, v61);
  v23 = Error.localizedDescription.getter(v61[1], v61[2]);
  v25 = v24;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_100009084();
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v25;
  os_log(_:dso:log:type:_:)("Did get error in network request in shippingContactUpdateUrl: %@", 64, 2, &_mh_execute_header, v19, v20, v22);
  swift_bridgeObjectRelease(v22);
  v26 = sub_100007D40((uint64_t *)&unk_1000ED030);
  v27 = swift_allocObject(v26, 40, 7);
  *(_OWORD *)(v27 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v27 + 32) = a1;
  v28 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
  v29 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (v29 && (v30 = *(void **)(v29 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest)) != 0)
  {
    sub_10002B570(a1, 1);
    swift_retain(v29);
    v31 = objc_msgSend(v30, "paymentSummaryItems");
    v32 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v33 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);
    swift_release(v29);

    v34 = *(_QWORD *)(a3 + v28);
    if (!v34)
      goto LABEL_25;
  }
  else
  {
    swift_errorRetain(a1);
    v33 = _swiftEmptyArrayStorage;
    v34 = *(_QWORD *)(a3 + v28);
    if (!v34)
      goto LABEL_25;
  }
  v35 = *(void **)(v34 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
  if (v35)
  {
    swift_retain(v34);
    v36 = objc_msgSend(v35, "shippingMethods");
    if (v36)
    {
      v37 = v36;
      v38 = sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
      v39 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v38);
      swift_release(v34);

      goto LABEL_26;
    }
  }
  else
  {
    swift_retain(v34);
  }
  swift_release(v34);
LABEL_25:
  v39 = _swiftEmptyArrayStorage;
LABEL_26:
  v45 = objc_allocWithZone((Class)PKPaymentRequestShippingContactUpdate);
  sub_100007D40(&qword_1000F07D0);
  v46 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v27);
  sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
  v47 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v33);
  sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
  v48 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v39);
  v49 = objc_msgSend(v45, "initWithErrors:paymentSummaryItems:shippingMethods:", v46, v47, v48);

  a4(v49);
  v50 = (void *)_convertErrorToNSError(_:)(a1);
  v51 = objc_msgSend(v50, "code");

  if (v51 == (id)500)
  {
    v53 = qword_1000F8A90;
    v54 = static os_log_type_t.error.getter(v52);
    os_log(_:dso:log:type:_:)("BusinessChat: dismissing sheet as a 500 response was received", 61, 2, &_mh_execute_header, v53, v54, _swiftEmptyArrayStorage);
    v55 = *(void **)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizationController);
    if (v55)
      objc_msgSend(v55, "dismissWithCompletion:", 0);
  }

  sub_10002B57C(a1, 1);
}

void sub_100028798(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

void sub_1000287E8(void *a1, _QWORD *a2)
{
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  NSString v11;

  v4 = a2[6];
  swift_bridgeObjectRetain(v4);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  objc_msgSend(a1, "setTitle:", v5);

  v6 = a2[6];
  swift_bridgeObjectRetain(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  objc_msgSend(a1, "setSummaryText:", v7);

  v8 = a2[6];
  swift_bridgeObjectRetain(v8);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  objc_msgSend(a1, "setAccessibilityLabel:", v9);

  objc_msgSend(a1, "setSubtitle:", a2[7]);
  v10 = a2[11];
  swift_bridgeObjectRetain(v10);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  objc_msgSend(a1, "setSubcaption:", v11);

}

uint64_t sub_10002891C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100028940(char a1)
{
  uint64_t v1;

  sub_1000243CC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100028948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100028958(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for IMBApplePayManager()
{
  return objc_opt_self(_TtC8Business18IMBApplePayManager);
}

uint64_t sub_100028980(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

ValueMetadata *type metadata accessor for IMBApplePayManager.ClientErrorCode()
{
  return &type metadata for IMBApplePayManager.ClientErrorCode;
}

void *sub_1000289A0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void (*v62)(void *);
  uint64_t v63;
  void *v64;
  uint64_t Strong;
  _BYTE v66[24];

  v3 = v2;
  v5 = a1;
  if (objc_msgSend(a1, "status"))
  {
    if (objc_msgSend(v5, "status") == (id)1)
    {
      if ((unint64_t)a2 >> 62)
      {
        if (a2 < 0)
          v43 = a2;
        else
          v43 = a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v44 = _CocoaArrayWrapper.endIndex.getter(v43);
        swift_bridgeObjectRelease(a2);
        if (v44)
          goto LABEL_5;
      }
      else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
      v45 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
      if (v45)
      {
        v46 = v45 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
        *(_QWORD *)v46 = 4;
        *(_BYTE *)(v46 + 8) = 0;
      }
      v47 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
      swift_retain(v47);
      sub_10008B5A8(4);
      v48 = swift_release(v47);
      if (qword_1000EBCB8 != -1)
        v48 = swift_once(&qword_1000EBCB8, sub_100082798);
      v49 = qword_1000F8A90;
      v50 = static os_log_type_t.default.getter(v48);
      os_log(_:dso:log:type:_:)("BusinessChat: UpdateTransactionStatus Failure: payment was declined and no errors were received", 95, 2, &_mh_execute_header, v49, v50, _swiftEmptyArrayStorage);
LABEL_35:
      v59 = v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate;
      swift_beginAccess(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate, v66, 0, 0);
      result = (void *)swift_unknownObjectWeakLoadStrong(v59);
      if (!result)
        goto LABEL_37;
      goto LABEL_36;
    }
LABEL_5:
    if (objc_msgSend(v5, "status") == (id)1)
    {
      if ((unint64_t)a2 >> 62)
      {
        if (a2 < 0)
          v51 = a2;
        else
          v51 = a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v52 = _CocoaArrayWrapper.endIndex.getter(v51);
        swift_bridgeObjectRelease(a2);
        if (v52)
          goto LABEL_8;
      }
      else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_8:
        if (qword_1000EBCB8 != -1)
          swift_once(&qword_1000EBCB8, sub_100082798);
        v6 = qword_1000F8A90;
        v7 = static os_log_type_t.error.getter();
        result = (void *)os_log(_:dso:log:type:_:)("BusinessChat: Payment was not authorized due to Apple Pay errors. Payment can be retried after errors are addressed in the payment sheet.", 137, 2, &_mh_execute_header, v6, v7, _swiftEmptyArrayStorage);
        goto LABEL_37;
      }
    }
    v53 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v53)
    {
      v54 = v53 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
      *(_QWORD *)v54 = 2;
      *(_BYTE *)(v54 + 8) = 0;
    }
    v55 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
    swift_retain(v55);
    sub_10008B5A8(2);
    v56 = swift_release(v55);
    if (qword_1000EBCB8 != -1)
      v56 = swift_once(&qword_1000EBCB8, sub_100082798);
    v57 = qword_1000F8A90;
    v58 = static os_log_type_t.default.getter(v56);
    os_log(_:dso:log:type:_:)("BusinessChat: UpdateTransactionStatus Expired: payment has expired and is no longer usable", 90, 2, &_mh_execute_header, v57, v58, _swiftEmptyArrayStorage);
    goto LABEL_35;
  }
  v64 = v5;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentExpireTimer), "invalidate");
  sub_100025470(a2, 0, 0);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (v9)
  {
    v10 = v9 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
    *(_QWORD *)v10 = 3;
    *(_BYTE *)(v10 + 8) = 0;
  }
  v11 = OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel;
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
  swift_retain(v12);
  sub_10008B5A8(3);
  swift_release(v12);
  v13 = OBJC_IVAR____TtC8Business18IMBApplePayManager_imbMessage;
  v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                              + OBJC_IVAR____TtC8Business18IMBApplePayManager_imbMessage), "rootKey"));
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  LOBYTE(v14) = objc_msgSend(*(id *)(v3 + v13), "isFromMe");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCLoggingEventNameSuccess);
  v20 = v19;
  sub_100085D10(v15, v17, (char)v14, v18, v19, (uint64_t)objc_msgSend(*(id *)(v3 + v13), "version"));
  swift_bridgeObjectRelease(v17);
  v21 = swift_bridgeObjectRelease(v20);
  if (qword_1000EBCB8 != -1)
    v21 = swift_once(&qword_1000EBCB8, sub_100082798);
  v22 = qword_1000F8A90;
  v23 = static os_log_type_t.default.getter(v21);
  v24 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v25 = swift_allocObject(v24, 112, 7);
  v26 = *(_QWORD **)(v3 + v11);
  *(_OWORD *)(v25 + 16) = xmmword_1000ADFC0;
  v28 = v26[5];
  v27 = v26[6];
  *(_QWORD *)(v25 + 56) = &type metadata for String;
  v29 = sub_100009084();
  *(_QWORD *)(v25 + 64) = v29;
  *(_QWORD *)(v25 + 32) = v28;
  *(_QWORD *)(v25 + 40) = v27;
  v30 = (void *)v26[7];
  swift_bridgeObjectRetain(v27);
  v31 = objc_msgSend(v30, "string");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  *(_QWORD *)(v25 + 96) = &type metadata for String;
  *(_QWORD *)(v25 + 104) = v29;
  *(_QWORD *)(v25 + 72) = v32;
  *(_QWORD *)(v25 + 80) = v34;
  os_log(_:dso:log:type:_:)("BusinessChat: UpdateTransactionStatus Success: payment was authorized and no errors were received", 97, 2, &_mh_execute_header, v22, v23, v25);
  swift_bridgeObjectRelease(v25);
  v35 = swift_allocObject(v24, 72, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1000AF070;
  v36 = v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate, v66, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v36);
  v37 = sub_100007D40(&qword_1000ED058);
  v38 = String.init<A>(describing:)(&Strong, v37);
  *(_QWORD *)(v35 + 56) = &type metadata for String;
  *(_QWORD *)(v35 + 64) = v29;
  *(_QWORD *)(v35 + 32) = v38;
  *(_QWORD *)(v35 + 40) = v39;
  v40 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
  v41 = (void *)static OS_os_log.default.getter(v40);
  v42 = static os_log_type_t.default.getter(v41);
  os_log(_:dso:log:type:_:)("BusinessChat: IMBApplePayManager handlePaymentAuthorizationSuccess delegate = %@", 80, 2, &_mh_execute_header, v41, v42, v35);
  swift_bridgeObjectRelease(v35);

  result = (void *)swift_unknownObjectWeakLoadStrong(v36);
  v5 = v64;
  if (result)
  {
LABEL_36:
    v60 = result;
    objc_msgSend(result, "paymentRequestDidUpdate:", v3);
    result = (void *)swift_unknownObjectRelease(v60);
  }
LABEL_37:
  v61 = v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion;
  v62 = *(void (**)(void *))(v3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion);
  if (v62)
  {
    v63 = *(_QWORD *)(v61 + 8);
    swift_retain(v63);
    v62(v5);
    return (void *)sub_100028980((uint64_t)v62, v63);
  }
  return result;
}

_QWORD *sub_100028FCC(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  Class isa;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  _BYTE v38[32];
  _BYTE v39[24];
  uint64_t v40;

  if (!*(_QWORD *)(a1 + 16))
    return _swiftEmptyArrayStorage;
  v2 = sub_10004F068(0x73726F727265, 0xE600000000000000);
  if ((v3 & 1) == 0)
    return _swiftEmptyArrayStorage;
  sub_100010BA4(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v38, (uint64_t *)&unk_1000EEB60);
  sub_10002B588((uint64_t)v38, (uint64_t)v39);
  if (!v40)
  {
    sub_100010A98((uint64_t)v39, (uint64_t *)&unk_1000EEB60);
    return _swiftEmptyArrayStorage;
  }
  v4 = sub_100007D40(&qword_1000ED040);
  if ((swift_dynamicCast(&v37, v39, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    return _swiftEmptyArrayStorage;
  v5 = v37;
  v35 = *(_QWORD *)(v37 + 16);
  if (!v35)
  {
    swift_bridgeObjectRelease(v37);
    return _swiftEmptyArrayStorage;
  }
  v6 = 0;
  v7 = _swiftEmptyArrayStorage;
  v8 = &type metadata for String;
  v34 = v37;
  do
  {
    v9 = swift_bridgeObjectRetain(*(_QWORD *)(v5 + 8 * v6 + 32));
    v10 = sub_100022E54(v9);
    if (v10)
    {
      v11 = v10;
      static String._unconditionallyBridgeFromObjectiveC(_:)(PKPaymentErrorDomain);
      v13 = v12;
      v14 = qword_1000B0148[*(char *)(v11 + 16)];
      sub_100022364();
      v16 = v15;
      v17 = objc_allocWithZone((Class)NSError);
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v16);
      v20 = objc_msgSend(v17, "initWithDomain:code:userInfo:", v18, v14, isa);

      v22 = v8;
      if (qword_1000EBCB8 != -1)
        v21 = swift_once(&qword_1000EBCB8, sub_100082798);
      v23 = qword_1000F8A90;
      v24 = static os_log_type_t.default.getter(v21);
      v25 = sub_100007D40((uint64_t *)&unk_1000ECE50);
      v26 = swift_allocObject(v25, 72, 7);
      *(_OWORD *)(v26 + 16) = xmmword_1000AF070;
      v36 = v20;
      v27 = objc_msgSend(v20, "debugDescription");
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      *(_QWORD *)(v26 + 56) = v22;
      *(_QWORD *)(v26 + 64) = sub_100009084();
      *(_QWORD *)(v26 + 32) = v28;
      *(_QWORD *)(v26 + 40) = v30;
      os_log(_:dso:log:type:_:)("BusinessChat: ApplePayError = %@", 32, 2, &_mh_execute_header, v23, v24, v26);
      swift_bridgeObjectRelease(v26);
      if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        v7 = sub_100038890(0, v7[2] + 1, 1, v7);
      v32 = v7[2];
      v31 = v7[3];
      v8 = v22;
      if (v32 >= v31 >> 1)
        v7 = sub_100038890((_QWORD *)(v31 > 1), v32 + 1, 1, v7);
      v7[2] = v32 + 1;
      v7[v32 + 4] = v36;
      swift_release(v11);
      v5 = v34;
    }
    ++v6;
  }
  while (v35 != v6);
  swift_bridgeObjectRelease(v5);
  return v7;
}

void sub_100029320(void *a1, char *a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  objc_class *v37;
  id v38;
  id v39;
  char *v40;
  char *v41;
  id v42;
  id v43;
  Class isa;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  Class v49;
  id v50;
  void *v51;
  uint64_t v52;
  char *v53;
  _QWORD v54[3];
  uint64_t v55;
  _UNKNOWN **v56;
  _OWORD v57[2];

  v51 = a1;
  v5 = type metadata accessor for Endpoint(0);
  v7 = __chkstk_darwin(v5, v6);
  v52 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  v11 = (uint64_t *)((char *)&v51 - v10);
  v12 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v12, v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  v53 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject(&unk_1000D7510, 24, 7);
  *(_QWORD *)(v20 + 16) = a3;
  v21 = (uint64_t (**)())&a2[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion];
  v22 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion];
  v23 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion + 8];
  *v21 = sub_10002B6E0;
  v21[1] = (uint64_t (*)())v20;
  _Block_copy(a3);
  swift_retain(v20);
  sub_100028980(v22, v23);
  sub_1000090C8(0, &qword_1000ED048, NSTimer_ptr);
  v55 = type metadata accessor for IMBApplePayManager();
  v54[0] = a2;
  memset(v57, 0, sizeof(v57));
  v24 = a2;
  v25 = sub_100024DAC(v54, (uint64_t)"extendApplePayTimeout", v57, 0, 29.0);
  v26 = *(void **)&v24[OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayTryAgainTimer];
  *(_QWORD *)&v24[OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayTryAgainTimer] = v25;
  v27 = v25;

  v28 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  objc_msgSend(v28, "addTimer:forMode:", v27, NSDefaultRunLoopMode);

  v29 = *(_QWORD *)&v24[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
  if (!v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    goto LABEL_6;
  }
  v30 = v29 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl;
  swift_beginAccess(v29 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl, v57, 0, 0);
  sub_100010BA4(v30, (uint64_t)v15, (uint64_t *)&unk_1000ED480);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
LABEL_6:
    sub_100010A98((uint64_t)v15, (uint64_t *)&unk_1000ED480);
    v43 = objc_allocWithZone((Class)PKPaymentAuthorizationResult);
    sub_100007D40(&qword_1000F07D0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v45 = objc_msgSend(v43, "initWithStatus:errors:", 1, isa, v51);

    ((void (**)(_QWORD, id))a3)[2](a3, v45);
    swift_release(v20);

    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v53, v15, v16);
  swift_retain(v29);
  v31 = sub_10000D654();
  v32 = swift_release(v29);
  if (v31)
  {
    v33 = *(id *)&v24[OBJC_IVAR____TtC8Business18IMBApplePayManager_imbNetworkBody];
    v34 = sub_100092200(v51);
    swift_bridgeObjectRetain(v34);

    v35 = (char *)v11 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
    *v11 = v34;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v35, v53, v16);
    v36 = v52;
    sub_10002B4F0((uint64_t)v11, v52);
    v37 = (objc_class *)type metadata accessor for HttpClient(0);
    v38 = objc_allocWithZone(v37);
    swift_bridgeObjectRetain(v34);
    v39 = sub_100031BDC(v36);
    v55 = (uint64_t)v37;
    v56 = &off_1000D78E8;
    v54[0] = v39;
    sub_10002B534((uint64_t)v11);
    v40 = (char *)*sub_100008FA4(v54, (uint64_t)v37);
    v41 = v24;
    v42 = v27;
    swift_bridgeObjectRetain(v34);
    sub_100033950(v40, v42, v34, v41);

    swift_bridgeObjectRelease_n(v34, 2);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);
    sub_100010C40(v54);
  }
  else
  {
    if (qword_1000EBCB8 != -1)
      v32 = swift_once(&qword_1000EBCB8, sub_100082798);
    v46 = qword_1000F8A90;
    v47 = static os_log_type_t.error.getter(v32);
    os_log(_:dso:log:type:_:)("BusinessChat: this message is no longer valid at authorization time", 67, 2, &_mh_execute_header, v46, v47, _swiftEmptyArrayStorage, v51);
    v48 = objc_allocWithZone((Class)PKPaymentAuthorizationResult);
    sub_100007D40(&qword_1000F07D0);
    v49 = Array._bridgeToObjectiveC()().super.isa;
    v50 = objc_msgSend(v48, "initWithStatus:errors:", 1, v49);

    ((void (**)(_QWORD, id))a3)[2](a3, v50);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);
  }
  swift_release(v20);
}

void sub_100029860(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  Class isa;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  _QWORD v33[3];
  _BYTE v34[8];

  v7 = a1;
  if ((a2 & 1) != 0)
  {
    v18 = swift_errorRetain(a1);
    if (qword_1000EBCB8 != -1)
      v18 = swift_once(&qword_1000EBCB8, sub_100082798);
    v19 = qword_1000F8A90;
    v20 = static os_log_type_t.error.getter(v18);
    v21 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v22 = swift_allocObject(v21, 72, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1000AF070;
    swift_getErrorValue(v7, v34, v33);
    v23 = Error.localizedDescription.getter(v33[1], v33[2]);
    v25 = v24;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    *(_QWORD *)(v22 + 64) = sub_100009084();
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = v25;
    os_log(_:dso:log:type:_:)("Did get error in network request in paymentMethodUpdateUrl: %@", 62, 2, &_mh_execute_header, v19, v20, v22);
    swift_bridgeObjectRelease(v22);
    (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a5, a4);
    v26 = (void *)_convertErrorToNSError(_:)(v7);
    v27 = objc_msgSend(v26, "code");

    if (v27 == (id)500)
    {
      v29 = qword_1000F8A90;
      v30 = static os_log_type_t.error.getter(v28);
      os_log(_:dso:log:type:_:)("BusinessChat: dismissing sheet as a 500 response was received", 61, 2, &_mh_execute_header, v29, v30, _swiftEmptyArrayStorage);
      v31 = *(void **)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizationController);
      if (v31)
        objc_msgSend(v31, "dismissWithCompletion:", 0);
    }
    sub_10002B57C(v7, 1);
  }
  else
  {
    if (qword_1000EBCB8 != -1)
      a1 = swift_once(&qword_1000EBCB8, sub_100082798);
    v8 = qword_1000F8A90;
    v9 = static os_log_type_t.default.getter(a1);
    v10 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:type:_:)("Did get successful network request in paymentMethodUpdateUrl", 60, 2, &_mh_execute_header, v8, v9, _swiftEmptyArrayStorage);
    sub_1000275E4(v7);
    v11 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v11)
    {
      v12 = *(void **)(v11 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v12)
      {
        swift_retain(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest));
        v13 = objc_msgSend(v12, "paymentSummaryItems");
        v14 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
        v10 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);
        swift_release(v11);

      }
    }
    v15 = objc_allocWithZone((Class)PKPaymentRequestPaymentMethodUpdate);
    sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v10);
    v32 = objc_msgSend(v15, "initWithPaymentSummaryItems:", isa);

    (*(void (**)(uint64_t, id))(a5 + 16))(a5, v32);
  }
}

void sub_100029B98(void *a1, char *a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  Class isa;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  objc_class *v31;
  id v32;
  id v33;
  char *v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[5];
  char v43[24];

  v6 = type metadata accessor for Endpoint(0);
  v8 = __chkstk_darwin(v6, v7);
  v41 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  v12 = (uint64_t *)((char *)&v40 - v11);
  v13 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = objc_allocWithZone((Class)PKPaymentRequestPaymentMethodUpdate);
  _Block_copy(a3);
  sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v22, "initWithPaymentSummaryItems:", isa);

  v25 = *(id *)&a2[OBJC_IVAR____TtC8Business18IMBApplePayManager_imbNetworkBody];
  v26 = sub_10009231C(a1);
  swift_bridgeObjectRetain(v26);

  v27 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
  if (v27)
  {
    v28 = v27 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl;
    swift_beginAccess(v27 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl, v43, 0, 0);
    sub_100010BA4(v28, (uint64_t)v16, (uint64_t *)&unk_1000ED480);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v17);
      v29 = (char *)v12 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
      *v12 = v26;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v29, v21, v17);
      v30 = v41;
      sub_10002B4F0((uint64_t)v12, v41);
      v31 = (objc_class *)type metadata accessor for HttpClient(0);
      v32 = objc_allocWithZone(v31);
      v33 = sub_100031BDC(v30);
      v42[3] = v31;
      v42[4] = &off_1000D78E8;
      v42[0] = v33;
      sub_10002B534((uint64_t)v12);
      v34 = (char *)*sub_100008FA4(v42, (uint64_t)v31);
      _Block_copy(a3);
      v35 = a2;
      v36 = v24;
      sub_1000340CC(v34, v35, v36, a3);
      _Block_release(a3);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      sub_100010C40(v42);
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
  }
  swift_bridgeObjectRelease(v26);
  sub_100010A98((uint64_t)v16, (uint64_t *)&unk_1000ED480);
  v37 = ((uint64_t (**)(_QWORD, id))a3)[2](a3, v24);
  if (qword_1000EBCB8 != -1)
    v37 = swift_once(&qword_1000EBCB8, sub_100082798);
  v38 = qword_1000F8A90;
  v39 = static os_log_type_t.error.getter(v37);
  os_log(_:dso:log:type:_:)("didSelectPaymentMethod did fail due to nil paymentMethodUpdateUrl", 65, 2, &_mh_execute_header, v38, v39, _swiftEmptyArrayStorage);

LABEL_8:
  _Block_release(a3);
}

void sub_100029F2C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  Class isa;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  Class v38;
  id v39;
  _QWORD v40[3];
  _BYTE v41[8];

  if ((a2 & 1) != 0)
  {
    v15 = swift_errorRetain(a1);
    if (qword_1000EBCB8 != -1)
      v15 = swift_once(&qword_1000EBCB8, sub_100082798);
    v16 = qword_1000F8A90;
    v17 = static os_log_type_t.error.getter(v15);
    v18 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1000AF070;
    swift_getErrorValue(a1, v41, v40);
    v20 = Error.localizedDescription.getter(v40[1], v40[2]);
    v22 = v21;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_100009084();
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v22;
    os_log(_:dso:log:type:_:)("Did get error in network request in shippingMethodUpdateUrl: %@", 63, 2, &_mh_execute_header, v16, v17, v19);
    swift_bridgeObjectRelease(v19);
    v23 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v23 && (v24 = *(void **)(v23 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest)) != 0)
    {
      swift_retain(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest));
      v25 = objc_msgSend(v24, "paymentSummaryItems");
      v26 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
      v27 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);
      swift_release(v23);

    }
    else
    {
      v27 = _swiftEmptyArrayStorage;
    }
    v28 = objc_allocWithZone((Class)PKPaymentRequestShippingMethodUpdate);
    sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v27);
    v30 = objc_msgSend(v28, "initWithPaymentSummaryItems:", isa);

    objc_msgSend(v30, "setStatus:", 1);
    (*(void (**)(uint64_t, id))(a4 + 16))(a4, v30);
    v31 = (void *)_convertErrorToNSError(_:)(a1);
    v32 = objc_msgSend(v31, "code");

    if (v32 == (id)500)
    {
      v34 = qword_1000F8A90;
      v35 = static os_log_type_t.error.getter(v33);
      os_log(_:dso:log:type:_:)("BusinessChat: dismissing sheet as a 500 response was received", 61, 2, &_mh_execute_header, v34, v35, _swiftEmptyArrayStorage);
      v36 = *(void **)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizationController);
      if (v36)
        objc_msgSend(v36, "dismissWithCompletion:", 0);
    }

    sub_10002B57C(a1, 1);
  }
  else
  {
    sub_1000275E4(a1);
    if (qword_1000EBCB8 != -1)
      v7 = swift_once(&qword_1000EBCB8, sub_100082798);
    v8 = qword_1000F8A90;
    v9 = static os_log_type_t.default.getter(v7);
    v10 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:type:_:)("Did get successful network request in shippingMethodUpdateUrl", 61, 2, &_mh_execute_header, v8, v9, _swiftEmptyArrayStorage);
    v11 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v11)
    {
      v12 = *(void **)(v11 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v12)
      {
        swift_retain(v11);
        v13 = objc_msgSend(v12, "paymentSummaryItems");
        v14 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
        v10 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);
        swift_release(v11);

      }
      else
      {
        v10 = _swiftEmptyArrayStorage;
      }
    }
    v37 = objc_allocWithZone((Class)PKPaymentRequestShippingMethodUpdate);
    sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v38 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v10);
    v39 = objc_msgSend(v37, "initWithPaymentSummaryItems:", v38);

    (*(void (**)(uint64_t, id))(a4 + 16))(a4, v39);
  }
}

void sub_10002A364(void *a1, char *a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (**v25)(_QWORD, _QWORD);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  objc_class *v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  Class isa;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void *v51;
  _QWORD v52[5];
  char v53[24];

  v51 = a1;
  v5 = type metadata accessor for Endpoint(0);
  v7 = __chkstk_darwin(v5, v6);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  v12 = (uint64_t *)((char *)&v50 - v11);
  v13 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
  v23 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
  if (v23)
  {
    v50 = v9;
    v24 = a2;
    v25 = a3;
    v26 = v23 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl;
    swift_beginAccess(v23 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl, v53, 0, 0);
    v27 = v26;
    a3 = v25;
    a2 = v24;
    sub_100010BA4(v27, (uint64_t)v16, (uint64_t *)&unk_1000ED480);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v17);
      v28 = *(void **)(v23 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_selectedShippingMethod);
      v29 = v51;
      *(_QWORD *)(v23 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_selectedShippingMethod) = v51;
      _Block_copy(a3);
      v30 = v29;

      v31 = *(id *)&v24[OBJC_IVAR____TtC8Business18IMBApplePayManager_imbNetworkBody];
      v32 = sub_1000925CC(v30);
      swift_bridgeObjectRetain(v32);

      v33 = (char *)v12 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
      *v12 = v32;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v33, v21, v17);
      v34 = (uint64_t)v50;
      sub_10002B4F0((uint64_t)v12, (uint64_t)v50);
      v35 = (objc_class *)type metadata accessor for HttpClient(0);
      v36 = objc_allocWithZone(v35);
      v37 = sub_100031BDC(v34);
      v52[3] = v35;
      v52[4] = &off_1000D78E8;
      v52[0] = v37;
      sub_10002B534((uint64_t)v12);
      v38 = (char *)*sub_100008FA4(v52, (uint64_t)v35);
      _Block_copy(a3);
      sub_100035078(v38, v24, a3);
      _Block_release(a3);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      sub_100010C40(v52);
      goto LABEL_12;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
  }
  _Block_copy(a3);
  sub_100010A98((uint64_t)v16, (uint64_t *)&unk_1000ED480);
  v39 = *(_QWORD *)&a2[v22];
  if (v39 && (v40 = *(void **)(v39 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest)) != 0)
  {
    swift_retain(v39);
    v41 = objc_msgSend(v40, "paymentSummaryItems");
    v42 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v43 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, v42);
    swift_release(v39);

  }
  else
  {
    v43 = _swiftEmptyArrayStorage;
  }
  v44 = objc_allocWithZone((Class)PKPaymentRequestShippingMethodUpdate);
  sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v43);
  v46 = objc_msgSend(v44, "initWithPaymentSummaryItems:", isa);

  v47 = ((uint64_t (**)(_QWORD, id))a3)[2](a3, v46);
  if (qword_1000EBCB8 != -1)
    v47 = swift_once(&qword_1000EBCB8, sub_100082798);
  v48 = qword_1000F8A90;
  v49 = static os_log_type_t.error.getter(v47);
  os_log(_:dso:log:type:_:)("didSelectShippingMethod did fail due to nil shippingMethodUpdateUrl", 67, 2, &_mh_execute_header, v48, v49, _swiftEmptyArrayStorage);

LABEL_12:
  _Block_release(a3);
}

void sub_10002A794(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  Class v46;
  Class v47;
  Class v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  Class isa;
  Class v58;
  Class v59;
  id v60;
  _QWORD v61[3];
  _BYTE v62[8];

  if ((a2 & 1) == 0)
  {
    sub_1000275E4(a1);
    v7 = sub_10004CD84(a1);
    v8 = sub_100028FCC(v7);
    v9 = swift_bridgeObjectRelease(v7);
    if (qword_1000EBCB8 != -1)
      v9 = swift_once(&qword_1000EBCB8, sub_100082798);
    v10 = qword_1000F8A90;
    v11 = static os_log_type_t.default.getter(v9);
    v12 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:type:_:)("Did get successful network request in shippingContactUpdateUrl", 62, 2, &_mh_execute_header, v10, v11, _swiftEmptyArrayStorage);
    v13 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
    v14 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v14)
    {
      v15 = *(void **)(v14 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v15)
      {
        swift_retain(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest));
        v16 = objc_msgSend(v15, "paymentSummaryItems");
        v17 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
        v12 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);
        swift_release(v14);

        v14 = *(_QWORD *)(a3 + v13);
        if (!v14)
          goto LABEL_31;
      }
      else
      {
        v12 = _swiftEmptyArrayStorage;
      }
      v41 = *(void **)(v14 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v41)
      {
        swift_retain(v14);
        v42 = objc_msgSend(v41, "shippingMethods");
        if (v42)
        {
          v43 = v42;
          v44 = sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
          v40 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, v44);
          swift_release(v14);

          goto LABEL_32;
        }
        swift_release(v14);
      }
LABEL_31:
      v40 = _swiftEmptyArrayStorage;
      goto LABEL_32;
    }
    v40 = _swiftEmptyArrayStorage;
LABEL_32:
    v56 = objc_allocWithZone((Class)PKPaymentRequestShippingContactUpdate);
    sub_100007D40(&qword_1000F07D0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v8);
    sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v58 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v12);
    sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
    v59 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v40);
    v60 = objc_msgSend(v56, "initWithErrors:paymentSummaryItems:shippingMethods:", isa, v58, v59);

    (*(void (**)(uint64_t, id))(a4 + 16))(a4, v60);
    return;
  }
  v18 = swift_errorRetain(a1);
  if (qword_1000EBCB8 != -1)
    v18 = swift_once(&qword_1000EBCB8, sub_100082798);
  v19 = qword_1000F8A90;
  v20 = static os_log_type_t.error.getter(v18);
  v21 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1000AF070;
  swift_getErrorValue(a1, v62, v61);
  v23 = Error.localizedDescription.getter(v61[1], v61[2]);
  v25 = v24;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_100009084();
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v25;
  os_log(_:dso:log:type:_:)("Did get error in network request in shippingContactUpdateUrl: %@", 64, 2, &_mh_execute_header, v19, v20, v22);
  swift_bridgeObjectRelease(v22);
  v26 = sub_100007D40((uint64_t *)&unk_1000ED030);
  v27 = swift_allocObject(v26, 40, 7);
  *(_OWORD *)(v27 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v27 + 32) = a1;
  v28 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
  v29 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (v29 && (v30 = *(void **)(v29 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest)) != 0)
  {
    sub_10002B570(a1, 1);
    swift_retain(v29);
    v31 = objc_msgSend(v30, "paymentSummaryItems");
    v32 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v33 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);
    swift_release(v29);

    v34 = *(_QWORD *)(a3 + v28);
    if (!v34)
      goto LABEL_25;
  }
  else
  {
    swift_errorRetain(a1);
    v33 = _swiftEmptyArrayStorage;
    v34 = *(_QWORD *)(a3 + v28);
    if (!v34)
      goto LABEL_25;
  }
  v35 = *(void **)(v34 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
  if (v35)
  {
    swift_retain(v34);
    v36 = objc_msgSend(v35, "shippingMethods");
    if (v36)
    {
      v37 = v36;
      v38 = sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
      v39 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v38);
      swift_release(v34);

      goto LABEL_26;
    }
  }
  else
  {
    swift_retain(v34);
  }
  swift_release(v34);
LABEL_25:
  v39 = _swiftEmptyArrayStorage;
LABEL_26:
  v45 = objc_allocWithZone((Class)PKPaymentRequestShippingContactUpdate);
  sub_100007D40(&qword_1000F07D0);
  v46 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v27);
  sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
  v47 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v33);
  sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
  v48 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v39);
  v49 = objc_msgSend(v45, "initWithErrors:paymentSummaryItems:shippingMethods:", v46, v47, v48);

  (*(void (**)(uint64_t, id))(a4 + 16))(a4, v49);
  v50 = (void *)_convertErrorToNSError(_:)(a1);
  v51 = objc_msgSend(v50, "code");

  if (v51 == (id)500)
  {
    v53 = qword_1000F8A90;
    v54 = static os_log_type_t.error.getter(v52);
    os_log(_:dso:log:type:_:)("BusinessChat: dismissing sheet as a 500 response was received", 61, 2, &_mh_execute_header, v53, v54, _swiftEmptyArrayStorage);
    v55 = *(void **)(a3 + OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizationController);
    if (v55)
      objc_msgSend(v55, "dismissWithCompletion:", 0);
  }

  sub_10002B57C(a1, 1);
}

void sub_10002ADF4(void *a1, char *a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void (**v26)(_QWORD, _QWORD);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  char *v32;
  objc_class *v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  Class isa;
  Class v57;
  Class v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[5];
  char v65[24];

  v6 = type metadata accessor for Endpoint(0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  v13 = (uint64_t *)((char *)&v62 - v12);
  v14 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a2;
  v63 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
  v24 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
LABEL_5:
    _Block_copy(a3);
    v37 = sub_100010A98((uint64_t)v17, (uint64_t *)&unk_1000ED480);
    if (qword_1000EBCB8 != -1)
      v37 = swift_once(&qword_1000EBCB8, sub_100082798);
    v38 = qword_1000F8A90;
    v39 = static os_log_type_t.error.getter(v37);
    v40 = (uint64_t)_swiftEmptyArrayStorage;
    os_log(_:dso:log:type:_:)("didSelectShippingContact did fail due to nil shippingContactUpdateUrl", 69, 2, &_mh_execute_header, v38, v39, _swiftEmptyArrayStorage);
    v41 = v63;
    v42 = *(_QWORD *)&v23[v63];
    if (v42)
    {
      v43 = *(void **)(v42 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v43)
      {
        swift_retain(*(_QWORD *)&v23[v63]);
        v44 = objc_msgSend(v43, "shippingMethods");
        if (v44)
        {
          v45 = v44;
          v46 = sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
          v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v46);
          swift_release(v42);

          goto LABEL_13;
        }
        swift_release(v42);
      }
      v40 = (uint64_t)_swiftEmptyArrayStorage;
    }
LABEL_13:
    if ((unint64_t)v40 >> 62)
    {
      if (v40 < 0)
        v60 = v40;
      else
        v60 = v40 & 0xFFFFFFFFFFFFFF8;
      v61 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
      swift_bridgeObjectRetain(v40);
      v48 = _bridgeCocoaArray<A>(_:)(v60, v61);
      swift_bridgeObjectRelease(v40);
    }
    else
    {
      v47 = swift_bridgeObjectRetain(v40);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v47);
      sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
      v48 = v40;
    }
    swift_bridgeObjectRelease(v40);
    v49 = *(_QWORD *)&v23[v41];
    if (v49)
    {
      v50 = *(void **)(v49 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
      if (v50)
      {
        swift_retain(*(_QWORD *)&v23[v41]);
        v51 = objc_msgSend(v50, "shippingMethods");
        if (v51)
        {
          v52 = v51;
          v53 = sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
          v54 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v52, v53);
          swift_release(v49);

LABEL_21:
          v55 = objc_allocWithZone((Class)PKPaymentRequestShippingContactUpdate);
          sub_100007D40(&qword_1000F07D0);
          isa = Array._bridgeToObjectiveC()().super.isa;
          sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
          v57 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v48);
          sub_1000090C8(0, &qword_1000ED020, PKShippingMethod_ptr);
          v58 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v54);
          v59 = objc_msgSend(v55, "initWithErrors:paymentSummaryItems:shippingMethods:", isa, v57, v58);

          ((void (**)(_QWORD, id))a3)[2](a3, v59);
          goto LABEL_22;
        }
        swift_release(v49);
      }
    }
    v54 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  v25 = a1;
  v26 = a3;
  v27 = v24 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl;
  swift_beginAccess(v24 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl, v65, 0, 0);
  v28 = v27;
  a3 = v26;
  sub_100010BA4(v28, (uint64_t)v17, (uint64_t *)&unk_1000ED480);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
    goto LABEL_5;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
  v29 = *(void **)&v23[OBJC_IVAR____TtC8Business18IMBApplePayManager_imbNetworkBody];
  _Block_copy(v26);
  v30 = v29;
  v31 = sub_100092760(v25);
  swift_bridgeObjectRetain(v31);

  v32 = (char *)v13 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  *v13 = v31;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v32, v22, v18);
  sub_10002B4F0((uint64_t)v13, (uint64_t)v10);
  v33 = (objc_class *)type metadata accessor for HttpClient(0);
  v34 = objc_allocWithZone(v33);
  v35 = sub_100031BDC((uint64_t)v10);
  v64[3] = v33;
  v64[4] = &off_1000D78E8;
  v64[0] = v35;
  sub_10002B534((uint64_t)v13);
  v36 = (char *)*sub_100008FA4(v64, (uint64_t)v33);
  _Block_copy(a3);
  sub_100035FB0(v36, v23, a3);
  _Block_release(a3);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  sub_100010C40(v64);
LABEL_22:
  _Block_release(a3);
}

void sub_10002B37C(void *a1, void *a2, uint64_t a3, void *aBlock, SEL *a5, const char *a6, uint64_t a7, void (*a8)(void *, uint64_t, void *))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  _Block_copy(aBlock);
  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v12 = qword_1000F8A90;
  v13 = static os_log_type_t.debug.getter();
  v14 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v15 = swift_allocObject(v14, 112, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1000ADFC0;
  v16 = objc_msgSend(a1, "description");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v20 = sub_100009084();
  *(_QWORD *)(v15 + 64) = v20;
  *(_QWORD *)(v15 + 32) = v17;
  *(_QWORD *)(v15 + 40) = v19;
  v21 = objc_msgSend(a2, *a5);
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  *(_QWORD *)(v15 + 96) = &type metadata for String;
  *(_QWORD *)(v15 + 104) = v20;
  *(_QWORD *)(v15 + 72) = v22;
  *(_QWORD *)(v15 + 80) = v24;
  os_log(_:dso:log:type:_:)(a6, a7, 2, &_mh_execute_header, v12, v13, v15);
  swift_bridgeObjectRelease(v15);
  a8(a2, a3, aBlock);
  _Block_release(aBlock);
}

uint64_t sub_10002B4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Endpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002B534(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Endpoint(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002B570(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRetain(a1);
  else
    return swift_bridgeObjectRetain(a1);
}

uint64_t sub_10002B57C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRelease(a1);
  else
    return swift_bridgeObjectRelease(a1);
}

uint64_t sub_10002B588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40((uint64_t *)&unk_1000EEB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002B5D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10002B5E0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002B604(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

unint64_t sub_10002B614()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ED068;
  if (!qword_1000ED068)
  {
    v1 = sub_1000090C8(255, &qword_1000ED060, NSAttributedString_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000ED068);
  }
  return result;
}

unint64_t sub_10002B66C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ED078;
  if (!qword_1000ED078)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_1000ED078);
  }
  return result;
}

void sub_10002B6B4(uint64_t a1)
{
  sub_100023FC8(a1);
}

uint64_t sub_10002B6E4()
{
  uint64_t result;

  result = static Color.primary.getter();
  qword_1000F8920 = result;
  return result;
}

uint64_t sub_10002B700()
{
  uint64_t result;

  result = static Color.secondary.getter();
  qword_1000F8928 = result;
  return result;
}

void sub_10002B71C()
{
  qword_1000F8930 = 0x4028000000000000;
}

double sub_10002B72C()
{
  double result;

  if (qword_1000EBBC8 != -1)
    swift_once(&qword_1000EBBC8, sub_10002B71C);
  result = *(double *)&qword_1000F8930;
  *(_QWORD *)&xmmword_1000F8938 = qword_1000F8930;
  *((_QWORD *)&xmmword_1000F8938 + 1) = qword_1000F8930;
  qword_1000F8948 = qword_1000F8930;
  unk_1000F8950 = qword_1000F8930;
  return result;
}

uint64_t sub_10002B77C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1000B03A0);
  v4 = v0;
  v2 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_10002B800@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000B03A0);
  v7 = v3;
  v5 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  result = swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_10002B88C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000B03A0);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_10002D144, v7, (char *)&type metadata for () + 8, v5);
  return swift_release(KeyPath);
}

uint64_t sub_10002B934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_1000B0378);
  v6 = v0;
  v3 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 32));
  return v4;
}

uint64_t sub_10002B9C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000B0378);
  v8 = v3;
  v5 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + 32);
  *a2 = *(_QWORD *)(v3 + 24);
  a2[1] = v6;
  return swift_bridgeObjectRetain(v6);
}

uint64_t sub_10002BA58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[7];
  uint64_t v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000B0378);
  v8[2] = v4;
  v8[3] = v3;
  v8[4] = v2;
  v9 = v4;
  v6 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  swift_bridgeObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_10002D154, v8, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_10002BB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_1000B02F0);
  v6 = v0;
  v3 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 48));
  return v4;
}

uint64_t sub_10002BBA8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000B02F0);
  v8 = v3;
  v5 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + 48);
  *a2 = *(_QWORD *)(v3 + 40);
  a2[1] = v6;
  return swift_bridgeObjectRetain(v6);
}

uint64_t sub_10002BC38(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[7];
  uint64_t v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000B02F0);
  v8[2] = v4;
  v8[3] = v3;
  v8[4] = v2;
  v9 = v4;
  v6 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  swift_bridgeObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_10002D030, v8, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_10002BCF4()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  v1 = (char *)v0 + OBJC_IVAR____TtCV8Business36BIADeterminateReplyBubbleContentView5Model___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10002BD54()
{
  return type metadata accessor for BIADeterminateReplyBubbleContentView.Model(0);
}

uint64_t type metadata accessor for BIADeterminateReplyBubbleContentView.Model(uint64_t a1)
{
  uint64_t result;

  result = qword_1000ED0B0;
  if (!qword_1000ED0B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BIADeterminateReplyBubbleContentView.Model);
  return result;
}

uint64_t sub_10002BD98(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1000B01A0;
  v4[1] = &unk_1000B01B8;
  v4[2] = &unk_1000B01D0;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BIADeterminateReplyBubbleContentView()
{
  return &type metadata for BIADeterminateReplyBubbleContentView;
}

uint64_t storeEnumTagSinglePayload for BIADeterminateReplyBubbleContentView.Model.Icon(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10002BE80 + 4 * byte_1000B0175[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10002BEB4 + 4 * byte_1000B0170[v4]))();
}

uint64_t sub_10002BEB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002BEBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002BEC4);
  return result;
}

uint64_t sub_10002BED0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002BED8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10002BEDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002BEE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BIADeterminateReplyBubbleContentView.Model.Icon()
{
  return &type metadata for BIADeterminateReplyBubbleContentView.Model.Icon;
}

unint64_t sub_10002BF04()
{
  unint64_t result;

  result = qword_1000ED1F0;
  if (!qword_1000ED1F0)
  {
    result = swift_getWitnessTable(&unk_1000B025C, &type metadata for BIADeterminateReplyBubbleContentView.Model.Icon);
    atomic_store(result, (unint64_t *)&qword_1000ED1F0);
  }
  return result;
}

uint64_t sub_10002BF48(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000C5BC0, 1);
}

uint64_t sub_10002BF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[2];

  v74 = a2;
  v3 = type metadata accessor for TitleOnlyLabelStyle(0);
  v71 = *(_QWORD *)(v3 - 8);
  v72 = v3;
  __chkstk_darwin(v3, v4);
  v70 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007D40(&qword_1000ED210);
  v66 = *(_QWORD *)(v6 - 8);
  v67 = v6;
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007D40(&qword_1000ED218);
  __chkstk_darwin(v65, v10);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100007D40(&qword_1000ED220);
  __chkstk_darwin(v69, v13);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007D40(&qword_1000ED228);
  v75 = *(_QWORD *)(v16 - 8);
  v76 = v16;
  __chkstk_darwin(v16, v17);
  v68 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007D40(&qword_1000ED230);
  v21 = __chkstk_darwin(v19, v20);
  v73 = (uint64_t)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  v25 = (char *)&v65 - v24;
  v26 = sub_100007D40(&qword_1000ED238);
  v28 = __chkstk_darwin(v26, v27);
  v30 = (char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v28, v31);
  v34 = (char *)&v65 - v33;
  *(_QWORD *)v34 = static VerticalAlignment.center.getter(v32);
  *((_QWORD *)v34 + 1) = 0;
  v35 = 1;
  v34[16] = 1;
  v36 = sub_100007D40(&qword_1000ED240);
  sub_10002C484(a1, &v34[*(int *)(v36 + 44)]);
  KeyPath = swift_getKeyPath(&unk_1000B02F0);
  v77[0] = a1;
  v38 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v77, KeyPath, v38);
  swift_release(KeyPath);
  v39 = *(_QWORD *)(a1 + 48);
  if (v39)
  {
    v77[0] = *(_QWORD *)(a1 + 40);
    v77[1] = v39;
    v40 = sub_10002CDE8();
    swift_bridgeObjectRetain(v39);
    v41 = Label<>.init<A>(_:systemImage:)(v77, 0, 0xE000000000000000, &type metadata for String, v40);
    v42 = static Font.subheadline.getter(v41);
    v43 = swift_getKeyPath(&unk_1000B0318);
    v45 = v66;
    v44 = v67;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v12, v9, v67);
    v46 = (uint64_t *)&v12[*(int *)(v65 + 36)];
    *v46 = v43;
    v46[1] = v42;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v44);
    if (qword_1000EBBC0 != -1)
      swift_once(&qword_1000EBBC0, sub_10002B700);
    v47 = qword_1000F8928;
    v77[0] = qword_1000F8928;
    v48 = sub_10002CE7C();
    swift_retain(v47);
    v49 = Color.init<A>(_:)(v77, &type metadata for Color, v48, &protocol witness table for Color);
    v50 = swift_getKeyPath(&unk_1000B0348);
    sub_100010BA4((uint64_t)v12, (uint64_t)v15, &qword_1000ED218);
    v51 = v69;
    v52 = (uint64_t *)&v15[*(int *)(v69 + 36)];
    *v52 = v50;
    v52[1] = v49;
    v53 = sub_100010A98((uint64_t)v12, &qword_1000ED218);
    v54 = v70;
    TitleOnlyLabelStyle.init()(v53);
    v55 = sub_10002CF10();
    v56 = sub_1000086B8(&qword_1000ED298, (uint64_t (*)(uint64_t))&type metadata accessor for TitleOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for TitleOnlyLabelStyle);
    v57 = v68;
    v58 = v72;
    View.labelStyle<A>(_:)(v54, v51, v72, v55, v56);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v54, v58);
    sub_100010A98((uint64_t)v15, &qword_1000ED220);
    v60 = v75;
    v59 = v76;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v25, v57, v76);
    v35 = 0;
  }
  else
  {
    v60 = v75;
    v59 = v76;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v25, v35, 1, v59);
  sub_100010BA4((uint64_t)v34, (uint64_t)v30, &qword_1000ED238);
  v61 = v73;
  sub_100010BA4((uint64_t)v25, v73, &qword_1000ED230);
  v62 = v74;
  sub_100010BA4((uint64_t)v30, v74, &qword_1000ED238);
  v63 = sub_100007D40(&qword_1000ED250);
  sub_100010BA4(v61, v62 + *(int *)(v63 + 48), &qword_1000ED230);
  sub_100010A98((uint64_t)v25, &qword_1000ED230);
  sub_100010A98((uint64_t)v34, &qword_1000ED238);
  sub_100010A98(v61, &qword_1000ED230);
  return sub_100010A98((uint64_t)v30, &qword_1000ED238);
}

uint64_t sub_10002C484@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  void (*v78)(char *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  _QWORD v99[3];

  v96 = a2;
  v3 = type metadata accessor for IconOnlyLabelStyle(0);
  v91 = *(_QWORD *)(v3 - 8);
  v92 = v3;
  __chkstk_darwin(v3, v4);
  v89 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007D40(&qword_1000ED2A0);
  v87 = *(_QWORD *)(v6 - 8);
  v88 = v6;
  __chkstk_darwin(v6, v7);
  v86 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100007D40(&qword_1000ED2A8);
  v93 = *(_QWORD *)(v95 - 8);
  v10 = __chkstk_darwin(v95, v9);
  v94 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  v90 = (char *)&v80 - v13;
  v14 = type metadata accessor for TitleOnlyLabelStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  v82 = v14;
  v83 = v15;
  __chkstk_darwin(v14, v16);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007D40(&qword_1000ED210);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007D40(&qword_1000ED218);
  __chkstk_darwin(v24, v25);
  v27 = (char *)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100007D40(&qword_1000ED220);
  __chkstk_darwin(v81, v28);
  v30 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100007D40(&qword_1000ED228);
  v98 = *(_QWORD *)(v84 - 8);
  v32 = __chkstk_darwin(v84, v31);
  v80 = (char *)&v80 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v34);
  v97 = (char *)&v80 - v35;
  KeyPath = swift_getKeyPath(&unk_1000B0378);
  v99[0] = a1;
  v37 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v99, KeyPath, v37);
  swift_release(KeyPath);
  v38 = *(_QWORD *)(a1 + 24);
  v39 = *(_QWORD *)(a1 + 32);
  v85 = a1;
  v99[0] = v38;
  v99[1] = v39;
  v40 = sub_10002CDE8();
  swift_bridgeObjectRetain(v39);
  v41 = Label<>.init<A>(_:systemImage:)(v99, 0, 0xE000000000000000, &type metadata for String, v40);
  v42 = static Font.subheadline.getter(v41);
  static Font.Weight.semibold.getter();
  v43 = Font.weight(_:)(v42);
  swift_release(v42);
  v44 = swift_getKeyPath(&unk_1000B0318);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v27, v23, v19);
  v45 = (uint64_t *)&v27[*(int *)(v24 + 36)];
  *v45 = v44;
  v45[1] = v43;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
  if (qword_1000EBBB8 != -1)
    swift_once(&qword_1000EBBB8, sub_10002B6E4);
  v46 = qword_1000F8920;
  v99[0] = qword_1000F8920;
  v47 = sub_10002CE7C();
  swift_retain(v46);
  v48 = Color.init<A>(_:)(v99, &type metadata for Color, v47, &protocol witness table for Color);
  v49 = swift_getKeyPath(&unk_1000B0348);
  sub_100010BA4((uint64_t)v27, (uint64_t)v30, &qword_1000ED218);
  v50 = v81;
  v51 = (uint64_t *)&v30[*(int *)(v81 + 36)];
  *v51 = v49;
  v51[1] = v48;
  v52 = sub_100010A98((uint64_t)v27, &qword_1000ED218);
  TitleOnlyLabelStyle.init()(v52);
  v53 = sub_10002CF10();
  v54 = sub_1000086B8(&qword_1000ED298, (uint64_t (*)(uint64_t))&type metadata accessor for TitleOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for TitleOnlyLabelStyle);
  v55 = v80;
  v56 = v82;
  View.labelStyle<A>(_:)(v18, v50, v82, v53, v54);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v18, v56);
  sub_100010A98((uint64_t)v30, &qword_1000ED220);
  v57 = v98;
  v58 = v84;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v55, v84);
  v59 = sub_100007D40(&qword_1000ED2B0);
  v60 = sub_10002D054();
  v61 = v86;
  v62 = Label.init(title:icon:)(IMBJITAppBundleState.rawValue.getter, 0, sub_10002D04C, v85, &type metadata for EmptyView, v59, &protocol witness table for EmptyView, v60);
  v63 = v89;
  IconOnlyLabelStyle.init()(v62);
  v64 = sub_10002D41C(&qword_1000ED2D0, &qword_1000ED2A0, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v65 = sub_1000086B8(&qword_1000ED2D8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  v66 = v94;
  v67 = v88;
  v68 = v92;
  View.labelStyle<A>(_:)(v63, v88, v92, v64, v65);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v63, v68);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v61, v67);
  v69 = v93;
  v70 = v90;
  v71 = v95;
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v90, v66, v95);
  v72 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v73 = v97;
  v72(v55, v97, v58);
  v74 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v74(v66, v70, v71);
  v75 = v96;
  v72(v96, v55, v58);
  v76 = sub_100007D40(&qword_1000ED2E0);
  v74(&v75[*(int *)(v76 + 48)], v66, v71);
  v77 = *(void (**)(char *, uint64_t))(v69 + 8);
  v77(v70, v71);
  v78 = *(void (**)(char *, uint64_t))(v98 + 8);
  v78(v73, v58);
  v77(v66, v71);
  return ((uint64_t (*)(char *, uint64_t))v78)(v55, v58);
}

double sub_10002CACC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double result;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  char v21;

  KeyPath = swift_getKeyPath(&unk_1000B03A0);
  *(_QWORD *)&v19 = a1;
  v5 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v19, KeyPath, v5);
  swift_release(KeyPath);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v6 = Image.init(systemName:)(0xD000000000000011, 0x80000001000B63E0);
    v7 = Color.init(_:bundle:)(0xD000000000000028, 0x80000001000B6400, 0);
    v15 = v6;
    v16 = swift_getKeyPath(&unk_1000B0348);
    v17 = v7;
    v18 = 1;
  }
  else
  {
    v8 = Image.init(systemName:)(0xD000000000000015, 0x80000001000B6430);
    v9 = Color.init(_:bundle:)(0xD00000000000002CLL, 0x80000001000B6450, 0);
    v15 = v8;
    v16 = swift_getKeyPath(&unk_1000B0348);
    v17 = v9;
    v18 = 0;
  }
  v10 = sub_100007D40(&qword_1000ED2C8);
  v11 = sub_10002D0B8();
  _ConditionalContent<>.init(storage:)(&v19, &v15, v10, v10, v11, v11);
  result = *(double *)&v19;
  v13 = v20;
  v14 = v21;
  *(_OWORD *)a2 = v19;
  *(_QWORD *)(a2 + 16) = v13;
  *(_BYTE *)(a2 + 24) = v14;
  return result;
}

uint64_t sub_10002CC6C()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10002CC84@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v17;

  v3 = sub_100007D40(&qword_1000ED1F8);
  v5 = __chkstk_darwin(v3, v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = static HorizontalAlignment.leading.getter(v5);
  if (qword_1000EBBC8 != -1)
    swift_once(&qword_1000EBBC8, sub_10002B71C);
  v10 = qword_1000F8930;
  *(_QWORD *)v7 = v9;
  *((_QWORD *)v7 + 1) = v10;
  v7[16] = 0;
  v11 = sub_100007D40(&qword_1000ED200);
  sub_10002BF58(v8, (uint64_t)&v7[*(int *)(v11 + 44)]);
  if (qword_1000EBBD0 != -1)
    swift_once(&qword_1000EBBD0, sub_10002B72C);
  v17 = xmmword_1000F8938;
  v12 = qword_1000F8948;
  v13 = unk_1000F8950;
  v14 = static Edge.Set.all.getter();
  sub_100010BA4((uint64_t)v7, a1, &qword_1000ED1F8);
  v15 = a1 + *(int *)(sub_100007D40(&qword_1000ED208) + 36);
  *(_BYTE *)v15 = v14;
  *(_OWORD *)(v15 + 8) = v17;
  *(_QWORD *)(v15 + 24) = v12;
  *(_QWORD *)(v15 + 32) = v13;
  *(_BYTE *)(v15 + 40) = 0;
  return sub_100010A98((uint64_t)v7, &qword_1000ED1F8);
}

unint64_t sub_10002CDE8()
{
  unint64_t result;

  result = qword_1000F0890;
  if (!qword_1000F0890)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000F0890);
  }
  return result;
}

uint64_t sub_10002CE2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10002CE54(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

unint64_t sub_10002CE7C()
{
  unint64_t result;

  result = qword_1000ED258;
  if (!qword_1000ED258)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Color, &type metadata for Color);
    atomic_store(result, (unint64_t *)&qword_1000ED258);
  }
  return result;
}

uint64_t sub_10002CEC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10002CEE8(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

unint64_t sub_10002CF10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ED260;
  if (!qword_1000ED260)
  {
    v1 = sub_100007DCC(&qword_1000ED220);
    sub_10002CF94();
    sub_10002D41C(&qword_1000ED288, &qword_1000ED290, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ED260);
  }
  return result;
}

unint64_t sub_10002CF94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ED268;
  if (!qword_1000ED268)
  {
    v1 = sub_100007DCC(&qword_1000ED218);
    sub_10002D41C(&qword_1000ED270, &qword_1000ED210, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    sub_10002D41C(&qword_1000ED278, &qword_1000ED280, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ED268);
  }
  return result;
}

uint64_t sub_10002D030()
{
  return sub_10002D358();
}

double sub_10002D04C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10002CACC(v1, a1);
}

unint64_t sub_10002D054()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ED2B8;
  if (!qword_1000ED2B8)
  {
    v1 = sub_100007DCC(&qword_1000ED2B0);
    sub_10002D0B8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ED2B8);
  }
  return result;
}

unint64_t sub_10002D0B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ED2C0;
  if (!qword_1000ED2C0)
  {
    v1 = sub_100007DCC(&qword_1000ED2C8);
    sub_10002D41C(&qword_1000ED288, &qword_1000ED290, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ED2C0);
  }
  return result;
}

void sub_10002D144()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 16) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_10002D154()
{
  return sub_10002D31C();
}

uint64_t sub_10002D168(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  char v24;
  uint64_t v25;

  v9 = a1 & 1;
  v10 = type metadata accessor for BIADeterminateReplyBubbleContentView.Model(0);
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  *(_BYTE *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = 0xE000000000000000;
  *(_QWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 48) = 0;
  ObservationRegistrar.init()();
  KeyPath = swift_getKeyPath(&unk_1000B03A0);
  v23 = v11;
  v24 = v9;
  v25 = v11;
  v13 = sub_1000086B8(&qword_1000ED248, type metadata accessor for BIADeterminateReplyBubbleContentView.Model, (uint64_t)&unk_1000B02D4);
  swift_retain(v11);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, KeyPath, sub_10002D45C, v22, (char *)&type metadata for () + 8, v13);
  swift_release(KeyPath);
  v14 = swift_getKeyPath(&unk_1000B0378);
  v19 = v11;
  v20 = a2;
  v21 = a3;
  v25 = v11;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v14, sub_10002D154, v18, (char *)&type metadata for () + 8, v13);
  swift_release(v14);
  swift_bridgeObjectRelease(a3);
  v15 = swift_getKeyPath(&unk_1000B02F0);
  v17[2] = v11;
  v17[3] = a4;
  v17[4] = a5;
  v25 = v11;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v15, sub_10002D030, v17, (char *)&type metadata for () + 8, v13);
  swift_release(v11);
  swift_release(v15);
  swift_bridgeObjectRelease(a5);
  return v11;
}

uint64_t sub_10002D31C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[4];
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 24) = v0[3];
  *(_QWORD *)(v1 + 32) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_10002D358()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[4];
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 40) = v0[3];
  *(_QWORD *)(v1 + 48) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v3);
}

unint64_t sub_10002D398()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ED2E8;
  if (!qword_1000ED2E8)
  {
    v1 = sub_100007DCC(&qword_1000ED208);
    sub_10002D41C(&qword_1000ED2F0, &qword_1000ED1F8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ED2E8);
  }
  return result;
}

uint64_t sub_10002D41C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007DCC(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10002D45C()
{
  sub_10002D144();
}

uint64_t MSMessagesAppPresentationStyle.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x697263736E617274;
  v2 = 0x6E776F6E6B6E75;
  if (a1 == 1)
    v2 = 0x6465646E61707865;
  if (a1 != 2)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 0x746361706D6F63;
}

uint64_t sub_10002D4EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = 0x697263736E617274;
  v3 = 0x6E776F6E6B6E75;
  if (*v0 == 1)
    v3 = 0x6465646E61707865;
  if (v1 != 2)
    v2 = v3;
  if (v1)
    return v2;
  else
    return 0x746361706D6F63;
}

void sub_10002D56C(uint64_t a1)
{
  sub_10002D5B8(a1, 0x6F43656C62627542, 0xEB00000000726F6CLL, &qword_1000F8958);
}

void sub_10002D594(uint64_t a1)
{
  sub_10002D5B8(a1, 0xD000000000000014, 0x80000001000B6480, &qword_1000F8960);
}

void sub_10002D5B8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  NSString v5;
  id v6;

  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v5);

  *a4 = v6;
}

void sub_10002D61C()
{
  qword_1000F8968 = 0x4024000000000000;
}

uint64_t sub_10002D62C()
{
  uint64_t result;
  double v1;

  result = sub_10002DA10();
  v1 = 6.0;
  if (result == 2)
    v1 = 5.0;
  qword_1000F8970 = *(_QWORD *)&v1;
  return result;
}

id sub_10002D65C(uint64_t a1)
{
  return sub_10002D988(a1, (SEL *)&selRef_secondarySystemBackgroundColor, &qword_1000F8978);
}

UIColor sub_10002D670()
{
  UIColor result;

  sub_100017F94();
  result.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.78, 0.78, 0.8, 1.0).super.isa;
  qword_1000F8980 = (uint64_t)result.super.isa;
  return result;
}

void sub_10002D6C0(uint64_t a1)
{
  sub_10002D84C(a1, 0x6C62627542414942, 0xEE00726F6C6F4365, (SEL *)&selRef_systemBackgroundColor, &qword_1000F8988);
}

id sub_10002D6F4()
{
  id result;

  result = sub_1000907D4((uint64_t)UIFontTextStyleSubheadline, 0, *(uint64_t *)&UIFontWeightSemibold, 0, 1, 0.0);
  qword_1000F8990 = (uint64_t)result;
  return result;
}

id sub_10002D738(uint64_t a1)
{
  return sub_10002D988(a1, (SEL *)&selRef_labelColor, &qword_1000F8998);
}

void sub_10002D74C(uint64_t a1)
{
  sub_10002D788(a1, &UIFontTextStyleFootnote, &qword_1000F89A0);
}

id sub_10002D760(uint64_t a1)
{
  return sub_10002D988(a1, (SEL *)&selRef_secondaryLabelColor, &qword_1000F89A8);
}

void sub_10002D774(uint64_t a1)
{
  sub_10002D788(a1, &UIFontTextStyleCallout, &qword_1000F89B0);
}

void sub_10002D788(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  id v4;
  id v5;

  v4 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", *a2);
  v5 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v4, 0.0);

  *a3 = v5;
}

id sub_10002D80C(uint64_t a1)
{
  return sub_10002D988(a1, (SEL *)&selRef_labelColor, &qword_1000F89B8);
}

void sub_10002D820(uint64_t a1)
{
  sub_10002D84C(a1, 0xD00000000000001CLL, 0x80000001000B64A0, (SEL *)&selRef_systemGroupedBackgroundColor, &qword_1000F89C0);
}

void sub_10002D84C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4, _QWORD *a5)
{
  NSString v7;
  void *v8;
  id v9;

  v7 = String._bridgeToObjectiveC()();
  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "colorNamed:", v7);

  if (!v9)
    v9 = objc_msgSend(v8, *a4);
  *a5 = v9;
}

id sub_10002D8DC(uint64_t a1)
{
  return sub_10002D988(a1, (SEL *)&selRef_tertiarySystemFillColor, &qword_1000F89C8);
}

UIColor sub_10002D8F0()
{
  UIColor result;

  sub_100017F94();
  result.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.48, 1.0, 1.0).super.isa;
  qword_1000F89D0 = (uint64_t)result.super.isa;
  return result;
}

id sub_10002D938(uint64_t a1)
{
  return sub_10002D988(a1, (SEL *)&selRef_systemRedColor, &qword_1000F89D8);
}

id sub_10002D94C(uint64_t a1)
{
  return sub_10002D988(a1, (SEL *)&selRef_labelColor, &qword_1000F89E0);
}

id sub_10002D960(uint64_t a1)
{
  return sub_10002D988(a1, (SEL *)&selRef_whiteColor, &qword_1000F89E8);
}

id sub_10002D974(uint64_t a1)
{
  return sub_10002D988(a1, (SEL *)&selRef_whiteColor, &qword_1000F89F0);
}

id sub_10002D988(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  *a3 = result;
  return result;
}

id sub_10002D9C8()
{
  if (qword_1000EBC30 != -1)
    swift_once(&qword_1000EBC30, sub_10002D774);
  qword_1000F89F8 = qword_1000F89B0;
  return (id)qword_1000F89B0;
}

uint64_t sub_10002DA10()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = (void *)objc_opt_self(UIDevice);
  v1 = objc_msgSend(v0, "currentDevice");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (!v2)
    return 0;
  v3 = objc_msgSend(v0, "currentDevice");
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if (v4 == (id)1)
    return 1;
  else
    return 2;
}

void sub_10002DAB4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  if (sub_10002DA10() > 1u)
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleTitle3);
    v3 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 15.0, UIFontWeightSemibold);
    objc_msgSend(v4, "scaledFontForFont:", v3);

    goto LABEL_5;
  }
  v0 = (void *)objc_opt_self(UIFont);
  v1 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleTitle2);
  v2 = objc_msgSend(v1, "fontDescriptor");

  v3 = objc_msgSend(v2, "fontDescriptorWithSymbolicTraits:", 2);
  if (v3)
  {
    objc_msgSend(v0, "fontWithDescriptor:size:", v3, 0.0);
LABEL_5:

    return;
  }
  __break(1u);
}

char *sub_10002DC14(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  NSString v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  NSString v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  objc_super v45;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___leftButtonItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___rightButtonItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___buttonItems] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController_footerToolbarModel] = a1;
  v45.receiver = v1;
  v45.super_class = (Class)type metadata accessor for iOSFooterToolbarViewController();
  swift_retain(a1);
  v3 = (char *)objc_msgSendSuper2(&v45, "initWithNibName:bundle:", 0, 0);
  v4 = v3;
  v5 = OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController_footerToolbarModel;
  v6 = *(_QWORD **)&v3[OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController_footerToolbarModel];
  v7 = v6[3];
  if ((v7 & 0x2000000000000000) != 0)
    v8 = HIBYTE(v7) & 0xF;
  else
    v8 = v6[2] & 0xFFFFFFFFFFFFLL;
  v9 = v3;
  if (v8)
  {
    v10 = sub_10002E0C0();
    objc_msgSend(v10, "setStyle:", v6[4]);

    v11 = sub_10002E0C0();
    objc_msgSend(v11, "setTarget:", v9);

    v12 = sub_10002E0C0();
    objc_msgSend(v12, "setAction:", "leftButtonTapped");

    v13 = sub_10002E0C0();
    v14 = *(_QWORD *)(*(_QWORD *)&v4[v5] + 24);
    swift_bridgeObjectRetain(v14);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    objc_msgSend(v13, "setTitle:", v15);

    v16 = sub_10002E0C0();
    v42 = (unint64_t)sub_10002E144();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v18 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v17 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v18 >= v17 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
    v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
    specialized Array._endMutation()(v19);
    v20 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___buttonItems];
    *(_QWORD *)&v9[OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___buttonItems] = v42;
    swift_bridgeObjectRelease(v20);
  }
  v21 = objc_msgSend((id)objc_opt_self(UIBarButtonItem), "flexibleSpaceItem");
  v43 = (unint64_t)sub_10002E144();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v23 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v22 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v23 >= v22 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
  v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
  specialized Array._endMutation()(v24);
  v25 = OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___buttonItems;
  v26 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___buttonItems];
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___buttonItems] = v43;
  swift_bridgeObjectRelease(v26);
  v27 = *(_QWORD **)&v4[v5];
  v28 = v27[6];
  v29 = v27[5] & 0xFFFFFFFFFFFFLL;
  if ((v28 & 0x2000000000000000) != 0)
    v29 = HIBYTE(v28) & 0xF;
  if (v29)
  {
    v30 = sub_10002E0CC();
    objc_msgSend(v30, "setStyle:", v27[7]);

    v31 = sub_10002E0CC();
    objc_msgSend(v31, "setTarget:", v9);

    v32 = sub_10002E0CC();
    objc_msgSend(v32, "setAction:", "rightButtonTapped");

    v33 = sub_10002E0CC();
    v34 = *(_QWORD *)(*(_QWORD *)&v4[v5] + 48);
    swift_bridgeObjectRetain(v34);
    v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v34);
    objc_msgSend(v33, "setTitle:", v35);

    v36 = sub_10002E0CC();
    v44 = (unint64_t)sub_10002E144();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v38 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v37 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v38 >= v37 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
    v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
    specialized Array._endMutation()(v39);
    v40 = *(_QWORD *)&v9[v25];
    *(_QWORD *)&v9[v25] = v44;

    swift_release(a1);
    swift_bridgeObjectRelease(v40);
  }
  else
  {

    swift_release(a1);
  }
  return v9;
}

id sub_10002E0C0()
{
  return sub_10002E0D8(&OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___leftButtonItem);
}

id sub_10002E0CC()
{
  return sub_10002E0D8(&OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___rightButtonItem);
}

id sub_10002E0D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ABSBarButtonItem()), "init");
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

void *sub_10002E144()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___buttonItems);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___buttonItems);
  }
  else
  {
    v2 = &_swiftEmptyArrayStorage;
    *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController____lazy_storage___buttonItems) = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(0);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

id sub_10002E2E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for iOSFooterToolbarViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for iOSFooterToolbarViewController()
{
  return objc_opt_self(_TtC8Business30iOSFooterToolbarViewController);
}

uint64_t sub_10002E398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC8Business30iOSFooterToolbarViewController_delegate;
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign(v4, a1);
  return swift_unknownObjectRelease(a1);
}

void sub_10002E3D0(char a1)
{
  id v2;
  uint64_t v3;
  id v4;

  v2 = sub_10002E0C0();
  v3 = a1 & 1;
  objc_msgSend(v2, "setEnabled:", v3);

  v4 = sub_10002E0CC();
  objc_msgSend(v4, "setEnabled:", v3);

}

void sub_10002E434(void *a1)
{
  id v2;
  void *v3;
  void *v4;
  Class isa;

  v2 = objc_msgSend(a1, "navigationController");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setToolbarHidden:animated:", 0, 0);

  }
  v4 = sub_10002E144();
  sub_10001BA64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(a1, "setToolbarItems:animated:", isa, 0);

}

void sub_10002E4D8()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for IMBHTMLContentViewController();
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message], "rootObject");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for IMBContent(0);
    v4 = swift_dynamicCastClass(v2, v3);
    if (v4)
    {
      v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_content];
      *(_QWORD *)&v0[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_content] = v4;
      swift_release(v5);
    }
    else
    {
      swift_unknownObjectRelease(v2);
    }
  }
  sub_10002E5B4();
  sub_10002F1E8();
}

void sub_10002E5B4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  Class isa;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  id v68;
  void *v69;
  id v70;
  void *v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  id v83;
  Class v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char *v99;
  id v100;
  char *v101;
  Class v102;
  void *v103;
  id v104;
  Class v105;
  NSString v106;
  void *v107;
  NSString v108;
  char *v109;
  NSURL *v110;
  void *v111;
  void *v112;
  id v113;
  void *v114;
  id v115;
  void *v116;
  id v117;
  void *v118;
  id v119;
  void *v120;
  id v121;
  void *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  id v140;
  char v141[24];
  uint64_t v142;
  char v143[32];

  v1 = v0;
  v126 = type metadata accessor for URLRequest(0);
  v125 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126, v2);
  v124 = (char *)&v123 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v4, v5);
  v131 = (uint64_t)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v136 = *(_QWORD *)(v7 - 8);
  v137 = v7;
  v9 = __chkstk_darwin(v7, v8);
  v138 = (uint64_t)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  v127 = (char *)&v123 - v12;
  v13 = type metadata accessor for String.Encoding(0);
  v129 = *(_QWORD *)(v13 - 8);
  v130 = v13;
  __chkstk_darwin(v13, v14);
  v128 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007D40(&qword_1000ED070);
  v18 = __chkstk_darwin(v16, v17);
  v20 = (char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  v23 = (char *)&v123 - v22;
  v24 = objc_msgSend(objc_allocWithZone((Class)UITableView), "init");
  v25 = objc_msgSend(v24, "separatorColor");

  v26 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v26, "setTimeStyle:", 1);
  objc_msgSend(v26, "setDateStyle:", 2);
  v139 = v26;
  objc_msgSend(v26, "setDoesRelativeDateFormatting:", 1);
  v27 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_content;
  v28 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_content];
  if (!v28)
  {
    v40 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v23, 1, 1, v40);
    goto LABEL_7;
  }
  v29 = v28 + OBJC_IVAR____TtC8Business10IMBContent_date;
  swift_beginAccess(v28 + OBJC_IVAR____TtC8Business10IMBContent_date, v143, 0, 0);
  sub_100010BA4(v29, (uint64_t)v23, &qword_1000ED070);
  v30 = type metadata accessor for Date(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v32(v23, 1, v30) == 1)
  {
LABEL_7:
    sub_100010A98((uint64_t)v23, &qword_1000ED070);
    v37 = 0;
    v39 = 0xE000000000000000;
    goto LABEL_8;
  }
  sub_100010A98((uint64_t)v23, &qword_1000ED070);
  v33 = *(_QWORD *)&v1[v27];
  if (!v33)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v34 = v33 + OBJC_IVAR____TtC8Business10IMBContent_date;
  swift_beginAccess(v33 + OBJC_IVAR____TtC8Business10IMBContent_date, v141, 0, 0);
  sub_100010BA4(v34, (uint64_t)v20, &qword_1000ED070);
  if (v32(v20, 1, v30) == 1)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v30);
  v36 = objc_msgSend(v139, "stringFromDate:", isa);

  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

LABEL_8:
  v41 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message], "receivedMessage");
  v42 = v41;
  if (v41)
  {
    v43 = objc_msgSend(v41, "title");

    if (v43)
    {
      v42 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v45 = v44;

      goto LABEL_13;
    }
    v42 = 0;
  }
  v45 = 0;
LABEL_13:
  objc_allocWithZone((Class)type metadata accessor for IMBTableHeaderView());
  v46 = v25;
  v47 = sub_10009102C((uint64_t)v42, v45, 0, 0, v25);
  v48 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_headerView;
  v49 = *(void **)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_headerView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_headerView] = v47;

  v50 = *(_QWORD *)&v1[v27];
  if (v50)
  {
    v51 = (uint64_t *)(v50 + OBJC_IVAR____TtC8Business10IMBContent_title);
    v52 = *v51;
    v53 = v51[1];
    swift_bridgeObjectRetain(v53);
  }
  else
  {
    v52 = 0;
    v53 = 0;
  }
  objc_allocWithZone((Class)type metadata accessor for IMBContentHeaderView());
  v140 = v46;
  v54 = sub_100052904(v52, v53, v37, v39, v25);
  v55 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_contentHeaderView;
  v56 = *(void **)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_contentHeaderView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_contentHeaderView] = v54;

  v57 = objc_msgSend(objc_allocWithZone((Class)WKWebViewConfiguration), "init");
  objc_msgSend(v57, "_setAllowsMetaRefresh:", 0);
  objc_msgSend(v57, "_setAllowsJavaScriptMarkup:", 0);
  objc_msgSend(v57, "_setAttachmentElementEnabled:", 0);
  objc_msgSend(v57, "_setWaitsForPaintAfterViewDidMoveToWindow:", 0);
  objc_msgSend(v57, "setDataDetectorTypes:", -1);
  objc_msgSend(v57, "setSelectionGranularity:", 1);
  v58 = objc_msgSend(objc_allocWithZone((Class)WKWebView), "initWithFrame:configuration:", v57, 0.0, 0.0, 0.0, 0.0);
  v59 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webview;
  v60 = *(void **)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webview];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webview] = v58;

  v61 = *(void **)&v1[v59];
  if (!v61)
  {
    __break(1u);
    goto LABEL_46;
  }
  v134 = v55;
  objc_msgSend(v61, "setOpaque:", 0);
  v62 = *(void **)&v1[v59];
  if (!v62)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v63 = (void *)objc_opt_self(UIColor);
  v64 = v62;
  v65 = objc_msgSend(v63, "clearColor");
  objc_msgSend(v64, "setBackgroundColor:", v65);

  v66 = *(void **)&v1[v59];
  if (!v66)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v135 = v48;
  objc_msgSend(v66, "setAllowsLinkPreview:", 1);
  v67 = *(void **)&v1[v59];
  if (!v67)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v68 = objc_msgSend(v67, "scrollView");
  objc_msgSend(v68, "setScrollsToTop:", 0);

  v69 = *(void **)&v1[v59];
  if (!v69)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v70 = objc_msgSend(v69, "scrollView");
  objc_msgSend(v70, "setScrollEnabled:", 1);

  v71 = *(void **)&v1[v59];
  if (!v71)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v72 = objc_msgSend(v71, "scrollView");
  objc_msgSend(v72, "setBounces:", 1);

  v73 = *(void **)&v1[v59];
  if (!v73)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v74 = objc_msgSend(v73, "scrollView");
  v75 = objc_msgSend(v63, "clearColor");
  objc_msgSend(v74, "setBackgroundColor:", v75);

  v76 = *(void **)&v1[v59];
  if (!v76)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  objc_msgSend(v76, "setNavigationDelegate:", v1);
  v77 = *(void **)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_scrollview];
  objc_msgSend(v77, "setMinimumZoomScale:", 1.0);
  objc_msgSend(v77, "setMaximumZoomScale:", 6.0);
  objc_msgSend(v77, "setBounces:", 1);
  objc_msgSend(v77, "setDelegate:", v1);
  v78 = *(void **)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_footerToolbar];
  v79 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v80 = swift_allocObject(v79, 40, 7);
  *(_OWORD *)(v80 + 16) = xmmword_1000AF120;
  v81 = *(void **)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_shareButtonItem];
  *(_QWORD *)(v80 + 32) = v81;
  v142 = v80;
  specialized Array._endMutation()(v80);
  v82 = v142;
  sub_1000090C8(0, (unint64_t *)&qword_1000ECAE0, UIBarButtonItem_ptr);
  v83 = v81;
  v84 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v82);
  v133 = v78;
  objc_msgSend(v78, "setItems:", v84);

  v132 = *(id *)&v1[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_toolbarBorder];
  v85 = v140;
  objc_msgSend(v132, "setBackgroundColor:", v140);
  v86 = *(_QWORD *)&v1[v27];
  v87 = v138;
  if (!v86)
    goto LABEL_31;
  v88 = *(_QWORD *)(v86 + OBJC_IVAR____TtC8Business10IMBContent_doc + 8);
  if (!v88)
    goto LABEL_28;
  v89 = *(_QWORD *)(v86 + OBJC_IVAR____TtC8Business10IMBContent_doc);
  v90 = swift_bridgeObjectRetain(*(_QWORD *)(v86 + OBJC_IVAR____TtC8Business10IMBContent_doc + 8));
  v91 = v128;
  static String.Encoding.utf8.getter(v90);
  v92 = String.data(using:allowLossyConversion:)(v91, 0, v89, v88);
  v94 = v93;
  swift_bridgeObjectRelease(v88);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v91, v130);
  if (v94 >> 60 == 15)
  {
    v86 = *(_QWORD *)&v1[v27];
    if (v86)
    {
LABEL_28:
      v95 = v131;
      sub_100010BA4(v86 + OBJC_IVAR____TtC8Business10IMBContent_url, v131, (uint64_t *)&unk_1000ED480);
      v97 = v136;
      v96 = v137;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v95, 1, v137) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 32))(v87, v95, v96);
        v98 = *(void **)&v1[v59];
        if (!v98)
        {
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        v99 = v127;
        (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v127, v87, v96);
        v100 = v98;
        v101 = v124;
        URLRequest.init(url:cachePolicy:timeoutInterval:)(v99, 0, 60.0);
        v102 = URLRequest._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v125 + 8))(v101, v126);

        (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v87, v96);
        goto LABEL_35;
      }
LABEL_32:
      sub_100010A98(v95, (uint64_t *)&unk_1000ED480);
      goto LABEL_36;
    }
LABEL_31:
    v95 = v131;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56))(v131, 1, 1, v137);
    goto LABEL_32;
  }
  v103 = *(void **)&v1[v59];
  if (v103)
  {
    v104 = v103;
    v105 = Data._bridgeToObjectiveC()().super.isa;
    v106 = String._bridgeToObjectiveC()();
    v138 = v92;
    v107 = v106;
    v108 = String._bridgeToObjectiveC()();
    v109 = v127;
    URL.init(fileURLWithPath:)(0, 0xE000000000000000);
    URL._bridgeToObjectiveC()(v110);
    v112 = v111;
    (*(void (**)(char *, uint64_t))(v136 + 8))(v109, v137);

    sub_100010BE8(v138, v94);
LABEL_35:
    v85 = v140;
LABEL_36:
    v113 = objc_msgSend(v1, "view");
    if (v113)
    {
      if (*(_QWORD *)&v1[v135])
      {
        v114 = v113;
        objc_msgSend(v113, "addSubview:");

        v115 = objc_msgSend(v1, "view");
        if (v115)
        {
          if (*(_QWORD *)&v1[v134])
          {
            v116 = v115;
            objc_msgSend(v115, "addSubview:");

            v117 = objc_msgSend(v1, "view");
            if (v117)
            {
              if (*(_QWORD *)&v1[v59])
              {
                v118 = v117;
                objc_msgSend(v117, "addSubview:");

                v119 = objc_msgSend(v1, "view");
                if (v119)
                {
                  v120 = v119;
                  objc_msgSend(v119, "addSubview:", v133);

                  v121 = objc_msgSend(v1, "view");
                  if (v121)
                  {
                    v122 = v121;
                    objc_msgSend(v121, "addSubview:", v132);

                    return;
                  }
                  goto LABEL_60;
                }
LABEL_59:
                __break(1u);
LABEL_60:
                __break(1u);
                goto LABEL_61;
              }
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
LABEL_64:
  __break(1u);
}

void sub_10002F1E8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  double v98;
  double v99;
  id v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  _BYTE v115[24];

  v1 = sub_100007D40(&qword_1000ED070);
  __chkstk_darwin(v1, v2);
  v4 = &v115[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_headerView;
  v6 = *(void **)&v0[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_headerView];
  if (!v6)
  {
    __break(1u);
    goto LABEL_38;
  }
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = *(void **)&v0[v5];
  if (!v7)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v8 = objc_msgSend(v7, "topAnchor");
  v9 = objc_msgSend(v0, "view");
  if (!v9)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, "topAnchor");

  v12 = objc_msgSend(v8, "constraintEqualToAnchor:", v11);
  objc_msgSend(v12, "setActive:", 1);

  v13 = *(void **)&v0[v5];
  if (!v13)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v14 = objc_msgSend(v13, "rightAnchor");
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "rightAnchor");

  v18 = objc_msgSend(v14, "constraintEqualToAnchor:", v17);
  objc_msgSend(v18, "setActive:", 1);

  v19 = *(void **)&v0[v5];
  if (!v19)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v20 = objc_msgSend(v19, "leftAnchor");
  v21 = objc_msgSend(v0, "view");
  if (!v21)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "leftAnchor");

  v24 = objc_msgSend(v20, "constraintEqualToAnchor:", v23);
  objc_msgSend(v24, "setActive:", 1);

  v25 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_contentHeaderView;
  v26 = *(void **)&v0[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_contentHeaderView];
  if (!v26)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v27 = *(void **)&v0[v25];
  if (!v27)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v28 = objc_msgSend(v27, "topAnchor");
  v29 = *(void **)&v0[v5];
  if (!v29)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v30 = objc_msgSend(v29, "bottomAnchor");
  v31 = objc_msgSend(v28, "constraintEqualToAnchor:", v30);

  objc_msgSend(v31, "setActive:", 1);
  v32 = *(void **)&v0[v25];
  if (!v32)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v33 = objc_msgSend(v32, "rightAnchor");
  v34 = objc_msgSend(v0, "view");
  if (!v34)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, "rightAnchor");

  v37 = objc_msgSend(v33, "constraintEqualToAnchor:", v36);
  objc_msgSend(v37, "setActive:", 1);

  v38 = *(void **)&v0[v25];
  if (!v38)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v39 = objc_msgSend(v38, "leftAnchor");
  v40 = objc_msgSend(v0, "view");
  if (!v40)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v41 = v40;
  v42 = objc_msgSend(v40, "leftAnchor");

  v43 = objc_msgSend(v39, "constraintEqualToAnchor:", v42);
  objc_msgSend(v43, "setActive:", 1);

  v44 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_content];
  if (v44)
  {
    if (*(_QWORD *)(v44 + OBJC_IVAR____TtC8Business10IMBContent_title + 8))
      goto LABEL_22;
    v45 = v44 + OBJC_IVAR____TtC8Business10IMBContent_date;
    swift_beginAccess(v44 + OBJC_IVAR____TtC8Business10IMBContent_date, v115, 0, 0);
    sub_100010BA4(v45, (uint64_t)v4, &qword_1000ED070);
    v46 = type metadata accessor for Date(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v4, 1, v46) != 1)
    {
      sub_100010A98((uint64_t)v4, &qword_1000ED070);
      goto LABEL_22;
    }
  }
  else
  {
    v47 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v4, 1, 1, v47);
  }
  sub_100010A98((uint64_t)v4, &qword_1000ED070);
  v48 = *(void **)&v0[v25];
  if (v48)
  {
    v49 = objc_msgSend(v48, "heightAnchor");
    v50 = objc_msgSend(v49, "constraintEqualToConstant:", 0.0);

    objc_msgSend(v50, "setActive:", 1);
LABEL_22:
    v51 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webview;
    v52 = *(void **)&v0[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webview];
    if (v52)
    {
      objc_msgSend(v52, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v53 = *(void **)&v0[v51];
      if (v53)
      {
        v54 = objc_msgSend(v53, "topAnchor");
        v55 = *(void **)&v0[v25];
        if (v55)
        {
          v56 = objc_msgSend(v55, "bottomAnchor");
          v57 = objc_msgSend(v54, "constraintEqualToAnchor:", v56);

          objc_msgSend(v57, "setActive:", 1);
          v58 = *(void **)&v0[v51];
          if (v58)
          {
            v59 = objc_msgSend(v58, "bottomAnchor");
            v60 = *(void **)&v0[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_footerToolbar];
            v61 = objc_msgSend(v60, "topAnchor");
            v62 = objc_msgSend(v59, "constraintEqualToAnchor:", v61);

            objc_msgSend(v62, "setActive:", 1);
            v63 = *(void **)&v0[v51];
            if (v63)
            {
              v64 = objc_msgSend(v63, "rightAnchor");
              v65 = objc_msgSend(v0, "view");
              if (v65)
              {
                v66 = v65;
                v67 = objc_msgSend(v65, "rightAnchor");

                v68 = objc_msgSend(v64, "constraintEqualToAnchor:", v67);
                objc_msgSend(v68, "setActive:", 1);

                v69 = *(void **)&v0[v51];
                if (v69)
                {
                  v70 = objc_msgSend(v69, "leftAnchor");
                  v71 = objc_msgSend(v0, "view");
                  if (v71)
                  {
                    v72 = v71;
                    v73 = objc_msgSend(v71, "leftAnchor");

                    v74 = objc_msgSend(v70, "constraintEqualToAnchor:", v73);
                    objc_msgSend(v74, "setActive:", 1);

                    objc_msgSend(v60, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                    v75 = objc_msgSend(v60, "topAnchor");
                    v76 = *(void **)&v0[v51];
                    if (v76)
                    {
                      v77 = objc_msgSend(v76, "bottomAnchor");
                      v78 = objc_msgSend(v75, "constraintEqualToAnchor:", v77);

                      objc_msgSend(v78, "setActive:", 1);
                      v79 = objc_msgSend(v60, "leadingAnchor");
                      v80 = objc_msgSend(v0, "view");
                      if (v80)
                      {
                        v81 = v80;
                        v82 = objc_msgSend(v80, "leadingAnchor");

                        v83 = objc_msgSend(v79, "constraintEqualToAnchor:", v82);
                        objc_msgSend(v83, "setActive:", 1);

                        v84 = objc_msgSend(v60, "trailingAnchor");
                        v85 = objc_msgSend(v0, "view");
                        if (v85)
                        {
                          v86 = v85;
                          v87 = objc_msgSend(v85, "trailingAnchor");

                          v88 = objc_msgSend(v84, "constraintEqualToAnchor:", v87);
                          objc_msgSend(v88, "setActive:", 1);

                          v89 = objc_msgSend(v60, "bottomAnchor");
                          v90 = objc_msgSend(v0, "view");
                          if (v90)
                          {
                            v91 = v90;
                            v92 = objc_msgSend(v90, "safeAreaLayoutGuide");

                            v93 = objc_msgSend(v92, "bottomAnchor");
                            v94 = objc_msgSend(v89, "constraintEqualToAnchor:", v93);

                            objc_msgSend(v94, "setActive:", 1);
                            v95 = *(void **)&v0[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_toolbarBorder];
                            objc_msgSend(v95, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                            v96 = objc_msgSend(v95, "heightAnchor");
                            v97 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
                            objc_msgSend(v97, "scale");
                            v99 = v98;

                            v100 = objc_msgSend(v96, "constraintEqualToConstant:", 1.0 / v99);
                            objc_msgSend(v100, "setActive:", 1);

                            v101 = objc_msgSend(v95, "leftAnchor");
                            v102 = objc_msgSend(v0, "view");
                            if (v102)
                            {
                              v103 = v102;
                              v104 = objc_msgSend(v102, "leftAnchor");

                              v105 = objc_msgSend(v101, "constraintEqualToAnchor:", v104);
                              objc_msgSend(v105, "setActive:", 1);

                              v106 = objc_msgSend(v95, "rightAnchor");
                              v107 = objc_msgSend(v0, "view");
                              if (v107)
                              {
                                v108 = v107;
                                v109 = objc_msgSend(v107, "rightAnchor");

                                v110 = objc_msgSend(v106, "constraintEqualToAnchor:", v109);
                                objc_msgSend(v110, "setActive:", 1);

                                v111 = objc_msgSend(v95, "bottomAnchor");
                                v112 = objc_msgSend(v60, "topAnchor");
                                v113 = objc_msgSend(v111, "constraintEqualToAnchor:", v112);

                                objc_msgSend(v113, "setActive:", 1);
                                return;
                              }
                              goto LABEL_64;
                            }
LABEL_63:
                            __break(1u);
LABEL_64:
                            __break(1u);
                            goto LABEL_65;
                          }
LABEL_62:
                          __break(1u);
                          goto LABEL_63;
                        }
LABEL_61:
                        __break(1u);
                        goto LABEL_62;
                      }
LABEL_60:
                      __break(1u);
                      goto LABEL_61;
                    }
LABEL_59:
                    __break(1u);
                    goto LABEL_60;
                  }
LABEL_58:
                  __break(1u);
                  goto LABEL_59;
                }
LABEL_57:
                __break(1u);
                goto LABEL_58;
              }
LABEL_56:
              __break(1u);
              goto LABEL_57;
            }
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
LABEL_65:
  __break(1u);
}

uint64_t sub_10002FE10(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  id v32;
  Class isa;
  id v34;
  id v35;
  void *v36;
  _BYTE v37[8];
  uint64_t v38;
  _BYTE v39[24];
  uint64_t v40;
  Swift::String v41;

  v5 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v5, v6);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100010BA4(a1, (uint64_t)v39, (uint64_t *)&unk_1000EEB60);
  if (!v40)
    return sub_100010A98((uint64_t)v39, (uint64_t *)&unk_1000EEB60);
  result = swift_dynamicCast(v37, v39, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((result & 1) != 0)
  {
    v15 = v38;
    v16 = *(_QWORD *)&a3[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_content];
    if (v16 && (v17 = (uint64_t *)(v16 + OBJC_IVAR____TtC8Business10IMBContent_title), (v18 = v17[1]) != 0))
    {
      v19 = *v17;
      swift_bridgeObjectRetain(v17[1]);
    }
    else
    {
      v20 = objc_msgSend(*(id *)&a3[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message], "receivedMessage");
      if (v20
        && (v21 = v20, v22 = objc_msgSend(v20, "title"), v21, v22))
      {
        countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      }
      else
      {
        v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v41._object = (void *)0xE000000000000000;
        v25._object = (void *)0x80000001000B6700;
        v25._countAndFlagsBits = 0xD000000000000011;
        v26._countAndFlagsBits = 0;
        v26._object = (void *)0xE000000000000000;
        v41._countAndFlagsBits = 0;
        v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v22, v26, v41);
        object = v27._object;
        countAndFlagsBits = v27._countAndFlagsBits;
      }
      v19 = countAndFlagsBits;
      v18 = (uint64_t)object;
      swift_bridgeObjectRelease(0);

    }
    sub_1000302B4(v19, v18, v8);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      return sub_100010A98((uint64_t)v8, (uint64_t *)&unk_1000ED480);
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
      v28 = sub_100007D40(&qword_1000ED4B0);
      v29 = swift_allocObject(v28, 96, 7);
      *(_OWORD *)(v29 + 16) = xmmword_1000ADFC0;
      *(_QWORD *)(v29 + 56) = v9;
      v30 = sub_100030FF8((_QWORD *)(v29 + 32));
      (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v10 + 16))(v30, v13, v9);
      result = *(_QWORD *)&a3[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webview];
      if (result)
      {
        v31 = objc_msgSend((id)result, "viewPrintFormatter");
        *(_QWORD *)(v29 + 88) = sub_1000090C8(0, &qword_1000ED4B8, UIViewPrintFormatter_ptr);
        *(_QWORD *)(v29 + 64) = v31;
        v32 = objc_allocWithZone((Class)UIActivityViewController);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v29);
        v34 = objc_msgSend(v32, "initWithActivityItems:applicationActivities:", isa, 0);

        v35 = objc_msgSend(v34, "popoverPresentationController");
        if (v35)
        {
          v36 = v35;
          objc_msgSend(v35, "setBarButtonItem:", *(_QWORD *)&a3[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_shareButtonItem]);

        }
        objc_msgSend(a3, "presentViewController:animated:completion:", v34, 1, 0);

        return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_1000301D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(__int128 *, void *);
  id v7;
  __int128 v9;
  __int128 v10;

  v6 = *(void (**)(__int128 *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    *((_QWORD *)&v10 + 1) = swift_getObjectType(a2);
    *(_QWORD *)&v9 = a2;
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  swift_retain(v5);
  swift_unknownObjectRetain(a2);
  v7 = a3;
  v6(&v9, a3);
  swift_release(v5);

  return sub_100010A98((uint64_t)&v9, (uint64_t *)&unk_1000EEB60);
}

uint64_t sub_1000302B4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  NSMutableData *v21;
  double x;
  double y;
  double width;
  double height;
  void *v26;
  id v27;
  NSString v28;
  id v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  NSString *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSString v43;
  id v44;
  id v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  NSMutableData *v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  NSURL *v58;
  void *v59;
  void *v60;
  unsigned int v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  id v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect PDFContextBounds;

  v70 = a1;
  v71 = a2;
  v69 = a3;
  v4 = sub_100007D40((uint64_t *)&unk_1000ED480);
  v6 = __chkstk_darwin(v4, v5);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v6, v9);
  v12 = (char *)&v67 - v11;
  __chkstk_darwin(v10, v13);
  v72 = (char *)&v67 - v14;
  v15 = type metadata accessor for URL(0);
  v73 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15, v16);
  v68 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend(objc_allocWithZone((Class)UIPrintPageRenderer), "init");
  v19 = *(void **)(v3 + OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webview);
  if (!v19)
LABEL_23:
    __break(1u);
  v20 = objc_msgSend(v19, "viewPrintFormatter");
  objc_msgSend(v18, "addPrintFormatter:startingAtPageAtIndex:", v20, 0);

  v21 = (NSMutableData *)objc_msgSend(objc_allocWithZone((Class)NSMutableData), "init");
  v75.origin.x = 0.0;
  v75.origin.y = 0.0;
  v75.size.width = 595.0;
  v75.size.height = 842.0;
  v76 = CGRectInset(v75, 0.0, 0.0);
  x = v76.origin.x;
  y = v76.origin.y;
  width = v76.size.width;
  height = v76.size.height;
  v26 = (void *)objc_opt_self(NSValue);
  v27 = objc_msgSend(v26, "valueWithCGRect:", 0.0, 0.0, 595.0, 842.0);
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setValue:forKey:", v27, v28);

  v29 = objc_msgSend(v26, "valueWithCGRect:", x, y, width, height);
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setValue:forKey:", v29, v30);

  v77.origin.x = 0.0;
  v77.origin.y = 0.0;
  v77.size.width = 0.0;
  v77.size.height = 0.0;
  UIGraphicsBeginPDFContextToData(v21, v77, 0);
  v31 = (uint64_t)objc_msgSend(v18, "numberOfPages");
  v32 = v31 - 1;
  if (v31 < 1)
  {
    __break(1u);
    goto LABEL_23;
  }
  v33 = 1;
  while (1)
  {
    UIGraphicsBeginPDFPage();
    PDFContextBounds = UIGraphicsGetPDFContextBounds();
    objc_msgSend(v18, "drawPageAtIndex:inRect:", v33 - 1, PDFContextBounds.origin.x, PDFContextBounds.origin.y, PDFContextBounds.size.width, PDFContextBounds.size.height);
    if (!v32)
      break;
    --v32;
    if (__OFADD__(v33++, 1))
    {
      __break(1u);
      break;
    }
  }
  UIGraphicsEndPDFContext();
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v35, "lastPathComponent");

  if (!v36)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v38 = v37;
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
  }
  v39 = NSTemporaryDirectory();
  static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v41 = v40;

  v42 = objc_allocWithZone((Class)NSURL);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41);
  v44 = objc_msgSend(v42, "initFileURLWithPath:", v43);

  v45 = objc_msgSend(v44, "URLByAppendingPathComponent:", v36);
  if (v45)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v45);

    v46 = v73;
    v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
    v47(v8, 0, 1, v15);
  }
  else
  {
    v46 = v73;
    v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
    v47(v8, 1, 1, v15);
  }
  v48 = (uint64_t)v72;
  v49 = v21;
  sub_100030C84((uint64_t)v8, (uint64_t)v12);
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
  if (v50(v12, 1, v15) == 1)
  {
    sub_100010A98((uint64_t)v12, (uint64_t *)&unk_1000ED480);
    v47((char *)v48, 1, 1, v15);
LABEL_16:

    sub_100010A98(v48, (uint64_t *)&unk_1000ED480);
    goto LABEL_17;
  }
  URL.appendingPathExtension(_:)(6710384, 0xE300000000000000);
  v51 = v73;
  v52 = *(void (**)(char *, uint64_t))(v73 + 8);
  v52(v12, v15);
  v47((char *)v48, 0, 1, v15);
  if (v50((char *)v48, 1, v15) == 1)
    goto LABEL_16;
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 32);
  v57 = v68;
  v56(v68, v48, v15);
  URL._bridgeToObjectiveC()(v58);
  v60 = v59;
  v74 = 0;
  v61 = -[NSMutableData writeToURL:options:error:](v49, "writeToURL:options:error:", v59, 1, &v74);

  v62 = v74;
  if (v61)
  {
    v63 = v74;

    v54 = v69;
    v56(v69, (uint64_t)v57, v15);
    v53 = 0;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v47)(v54, v53, 1, v15);
  }
  v64 = v74;
  v65 = _convertNSErrorToError(_:)(v62);

  swift_willThrow(v66);
  v52(v57, v15);
  swift_errorRelease(v65);
LABEL_17:
  v53 = 1;
  v54 = v69;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v47)(v54, v53, 1, v15);
}

id sub_100030944(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  objc_super v16;
  objc_class *v17;

  v3 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_scrollview;
  v4 = objc_allocWithZone((Class)UIScrollView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_footerToolbar;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIToolbar), "init");
  v7 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_toolbarBorder;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_shareButtonItem;
  v9 = (objc_class *)type metadata accessor for IMBHTMLContentViewController();
  v10 = objc_allocWithZone((Class)UIBarButtonItem);
  v17 = v9;
  v11 = sub_100007D40((uint64_t *)&unk_1000ED4A0);
  v12 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v17, v11);
  v13 = objc_msgSend(v10, "initWithBarButtonSystemItem:target:action:", 9, v12, "shareButtonTapped:");
  swift_unknownObjectRelease(v12);
  *(_QWORD *)&v5[v8] = v13;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webview] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_headerView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_contentHeaderView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webviewHeightConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_content] = 0;

  v16.receiver = v5;
  v16.super_class = v9;
  v14 = objc_msgSendSuper2(&v16, "initWithCoder:", a1);

  return v14;
}

uint64_t sub_100030AF0()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_content));
}

id sub_100030B8C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBHTMLContentViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBHTMLContentViewController()
{
  return objc_opt_self(_TtC8Business28IMBHTMLContentViewController);
}

uint64_t sub_100030C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40((uint64_t *)&unk_1000ED480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100030CCC()
{
  char *v0;
  void *v1;
  id v2;
  NSString v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webview];
  if (v1)
  {
    v2 = v1;
    v3 = String._bridgeToObjectiveC()();
    v4 = swift_allocObject(&unk_1000D7728, 24, 7);
    *(_QWORD *)(v4 + 16) = v0;
    v8[4] = sub_100030FD8;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_1000301D4;
    v8[3] = &unk_1000D7740;
    v5 = _Block_copy(v8);
    v6 = v9;
    v7 = v0;
    swift_release(v6);
    objc_msgSend(v2, "evaluateJavaScript:completionHandler:", v3, v5);
    _Block_release(v5);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100030DCC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v22;

  v6 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URLRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "navigationType"))
    return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, 1);
  v20 = objc_msgSend(a1, "request");
  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();

  URLRequest.url.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
  {
    sub_100010A98((uint64_t)v9, (uint64_t *)&unk_1000ED480);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, 1);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v9, v15);
  sub_100008FA4((_QWORD *)(a2 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_urlHelper), *(_QWORD *)(a2 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_urlHelper + 24));
  sub_10004E4AC((uint64_t)v19, 1, 0, 0);
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_100030FB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100030FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10002FE10(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_100030FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100030FF0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_100030FF8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t storeEnumTagSinglePayload for IMBBubbleType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100031080 + 4 * byte_1000B0455[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000310B4 + 4 * asc_1000B0450[v4]))();
}

uint64_t sub_1000310B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000310BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000310C4);
  return result;
}

uint64_t sub_1000310D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000310D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000310DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000310E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IMBBubbleType()
{
  return &type metadata for IMBBubbleType;
}

uint64_t sub_100031100()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265646E6573;
  else
    return 0x6E65697069636572;
}

unint64_t sub_100031140()
{
  unint64_t result;

  result = qword_1000ED4C0;
  if (!qword_1000ED4C0)
  {
    result = swift_getWitnessTable(&unk_1000B04D4, &type metadata for IMBBubbleType);
    atomic_store(result, (unint64_t *)&qword_1000ED4C0);
  }
  return result;
}

void *sub_100031184(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  objc_class *ObjCClassFromMetadata;
  NSString *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v22;

  v3 = &v1[OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_messagesAppProxy];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = &v1[OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_bubbleView];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_conversation] = a1;
  v22.receiver = v1;
  v22.super_class = (Class)type metadata accessor for IMBTranscriptEmptyMessageViewController();
  v5 = a1;
  v6 = objc_msgSendSuper2(&v22, "initWithNibName:bundle:", 0, 0);
  v7 = qword_1000EBCB8;
  v8 = v6;
  v10 = v8;
  if (v7 != -1)
    v8 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
  v11 = qword_1000F8A90;
  v12 = static os_log_type_t.debug.getter(v8, v9);
  v13 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1000AF070;
  ObjectType = swift_getObjectType(v10);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(ObjectType);
  v17 = NSStringFromClass(ObjCClassFromMetadata);
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 64) = sub_100009084();
  *(_QWORD *)(v14 + 32) = v18;
  *(_QWORD *)(v14 + 40) = v20;
  os_log(_:dso:log:type:_:)("Created a %@ for message: nil", 29, 2, &_mh_execute_header, v11, v12, v14, v22.receiver, v22.super_class);
  swift_bridgeObjectRelease(v14);

  return v10;
}

void sub_10003139C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  _QWORD *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  char *v23;
  void *v24;
  _QWORD *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  _QWORD *v31;
  id v32;
  _QWORD *v33;
  Class isa;
  _QWORD v36[3];
  uint64_t v37;
  _UNKNOWN **v38;
  objc_super v39;

  v1 = v0;
  v2 = type metadata accessor for URLHelper(0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v6 = (objc_class *)type metadata accessor for IMBTranscriptEmptyMessageViewController();
  v39.receiver = v1;
  v39.super_class = v6;
  objc_msgSendSuper2(&v39, "viewDidLoad");
  v7 = BCBubbleViewStyleIcon;
  sub_10004EA08((uint64_t)v5);
  v37 = v2;
  v38 = &off_1000D8BD0;
  v8 = sub_100030FF8(v36);
  sub_100020D60((uint64_t)v5, (uint64_t)v8);
  v9 = objc_allocWithZone((Class)type metadata accessor for IMBBubbleView());
  v10 = sub_100031BA4((uint64_t)v36, v37);
  __chkstk_darwin(v10, v10);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  (*(void (**)(char *))(v13 + 16))(v12);
  v14 = sub_10003F6C0(0, v7, (uint64_t)v12, v9);

  sub_100010C40(v36);
  sub_100020DA4((uint64_t)v5);
  v15 = objc_msgSend((id)objc_opt_self(BCMessage), "defaultBubbleTitleFor:", 0);
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = (_QWORD *)((char *)v14 + OBJC_IVAR____TtC8Business13IMBBubbleView_title);
  v20 = *(_QWORD *)((char *)v14 + OBJC_IVAR____TtC8Business13IMBBubbleView_title + 8);
  *v19 = v16;
  v19[1] = v18;
  swift_bridgeObjectRelease(v20);
  sub_1000AA190();
  objc_msgSend(v14, "setUserInteractionEnabled:", 0);
  v21 = (char *)v14 + OBJC_IVAR____TtC8Business13IMBBubbleView_delegate;
  *((_QWORD *)v21 + 1) = &off_1000D7850;
  swift_unknownObjectWeakAssign(v21, v1);
  v22 = *(void **)((char *)v14 + OBJC_IVAR____TtC8Business13IMBBubbleView_image);
  *(_QWORD *)((char *)v14 + OBJC_IVAR____TtC8Business13IMBBubbleView_image) = 0;

  sub_1000AA424();
  v23 = &v1[OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_bubbleView];
  v24 = *(void **)&v1[OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_bubbleView];
  *(_QWORD *)v23 = v14;
  *((_QWORD *)v23 + 1) = &off_1000DA838;
  v25 = v14;

  v26 = objc_msgSend(v1, "view");
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v26, "addSubview:", v25);

    v28 = objc_msgSend(v1, "view");
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v30 = (void *)objc_opt_self(NSLayoutConstraint);
      v31 = v25;
      v32 = v29;
      v33 = sub_10003FBA4((uint64_t)&off_1000D5C28, (uint64_t)v31, (uint64_t)v32);

      sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v33);
      objc_msgSend(v30, "activateConstraints:", isa);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_100031724()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBTranscriptEmptyMessageViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBTranscriptEmptyMessageViewController()
{
  return objc_opt_self(_TtC8Business39IMBTranscriptEmptyMessageViewController);
}

double sub_1000317BC(double a1, double a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  double (*v9)(uint64_t, uint64_t, double, double);
  id v10;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_bubbleView);
  if (v5)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_bubbleView + 8);
    ObjectType = swift_getObjectType(v5);
    v8 = *(_QWORD *)(v6 + 8);
    v9 = *(double (**)(uint64_t, uint64_t, double, double))(v8 + 16);
    v10 = v5;
    a1 = v9(ObjectType, v8, a1, a2);

  }
  return a1;
}

uint64_t sub_100031850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031880(a1, a2, a3, a4, "Empty bubble triggered action", 29);
}

uint64_t sub_100031860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031880(a1, a2, a3, a4, "Empty bubble triggered alternative action", 41);
}

uint64_t sub_100031870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031880(a1, a2, a3, a4, "Empty bubble cannot request resize", 34);
}

uint64_t sub_100031880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;

  if (qword_1000EBCB8 != -1)
    a1 = swift_once(&qword_1000EBCB8, sub_100082798);
  v8 = qword_1000F8A90;
  v9 = static os_log_type_t.default.getter(a1);
  return os_log(_:dso:log:type:_:)(a5, a6, 2, &_mh_execute_header, v8, v9, _swiftEmptyArrayStorage);
}

id sub_100031900()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_messagesAppProxy);
  if (!Strong)
    return 0;
  v2 = Strong;
  v3 = objc_msgSend(Strong, "activeConversation");
  swift_unknownObjectRelease(v2);
  return v3;
}

uint64_t sub_10003195C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __int128 v24;
  uint64_t ObjectType;
  char *v26;

  v1 = type metadata accessor for Mirror.AncestorRepresentation(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007D40(&qword_1000ED508);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v0;
  v10 = sub_100007D40(&qword_1000ED050);
  v11 = swift_allocObject(v10, 128, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1000ADFC0;
  strcpy((char *)(v11 + 32), "conversation");
  *(_BYTE *)(v11 + 45) = 0;
  *(_WORD *)(v11 + 46) = -5120;
  v12 = *(void **)&v0[OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_conversation];
  v13 = sub_1000090C8(0, &qword_1000ED510, MSConversation_ptr);
  *(_QWORD *)(v11 + 48) = v12;
  *(_QWORD *)(v11 + 72) = v13;
  *(_QWORD *)(v11 + 80) = 0xD000000000000010;
  *(_QWORD *)(v11 + 88) = 0x80000001000B6770;
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_messagesAppProxy]);
  if (Strong)
  {
    v15 = Strong;
    ObjectType = swift_getObjectType(Strong);
    *(_QWORD *)&v24 = v15;
    sub_100009CF0(&v24, (_OWORD *)(v11 + 96));
  }
  else
  {
    *(_QWORD *)(v11 + 120) = &type metadata for String;
    *(_QWORD *)(v11 + 96) = 7104878;
    *(_QWORD *)(v11 + 104) = 0xE300000000000000;
  }
  v16 = v0;
  v17 = v12;
  v18 = enum case for Mirror.DisplayStyle.class(_:);
  v19 = type metadata accessor for Mirror.DisplayStyle(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v9, v18, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for Mirror.AncestorRepresentation.generated(_:), v1);
  v21 = type metadata accessor for IMBTranscriptEmptyMessageViewController();
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)(&v26, v11, v9, v5, v21);
}

uint64_t sub_100031B84()
{
  return sub_10003195C();
}

uint64_t sub_100031BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HttpClientErrorCode()
{
  return &type metadata for HttpClientErrorCode;
}

id sub_100031BDC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  _BYTE *v19;
  void (*v20)(_BYTE *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  SCNetworkReachabilityRef v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  objc_class *v37;
  id v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Endpoint(0);
  __chkstk_darwin(v9, v10);
  v12 = (uint64_t *)((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for Request(0);
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Business10HttpClient_httpSuccessCodeMin] = 200;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Business10HttpClient_httpSuccessCodeMax] = 299;
  v41 = OBJC_IVAR____TtC8Business10HttpClient_reachability;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Business10HttpClient_reachability] = 0;
  sub_10002B4F0(a1, (uint64_t)&v2[OBJC_IVAR____TtC8Business10HttpClient_endpoint]);
  v43 = a1;
  sub_10002B4F0(a1, (uint64_t)v12);
  v17 = *v12;
  v18 = (char *)v12 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v19 = &v16[*(int *)(v13 + 20)];
  v20 = *(void (**)(_BYTE *, char *, uint64_t))(v5 + 32);
  v42 = v4;
  v20(v19, v18, v4);
  v21 = qword_1000EBCB8;
  v40 = v2;
  if (v21 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v22 = qword_1000F8A90;
  v23 = static os_log_type_t.default.getter();
  v24 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v25 = swift_allocObject(v24, 72, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v25 + 56) = sub_100007D40(&qword_1000EC478);
  *(_QWORD *)(v25 + 64) = sub_10001383C();
  *(_QWORD *)(v25 + 32) = v17;
  swift_bridgeObjectRetain(v17);
  os_log(_:dso:log:type:_:)("Creating network request with parameters %@", 43, 2, &_mh_execute_header, v22, v23, v25);
  swift_bridgeObjectRelease(v25);
  *v16 = 1;
  *(_QWORD *)&v16[*(int *)(v13 + 24)] = v17;
  v26 = v42;
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))(v8, v19, v42);
  v27 = sub_1000367CC((uint64_t)v16, type metadata accessor for Request);
  v28 = URL.absoluteString.getter(v27);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v26);
  v31 = String.utf8CString.getter(v28, v30);
  swift_bridgeObjectRelease(v30);
  v32 = SCNetworkReachabilityCreateWithName(0, (const char *)(v31 + 32));
  swift_release(v31);
  v33 = 0;
  if (v32)
  {
    v34 = type metadata accessor for Reachability();
    swift_allocObject(v34, 88, 7);
    v33 = Reachability.init(networkReachability:)((uint64_t)v32);
  }
  v35 = v40;
  v36 = *(_QWORD *)&v2[v41];
  *(_QWORD *)&v2[v41] = v33;

  swift_release(v36);
  v37 = (objc_class *)type metadata accessor for HttpClient(0);
  v44.receiver = v35;
  v44.super_class = v37;
  v38 = objc_msgSendSuper2(&v44, "init");
  sub_1000367CC(v43, type metadata accessor for Endpoint);
  return v38;
}

void sub_100031F04(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  Swift::String v27;
  void *object;
  __int128 v29;
  unint64_t v30;
  id v31;
  NSString v32;
  Class isa;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  NSString v49;
  Class v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  Class v67;
  id v68;
  id v69;
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  id v82;
  NSString v83;
  Class v84;
  id v85;
  id v86;
  _QWORD v87[3];
  _BYTE v88[16];
  id v89;
  _BYTE v90[80];
  _BYTE v91[80];
  _OWORD v92[2];
  _OWORD v93[2];
  _BYTE v94[80];

  if (a3)
  {
    v11 = objc_opt_self(NSHTTPURLResponse);
    v12 = swift_dynamicCastObjCClass(a3, v11);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = a3;
      v15 = (uint64_t)objc_msgSend(v13, "statusCode");
      if (v15 < 200 || (v15 = (uint64_t)objc_msgSend(v13, "statusCode"), v15 >= 300))
      {
        if (qword_1000EBCB8 != -1)
          v15 = swift_once(&qword_1000EBCB8, sub_100082798);
        v16 = qword_1000F8A90;
        v17 = static os_log_type_t.default.getter(v15);
        v18 = sub_100007D40((uint64_t *)&unk_1000ECE50);
        v19 = swift_allocObject(v18, 72, 7);
        *(_OWORD *)(v19 + 16) = xmmword_1000AF070;
        *(_QWORD *)&v93[0] = objc_msgSend(v13, "statusCode");
        v20 = sub_100036874();
        v21 = BinaryInteger.description.getter(&type metadata for Int, v20);
        v23 = v22;
        *(_QWORD *)(v19 + 56) = &type metadata for String;
        *(_QWORD *)(v19 + 64) = sub_100009084();
        *(_QWORD *)(v19 + 32) = v21;
        *(_QWORD *)(v19 + 40) = v23;
        os_log(_:dso:log:type:_:)("BusinessChat: HttpRequest Error: request returned with status code: %@", 70, 2, &_mh_execute_header, v16, v17, v19);
        swift_bridgeObjectRelease(v19);
        v24 = sub_100007D40(&qword_1000ED050);
        inited = swift_initStackObject(v24, v90);
        *(_OWORD *)(inited + 16) = xmmword_1000AF070;
        *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
        *(_QWORD *)(inited + 40) = v26;
        *(_QWORD *)&v93[0] = 0;
        *((_QWORD *)&v93[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(25);
        swift_bridgeObjectRelease(*((_QWORD *)&v93[0] + 1));
        *(_QWORD *)&v93[0] = 0xD000000000000017;
        *((_QWORD *)&v93[0] + 1) = 0x80000001000B6C40;
        *(_QWORD *)&v92[0] = objc_msgSend(v13, "statusCode");
        v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v27._object;
        String.append(_:)(v27);
        swift_bridgeObjectRelease(object);
        v29 = v93[0];
        *(_QWORD *)(inited + 72) = &type metadata for String;
        *(_OWORD *)(inited + 48) = v29;
        v30 = sub_10004DF18(inited);
        v31 = objc_allocWithZone((Class)NSError);
        v32 = String._bridgeToObjectiveC()();
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v30);
        v34 = objc_msgSend(v31, "initWithDomain:code:userInfo:", v32, 500, isa);

        v35 = v34;
        a6(v34, 1);

        return;
      }

    }
  }
  if (a4)
  {
    v36 = swift_errorRetain(a4);
    if (qword_1000EBCB8 != -1)
      v36 = swift_once(&qword_1000EBCB8, sub_100082798);
    v37 = qword_1000F8A90;
    v38 = static os_log_type_t.error.getter(v36);
    v39 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v40 = swift_allocObject(v39, 72, 7);
    *(_OWORD *)(v40 + 16) = xmmword_1000AF070;
    swift_getErrorValue(a4, v88, v87);
    v41 = Error.localizedDescription.getter(v87[1], v87[2]);
    v43 = v42;
    *(_QWORD *)(v40 + 56) = &type metadata for String;
    *(_QWORD *)(v40 + 64) = sub_100009084();
    *(_QWORD *)(v40 + 32) = v41;
    *(_QWORD *)(v40 + 40) = v43;
    os_log(_:dso:log:type:_:)("BusinessChat: Error in session data task: %@", 44, 2, &_mh_execute_header, v37, v38, v40);
    swift_bridgeObjectRelease(v40);
    swift_errorRetain(a4);
    a6(a4, 1);
    swift_errorRelease(a4);
    swift_errorRelease(a4);
  }
  else if (a2 >> 60 == 15)
  {
    v44 = sub_100007D40(&qword_1000ED050);
    v45 = swift_initStackObject(v44, v94);
    *(_OWORD *)(v45 + 16) = xmmword_1000AF070;
    *(_QWORD *)(v45 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(v45 + 40) = v46;
    *(_QWORD *)(v45 + 72) = &type metadata for String;
    *(_QWORD *)(v45 + 48) = 0xD00000000000001ALL;
    *(_QWORD *)(v45 + 56) = 0x80000001000B6AB0;
    v47 = sub_10004DF18(v45);
    v48 = objc_allocWithZone((Class)NSError);
    v49 = String._bridgeToObjectiveC()();
    v50 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v47);
    v51 = objc_msgSend(v48, "initWithDomain:code:userInfo:", v49, 0, v50);

    if (qword_1000EBCB8 != -1)
      v52 = swift_once(&qword_1000EBCB8, sub_100082798);
    v53 = qword_1000F8A90;
    v54 = static os_log_type_t.error.getter(v52);
    os_log(_:dso:log:type:_:)("BusinessChat: Error in session data task: Empty data in url response", 68, 2, &_mh_execute_header, v53, v54, _swiftEmptyArrayStorage);
    v55 = v51;
    a6(v51, 1);

  }
  else
  {
    v56 = sub_100036830(a1, a2);
    if (qword_1000EBCB8 != -1)
      v56 = swift_once(&qword_1000EBCB8, sub_100082798);
    v57 = qword_1000F8A90;
    v58 = static os_log_type_t.default.getter(v56);
    v59 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v60 = swift_allocObject(v59, 72, 7);
    *(_OWORD *)(v60 + 16) = xmmword_1000AF070;
    *(_QWORD *)&v93[0] = a3;
    v61 = a3;
    v62 = sub_100007D40(&qword_1000ED590);
    v63 = String.init<A>(describing:)(v93, v62);
    v65 = v64;
    *(_QWORD *)(v60 + 56) = &type metadata for String;
    *(_QWORD *)(v60 + 64) = sub_100009084();
    *(_QWORD *)(v60 + 32) = v63;
    *(_QWORD *)(v60 + 40) = v65;
    os_log(_:dso:log:type:_:)("BusinessChat: Server Response: %@", 33, 2, &_mh_execute_header, v57, v58, v60);
    swift_bridgeObjectRelease(v60);
    v66 = (void *)objc_opt_self(NSJSONSerialization);
    v67 = Data._bridgeToObjectiveC()().super.isa;
    v89 = 0;
    v68 = objc_msgSend(v66, "JSONObjectWithData:options:error:", v67, 4, &v89);

    v69 = v89;
    if (v68)
    {
      _bridgeAnyObjectToAny(_:)(v92);
      swift_unknownObjectRelease(v68);
      sub_100009CF0(v92, v93);
      sub_100009C74((uint64_t)v93, (uint64_t)v92);
      v70 = sub_100007D40(&qword_1000EC478);
      if ((swift_dynamicCast(&v89, v92, (char *)&type metadata for Any + 8, v70, 6) & 1) != 0)
      {
        v71 = v89;
        a6(v89, 0);
        sub_100010BE8(a1, a2);
        swift_bridgeObjectRelease(v71);
        sub_100010C40(v93);
        return;
      }
      v75 = sub_100010C40(v93);
    }
    else
    {
      v72 = v69;
      v73 = _convertNSErrorToError(_:)(v69);

      swift_willThrow(v74);
      v75 = swift_errorRelease(v73);
    }
    v76 = qword_1000F8A90;
    v77 = static os_log_type_t.error.getter(v75);
    os_log(_:dso:log:type:_:)("BusinessChat: Error creating dictionary from JSON", 49, 2, &_mh_execute_header, v76, v77, _swiftEmptyArrayStorage);
    v78 = sub_100007D40(&qword_1000ED050);
    v79 = swift_initStackObject(v78, v91);
    *(_OWORD *)(v79 + 16) = xmmword_1000AF070;
    *(_QWORD *)(v79 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(v79 + 40) = v80;
    *(_QWORD *)(v79 + 72) = &type metadata for String;
    *(_QWORD *)(v79 + 48) = 0xD00000000000002ALL;
    *(_QWORD *)(v79 + 56) = 0x80000001000B6B90;
    v81 = sub_10004DF18(v79);
    v82 = objc_allocWithZone((Class)NSError);
    v83 = String._bridgeToObjectiveC()();
    v84 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v81);
    v85 = objc_msgSend(v82, "initWithDomain:code:userInfo:", v83, 0, v84);

    v86 = v85;
    a6(v85, 1);
    sub_100010BE8(a1, a2);

  }
}

uint64_t sub_100032814(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  uint64_t v7;
  void (*v8)(void *, unint64_t, void *, void *);
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v13;

  v6 = a2;
  v8 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    swift_retain(v7);
    v9 = v6;
    v6 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v11 = v10;

  }
  else
  {
    swift_retain(v7);
    v11 = 0xF000000000000000;
  }
  v12 = a3;
  v13 = a4;
  v8(v6, v11, a3, a4);

  sub_100010BE8((uint64_t)v6, v11);
  return swift_release(v7);
}

id sub_1000328F0()
{
  return sub_100032A74(0, (uint64_t (*)(void))type metadata accessor for HttpClient);
}

uint64_t sub_100032940()
{
  return type metadata accessor for HttpClient(0);
}

uint64_t type metadata accessor for HttpClient(uint64_t a1)
{
  uint64_t result;

  result = qword_1000ED550;
  if (!qword_1000ED550)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HttpClient);
  return result;
}

uint64_t sub_100032984(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[4];

  v5[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v5[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, (char *)&value witness table for Builtin.BridgeObject + 64, *(_QWORD *)(result - 8) + 64);
    v5[2] = v4;
    v5[3] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 4, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

id sub_100032A68(uint64_t a1)
{
  return sub_100032A74(a1, type metadata accessor for HttpClientFactory);
}

id sub_100032A74(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for HttpClientFactory()
{
  return objc_opt_self(_TtC8Business17HttpClientFactory);
}

void sub_100032AC4(char *a1, void (*a2)(id), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  const __SCNetworkReachability *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  unint64_t v27;
  id v28;
  NSString v29;
  Class isa;
  id v31;
  id v32;
  uint64_t v33;
  const __SCNetworkReachability *v34;
  char *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  NSString v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  _QWORD *v62;
  void *v63;
  _QWORD *v64;
  char *v65;
  __int128 v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  SCNetworkReachabilityFlags flags[2];
  uint64_t v72;
  uint64_t (*v73)(uint64_t, void *, void *, void *);
  void *v74;
  uint64_t (*v75)();
  _QWORD *v76;
  char v77[80];

  v6 = type metadata accessor for Request(0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Endpoint(0);
  v12 = __chkstk_darwin(v10, v11);
  v14 = (uint64_t *)((char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12, v15);
  v17 = (char *)&v66 - v16;
  v18 = swift_allocObject(&unk_1000D7B60, 32, 7);
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  v19 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Business10HttpClient_reachability];
  if (!v19 || (v20 = *(const __SCNetworkReachability **)(v19 + 48)) == 0)
  {
    v21 = sub_10002B604((uint64_t)a2, a3);
    goto LABEL_7;
  }
  flags[0] = 0;
  sub_10002B604((uint64_t)a2, a3);
  swift_retain(v19);
  if (!SCNetworkReachabilityGetFlags(v20, flags)
    || (flags[0] & 2) == 0
    || (v34 = *(const __SCNetworkReachability **)(v19 + 48)) != 0
    && (flags[0] = 0, SCNetworkReachabilityGetFlags(v34, flags))
    && (~flags[0] & 5) == 0)
  {
    v21 = swift_release(v19);
LABEL_7:
    if (qword_1000EBCB8 != -1)
      v21 = swift_once(&qword_1000EBCB8, sub_100082798);
    v22 = qword_1000F8A90;
    v23 = static os_log_type_t.default.getter(v21);
    os_log(_:dso:log:type:_:)("BusinessChat: the network is not reachable", 42, 2, &_mh_execute_header, v22, v23, _swiftEmptyArrayStorage);
    v24 = sub_100007D40(&qword_1000ED050);
    inited = swift_initStackObject(v24, v77);
    *(_OWORD *)(inited + 16) = xmmword_1000AF070;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v26;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000018;
    *(_QWORD *)(inited + 56) = 0x80000001000B69D0;
    v27 = sub_10004DF18(inited);
    v28 = objc_allocWithZone((Class)NSError);
    v29 = String._bridgeToObjectiveC()();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v27);
    v31 = objc_msgSend(v28, "initWithDomain:code:userInfo:", v29, 0, isa);

    if (a2)
    {
      v32 = v31;
      a2(v31);
      swift_release(v18);

      v31 = v32;
      goto LABEL_13;
    }
    v33 = v18;
LABEL_12:
    swift_release(v33);
    goto LABEL_13;
  }
  sub_10002B4F0((uint64_t)&a1[OBJC_IVAR____TtC8Business10HttpClient_endpoint], (uint64_t)v17);
  sub_10002B4F0((uint64_t)v17, (uint64_t)v14);
  v70 = *v14;
  v35 = (char *)v14 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v36 = &v9[*(int *)(v6 + 20)];
  v37 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v36, v35, v37);
  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v69 = qword_1000F8A90;
  v68 = ((uint64_t (*)(void))static os_log_type_t.default.getter)();
  v67 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v38 = swift_allocObject(v67, 72, 7);
  v66 = xmmword_1000AF070;
  *(_OWORD *)(v38 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v38 + 56) = sub_100007D40(&qword_1000EC478);
  *(_QWORD *)(v38 + 64) = sub_10001383C();
  v39 = v70;
  *(_QWORD *)(v38 + 32) = v70;
  swift_bridgeObjectRetain(v39);
  os_log(_:dso:log:type:_:)("Creating network request with parameters %@", 43, 2, &_mh_execute_header, v69, v68, v38);
  swift_bridgeObjectRelease(v38);
  *v9 = 1;
  *(_QWORD *)&v9[*(int *)(v6 + 24)] = v39;
  sub_1000367CC((uint64_t)v17, type metadata accessor for Endpoint);
  sub_10008A590();
  v41 = v40;
  v42 = sub_1000367CC((uint64_t)v9, type metadata accessor for Request);
  if (!v41)
  {
    v51 = objc_allocWithZone((Class)NSError);
    v52 = String._bridgeToObjectiveC()();
    v31 = objc_msgSend(v51, "initWithDomain:code:userInfo:", v52, 1, 0);

    v53 = qword_1000F8A90;
    v54 = static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)("BusinessChat: Error creating url request", 40, 2, &_mh_execute_header, v53, v54, _swiftEmptyArrayStorage);
    if (a2)
    {
      v55 = v31;
      a2(v31);
      swift_release(v18);
      swift_release(v19);

      v31 = v55;
      goto LABEL_13;
    }
    swift_release(v18);
    v33 = v19;
    goto LABEL_12;
  }
  v43 = qword_1000F8A90;
  v44 = static os_log_type_t.default.getter(v42);
  v45 = swift_allocObject(v67, 72, 7);
  *(_OWORD *)(v45 + 16) = v66;
  v46 = objc_msgSend(v41, "HTTPBody");
  if (v46)
  {
    v47 = v46;
    v48 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v50 = v49;

  }
  else
  {
    v48 = 0;
    v50 = 0xF000000000000000;
  }
  *(_QWORD *)flags = v48;
  v72 = v50;
  v56 = sub_100007D40(&qword_1000ED588);
  v57 = String.init<A>(describing:)(flags, v56);
  v59 = v58;
  *(_QWORD *)(v45 + 56) = &type metadata for String;
  *(_QWORD *)(v45 + 64) = sub_100009084();
  *(_QWORD *)(v45 + 32) = v57;
  *(_QWORD *)(v45 + 40) = v59;
  os_log(_:dso:log:type:_:)("BusinessChat: Client URL Request: %@", 36, 2, &_mh_execute_header, v43, v44, v45);
  swift_bridgeObjectRelease(v45);
  v60 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "ephemeralSessionConfiguration");
  v61 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v60);

  v62 = (_QWORD *)swift_allocObject(&unk_1000D7B88, 40, 7);
  v62[2] = a1;
  v62[3] = sub_100036958;
  v62[4] = v18;
  v75 = sub_100037188;
  v76 = v62;
  *(_QWORD *)flags = _NSConcreteStackBlock;
  v72 = 1107296256;
  v73 = sub_100032814;
  v74 = &unk_1000D7BA0;
  v63 = _Block_copy(flags);
  v64 = v76;
  v65 = a1;
  swift_retain(v18);
  swift_release(v64);
  v31 = objc_msgSend(v61, "dataTaskWithRequest:completionHandler:", v41, v63);
  _Block_release(v63);
  objc_msgSend(v31, "resume");
  swift_release(v18);
  swift_release(v19);

LABEL_13:
}

void sub_10003322C(char *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  const __SCNetworkReachability *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  unint64_t v28;
  id v29;
  NSString v30;
  Class isa;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  const __SCNetworkReachability *v36;
  uint64_t v37;
  char *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  _QWORD *v66;
  void *v67;
  _QWORD *v68;
  char *v69;
  _QWORD v70[2];
  __int128 v71;
  uint64_t v72;
  SCNetworkReachabilityFlags flags[2];
  uint64_t v74;
  uint64_t (*v75)(uint64_t, void *, void *, void *);
  void *v76;
  uint64_t (*v77)();
  _QWORD *v78;
  char v79[80];

  v6 = type metadata accessor for Request(0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Endpoint(0);
  v12 = __chkstk_darwin(v10, v11);
  v14 = (_QWORD *)((char *)v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12, v15);
  v17 = (char *)v70 - v16;
  v18 = swift_allocObject(&unk_1000D7BD8, 32, 7);
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  v19 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Business10HttpClient_reachability];
  if (!v19 || (v20 = *(const __SCNetworkReachability **)(v19 + 48)) == 0)
  {
    swift_bridgeObjectRetain(a2);
    v22 = a3;
    goto LABEL_7;
  }
  flags[0] = 0;
  swift_bridgeObjectRetain(a2);
  v21 = a3;
  swift_retain(v19);
  if (!SCNetworkReachabilityGetFlags(v20, flags)
    || (flags[0] & 2) == 0
    || (v36 = *(const __SCNetworkReachability **)(v19 + 48)) != 0
    && (flags[0] = 0, SCNetworkReachabilityGetFlags(v36, flags))
    && (~flags[0] & 5) == 0)
  {
    v22 = (id)swift_release(v19);
LABEL_7:
    if (qword_1000EBCB8 != -1)
      v22 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v23 = qword_1000F8A90;
    v24 = static os_log_type_t.default.getter(v22);
    os_log(_:dso:log:type:_:)("BusinessChat: the network is not reachable", 42, 2, &_mh_execute_header, v23, v24, _swiftEmptyArrayStorage);
    v25 = sub_100007D40(&qword_1000ED050);
    inited = swift_initStackObject(v25, v79);
    *(_OWORD *)(inited + 16) = xmmword_1000AF070;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v27;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000018;
    *(_QWORD *)(inited + 56) = 0x80000001000B69D0;
    v28 = sub_10004DF18(inited);
    v29 = objc_allocWithZone((Class)NSError);
    v30 = String._bridgeToObjectiveC()();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v28);
    v32 = objc_msgSend(v29, "initWithDomain:code:userInfo:", v30, 0, isa);

    v33 = v32;
    sub_1000250EC((uint64_t)v33);
    v34 = v18;
    goto LABEL_10;
  }
  v70[1] = v21;
  sub_10002B4F0((uint64_t)&a1[OBJC_IVAR____TtC8Business10HttpClient_endpoint], (uint64_t)v17);
  sub_10002B4F0((uint64_t)v17, (uint64_t)v14);
  v37 = *v14;
  v38 = (char *)v14 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v39 = &v9[*(int *)(v6 + 20)];
  v40 = type metadata accessor for URL(0);
  v41 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v39, v38, v40);
  if (qword_1000EBCB8 != -1)
    v41 = swift_once(&qword_1000EBCB8, sub_100082798);
  v42 = qword_1000F8A90;
  v43 = static os_log_type_t.default.getter(v41);
  v72 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v44 = swift_allocObject(v72, 72, 7);
  v71 = xmmword_1000AF070;
  *(_OWORD *)(v44 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v44 + 56) = sub_100007D40(&qword_1000EC478);
  *(_QWORD *)(v44 + 64) = sub_10001383C();
  *(_QWORD *)(v44 + 32) = v37;
  swift_bridgeObjectRetain(v37);
  os_log(_:dso:log:type:_:)("Creating network request with parameters %@", 43, 2, &_mh_execute_header, v42, v43, v44);
  swift_bridgeObjectRelease(v44);
  *v9 = 1;
  *(_QWORD *)&v9[*(int *)(v6 + 24)] = v37;
  sub_1000367CC((uint64_t)v17, type metadata accessor for Endpoint);
  sub_10008A590();
  v46 = v45;
  v47 = sub_1000367CC((uint64_t)v9, type metadata accessor for Request);
  if (!v46)
  {
    v56 = objc_allocWithZone((Class)NSError);
    v57 = String._bridgeToObjectiveC()();
    v58 = objc_msgSend(v56, "initWithDomain:code:userInfo:", v57, 1, 0);

    v59 = qword_1000F8A90;
    v60 = static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)("BusinessChat: Error creating url request", 40, 2, &_mh_execute_header, v59, v60, _swiftEmptyArrayStorage);
    v33 = v58;
    sub_1000250EC((uint64_t)v33);
    swift_release(v18);
    v34 = v19;
LABEL_10:
    swift_release(v34);
    v35 = v33;
    goto LABEL_11;
  }
  v48 = qword_1000F8A90;
  v49 = static os_log_type_t.default.getter(v47);
  v50 = swift_allocObject(v72, 72, 7);
  *(_OWORD *)(v50 + 16) = v71;
  v51 = objc_msgSend(v46, "HTTPBody");
  if (v51)
  {
    v52 = v51;
    v53 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v55 = v54;

  }
  else
  {
    v53 = 0;
    v55 = 0xF000000000000000;
  }
  *(_QWORD *)flags = v53;
  v74 = v55;
  v61 = sub_100007D40(&qword_1000ED588);
  v62 = String.init<A>(describing:)(flags, v61);
  v64 = v63;
  *(_QWORD *)(v50 + 56) = &type metadata for String;
  *(_QWORD *)(v50 + 64) = sub_100009084();
  *(_QWORD *)(v50 + 32) = v62;
  *(_QWORD *)(v50 + 40) = v64;
  os_log(_:dso:log:type:_:)("BusinessChat: Client URL Request: %@", 36, 2, &_mh_execute_header, v48, v49, v50);
  swift_bridgeObjectRelease(v50);
  v65 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "ephemeralSessionConfiguration");
  v33 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v65);

  v66 = (_QWORD *)swift_allocObject(&unk_1000D7C00, 40, 7);
  v66[2] = a1;
  v66[3] = sub_100036994;
  v66[4] = v18;
  v77 = sub_100037188;
  v78 = v66;
  *(_QWORD *)flags = _NSConcreteStackBlock;
  v74 = 1107296256;
  v75 = sub_100032814;
  v76 = &unk_1000D7C18;
  v67 = _Block_copy(flags);
  v68 = v78;
  v69 = a1;
  swift_retain(v18);
  swift_release(v68);
  v35 = objc_msgSend(v33, "dataTaskWithRequest:completionHandler:", v46, v67);
  _Block_release(v67);
  objc_msgSend(v35, "resume");
  swift_release(v18);
  swift_release(v19);

LABEL_11:
}

void sub_100033950(char *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  const __SCNetworkReachability *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  unint64_t v31;
  id v32;
  NSString v33;
  Class isa;
  id v35;
  id v36;
  id v37;
  id v38;
  const __SCNetworkReachability *v39;
  void *v40;
  uint64_t v41;
  char *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  NSString v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  _QWORD *v70;
  void *v71;
  void *v72;
  _QWORD *v73;
  id v74;
  _QWORD v75[2];
  __int128 v76;
  id v77;
  void *v78;
  SCNetworkReachabilityFlags flags[2];
  uint64_t v80;
  uint64_t (*v81)(uint64_t, void *, void *, void *);
  void *v82;
  uint64_t (*v83)();
  _QWORD *v84;
  char v85[80];

  v8 = type metadata accessor for Request(0);
  __chkstk_darwin(v8, v9);
  v11 = (char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Endpoint(0);
  v14 = __chkstk_darwin(v12, v13);
  v16 = (_QWORD *)((char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v17);
  v19 = (char *)v75 - v18;
  v20 = (_QWORD *)swift_allocObject(&unk_1000D7AE8, 40, 7);
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = a4;
  v21 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Business10HttpClient_reachability];
  if (!v21 || (v78 = a1, (v22 = *(const __SCNetworkReachability **)(v21 + 48)) == 0))
  {
    v25 = a2;
    swift_bridgeObjectRetain(a3);
    v24 = a4;
    goto LABEL_7;
  }
  flags[0] = 0;
  v77 = a2;
  swift_bridgeObjectRetain(a3);
  v23 = a4;
  swift_retain(v21);
  if (!SCNetworkReachabilityGetFlags(v22, flags)
    || (flags[0] & 2) == 0
    || (v39 = *(const __SCNetworkReachability **)(v21 + 48), v40 = v78, v39)
    && (flags[0] = 0, SCNetworkReachabilityGetFlags(v39, flags))
    && (~flags[0] & 5) == 0)
  {
    v24 = (id)swift_release(v21);
LABEL_7:
    if (qword_1000EBCB8 != -1)
      v24 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v26 = qword_1000F8A90;
    v27 = static os_log_type_t.default.getter(v24);
    os_log(_:dso:log:type:_:)("BusinessChat: the network is not reachable", 42, 2, &_mh_execute_header, v26, v27, _swiftEmptyArrayStorage);
    v28 = sub_100007D40(&qword_1000ED050);
    inited = swift_initStackObject(v28, v85);
    *(_OWORD *)(inited + 16) = xmmword_1000AF070;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v30;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000018;
    *(_QWORD *)(inited + 56) = 0x80000001000B69D0;
    v31 = sub_10004DF18(inited);
    v32 = objc_allocWithZone((Class)NSError);
    v33 = String._bridgeToObjectiveC()();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v31);
    v35 = objc_msgSend(v32, "initWithDomain:code:userInfo:", v33, 0, isa);

    v36 = v35;
    objc_msgSend(a2, "invalidate");
    swift_errorRetain(v36);
    sub_1000250EC((uint64_t)v36);
    goto LABEL_10;
  }
  v75[1] = v23;
  sub_10002B4F0((uint64_t)v40 + OBJC_IVAR____TtC8Business10HttpClient_endpoint, (uint64_t)v19);
  sub_10002B4F0((uint64_t)v19, (uint64_t)v16);
  v41 = *v16;
  v42 = (char *)v16 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v43 = &v11[*(int *)(v8 + 20)];
  v44 = type metadata accessor for URL(0);
  v45 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v43, v42, v44);
  if (qword_1000EBCB8 != -1)
    v45 = swift_once(&qword_1000EBCB8, sub_100082798);
  v46 = qword_1000F8A90;
  v47 = static os_log_type_t.default.getter(v45);
  v48 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v49 = swift_allocObject(v48, 72, 7);
  v76 = xmmword_1000AF070;
  *(_OWORD *)(v49 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v49 + 56) = sub_100007D40(&qword_1000EC478);
  *(_QWORD *)(v49 + 64) = sub_10001383C();
  *(_QWORD *)(v49 + 32) = v41;
  swift_bridgeObjectRetain(v41);
  os_log(_:dso:log:type:_:)("Creating network request with parameters %@", 43, 2, &_mh_execute_header, v46, v47, v49);
  swift_bridgeObjectRelease(v49);
  *v11 = 1;
  *(_QWORD *)&v11[*(int *)(v8 + 24)] = v41;
  sub_1000367CC((uint64_t)v19, type metadata accessor for Endpoint);
  sub_10008A590();
  v36 = v50;
  v51 = sub_1000367CC((uint64_t)v11, type metadata accessor for Request);
  if (!v36)
  {
    v60 = objc_allocWithZone((Class)NSError);
    v61 = String._bridgeToObjectiveC()();
    v62 = objc_msgSend(v60, "initWithDomain:code:userInfo:", v61, 1, 0);

    v63 = qword_1000F8A90;
    v64 = static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)("BusinessChat: Error creating url request", 40, 2, &_mh_execute_header, v63, v64, _swiftEmptyArrayStorage);
    v36 = v62;
    objc_msgSend(v77, "invalidate");
    swift_errorRetain(v36);
    sub_1000250EC((uint64_t)v36);
    swift_release(v20);
    v20 = (_QWORD *)v21;
LABEL_10:
    v37 = v36;
    v38 = v36;
    goto LABEL_11;
  }
  v52 = qword_1000F8A90;
  v53 = static os_log_type_t.default.getter(v51);
  v54 = swift_allocObject(v48, 72, 7);
  *(_OWORD *)(v54 + 16) = v76;
  v55 = objc_msgSend(v36, "HTTPBody");
  if (v55)
  {
    v56 = v55;
    v57 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v59 = v58;

  }
  else
  {
    v57 = 0;
    v59 = 0xF000000000000000;
  }
  *(_QWORD *)flags = v57;
  v80 = v59;
  v65 = sub_100007D40(&qword_1000ED588);
  v66 = String.init<A>(describing:)(flags, v65);
  v68 = v67;
  *(_QWORD *)(v54 + 56) = &type metadata for String;
  *(_QWORD *)(v54 + 64) = sub_100009084();
  *(_QWORD *)(v54 + 32) = v66;
  *(_QWORD *)(v54 + 40) = v68;
  os_log(_:dso:log:type:_:)("BusinessChat: Client URL Request: %@", 36, 2, &_mh_execute_header, v52, v53, v54);
  swift_bridgeObjectRelease(v54);
  v69 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "ephemeralSessionConfiguration");
  v37 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v69);

  v70 = (_QWORD *)swift_allocObject(&unk_1000D7B10, 40, 7);
  v71 = v78;
  v70[2] = v78;
  v70[3] = sub_100036918;
  v70[4] = v20;
  v83 = sub_100037188;
  v84 = v70;
  *(_QWORD *)flags = _NSConcreteStackBlock;
  v80 = 1107296256;
  v81 = sub_100032814;
  v82 = &unk_1000D7B28;
  v72 = _Block_copy(flags);
  v73 = v84;
  v74 = v71;
  swift_retain(v20);
  swift_release(v73);
  v38 = objc_msgSend(v37, "dataTaskWithRequest:completionHandler:", v36, v72);
  _Block_release(v72);
  objc_msgSend(v38, "resume");
  swift_release(v20);
  v20 = (_QWORD *)v21;
LABEL_11:
  swift_release(v20);

}

void sub_1000340CC(char *a1, void *a2, void *a3, const void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  const __SCNetworkReachability *v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  unint64_t v33;
  id v34;
  NSString v35;
  Class isa;
  id v37;
  id v38;
  id v39;
  const __SCNetworkReachability *v40;
  uint64_t v41;
  char *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  NSString v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  _QWORD *v73;
  void *v74;
  void *v75;
  _QWORD *v76;
  id v77;
  __int128 v78;
  uint64_t v79;
  id v80;
  id v81;
  void *v82;
  uint64_t v83;
  SCNetworkReachabilityFlags flags[2];
  uint64_t v85;
  uint64_t (*v86)(uint64_t, void *, void *, void *);
  void *v87;
  uint64_t (*v88)();
  _QWORD *v89;
  char v90[80];

  v8 = type metadata accessor for Request(0);
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Endpoint(0);
  v14 = __chkstk_darwin(v12, v13);
  v16 = (uint64_t *)((char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v17);
  v19 = (char *)&v78 - v18;
  v20 = swift_allocObject(&unk_1000D7A48, 24, 7);
  *(_QWORD *)(v20 + 16) = a4;
  v21 = (_QWORD *)swift_allocObject(&unk_1000D7A70, 48, 7);
  v21[2] = a2;
  v21[3] = sub_1000368D0;
  v21[4] = v20;
  v21[5] = a3;
  v82 = a1;
  v22 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Business10HttpClient_reachability];
  if (v22)
  {
    v83 = v20;
    v23 = *(const __SCNetworkReachability **)(v22 + 48);
    if (v23)
    {
      flags[0] = 0;
      _Block_copy(a4);
      _Block_copy(a4);
      v81 = a2;
      swift_retain(v83);
      v80 = a3;
      swift_retain(v22);
      if (SCNetworkReachabilityGetFlags(v23, flags))
      {
        if ((flags[0] & 2) != 0)
        {
          v40 = *(const __SCNetworkReachability **)(v22 + 48);
          if (!v40 || (flags[0] = 0, !SCNetworkReachabilityGetFlags(v40, flags)) || (~flags[0] & 5) != 0)
          {
            sub_10002B4F0((uint64_t)v82 + OBJC_IVAR____TtC8Business10HttpClient_endpoint, (uint64_t)v19);
            sub_10002B4F0((uint64_t)v19, (uint64_t)v16);
            v41 = *v16;
            v42 = (char *)v16 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
            v43 = &v11[*(int *)(v8 + 20)];
            v44 = type metadata accessor for URL(0);
            v45 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v43, v42, v44);
            if (qword_1000EBCB8 != -1)
              v45 = swift_once(&qword_1000EBCB8, sub_100082798);
            v46 = qword_1000F8A90;
            v47 = static os_log_type_t.default.getter(v45);
            v79 = sub_100007D40((uint64_t *)&unk_1000ECE50);
            v48 = swift_allocObject(v79, 72, 7);
            v78 = xmmword_1000AF070;
            *(_OWORD *)(v48 + 16) = xmmword_1000AF070;
            *(_QWORD *)(v48 + 56) = sub_100007D40(&qword_1000EC478);
            *(_QWORD *)(v48 + 64) = sub_10001383C();
            *(_QWORD *)(v48 + 32) = v41;
            swift_bridgeObjectRetain(v41);
            os_log(_:dso:log:type:_:)("Creating network request with parameters %@", 43, 2, &_mh_execute_header, v46, v47, v48);
            swift_bridgeObjectRelease(v48);
            *v11 = 1;
            *(_QWORD *)&v11[*(int *)(v8 + 24)] = v41;
            sub_1000367CC((uint64_t)v19, type metadata accessor for Endpoint);
            sub_10008A590();
            v50 = v49;
            v51 = sub_1000367CC((uint64_t)v11, type metadata accessor for Request);
            if (v50)
            {
              v52 = qword_1000F8A90;
              v53 = static os_log_type_t.default.getter(v51);
              v54 = swift_allocObject(v79, 72, 7);
              *(_OWORD *)(v54 + 16) = v78;
              v55 = objc_msgSend(v50, "HTTPBody");
              if (v55)
              {
                v56 = v55;
                v57 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v55);
                v59 = v58;

              }
              else
              {
                v57 = 0;
                v59 = 0xF000000000000000;
              }
              *(_QWORD *)flags = v57;
              v85 = v59;
              v68 = sub_100007D40(&qword_1000ED588);
              v69 = String.init<A>(describing:)(flags, v68);
              v71 = v70;
              *(_QWORD *)(v54 + 56) = &type metadata for String;
              *(_QWORD *)(v54 + 64) = sub_100009084();
              *(_QWORD *)(v54 + 32) = v69;
              *(_QWORD *)(v54 + 40) = v71;
              os_log(_:dso:log:type:_:)("BusinessChat: Client URL Request: %@", 36, 2, &_mh_execute_header, v52, v53, v54);
              swift_bridgeObjectRelease(v54);
              v72 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "ephemeralSessionConfiguration");
              v38 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v72);

              v73 = (_QWORD *)swift_allocObject(&unk_1000D7A98, 40, 7);
              v74 = v82;
              v73[2] = v82;
              v73[3] = sub_1000368DC;
              v73[4] = v21;
              v88 = sub_100037188;
              v89 = v73;
              *(_QWORD *)flags = _NSConcreteStackBlock;
              v85 = 1107296256;
              v86 = sub_100032814;
              v87 = &unk_1000D7AB0;
              v75 = _Block_copy(flags);
              v76 = v89;
              v77 = v74;
              swift_retain(v21);
              swift_release(v76);
              v39 = objc_msgSend(v38, "dataTaskWithRequest:completionHandler:", v50, v75);
              _Block_release(v75);
              objc_msgSend(v39, "resume");

              swift_release(v21);
              swift_release(v22);

              v25 = v83;
            }
            else
            {
              v60 = objc_allocWithZone((Class)NSError);
              v61 = String._bridgeToObjectiveC()();
              v62 = objc_msgSend(v60, "initWithDomain:code:userInfo:", v61, 1, 0);

              v63 = qword_1000F8A90;
              v65 = static os_log_type_t.error.getter(v64);
              os_log(_:dso:log:type:_:)("BusinessChat: Error creating url request", 40, 2, &_mh_execute_header, v63, v65, _swiftEmptyArrayStorage);
              _Block_copy(a4);
              v38 = v62;
              v66 = (uint64_t)v62;
              v67 = v81;
              sub_100029860(v66, 1, (uint64_t)v81, (uint64_t)v80, (uint64_t)a4);
              _Block_release(a4);

              swift_release(v21);
              swift_release(v22);
              v39 = v38;
              v25 = v83;
            }
            goto LABEL_11;
          }
        }
      }
      v24 = (id)swift_release(v22);
      v25 = v83;
    }
    else
    {
      _Block_copy(a4);
      _Block_copy(a4);
      v27 = a2;
      v25 = v83;
      swift_retain(v83);
      v24 = a3;
    }
  }
  else
  {
    _Block_copy(a4);
    _Block_copy(a4);
    v26 = a2;
    swift_retain(v20);
    v24 = a3;
    v25 = v20;
  }
  if (qword_1000EBCB8 != -1)
    v24 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
  v28 = qword_1000F8A90;
  v29 = static os_log_type_t.default.getter(v24);
  os_log(_:dso:log:type:_:)("BusinessChat: the network is not reachable", 42, 2, &_mh_execute_header, v28, v29, _swiftEmptyArrayStorage);
  v30 = sub_100007D40(&qword_1000ED050);
  inited = swift_initStackObject(v30, v90);
  *(_OWORD *)(inited + 16) = xmmword_1000AF070;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
  *(_QWORD *)(inited + 40) = v32;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = 0xD000000000000018;
  *(_QWORD *)(inited + 56) = 0x80000001000B69D0;
  v33 = sub_10004DF18(inited);
  v34 = objc_allocWithZone((Class)NSError);
  v35 = String._bridgeToObjectiveC()();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v33);
  v37 = objc_msgSend(v34, "initWithDomain:code:userInfo:", v35, 0, isa);

  _Block_copy(a4);
  v38 = v37;
  sub_100029860((uint64_t)v37, 1, (uint64_t)a2, (uint64_t)a3, (uint64_t)a4);
  _Block_release(a4);

  swift_release(v21);
  v39 = v38;
LABEL_11:

  swift_release(v25);
  _Block_release(a4);
}

void sub_100034900(char *a1, void *a2, void (*a3)(id), uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  const __SCNetworkReachability *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  unint64_t v32;
  id v33;
  NSString v34;
  Class isa;
  id v36;
  id v37;
  _QWORD *v38;
  id v39;
  const __SCNetworkReachability *v40;
  void *v41;
  uint64_t v42;
  char *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  id v61;
  NSString v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  _QWORD *v72;
  void *v73;
  void *v74;
  _QWORD *v75;
  id v76;
  __int128 v77;
  uint64_t v78;
  id v79;
  id v80;
  void *v81;
  void (*v82)(id);
  SCNetworkReachabilityFlags flags[2];
  uint64_t v84;
  uint64_t (*v85)(uint64_t, void *, void *, void *);
  void *v86;
  uint64_t (*v87)();
  _QWORD *v88;
  char v89[80];

  v10 = type metadata accessor for Request(0);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Endpoint(0);
  v16 = __chkstk_darwin(v14, v15);
  v18 = (uint64_t *)((char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16, v19);
  v21 = (char *)&v77 - v20;
  v22 = (_QWORD *)swift_allocObject(&unk_1000D7D40, 48, 7);
  v22[2] = a2;
  v22[3] = a3;
  v82 = a3;
  v22[4] = a4;
  v22[5] = a5;
  v23 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Business10HttpClient_reachability];
  if (!v23 || (v81 = a1, (v24 = *(const __SCNetworkReachability **)(v23 + 48)) == 0))
  {
    v26 = a2;
    swift_retain(a4);
    v25 = a5;
    goto LABEL_7;
  }
  flags[0] = 0;
  v80 = a2;
  swift_retain(a4);
  v79 = a5;
  swift_retain(v23);
  if (!SCNetworkReachabilityGetFlags(v24, flags)
    || (flags[0] & 2) == 0
    || (v40 = *(const __SCNetworkReachability **)(v23 + 48), v41 = v81, v40)
    && (flags[0] = 0, SCNetworkReachabilityGetFlags(v40, flags))
    && (~flags[0] & 5) == 0)
  {
    v25 = (id)swift_release(v23);
LABEL_7:
    if (qword_1000EBCB8 != -1)
      v25 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v27 = qword_1000F8A90;
    v28 = static os_log_type_t.default.getter(v25);
    os_log(_:dso:log:type:_:)("BusinessChat: the network is not reachable", 42, 2, &_mh_execute_header, v27, v28, _swiftEmptyArrayStorage);
    v29 = sub_100007D40(&qword_1000ED050);
    inited = swift_initStackObject(v29, v89);
    *(_OWORD *)(inited + 16) = xmmword_1000AF070;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v31;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000018;
    *(_QWORD *)(inited + 56) = 0x80000001000B69D0;
    v32 = sub_10004DF18(inited);
    v33 = objc_allocWithZone((Class)NSError);
    v34 = String._bridgeToObjectiveC()();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v32);
    v36 = objc_msgSend(v33, "initWithDomain:code:userInfo:", v34, 0, isa);

    v37 = v36;
    sub_1000279CC((uint64_t)v36, 1, (uint64_t)a2, v82, a4, a5);
    v38 = v22;
    goto LABEL_10;
  }
  sub_10002B4F0((uint64_t)v41 + OBJC_IVAR____TtC8Business10HttpClient_endpoint, (uint64_t)v21);
  sub_10002B4F0((uint64_t)v21, (uint64_t)v18);
  v42 = *v18;
  v43 = (char *)v18 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v44 = &v13[*(int *)(v10 + 20)];
  v45 = type metadata accessor for URL(0);
  v46 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v44, v43, v45);
  if (qword_1000EBCB8 != -1)
    v46 = swift_once(&qword_1000EBCB8, sub_100082798);
  v47 = qword_1000F8A90;
  v48 = static os_log_type_t.default.getter(v46);
  v78 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v49 = swift_allocObject(v78, 72, 7);
  v77 = xmmword_1000AF070;
  *(_OWORD *)(v49 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v49 + 56) = sub_100007D40(&qword_1000EC478);
  *(_QWORD *)(v49 + 64) = sub_10001383C();
  *(_QWORD *)(v49 + 32) = v42;
  swift_bridgeObjectRetain(v42);
  os_log(_:dso:log:type:_:)("Creating network request with parameters %@", 43, 2, &_mh_execute_header, v47, v48, v49);
  swift_bridgeObjectRelease(v49);
  *v13 = 1;
  *(_QWORD *)&v13[*(int *)(v10 + 24)] = v42;
  sub_1000367CC((uint64_t)v21, type metadata accessor for Endpoint);
  sub_10008A590();
  v51 = v50;
  v52 = sub_1000367CC((uint64_t)v13, type metadata accessor for Request);
  if (!v51)
  {
    v61 = objc_allocWithZone((Class)NSError);
    v62 = String._bridgeToObjectiveC()();
    v63 = objc_msgSend(v61, "initWithDomain:code:userInfo:", v62, 1, 0);

    v64 = qword_1000F8A90;
    v66 = static os_log_type_t.error.getter(v65);
    os_log(_:dso:log:type:_:)("BusinessChat: Error creating url request", 40, 2, &_mh_execute_header, v64, v66, _swiftEmptyArrayStorage);
    v37 = v63;
    sub_1000279CC((uint64_t)v63, 1, (uint64_t)v80, v82, a4, v79);
    swift_release(v22);
    v38 = (_QWORD *)v23;
LABEL_10:
    swift_release(v38);
    v39 = v37;
    goto LABEL_11;
  }
  v53 = qword_1000F8A90;
  v54 = static os_log_type_t.default.getter(v52);
  v55 = swift_allocObject(v78, 72, 7);
  *(_OWORD *)(v55 + 16) = v77;
  v56 = objc_msgSend(v51, "HTTPBody");
  if (v56)
  {
    v57 = v56;
    v58 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v60 = v59;

  }
  else
  {
    v58 = 0;
    v60 = 0xF000000000000000;
  }
  *(_QWORD *)flags = v58;
  v84 = v60;
  v67 = sub_100007D40(&qword_1000ED588);
  v68 = String.init<A>(describing:)(flags, v67);
  v70 = v69;
  *(_QWORD *)(v55 + 56) = &type metadata for String;
  *(_QWORD *)(v55 + 64) = sub_100009084();
  *(_QWORD *)(v55 + 32) = v68;
  *(_QWORD *)(v55 + 40) = v70;
  os_log(_:dso:log:type:_:)("BusinessChat: Client URL Request: %@", 36, 2, &_mh_execute_header, v53, v54, v55);
  swift_bridgeObjectRelease(v55);
  v71 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "ephemeralSessionConfiguration");
  v37 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v71);

  v72 = (_QWORD *)swift_allocObject(&unk_1000D7D68, 40, 7);
  v73 = v81;
  v72[2] = v81;
  v72[3] = sub_1000368DC;
  v72[4] = v22;
  v87 = sub_100037188;
  v88 = v72;
  *(_QWORD *)flags = _NSConcreteStackBlock;
  v84 = 1107296256;
  v85 = sub_100032814;
  v86 = &unk_1000D7D80;
  v74 = _Block_copy(flags);
  v75 = v88;
  v76 = v73;
  swift_retain(v22);
  swift_release(v75);
  v39 = objc_msgSend(v37, "dataTaskWithRequest:completionHandler:", v51, v74);
  _Block_release(v74);
  objc_msgSend(v39, "resume");
  swift_release(v22);
  swift_release(v23);

LABEL_11:
}

void sub_100035078(char *a1, void *a2, const void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  const __SCNetworkReachability *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  unint64_t v29;
  id v30;
  NSString v31;
  Class isa;
  id v33;
  id v34;
  _QWORD *v35;
  id v36;
  const __SCNetworkReachability *v37;
  void *v38;
  uint64_t v39;
  char *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  _QWORD *v69;
  void *v70;
  void *v71;
  _QWORD *v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  SCNetworkReachabilityFlags flags[2];
  uint64_t v80;
  uint64_t (*v81)(uint64_t, void *, void *, void *);
  void *v82;
  uint64_t (*v83)();
  _QWORD *v84;
  char v85[80];

  v6 = type metadata accessor for Request(0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Endpoint(0);
  v12 = __chkstk_darwin(v10, v11);
  v14 = (uint64_t *)((char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12, v15);
  v17 = (char *)&v74 - v16;
  v18 = swift_allocObject(&unk_1000D79A8, 24, 7);
  *(_QWORD *)(v18 + 16) = a3;
  v19 = (_QWORD *)swift_allocObject(&unk_1000D79D0, 40, 7);
  v19[2] = a2;
  v19[3] = sub_1000367B0;
  v19[4] = v18;
  v20 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Business10HttpClient_reachability];
  if (!v20 || (v78 = a1, (v21 = *(const __SCNetworkReachability **)(v20 + 48)) == 0))
  {
    _Block_copy(a3);
    _Block_copy(a3);
    v23 = a2;
    v22 = swift_retain(v18);
    goto LABEL_7;
  }
  flags[0] = 0;
  _Block_copy(a3);
  _Block_copy(a3);
  v77 = a2;
  swift_retain(v18);
  swift_retain(v20);
  if (!SCNetworkReachabilityGetFlags(v21, flags)
    || (flags[0] & 2) == 0
    || (v37 = *(const __SCNetworkReachability **)(v20 + 48), v38 = v78, v37)
    && (flags[0] = 0, SCNetworkReachabilityGetFlags(v37, flags))
    && (~flags[0] & 5) == 0)
  {
    v22 = swift_release(v20);
LABEL_7:
    if (qword_1000EBCB8 != -1)
      v22 = swift_once(&qword_1000EBCB8, sub_100082798);
    v24 = qword_1000F8A90;
    v25 = static os_log_type_t.default.getter(v22);
    os_log(_:dso:log:type:_:)("BusinessChat: the network is not reachable", 42, 2, &_mh_execute_header, v24, v25, _swiftEmptyArrayStorage);
    v26 = sub_100007D40(&qword_1000ED050);
    inited = swift_initStackObject(v26, v85);
    *(_OWORD *)(inited + 16) = xmmword_1000AF070;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v28;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000018;
    *(_QWORD *)(inited + 56) = 0x80000001000B69D0;
    v29 = sub_10004DF18(inited);
    v30 = objc_allocWithZone((Class)NSError);
    v31 = String._bridgeToObjectiveC()();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v29);
    v33 = objc_msgSend(v30, "initWithDomain:code:userInfo:", v31, 0, isa);

    _Block_copy(a3);
    v34 = v33;
    sub_100029F2C((uint64_t)v33, 1, (uint64_t)a2, (uint64_t)a3);
    _Block_release(a3);

    v35 = v19;
    goto LABEL_10;
  }
  sub_10002B4F0((uint64_t)v38 + OBJC_IVAR____TtC8Business10HttpClient_endpoint, (uint64_t)v17);
  sub_10002B4F0((uint64_t)v17, (uint64_t)v14);
  v39 = *v14;
  v40 = (char *)v14 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v41 = &v9[*(int *)(v6 + 20)];
  v42 = type metadata accessor for URL(0);
  v43 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v41, v40, v42);
  if (qword_1000EBCB8 != -1)
    v43 = swift_once(&qword_1000EBCB8, sub_100082798);
  v76 = qword_1000F8A90;
  v44 = static os_log_type_t.default.getter(v43);
  v75 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v45 = swift_allocObject(v75, 72, 7);
  v74 = xmmword_1000AF070;
  *(_OWORD *)(v45 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v45 + 56) = sub_100007D40(&qword_1000EC478);
  *(_QWORD *)(v45 + 64) = sub_10001383C();
  *(_QWORD *)(v45 + 32) = v39;
  swift_bridgeObjectRetain(v39);
  os_log(_:dso:log:type:_:)("Creating network request with parameters %@", 43, 2, &_mh_execute_header, v76, v44, v45);
  swift_bridgeObjectRelease(v45);
  *v9 = 1;
  *(_QWORD *)&v9[*(int *)(v6 + 24)] = v39;
  sub_1000367CC((uint64_t)v17, type metadata accessor for Endpoint);
  sub_10008A590();
  v47 = v46;
  v48 = sub_1000367CC((uint64_t)v9, type metadata accessor for Request);
  if (!v47)
  {
    v56 = objc_allocWithZone((Class)NSError);
    v57 = String._bridgeToObjectiveC()();
    v58 = objc_msgSend(v56, "initWithDomain:code:userInfo:", v57, 1, 0);

    v59 = qword_1000F8A90;
    v61 = static os_log_type_t.error.getter(v60);
    os_log(_:dso:log:type:_:)("BusinessChat: Error creating url request", 40, 2, &_mh_execute_header, v59, v61, _swiftEmptyArrayStorage);
    _Block_copy(a3);
    v34 = v58;
    v62 = (uint64_t)v58;
    v63 = v77;
    sub_100029F2C(v62, 1, (uint64_t)v77, (uint64_t)a3);
    _Block_release(a3);

    swift_release(v19);
    v35 = (_QWORD *)v20;
LABEL_10:
    swift_release(v35);
    v36 = v34;
    goto LABEL_11;
  }
  v76 = qword_1000F8A90;
  v49 = static os_log_type_t.default.getter(v48);
  v50 = swift_allocObject(v75, 72, 7);
  *(_OWORD *)(v50 + 16) = v74;
  v51 = objc_msgSend(v47, "HTTPBody");
  if (v51)
  {
    v52 = v51;
    v53 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v55 = v54;

  }
  else
  {
    v53 = 0;
    v55 = 0xF000000000000000;
  }
  *(_QWORD *)flags = v53;
  v80 = v55;
  v64 = sub_100007D40(&qword_1000ED588);
  v65 = String.init<A>(describing:)(flags, v64);
  v67 = v66;
  *(_QWORD *)(v50 + 56) = &type metadata for String;
  *(_QWORD *)(v50 + 64) = sub_100009084();
  *(_QWORD *)(v50 + 32) = v65;
  *(_QWORD *)(v50 + 40) = v67;
  os_log(_:dso:log:type:_:)("BusinessChat: Client URL Request: %@", 36, 2, &_mh_execute_header, v76, v49, v50);
  swift_bridgeObjectRelease(v50);
  v68 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "ephemeralSessionConfiguration");
  v34 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v68);

  v69 = (_QWORD *)swift_allocObject(&unk_1000D79F8, 40, 7);
  v70 = v78;
  v69[2] = v78;
  v69[3] = sub_1000368BC;
  v69[4] = v19;
  v83 = sub_100037188;
  v84 = v69;
  *(_QWORD *)flags = _NSConcreteStackBlock;
  v80 = 1107296256;
  v81 = sub_100032814;
  v82 = &unk_1000D7A10;
  v71 = _Block_copy(flags);
  v72 = v84;
  v73 = v70;
  swift_retain(v19);
  swift_release(v72);
  v36 = objc_msgSend(v34, "dataTaskWithRequest:completionHandler:", v47, v71);
  _Block_release(v71);
  objc_msgSend(v36, "resume");

  swift_release(v19);
  swift_release(v20);

LABEL_11:
  swift_release(v18);
  _Block_release(a3);
}

void sub_100035854(char *a1, void *a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  const __SCNetworkReachability *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  unint64_t v30;
  id v31;
  NSString v32;
  Class isa;
  id v34;
  id v35;
  _QWORD *v36;
  id v37;
  const __SCNetworkReachability *v38;
  void *v39;
  uint64_t v40;
  char *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  id v58;
  NSString v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  _QWORD *v69;
  void *v70;
  void *v71;
  _QWORD *v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  SCNetworkReachabilityFlags flags[2];
  uint64_t v80;
  uint64_t (*v81)(uint64_t, void *, void *, void *);
  void *v82;
  uint64_t (*v83)();
  _QWORD *v84;
  char v85[80];

  v8 = type metadata accessor for Request(0);
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Endpoint(0);
  v14 = __chkstk_darwin(v12, v13);
  v16 = (uint64_t *)((char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v17);
  v19 = (char *)&v74 - v18;
  v20 = (_QWORD *)swift_allocObject(&unk_1000D7CC8, 40, 7);
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = a4;
  v21 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Business10HttpClient_reachability];
  if (!v21 || (v78 = a1, (v22 = *(const __SCNetworkReachability **)(v21 + 48)) == 0))
  {
    v24 = a2;
    v23 = swift_retain(a4);
    goto LABEL_7;
  }
  flags[0] = 0;
  v77 = a2;
  swift_retain(a4);
  swift_retain(v21);
  if (!SCNetworkReachabilityGetFlags(v22, flags)
    || (flags[0] & 2) == 0
    || (v38 = *(const __SCNetworkReachability **)(v21 + 48), v39 = v78, v38)
    && (flags[0] = 0, SCNetworkReachabilityGetFlags(v38, flags))
    && (~flags[0] & 5) == 0)
  {
    v23 = swift_release(v21);
LABEL_7:
    if (qword_1000EBCB8 != -1)
      v23 = swift_once(&qword_1000EBCB8, sub_100082798);
    v25 = qword_1000F8A90;
    v26 = static os_log_type_t.default.getter(v23);
    os_log(_:dso:log:type:_:)("BusinessChat: the network is not reachable", 42, 2, &_mh_execute_header, v25, v26, _swiftEmptyArrayStorage);
    v27 = sub_100007D40(&qword_1000ED050);
    inited = swift_initStackObject(v27, v85);
    *(_OWORD *)(inited + 16) = xmmword_1000AF070;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v29;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000018;
    *(_QWORD *)(inited + 56) = 0x80000001000B69D0;
    v30 = sub_10004DF18(inited);
    v31 = objc_allocWithZone((Class)NSError);
    v32 = String._bridgeToObjectiveC()();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v30);
    v34 = objc_msgSend(v31, "initWithDomain:code:userInfo:", v32, 0, isa);

    v35 = v34;
    sub_100027D04((uint64_t)v34, 1, (uint64_t)a2, a3);
    v36 = v20;
    goto LABEL_10;
  }
  sub_10002B4F0((uint64_t)v39 + OBJC_IVAR____TtC8Business10HttpClient_endpoint, (uint64_t)v19);
  sub_10002B4F0((uint64_t)v19, (uint64_t)v16);
  v40 = *v16;
  v41 = (char *)v16 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v42 = &v11[*(int *)(v8 + 20)];
  v43 = type metadata accessor for URL(0);
  v44 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v42, v41, v43);
  if (qword_1000EBCB8 != -1)
    v44 = swift_once(&qword_1000EBCB8, sub_100082798);
  v76 = qword_1000F8A90;
  v45 = static os_log_type_t.default.getter(v44);
  v75 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v46 = swift_allocObject(v75, 72, 7);
  v74 = xmmword_1000AF070;
  *(_OWORD *)(v46 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v46 + 56) = sub_100007D40(&qword_1000EC478);
  *(_QWORD *)(v46 + 64) = sub_10001383C();
  *(_QWORD *)(v46 + 32) = v40;
  swift_bridgeObjectRetain(v40);
  os_log(_:dso:log:type:_:)("Creating network request with parameters %@", 43, 2, &_mh_execute_header, v76, v45, v46);
  swift_bridgeObjectRelease(v46);
  *v11 = 1;
  *(_QWORD *)&v11[*(int *)(v8 + 24)] = v40;
  sub_1000367CC((uint64_t)v19, type metadata accessor for Endpoint);
  sub_10008A590();
  v48 = v47;
  v49 = sub_1000367CC((uint64_t)v11, type metadata accessor for Request);
  if (!v48)
  {
    v58 = objc_allocWithZone((Class)NSError);
    v59 = String._bridgeToObjectiveC()();
    v60 = objc_msgSend(v58, "initWithDomain:code:userInfo:", v59, 1, 0);

    v61 = qword_1000F8A90;
    v63 = static os_log_type_t.error.getter(v62);
    os_log(_:dso:log:type:_:)("BusinessChat: Error creating url request", 40, 2, &_mh_execute_header, v61, v63, _swiftEmptyArrayStorage);
    v35 = v60;
    sub_100027D04((uint64_t)v60, 1, (uint64_t)v77, a3);
    swift_release(v20);
    v36 = (_QWORD *)v21;
LABEL_10:
    swift_release(v36);
    v37 = v35;
    goto LABEL_11;
  }
  v50 = qword_1000F8A90;
  v51 = static os_log_type_t.default.getter(v49);
  v52 = swift_allocObject(v75, 72, 7);
  *(_OWORD *)(v52 + 16) = v74;
  v53 = objc_msgSend(v48, "HTTPBody");
  if (v53)
  {
    v54 = v53;
    v55 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v57 = v56;

  }
  else
  {
    v55 = 0;
    v57 = 0xF000000000000000;
  }
  *(_QWORD *)flags = v55;
  v80 = v57;
  v64 = sub_100007D40(&qword_1000ED588);
  v65 = String.init<A>(describing:)(flags, v64);
  v67 = v66;
  *(_QWORD *)(v52 + 56) = &type metadata for String;
  *(_QWORD *)(v52 + 64) = sub_100009084();
  *(_QWORD *)(v52 + 32) = v65;
  *(_QWORD *)(v52 + 40) = v67;
  os_log(_:dso:log:type:_:)("BusinessChat: Client URL Request: %@", 36, 2, &_mh_execute_header, v50, v51, v52);
  swift_bridgeObjectRelease(v52);
  v68 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "ephemeralSessionConfiguration");
  v35 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v68);

  v69 = (_QWORD *)swift_allocObject(&unk_1000D7CF0, 40, 7);
  v70 = v78;
  v69[2] = v78;
  v69[3] = sub_1000371D8;
  v69[4] = v20;
  v83 = sub_100037188;
  v84 = v69;
  *(_QWORD *)flags = _NSConcreteStackBlock;
  v80 = 1107296256;
  v81 = sub_100032814;
  v82 = &unk_1000D7D08;
  v71 = _Block_copy(flags);
  v72 = v84;
  v73 = v70;
  swift_retain(v20);
  swift_release(v72);
  v37 = objc_msgSend(v35, "dataTaskWithRequest:completionHandler:", v48, v71);
  _Block_release(v71);
  objc_msgSend(v37, "resume");
  swift_release(v20);
  swift_release(v21);

LABEL_11:
}

void sub_100035FB0(char *a1, void *a2, const void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  const __SCNetworkReachability *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  unint64_t v29;
  id v30;
  NSString v31;
  Class isa;
  id v33;
  id v34;
  _QWORD *v35;
  id v36;
  const __SCNetworkReachability *v37;
  void *v38;
  uint64_t v39;
  char *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  _QWORD *v69;
  void *v70;
  void *v71;
  _QWORD *v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  SCNetworkReachabilityFlags flags[2];
  uint64_t v80;
  uint64_t (*v81)(uint64_t, void *, void *, void *);
  void *v82;
  void (*v83)(uint64_t, unint64_t, void *, void *);
  _QWORD *v84;
  char v85[80];

  v6 = type metadata accessor for Request(0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Endpoint(0);
  v12 = __chkstk_darwin(v10, v11);
  v14 = (uint64_t *)((char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12, v15);
  v17 = (char *)&v74 - v16;
  v18 = swift_allocObject(&unk_1000D7908, 24, 7);
  *(_QWORD *)(v18 + 16) = a3;
  v19 = (_QWORD *)swift_allocObject(&unk_1000D7930, 40, 7);
  v19[2] = a2;
  v19[3] = sub_1000367B0;
  v19[4] = v18;
  v20 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Business10HttpClient_reachability];
  if (!v20 || (v78 = a1, (v21 = *(const __SCNetworkReachability **)(v20 + 48)) == 0))
  {
    _Block_copy(a3);
    _Block_copy(a3);
    v23 = a2;
    v22 = swift_retain(v18);
    goto LABEL_7;
  }
  flags[0] = 0;
  _Block_copy(a3);
  _Block_copy(a3);
  v77 = a2;
  swift_retain(v18);
  swift_retain(v20);
  if (!SCNetworkReachabilityGetFlags(v21, flags)
    || (flags[0] & 2) == 0
    || (v37 = *(const __SCNetworkReachability **)(v20 + 48), v38 = v78, v37)
    && (flags[0] = 0, SCNetworkReachabilityGetFlags(v37, flags))
    && (~flags[0] & 5) == 0)
  {
    v22 = swift_release(v20);
LABEL_7:
    if (qword_1000EBCB8 != -1)
      v22 = swift_once(&qword_1000EBCB8, sub_100082798);
    v24 = qword_1000F8A90;
    v25 = static os_log_type_t.default.getter(v22);
    os_log(_:dso:log:type:_:)("BusinessChat: the network is not reachable", 42, 2, &_mh_execute_header, v24, v25, _swiftEmptyArrayStorage);
    v26 = sub_100007D40(&qword_1000ED050);
    inited = swift_initStackObject(v26, v85);
    *(_OWORD *)(inited + 16) = xmmword_1000AF070;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v28;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000018;
    *(_QWORD *)(inited + 56) = 0x80000001000B69D0;
    v29 = sub_10004DF18(inited);
    v30 = objc_allocWithZone((Class)NSError);
    v31 = String._bridgeToObjectiveC()();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v29);
    v33 = objc_msgSend(v30, "initWithDomain:code:userInfo:", v31, 0, isa);

    _Block_copy(a3);
    v34 = v33;
    sub_10002A794((uint64_t)v33, 1, (uint64_t)a2, (uint64_t)a3);
    _Block_release(a3);

    v35 = v19;
    goto LABEL_10;
  }
  sub_10002B4F0((uint64_t)v38 + OBJC_IVAR____TtC8Business10HttpClient_endpoint, (uint64_t)v17);
  sub_10002B4F0((uint64_t)v17, (uint64_t)v14);
  v39 = *v14;
  v40 = (char *)v14 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v41 = &v9[*(int *)(v6 + 20)];
  v42 = type metadata accessor for URL(0);
  v43 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v41, v40, v42);
  if (qword_1000EBCB8 != -1)
    v43 = swift_once(&qword_1000EBCB8, sub_100082798);
  v76 = qword_1000F8A90;
  v44 = static os_log_type_t.default.getter(v43);
  v75 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v45 = swift_allocObject(v75, 72, 7);
  v74 = xmmword_1000AF070;
  *(_OWORD *)(v45 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v45 + 56) = sub_100007D40(&qword_1000EC478);
  *(_QWORD *)(v45 + 64) = sub_10001383C();
  *(_QWORD *)(v45 + 32) = v39;
  swift_bridgeObjectRetain(v39);
  os_log(_:dso:log:type:_:)("Creating network request with parameters %@", 43, 2, &_mh_execute_header, v76, v44, v45);
  swift_bridgeObjectRelease(v45);
  *v9 = 1;
  *(_QWORD *)&v9[*(int *)(v6 + 24)] = v39;
  sub_1000367CC((uint64_t)v17, type metadata accessor for Endpoint);
  sub_10008A590();
  v47 = v46;
  v48 = sub_1000367CC((uint64_t)v9, type metadata accessor for Request);
  if (!v47)
  {
    v56 = objc_allocWithZone((Class)NSError);
    v57 = String._bridgeToObjectiveC()();
    v58 = objc_msgSend(v56, "initWithDomain:code:userInfo:", v57, 1, 0);

    v59 = qword_1000F8A90;
    v61 = static os_log_type_t.error.getter(v60);
    os_log(_:dso:log:type:_:)("BusinessChat: Error creating url request", 40, 2, &_mh_execute_header, v59, v61, _swiftEmptyArrayStorage);
    _Block_copy(a3);
    v34 = v58;
    v62 = (uint64_t)v58;
    v63 = v77;
    sub_10002A794(v62, 1, (uint64_t)v77, (uint64_t)a3);
    _Block_release(a3);

    swift_release(v19);
    v35 = (_QWORD *)v20;
LABEL_10:
    swift_release(v35);
    v36 = v34;
    goto LABEL_11;
  }
  v76 = qword_1000F8A90;
  v49 = static os_log_type_t.default.getter(v48);
  v50 = swift_allocObject(v75, 72, 7);
  *(_OWORD *)(v50 + 16) = v74;
  v51 = objc_msgSend(v47, "HTTPBody");
  if (v51)
  {
    v52 = v51;
    v53 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v55 = v54;

  }
  else
  {
    v53 = 0;
    v55 = 0xF000000000000000;
  }
  *(_QWORD *)flags = v53;
  v80 = v55;
  v64 = sub_100007D40(&qword_1000ED588);
  v65 = String.init<A>(describing:)(flags, v64);
  v67 = v66;
  *(_QWORD *)(v50 + 56) = &type metadata for String;
  *(_QWORD *)(v50 + 64) = sub_100009084();
  *(_QWORD *)(v50 + 32) = v65;
  *(_QWORD *)(v50 + 40) = v67;
  os_log(_:dso:log:type:_:)("BusinessChat: Client URL Request: %@", 36, 2, &_mh_execute_header, v76, v49, v50);
  swift_bridgeObjectRelease(v50);
  v68 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "ephemeralSessionConfiguration");
  v34 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v68);

  v69 = (_QWORD *)swift_allocObject(&unk_1000D7958, 40, 7);
  v70 = v78;
  v69[2] = v78;
  v69[3] = sub_1000367BC;
  v69[4] = v19;
  v83 = sub_10003680C;
  v84 = v69;
  *(_QWORD *)flags = _NSConcreteStackBlock;
  v80 = 1107296256;
  v81 = sub_100032814;
  v82 = &unk_1000D7970;
  v71 = _Block_copy(flags);
  v72 = v84;
  v73 = v70;
  swift_retain(v19);
  swift_release(v72);
  v36 = objc_msgSend(v34, "dataTaskWithRequest:completionHandler:", v47, v71);
  _Block_release(v71);
  objc_msgSend(v36, "resume");

  swift_release(v19);
  swift_release(v20);

LABEL_11:
  swift_release(v18);
  _Block_release(a3);
}

uint64_t sub_10003678C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000367B0(uint64_t a1)
{
  uint64_t v1;

  return sub_10002B6BC(a1, *(_QWORD *)(v1 + 16));
}

void sub_1000367BC(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_100028138(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(id))(v2 + 24));
}

uint64_t sub_1000367CC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10003680C(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v4;

  sub_100031F04(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void (**)(id, uint64_t))(v4 + 24));
}

uint64_t sub_100036818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100036828(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100036830(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

unint64_t sub_100036874()
{
  unint64_t result;

  result = qword_1000ED598;
  if (!qword_1000ED598)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1000ED598);
  }
  return result;
}

void sub_1000368BC(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_100027D04(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(id))(v2 + 24));
}

uint64_t sub_1000368D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1000267F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000368E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100036918(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_100027798(a1, a2 & 1, *(id *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_10003692C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100036958(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_10002571C(a1, a2 & 1, *(void (**)(uint64_t))(v2 + 16));
}

uint64_t sub_100036968()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100036994(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_100024B2C(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1000369A4(char *a1, void *a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  const __SCNetworkReachability *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  unint64_t v30;
  id v31;
  NSString v32;
  Class isa;
  id v34;
  id v35;
  _QWORD *v36;
  id v37;
  const __SCNetworkReachability *v38;
  void *v39;
  uint64_t v40;
  char *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  id v58;
  NSString v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  _QWORD *v69;
  void *v70;
  void *v71;
  _QWORD *v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  SCNetworkReachabilityFlags flags[2];
  uint64_t v80;
  uint64_t (*v81)(uint64_t, void *, void *, void *);
  void *v82;
  uint64_t (*v83)();
  _QWORD *v84;
  char v85[80];

  v8 = type metadata accessor for Request(0);
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Endpoint(0);
  v14 = __chkstk_darwin(v12, v13);
  v16 = (uint64_t *)((char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v17);
  v19 = (char *)&v74 - v18;
  v20 = (_QWORD *)swift_allocObject(&unk_1000D7C50, 40, 7);
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = a4;
  v21 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Business10HttpClient_reachability];
  if (!v21 || (v78 = a1, (v22 = *(const __SCNetworkReachability **)(v21 + 48)) == 0))
  {
    v24 = a2;
    v23 = swift_retain(a4);
    goto LABEL_7;
  }
  flags[0] = 0;
  v77 = a2;
  swift_retain(a4);
  swift_retain(v21);
  if (!SCNetworkReachabilityGetFlags(v22, flags)
    || (flags[0] & 2) == 0
    || (v38 = *(const __SCNetworkReachability **)(v21 + 48), v39 = v78, v38)
    && (flags[0] = 0, SCNetworkReachabilityGetFlags(v38, flags))
    && (~flags[0] & 5) == 0)
  {
    v23 = swift_release(v21);
LABEL_7:
    if (qword_1000EBCB8 != -1)
      v23 = swift_once(&qword_1000EBCB8, sub_100082798);
    v25 = qword_1000F8A90;
    v26 = static os_log_type_t.default.getter(v23);
    os_log(_:dso:log:type:_:)("BusinessChat: the network is not reachable", 42, 2, &_mh_execute_header, v25, v26, _swiftEmptyArrayStorage);
    v27 = sub_100007D40(&qword_1000ED050);
    inited = swift_initStackObject(v27, v85);
    *(_OWORD *)(inited + 16) = xmmword_1000AF070;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v29;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000018;
    *(_QWORD *)(inited + 56) = 0x80000001000B69D0;
    v30 = sub_10004DF18(inited);
    v31 = objc_allocWithZone((Class)NSError);
    v32 = String._bridgeToObjectiveC()();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v30);
    v34 = objc_msgSend(v31, "initWithDomain:code:userInfo:", v32, 0, isa);

    v35 = v34;
    sub_100028138((uint64_t)v34, 1, (uint64_t)a2, a3);
    v36 = v20;
    goto LABEL_10;
  }
  sub_10002B4F0((uint64_t)v39 + OBJC_IVAR____TtC8Business10HttpClient_endpoint, (uint64_t)v19);
  sub_10002B4F0((uint64_t)v19, (uint64_t)v16);
  v40 = *v16;
  v41 = (char *)v16 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v42 = &v11[*(int *)(v8 + 20)];
  v43 = type metadata accessor for URL(0);
  v44 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v42, v41, v43);
  if (qword_1000EBCB8 != -1)
    v44 = swift_once(&qword_1000EBCB8, sub_100082798);
  v76 = qword_1000F8A90;
  v45 = static os_log_type_t.default.getter(v44);
  v75 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v46 = swift_allocObject(v75, 72, 7);
  v74 = xmmword_1000AF070;
  *(_OWORD *)(v46 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v46 + 56) = sub_100007D40(&qword_1000EC478);
  *(_QWORD *)(v46 + 64) = sub_10001383C();
  *(_QWORD *)(v46 + 32) = v40;
  swift_bridgeObjectRetain(v40);
  os_log(_:dso:log:type:_:)("Creating network request with parameters %@", 43, 2, &_mh_execute_header, v76, v45, v46);
  swift_bridgeObjectRelease(v46);
  *v11 = 1;
  *(_QWORD *)&v11[*(int *)(v8 + 24)] = v40;
  sub_1000367CC((uint64_t)v19, type metadata accessor for Endpoint);
  sub_10008A590();
  v48 = v47;
  v49 = sub_1000367CC((uint64_t)v11, type metadata accessor for Request);
  if (!v48)
  {
    v58 = objc_allocWithZone((Class)NSError);
    v59 = String._bridgeToObjectiveC()();
    v60 = objc_msgSend(v58, "initWithDomain:code:userInfo:", v59, 1, 0);

    v61 = qword_1000F8A90;
    v63 = static os_log_type_t.error.getter(v62);
    os_log(_:dso:log:type:_:)("BusinessChat: Error creating url request", 40, 2, &_mh_execute_header, v61, v63, _swiftEmptyArrayStorage);
    v35 = v60;
    sub_100028138((uint64_t)v60, 1, (uint64_t)v77, a3);
    swift_release(v20);
    v36 = (_QWORD *)v21;
LABEL_10:
    swift_release(v36);
    v37 = v35;
    goto LABEL_11;
  }
  v50 = qword_1000F8A90;
  v51 = static os_log_type_t.default.getter(v49);
  v52 = swift_allocObject(v75, 72, 7);
  *(_OWORD *)(v52 + 16) = v74;
  v53 = objc_msgSend(v48, "HTTPBody");
  if (v53)
  {
    v54 = v53;
    v55 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v57 = v56;

  }
  else
  {
    v55 = 0;
    v57 = 0xF000000000000000;
  }
  *(_QWORD *)flags = v55;
  v80 = v57;
  v64 = sub_100007D40(&qword_1000ED588);
  v65 = String.init<A>(describing:)(flags, v64);
  v67 = v66;
  *(_QWORD *)(v52 + 56) = &type metadata for String;
  *(_QWORD *)(v52 + 64) = sub_100009084();
  *(_QWORD *)(v52 + 32) = v65;
  *(_QWORD *)(v52 + 40) = v67;
  os_log(_:dso:log:type:_:)("BusinessChat: Client URL Request: %@", 36, 2, &_mh_execute_header, v50, v51, v52);
  swift_bridgeObjectRelease(v52);
  v68 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "ephemeralSessionConfiguration");
  v35 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v68);

  v69 = (_QWORD *)swift_allocObject(&unk_1000D7C78, 40, 7);
  v70 = v78;
  v69[2] = v78;
  v69[3] = sub_1000371D4;
  v69[4] = v20;
  v83 = sub_100037188;
  v84 = v69;
  *(_QWORD *)flags = _NSConcreteStackBlock;
  v80 = 1107296256;
  v81 = sub_100032814;
  v82 = &unk_1000D7C90;
  v71 = _Block_copy(flags);
  v72 = v84;
  v73 = v70;
  swift_retain(v20);
  swift_release(v72);
  v37 = objc_msgSend(v35, "dataTaskWithRequest:completionHandler:", v48, v71);
  _Block_release(v71);
  objc_msgSend(v37, "resume");
  swift_release(v20);
  swift_release(v21);

LABEL_11:
}

uint64_t sub_100037114()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100037148(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_1000279CC(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(id))(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_10003715C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000371DC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  NSString v42;
  id v43;
  char **v44;
  _UNKNOWN **v45;
  void *v46;
  id v47;
  uint64_t v48;
  void *v49;
  Class isa;
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  _QWORD *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  void *v88;
  Class v89;
  id v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  void *v142;
  id v143;
  uint64_t v144;
  char v145;
  unint64_t v146;
  void *v147;
  void *v148;
  unint64_t v149;
  Class v150;
  id v151;
  id v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  Class v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  NSURL *v174;
  void *v175;
  void *v176;
  NSString v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  void *v186;
  void *v187;
  void *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  unint64_t v192;
  char *v193;
  char *v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  int v201;
  char *v202;
  __int128 v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  char v208[8];
  uint64_t v209;
  uint64_t v210;
  char v211[8];
  char v212[8];
  uint64_t v213;
  uint64_t v214;
  char v215[8];
  unint64_t v216;
  _QWORD v217[3];
  char v218[8];
  unint64_t v219;
  __int128 v220;
  __int128 aBlock;
  void (*v222)(uint64_t, void *);
  void *v223;
  uint64_t (*v224)(uint64_t);
  uint64_t v225;

  v201 = a1;
  v2 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v2, v3);
  v200 = (char *)&v189 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = type metadata accessor for URLComponents(0);
  v198 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin(v199, v5);
  v202 = (char *)&v189 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = type metadata accessor for URLQueryItem(0);
  v196 = *(_QWORD *)(v197 - 8);
  v8 = __chkstk_darwin(v197, v7);
  v194 = (char *)&v189 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8, v10);
  v193 = (char *)&v189 - v12;
  v14 = __chkstk_darwin(v11, v13);
  v191 = (char *)&v189 - v15;
  __chkstk_darwin(v14, v16);
  v190 = (char *)&v189 - v17;
  *(_QWORD *)&v203 = 0;
  v18 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v18, v19);
  v21 = (char *)&v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v22 = qword_1000F8A90;
  v23 = static os_log_type_t.info.getter();
  v204 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v24 = swift_allocObject(v204, 112, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1000ADFC0;
  v25 = *(_QWORD *)(v1 + 32);
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  v29 = sub_100009084();
  *(_QWORD *)(v24 + 64) = v29;
  *(_QWORD *)(v24 + 32) = v26;
  *(_QWORD *)(v24 + 40) = v28;
  *(_QWORD *)&aBlock = *(_QWORD *)(v1 + 24);
  v205 = aBlock;
  v30 = (id)aBlock;
  v31 = sub_100007D40(&qword_1000ED5A0);
  v32 = String.init<A>(describing:)(&aBlock, v31);
  *(_QWORD *)(v24 + 96) = &type metadata for String;
  *(_QWORD *)(v24 + 104) = v29;
  v192 = v29;
  *(_QWORD *)(v24 + 72) = v32;
  *(_QWORD *)(v24 + 80) = v33;
  os_log(_:dso:log:type:_:)("IMBReply: Send reply for type: %@ info: %@", 42, 2, &_mh_execute_header, v22, v23, v24);
  swift_bridgeObjectRelease(v24);
  v34 = *(void **)v1;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v36 = v35;
  v207 = v1;
  v37 = *(_QWORD *)(v1 + 40);
  v38 = v34;
  swift_unknownObjectRetain(v37);
  v39 = objc_msgSend(v38, "receivedMessage");
  v40 = objc_allocWithZone((Class)BCMessage);
  v41 = v30;
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v36);
  v206 = objc_msgSend(v40, "initFromOriginalMessage:rootKey:rootObject:receivedMessage:replyMessage:", v38, v42, v37, v39, v41);

  swift_unknownObjectRelease(v37);
  v195 = v41;

  v43 = objc_msgSend(v38, "receivedMessage");
  v44 = &selRef_layoutMarginsGuide;
  v45 = &_ss6HasherV8_combineyys5UInt8VF_ptr;
  if (v43)
  {
    v46 = v43;
    v47 = objc_msgSend(v43, "dictionaryValue");

    v48 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v47, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
    v49 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&aBlock = 0;
    v51 = objc_msgSend(v49, "dataWithJSONObject:options:error:", isa, 1, &aBlock);

    v52 = (id)aBlock;
    if (v51)
    {
      v53 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v51);
      v55 = v54;

      v56 = sub_100036830(v53, v55);
      static String.Encoding.utf8.getter(v56);
      result = String.init(data:encoding:)(v53, v55, v21);
      if (!v58)
      {
        __break(1u);
        goto LABEL_47;
      }
      swift_bridgeObjectRelease(v58);
      v59 = Data.base64EncodedData(options:)(0, v53, v55);
      v61 = v60;
      sub_100010BFC(v53, v55);
      sub_100010BFC(v53, v55);
      v62 = sub_100036830(v59, v61);
      static String.Encoding.utf8.getter(v62);
      v63 = String.init(data:encoding:)(v59, v61, v21);
      v65 = v64;
      sub_100010BFC(v59, v61);
      sub_100087028(v63, v65);
      v67 = v66;
      sub_100010BFC(v59, v61);
      swift_bridgeObjectRelease(v48);
      swift_bridgeObjectRelease(v65);
      if (v67)
      {
        v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageDataReceivedMessageKey);
        v70 = v69;
        v71 = v190;
        URLQueryItem.init(name:value:)(v68);
        swift_bridgeObjectRelease(v70);
        swift_bridgeObjectRelease(v67);
        v72 = v191;
        (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v191, v71, v197);
        v73 = (_QWORD *)sub_100038BE0(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage, &qword_1000ED5B0, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
        v75 = v73[2];
        v74 = v73[3];
        if (v75 >= v74 >> 1)
          v73 = (_QWORD *)sub_100038BE0(v74 > 1, v75 + 1, 1, (unint64_t)v73, &qword_1000ED5B0, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
        v45 = &_ss6HasherV8_combineyys5UInt8VF_ptr;
        v73[2] = v75 + 1;
        v76 = v196;
        v77 = (unint64_t)v73
            + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))
            + *(_QWORD *)(v76 + 72) * v75;
        v78 = v197;
        (*(void (**)(unint64_t, char *, uint64_t))(v196 + 32))(v77, v72, v197);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v78);
      }
      else
      {
        v73 = _swiftEmptyArrayStorage;
        v45 = &_ss6HasherV8_combineyys5UInt8VF_ptr;
      }
    }
    else
    {
      v79 = v52;
      v80 = _convertNSErrorToError(_:)();

      swift_willThrow(v81);
      v82 = sub_100007D40(&qword_1000ED4B0);
      v83 = swift_allocObject(v82, 64, 7);
      *(_OWORD *)(v83 + 16) = xmmword_1000AF070;
      swift_getErrorValue(v80, v211, v208);
      v84 = Error.localizedDescription.getter(v209, v210);
      *(_QWORD *)(v83 + 56) = &type metadata for String;
      *(_QWORD *)(v83 + 32) = v84;
      *(_QWORD *)(v83 + 40) = v85;
      print(_:separator:terminator:)(v83, 32, 0xE100000000000000, 10, 0xE100000000000000);
      swift_bridgeObjectRelease(v83);
      swift_errorRelease(v80);
      swift_bridgeObjectRelease(v48);
      *(_QWORD *)&v203 = 0;
      v73 = _swiftEmptyArrayStorage;
    }
    v44 = &selRef_layoutMarginsGuide;
  }
  else
  {
    v73 = _swiftEmptyArrayStorage;
  }
  if (!v205)
  {
    v120 = v199;
    v119 = v198;
    v121 = v204;
    v116 = (_QWORD *)&unk_1000F8000;
    goto LABEL_27;
  }
  v86 = objc_msgSend(v195, "dictionaryValue");
  v87 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v86, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v88 = (void *)objc_opt_self(v45[120]);
  v89 = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&aBlock = 0;
  v90 = objc_msgSend(v88, "dataWithJSONObject:options:error:", v89, 1, &aBlock);

  v91 = (id)aBlock;
  if (v90)
  {
    v92 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v90);
    v94 = v93;

    v95 = sub_100036830(v92, v94);
    static String.Encoding.utf8.getter(v95);
    result = String.init(data:encoding:)(v92, v94, v21);
    if (v96)
    {
      swift_bridgeObjectRelease(v96);
      v97 = Data.base64EncodedData(options:)(0, v92, v94);
      v99 = v98;
      sub_100010BFC(v92, v94);
      sub_100010BFC(v92, v94);
      v100 = sub_100036830(v97, v99);
      static String.Encoding.utf8.getter(v100);
      v101 = String.init(data:encoding:)(v97, v99, v21);
      v103 = v102;
      sub_100010BFC(v97, v99);
      sub_100087028(v101, v103);
      v105 = v104;
      sub_100010BFC(v97, v99);
      swift_bridgeObjectRelease(v87);
      swift_bridgeObjectRelease(v103);
      if (v105)
      {
        v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageDataReplyMessageKey);
        v108 = v107;
        v109 = v193;
        URLQueryItem.init(name:value:)(v106);
        swift_bridgeObjectRelease(v108);
        swift_bridgeObjectRelease(v105);
        (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v194, v109, v197);
        v110 = (unint64_t)v73;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v73);
        v112 = v199;
        v113 = v198;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v110 = sub_100038BE0(0, v73[2] + 1, 1, (unint64_t)v73, &qword_1000ED5B0, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
        v115 = *(_QWORD *)(v110 + 16);
        v114 = *(_QWORD *)(v110 + 24);
        if (v115 >= v114 >> 1)
          v110 = sub_100038BE0(v114 > 1, v115 + 1, 1, v110, &qword_1000ED5B0, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
        v116 = (_QWORD *)&unk_1000F8000;
        v73 = (_QWORD *)v110;
        *(_QWORD *)(v110 + 16) = v115 + 1;
        v117 = v196;
        v118 = v197;
        (*(void (**)(unint64_t, char *, uint64_t))(v196 + 32))((unint64_t)v73+ ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80))+ *(_QWORD *)(v117 + 72) * v115, v194, v197);
        (*(void (**)(char *, uint64_t))(v117 + 8))(v193, v118);
        v119 = v113;
        v120 = v112;
        v44 = &selRef_layoutMarginsGuide;
        v121 = v204;
        goto LABEL_27;
      }
      v120 = v199;
      v119 = v198;
      v121 = v204;
      v116 = &unk_1000F8000;
      goto LABEL_26;
    }
LABEL_47:
    __break(1u);
    return result;
  }
  v122 = v91;
  v123 = _convertNSErrorToError(_:)();

  swift_willThrow(v124);
  v125 = sub_100007D40(&qword_1000ED4B0);
  v126 = swift_allocObject(v125, 64, 7);
  *(_OWORD *)(v126 + 16) = xmmword_1000AF070;
  swift_getErrorValue(v123, v215, v212);
  v127 = Error.localizedDescription.getter(v213, v214);
  *(_QWORD *)(v126 + 56) = &type metadata for String;
  *(_QWORD *)(v126 + 32) = v127;
  *(_QWORD *)(v126 + 40) = v128;
  print(_:separator:terminator:)(v126, 32, 0xE100000000000000, 10, 0xE100000000000000);
  swift_bridgeObjectRelease(v126);
  swift_errorRelease(v123);
  swift_bridgeObjectRelease(v87);
  v120 = v199;
  v119 = v198;
  v121 = v204;
  v116 = (_QWORD *)&unk_1000F8000;
LABEL_26:
  v44 = &selRef_layoutMarginsGuide;
LABEL_27:
  v129 = objc_msgSend(v206, v44[164]);
  v130 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v129, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v219 = v130;
  v131 = v116[338];
  v132 = swift_allocObject(v121, 72, 7);
  v203 = xmmword_1000AF070;
  *(_OWORD *)(v132 + 16) = xmmword_1000AF070;
  v133 = swift_bridgeObjectRetain(v130);
  v135 = sub_100039E98(v133, v134);
  swift_bridgeObjectRelease(v130);
  v136 = sub_100007D40(&qword_1000EC478);
  *(_QWORD *)(v132 + 56) = v136;
  *(_QWORD *)(v132 + 64) = sub_10001383C();
  *(_QWORD *)(v132 + 32) = v135;
  v137 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("IMBReply: dataPayloadDictionary %@", 34, 2, &_mh_execute_header, v131, v137, v132);
  swift_bridgeObjectRelease(v132);
  v138 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageDataImagesKey);
  v140 = v139;
  v141 = objc_msgSend(v38, "imageStore");
  if (v141
    && (v142 = v141, v143 = objc_msgSend(v141, "rawArray"), v142, v143))
  {
    v144 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v143, v136);

    v223 = (void *)sub_100007D40(&qword_1000ED040);
    *(_QWORD *)&aBlock = v144;
    sub_100009CF0(&aBlock, &v220);
    v145 = swift_isUniquelyReferenced_nonNull_native(v130);
    v216 = v130;
    v219 = 0x8000000000000000;
    sub_10003A658(&v220, v138, v140, v145);
    v146 = v219;
    v219 = v216;
    swift_bridgeObjectRelease(v140);
    swift_bridgeObjectRelease(v146);
  }
  else
  {
    sub_100039FE8(v138, v140, &aBlock);
    swift_bridgeObjectRelease(v140);
    sub_100010A98((uint64_t)&aBlock, (uint64_t *)&unk_1000EEB60);
  }
  v147 = *(void **)(v207 + 8);
  v148 = (void *)objc_opt_self(NSJSONSerialization);
  v149 = v219;
  v150 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v149);
  *(_QWORD *)&aBlock = 0;
  v151 = objc_msgSend(v148, "dataWithJSONObject:options:error:", v150, 1, &aBlock);

  v152 = (id)aBlock;
  if (v151)
  {
    v153 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v151);
    v155 = v154;

    v156 = Data._bridgeToObjectiveC()().super.isa;
    sub_100010BFC(v153, v155);
    objc_msgSend(v147, "set_data:", v156);

  }
  else
  {
    v158 = v152;
    v159 = _convertNSErrorToError(_:)();

    swift_willThrow(v160);
    v161 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
    v162 = (void *)static OS_os_log.default.getter(v161);
    v163 = static os_log_type_t.error.getter();
    v164 = swift_allocObject(v121, 72, 7);
    *(_OWORD *)(v164 + 16) = v203;
    swift_getErrorValue(v159, v218, v217);
    v165 = Error.localizedDescription.getter(v217[1], v217[2]);
    v166 = v192;
    *(_QWORD *)(v164 + 56) = &type metadata for String;
    *(_QWORD *)(v164 + 64) = v166;
    *(_QWORD *)(v164 + 32) = v165;
    *(_QWORD *)(v164 + 40) = v167;
    os_log(_:dso:log:type:_:)("MSMessage data will be empty, failed to serialize json: %@", 58, 2, &_mh_execute_header, v162, v163, v164);

    v168 = v164;
    v121 = v204;
    swift_bridgeObjectRelease(v168);
    v157 = swift_errorRelease(v159);
  }
  v169 = v202;
  URLComponents.init()(v157);
  v170 = URLComponents.queryItems.setter(v73);
  v171 = v200;
  URLComponents.url.getter(v170);
  v172 = type metadata accessor for URL(0);
  v173 = *(_QWORD *)(v172 - 8);
  v175 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v171, 1, v172) != 1)
  {
    URL._bridgeToObjectiveC()(v174);
    v175 = v176;
    (*(void (**)(char *, uint64_t))(v173 + 8))(v171, v172);
  }
  objc_msgSend(v147, "setURL:", v175);

  objc_msgSend(v147, "setRequiresValidation:", 1);
  v177 = objc_msgSend(v147, "summaryText");
  if (!v177)
  {
    if (v205)
    {
      v178 = objc_msgSend(v195, "title");
      v177 = v178;
      if (v178)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v178);
        v180 = v179;

        v177 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v180);
      }
    }
    else
    {
      v177 = 0;
    }
    objc_msgSend(v147, "setSummaryText:", v177);
  }

  v181 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
  v182 = (void *)static OS_os_log.default.getter(v181);
  v183 = static os_log_type_t.default.getter();
  v184 = swift_allocObject(v121, 72, 7);
  *(_OWORD *)(v184 + 16) = v203;
  *(_QWORD *)(v184 + 56) = sub_1000090C8(0, &qword_1000ED5A8, MSMessage_ptr);
  *(_QWORD *)(v184 + 64) = sub_10003A0D8();
  *(_QWORD *)(v184 + 32) = v147;
  v185 = v147;
  os_log(_:dso:log:type:_:)("IMBReply: Sending reply MSMessage to business: %@", 49, 2, &_mh_execute_header, v182, v183, v184);

  swift_bridgeObjectRelease(v184);
  v186 = *(void **)(v207 + 16);
  if ((v201 & 1) != 0)
  {
    v224 = sub_1000384EC;
    v225 = 0;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v222 = sub_1000384FC;
    v223 = &unk_1000D7DD0;
    v187 = _Block_copy(&aBlock);
    objc_msgSend(v186, "sendMessage:completionHandler:", v185, v187);
    _Block_release(v187);

  }
  else
  {
    v224 = sub_100038550;
    v225 = 0;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v222 = sub_1000384FC;
    v223 = &unk_1000D7DA8;
    v188 = _Block_copy(&aBlock);
    objc_msgSend(v186, "insertMessage:completionHandler:", v185, v188);

    _Block_release(v188);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v169, v120);
}

uint64_t sub_100038418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10;
  _OWORD v11[2];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_100009CF0((_OWORD *)a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_10003A658(v11, a2, a3, isUniquelyReferenced_nonNull_native);
    v8 = *v3;
    *v4 = v10;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_100010A98(a1, (uint64_t *)&unk_1000EEB60);
    sub_100039FE8(a2, a3, v11);
    swift_bridgeObjectRelease(a3);
    return sub_100010A98((uint64_t)v11, (uint64_t *)&unk_1000EEB60);
  }
}

uint64_t sub_1000384EC(uint64_t a1)
{
  return sub_100038560(a1, (uint64_t)"Error sending new message in the conversation: %@", 49);
}

void sub_1000384FC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_100038550(uint64_t a1)
{
  return sub_100038560(a1, (uint64_t)"Error inserting new message in the conversation: %@", 51);
}

uint64_t sub_100038560(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  _BYTE v15[8];

  if (result)
  {
    v5 = result;
    sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
    v6 = swift_errorRetain(v5);
    v7 = (void *)static OS_os_log.default.getter(v6);
    v8 = static os_log_type_t.error.getter();
    v9 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v10 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1000AF070;
    swift_getErrorValue(v5, v15, v14);
    v11 = Error.localizedDescription.getter(v14[1], v14[2]);
    v13 = v12;
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    *(_QWORD *)(v10 + 64) = sub_100009084();
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v13;
    os_log(_:dso:log:type:_:)(a2, a3, 2, &_mh_execute_header, v7, v8, v10);

    swift_bridgeObjectRelease(v10);
    return swift_errorRelease(v5);
  }
  return result;
}

_QWORD *sub_100038678(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007D40(&qword_1000ED618);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10003BB3C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100038784(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007D40(&qword_1000ED5D8);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10003BC2C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100038890(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007D40((uint64_t *)&unk_1000ED030);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10003BD34(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10003899C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007D40(&qword_1000ED5F8);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10003BE3C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100038AC0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007D40(&qword_1000ED5F0);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10003BF48(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100038BCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100038BE0(a1, a2, a3, a4, &qword_1000ED5E8, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_100038BE0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100007D40(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(a6(0) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    v24 = a4 + v22;
    if ((unint64_t)v18 < a4 || v23 >= v24 + *(_QWORD *)(v21 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v22, v24);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v22, v24);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10003C038(0, v11, v23, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

_QWORD *sub_100038DEC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100007D40(&qword_1000ED620);
      v11 = (_QWORD *)swift_allocObject(v10, v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * v12 - 64;
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (_QWORD *)((char *)a4 + v8 + 32))
          memmove(v13, a4 + 4, v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10003C198(0, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100038EE4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007D40(&qword_1000ED5B8);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain(v5);
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v19 >= v35)
          goto LABEL_37;
        v20 = v36[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v35)
            goto LABEL_37;
          v20 = v36[v14];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v36[v21];
            if (!v20)
            {
              while (1)
              {
                v14 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_44;
                if (v14 >= v35)
                  goto LABEL_37;
                v20 = v36[v14];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v14 = v21;
          }
        }
LABEL_24:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((a2 & 1) != 0)
      {
        sub_100009CF0(v25, v38);
      }
      else
      {
        sub_100009C74((uint64_t)v25, (uint64_t)v38);
        swift_bridgeObjectRetain(v23);
      }
      Hasher.init(_seed:)(v37);
      String.hash(into:)(v37, v24, v23);
      result = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
      *v16 = v24;
      v16[1] = v23;
      result = (uint64_t)sub_100009CF0(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

uint64_t sub_1000391E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t i;
  int v49;

  v4 = v3;
  v7 = type metadata accessor for IndexPath(0, a2, a3);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v4;
  if (*(_QWORD *)(*v4 + 24) > a1)
    a1 = *(_QWORD *)(*v4 + 24);
  sub_100007D40(&qword_1000ED608);
  v49 = a2;
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v12, a1, a2);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v45 = v4;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v47 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v46 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain(v12);
  v21 = 0;
  for (i = v12; ; v12 = i)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v46)
      goto LABEL_36;
    v26 = v47[v25];
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v46)
        goto LABEL_36;
      v26 = v47[v21];
      if (!v26)
        break;
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v12 + 48) + v28 * v24;
    if ((v49 & 1) != 0)
    {
      v30 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v8 + 32))(v11, v29, v7);
      v33 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v24);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v11, v29, v7);
      v33 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v24);
      v30 = swift_retain(v33);
    }
    v34 = *(_QWORD *)(v14 + 40);
    v35 = sub_10003C150(v30, v31, v32);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v7, v35);
    v36 = -1 << *(_BYTE *)(v14 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v19 + 8 * (v37 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v19 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v19 + 8 * v38);
      }
      while (v42 == -1);
      v22 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v14 + 48) + v28 * v22, v11, v7);
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v22) = v33;
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 2;
  if (v27 < v46)
  {
    v26 = v47[v27];
    if (!v26)
    {
      while (1)
      {
        v21 = v27 + 1;
        if (__OFADD__(v27, 1))
          goto LABEL_43;
        if (v21 >= v46)
          goto LABEL_36;
        v26 = v47[v21];
        ++v27;
        if (v26)
          goto LABEL_23;
      }
    }
    v21 = v27;
    goto LABEL_23;
  }
LABEL_36:
  swift_release(v12);
  v4 = v45;
  if ((v49 & 1) != 0)
  {
    v43 = 1 << *(_BYTE *)(v12 + 32);
    if (v43 >= 64)
      bzero(v47, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v47 = -1 << v43;
    *(_QWORD *)(v12 + 16) = 0;
  }
LABEL_41:
  result = swift_release(v12);
  *v4 = v14;
  return result;
}

void sub_10003954C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007D40(&qword_1000ED5E0);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_36;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v37)
              goto LABEL_36;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      v34 = v33;
    }
    Hasher.init(_seed:)(v40);
    String.hash(into:)(v40, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

Swift::Int sub_100039858(uint64_t a1, uint64_t a2)
{
  return sub_100039864(a1, a2, &qword_1000ED5D0);
}

Swift::Int sub_100039864(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_100007D40(a3);
  v38 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v36 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  result = swift_retain(v6);
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_34;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v23 >= v36)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v36)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v36)
        {
LABEL_36:
          swift_release(v6);
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v15 >= v36)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v15 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain(v31[1]);
      swift_retain(v34);
    }
    Hasher.init(_seed:)(v39);
    String.hash(into:)(v39, v33, v32);
    result = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v24 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  result = swift_release(v6);
  *v4 = v9;
  return result;
}

void sub_100039B74(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100007D40(&qword_1000ED5C8);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_34;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v13 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v13 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      swift_bridgeObjectRetain(v38);
    }
    Hasher.init(_seed:)(v44);
    String.hash(into:)(v44, v35, v34);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

uint64_t sub_100039E98(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v3 = isStackAllocationSafe;
  v4 = *(_BYTE *)(isStackAllocationSafe + 32);
  v5 = v4 & 0x3F;
  v6 = (1 << v4) + 63;
  v7 = v6 >> 6;
  v8 = 8 * (v6 >> 6);
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v6 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_10003B5F8((uint64_t)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v3);
    if (v2)
      swift_willThrow(v9);
    else
      return v9;
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v8, -1);
    bzero(v10, v8);
    v3 = sub_10003B5F8((uint64_t)v10, v7, v3);
    swift_slowDealloc(v10, -1, -1);
  }
  return v3;
}

double sub_100039FE8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_10004F068(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10003ACC4();
      v12 = v15;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    sub_100009CF0((_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v9), a3);
    sub_10003A220(v9, v12);
    v13 = *v4;
    *v4 = v12;
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_10003A0D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EF140;
  if (!qword_1000EF140)
  {
    v1 = sub_1000090C8(255, &qword_1000ED5A8, MSMessage_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000EF140);
  }
  return result;
}

uint64_t sub_10003A130(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10003A140(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10003A148(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v7 = sub_10004F190(a1, v5, v6);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v12 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native)
  {
    sub_10003AEA8(isUniquelyReferenced_nonNull_native, v10, v11);
    v12 = v19;
  }
  v13 = *(_QWORD *)(v12 + 48);
  v14 = type metadata accessor for IndexPath(0, v10, v11);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v7, v14);
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v7);
  sub_10003A3F4(v7, v12, v16);
  v17 = *v2;
  *v2 = v12;
  swift_bridgeObjectRelease(v17);
  return v15;
}

unint64_t sub_10003A220(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27);
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10003A3F4(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, unint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;

  v5 = type metadata accessor for IndexPath(0, a2, a3);
  v39 = *(_QWORD *)(v5 - 8);
  result = __chkstk_darwin(v5, v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    v40 = a2 + 64;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v10);
    v13 = v40;
    if ((*(_QWORD *)(v40 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v14 = (result + 1) & v12;
      v15 = *(_QWORD *)(v39 + 72);
      v38 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v39 + 16);
      do
      {
        v16 = v15 * v11;
        v17 = v38(v9, *(_QWORD *)(a2 + 48) + v15 * v11, v5);
        v18 = *(_QWORD *)(a2 + 40);
        v21 = sub_10003C150(v17, v19, v20);
        v22 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v5, v21);
        result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v9, v5);
        v23 = v22 & v12;
        if (a1 >= (uint64_t)v14)
        {
          if (v23 >= v14 && a1 >= (uint64_t)v23)
          {
LABEL_17:
            v26 = *(_QWORD *)(a2 + 48);
            result = v26 + v15 * a1;
            v27 = v26 + v16;
            if (v15 * a1 < v16 || result >= v27 + v15)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v27);
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront(result, v27);
            }
            v28 = *(_QWORD *)(a2 + 56);
            v29 = (_QWORD *)(v28 + 8 * a1);
            v30 = (_QWORD *)(v28 + 8 * v11);
            v13 = v40;
            if (a1 != v11 || (a1 = v11, v29 >= v30 + 1))
            {
              *v29 = *v30;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v23 >= v14 || a1 >= (uint64_t)v23)
        {
          goto LABEL_17;
        }
        v13 = v40;
LABEL_5:
        v11 = (v11 + 1) & v12;
      }
      while (((*(_QWORD *)(v13 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v31 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v31;
    v33 = (-1 << a1) - 1;
  }
  else
  {
    v31 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v31;
    v32 = (-1 << a1) - 1;
  }
  *v31 = v33 & v32;
  v34 = *(_QWORD *)(a2 + 16);
  v35 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_10003A658(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10004F068(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        sub_100010C40(v19);
        return sub_100009CF0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10003ACC4();
      goto LABEL_7;
    }
    sub_100038EE4(v15, a4 & 1);
    v21 = sub_10004F068(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10003ABC4(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_10003A788(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10004F068(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10003B294(&qword_1000ED610);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain(a3);
    }
    goto LABEL_14;
  }
  sub_100039864(v15, a4 & 1, &qword_1000ED610);
  v21 = sub_10004F068(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_10003A8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  char v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;

  v4 = (_QWORD **)v3;
  v5 = a3;
  v8 = type metadata accessor for IndexPath(0, a2, a3);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v3;
  v18 = sub_10004F190(a2, v14, v15);
  v19 = v13[2];
  v20 = (v16 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_14;
  }
  v22 = v16;
  v23 = v13[3];
  if (v23 >= v21 && (v5 & 1) != 0)
  {
LABEL_7:
    v24 = *v4;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = v24[7];
      result = swift_release(*(_QWORD *)(v25 + 8 * v18));
      *(_QWORD *)(v25 + 8 * v18) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v23 >= v21 && (v5 & 1) == 0)
  {
    sub_10003AEA8(v21, v16, v17);
    goto LABEL_7;
  }
  sub_1000391E0(v21, v5 & 1, v17);
  v29 = sub_10004F190(a2, v27, v28);
  if ((v22 & 1) != (v30 & 1))
  {
LABEL_14:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }
  v18 = v29;
  v24 = *v4;
  if ((v22 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  return sub_10003AC2C(v18, (uint64_t)v12, a1, v24);
}

uint64_t sub_10003AA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_10004F068(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10003B440();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease(v21[1]);
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain(a4);
    }
    goto LABEL_14;
  }
  sub_100039B74(v17, a5 & 1);
  v23 = sub_10004F068(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

_OWORD *sub_10003ABC4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_100009CF0(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_10003AC2C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for IndexPath(0, a2, a3);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void *sub_10003ACC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_100007D40(&qword_1000ED5B8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release(v2);
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_100009C74(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_100009CF0(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10003AEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int64_t v30;

  v4 = type metadata accessor for IndexPath(0, a2, a3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007D40(&qword_1000ED608);
  v28 = v3;
  v9 = *v3;
  v10 = static _DictionaryStorage.copy(original:)(*v3);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v9);
    *v28 = v11;
    return result;
  }
  result = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v29 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v30 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v15;
    if (!v25)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v30)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v15);
      if (!v25)
        break;
    }
LABEL_25:
    v18 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v5 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v8, *(_QWORD *)(v9 + 48) + v21, v4);
    v22 = 8 * v20;
    v23 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v11 + 48) + v21, v8, v4);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v22) = v23;
    result = (void *)swift_retain(v23);
  }
  v26 = v24 + 2;
  if (v26 >= v30)
    goto LABEL_26;
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v15 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v15 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v15);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10003B0D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100007D40(&qword_1000ED5E0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10003B288()
{
  return sub_10003B294(&qword_1000ED5D0);
}

void *sub_10003B294(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_100007D40(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v19);
    result = (void *)swift_retain(v21);
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10003B440()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_100007D40(&qword_1000ED5C8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    result = (void *)swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10003B5F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD v29[4];
  int64_t v30;

  v24 = (unint64_t *)result;
  v4 = 0;
  v5 = 0;
  v26 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v30 = (unint64_t)(v6 + 63) >> 6;
  v9 = BCMessageDataImagesKey;
LABEL_4:
  v25 = v4;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v5 << 6);
LABEL_19:
    v15 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    sub_100009C74(*(_QWORD *)(a3 + 56) + 32 * v11, (uint64_t)v29);
    v27[0] = v16;
    v27[1] = v17;
    sub_100009C74((uint64_t)v29, (uint64_t)&v28);
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    if (v16 == v18 && v17 == v19)
    {
      swift_bridgeObjectRetain(v17);
      sub_100010A98((uint64_t)v27, &qword_1000ED5C0);
      sub_100010C40(v29);
      result = swift_bridgeObjectRelease(v17);
    }
    else
    {
      v21 = v19;
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0);
      swift_bridgeObjectRetain_n(v17, 2);
      swift_bridgeObjectRelease(v21);
      sub_100010A98((uint64_t)v27, &qword_1000ED5C0);
      sub_100010C40(v29);
      result = swift_bridgeObjectRelease(v17);
      if ((v22 & 1) == 0)
      {
        *(unint64_t *)((char *)v24 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        v4 = v25 + 1;
        if (!__OFADD__(v25, 1))
          goto LABEL_4;
        __break(1u);
        return sub_10003B878(v24, a2, v25, a3);
      }
    }
  }
  if (__OFADD__(v5++, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v5 >= v30)
    return sub_10003B878(v24, a2, v25, a3);
  v13 = *(_QWORD *)(v26 + 8 * v5);
  if (v13)
  {
LABEL_18:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v5 << 6);
    goto LABEL_19;
  }
  v14 = v5 + 1;
  if (v5 + 1 >= v30)
    return sub_10003B878(v24, a2, v25, a3);
  v13 = *(_QWORD *)(v26 + 8 * v14);
  if (v13)
    goto LABEL_17;
  v14 = v5 + 2;
  if (v5 + 2 >= v30)
    return sub_10003B878(v24, a2, v25, a3);
  v13 = *(_QWORD *)(v26 + 8 * v14);
  if (v13)
    goto LABEL_17;
  v14 = v5 + 3;
  if (v5 + 3 >= v30)
    return sub_10003B878(v24, a2, v25, a3);
  v13 = *(_QWORD *)(v26 + 8 * v14);
  if (v13)
  {
LABEL_17:
    v5 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v30)
      return sub_10003B878(v24, a2, v25, a3);
    v13 = *(_QWORD *)(v26 + 8 * v5);
    ++v14;
    if (v13)
      goto LABEL_18;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10003B878(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _QWORD v32[9];
  _OWORD v33[2];
  _OWORD v34[2];

  if (!a3)
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v4;
  }
  sub_100007D40(&qword_1000ED5B8);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v30)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v30)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v30)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v30)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v30)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    sub_100009C74(*(_QWORD *)(v4 + 56) + 32 * v13, (uint64_t)v34);
    sub_100009CF0(v34, v33);
    Hasher.init(_seed:)(v32);
    swift_bridgeObjectRetain(v18);
    String.hash(into:)(v32, v19, v18);
    result = Hasher._finalize()();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v19;
    v28[1] = v18;
    result = (uint64_t)sub_100009CF0(v33, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v23));
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10003BB3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10003BC2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      sub_100007D40(&qword_1000EC478);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10003BD34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      sub_100007D40(&qword_1000F07D0);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10003BE3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 48 * a1 + 32;
  v7 = a3 + 48 * v4;
  if (v6 >= v7 || v6 + 48 * v4 <= a3)
  {
    sub_100007D40(&qword_1000ED5C0);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10003BF48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10003C038(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10003C150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result;
  uint64_t v4;

  result = qword_1000ED600;
  if (!qword_1000ED600)
  {
    v4 = type metadata accessor for IndexPath(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v4);
    atomic_store(result, (unint64_t *)&qword_1000ED600);
  }
  return result;
}

char *sub_10003C198(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

id sub_10003C284(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  objc_class *v6;
  objc_class *v7;
  Class isa;
  uint64_t v14;
  uint64_t v15;
  NSURL *v16;
  void *v17;
  void *v18;
  NSString v19;
  id v20;

  v7 = v6;
  if (a2 >> 60 == 15)
  {
    isa = 0;
  }
  else
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100010BE8(a1, a2);
  }
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a3, 1, v14) != 1)
  {
    URL._bridgeToObjectiveC()(v16);
    v17 = v18;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a3, v14);
  }
  if (a5)
  {
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5);
  }
  else
  {
    v19 = 0;
  }
  v20 = objc_msgSend(objc_allocWithZone(v7), "initWithData:url:messageGUID:isFromMe:", isa, v17, v19, a6 & 1);

  return v20;
}

uint64_t sub_10003C3A4(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  NSDictionary v69;
  NSDictionary v70;
  objc_class *v71;
  __int128 v73;
  __int128 v74;
  _UNKNOWN **v75;
  objc_super v76;

  v5 = v4;
  v10 = objc_msgSend(a1, "combinedDictionary");
  if (!v10)
    goto LABEL_48;
  v11 = v10;
  v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v13 = BCMessageRootListPickerKey;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootListPickerKey);
  v16 = v15;
  if (*(_QWORD *)(v12 + 16) && (v17 = sub_10004F068(v14, v15), (v18 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v12 + 56) + 32 * v17, (uint64_t)&v73);
    swift_bridgeObjectRelease(v16);
    if (*((_QWORD *)&v74 + 1))
    {
      sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
      if ((objc_msgSend(v5, "isFromMe") & 1) != 0)
      {
        swift_bridgeObjectRelease(v12);
LABEL_27:
        v46 = type metadata accessor for IMBListRequest();
        swift_allocObject(v46, 32, 7);
        swift_bridgeObjectRetain(a3);
        v47 = swift_bridgeObjectRetain(a2);
        return sub_1000877B4(v47, a3);
      }
      goto LABEL_9;
    }
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
    swift_bridgeObjectRelease(v16);
  }
  sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
LABEL_9:
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootContentKey);
  v21 = v20;
  if (*(_QWORD *)(v12 + 16) && (v22 = sub_10004F068(v19, v20), (v23 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v12 + 56) + 32 * v22, (uint64_t)&v73);
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
  }
  swift_bridgeObjectRelease(v21);
  if (*((_QWORD *)&v74 + 1))
  {
    swift_bridgeObjectRelease(v12);
    sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
    v24 = type metadata accessor for IMBContent(0);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    v25 = swift_bridgeObjectRetain(a2);
    return sub_100050358(v25);
  }
  sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootPaymentKey);
  v29 = v28;
  if (*(_QWORD *)(v12 + 16) && (v30 = sub_10004F068(v27, v28), (v31 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v12 + 56) + 32 * v30, (uint64_t)&v73);
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
  }
  swift_bridgeObjectRelease(v29);
  if (*((_QWORD *)&v74 + 1))
  {
    swift_bridgeObjectRelease(v12);
    sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
    v32 = type metadata accessor for PaymentAuthorizationViewController();
    v33 = swift_allocObject(v32, 16, 7);
    *((_QWORD *)&v74 + 1) = v32;
    v75 = &off_1000D9DA8;
    *(_QWORD *)&v73 = v33;
    v34 = type metadata accessor for IMBPaymentRequest(0);
    v35 = swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
    v36 = sub_100031BA4((uint64_t)&v73, v32);
    __chkstk_darwin(v36, v36);
    v38 = (uint64_t *)((char *)&v73 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v39 + 16))(v38);
    v40 = *v38;
    swift_bridgeObjectRetain(a2);
    swift_retain(v33);
    v26 = (_QWORD *)sub_10003CF54(a2, v40, v35);
    sub_100010C40(&v73);
    swift_release(v33);
    return (uint64_t)v26;
  }
  sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v43 = v42;
  if (*(_QWORD *)(v12 + 16) && (v44 = sub_10004F068(v41, v42), (v45 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v12 + 56) + 32 * v44, (uint64_t)&v73);
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
  }
  swift_bridgeObjectRelease(v43);
  if (*((_QWORD *)&v74 + 1))
  {
    swift_bridgeObjectRelease(v12);
    sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
    goto LABEL_27;
  }
  sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
  v48 = BCMessageRootEventKey;
  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootEventKey);
  v51 = v50;
  if (*(_QWORD *)(v12 + 16) && (v52 = sub_10004F068(v49, v50), (v53 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v12 + 56) + 32 * v52, (uint64_t)&v73);
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
  }
  swift_bridgeObjectRelease(v51);
  v54 = *((_QWORD *)&v74 + 1);
  sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
  if (v54 && objc_msgSend(v5, "isFromMe"))
  {
    swift_bridgeObjectRelease(v12);
LABEL_41:
    v60 = type metadata accessor for IMBProposedEvent();
    swift_allocObject(v60, 96, 7);
    swift_bridgeObjectRetain(a3);
    v61 = swift_bridgeObjectRetain(a2);
    return sub_100011A88(v61, a3);
  }
  v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
  v57 = v56;
  if (*(_QWORD *)(v12 + 16) && (v58 = sub_10004F068(v55, v56), (v59 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v12 + 56) + 32 * v58, (uint64_t)&v73);
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
  }
  swift_bridgeObjectRelease(v57);
  if (*((_QWORD *)&v74 + 1))
  {
    swift_bridgeObjectRelease(v12);
    sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
    goto LABEL_41;
  }
  sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootJITAppKitKey);
  v64 = v63;
  if (*(_QWORD *)(v12 + 16) && (v65 = sub_10004F068(v62, v63), (v66 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v12 + 56) + 32 * v65, (uint64_t)&v73);
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
  }
  swift_bridgeObjectRelease(v64);
  swift_bridgeObjectRelease(v12);
  v67 = *((_QWORD *)&v74 + 1);
  sub_100010A98((uint64_t)&v73, (uint64_t *)&unk_1000EEB60);
  if (v67)
  {
    v68 = type metadata accessor for IMBJITAppKitData();
    v26 = (_QWORD *)swift_allocObject(v68, 24, 7);
    v26[2] = a2;
    swift_bridgeObjectRetain(a2);
    return (uint64_t)v26;
  }
LABEL_48:
  v69.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  if (a3)
  {
    sub_10003CF18();
    v70.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  }
  else
  {
    v70.super.isa = 0;
  }
  v71 = (objc_class *)type metadata accessor for IMBMessage();
  v76.receiver = v5;
  v76.super_class = v71;
  v26 = objc_msgSendSuper2(&v76, "makeRootObjectWithMessageData:dictionary:imageDictionary:version:", a1, v69.super.isa, v70.super.isa, a4);

  return (uint64_t)v26;
}

id sub_10003CAAC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  Class isa;
  uint64_t v18;
  uint64_t v19;
  NSURL *v20;
  void *v21;
  void *v22;
  NSString v23;
  objc_class *v24;
  id v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;

  v12 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v12, v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1;
  v16 = v6;
  if (a2 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  v28 = a3;
  sub_10003CED0(a3, (uint64_t)v15);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  v21 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) != 1)
  {
    URL._bridgeToObjectiveC()(v20);
    v21 = v22;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v18);
  }
  if (a5)
  {
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5);
  }
  else
  {
    v23 = 0;
  }
  v24 = (objc_class *)type metadata accessor for IMBMessage();
  v30.receiver = v16;
  v30.super_class = v24;
  v25 = objc_msgSendSuper2(&v30, "initWithData:url:messageGUID:isFromMe:", isa, v21, v23, a6 & 1);

  sub_100010BE8(v29, a2);
  v26 = v25;
  sub_100010A98(v28, (uint64_t *)&unk_1000ED480);
  if (v26)

  return v26;
}

id sub_10003CE80()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBMessage();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBMessage()
{
  return objc_opt_self(_TtC8Business10IMBMessage);
}

uint64_t sub_10003CED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40((uint64_t *)&unk_1000ED480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10003CF18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ED650;
  if (!qword_1000ED650)
  {
    v1 = objc_opt_self(BCImage);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000ED650);
  }
  return result;
}

uint64_t sub_10003CF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[5];

  v15[3] = type metadata accessor for PaymentAuthorizationViewController();
  v15[4] = &off_1000D9DA8;
  v15[0] = a2;
  v6 = a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_orderTrackingUrl;
  v7 = type metadata accessor for URL(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v8(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentGatewayUrl, 1, 1, v7);
  v8(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentMethodUpdateUrl, 1, 1, v7);
  v8(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingContactUpdateUrl, 1, 1, v7);
  v8(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_shippingMethodUpdateUrl, 1, 1, v7);
  v8(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl, 1, 1, v7);
  v8(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl, 1, 1, v7);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantCapabilities) = 0;
  *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_supportedNetworks) = 0;
  *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_sessionDictionary) = 0;
  *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_selectedShippingMethod) = 0;
  v9 = a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_errors) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest) = 0;
  *(_QWORD *)(a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_session) = 0;
  sub_10003D1A8((uint64_t)v15, a3 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentAuthorizationController);
  v12 = sub_10004CD84(a1);
  swift_bridgeObjectRelease(a1);
  v13 = sub_100009D0C(v12);
  swift_release(v13);
  swift_bridgeObjectRelease(v12);
  sub_100010C40(v15);
  return a3;
}

uint64_t sub_10003D1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_10003D28C()
{
  id *v0;
  id *v1;
  char *v2;
  _QWORD *v3;
  id v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(id *, _UNKNOWN **, uint64_t, uint64_t);
  id *v10;
  _BYTE *v11;
  _QWORD *v12;
  void *v13;
  _BYTE *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  _BYTE *v20;
  id v21;
  _QWORD *v22;
  Class isa;
  _BYTE *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  _QWORD *v42;
  Class v43;
  objc_super v44;

  v1 = v0;
  v44.receiver = v0;
  v44.super_class = (Class)type metadata accessor for IMBTranscriptMessageViewController();
  objc_msgSendSuper2(&v44, "viewDidLoad");
  v2 = *(char **)((char *)v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_pluginBubbleContext);
  v3 = (id *)((char *)v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_featureFlagArbiter);
  v4 = *(id *)&v2[OBJC_IVAR____TtC8Business19PluginBubbleContext_conversation];
  v5 = sub_10003FE68(v2, v1, v3);
  v7 = v6;

  if ((v7 & 0x8000000000000000) == 0)
  {
    ObjectType = swift_getObjectType(v5);
    v9 = *(void (**)(id *, _UNKNOWN **, uint64_t, uint64_t))(v7 + 24);
    v10 = v1;
    v11 = v5;
    v9(v1, &off_1000D7E10, ObjectType, v7);
    v12 = (id *)((char *)v10 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_bubbleView);
    v13 = *(id *)((char *)v10 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_bubbleView);
    *v12 = v5;
    v12[1] = v7;
    v14 = v5;

    v15 = objc_msgSend(v10, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "addSubview:", v14);

      v17 = objc_msgSend(v10, "view");
      if (v17)
      {
        v18 = v17;
        objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v19 = (void *)objc_opt_self(NSLayoutConstraint);
        v20 = v5;
        v21 = v18;
        v22 = sub_10003FBA4((uint64_t)&off_1000D5C28, (uint64_t)v14, (uint64_t)v21);

        sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v22);
        objc_msgSend(v19, "activateConstraints:", isa);

LABEL_10:
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
  v24 = v5;
  objc_msgSend(v1, "addChildViewController:", v24);
  v25 = objc_msgSend(v24, "view");
  if (!v25)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v26 = v25;
  v27 = swift_getObjectType(v25);
  v28 = swift_conformsToProtocol2(v27, &protocol descriptor for IMBBubbleViewBehavior);
  if (!v28)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v29 = v28;
  v30 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v28 + 24);
  v31 = swift_unknownObjectRetain(v1);
  v30(v31, &off_1000D7E10, v27, v29);
  v32 = (id *)((char *)v1 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_bubbleView);
  v33 = *(id *)((char *)v1 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_bubbleView);
  *v32 = v26;
  v32[1] = v29;
  v34 = v26;

  v35 = objc_msgSend(v1, "view");
  if (!v35)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v36 = v35;
  objc_msgSend(v35, "addSubview:", v34);

  v37 = objc_msgSend(v1, "view");
  if (v37)
  {
    v38 = v37;
    objc_msgSend(v34, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v39 = (void *)objc_opt_self(NSLayoutConstraint);
    v40 = v34;
    v41 = v38;
    v42 = sub_10003FBA4((uint64_t)&off_1000D5C28, (uint64_t)v40, (uint64_t)v41);

    sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
    v43 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v42);
    objc_msgSend(v39, "activateConstraints:", v43);

    objc_msgSend(v24, "didMoveToParentViewController:", v1);
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_10003D6A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  id v12;

  v10 = type metadata accessor for QuickReplyResponse();
  v11 = swift_allocObject(v10, 48, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_BYTE *)(v11 + 32) = a3 & 1;
  *(_QWORD *)(v11 + 40) = a4;
  swift_bridgeObjectRetain(a1);
  v12 = a5;
  sub_10003F568(v12, (void *)v11);

  return swift_release(v11);
}

uint64_t sub_10003D72C()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  int v3;
  void *v4;
  char *v5;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_10002DA10();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_pluginBubbleContext);
  v3 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage);
  v5 = (char *)objc_msgSend(v4, "type");
  if (v3 == 2)
  {
    if ((unint64_t)(v5 - 1) < 2)
      return 1;
    else
      return 3;
  }
  else if (v5 == (char *)5 && (v7 = objc_msgSend(v4, "rootObject")) != 0)
  {
    v8 = v7;
    v9 = objc_opt_self(BCServerSideOAuth2Request);
    v10 = swift_dynamicCastObjCClass(v8, v9);
    swift_unknownObjectRelease(v8);
    if (v10)
      return 3;
    else
      return 1;
  }
  else
  {
    return 1;
  }
}

id sub_10003D824()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBTranscriptMessageViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBTranscriptMessageViewController()
{
  return objc_opt_self(_TtC8Business34IMBTranscriptMessageViewController);
}

double sub_10003D8EC(double a1, double a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  double (*v9)(uint64_t, uint64_t, double, double);
  id v10;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_bubbleView);
  if (v5)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_bubbleView + 8);
    ObjectType = swift_getObjectType(v5);
    v8 = *(_QWORD *)(v6 + 8);
    v9 = *(double (**)(uint64_t, uint64_t, double, double))(v8 + 16);
    v10 = v5;
    a1 = v9(ObjectType, v8, a1, a2);

  }
  return a1;
}

void *sub_10003D988()
{
  uint64_t v0;
  void *result;
  void *v2;

  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_messagesAppProxy);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "requestResize");
    return (void *)swift_unknownObjectRelease(v2);
  }
  return result;
}

id sub_10003D9D4()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_messagesAppProxy);
  if (!Strong)
    return 0;
  v2 = Strong;
  v3 = objc_msgSend(Strong, "activeConversation");
  swift_unknownObjectRelease(v2);
  return v3;
}

void sub_10003DA30()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_authvc);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_authvc) = 0;

}

void sub_10003DA44(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;

  v2 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
  v3 = (void *)static OS_os_log.default.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  os_log(_:dso:log:type:_:)("BusinessChat: IMBTranscriptMessageViewController BCApplePayManagerDelegate paymentRequestDidUpdate", 98, 2, &_mh_execute_header, v3, v4, _swiftEmptyArrayStorage);

  v5 = type metadata accessor for IMBApplePayManager();
  v6 = swift_dynamicCastClass(a1, v5);
  if (!v6)
  {
    v71 = (id)static OS_os_log.default.getter(0);
    v29 = static os_log_type_t.default.getter(v71);
    os_log(_:dso:log:type:_:)("BusinessChat: BCApplePayManagerDelegate applePayManager is not IMBApplePayManager", 81, 2, &_mh_execute_header, v71, v29, _swiftEmptyArrayStorage);

    return;
  }
  v7 = v6;
  v8 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
  v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (v9 && *(_BYTE *)(v9 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState + 8) != 1)
  {
    v30 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState);
    v31 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v32 = swift_allocObject(v31, 72, 7);
    *(_OWORD *)(v32 + 16) = xmmword_1000AF070;
    v33 = sub_100060F1C(v30);
    v35 = v34;
    *(_QWORD *)(v32 + 56) = &type metadata for String;
    *(_QWORD *)(v32 + 64) = sub_100009084();
    *(_QWORD *)(v32 + 32) = v33;
    *(_QWORD *)(v32 + 40) = v35;
    v36 = swift_unknownObjectRetain(a1);
    v37 = (void *)static OS_os_log.default.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    os_log(_:dso:log:type:_:)("BusinessChat: Returned apple pay status = %@", 44, 2, &_mh_execute_header, v37, v38, v32);
    swift_bridgeObjectRelease(v32);

    if (v30 == 3)
      goto LABEL_13;
    v9 = *(_QWORD *)(v7 + v8);
    if (!v9)
      goto LABEL_15;
  }
  else
  {
    swift_unknownObjectRetain(a1);
    if (!v9)
      goto LABEL_15;
  }
  if ((*(_BYTE *)(v9 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState + 8) & 1) == 0)
  {
    v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState);
    v11 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v12 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v12 + 16) = xmmword_1000AF070;
    v13 = sub_100060F1C(v10);
    v15 = v14;
    *(_QWORD *)(v12 + 56) = &type metadata for String;
    v16 = sub_100009084();
    *(_QWORD *)(v12 + 64) = v16;
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 40) = v15;
    v17 = (void *)static OS_os_log.default.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    os_log(_:dso:log:type:_:)("BusinessChat: Returned apple pay status = %@", 44, 2, &_mh_execute_header, v17, v18, v12);
    swift_bridgeObjectRelease(v12);

    if (v10 == 4)
      goto LABEL_13;
    v9 = *(_QWORD *)(v7 + v8);
    if (!v9)
    {
LABEL_15:
      v41 = sub_100007D40((uint64_t *)&unk_1000ECE50);
      v42 = swift_allocObject(v41, 72, 7);
      *(_OWORD *)(v42 + 16) = xmmword_1000AF070;
      v43 = *(_QWORD *)(v7 + v8);
      if (v43 && (v44 = v43 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState, *(_BYTE *)(v44 + 8) != 1))
      {
        v45 = *(_QWORD *)v44;
        v46 = swift_allocObject(v41, 72, 7);
        *(_OWORD *)(v46 + 16) = xmmword_1000AF070;
        v47 = sub_100060F1C(v45);
        v49 = v48;
        *(_QWORD *)(v46 + 56) = &type metadata for String;
        v50 = sub_100009084();
        *(_QWORD *)(v46 + 64) = v50;
        *(_QWORD *)(v46 + 32) = v47;
        *(_QWORD *)(v46 + 40) = v49;
        v51 = (void *)static OS_os_log.default.getter(v50);
        v52 = static os_log_type_t.default.getter(v51);
        os_log(_:dso:log:type:_:)("BusinessChat: Returned apple pay status = %@", 44, 2, &_mh_execute_header, v51, v52, v46);
        swift_bridgeObjectRelease(v46);

      }
      else
      {
        v45 = 1;
      }
      v53 = sub_100060F1C(v45);
      v55 = v54;
      *(_QWORD *)(v42 + 56) = &type metadata for String;
      v56 = sub_100009084();
      *(_QWORD *)(v42 + 64) = v56;
      *(_QWORD *)(v42 + 32) = v53;
      *(_QWORD *)(v42 + 40) = v55;
      v57 = (void *)static OS_os_log.default.getter(v56);
      v58 = static os_log_type_t.default.getter(v57);
      os_log(_:dso:log:type:_:)("BusinessChat: BCApplePayManagerDelegate updating view with state %@", 67, 2, &_mh_execute_header, v57, v58, v42);
      swift_bridgeObjectRelease(v42);

      v59 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
      v60 = *(_QWORD *)(v59 + 48);
      v61 = *(void **)(v59 + 56);
      v62 = *(_QWORD *)(v7 + v8);
      if (v62
        && (v63 = v62 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState, (*(_BYTE *)(v63 + 8) & 1) == 0))
      {
        v65 = *(_QWORD *)v63;
        v66 = swift_allocObject(v41, 72, 7);
        *(_OWORD *)(v66 + 16) = xmmword_1000AF070;
        v67 = sub_100060F1C(v65);
        *(_QWORD *)(v66 + 56) = &type metadata for String;
        *(_QWORD *)(v66 + 64) = v56;
        *(_QWORD *)(v66 + 32) = v67;
        *(_QWORD *)(v66 + 40) = v68;
        swift_bridgeObjectRetain(v60);
        v69 = (void *)static OS_os_log.default.getter(v61);
        v70 = static os_log_type_t.default.getter(v69);
        os_log(_:dso:log:type:_:)("BusinessChat: Returned apple pay status = %@", 44, 2, &_mh_execute_header, v69, v70, v66);
        swift_bridgeObjectRelease(v66);

      }
      else
      {
        swift_bridgeObjectRetain(v60);
        v64 = v61;
      }
      sub_100041D28();
      swift_bridgeObjectRelease(v60);

      goto LABEL_24;
    }
  }
  if ((*(_BYTE *)(v9 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState + 8) & 1) != 0)
    goto LABEL_15;
  v20 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState);
  v21 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1000AF070;
  v23 = sub_100060F1C(v20);
  v25 = v24;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  v26 = sub_100009084();
  *(_QWORD *)(v22 + 64) = v26;
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v25;
  v27 = (void *)static OS_os_log.default.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  os_log(_:dso:log:type:_:)("BusinessChat: Returned apple pay status = %@", 44, 2, &_mh_execute_header, v27, v28, v22);
  swift_bridgeObjectRelease(v22);

  if (v20 != 7)
    goto LABEL_15;
LABEL_13:
  v39 = (void *)static OS_os_log.default.getter(v19);
  v40 = static os_log_type_t.default.getter(v39);
  os_log(_:dso:log:type:_:)("BusinessChat: BCApplePayManagerDelegate sending back message", 60, 2, &_mh_execute_header, v39, v40, _swiftEmptyArrayStorage);

  sub_10003E018(v7);
LABEL_24:
  swift_unknownObjectRelease(a1);
}

void sub_10003E018(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  NSString v38;
  NSString v39;
  Swift::String v40;
  Swift::String v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char *v65;
  id v66;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (v2)
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_pluginBubbleContext);
    v5 = OBJC_IVAR____TtC8Business19PluginBubbleContext_conversation;
    v6 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8Business19PluginBubbleContext_conversation), "selectedMessage", swift_retain(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest)).n128_f64[0]);
    v7 = objc_msgSend(v6, "session");

    if (!v7)
      v7 = objc_msgSend(objc_allocWithZone((Class)MSSession), "init");
    v8 = objc_msgSend(objc_allocWithZone((Class)MSMessage), "initWithSession:", v7);
    v9 = objc_msgSend(objc_allocWithZone((Class)MSMessageTemplateLayout), "init");
    v10 = OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage;
    v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v4
                                                                + OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage), "receivedMessage"));
    if (v11
      && (v12 = v11,
          v13 = objc_msgSend(v11, "imageIdentifier"),
          v12,
          v13))
    {
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v59 = v15;
      v60 = v14;

    }
    else
    {
      v59 = 0;
      v60 = 0;
    }
    v16 = objc_msgSend(*(id *)(v4 + v10), "receivedMessage");
    if (v16
      && (v17 = v16,
          v18 = objc_msgSend(v16, "imageDescription"),
          v17,
          v18))
    {
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v57 = v20;
      v58 = v19;

    }
    else
    {
      v57 = 0;
      v58 = 0;
    }
    v21 = objc_msgSend(*(id *)(v4 + v10), "receivedMessage");
    if (v21)
    {
      v22 = v21;
      v56 = objc_msgSend(v21, "style");

    }
    else
    {
      v56 = BCBubbleViewStyleIcon;
    }
    v23 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                + OBJC_IVAR____TtC8Business18IMBApplePayManager_imbMessage), "replyMessage"));
    v64 = v7;
    v65 = (char *)v5;
    v62 = v2;
    v63 = a1;
    v61 = v8;
    if (v23
      && (v24 = v23, v25 = objc_msgSend(v23, "title"), v24, v25))
    {
      v26 = v9;
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v29 = v28;

      v30 = OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel;
      v31 = *(_QWORD **)(a1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
    }
    else
    {
      v26 = v9;
      v30 = OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel;
      v31 = *(_QWORD **)(a1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
      v27 = v31[5];
      v29 = v31[6];
      swift_bridgeObjectRetain(v29);
    }
    v32 = v31[10];
    v33 = (void *)v31[11];
    v34 = *(void **)(v4 + v10);
    swift_bridgeObjectRetain(v33);
    v35 = objc_msgSend(v34, "receivedMessage");
    if (v35)
    {
      v36 = v35;
      v37 = objc_msgSend(v35, "image");

    }
    else
    {
      v37 = 0;
    }
    objc_msgSend(v26, "setImage:", v37);

    v38 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setCaption:", v38);

    v39 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setSubcaption:", v39);

    swift_bridgeObjectRetain(v29);
    v40._countAndFlagsBits = 32;
    v40._object = (void *)0xE100000000000000;
    String.append(_:)(v40);
    swift_bridgeObjectRetain(v29);
    v41._countAndFlagsBits = v32;
    v41._object = v33;
    String.append(_:)(v41);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v33);
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    objc_msgSend(v61, "setAccessibilityLabel:", v42);

    v43 = objc_msgSend(objc_allocWithZone((Class)MSMessageLiveLayout), "initWithAlternateLayout:", v26);
    objc_msgSend(v61, "setLayout:", v43);

    v44 = *(_QWORD *)(v63 + v30);
    v45 = *(_QWORD *)(v44 + 80);
    v46 = *(_QWORD *)(v44 + 88);
    v47 = objc_allocWithZone((Class)BCMessageInfo);
    swift_bridgeObjectRetain(v46);
    v48 = v56;
    v49 = sub_1000631C0(v27, v29, v45, v46, v48, 0, 0, v60, v59, v58, v57);
    v50 = *(void **)(v4 + v10);
    v51 = *(void **)&v65[v4];
    v52 = (void *)BCMessageRootPaymentKey;
    swift_retain(v62);
    v66 = v50;
    v53 = v61;
    v54 = v51;
    v55 = v52;
    sub_1000371DC(1);

    swift_release_n(v62, 2);
  }
}

void sub_10003E5BC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);
  id v5;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_bubbleView);
  if (v1)
  {
    v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_bubbleView + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(a1
                                               + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_bubbleView));
    v4 = *(void (**)(uint64_t, uint64_t))(v2 + 40);
    v5 = v1;
    v4(ObjectType, v2);

  }
}

uint64_t sub_10003E648()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  __int128 v28;
  uint64_t ObjectType;
  char *v30;

  v1 = type metadata accessor for Mirror.AncestorRepresentation(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007D40(&qword_1000ED508);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v0;
  v10 = sub_100007D40(&qword_1000ED050);
  v11 = swift_allocObject(v10, 176, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1000AF280;
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_pluginBubbleContext];
  strcpy((char *)(v11 + 32), "conversation");
  *(_BYTE *)(v11 + 45) = 0;
  *(_WORD *)(v11 + 46) = -5120;
  v13 = *(void **)(v12 + OBJC_IVAR____TtC8Business19PluginBubbleContext_conversation);
  v14 = sub_1000090C8(0, &qword_1000ED510, MSConversation_ptr);
  *(_QWORD *)(v11 + 48) = v13;
  *(_QWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 80) = 0x6567617373656DLL;
  *(_QWORD *)(v11 + 88) = 0xE700000000000000;
  v15 = *(void **)(v12 + OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage);
  v16 = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
  *(_QWORD *)(v11 + 96) = v15;
  *(_QWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 128) = 0xD000000000000010;
  *(_QWORD *)(v11 + 136) = 0x80000001000B6770;
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_messagesAppProxy]);
  if (Strong)
  {
    v18 = Strong;
    v27 = v0;
    ObjectType = swift_getObjectType(Strong);
    *(_QWORD *)&v28 = v18;
    v0 = v27;
    sub_100009CF0(&v28, (_OWORD *)(v11 + 144));
  }
  else
  {
    *(_QWORD *)(v11 + 168) = &type metadata for String;
    *(_QWORD *)(v11 + 144) = 7104878;
    *(_QWORD *)(v11 + 152) = 0xE300000000000000;
  }
  v19 = v0;
  v20 = v13;
  v21 = v15;
  v22 = enum case for Mirror.DisplayStyle.class(_:);
  v23 = type metadata accessor for Mirror.DisplayStyle(0);
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v9, v22, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v9, 0, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for Mirror.AncestorRepresentation.generated(_:), v1);
  v25 = type metadata accessor for IMBTranscriptMessageViewController();
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)(&v30, v11, v9, v5, v25);
}

uint64_t sub_10003E904()
{
  return sub_10003E648();
}

uint64_t sub_10003E924(uint64_t a1)
{
  unint64_t v1;
  _BYTE v3[40];
  _BYTE v4[40];

  sub_100010BA4(a1, (uint64_t)v4, &qword_1000ED6D0);
  sub_100010BA4((uint64_t)v4, (uint64_t)v3, &qword_1000ED6D0);
  v1 = sub_1000420E4();
  EnvironmentValues.subscript.setter(v3, &type metadata for BubbleContextKey, &type metadata for BubbleContextKey, v1);
  return sub_100010A98((uint64_t)v4, &qword_1000ED6D0);
}

char *sub_10003E994(uint64_t a1, void *a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char *result;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  objc_class *v63;
  char *v64;
  id v65;
  unsigned int v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  objc_class *v84;
  char *v85;
  _QWORD *v86;
  char *v87;
  void *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  void *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  __int128 v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  char v130[24];
  _QWORD v131[3];
  objc_super v132;
  objc_super v133;
  _QWORD v134[6];

  v6 = sub_100007D40((uint64_t *)&unk_1000ED480);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  v13 = (char *)&v116 - v12;
  v14 = type metadata accessor for Date(0);
  v126 = *(_QWORD *)(v14 - 8);
  v127 = v14;
  __chkstk_darwin(v14, v15);
  v116 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007D40(&qword_1000ED070);
  v19 = __chkstk_darwin(v17, v18);
  v128 = (uint64_t)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v21);
  v120 = (uint64_t)&v116 - v22;
  v119 = type metadata accessor for CharacterSet(0);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119, v23);
  v117 = (char *)&v116 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134[3] = type metadata accessor for HttpClientFactory();
  v134[4] = &off_1000D78D8;
  v134[0] = a1;
  swift_unknownObjectWeakInit(&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate], 0);
  v25 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_tryAgainAuthorizationStatus] = 1000;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayTryAgainTimer] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_authorizePaymentRetryTimer] = 0;
  v26 = &a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizedCompletion];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentExpireTimer] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_paymentAuthorizationController] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Business18IMBApplePayManager_window] = 0;
  v123 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v27 = swift_allocObject(v123, 72, 7);
  v122 = xmmword_1000AF070;
  *(_OWORD *)(v27 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v27 + 56) = &type metadata for String;
  v124 = sub_100009084();
  *(_QWORD *)(v27 + 64) = v124;
  *(_QWORD *)(v27 + 32) = 0xD000000000000020;
  *(_QWORD *)(v27 + 40) = 0x80000001000B7530;
  v28 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
  v29 = a3;
  v125 = v28;
  v30 = (void *)static OS_os_log.default.getter(v29);
  v31 = static os_log_type_t.default.getter(v30);
  os_log(_:dso:log:type:_:)("BusinessChat: IMBApplePayManager %@", 35, 2, &_mh_execute_header, v30, v31, v27);
  swift_bridgeObjectRelease(v27);

  sub_10003D1A8((uint64_t)v134, (uint64_t)&v29[OBJC_IVAR____TtC8Business18IMBApplePayManager_httpClientFactory]);
  v32 = type metadata accessor for IMBMessage();
  v33 = swift_dynamicCastClass(a2, v32);
  if (v33)
  {
    v34 = (void *)v33;
    v35 = a2;
    goto LABEL_19;
  }
  v36 = objc_msgSend(a2, "messageData");
  if (v36)
  {
    v37 = v36;
    v38 = objc_msgSend(v36, "data");

    if (v38)
    {
      v39 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v129 = v40;

    }
    else
    {
      v39 = 0;
      v129 = (id)0xF000000000000000;
    }
  }
  else
  {
    v39 = 0;
    v129 = (id)0xF000000000000000;
  }
  v41 = objc_msgSend(a2, "messageData");
  if (v41)
  {
    v42 = v41;
    v43 = objc_msgSend(v41, "url");

    if (v43)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v43);

      v44 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v10, 0, 1, v44);
    }
    else
    {
      v46 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v10, 1, 1, v46);
    }
    sub_100030C84((uint64_t)v10, (uint64_t)v13);
  }
  else
  {
    v45 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v13, 1, 1, v45);
  }
  v47 = objc_msgSend(a2, "messageGUID");
  if (v47)
  {
    v48 = v47;
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v51 = v50;

  }
  else
  {
    v49 = 0;
    v51 = 0;
  }
  v52 = objc_msgSend(a2, "isFromMe");
  result = (char *)sub_10003C284(v39, (unint64_t)v129, (uint64_t)v13, v49, v51, v52);
  if (result)
  {
    v34 = result;
LABEL_19:
    v54 = objc_msgSend(v34, "rootObject");
    if (v54)
    {
      v55 = v54;
      v56 = type metadata accessor for IMBPaymentRequest(0);
      v57 = swift_dynamicCastClass(v55, v56);
      if (v57)
      {
        v58 = *(_QWORD *)&a3[v25];
        *(_QWORD *)&a3[v25] = v57;
        swift_release(v58);
        goto LABEL_26;
      }
      swift_unknownObjectRelease(v55);
    }
    v59 = *(_QWORD *)&a3[v25];
    *(_QWORD *)&a3[v25] = 0;
    v60 = swift_release(v59);
    if (qword_1000EBCB8 != -1)
      v60 = swift_once(&qword_1000EBCB8, sub_100082798);
    v61 = qword_1000F8A90;
    v62 = static os_log_type_t.error.getter(v60);
    os_log(_:dso:log:type:_:)("BusinessChat: IMBPaymentRequest is nil", 38, 2, &_mh_execute_header, v61, v62, _swiftEmptyArrayStorage);
LABEL_26:
    *(_QWORD *)&v29[OBJC_IVAR____TtC8Business18IMBApplePayManager_imbMessage] = v34;
    v63 = (objc_class *)type metadata accessor for IMBNetworkBody();
    v64 = (char *)objc_allocWithZone(v63);
    *(_QWORD *)&v64[OBJC_IVAR____TtC8Business14IMBNetworkBody__body] = &_swiftEmptyDictionarySingleton;
    *(_QWORD *)&v64[OBJC_IVAR____TtC8Business14IMBNetworkBody_message] = a2;
    v133.receiver = v64;
    v133.super_class = v63;
    v65 = a2;
    v129 = v34;
    *(_QWORD *)&v29[OBJC_IVAR____TtC8Business18IMBApplePayManager_imbNetworkBody] = objc_msgSendSuper2(&v133, "init");
    v66 = objc_msgSend(v65, "isFromMe");
    v121 = v65;
    if (v66)
    {
      v67 = objc_msgSend(v65, "replyMessage");
      v68 = v67;
      if (!v67)
      {
        v71 = 0;
        v79 = *(_QWORD *)&a3[v25];
        if (!v79)
          goto LABEL_36;
LABEL_35:
        v80 = v79 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
        *(_QWORD *)v80 = 1;
        *(_BYTE *)(v80 + 8) = 0;
        goto LABEL_36;
      }
    }
    else
    {
      v67 = objc_msgSend(v65, "receivedMessage");
      v68 = v67;
      if (!v67)
      {
LABEL_48:
        v71 = 0;
        v79 = *(_QWORD *)&a3[v25];
        if (!v79)
          goto LABEL_36;
        goto LABEL_35;
      }
    }
    v69 = objc_msgSend(v67, "title");

    if (v69)
    {
      v68 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
      v71 = v70;

      v131[0] = v68;
      v131[1] = v71;
      v72 = swift_bridgeObjectRetain(v71);
      v73 = v117;
      static CharacterSet.whitespacesAndNewlines.getter(v72);
      v74 = sub_10002CDE8();
      v75 = StringProtocol.trimmingCharacters(in:)(v73, &type metadata for String, v74);
      v77 = v76;
      (*(void (**)(char *, uint64_t))(v118 + 8))(v73, v119);
      swift_bridgeObjectRelease(v71);
      swift_bridgeObjectRelease(v77);
      v78 = HIBYTE(v77) & 0xF;
      if ((v77 & 0x2000000000000000) == 0)
        v78 = v75 & 0xFFFFFFFFFFFFLL;
      if (!v78)
      {
        v79 = *(_QWORD *)&a3[v25];
        if (v79)
          goto LABEL_35;
      }
LABEL_36:
      v81 = *(_QWORD *)&a3[v25];
      v82 = type metadata accessor for IMBApplePayViewModel();
      swift_allocObject(v82, 104, 7);
      swift_retain(v81);
      *(_QWORD *)&v29[OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel] = sub_10008B29C(v83, (uint64_t)v68, v71);

      v84 = (objc_class *)type metadata accessor for IMBApplePayManager();
      v132.receiver = v29;
      v132.super_class = v84;
      v85 = (char *)objc_msgSendSuper2(&v132, "init");
      v86 = *(_QWORD **)&v85[OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel];
      v87 = v85;
      swift_retain(v86);
      v88 = v129;
      sub_1000287E8(v129, v86);
      swift_release(v86);
      v89 = swift_allocObject(v123, 72, 7);
      v90 = (_QWORD *)v89;
      *(_OWORD *)(v89 + 16) = v122;
      v91 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
      v92 = *(_QWORD *)&v87[OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest];
      v94 = v126;
      v93 = v127;
      if (v92)
      {
        v95 = v92 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate;
        swift_beginAccess(v92 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate, v131, 0, 0);
        v96 = v95;
        v97 = v120;
        sub_100010BA4(v96, v120, &qword_1000ED070);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v97, 1, v93))
        {
          v112 = v116;
          (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v116, v97, v93);
          v113 = sub_100010A98(v97, &qword_1000ED070);
          v100 = Date.debugDescription.getter(v113);
          v99 = v114;
          v89 = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v112, v93);
          v115 = v124;
          v90[7] = &type metadata for String;
          v90[8] = v115;
          if (v99)
          {
            v88 = v129;
LABEL_41:
            v90[4] = v100;
            v90[5] = v99;
            v101 = (void *)static OS_os_log.default.getter(v89);
            v102 = static os_log_type_t.default.getter(v101);
            os_log(_:dso:log:type:_:)("BusinessChat: paymentExpirationDate = %@", 40, 2, &_mh_execute_header, v101, v102, v90);
            swift_bridgeObjectRelease(v90);

            v103 = *(_QWORD *)&v87[v91];
            if (v103)
            {
              v104 = v103 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate;
              swift_beginAccess(v103 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate, v130, 0, 0);
              v105 = v104;
              v106 = v128;
              sub_100010BA4(v105, v128, &qword_1000ED070);
              v107 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v106, 1, v93);
              v108 = v121;
              if (v107 != 1)
              {
                v109 = sub_100010A98(v106, &qword_1000ED070);
                v110 = (void *)static OS_os_log.default.getter(v109);
                v111 = static os_log_type_t.default.getter(v110);
                os_log(_:dso:log:type:_:)("BusinessChat: IMBApplePaymanager starting timer in init", 55, 2, &_mh_execute_header, v110, v111, _swiftEmptyArrayStorage);

                sub_100023C10();
LABEL_46:
                sub_100010C40(v134);
                return v87;
              }
            }
            else
            {
              v106 = v128;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v128, 1, 1, v93);
              v108 = v121;
            }

            sub_100010A98(v106, &qword_1000ED070);
            goto LABEL_46;
          }
          v99 = 0xE300000000000000;
          v88 = v129;
LABEL_40:
          v100 = 7104878;
          goto LABEL_41;
        }
        v89 = sub_100010A98(v97, &qword_1000ED070);
      }
      v98 = v124;
      v90[7] = &type metadata for String;
      v90[8] = v98;
      v99 = 0xE300000000000000;
      goto LABEL_40;
    }
    v68 = 0;
    goto LABEL_48;
  }
  __break(1u);
  return result;
}

id sub_10003F460(uint64_t a1)
{
  uint64_t v2;
  objc_class *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;
  _QWORD v13[5];
  _QWORD v14[5];

  v2 = type metadata accessor for PluginBubbleContext();
  v14[3] = v2;
  v14[4] = &off_1000D6B68;
  v14[0] = a1;
  v3 = (objc_class *)type metadata accessor for BIABubbleViewController();
  v4 = objc_allocWithZone(v3);
  v5 = sub_100031BA4((uint64_t)v14, v2);
  __chkstk_darwin(v5, v5);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  v9 = *v7;
  v13[3] = v2;
  v13[4] = &off_1000D6B68;
  v13[0] = v9;
  sub_10003D1A8((uint64_t)v13, (uint64_t)v4 + OBJC_IVAR____TtC8Business23BIABubbleViewController_context);
  v12.receiver = v4;
  v12.super_class = v3;
  v10 = objc_msgSendSuper2(&v12, "initWithNibName:bundle:", 0, 0);
  sub_100010C40(v13);
  sub_100010C40(v14);
  return v10;
}

uint64_t sub_10003F568(void *a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  _QWORD v13[3];
  uint64_t v14;
  _UNKNOWN **v15;
  Swift::String v16;

  v14 = type metadata accessor for PluginBubbleContext();
  v15 = &off_1000D6B68;
  v13[0] = a1;
  sub_100008FA4(v13, v14);
  v4 = (void *)BCMessageRootQuickReplyKey;
  v5 = a1;
  v6 = objc_msgSend(a2, "dictionaryValue");
  v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16._object = (void *)0xE000000000000000;
  v9._object = (void *)0x80000001000B7600;
  v9._countAndFlagsBits = 0xD000000000000015;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v16._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v16)._object;

  sub_100018560(v4, v7);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(object);
  return sub_100010C40(v13);
}

_QWORD *sub_10003F6C0(char a1, void *a2, uint64_t a3, _BYTE *a4)
{
  _QWORD *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  id v12;
  _BYTE *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  char *v26;
  char *v27;
  char v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _BYTE *v41;
  void *v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  objc_super v48;
  _QWORD v49[5];

  v49[3] = type metadata accessor for URLHelper(0);
  v49[4] = &off_1000D8BD0;
  v8 = sub_100030FF8(v49);
  sub_100042128(a3, (uint64_t)v8);
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business13IMBBubbleView_touchDelay] = 0x4000000000000000;
  v9 = &a4[OBJC_IVAR____TtC8Business13IMBBubbleView_delegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  v10 = (void *)BCBubbleViewStyleIcon;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business13IMBBubbleView_style] = BCBubbleViewStyleIcon;
  a4[OBJC_IVAR____TtC8Business13IMBBubbleView_type] = 0;
  v11 = OBJC_IVAR____TtC8Business13IMBBubbleView_titleLabel;
  v12 = objc_allocWithZone((Class)UILabel);
  v13 = a4;
  v14 = v10;
  *(_QWORD *)&a4[v11] = objc_msgSend(v12, "init");
  v15 = OBJC_IVAR____TtC8Business13IMBBubbleView_subtitleLabel;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v16 = OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainer;
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v17 = OBJC_IVAR____TtC8Business13IMBBubbleView_informationView;
  *(_QWORD *)&v13[v17] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v18 = OBJC_IVAR____TtC8Business13IMBBubbleView_informationBackground;
  *(_QWORD *)&v13[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v19 = OBJC_IVAR____TtC8Business13IMBBubbleView_imageView;
  *(_QWORD *)&v13[v19] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v20 = OBJC_IVAR____TtC8Business13IMBBubbleView_defaultColor;
  if (qword_1000EBBD8 != -1)
    swift_once(&qword_1000EBBD8, sub_10002D56C);
  v21 = (void *)qword_1000F8958;
  *(_QWORD *)&v13[v20] = qword_1000F8958;
  v22 = OBJC_IVAR____TtC8Business13IMBBubbleView_highlightColor;
  v23 = qword_1000EBBE0;
  v24 = v21;
  if (v23 != -1)
    swift_once(&qword_1000EBBE0, sub_10002D594);
  v25 = (void *)qword_1000F8960;
  *(_QWORD *)&v13[v22] = qword_1000F8960;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Business13IMBBubbleView_imageViewHeightContraint] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Business13IMBBubbleView_imageViewWidthConstraint] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Business13IMBBubbleView_labelWidthConstraint] = 0;
  v26 = &v13[OBJC_IVAR____TtC8Business13IMBBubbleView_touch];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = 1;
  v27 = &v13[OBJC_IVAR____TtC8Business13IMBBubbleView_touchTimestamp];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  v13[OBJC_IVAR____TtC8Business13IMBBubbleView_useAlternateTapTarget] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainerFirstConstraintsIconSmall] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Business13IMBBubbleView_imageViewFirstConstraintsIconSmall] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Business13IMBBubbleView_largeLabelContainerConstraints] = _swiftEmptyArrayStorage;
  v28 = a1 & 1;
  v29 = OBJC_IVAR____TtC8Business13IMBBubbleView_imageViewSpacingConstraint;
  v30 = objc_allocWithZone((Class)NSLayoutConstraint);
  v31 = v25;
  *(_QWORD *)&v13[v29] = objc_msgSend(v30, "init");
  v32 = OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainerWidthConstraint;
  *(_QWORD *)&v13[v32] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v33 = OBJC_IVAR____TtC8Business13IMBBubbleView_labelRightConstraint;
  *(_QWORD *)&v13[v33] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v34 = OBJC_IVAR____TtC8Business13IMBBubbleView_titleLabelWidthConstraint;
  *(_QWORD *)&v13[v34] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v35 = OBJC_IVAR____TtC8Business13IMBBubbleView_subtitleLabelWidthConstraint;
  *(_QWORD *)&v13[v35] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v36 = OBJC_IVAR____TtC8Business13IMBBubbleView_subtitleLabelHeightConstraint;
  *(_QWORD *)&v13[v36] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v37 = OBJC_IVAR____TtC8Business13IMBBubbleView_widthConstraint;
  *(_QWORD *)&v13[v37] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v38 = OBJC_IVAR____TtC8Business13IMBBubbleView_heightConstraint;
  *(_QWORD *)&v13[v38] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v39 = &v13[OBJC_IVAR____TtC8Business13IMBBubbleView_title];
  *v39 = 0;
  v39[1] = 0;
  v40 = &v13[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitle];
  *v40 = 0;
  v40[1] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Business13IMBBubbleView_image] = 0;
  sub_10003D1A8((uint64_t)v49, (uint64_t)&v13[OBJC_IVAR____TtC8Business13IMBBubbleView_urlHelper]);

  v48.receiver = v13;
  v48.super_class = (Class)type metadata accessor for IMBBubbleView();
  v41 = objc_msgSendSuper2(&v48, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v41[OBJC_IVAR____TtC8Business13IMBBubbleView_type] = v28;
  v42 = *(void **)&v41[OBJC_IVAR____TtC8Business13IMBBubbleView_style];
  *(_QWORD *)&v41[OBJC_IVAR____TtC8Business13IMBBubbleView_style] = a2;
  v43 = v41;
  v44 = a2;

  v45 = (*(uint64_t (**)(void))((swift_isaMask & *v43) + 0x398))();
  v46 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v43) + 0x3A0))(v45);
  sub_10007BB74(v46);

  sub_100010C40(v49);
  return v43;
}

_QWORD *sub_10003FBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v4)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    v8 = (uint64_t *)(a1 + 32);
    v9 = (void *)objc_opt_self(NSLayoutConstraint);
    do
    {
      v10 = *v8++;
      v11 = objc_msgSend(v9, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:", a2, v10, 0, a3, v10, 1.0, 0.0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v12 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
      --v4;
    }
    while (v4);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10003FCA4(uint64_t a1, char a2, void *a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  _QWORD *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  _QWORD v27[3];
  uint64_t v28;
  _UNKNOWN **v29;

  v5 = a2 & 1;
  v6 = type metadata accessor for URLHelper(0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3;
  sub_10004EA08((uint64_t)v9);
  v28 = v6;
  v29 = &off_1000D8BD0;
  v11 = sub_100030FF8(v27);
  sub_100020D60((uint64_t)v9, (uint64_t)v11);
  v12 = objc_allocWithZone((Class)type metadata accessor for IMBBubbleView());
  v13 = sub_100031BA4((uint64_t)v27, v28);
  __chkstk_darwin(v13, v13);
  v15 = (char *)&v27[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  v17 = sub_10003F6C0(v5, v10, (uint64_t)v15, v12);

  sub_100010C40(v27);
  sub_100020DA4((uint64_t)v9);
  v18 = objc_msgSend((id)objc_opt_self(BCMessage), "defaultBubbleTitleFor:", a1);
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = (_QWORD *)((char *)v17 + OBJC_IVAR____TtC8Business13IMBBubbleView_title);
  v23 = *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC8Business13IMBBubbleView_title + 8);
  *v22 = v19;
  v22[1] = v21;
  swift_bridgeObjectRelease(v23);
  sub_1000AA190();
  objc_msgSend(v17, "setUserInteractionEnabled:", 0);
  v24 = *(void **)((char *)v17 + OBJC_IVAR____TtC8Business13IMBBubbleView_image);
  *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC8Business13IMBBubbleView_image) = 0;

  sub_1000AA424();
  return v17;
}

_BYTE *sub_10003FE68(char *a1, id *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  unsigned int v19;
  char **v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  BOOL v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  _BYTE *v59;
  char v60;
  objc_class *v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  char *v71;
  char *v72;
  id v73;
  id v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  _BYTE *result;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  id v95;
  id v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  id v139;
  char v140;
  id v141;
  void *v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  char v154;
  char v155;
  id v156;
  _BYTE *v157;
  void *v158;
  uint64_t v159;
  _QWORD *v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  id v177;
  uint64_t v178;
  id v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  uint64_t v198;
  uint64_t KeyPath;
  uint64_t v200;
  objc_class *v201;
  _QWORD *v202;
  uint64_t v203;
  id v204;
  _QWORD *v205;
  __n128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  uint64_t v214;
  uint64_t v215;
  id v216;
  void *v217;
  uint64_t v218;
  _QWORD *v219;
  _BYTE *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  id v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t *v229;
  uint64_t v230;
  void *v231;
  id v232;
  void *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  void *v239;
  uint64_t v240;
  NSString v241;
  id v242;
  uint64_t v243;
  void *v244;
  id v245;
  uint64_t v246;
  void *v247;
  id v248;
  id v249;
  NSString v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  id v256;
  uint64_t v257;
  uint64_t v258;
  id v259;
  char v260;
  id v261;
  uint64_t v262;
  uint64_t v263;
  void *v264;
  void *v265;
  id v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  id v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  _QWORD *v276;
  id v277;
  id *v278;
  unsigned int v279;
  void *v280;
  objc_super v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  _UNKNOWN **v285;
  _BYTE v286[40];
  _QWORD v287[5];
  uint64_t v288;
  char v289[8];

  v276 = a3;
  v278 = a2;
  v4 = type metadata accessor for BIAPayload(0);
  __chkstk_darwin(v4, v5);
  v275 = (id *)((char *)&v270 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007D40(&qword_1000ED6C0);
  __chkstk_darwin(v7, v8);
  v274 = (uint64_t)&v270 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URLHelper(0);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v270 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v270 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)&a1[OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage];
  v19 = objc_msgSend(v18, "isFromMe");
  v20 = &selRef_replyMessage;
  if (!v19)
    v20 = &selRef_receivedMessage;
  v21 = objc_msgSend(v18, *v20);
  v22 = v21;
  if (v21)
    v23 = objc_msgSend(v21, "style");
  else
    v23 = BCBubbleViewStyleIcon;
  v24 = v23;
  v25 = objc_msgSend(v18, "isVersionSupported");
  if (!(_DWORD)v25)
  {
    if (qword_1000EBCB8 != -1)
      v25 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v54 = qword_1000F8A90;
    v55 = static os_log_type_t.error.getter(v25);
    v56 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v57 = swift_allocObject(v56, 72, 7);
    *(_OWORD *)(v57 + 16) = xmmword_1000AF070;
    *(_QWORD *)(v57 + 56) = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
    *(_QWORD *)(v57 + 64) = sub_100041FE0();
    *(_QWORD *)(v57 + 32) = v18;
    v58 = v18;
    os_log(_:dso:log:type:_:)("IMBTranscriptMessageViewController: Payload version not supported: %@, created unsupported message bubble", 105, 2, &_mh_execute_header, v54, v55, v57);
    swift_bridgeObjectRelease(v57);
    v59 = sub_10003FCA4((uint64_t)v58, v19, v24);

    goto LABEL_28;
  }
  v279 = v19;
  v26 = objc_msgSend(v18, "rootKey");
  v272 = v13;
  if (!v26)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v28 = v27;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
  }
  v270 = a1;
  v271 = v10;
  v280 = v24;
  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v29 = qword_1000F8A90;
  v30 = static os_log_type_t.debug.getter();
  v273 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v31 = swift_allocObject(v273, 192, 7);
  *(_OWORD *)(v31 + 16) = xmmword_1000B00F0;
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v277 = v26;
  v34 = v33;
  *(_QWORD *)(v31 + 56) = &type metadata for String;
  v35 = sub_100009084();
  v36 = v35;
  *(_QWORD *)(v31 + 32) = v32;
  *(_QWORD *)(v31 + 40) = v34;
  v37 = v277;
  v38 = v279 == 0;
  v39 = 0x6E65697069636572;
  if (v279)
    v39 = 0x7265646E6573;
  v40 = 0xE900000000000074;
  *(_QWORD *)(v31 + 96) = &type metadata for String;
  *(_QWORD *)(v31 + 104) = v35;
  if (!v38)
    v40 = 0xE600000000000000;
  *(_QWORD *)(v31 + 64) = v35;
  *(_QWORD *)(v31 + 72) = v39;
  *(_QWORD *)(v31 + 80) = v40;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v280);
  *(_QWORD *)(v31 + 136) = &type metadata for String;
  *(_QWORD *)(v31 + 144) = v36;
  *(_QWORD *)(v31 + 112) = v41;
  *(_QWORD *)(v31 + 120) = v42;
  v282 = (uint64_t)v22;
  v43 = v22;
  v44 = sub_100007D40(&qword_1000ED5A0);
  v45 = String.init<A>(describing:)(&v282, v44);
  *(_QWORD *)(v31 + 176) = &type metadata for String;
  *(_QWORD *)(v31 + 184) = v36;
  v46 = v36;
  *(_QWORD *)(v31 + 152) = v45;
  *(_QWORD *)(v31 + 160) = v47;
  os_log(_:dso:log:type:_:)("IMBTranscriptMessageViewController: Creating bubbleView for message with rootKey: %@, type: %@, style: %@ messageInfo: %@", 121, 2, &_mh_execute_header, v29, v30, v31);
  swift_bridgeObjectRelease(v31);
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootPaymentKey);
  v50 = v49;
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v53 = v51;
  if (v48 == v52 && v50 == v51)
  {
    swift_bridgeObjectRelease_n(v50, 2);
    goto LABEL_22;
  }
  v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v50, v52, v51, 0);
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v53);
  if ((v60 & 1) != 0)
  {
LABEL_22:
    v22 = v43;
    v61 = (objc_class *)type metadata accessor for HttpClientFactory();
    v62 = objc_msgSend(objc_allocWithZone(v61), "init");
    v285 = &off_1000D78D8;
    v284 = (uint64_t)v61;
    v282 = (uint64_t)v62;
    v63 = (char *)objc_allocWithZone((Class)type metadata accessor for IMBApplePayManager());
    v64 = sub_100031BA4((uint64_t)&v282, v284);
    __chkstk_darwin(v64, v64);
    v66 = (uint64_t *)((char *)&v270 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v67 + 16))(v66);
    v68 = *v66;
    v69 = v18;
    v70 = v62;
    v71 = sub_10003E994(v68, v69, v63);
    sub_100010C40(&v282);

    v72 = &v71[OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate];
    swift_beginAccess(&v71[OBJC_IVAR____TtC8Business18IMBApplePayManager_delegate], &v282, 1, 0);
    swift_unknownObjectWeakAssign(v72, v278);
    v73 = objc_allocWithZone((Class)type metadata accessor for ApplePayBubbleView());
    v74 = v69;
    v75 = v280;
    v76 = v71;
    v59 = sub_10005DF3C(v279, v75, v74, v76);
    v77 = *(_QWORD *)(*(_QWORD *)&v59[OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayManager]
                    + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
    if (v77)
    {
      v78 = v77 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl;
      swift_beginAccess(v77 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl, &v288, 0, 0);
      sub_100010BA4(v78, (uint64_t)v17, (uint64_t *)&unk_1000ED480);
      v79 = type metadata accessor for URL(0);
      v80 = (_QWORD *)&unk_1000F8000;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v17, 1, v79) != 1)
      {
        v81 = sub_100010A98((uint64_t)v17, (uint64_t *)&unk_1000ED480);
        v59[OBJC_IVAR____TtC8Business13IMBBubbleView_useAlternateTapTarget] = 1;
LABEL_27:
        v83 = v80[338];
        v84 = static os_log_type_t.default.getter(v81);
        v85 = swift_allocObject(v273, 72, 7);
        *(_OWORD *)(v85 + 16) = xmmword_1000AF070;
        *(_QWORD *)(v85 + 56) = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
        *(_QWORD *)(v85 + 64) = sub_100041FE0();
        *(_QWORD *)(v85 + 32) = v74;
        v86 = v74;
        os_log(_:dso:log:type:_:)("IMBTranscriptMessageViewController: ApplePay bubble created for message: %@", 75, 2, &_mh_execute_header, v83, v84, v85);
        swift_bridgeObjectRelease(v85);

LABEL_28:
        return v59;
      }
    }
    else
    {
      v82 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v17, 1, 1, v82);
      v80 = &unk_1000F8000;
    }
    v81 = sub_100010A98((uint64_t)v17, (uint64_t *)&unk_1000ED480);
    goto LABEL_27;
  }
  v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootAuthenticateKey);
  v90 = v89;
  v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v93 = v91;
  if (v88 == v92 && v90 == v91)
  {
    swift_bridgeObjectRelease_n(v90, 2);
LABEL_34:
    v95 = objc_allocWithZone((Class)type metadata accessor for IMBAuthenticationBubbleView());
    v96 = v18;
    v97 = v280;
    v59 = sub_1000935BC(v279, v97, v96);
    v98 = qword_1000F8A90;
    v99 = static os_log_type_t.default.getter(v59);
    v100 = swift_allocObject(v273, 72, 7);
    *(_OWORD *)(v100 + 16) = xmmword_1000AF070;
    *(_QWORD *)(v100 + 56) = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
    *(_QWORD *)(v100 + 64) = sub_100041FE0();
    *(_QWORD *)(v100 + 32) = v96;
    v101 = v96;
    os_log(_:dso:log:type:_:)("IMBTranscriptMessageViewController: auth bubble created for message: %@", 71, 2, &_mh_execute_header, v98, v99, v100, v270);
LABEL_35:
    swift_bridgeObjectRelease(v100);
LABEL_36:

    return v59;
  }
  v94 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v90, v92, v91, 0);
  swift_bridgeObjectRelease(v90);
  swift_bridgeObjectRelease(v93);
  if ((v94 & 1) != 0)
    goto LABEL_34;
  v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootInternalAuthenticateKey);
  v104 = v103;
  v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v107 = v105;
  if (v102 == v106 && v104 == v105)
  {
    swift_bridgeObjectRelease_n(v104, 2);
LABEL_41:
    v109 = objc_allocWithZone((Class)type metadata accessor for IMBInternalAuthenticationBubbleView());
    v110 = v18;
    v97 = v280;
    v59 = sub_100006338(v279, v97, v110);
    v111 = qword_1000F8A90;
    v112 = static os_log_type_t.default.getter(v59);
    v100 = swift_allocObject(v273, 72, 7);
    *(_OWORD *)(v100 + 16) = xmmword_1000AF070;
    *(_QWORD *)(v100 + 56) = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
    *(_QWORD *)(v100 + 64) = sub_100041FE0();
    *(_QWORD *)(v100 + 32) = v110;
    v113 = v110;
    os_log(_:dso:log:type:_:)("IMBTranscriptMessageViewController: internal auth bubble created for message: %@", 80, 2, &_mh_execute_header, v111, v112, v100, v270);
    goto LABEL_35;
  }
  v108 = _stringCompareWithSmolCheck(_:_:expecting:)(v102, v104, v106, v105, 0);
  swift_bridgeObjectRelease(v104);
  swift_bridgeObjectRelease(v107);
  if ((v108 & 1) != 0)
    goto LABEL_41;
  v114 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootErrorKey);
  v116 = v115;
  v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v119 = v117;
  if (v114 == v118 && v116 == v117)
    goto LABEL_47;
  v120 = _stringCompareWithSmolCheck(_:_:expecting:)(v114, v116, v118, v117, 0);
  swift_bridgeObjectRelease(v116);
  v121 = swift_bridgeObjectRelease(v119);
  if ((v120 & 1) != 0)
  {
LABEL_48:
    v127 = qword_1000F8A90;
    v128 = static os_log_type_t.error.getter(v121);
    v129 = swift_allocObject(v273, 72, 7);
    *(_OWORD *)(v129 + 16) = xmmword_1000AF070;
    *(_QWORD *)(v129 + 56) = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
    *(_QWORD *)(v129 + 64) = sub_100041FE0();
    *(_QWORD *)(v129 + 32) = v18;
    v130 = v18;
    os_log(_:dso:log:type:_:)("IMBTranscriptMessageViewController: Message rootkey was missing or invalid in message: %@, created error bubble", 111, 2, &_mh_execute_header, v127, v128, v129);
    swift_bridgeObjectRelease(v129);
    v97 = v280;
    v59 = sub_10003FCA4((uint64_t)v130, v279, v280);
    goto LABEL_36;
  }
  v122 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootUnknownKey);
  v116 = v123;
  v125 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v126 = v124;
  if (v122 == v125 && v116 == v124)
  {
LABEL_47:
    v121 = swift_bridgeObjectRelease_n(v116, 2);
    goto LABEL_48;
  }
  v131 = _stringCompareWithSmolCheck(_:_:expecting:)(v122, v116, v125, v124, 0);
  swift_bridgeObjectRelease(v116);
  v121 = swift_bridgeObjectRelease(v126);
  if ((v131 & 1) != 0)
    goto LABEL_48;
  v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootQuickReplyKey);
  v134 = v133;
  v136 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v137 = v135;
  if (v132 == v136 && v134 == v135)
  {
    swift_bridgeObjectRelease_n(v134, 2);
LABEL_54:
    v139 = v18;
    v140 = objc_msgSend(v139, "isFromMe");
    v141 = objc_msgSend(v139, "messageData");
    v142 = v141;
    if (v141)
    {
      v143 = objc_msgSend(v141, "jsonDictionary");

      if (v143)
      {
        v142 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v143, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

      }
      else
      {
        v142 = 0;
      }
    }
    v150 = sub_100097310(v140, (uint64_t)v142);
    v152 = v151;
    v154 = v153;

    if (v150)
    {
      v155 = v154 & 1;
      if ((objc_msgSend(v139, "isFromMe") & 1) != 0)
      {
        v156 = objc_allocWithZone((Class)type metadata accessor for QuickReplyFromMeBubbleView());
        v157 = sub_10007B2A0((uint64_t)v150, v152, v155);
      }
      else
      {
        v178 = swift_allocObject(&unk_1000D7EB8, 24, 7);
        v179 = v270;
        *(_QWORD *)(v178 + 16) = v270;
        objc_allocWithZone((Class)type metadata accessor for QuickReplyToMeBubbleView());
        v180 = v179;
        v157 = sub_100010C60((uint64_t)v150, v152, v155, (uint64_t)sub_1000420D8, v178);
      }
      v59 = v157;
      v181 = v273;
      v182 = qword_1000F8A90;
      v183 = static os_log_type_t.default.getter(v157);
      v184 = swift_allocObject(v181, 72, 7);
      *(_OWORD *)(v184 + 16) = xmmword_1000AF070;
      *(_QWORD *)(v184 + 56) = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
      *(_QWORD *)(v184 + 64) = sub_100041FE0();
      *(_QWORD *)(v184 + 32) = v139;
      v185 = v139;
      os_log(_:dso:log:type:_:)("IMBTranscriptMessageViewController: quick reply bubble created for message: %@", 78, 2, &_mh_execute_header, v182, v183, v184);
      swift_bridgeObjectRelease(v184);

    }
    else
    {
      v158 = v280;
      v159 = (uint64_t)v272;
      sub_10004EA08((uint64_t)v272);
      v284 = v271;
      v285 = &off_1000D8BD0;
      v160 = sub_100030FF8(&v282);
      sub_100020D60(v159, (uint64_t)v160);
      v161 = objc_allocWithZone((Class)type metadata accessor for IMBBubbleView());
      v162 = sub_100031BA4((uint64_t)&v282, v284);
      __chkstk_darwin(v162, v162);
      v164 = (char *)&v270 - ((v163 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v165 + 16))(v164);
      v59 = sub_10003F6C0(v279, v158, (uint64_t)v164, v161);

      sub_100010C40(&v282);
      sub_100020DA4(v159);
      v166 = objc_msgSend((id)objc_opt_self(BCMessage), "defaultBubbleTitleFor:", v139);
      v167 = static String._unconditionallyBridgeFromObjectiveC(_:)(v166);
      v169 = v168;

      v170 = (uint64_t *)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_title];
      v171 = *(_QWORD *)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_title + 8];
      *v170 = v167;
      v170[1] = v169;
      swift_bridgeObjectRelease(v171);
      sub_1000AA190();
      objc_msgSend(v59, "setUserInteractionEnabled:", 0);
      v172 = *(void **)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_image];
      *(_QWORD *)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_image] = 0;

      sub_1000AA424();
      v173 = qword_1000F8A90;
      v175 = static os_log_type_t.error.getter(v174);
      v176 = swift_allocObject(v273, 72, 7);
      *(_OWORD *)(v176 + 16) = xmmword_1000AF070;
      *(_QWORD *)(v176 + 56) = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
      *(_QWORD *)(v176 + 64) = sub_100041FE0();
      *(_QWORD *)(v176 + 32) = v139;
      v177 = v139;
      os_log(_:dso:log:type:_:)("IMBTranscriptMessageViewController: Failed to construct model from message: %@, created error bubble", 100, 2, &_mh_execute_header, v173, v175, v176);
      swift_bridgeObjectRelease(v176);

    }
    return v59;
  }
  v138 = _stringCompareWithSmolCheck(_:_:expecting:)(v132, v134, v136, v135, 0);
  swift_bridgeObjectRelease(v134);
  swift_bridgeObjectRelease(v137);
  if ((v138 & 1) != 0)
    goto LABEL_54;
  v144 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootNotificationKey);
  v146 = v145;
  v148 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v149 = v147;
  if (v144 == v148 && v146 == v147)
  {
    swift_bridgeObjectRelease_n(v146, 2);
  }
  else
  {
    v186 = _stringCompareWithSmolCheck(_:_:expecting:)(v144, v146, v148, v147, 0);
    swift_bridgeObjectRelease(v146);
    swift_bridgeObjectRelease(v149);
    if ((v186 & 1) == 0)
    {
      v207 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootJITAppKitKey);
      v209 = v208;
      v211 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v212 = v210;
      if (v207 == v211 && v209 == v210)
      {
        swift_bridgeObjectRelease_n(v209, 2);
      }
      else
      {
        v260 = _stringCompareWithSmolCheck(_:_:expecting:)(v207, v209, v211, v210, 0);
        swift_bridgeObjectRelease(v209);
        swift_bridgeObjectRelease(v212);
        if ((v260 & 1) == 0)
          goto LABEL_78;
      }
      v261 = sub_10005FDA0(v18);
      v263 = v262;
      v265 = v264;
      v266 = objc_allocWithZone((Class)type metadata accessor for IMBJITAppKitBubbleView());
      v59 = sub_100084EFC(v279, v280, v261, v263, v265);

      return v59;
    }
  }
  v187 = v276[3];
  v188 = v276[4];
  sub_100008FA4(v276, v187);
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v188 + 8))(1, v187, v188) & 1) == 0)
  {
LABEL_78:
    v217 = v280;
    v218 = (uint64_t)v272;
    sub_10004EA08((uint64_t)v272);
    v284 = v271;
    v285 = &off_1000D8BD0;
    v219 = sub_100030FF8(&v282);
    sub_100020D60(v218, (uint64_t)v219);
    v220 = objc_allocWithZone((Class)type metadata accessor for IMBBubbleView());
    v221 = sub_100031BA4((uint64_t)&v282, v284);
    v278 = &v270;
    __chkstk_darwin(v221, v221);
    v223 = (char *)&v270 - ((v222 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v224 + 16))(v223);
    v59 = sub_10003F6C0(v279, v217, (uint64_t)v223, v220);
    v280 = v217;

    sub_100010C40(&v282);
    sub_100020DA4(v218);
    if (!v22
      || (v225 = objc_msgSend(v43, "alternateTitle")) == 0
      && (v225 = objc_msgSend(v43, "title")) == 0)
    {
      v225 = objc_msgSend((id)objc_opt_self(BCMessage), "defaultBubbleTitleFor:", v18);
    }
    v226 = static String._unconditionallyBridgeFromObjectiveC(_:)(v225);
    v228 = v227;

    v229 = (uint64_t *)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_title];
    v230 = *(_QWORD *)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_title + 8];
    *v229 = v226;
    v229[1] = v228;
    swift_bridgeObjectRelease(v230);
    sub_1000AA190();
    if (v22)
    {
      v231 = v43;
      v232 = objc_msgSend(v43, "subtitle");
      if (v232)
      {
        v233 = v232;
        v234 = static String._unconditionallyBridgeFromObjectiveC(_:)(v232);
        v236 = v235;

LABEL_87:
        v237 = (uint64_t *)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitle];
        v238 = *(_QWORD *)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitle + 8];
        *v237 = v234;
        v237[1] = v236;
        swift_bridgeObjectRelease(v238);
        v239 = *(void **)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitleLabel];
        v240 = v237[1];
        if (v240)
        {
          swift_bridgeObjectRetain(v237[1]);
          v241 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v240);
        }
        else
        {
          v241 = 0;
        }
        objc_msgSend(v239, "setText:", v241, v270);

        if (v22)
          v242 = objc_msgSend(v231, "image");
        else
          v242 = 0;
        v243 = OBJC_IVAR____TtC8Business13IMBBubbleView_image;
        v244 = *(void **)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_image];
        *(_QWORD *)&v59[OBJC_IVAR____TtC8Business13IMBBubbleView_image] = v242;
        v245 = v242;

        sub_1000AA424();
        v247 = *(void **)&v59[v243];
        if (v247)
        {
          v248 = v247;
          if (v22)
          {
            v249 = objc_msgSend(v231, "imageDescription");
            v250 = v249;
            if (v249)
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)(v249);
              v252 = v251;

              v250 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v252);
            }
          }
          else
          {
            v250 = 0;
          }
          objc_msgSend(v248, "setAccessibilityLabel:", v250);

        }
        v253 = qword_1000F8A90;
        v254 = static os_log_type_t.error.getter(v246);
        v255 = swift_allocObject(v273, 112, 7);
        *(_OWORD *)(v255 + 16) = xmmword_1000ADFC0;
        v256 = v277;
        v257 = static String._unconditionallyBridgeFromObjectiveC(_:)(v277);
        *(_QWORD *)(v255 + 56) = &type metadata for String;
        *(_QWORD *)(v255 + 64) = v46;
        *(_QWORD *)(v255 + 32) = v257;
        *(_QWORD *)(v255 + 40) = v258;
        *(_QWORD *)(v255 + 96) = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
        *(_QWORD *)(v255 + 104) = sub_100041FE0();
        *(_QWORD *)(v255 + 72) = v18;
        v259 = v18;
        os_log(_:dso:log:type:_:)("IMBTranscriptMessageViewController: Unhandled rootkey: %@ in message: %@, created default bubble", 96, 2, &_mh_execute_header, v253, v254, v255);
        swift_bridgeObjectRelease(v255);

        return v59;
      }
    }
    else
    {
      v231 = v43;
    }
    v234 = 0;
    v236 = 0;
    goto LABEL_87;
  }
  v278 = (id *)v43;
  if (objc_msgSend(v18, "isFromMe"))
  {
    v189 = type metadata accessor for BIAReplyPayload();
    swift_allocObject(v189, 72, 7);
    v190 = sub_100023020(v18);
    v191 = *(_QWORD *)(v190 + 24);
    v192 = *(_BYTE *)(v190 + 32);
    v194 = *(_QWORD *)(v190 + 40);
    v193 = *(_QWORD *)(v190 + 48);
    v196 = *(_QWORD *)(v190 + 56);
    v195 = *(_QWORD *)(v190 + 64);
    swift_bridgeObjectRetain(v195);
    swift_bridgeObjectRetain(v191);
    swift_bridgeObjectRetain(v193);
    swift_release(v190);
    v287[3] = type metadata accessor for PluginBubbleContext();
    v287[4] = &off_1000D6B68;
    v287[0] = v270;
    v197 = v270;
    swift_bridgeObjectRetain(v193);
    swift_bridgeObjectRetain(v195);
    v198 = sub_10002D168(v192, v194, v193, v196, v195);
    KeyPath = swift_getKeyPath(&unk_1000B06D0);
    sub_10003D1A8((uint64_t)v287, (uint64_t)v286);
    sub_100010BA4((uint64_t)v286, (uint64_t)&v283, &qword_1000ED6D0);
    v282 = KeyPath;
    sub_100010BA4((uint64_t)&v282, (uint64_t)v289, &qword_1000ED6D8);
    v288 = v198;
    swift_retain(v198);
    sub_100010A98((uint64_t)&v282, &qword_1000ED6D8);
    sub_100010A98((uint64_t)v286, &qword_1000ED6D0);
    swift_bridgeObjectRelease(v195);
    swift_bridgeObjectRelease(v193);
    swift_bridgeObjectRelease(v191);
    swift_release(v198);
    sub_100010C40(v287);
    if (qword_1000EBC08 != -1)
      swift_once(&qword_1000EBC08, sub_10002D6C0);
    v200 = Color.init(_:)((id)qword_1000F8988);
    v201 = (objc_class *)sub_100007D40(&qword_1000ED6E0);
    v202 = objc_allocWithZone(v201);
    v203 = (uint64_t)v202 + *(_QWORD *)((swift_isaMask & *v202) + 0x60);
    sub_100010BA4((uint64_t)&v288, v203, &qword_1000ED6E8);
    *(_QWORD *)(v203 + 56) = v200;
    sub_100010BA4(v203, (uint64_t)&v282, &qword_1000ED6F0);
    v204 = objc_allocWithZone((Class)sub_100007D40(&qword_1000ED6F8));
    v205 = v202;
    v206 = swift_retain(v200);
    *(_QWORD *)((char *)v205 + *(_QWORD *)((swift_isaMask & *v205) + 0x68)) = UIHostingController.init(rootView:)(&v282, v206);

    v281.receiver = v205;
    v281.super_class = v201;
    v59 = objc_msgSendSuper2(&v281, "initWithNibName:bundle:", 0, 0);
    swift_release(v200);
    sub_100010A98((uint64_t)&v288, &qword_1000ED6E8);
    goto LABEL_102;
  }
  v59 = sub_10003F460((uint64_t)v270);
  result = objc_msgSend(v59, "view");
  if (result)
  {
    v213 = result;
    v214 = type metadata accessor for BIABubbleView(0);
    v215 = swift_dynamicCastClassUnconditional(v213, v214, 0, 0, 0);
    v216 = v18;
    sub_1000188B0(v216, (uint64_t)v275);
    sub_100059180(v275, v274);
    v267 = type metadata accessor for BIABubbleViewModel(0);
    v268 = v274;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v267 - 8) + 56))(v274, 0, 1, v267);
    v269 = v215 + OBJC_IVAR____TtC8Business13BIABubbleView_viewModel;
    swift_beginAccess(v215 + OBJC_IVAR____TtC8Business13BIABubbleView_viewModel, &v282, 33, 0);
    sub_100042050(v268, v269);
    swift_endAccess(&v282);
    sub_10005ABC4();
    sub_100010A98(v268, &qword_1000ED6C0);

LABEL_102:
    return v59;
  }
  __break(1u);
  return result;
}

void *sub_1000419CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *result;
  void *v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_pluginBubbleContext);
  v2 = OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage;
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage), "rootKey"));
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7 = *(void **)(v1 + v2);
  LOBYTE(v1) = objc_msgSend(v7, "isFromMe");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCLoggingEventNameOpen);
  v10 = v9;
  sub_100085D10(v4, v6, v1, v8, v9, (uint64_t)objc_msgSend(v7, "version"));
  swift_bridgeObjectRelease(v6);
  v11 = swift_bridgeObjectRelease(v10);
  if (qword_1000EBCB8 != -1)
    v11 = swift_once(&qword_1000EBCB8, sub_100082798);
  v12 = qword_1000F8A90;
  v13 = static os_log_type_t.default.getter(v11);
  os_log(_:dso:log:type:_:)("Bubble open logged in aggregate", 31, 2, &_mh_execute_header, v12, v13, _swiftEmptyArrayStorage);
  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_messagesAppProxy);
  if (result)
  {
    v15 = result;
    objc_msgSend(result, "requestPresentationStyle:", sub_10003D72C());
    return (void *)swift_unknownObjectRelease(v15);
  }
  return result;
}

void *sub_100041B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v1 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v1, v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_pluginBubbleContext)+ OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage), "rootObject");
  if (!v10)
    return sub_1000419CC();
  v11 = v10;
  v12 = type metadata accessor for IMBPaymentRequest(0);
  v13 = swift_dynamicCastClass(v11, v12);
  if (!v13)
  {
    swift_unknownObjectRelease(v11);
    return sub_1000419CC();
  }
  v14 = v13 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl;
  swift_beginAccess(v13 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_productUrl, v17, 0, 0);
  sub_100010BA4(v14, (uint64_t)v4, (uint64_t *)&unk_1000ED480);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    swift_unknownObjectRelease(v11);
    sub_100010A98((uint64_t)v4, (uint64_t *)&unk_1000ED480);
    return sub_1000419CC();
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  sub_100008FA4((_QWORD *)(v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_urlHelper), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_urlHelper + 24));
  sub_10004E4AC((uint64_t)v9, 0, 0, 0);
  swift_unknownObjectRelease(v11);
  return (void *)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100041D28()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000090C8(0, (unint64_t *)&qword_1000EBD00, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = swift_allocObject(&unk_1000D7E68, 24, 7);
  *(_QWORD *)(v13 + 16) = v0;
  aBlock[4] = sub_100041F24;
  v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100025AB0;
  aBlock[3] = &unk_1000D7E80;
  v14 = _Block_copy(aBlock);
  v15 = v23;
  v16 = v1;
  v17 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100041F44();
  v19 = sub_100007D40((uint64_t *)&unk_1000EEBA0);
  v20 = sub_100041F8C();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v2, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_100041F00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100041F24()
{
  uint64_t v0;

  sub_10003E5BC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100041F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100041F3C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100041F44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ED6B0;
  if (!qword_1000ED6B0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1000ED6B0);
  }
  return result;
}

unint64_t sub_100041F8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ED6B8;
  if (!qword_1000ED6B8)
  {
    v1 = sub_100007DCC((uint64_t *)&unk_1000EEBA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000ED6B8);
  }
  return result;
}

unint64_t sub_100041FE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EF130;
  if (!qword_1000EF130)
  {
    v1 = sub_1000090C8(255, &qword_1000EBE68, BCMessage_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000EF130);
  }
  return result;
}

uint64_t sub_100042038(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_100042050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000ED6C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100042098()
{
  unint64_t v0;

  v0 = sub_1000420E4();
  return EnvironmentValues.subscript.getter(&type metadata for BubbleContextKey, &type metadata for BubbleContextKey, v0);
}

uint64_t sub_1000420D8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10003D6A8(a1, a2, a3 & 1, a4, *(void **)(v4 + 16));
}

unint64_t sub_1000420E4()
{
  unint64_t result;

  result = qword_1000ED700;
  if (!qword_1000ED700)
  {
    result = swift_getWitnessTable(&unk_1000B2564, &type metadata for BubbleContextKey);
    atomic_store(result, (unint64_t *)&qword_1000ED700);
  }
  return result;
}

uint64_t sub_100042128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLHelper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1000422B0()
{
  char *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  NSString v6;
  id v7;
  Swift::String v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business27IMBAuthenticationHeaderView_messageLabel];
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001000B76A0;
  v3._countAndFlagsBits = 0xD00000000000001DLL;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v9)._object;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v1, "setText:", v6);

  v7 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v1, "setFont:", v7);

  objc_msgSend(v1, "setNumberOfLines:", 0);
  objc_msgSend(v1, "setTextAlignment:", 1);
  return objc_msgSend(v0, "addSubview:", v1);
}

void sub_100042408()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  Class isa;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business27IMBAuthenticationHeaderView_messageLabel];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1000AF130;
  v6 = objc_msgSend(v2, "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, 8.0);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v2, "bottomAnchor");
  v10 = objc_msgSend(v1, "bottomAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, 8.0);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v2, "leadingAnchor");
  v13 = objc_msgSend(v1, "layoutMarginsGuide");
  v14 = objc_msgSend(v13, "leadingAnchor");

  v15 = objc_msgSend(v12, "constraintEqualToAnchor:", v14);
  *(_QWORD *)(v5 + 48) = v15;
  v16 = objc_msgSend(v2, "trailingAnchor");
  v17 = objc_msgSend(v1, "layoutMarginsGuide");
  v18 = objc_msgSend(v17, "trailingAnchor");

  v19 = objc_msgSend(v16, "constraintEqualToAnchor:", v18);
  *(_QWORD *)(v5 + 56) = v19;
  specialized Array._endMutation()(v20);
  sub_100011A28();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v3, "activateConstraints:", isa);

}

id sub_1000426CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBAuthenticationHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBAuthenticationHeaderView()
{
  return objc_opt_self(_TtC8Business27IMBAuthenticationHeaderView);
}

uint64_t sub_10004272C()
{
  _BYTE *v0;

  if (*v0)
    return 0x326E6F6974706FLL;
  else
    return 0x316E6F6974706FLL;
}

uint64_t sub_100042760@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100044B80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100042784(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100043288();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000427AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100043288();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000427D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1000427FC + 4 * byte_1000B0720[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1000427FC()
{
  return 0x656C676E6973;
}

uint64_t sub_100042810()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_100042828()
{
  return 0x68437972616E6962;
}

uint64_t sub_100042848@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100044C70(a1, a2);
  *a3 = result;
  return result;
}

void sub_10004286C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100042878(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100043228();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000428A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100043228();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000428C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100043430();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000428F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100043430();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100042918()
{
  _BYTE *v0;

  if (*v0)
    return 0x736E6F69746361;
  else
    return 0x6C6562616CLL;
}

uint64_t sub_100042950@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100044E28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100042974(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100043320();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10004299C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100043320();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000429CC()
{
  return 0x6E6F69746361;
}

uint64_t sub_1000429E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease(0xE600000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F69746361, 0xE600000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100042A6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000433A8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100042A94(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000433A8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void BIAUserInteractionParadigm.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  _QWORD v17[10];
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _BYTE v26[24];

  v21 = sub_100007D40(&qword_1000ED738);
  v20 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21, v2);
  v19 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007D40(&qword_1000ED740);
  v17[8] = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v4);
  v17[7] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007D40(&qword_1000ED748);
  v17[6] = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  v8 = sub_100007D40(&qword_1000ED750);
  __chkstk_darwin(v8, v9);
  v25 = sub_100007D40(&qword_1000ED758);
  v22 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25, v10);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v13 = a1[4];
  sub_100008FA4(a1, v14);
  v15 = sub_100043228();
  v24 = v12;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for BIAUserInteractionParadigm.CodingKeys, &type metadata for BIAUserInteractionParadigm.CodingKeys, v15, v14, v13);
  sub_1000190D8(v23, (uint64_t)v26);
  v16 = (char *)sub_100042CCC + 4 * byte_1000B0724[sub_10004326C((uint64_t)v26)];
  __asm { BR              X10 }
}

uint64_t sub_100042CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v3 = sub_100043310(v2 - 248);
  *(_OWORD *)(v2 - 368) = *(_OWORD *)v3;
  *(_OWORD *)(v2 - 400) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v2 - 416) = *(_OWORD *)(v3 + 32);
  v4 = *(_QWORD *)(v3 + 48);
  *(_BYTE *)(v2 - 328) = 1;
  v5 = sub_1000433A8();
  v6 = *(_QWORD *)(v2 - 336);
  v7 = *(_QWORD *)(v2 - 344);
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIAUserInteractionParadigm.SingleCodingKeys, v2 - 328, v6, &type metadata for BIAUserInteractionParadigm.SingleCodingKeys, v5);
  *(_OWORD *)(v2 - 328) = *(_OWORD *)(v2 - 368);
  *(_OWORD *)(v2 - 312) = *(_OWORD *)(v2 - 400);
  *(_OWORD *)(v2 - 296) = *(_OWORD *)(v2 - 416);
  *(_QWORD *)(v2 - 280) = v4;
  v8 = sub_1000433EC();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v2 - 328, v9, v1, &type metadata for BIAUserAction, v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 480) + 8))(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 376) + 8))(v7, v6);
}

unint64_t sub_100043228()
{
  unint64_t result;

  result = qword_1000ED760;
  if (!qword_1000ED760)
  {
    result = swift_getWitnessTable(&unk_1000B1948, &type metadata for BIAUserInteractionParadigm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED760);
  }
  return result;
}

uint64_t sub_10004326C(uint64_t a1)
{
  if (((*(_QWORD *)(a1 + 120) >> 61) & 3) == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return (*(_QWORD *)(a1 + 120) >> 61) & 3;
}

unint64_t sub_100043288()
{
  unint64_t result;

  result = qword_1000ED768;
  if (!qword_1000ED768)
  {
    result = swift_getWitnessTable(&unk_1000B18F8, &type metadata for BIAUserInteractionParadigm.BinaryChoiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED768);
  }
  return result;
}

unint64_t sub_1000432CC()
{
  unint64_t result;

  result = qword_1000ED770;
  if (!qword_1000ED770)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIABinaryChoiceButton, &type metadata for BIABinaryChoiceButton);
    atomic_store(result, (unint64_t *)&qword_1000ED770);
  }
  return result;
}

uint64_t sub_100043310(uint64_t result)
{
  *(_QWORD *)(result + 120) &= 0x9FFFFFFFFFFFFFFFLL;
  return result;
}

unint64_t sub_100043320()
{
  unint64_t result;

  result = qword_1000ED778;
  if (!qword_1000ED778)
  {
    result = swift_getWitnessTable(&unk_1000B18A8, &type metadata for BIAUserInteractionParadigm.OptionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED778);
  }
  return result;
}

unint64_t sub_100043364()
{
  unint64_t result;

  result = qword_1000ED790;
  if (!qword_1000ED790)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIALabeledUserAction, &type metadata for BIALabeledUserAction);
    atomic_store(result, (unint64_t *)&qword_1000ED790);
  }
  return result;
}

unint64_t sub_1000433A8()
{
  unint64_t result;

  result = qword_1000ED798;
  if (!qword_1000ED798)
  {
    result = swift_getWitnessTable(&unk_1000B1858, &type metadata for BIAUserInteractionParadigm.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED798);
  }
  return result;
}

unint64_t sub_1000433EC()
{
  unint64_t result;

  result = qword_1000ED7A0;
  if (!qword_1000ED7A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIAUserAction, &type metadata for BIAUserAction);
    atomic_store(result, (unint64_t *)&qword_1000ED7A0);
  }
  return result;
}

unint64_t sub_100043430()
{
  unint64_t result;

  result = qword_1000ED7A8;
  if (!qword_1000ED7A8)
  {
    result = swift_getWitnessTable(&unk_1000B1808, &type metadata for BIAUserInteractionParadigm.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED7A8);
  }
  return result;
}

uint64_t BIAUserInteractionParadigm.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v5[160];

  result = sub_100044F10(a1, (uint64_t)v5);
  if (!v2)
    return sub_1000190D8((uint64_t)v5, a2);
  return result;
}

void sub_1000434B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1000190D8(v1, (uint64_t)&v3);
  BIAUserInteractionParadigm.encode(to:)(a1);
}

Swift::Int sub_100043504()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x65756C6176, 0xE500000000000000);
  return Hasher._finalize()();
}

uint64_t sub_100043550(uint64_t a1)
{
  return String.hash(into:)(a1, 0x65756C6176, 0xE500000000000000);
}

Swift::Int sub_100043564()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x65756C6176, 0xE500000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1000435AC@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D5F60, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1000435FC(_QWORD *a1@<X8>)
{
  *a1 = 0x65756C6176;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_100043614()
{
  return 0x65756C6176;
}

uint64_t sub_100043628@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D5F98, v3);
  result = swift_bridgeObjectRelease(object);
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_10004367C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045994();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000436A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045994();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BIAUserAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[3];

  result = sub_100045758(a1, (uint64_t *)v5);
  if (!v2)
    return sub_100045930(v5, a2);
  return result;
}

uint64_t sub_100043710()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 7107189;
}

uint64_t sub_100043748@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100045B2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10004376C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045950();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100043794(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045950();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000437BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease(0xE500000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65756C6176, 0xE500000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100043848(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045A1C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100043870(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045A1C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BIAUserAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[2];
  char v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v2 = sub_100007D40(&qword_1000ED7B0);
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007D40(&qword_1000ED7B8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007D40(&qword_1000ED7C0);
  v35 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  sub_100008FA4(a1, v15);
  v17 = sub_100045950();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for BIAUserAction.CodingKeys, &type metadata for BIAUserAction.CodingKeys, v17, v15, v16);
  sub_100045930((__int128 *)v34, (uint64_t)&v41);
  v18 = v43;
  if (v43 < 0)
  {
    v43 &= ~0x8000000000000000;
    v23 = v41;
    v24 = v42;
    v34 = v44;
    v25 = v45;
    v26 = v46;
    LOBYTE(v36[0]) = 1;
    v27 = sub_100045994();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIAUserAction.DeterminateResponseCodingKeys, v36, v11, &type metadata for BIAUserAction.DeterminateResponseCodingKeys, v27);
    v36[0] = v23;
    v36[1] = v24;
    v37 = v18 & 1;
    v38 = v34;
    v39 = v25;
    v40 = v26;
    v28 = sub_1000459D8();
    v29 = v33;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v36, v30, v33, &type metadata for BIADeterminateResponse, v28);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v29);
  }
  else
  {
    v19 = v41;
    v20 = v42;
    LOBYTE(v36[0]) = 0;
    v21 = sub_100045A1C();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIAUserAction.UrlCodingKeys, v36, v11, &type metadata for BIAUserAction.UrlCodingKeys, v21);
    KeyedEncodingContainer.encode(_:forKey:)(v19, v20, v22, v6);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v11);
}

uint64_t sub_100043AFC(_QWORD *a1)
{
  __int128 *v1;
  _BYTE v4[56];

  sub_100045930(v1, (uint64_t)v4);
  return BIAUserAction.encode(to:)(a1);
}

BOOL static BIADeterminateResponseType.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void BIADeterminateResponseType.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

uint64_t sub_100043B7C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045A60();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100043BA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045A60();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100043BCC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045AA4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100043BF4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045AA4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100043C1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045AE8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100043C44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045AE8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BIADeterminateResponseType.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  char v27;

  v25 = a2;
  v3 = sub_100007D40(&qword_1000ED7E8);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007D40(&qword_1000ED7F0);
  v7 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22, v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007D40(&qword_1000ED7F8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  sub_100008FA4(a1, v16);
  v18 = sub_100045A60();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for BIADeterminateResponseType.CodingKeys, &type metadata for BIADeterminateResponseType.CodingKeys, v18, v16, v17);
  if ((v25 & 1) != 0)
  {
    v27 = 1;
    v20 = sub_100045AA4();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIADeterminateResponseType.NoCodingKeys, &v27, v11, &type metadata for BIADeterminateResponseType.NoCodingKeys, v20);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  }
  else
  {
    v26 = 0;
    v19 = sub_100045AE8();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIADeterminateResponseType.YesCodingKeys, &v26, v11, &type metadata for BIADeterminateResponseType.YesCodingKeys, v19);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

Swift::Int BIADeterminateResponseType.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

uint64_t BIADeterminateResponseType.init(from:)(_QWORD *a1)
{
  return sub_100045C08(a1) & 1;
}

uint64_t sub_100043E98@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_100045C08(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_100043EC4(_QWORD *a1)
{
  unsigned __int8 *v1;

  return BIADeterminateResponseType.encode(to:)(a1, *v1);
}

uint64_t BIADeterminateResponse.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t BIADeterminateResponse.type.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BIADeterminateResponse.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t BIADeterminateResponse.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 48));
  return v1;
}

uint64_t sub_100043F68()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100043F8C + 4 * byte_1000B0728[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_100043F8C()
{
  return 1701869940;
}

uint64_t sub_100043F9C()
{
  return 0x656C746974;
}

uint64_t sub_100043FB0()
{
  return 0x656C746974627573;
}

uint64_t sub_100043FC8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100045FBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100043FEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045F34();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100044014(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100045F34();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BIADeterminateResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v3 = v1;
  v5 = sub_100007D40(&qword_1000ED818);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100008FA4(a1, v10);
  v12 = sub_100045F34();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for BIADeterminateResponse.CodingKeys, &type metadata for BIADeterminateResponse.CodingKeys, v12, v10, v11);
  v13 = *v3;
  v14 = v3[1];
  v26 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v13, v14, &v26, v5);
  if (!v2)
  {
    v25 = *((_BYTE *)v3 + 16);
    v24 = 1;
    v15 = sub_100045F78();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v25, &v24, v5, &type metadata for BIADeterminateResponseType, v15);
    v16 = v3[3];
    v17 = v3[4];
    v23 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v23, v5);
    v18 = v3[5];
    v19 = v3[6];
    v22 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v19, &v22, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

double BIADeterminateResponse.init(from:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_100046144(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_100044204(_QWORD *a1)
{
  return BIADeterminateResponse.encode(to:)(a1);
}

uint64_t BIALabeledUserAction.imageName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t *BIALabeledUserAction.action.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000463D0((uint64_t *)(v1 + 32), a1);
}

uint64_t sub_100044250()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D614E6567616D69;
  if (*v0 != 1)
    v1 = 0x6E6F69746361;
  if (*v0)
    return v1;
  else
    return 0x6C6562616CLL;
}

uint64_t sub_1000442A8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100046448(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000442CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100046404();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000442F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100046404();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BIALabeledUserAction.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  char v20;
  _BYTE v21[56];
  __int128 v22[3];

  v3 = v1;
  v5 = sub_100007D40(&qword_1000ED830);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100008FA4(a1, v10);
  v12 = sub_100046404();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for BIALabeledUserAction.CodingKeys, &type metadata for BIALabeledUserAction.CodingKeys, v12, v10, v11);
  v13 = *(_QWORD *)v3;
  v14 = *((_QWORD *)v3 + 1);
  v21[0] = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v13, v14, v21, v5);
  if (!v2)
  {
    v15 = *((_QWORD *)v3 + 2);
    v16 = *((_QWORD *)v3 + 3);
    v21[0] = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, v21, v5);
    sub_100045930(v3 + 2, (uint64_t)v22);
    sub_100045930(v22, (uint64_t)v21);
    v20 = 2;
    v17 = sub_1000433EC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v21, &v20, v5, &type metadata for BIAUserAction, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

double BIALabeledUserAction.init(from:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_100046598(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1000444D8(_QWORD *a1)
{
  return BIALabeledUserAction.encode(to:)(a1);
}

uint64_t BIABinaryChoiceRole.rawValue.getter(char a1)
{
  if (!a1)
    return 0x7972616D697270;
  if (a1 == 1)
    return 0x7261646E6F636573;
  return 0x7463757274736564;
}

uint64_t sub_100044588(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10004FD44(*a1, *a2);
}

Swift::Int sub_100044594()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE900000000000079;
  v3 = 0x7261646E6F636573;
  if (v1 != 1)
  {
    v3 = 0x7463757274736564;
    v2 = 0xEB00000000657669;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x7972616D697270;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100044640(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE900000000000079;
  v3 = 0x7261646E6F636573;
  if (*v1 != 1)
  {
    v3 = 0x7463757274736564;
    v2 = 0xEB00000000657669;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x7972616D697270;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000446C8()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE900000000000079;
  v3 = 0x7261646E6F636573;
  if (v1 != 1)
  {
    v3 = 0x7463757274736564;
    v2 = 0xEB00000000657669;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x7972616D697270;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_100044770@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8Business19BIABinaryChoiceRoleO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10004479C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE900000000000079;
  v5 = 0x7261646E6F636573;
  if (v2 != 1)
  {
    v5 = 0x7463757274736564;
    v4 = 0xEB00000000657669;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7972616D697270;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100044808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100048ABC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100044864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100048ABC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t *BIABinaryChoiceButton.action.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000463D0((uint64_t *)(v1 + 24), a1);
}

uint64_t sub_1000448BC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701605234;
  if (*v0 != 1)
    v1 = 0x6E6F69746361;
  if (*v0)
    return v1;
  else
    return 0x6C6562616CLL;
}

uint64_t sub_100044908@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10004693C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10004492C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000468B4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100044954(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000468B4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BIABinaryChoiceButton.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BYTE v19[63];
  char v20;
  __int128 v21[3];

  v3 = v1;
  v5 = sub_100007D40(&qword_1000ED840);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1[3];
  v11 = a1[4];
  sub_100008FA4(a1, v10);
  v12 = sub_1000468B4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for BIABinaryChoiceButton.CodingKeys, &type metadata for BIABinaryChoiceButton.CodingKeys, v12, v10, v11);
  v13 = *v3;
  v14 = v3[1];
  v19[0] = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v13, v14, v19, v5);
  if (!v2)
  {
    v19[0] = *((_BYTE *)v3 + 16);
    v20 = 1;
    v15 = sub_1000468F8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v19, &v20, v5, &type metadata for BIABinaryChoiceRole, v15);
    sub_100045930((__int128 *)(v3 + 3), (uint64_t)v21);
    sub_100045930(v21, (uint64_t)v19);
    v20 = 2;
    v16 = sub_1000433EC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v19, &v20, v5, &type metadata for BIAUserAction, v16);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

__n128 BIABinaryChoiceButton.init(from:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_100046A70(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100044B40(_QWORD *a1)
{
  return BIABinaryChoiceButton.encode(to:)(a1);
}

uint64_t sub_100044B80(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x316E6F6974706FLL && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x316E6F6974706FLL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x326E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x326E6F6974706FLL, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100044C70(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701736302, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C676E6973 && a2 == 0xE600000000000000)
  {
    v7 = 0xE600000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C676E6973, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    v8 = 0xE700000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x736E6F6974706FLL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x68437972616E6962 && a2 == 0xEC0000006563696FLL)
  {
    swift_bridgeObjectRelease(0xEC0000006563696FLL);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x68437972616E6962, 0xEC0000006563696FLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100044E28(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6562616CLL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x736E6F69746361 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736E6F69746361, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100044F10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[4];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;

  v39 = a2;
  v37 = sub_100007D40(&qword_1000EDA00);
  v33[3] = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37, v3);
  v43 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100007D40(&qword_1000EDA08);
  v38 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35, v5);
  v40 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007D40(&qword_1000EDA10);
  v42 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36, v7);
  v41 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007D40(&qword_1000EDA18);
  v9 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34, v10);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007D40(&qword_1000EDA20);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v18 = a1[4];
  v45 = a1;
  sub_100008FA4(a1, v19);
  v20 = sub_100043228();
  v44 = v17;
  v21 = v46;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for BIAUserInteractionParadigm.CodingKeys, &type metadata for BIAUserInteractionParadigm.CodingKeys, v20, v19, v18);
  if (!v21)
  {
    v33[1] = v9;
    v33[2] = v12;
    v46 = v14;
    v22 = v44;
    v23 = KeyedDecodingContainer.allKeys.getter(v13);
    v24 = v23;
    v25 = v13;
    if (*(_QWORD *)(v23 + 16) == 1)
      __asm { BR              X10 }
    v26 = type metadata accessor for DecodingError(0);
    swift_allocError(v26, &protocol witness table for DecodingError, 0, 0);
    v27 = v24;
    v29 = v28;
    sub_100007D40(&qword_1000ECB40);
    *v29 = &type metadata for BIAUserInteractionParadigm;
    v30 = KeyedDecodingContainer.codingPath.getter(v25);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v30, 0xD00000000000002BLL, 0x80000001000B52C0, 0);
    v31 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v29, enum case for DecodingError.typeMismatch(_:), v26);
    swift_willThrow(v31);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v25);
  }
  return sub_100010C40(v45);
}

void sub_100045360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_BYTE *)(v0 + 128) = 3;
  v7 = sub_100043288();
  v8 = v5;
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIAUserInteractionParadigm.BinaryChoiceCodingKeys, v0 + 128, v3, &type metadata for BIAUserInteractionParadigm.BinaryChoiceCodingKeys, v7);
  if (v4)
  {
    swift_bridgeObjectRelease(v2);
    JUMPOUT(0x100045330);
  }
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 96) = v3;
  *(_BYTE *)(v0 + 128) = 0;
  v9 = sub_100048C10();
  v10 = *(_QWORD *)(v0 + 56);
  KeyedDecodingContainer.decode<A>(_:forKey:)((_QWORD *)(v0 + 384), &type metadata for BIABinaryChoiceButton, v0 + 128, v10, &type metadata for BIABinaryChoiceButton, v9);
  v11 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 392);
  *(_DWORD *)(v0 + 16) = *(unsigned __int8 *)(v0 + 400);
  v13 = v8;
  v15 = *(_QWORD *)(v0 + 408);
  v14 = *(_QWORD *)(v0 + 416);
  *(_QWORD *)(v0 + 32) = v11;
  *(_QWORD *)(v0 + 40) = v14;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 424);
  v16 = *(_QWORD *)(v0 + 432);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 440);
  v17 = *(_QWORD *)(v0 + 456);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 448);
  *(_BYTE *)(v0 + 303) = 1;
  KeyedDecodingContainer.decode<A>(_:forKey:)((_QWORD *)(v0 + 304), &type metadata for BIABinaryChoiceButton, v0 + 303, v10, &type metadata for BIABinaryChoiceButton, v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 24) + 8))(v13, v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 72) + 8))(v1, *(_QWORD *)(v0 + 96));
  v18 = *(_QWORD *)(v0 + 304);
  v19 = *(_QWORD *)(v0 + 312);
  v20 = *(_BYTE *)(v0 + 320);
  v21 = *(_QWORD *)(v0 + 376);
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 136) = v12;
  *(_BYTE *)(v0 + 144) = *(_DWORD *)(v0 + 16);
  v22 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 152) = v15;
  *(_QWORD *)(v0 + 160) = v22;
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 176) = v16;
  v23 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 192) = v23;
  *(_QWORD *)(v0 + 200) = v17;
  *(_QWORD *)(v0 + 208) = v18;
  *(_QWORD *)(v0 + 216) = v19;
  *(_BYTE *)(v0 + 224) = v20;
  *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 328);
  *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 264) = *(_OWORD *)(v0 + 360);
  *(_QWORD *)(v0 + 280) = v21;
  sub_100048C54(v0 + 128);
  sub_1000190D8(v0 + 128, v6 - 256);
  JUMPOUT(0x10004568CLL);
}

uint64_t sub_100045758@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v5 = sub_100007D40(&qword_1000ED9F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100008FA4(a1, v10);
  v12 = sub_100045950();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for BIAUserAction.CodingKeys, &type metadata for BIAUserAction.CodingKeys, v12, v10, v11);
  if (v2)
    return sub_100010C40(a1);
  v37 = 1;
  v13 = sub_100048BCC();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v30, &type metadata for BIADeterminateResponse, &v37, v5, &type metadata for BIADeterminateResponse, v13);
  v15 = v31;
  if (v31)
  {
    v28 = v35;
    v29 = v33;
    v16 = v32;
    v17 = v30;
    v18 = *(void (**)(char *, uint64_t))(v6 + 8);
    v19 = v34;
    v20 = v9;
    v21 = v36;
    v18(v20, v5);
    v22 = v16 & 1 | 0x8000000000000000;
    v23 = v17;
    v24 = v28;
  }
  else
  {
    LOBYTE(v30) = 0;
    v23 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v5);
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v22 = 0;
    v29 = 0;
    v19 = 0;
    v24 = 0;
    v21 = 0;
  }
  result = sub_100010C40(a1);
  *a2 = v23;
  a2[1] = v15;
  v25 = v29;
  a2[2] = v22;
  a2[3] = v25;
  a2[4] = v19;
  a2[5] = v24;
  a2[6] = v21;
  return result;
}

uint64_t sub_100045930(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_QWORD *)(a2 + 48) = *((_QWORD *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

unint64_t sub_100045950()
{
  unint64_t result;

  result = qword_1000ED7C8;
  if (!qword_1000ED7C8)
  {
    result = swift_getWitnessTable(&unk_1000B17B8, &type metadata for BIAUserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED7C8);
  }
  return result;
}

unint64_t sub_100045994()
{
  unint64_t result;

  result = qword_1000ED7D0;
  if (!qword_1000ED7D0)
  {
    result = swift_getWitnessTable(&unk_1000B1768, &type metadata for BIAUserAction.DeterminateResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED7D0);
  }
  return result;
}

unint64_t sub_1000459D8()
{
  unint64_t result;

  result = qword_1000ED7D8;
  if (!qword_1000ED7D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIADeterminateResponse, &type metadata for BIADeterminateResponse);
    atomic_store(result, (unint64_t *)&qword_1000ED7D8);
  }
  return result;
}

unint64_t sub_100045A1C()
{
  unint64_t result;

  result = qword_1000ED7E0;
  if (!qword_1000ED7E0)
  {
    result = swift_getWitnessTable(&unk_1000B1718, &type metadata for BIAUserAction.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED7E0);
  }
  return result;
}

unint64_t sub_100045A60()
{
  unint64_t result;

  result = qword_1000ED800;
  if (!qword_1000ED800)
  {
    result = swift_getWitnessTable(&unk_1000B16C8, &type metadata for BIADeterminateResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED800);
  }
  return result;
}

unint64_t sub_100045AA4()
{
  unint64_t result;

  result = qword_1000ED808;
  if (!qword_1000ED808)
  {
    result = swift_getWitnessTable(&unk_1000B1678, &type metadata for BIADeterminateResponseType.NoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED808);
  }
  return result;
}

unint64_t sub_100045AE8()
{
  unint64_t result;

  result = qword_1000ED810;
  if (!qword_1000ED810)
  {
    result = swift_getWitnessTable(&unk_1000B1628, &type metadata for BIADeterminateResponseType.YesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED810);
  }
  return result;
}

uint64_t sub_100045B2C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    v5 = 0xE300000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7107189, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x80000001000B52F0)
  {
    swift_bridgeObjectRelease(0x80000001000B52F0);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x80000001000B52F0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100045C08(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  char v39;

  v35 = sub_100007D40(&qword_1000ED9D8);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35, v2);
  v36 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007D40(&qword_1000ED9E0);
  v4 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34, v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007D40(&qword_1000ED9E8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  sub_100008FA4(a1, v13);
  v15 = sub_100045A60();
  v16 = v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for BIADeterminateResponseType.CodingKeys, &type metadata for BIADeterminateResponseType.CodingKeys, v15, v13, v14);
  if (v16)
    goto LABEL_7;
  v17 = v7;
  v18 = v36;
  v32 = a1;
  v37 = v9;
  v19 = KeyedDecodingContainer.allKeys.getter(v8);
  v20 = v19;
  v21 = v8;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v24 = type metadata accessor for DecodingError(0);
    swift_allocError(v24, &protocol witness table for DecodingError, 0, 0);
    v25 = v12;
    v27 = v26;
    sub_100007D40(&qword_1000ECB40);
    *v27 = &type metadata for BIADeterminateResponseType;
    v28 = KeyedDecodingContainer.codingPath.getter(v8);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v28, 0xD00000000000002BLL, 0x80000001000B52C0, 0);
    v29 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v24);
    swift_willThrow(v29);
    swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v8);
    a1 = v32;
LABEL_7:
    sub_100010C40(a1);
    return v8;
  }
  v8 = *(unsigned __int8 *)(v19 + 32);
  if ((v8 & 1) != 0)
  {
    v39 = 1;
    v22 = sub_100045AA4();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIADeterminateResponseType.NoCodingKeys, &v39, v21, &type metadata for BIADeterminateResponseType.NoCodingKeys, v22);
    v23 = v37;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v35);
  }
  else
  {
    v38 = 0;
    v30 = sub_100045AE8();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for BIADeterminateResponseType.YesCodingKeys, &v38, v21, &type metadata for BIADeterminateResponseType.YesCodingKeys, v30);
    v23 = v37;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v34);
  }
  swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v21);
  sub_100010C40(v32);
  return v8;
}

unint64_t sub_100045F34()
{
  unint64_t result;

  result = qword_1000ED820;
  if (!qword_1000ED820)
  {
    result = swift_getWitnessTable(&unk_1000B15D8, &type metadata for BIADeterminateResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED820);
  }
  return result;
}

unint64_t sub_100045F78()
{
  unint64_t result;

  result = qword_1000ED828;
  if (!qword_1000ED828)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIADeterminateResponseType, &type metadata for BIADeterminateResponseType);
    atomic_store(result, (unint64_t *)&qword_1000ED828);
  }
  return result;
}

uint64_t sub_100045FBC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100046144@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;

  v5 = sub_100007D40(&qword_1000ED9C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100008FA4(a1, v10);
  v12 = sub_100045F34();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for BIADeterminateResponse.CodingKeys, &type metadata for BIADeterminateResponse.CodingKeys, v12, v10, v11);
  if (v2)
    return sub_100010C40(a1);
  BYTE1(v32) = 0;
  v13 = KeyedDecodingContainer.decode(_:forKey:)((char *)&v32 + 1, v5);
  v15 = v14;
  v31 = 1;
  v16 = sub_100048B88();
  swift_bridgeObjectRetain(v15);
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v32, &type metadata for BIADeterminateResponseType, &v31, v5, &type metadata for BIADeterminateResponseType, v16);
  v28 = v32;
  v30 = 2;
  v26 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v5);
  v27 = v17;
  v29 = 3;
  swift_bridgeObjectRetain(v17);
  v18 = KeyedDecodingContainer.decode(_:forKey:)(&v29, v5);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22 = v18;
  v21(v9, v5);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v15);
  sub_100010C40(a1);
  swift_bridgeObjectRelease(v20);
  v23 = v27;
  swift_bridgeObjectRelease(v27);
  result = swift_bridgeObjectRelease(v15);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v28;
  *(_QWORD *)(a2 + 24) = v26;
  *(_QWORD *)(a2 + 32) = v23;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 48) = v20;
  return result;
}

uint64_t *sub_1000463D0(uint64_t *a1, uint64_t *a2)
{
  initializeWithCopy for BIAUserAction(a2, a1);
  return a2;
}

unint64_t sub_100046404()
{
  unint64_t result;

  result = qword_1000ED838;
  if (!qword_1000ED838)
  {
    result = swift_getWitnessTable(&unk_1000B1588, &type metadata for BIALabeledUserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED838);
  }
  return result;
}

uint64_t sub_100046448(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6562616CLL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6D614E6567616D69 && a2 == 0xE900000000000065)
  {
    v7 = 0xE900000000000065;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D614E6567616D69, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F69746361, 0xE600000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_100046598@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[4];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v5 = sub_100007D40(&qword_1000ED9C0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100008FA4(a1, v10);
  v12 = sub_100046404();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for BIALabeledUserAction.CodingKeys, &type metadata for BIALabeledUserAction.CodingKeys, v12, v10, v11);
  if (v2)
    return sub_100010C40(a1);
  LOBYTE(v45[0]) = 0;
  v13 = KeyedDecodingContainer.decode(_:forKey:)(v45, v5);
  v15 = v14;
  v44 = v13;
  LOBYTE(v45[0]) = 1;
  swift_bridgeObjectRetain(v14);
  v16 = KeyedDecodingContainer.decode(_:forKey:)(v45, v5);
  v18 = v17;
  v42 = v16;
  v49 = 2;
  v19 = sub_100048B44();
  swift_bridgeObjectRetain(v18);
  v43 = v18;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v45, &type metadata for BIAUserAction, &v49, v5, &type metadata for BIAUserAction, v19);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v20 = v45[0];
  v21 = v45[3];
  v40 = v45[2];
  v41 = v45[1];
  v23 = v46;
  v22 = v47;
  v38 = v45[0];
  v39 = v46;
  v24 = v48;
  v36 = v48;
  v37 = v47;
  swift_bridgeObjectRetain(v15);
  v25 = v43;
  swift_bridgeObjectRetain(v43);
  v26 = v20;
  v27 = v40;
  sub_100046EDC(v26, v41, v40, v21, v23, v22, v24);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v25);
  sub_100010C40(a1);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v15);
  v29 = v38;
  v28 = v39;
  v30 = v41;
  v31 = v27;
  v32 = v36;
  v33 = v37;
  result = sub_1000192C8(v38, v41, v31, v21, v39, v37, v36);
  *a2 = v44;
  a2[1] = v15;
  v35 = v43;
  a2[2] = v42;
  a2[3] = v35;
  a2[4] = v29;
  a2[5] = v30;
  a2[6] = v40;
  a2[7] = v21;
  a2[8] = v28;
  a2[9] = v33;
  a2[10] = v32;
  return result;
}

unint64_t _s8Business19BIABinaryChoiceRoleO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D5FD0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_1000468B4()
{
  unint64_t result;

  result = qword_1000ED848;
  if (!qword_1000ED848)
  {
    result = swift_getWitnessTable(&unk_1000B1538, &type metadata for BIABinaryChoiceButton.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED848);
  }
  return result;
}

unint64_t sub_1000468F8()
{
  unint64_t result;

  result = qword_1000ED850;
  if (!qword_1000ED850)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIABinaryChoiceRole, &type metadata for BIABinaryChoiceRole);
    atomic_store(result, (unint64_t *)&qword_1000ED850);
  }
  return result;
}

uint64_t sub_10004693C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6562616CLL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1701605234 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701605234, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F69746361, 0xE600000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_100046A70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;

  v5 = sub_100007D40(&qword_1000ED9A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100008FA4(a1, v10);
  v12 = sub_1000468B4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for BIABinaryChoiceButton.CodingKeys, &type metadata for BIABinaryChoiceButton.CodingKeys, v12, v10, v11);
  if (v2)
    return sub_100010C40(a1);
  LOBYTE(v37[0]) = 0;
  v13 = KeyedDecodingContainer.decode(_:forKey:)(v37, v5);
  v15 = v14;
  v43 = 1;
  v16 = sub_100048B00();
  swift_bridgeObjectRetain(v15);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v37, &type metadata for BIABinaryChoiceRole, &v43, v5, &type metadata for BIABinaryChoiceRole, v16);
  v42 = LOBYTE(v37[0]);
  v43 = 2;
  v17 = sub_100048B44();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v37, &type metadata for BIAUserAction, &v43, v5, &type metadata for BIAUserAction, v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v18 = v37[2];
  v35 = v37[1];
  v36 = v37[0];
  v20 = v38;
  v19 = v39;
  v32 = v39;
  v22 = v40;
  v21 = v41;
  v33 = v41;
  v34 = v38;
  swift_bridgeObjectRetain(v15);
  v31 = v22;
  sub_100046EDC(v36, v35, v18, v20, v19, v22, v21);
  swift_bridgeObjectRelease(v15);
  sub_100010C40(a1);
  swift_bridgeObjectRelease(v15);
  v24 = v35;
  v23 = v36;
  v25 = v32;
  v26 = v33;
  result = sub_1000192C8(v36, v35, v18, v34, v32, v22, v33);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v42;
  *(_QWORD *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 32) = v24;
  v28 = v34;
  *(_QWORD *)(a2 + 40) = v18;
  *(_QWORD *)(a2 + 48) = v28;
  v29 = v31;
  *(_QWORD *)(a2 + 56) = v25;
  *(_QWORD *)(a2 + 64) = v29;
  *(_QWORD *)(a2 + 72) = v26;
  return result;
}

unint64_t sub_100046CFC()
{
  unint64_t result;

  result = qword_1000ED858;
  if (!qword_1000ED858)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIADeterminateResponseType, &type metadata for BIADeterminateResponseType);
    atomic_store(result, (unint64_t *)&qword_1000ED858);
  }
  return result;
}

unint64_t sub_100046D44()
{
  unint64_t result;

  result = qword_1000ED860;
  if (!qword_1000ED860)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIABinaryChoiceRole, &type metadata for BIABinaryChoiceRole);
    atomic_store(result, (unint64_t *)&qword_1000ED860);
  }
  return result;
}

uint64_t sub_100046D88(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v20 = a7;
  v21 = a6;
  v22 = a5;
  v23 = a4;
  v24 = (a16 >> 61) & 3;
  if ((_DWORD)v24 == 2)
  {
    swift_bridgeObjectRetain(a2);
    sub_100046EDC(v23, v22, v21, v20, a8, a9, a10);
    swift_bridgeObjectRetain(a12);
    result = a14;
    a2 = a15;
    a4 = a17;
    a3 = a16 & 0x9FFFFFFFFFFFFFFFLL;
    a5 = a18;
    a6 = a19;
    a7 = a20;
    return sub_100046EDC(result, a2, a3, a4, a5, a6, a7);
  }
  v25 = a3;
  if ((_DWORD)v24 != 1)
  {
    if ((_DWORD)v24)
      return result;
    return sub_100046EDC(result, a2, a3, a4, a5, a6, a7);
  }
  swift_bridgeObjectRetain(a2);
  return swift_bridgeObjectRetain(v25);
}

uint64_t sub_100046EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if ((a3 & 0x8000000000000000) == 0)
    return swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a5);
  return swift_bridgeObjectRetain(a7);
}

uint64_t destroy for BIAUserInteractionParadigm(uint64_t a1)
{
  return sub_100019174(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152));
}

uint64_t *initializeWithCopy for BIAUserInteractionParadigm(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = a2[1];
  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  v7 = a2[5];
  v8 = a2[6];
  v9 = a2[7];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  v21 = a2[17];
  v22 = a2[18];
  v23 = a2[19];
  v10 = a2[8];
  v11 = *a2;
  sub_100046D88(*a2, v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  *a1 = v11;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  a1[19] = v23;
  return a1;
}

uint64_t assignWithCopy for BIAUserInteractionParadigm(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v28 = a2[9];
  v29 = a2[10];
  v30 = a2[11];
  v31 = a2[12];
  v32 = a2[13];
  v33 = a2[14];
  v34 = a2[15];
  v35 = a2[16];
  v36 = a2[17];
  v37 = a2[18];
  v38 = a2[19];
  sub_100046D88(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_QWORD *)(a1 + 144);
  v26 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v28;
  *(_QWORD *)(a1 + 80) = v29;
  *(_QWORD *)(a1 + 88) = v30;
  *(_QWORD *)(a1 + 96) = v31;
  *(_QWORD *)(a1 + 104) = v32;
  *(_QWORD *)(a1 + 112) = v33;
  *(_QWORD *)(a1 + 120) = v34;
  *(_QWORD *)(a1 + 128) = v35;
  *(_QWORD *)(a1 + 136) = v36;
  *(_QWORD *)(a1 + 144) = v37;
  *(_QWORD *)(a1 + 152) = v38;
  sub_100019174(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((unint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    v26);
  return a1;
}

__n128 initializeWithTake for BIAUserInteractionParadigm(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for BIAUserInteractionParadigm(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 96);
  v14 = *(_OWORD *)(a1 + 112);
  v15 = *(_OWORD *)(a1 + 128);
  v16 = *(_QWORD *)(a1 + 144);
  v17 = *(_QWORD *)(a1 + 152);
  v18 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v19;
  v20 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v20;
  v21 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v21;
  v22 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v22;
  sub_100019174(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((unint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16,
    v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for BIAUserInteractionParadigm(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 96) >> 2;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for BIAUserInteractionParadigm(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 152) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 96) = 4 * -a2;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_OWORD *)(a1 + 136) = 0u;
      *(_QWORD *)(a1 + 152) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_100047378(uint64_t result, uint64_t a2)
{
  unint64_t v2;

  if (a2 < 3)
  {
    v2 = *(_QWORD *)(result + 120) & 0x8000000000000001 | (a2 << 61);
    *(_QWORD *)(result + 96) &= 3uLL;
    *(_QWORD *)(result + 120) = v2;
  }
  else
  {
    *(_QWORD *)result = (a2 - 3);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_QWORD *)(result + 120) = 0x6000000000000000;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for BIAUserInteractionParadigm()
{
  return &type metadata for BIAUserInteractionParadigm;
}

uint64_t destroy for BIAUserAction(uint64_t *a1)
{
  return sub_1000192C8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
}

uint64_t *initializeWithCopy for BIAUserAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  sub_100046EDC(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return a1;
}

uint64_t *assignWithCopy for BIAUserAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  sub_100046EDC(*a2, v4, v5, v6, v7, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  v14 = a1[4];
  v15 = a1[5];
  v16 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_1000192C8(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *assignWithTake for BIAUserAction(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  a1[6] = v3;
  sub_1000192C8(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for BIAUserAction(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for BIAUserAction(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 2 * -a2;
      result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_100047600(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >> 63;
}

uint64_t sub_10004760C(uint64_t result)
{
  *(_QWORD *)(result + 16) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_10004761C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for BIAUserAction()
{
  return &type metadata for BIAUserAction;
}

ValueMetadata *type metadata accessor for BIADeterminateResponseType()
{
  return &type metadata for BIADeterminateResponseType;
}

ValueMetadata *type metadata accessor for BIADeterminateResponse()
{
  return &type metadata for BIADeterminateResponse;
}

uint64_t destroy for BIALabeledUserAction(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return sub_1000192C8(a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
}

_QWORD *initializeWithCopy for BIALabeledUserAction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[6];
  v8 = a2[7];
  v9 = a2[8];
  v10 = a2[9];
  v11 = a2[10];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  sub_100046EDC(v5, v6, v7, v8, v9, v10, v11);
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  a1[9] = v10;
  a1[10] = v11;
  return a1;
}

_QWORD *assignWithCopy for BIALabeledUserAction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v12 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  sub_100046EDC(v8, v9, v10, v11, v12, v13, v14);
  v15 = a1[4];
  v16 = a1[5];
  v17 = a1[6];
  v18 = a1[7];
  v19 = a1[8];
  v20 = a1[9];
  v21 = a1[10];
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v14;
  sub_1000192C8(v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

__n128 initializeWithTake for BIALabeledUserAction(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

_QWORD *assignWithTake for BIALabeledUserAction(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 80);
  v9 = a1[4];
  v10 = a1[5];
  v11 = a1[6];
  v12 = a1[7];
  v13 = a1[8];
  v14 = a1[9];
  v15 = a1[10];
  v16 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v16;
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  a1[10] = v8;
  sub_1000192C8(v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for BIALabeledUserAction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BIALabeledUserAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BIALabeledUserAction()
{
  return &type metadata for BIALabeledUserAction;
}

ValueMetadata *type metadata accessor for BIABinaryChoiceRole()
{
  return &type metadata for BIABinaryChoiceRole;
}

uint64_t destroy for BIABinaryChoiceButton(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  return sub_1000192C8(a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
}

uint64_t initializeWithCopy for BIABinaryChoiceButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain(v3);
  sub_100046EDC(v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  return a1;
}

uint64_t assignWithCopy for BIABinaryChoiceButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  sub_100046EDC(v6, v7, v8, v9, v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  sub_1000192C8(v13, v14, v15, v16, v17, v18, v19);
  return a1;
}

__n128 initializeWithTake for BIABinaryChoiceButton(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for BIABinaryChoiceButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v6;
  sub_1000192C8(v7, v8, v9, v10, v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for BIABinaryChoiceButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BIABinaryChoiceButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BIABinaryChoiceButton()
{
  return &type metadata for BIABinaryChoiceButton;
}

ValueMetadata *type metadata accessor for BIABinaryChoiceButton.CodingKeys()
{
  return &type metadata for BIABinaryChoiceButton.CodingKeys;
}

uint64_t _s8Business19BIABinaryChoiceRoleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100047C70 + 4 * byte_1000B0735[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100047CA4 + 4 * byte_1000B0730[v4]))();
}

uint64_t sub_100047CA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100047CAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100047CB4);
  return result;
}

uint64_t sub_100047CC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100047CC8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100047CCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100047CD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BIALabeledUserAction.CodingKeys()
{
  return &type metadata for BIALabeledUserAction.CodingKeys;
}

ValueMetadata *type metadata accessor for BIADeterminateResponse.CodingKeys()
{
  return &type metadata for BIADeterminateResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for BIADeterminateResponseType.CodingKeys()
{
  return &type metadata for BIADeterminateResponseType.CodingKeys;
}

ValueMetadata *type metadata accessor for BIADeterminateResponseType.YesCodingKeys()
{
  return &type metadata for BIADeterminateResponseType.YesCodingKeys;
}

ValueMetadata *type metadata accessor for BIADeterminateResponseType.NoCodingKeys()
{
  return &type metadata for BIADeterminateResponseType.NoCodingKeys;
}

ValueMetadata *type metadata accessor for BIAUserAction.CodingKeys()
{
  return &type metadata for BIAUserAction.CodingKeys;
}

ValueMetadata *type metadata accessor for BIAUserAction.UrlCodingKeys()
{
  return &type metadata for BIAUserAction.UrlCodingKeys;
}

ValueMetadata *type metadata accessor for BIAUserAction.DeterminateResponseCodingKeys()
{
  return &type metadata for BIAUserAction.DeterminateResponseCodingKeys;
}

uint64_t _s8Business22BIADeterminateResponseV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100047DBC + 4 * byte_1000B073F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100047DF0 + 4 * byte_1000B073A[v4]))();
}

uint64_t sub_100047DF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100047DF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100047E00);
  return result;
}

uint64_t sub_100047E0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100047E14);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100047E18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100047E20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BIAUserInteractionParadigm.CodingKeys()
{
  return &type metadata for BIAUserInteractionParadigm.CodingKeys;
}

ValueMetadata *type metadata accessor for BIAUserInteractionParadigm.NoneCodingKeys()
{
  return &type metadata for BIAUserInteractionParadigm.NoneCodingKeys;
}

uint64_t _s8Business13BIAUserActionO13UrlCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100047E8C + 4 * byte_1000B0744[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100047EAC + 4 * byte_1000B0749[v4]))();
}

_BYTE *sub_100047E8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100047EAC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100047EB4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100047EBC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100047EC4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100047ECC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BIAUserInteractionParadigm.SingleCodingKeys()
{
  return &type metadata for BIAUserInteractionParadigm.SingleCodingKeys;
}

ValueMetadata *type metadata accessor for BIAUserInteractionParadigm.OptionsCodingKeys()
{
  return &type metadata for BIAUserInteractionParadigm.OptionsCodingKeys;
}

uint64_t _s8Business26BIADeterminateResponseTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100047F44 + 4 * byte_1000B0753[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100047F78 + 4 * byte_1000B074E[v4]))();
}

uint64_t sub_100047F78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100047F80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100047F88);
  return result;
}

uint64_t sub_100047F94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100047F9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100047FA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100047FA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BIAUserInteractionParadigm.BinaryChoiceCodingKeys()
{
  return &type metadata for BIAUserInteractionParadigm.BinaryChoiceCodingKeys;
}

unint64_t sub_100047FC8()
{
  unint64_t result;

  result = qword_1000ED868;
  if (!qword_1000ED868)
  {
    result = swift_getWitnessTable(&unk_1000B0CB8, &type metadata for BIAUserInteractionParadigm.BinaryChoiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED868);
  }
  return result;
}

unint64_t sub_100048010()
{
  unint64_t result;

  result = qword_1000ED870;
  if (!qword_1000ED870)
  {
    result = swift_getWitnessTable(&unk_1000B0D70, &type metadata for BIAUserInteractionParadigm.OptionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED870);
  }
  return result;
}

unint64_t sub_100048058()
{
  unint64_t result;

  result = qword_1000ED878;
  if (!qword_1000ED878)
  {
    result = swift_getWitnessTable(&unk_1000B0E28, &type metadata for BIAUserInteractionParadigm.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED878);
  }
  return result;
}

unint64_t sub_1000480A0()
{
  unint64_t result;

  result = qword_1000ED880;
  if (!qword_1000ED880)
  {
    result = swift_getWitnessTable(&unk_1000B0F30, &type metadata for BIAUserInteractionParadigm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED880);
  }
  return result;
}

unint64_t sub_1000480E8()
{
  unint64_t result;

  result = qword_1000ED888;
  if (!qword_1000ED888)
  {
    result = swift_getWitnessTable(&unk_1000B1020, &type metadata for BIAUserAction.DeterminateResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED888);
  }
  return result;
}

unint64_t sub_100048130()
{
  unint64_t result;

  result = qword_1000ED890;
  if (!qword_1000ED890)
  {
    result = swift_getWitnessTable(&unk_1000B10D8, &type metadata for BIAUserAction.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED890);
  }
  return result;
}

unint64_t sub_100048178()
{
  unint64_t result;

  result = qword_1000ED898;
  if (!qword_1000ED898)
  {
    result = swift_getWitnessTable(&unk_1000B1190, &type metadata for BIAUserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED898);
  }
  return result;
}

unint64_t sub_1000481C0()
{
  unint64_t result;

  result = qword_1000ED8A0;
  if (!qword_1000ED8A0)
  {
    result = swift_getWitnessTable(&unk_1000B12E8, &type metadata for BIADeterminateResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8A0);
  }
  return result;
}

unint64_t sub_100048208()
{
  unint64_t result;

  result = qword_1000ED8A8;
  if (!qword_1000ED8A8)
  {
    result = swift_getWitnessTable(&unk_1000B13A0, &type metadata for BIADeterminateResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8A8);
  }
  return result;
}

unint64_t sub_100048250()
{
  unint64_t result;

  result = qword_1000ED8B0;
  if (!qword_1000ED8B0)
  {
    result = swift_getWitnessTable(&unk_1000B1458, &type metadata for BIALabeledUserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8B0);
  }
  return result;
}

unint64_t sub_100048298()
{
  unint64_t result;

  result = qword_1000ED8B8;
  if (!qword_1000ED8B8)
  {
    result = swift_getWitnessTable(&unk_1000B1510, &type metadata for BIABinaryChoiceButton.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8B8);
  }
  return result;
}

unint64_t sub_1000482E0()
{
  unint64_t result;

  result = qword_1000ED8C0;
  if (!qword_1000ED8C0)
  {
    result = swift_getWitnessTable(&unk_1000B1480, &type metadata for BIABinaryChoiceButton.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8C0);
  }
  return result;
}

unint64_t sub_100048328()
{
  unint64_t result;

  result = qword_1000ED8C8;
  if (!qword_1000ED8C8)
  {
    result = swift_getWitnessTable(&unk_1000B14A8, &type metadata for BIABinaryChoiceButton.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8C8);
  }
  return result;
}

unint64_t sub_100048370()
{
  unint64_t result;

  result = qword_1000ED8D0;
  if (!qword_1000ED8D0)
  {
    result = swift_getWitnessTable(&unk_1000B13C8, &type metadata for BIALabeledUserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8D0);
  }
  return result;
}

unint64_t sub_1000483B8()
{
  unint64_t result;

  result = qword_1000ED8D8;
  if (!qword_1000ED8D8)
  {
    result = swift_getWitnessTable(&unk_1000B13F0, &type metadata for BIALabeledUserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8D8);
  }
  return result;
}

unint64_t sub_100048400()
{
  unint64_t result;

  result = qword_1000ED8E0;
  if (!qword_1000ED8E0)
  {
    result = swift_getWitnessTable(&unk_1000B1310, &type metadata for BIADeterminateResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8E0);
  }
  return result;
}

unint64_t sub_100048448()
{
  unint64_t result;

  result = qword_1000ED8E8;
  if (!qword_1000ED8E8)
  {
    result = swift_getWitnessTable(&unk_1000B1338, &type metadata for BIADeterminateResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8E8);
  }
  return result;
}

unint64_t sub_100048490()
{
  unint64_t result;

  result = qword_1000ED8F0;
  if (!qword_1000ED8F0)
  {
    result = swift_getWitnessTable(&unk_1000B1208, &type metadata for BIADeterminateResponseType.YesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8F0);
  }
  return result;
}

unint64_t sub_1000484D8()
{
  unint64_t result;

  result = qword_1000ED8F8;
  if (!qword_1000ED8F8)
  {
    result = swift_getWitnessTable(&unk_1000B1230, &type metadata for BIADeterminateResponseType.YesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED8F8);
  }
  return result;
}

unint64_t sub_100048520()
{
  unint64_t result;

  result = qword_1000ED900;
  if (!qword_1000ED900)
  {
    result = swift_getWitnessTable(&unk_1000B11B8, &type metadata for BIADeterminateResponseType.NoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED900);
  }
  return result;
}

unint64_t sub_100048568()
{
  unint64_t result;

  result = qword_1000ED908;
  if (!qword_1000ED908)
  {
    result = swift_getWitnessTable(&unk_1000B11E0, &type metadata for BIADeterminateResponseType.NoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED908);
  }
  return result;
}

unint64_t sub_1000485B0()
{
  unint64_t result;

  result = qword_1000ED910;
  if (!qword_1000ED910)
  {
    result = swift_getWitnessTable(&unk_1000B1258, &type metadata for BIADeterminateResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED910);
  }
  return result;
}

unint64_t sub_1000485F8()
{
  unint64_t result;

  result = qword_1000ED918;
  if (!qword_1000ED918)
  {
    result = swift_getWitnessTable(&unk_1000B1280, &type metadata for BIADeterminateResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED918);
  }
  return result;
}

unint64_t sub_100048640()
{
  unint64_t result;

  result = qword_1000ED920;
  if (!qword_1000ED920)
  {
    result = swift_getWitnessTable(&unk_1000B1048, &type metadata for BIAUserAction.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED920);
  }
  return result;
}

unint64_t sub_100048688()
{
  unint64_t result;

  result = qword_1000ED928;
  if (!qword_1000ED928)
  {
    result = swift_getWitnessTable(&unk_1000B1070, &type metadata for BIAUserAction.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED928);
  }
  return result;
}

unint64_t sub_1000486D0()
{
  unint64_t result;

  result = qword_1000ED930;
  if (!qword_1000ED930)
  {
    result = swift_getWitnessTable(&unk_1000B0F58, &type metadata for BIAUserAction.DeterminateResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED930);
  }
  return result;
}

unint64_t sub_100048718()
{
  unint64_t result;

  result = qword_1000ED938;
  if (!qword_1000ED938)
  {
    result = swift_getWitnessTable(&unk_1000B0F80, &type metadata for BIAUserAction.DeterminateResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED938);
  }
  return result;
}

unint64_t sub_100048760()
{
  unint64_t result;

  result = qword_1000ED940;
  if (!qword_1000ED940)
  {
    result = swift_getWitnessTable(&unk_1000B1100, &type metadata for BIAUserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED940);
  }
  return result;
}

unint64_t sub_1000487A8()
{
  unint64_t result;

  result = qword_1000ED948;
  if (!qword_1000ED948)
  {
    result = swift_getWitnessTable(&unk_1000B1128, &type metadata for BIAUserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED948);
  }
  return result;
}

unint64_t sub_1000487F0()
{
  unint64_t result;

  result = qword_1000ED950;
  if (!qword_1000ED950)
  {
    result = swift_getWitnessTable(&unk_1000B0E50, &type metadata for BIAUserInteractionParadigm.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED950);
  }
  return result;
}

unint64_t sub_100048838()
{
  unint64_t result;

  result = qword_1000ED958;
  if (!qword_1000ED958)
  {
    result = swift_getWitnessTable(&unk_1000B0E78, &type metadata for BIAUserInteractionParadigm.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED958);
  }
  return result;
}

unint64_t sub_100048880()
{
  unint64_t result;

  result = qword_1000ED960;
  if (!qword_1000ED960)
  {
    result = swift_getWitnessTable(&unk_1000B0D98, &type metadata for BIAUserInteractionParadigm.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED960);
  }
  return result;
}

unint64_t sub_1000488C8()
{
  unint64_t result;

  result = qword_1000ED968;
  if (!qword_1000ED968)
  {
    result = swift_getWitnessTable(&unk_1000B0DC0, &type metadata for BIAUserInteractionParadigm.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED968);
  }
  return result;
}

unint64_t sub_100048910()
{
  unint64_t result;

  result = qword_1000ED970;
  if (!qword_1000ED970)
  {
    result = swift_getWitnessTable(&unk_1000B0CE0, &type metadata for BIAUserInteractionParadigm.OptionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED970);
  }
  return result;
}

unint64_t sub_100048958()
{
  unint64_t result;

  result = qword_1000ED978;
  if (!qword_1000ED978)
  {
    result = swift_getWitnessTable(&unk_1000B0D08, &type metadata for BIAUserInteractionParadigm.OptionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED978);
  }
  return result;
}

unint64_t sub_1000489A0()
{
  unint64_t result;

  result = qword_1000ED980;
  if (!qword_1000ED980)
  {
    result = swift_getWitnessTable(&unk_1000B0C28, &type metadata for BIAUserInteractionParadigm.BinaryChoiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED980);
  }
  return result;
}

unint64_t sub_1000489E8()
{
  unint64_t result;

  result = qword_1000ED988;
  if (!qword_1000ED988)
  {
    result = swift_getWitnessTable(&unk_1000B0C50, &type metadata for BIAUserInteractionParadigm.BinaryChoiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED988);
  }
  return result;
}

unint64_t sub_100048A30()
{
  unint64_t result;

  result = qword_1000ED990;
  if (!qword_1000ED990)
  {
    result = swift_getWitnessTable(&unk_1000B0EA0, &type metadata for BIAUserInteractionParadigm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED990);
  }
  return result;
}

unint64_t sub_100048A78()
{
  unint64_t result;

  result = qword_1000ED998;
  if (!qword_1000ED998)
  {
    result = swift_getWitnessTable(&unk_1000B0EC8, &type metadata for BIAUserInteractionParadigm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000ED998);
  }
  return result;
}

unint64_t sub_100048ABC()
{
  unint64_t result;

  result = qword_1000ED9A0;
  if (!qword_1000ED9A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIABinaryChoiceRole, &type metadata for BIABinaryChoiceRole);
    atomic_store(result, (unint64_t *)&qword_1000ED9A0);
  }
  return result;
}

unint64_t sub_100048B00()
{
  unint64_t result;

  result = qword_1000ED9B0;
  if (!qword_1000ED9B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIABinaryChoiceRole, &type metadata for BIABinaryChoiceRole);
    atomic_store(result, (unint64_t *)&qword_1000ED9B0);
  }
  return result;
}

unint64_t sub_100048B44()
{
  unint64_t result;

  result = qword_1000ED9B8;
  if (!qword_1000ED9B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIAUserAction, &type metadata for BIAUserAction);
    atomic_store(result, (unint64_t *)&qword_1000ED9B8);
  }
  return result;
}

unint64_t sub_100048B88()
{
  unint64_t result;

  result = qword_1000ED9D0;
  if (!qword_1000ED9D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIADeterminateResponseType, &type metadata for BIADeterminateResponseType);
    atomic_store(result, (unint64_t *)&qword_1000ED9D0);
  }
  return result;
}

unint64_t sub_100048BCC()
{
  unint64_t result;

  result = qword_1000ED9F8;
  if (!qword_1000ED9F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIADeterminateResponse, &type metadata for BIADeterminateResponse);
    atomic_store(result, (unint64_t *)&qword_1000ED9F8);
  }
  return result;
}

unint64_t sub_100048C10()
{
  unint64_t result;

  result = qword_1000EDA28;
  if (!qword_1000EDA28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIABinaryChoiceButton, &type metadata for BIABinaryChoiceButton);
    atomic_store(result, (unint64_t *)&qword_1000EDA28);
  }
  return result;
}

uint64_t sub_100048C54(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 120) & 0x8000000000000001 | 0x4000000000000000;
  *(_QWORD *)(result + 96) &= 3uLL;
  *(_QWORD *)(result + 120) = v1;
  return result;
}

uint64_t sub_100048C74(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100007DCC(&qword_1000ED780);
    a2();
    result = swift_getWitnessTable(a3, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100048CDC()
{
  unint64_t result;

  result = qword_1000EDA38;
  if (!qword_1000EDA38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BIALabeledUserAction, &type metadata for BIALabeledUserAction);
    atomic_store(result, (unint64_t *)&qword_1000EDA38);
  }
  return result;
}

uint64_t sub_100048D20(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 120) & 0x8000000000000001 | 0x2000000000000000;
  *(_QWORD *)(result + 96) &= 3uLL;
  *(_QWORD *)(result + 120) = v1;
  return result;
}

uint64_t sub_100048D40(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 120) & 0x8000000000000001;
  *(_QWORD *)(result + 96) &= 3uLL;
  *(_QWORD *)(result + 120) = v1;
  return result;
}

double sub_100048D5C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0x6000000000000000;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  return result;
}

uint64_t sub_100048D88(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, void *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v5 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  swift_retain(v4);
  v9 = a3;
  v5(v6, v8, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v8);
}

void sub_100048E2C()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for IMBAuthenticationViewController();
  objc_msgSendSuper2(&v8, "viewDidLoad");
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message], "rootObject");
  if (v1
    && (v2 = v1,
        v3 = objc_opt_self(BCServerSideOAuth2Request),
        v4 = swift_dynamicCastObjCClass(v2, v3),
        swift_unknownObjectRelease(v2),
        v4))
  {
    v5 = objc_msgSend(v0, "view");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      objc_msgSend(v6, "setBackgroundColor:", v7);

      objc_msgSend(v0, "setModalPresentationStyle:", 5);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_10004964C();
    sub_10004970C();
  }
}

void sub_100048F78()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message], "rootObject");
  if (v1
    && (v2 = v1,
        v3 = objc_opt_self(BCServerSideOAuth2Request),
        v4 = swift_dynamicCastObjCClass(v2, v3),
        swift_unknownObjectRelease(v2),
        v4))
  {
    v5 = objc_msgSend(v0, "view");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "window");

      if (v7)
      {
        sub_100049078(v7);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sub_100049AD0();
  }
}

void sub_100049078(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSURL *v26;
  void *v27;
  void *v28;
  NSString v29;
  void *v30;
  id v31;
  void (*v32)(char *, uint64_t);
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v7 = __chkstk_darwin(v4, v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  v12 = (char *)&v35 - v11;
  v13 = *(void **)(v2 + OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_aswasWindow);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_aswasWindow) = a1;
  v14 = a1;

  v15 = objc_msgSend(v14, "_rootSheetPresentationController");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "_setShouldScaleDownBehindDescendantSheets:", 0);

    v17 = *(void **)(v2 + OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_authenticationManager);
    if (v17)
    {
      v36 = v17;
      v18 = objc_msgSend(v36, "authenticationRequest");
      v19 = objc_msgSend(v18, "oauth2");
      swift_unknownObjectRelease(v18);
      v20 = objc_msgSend(v19, "authenticationSessionURL");
      swift_unknownObjectRelease(v19);
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v20);

      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v12, v4);
      static String._unconditionallyBridgeFromObjectiveC(_:)(BCOAuth2RedirectURICustomURLScheme);
      v22 = v21;
      v23 = v4;
      v24 = swift_allocObject(&unk_1000D8B30, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16, v2);
      v25 = objc_allocWithZone((Class)ASWebAuthenticationSession);
      URL._bridgeToObjectiveC()(v26);
      v28 = v27;
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v22);
      aBlock[4] = sub_10004C26C;
      v38 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004AFC8;
      aBlock[3] = &unk_1000D8B48;
      v30 = _Block_copy(aBlock);
      v31 = objc_msgSend(v25, "initWithURL:callbackURLScheme:completionHandler:", v28, v29, v30);
      _Block_release(v30);

      v32 = *(void (**)(char *, uint64_t))(v5 + 8);
      v32(v9, v23);
      swift_release(v38);
      objc_msgSend(v31, "setPresentationContextProvider:", v2);
      objc_msgSend(v31, "setPrefersEphemeralWebBrowserSession:", 1);
      v33 = *(void **)(v2 + OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_session);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_session) = v31;
      v34 = v31;

      objc_msgSend(v34, "start");
      v32(v12, v23);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100049368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t Strong;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  void (*v32)(void *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _BYTE v37[24];

  v5 = type metadata accessor for URLRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v10, v11);
  v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = __chkstk_darwin(v14, v16);
  v19 = &v37[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v17, v20);
  v22 = &v37[-v21 - 8];
  v23 = a3 + 16;
  sub_10003CED0(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10004AF88((uint64_t)v13);
    swift_beginAccess(v23, v37, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v23);
    if (Strong)
    {
      v25 = (void *)Strong;
      v26 = Strong + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate;
      v27 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate);
      swift_unknownObjectRelease(v27);
      if (v27)
      {
        v28 = swift_unknownObjectWeakLoadStrong(v26);
        if (v28)
        {
          v29 = v28;
          v30 = *(_QWORD *)(v26 + 8);
          ObjectType = swift_getObjectType(v28);
          v32 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v30 + 16);
          v33 = type metadata accessor for IMBAuthenticationViewController();
          v32(v25, v33, ObjectType, v30);

          swift_unknownObjectRelease(v29);
        }
        else
        {

        }
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32))(v22, v13, v14);
    swift_beginAccess(v23, v37, 0, 0);
    v34 = swift_unknownObjectWeakLoadStrong(v23);
    if (v34)
    {
      v35 = (void *)v34;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 16))(v19, v22, v14);
      URLRequest.init(url:cachePolicy:timeoutInterval:)(v19, 0, 60.0);
      sub_10004A664();

      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
    }
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v22, v14);
  }
}

id sub_10004964C()
{
  char *v0;
  uint64_t v1;
  id result;
  void *v3;
  void *v4;

  v1 = OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_webViewController;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_webViewController], "setDelegate:", v0);
  objc_msgSend(v0, "addChildViewController:", *(_QWORD *)&v0[v1]);
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v3 = result;
    result = objc_msgSend(*(id *)&v0[v1], "view");
    if (result)
    {
      v4 = result;
      objc_msgSend(v3, "addSubview:", result);

      return objc_msgSend(*(id *)&v0[v1], "didMoveToParentViewController:", v0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10004970C()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  double v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  char v21;
  double v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  char v30;
  double v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  Class isa;

  v1 = OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_webViewController;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_webViewController], "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_18;
  }
  v3 = v2;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v4 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1000AF130;
  v6 = objc_msgSend(*(id *)&v0[v1], "view");
  if (!v6)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "topAnchor");

  v9 = objc_msgSend(v0, "view");
  if (!v9)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, "topAnchor");

  v12 = sub_10002DA10();
  v13 = 20.0;
  if ((v12 & 0xFE) == 0)
    v13 = 0.0;
  v14 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v11, v13);

  *(_QWORD *)(v5 + 32) = v14;
  v15 = objc_msgSend(*(id *)&v0[v1], "view");
  if (!v15)
    goto LABEL_20;
  v16 = v15;
  v17 = objc_msgSend(v15, "leftAnchor");

  v18 = objc_msgSend(v0, "view");
  if (!v18)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, "leftAnchor");

  v21 = sub_10002DA10();
  v22 = 20.0;
  if ((v21 & 0xFE) == 0)
    v22 = 0.0;
  v23 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v20, v22);

  *(_QWORD *)(v5 + 40) = v23;
  v24 = objc_msgSend(*(id *)&v0[v1], "view");
  if (!v24)
    goto LABEL_22;
  v25 = v24;
  v26 = objc_msgSend(v24, "rightAnchor");

  v27 = objc_msgSend(v0, "view");
  if (!v27)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, "rightAnchor");

  v30 = sub_10002DA10();
  v31 = 20.0;
  if ((v30 & 0xFE) == 0)
    v31 = 0.0;
  v32 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v29, -v31);

  *(_QWORD *)(v5 + 48) = v32;
  v33 = objc_msgSend(*(id *)&v0[v1], "view");
  if (!v33)
    goto LABEL_24;
  v34 = v33;
  v35 = objc_msgSend(v33, "bottomAnchor");

  v36 = objc_msgSend(v0, "view");
  if (v36)
  {
    v37 = v36;
    v38 = (void *)objc_opt_self(NSLayoutConstraint);
    v39 = objc_msgSend(v37, "bottomAnchor");

    v40 = objc_msgSend(v35, "constraintEqualToAnchor:", v39);
    *(_QWORD *)(v5 + 56) = v40;
    specialized Array._endMutation()(v41);
    sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
    objc_msgSend(v38, "activateConstraints:", isa);

    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100049AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSURL *v29;
  void *v30;
  void *v31;
  uint64_t v33;

  v1 = v0;
  v2 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = __chkstk_darwin(v6, v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  v14 = (char *)&v33 - v13;
  v15 = *(void **)(v1 + OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_authenticationManager);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    return sub_10004AF88((uint64_t)v5);
  }
  v16 = objc_msgSend(v15, "authenticationRequest");
  v17 = objc_msgSend(v16, "oauth2");
  swift_unknownObjectRelease(v16);
  v18 = objc_msgSend(v17, "authenticationSessionURL");
  swift_unknownObjectRelease(v17);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v18);

  v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v19(v5, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_10004AF88((uint64_t)v5);
  v20 = ((uint64_t (*)(char *, char *, uint64_t))v19)(v14, v5, v6);
  if (qword_1000EBCB8 != -1)
    v20 = swift_once(&qword_1000EBCB8, sub_100082798);
  v21 = qword_1000F8A90;
  v22 = static os_log_type_t.default.getter(v20);
  v23 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v24 = swift_allocObject(v23, 72, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1000AF070;
  v25 = URL.absoluteString.getter(v24);
  v27 = v26;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  *(_QWORD *)(v24 + 64) = sub_100009084();
  *(_QWORD *)(v24 + 32) = v25;
  *(_QWORD *)(v24 + 40) = v27;
  os_log(_:dso:log:type:_:)("IMBAuthenticationViewController: startAuthenticationSession %@", 62, 2, &_mh_execute_header, v21, v22, v24);
  swift_bridgeObjectRelease(v24);
  v28 = *(id *)(v1 + OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_webViewController);
  URL._bridgeToObjectiveC()(v29);
  v31 = v30;
  objc_msgSend(v28, "loadURL:", v30);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, v6);
}

uint64_t sub_100049D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v20;
  _QWORD v21[3];
  _BYTE v22[8];
  _BYTE v23[24];

  if (a3)
  {
    v6 = (uint64_t *)(a4 + 16);
    v7 = swift_errorRetain(a3);
    if (qword_1000EBCB8 != -1)
      v7 = swift_once(&qword_1000EBCB8, sub_100082798);
    v8 = qword_1000F8A90;
    v9 = static os_log_type_t.default.getter(v7);
    v10 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v11 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1000AF070;
    swift_getErrorValue(a3, v22, v21);
    v12 = Error.localizedDescription.getter(v21[1], v21[2]);
    v14 = v13;
    *(_QWORD *)(v11 + 56) = &type metadata for String;
    *(_QWORD *)(v11 + 64) = sub_100009084();
    *(_QWORD *)(v11 + 32) = v12;
    *(_QWORD *)(v11 + 40) = v14;
    os_log(_:dso:log:type:_:)("IMBAuthenticationViewController: encryption error: %@", 53, 2, &_mh_execute_header, v8, v9, v11);
    swift_bridgeObjectRelease(v11);
    swift_beginAccess(v6, v23, 1, 0);
    v15 = *v6;
    *v6 = a3;
    return swift_errorRelease(v15);
  }
  else
  {
    swift_beginAccess(a5 + 16, v23, 1, 0);
    v20 = *(_QWORD *)(a5 + 24);
    *(_QWORD *)(a5 + 16) = a1;
    *(_QWORD *)(a5 + 24) = a2;
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRelease(v20);
  }
}

void sub_100049F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSURL *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  NSString v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  __objc2_prot *v71;
  void *v72;
  id v73;
  void *v74;
  void *v75;
  uint64_t v76;
  id v77;

  v1 = v0;
  v2 = type metadata accessor for URLHelper(0);
  __chkstk_darwin(v2, v3);
  v66 = (uint64_t)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v5, v6);
  v68 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v69 = *(_QWORD *)(v8 - 8);
  v70 = v8;
  v10 = __chkstk_darwin(v8, v9);
  v67 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  v65 = (char *)&v64 - v13;
  v14 = objc_allocWithZone((Class)BCServerSideOAuth2Response);
  URL._bridgeToObjectiveC()(v15);
  v17 = v16;
  v18 = objc_msgSend(v14, "initWithRedirectURI:", v16);

  if (objc_msgSend(v18, "status") != (id)3
    || (v19 = objc_msgSend(v18, "error"), v19, v19))
  {
    v20 = v18;
    v21 = v18;
    v22 = sub_10004B0C0(v20, v1);
    v24 = v23;

    v26 = *(void **)(v1 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_conversation);
    v27 = (void *)BCMessageRootAuthenticateKey;
    v72 = *(void **)(v1 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message);
    v25 = v72;
    v73 = v22;
    v74 = v26;
    v75 = v24;
    v76 = BCMessageRootAuthenticateKey;
    v77 = v20;
    v28 = v20;
    v29 = v25;
    v30 = v22;
    v31 = v26;
    v32 = v24;
    v33 = v27;
    sub_1000371DC(1);

    v18 = v21;
  }
  v34 = v1 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate);
  swift_unknownObjectRelease(Strong);
  if (Strong)
  {
    v36 = swift_unknownObjectWeakLoadStrong(v34);
    if (v36)
    {
      v37 = v36;
      v38 = *(_QWORD *)(v34 + 8);
      ObjectType = swift_getObjectType(v36);
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 16);
      v41 = type metadata accessor for IMBAuthenticationViewController();
      v40(v1, v41, ObjectType, v38);
      swift_unknownObjectRelease(v37);
    }
    v42 = objc_msgSend((id)objc_opt_self(BCConstants), "isRunningInMacCatalyst");
    v44 = v69;
    v43 = v70;
    if (v42)
    {
      v45 = (uint64_t)v68;
      URL.init(string:)(0x736567617373656DLL, 0xEF6E65706F2F2F3ALL);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v43) == 1)
      {
        sub_10004AF88(v45);
      }
      else
      {
        v46 = (uint64_t)v65;
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v65, v45, v43);
        v47 = v66;
        sub_10004EA08(v66);
        sub_10004E4AC(v46, 1, sub_10004A3F8, 0);
        sub_100020DA4(v47);
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v43);
      }
    }
    v48 = *(void **)(v1 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message);
    v49 = objc_msgSend(v48, "rootObject");
    if (v49)
    {
      v50 = v49;
      v71 = &OBJC_PROTOCOL___BCOAuth2RequestProtocol;
      v51 = swift_dynamicCastObjCProtocolConditional(v49, 1, &v71);
      if (v51)
      {
        v52 = (void *)v51;
        v53 = kBCAnalyticsMessagesForBusinessOAuth;
        v54 = objc_msgSend(v48, "version");
        v55 = objc_msgSend(v52, "oauth2");
        v56 = objc_msgSend(v55, "authenticationSessionURL");
        swift_unknownObjectRelease(v55);
        v57 = v67;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v56);

        URL.displayDomainString.getter();
        v59 = v58;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v57, v43);
        v60 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v59);
        v61 = (id)NSStringFromServerSideAuthStatus(objc_msgSend(v18, "status"));
        if (!v61)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v63 = v62;
          v61 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v63);
        }
        objc_msgSend((id)objc_opt_self(BCLogger), "logEventWithName:version:authDomain:status:", v53, v54, v60, v61);
        swift_unknownObjectRelease(v50);

      }
      else
      {
        swift_unknownObjectRelease(v50);
      }
    }

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10004A3F8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[3];
  char v12[8];

  if ((result & 1) == 0)
  {
    if (qword_1000EBCB8 != -1)
      result = swift_once(&qword_1000EBCB8, sub_100082798);
    v3 = qword_1000F8A90;
    v4 = static os_log_type_t.error.getter(result);
    v5 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v6 = swift_allocObject(v5, 72, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1000AF070;
    if (a2)
    {
      swift_getErrorValue(a2, v12, v11);
      a2 = Error.localizedDescription.getter(v11[1], v11[2]);
      v8 = v7;
    }
    else
    {
      v8 = 0;
    }
    *(_QWORD *)(v6 + 56) = &type metadata for String;
    *(_QWORD *)(v6 + 64) = sub_100009084();
    if (v8)
      v9 = a2;
    else
      v9 = 0;
    v10 = 0xE000000000000000;
    if (v8)
      v10 = v8;
    *(_QWORD *)(v6 + 32) = v9;
    *(_QWORD *)(v6 + 40) = v10;
    os_log(_:dso:log:type:_:)("IMBAuthenticationViewController: Failed to launch Messages App after authentication. Error: %@", 94, 2, &_mh_execute_header, v3, v4, v6);
    return swift_bridgeObjectRelease(v6);
  }
  return result;
}

id sub_10004A518()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSURL *v4;
  void *v5;
  void *v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_authenticationManager);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "authenticationRequest");
  v3 = objc_msgSend(v2, "oauth2");
  swift_unknownObjectRelease(v2);
  URL._bridgeToObjectiveC()(v4);
  v6 = v5;
  v7 = objc_msgSend(v3, "shouldHandleRedirectURI:", v5);
  swift_unknownObjectRelease(v3);

  return v7;
}

void sub_10004A664()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  Class isa;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[5];
  uint64_t v44;

  v1 = v0;
  v2 = sub_100007D40((uint64_t *)&unk_1000ED480);
  v4 = __chkstk_darwin(v2, v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  v9 = (char *)aBlock - v8;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v13 = __chkstk_darwin(v10, v12);
  v15 = (char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000EBCB8 != -1)
    v13 = swift_once(&qword_1000EBCB8, sub_100082798);
  v16 = qword_1000F8A90;
  v17 = static os_log_type_t.default.getter(v13);
  os_log(_:dso:log:type:_:)("IMBAuthenticationViewController: didReceiveCallbackRequest", 58, 2, &_mh_execute_header, v16, v17, _swiftEmptyArrayStorage);
  v18 = OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_authenticationManager;
  v19 = *(void **)&v0[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_authenticationManager];
  if (v19)
  {
    v20 = objc_msgSend(v19, "authenticationRequest");
    if (v20
      && (v21 = v20,
          v22 = objc_opt_self(BCServerSideOAuth2Request),
          v23 = swift_dynamicCastObjCClass(v21, v22),
          v24 = swift_unknownObjectRelease(v21),
          v23))
    {
      URLRequest.url.getter(v24);
      v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v25(v9, 1, v10) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v9, v10);
        sub_100049F04();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
        return;
      }
      sub_10004AF88((uint64_t)v9);
      v26 = sub_100007D40((uint64_t *)&unk_1000ECE50);
      v27 = swift_allocObject(v26, 72, 7);
      *(_OWORD *)(v27 + 16) = xmmword_1000AF070;
      URLRequest.url.getter(v27);
      v28 = ((uint64_t (*)(char *, uint64_t, uint64_t))v25)(v6, 1, v10);
      if ((_DWORD)v28 == 1)
      {
        sub_10004AF88((uint64_t)v6);
        v29 = 0;
        v30 = 0;
      }
      else
      {
        v29 = URL.absoluteString.getter(v28);
        v30 = v38;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
      }
      *(_QWORD *)(v27 + 56) = &type metadata for String;
      *(_QWORD *)(v27 + 64) = sub_100009084();
      if (v30)
        v39 = v29;
      else
        v39 = 0;
      v40 = 0xE000000000000000;
      if (v30)
        v40 = v30;
      *(_QWORD *)(v27 + 32) = v39;
      *(_QWORD *)(v27 + 40) = v40;
      v41 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
      isa = (Class)static OS_os_log.default.getter(v41);
      v42 = static os_log_type_t.default.getter(isa);
      os_log(_:dso:log:type:_:)("IMBAuthenticationViewController didReceiveCallbackRequest - Received callback with invalid or without redirect URI %@", 117, 2, &_mh_execute_header, isa, v42, v27);
      swift_bridgeObjectRelease(v27);
    }
    else
    {
      v31 = *(void **)&v0[v18];
      if (!v31)
        return;
      v32 = v31;
      isa = URLRequest._bridgeToObjectiveC()().super.isa;
      v34 = swift_allocObject(&unk_1000D8A40, 24, 7);
      *(_QWORD *)(v34 + 16) = v1;
      aBlock[4] = sub_10004AF68;
      v44 = v34;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100048D88;
      aBlock[3] = &unk_1000D8A58;
      v35 = _Block_copy(aBlock);
      v36 = v44;
      v37 = v1;
      swift_release(v36);
      objc_msgSend(v32, "fetchTokenWithRequest:completion:", isa, v35);
      _Block_release(v35);

    }
  }
}

void sub_10004A9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[3];
  _BYTE v24[8];

  v5 = a1;
  if (a3)
  {
    v6 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v7 = swift_allocObject(v6, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1000AF070;
    swift_getErrorValue(a3, v24, v23);
    v8 = v23[1];
    v9 = v23[2];
    swift_errorRetain(a3);
    v10 = Error.localizedDescription.getter(v8, v9);
    v12 = v11;
    *(_QWORD *)(v7 + 56) = &type metadata for String;
    *(_QWORD *)(v7 + 64) = sub_100009084();
    *(_QWORD *)(v7 + 32) = v10;
    *(_QWORD *)(v7 + 40) = v12;
    v13 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
    v14 = (void *)static OS_os_log.default.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    os_log(_:dso:log:type:_:)("IMBAuthenticationViewController: Error fetching token: %@", 57, 2, &_mh_execute_header, v14, v15, v7);
    swift_bridgeObjectRelease(v7);

    a1 = swift_errorRelease(a3);
  }
  if (qword_1000EBCB8 != -1)
    a1 = swift_once(&qword_1000EBCB8, sub_100082798);
  v16 = qword_1000F8A90;
  v17 = static os_log_type_t.default.getter(a1);
  v18 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1000AF070;
  v20 = sub_100009084();
  v21 = 7104878;
  if (a2)
    v21 = 0x657463616465723CLL;
  v22 = 0xEA00000000003E64;
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  *(_QWORD *)(v19 + 64) = v20;
  if (!a2)
    v22 = 0xE300000000000000;
  *(_QWORD *)(v19 + 32) = v21;
  *(_QWORD *)(v19 + 40) = v22;
  os_log(_:dso:log:type:_:)("IMBAuthenticationViewController: fetchToken completed. Token: %@", 64, 2, &_mh_execute_header, v16, v17, v19);
  swift_bridgeObjectRelease(v19);
  sub_10004B8E8(v5, a2, a3);
}

void sub_10004AE50()
{
  uint64_t v0;

}

id sub_10004AE9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBAuthenticationViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBAuthenticationViewController()
{
  return objc_opt_self(_TtC8Business31IMBAuthenticationViewController);
}

uint64_t sub_10004AF44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10004AF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10004A9F8(a1, a2, a3);
}

uint64_t sub_10004AF70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004AF80(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10004AF88(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007D40((uint64_t *)&unk_1000ED480);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004AFC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, void *);
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v6 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, void *))(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 0, 1, v12);
  }
  else
  {
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
  }
  swift_retain(v10);
  v14 = a3;
  v11(v9, a3);
  swift_release(v10);

  return sub_10004AF88((uint64_t)v9);
}

id sub_10004B0C0(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t countAndFlagsBits;
  void *v27;
  void *object;
  id v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  id v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  void *v43;
  NSString v44;
  NSString v45;
  Swift::String v46;
  Swift::String v47;
  NSString v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v58;
  id v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v69;
  id v70;
  id v71;
  id v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;

  v69 = *(id *)(a2 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_conversation);
  v3 = objc_msgSend(v69, "selectedMessage");
  v4 = objc_msgSend(v3, "session");

  if (!v4)
    v4 = objc_msgSend(objc_allocWithZone((Class)MSSession), "init");
  v72 = objc_msgSend(objc_allocWithZone((Class)MSMessage), "initWithSession:", v4);
  v5 = *(void **)(a2 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message);
  v6 = objc_msgSend(v5, "replyMessage");
  v7 = objc_msgSend(v5, "receivedMessage");
  v70 = objc_msgSend(objc_allocWithZone((Class)MSMessageTemplateLayout), "init");
  v71 = v7;
  if (v6)
  {
    v67 = objc_msgSend(v6, "style");
    v8 = objc_msgSend(v6, "imageIdentifier");
    if (v8)
    {
      v9 = v8;
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v63 = v11;
      v64 = v10;

      goto LABEL_16;
    }
    if (!v7)
    {
      v63 = 0;
      v64 = 0;
      goto LABEL_16;
    }
  }
  else
  {
    if (!v7)
    {
      v66 = 0;
      v67 = BCBubbleViewStyleIcon;
      v64 = 0;
      v65 = 0;
      v63 = 0;
      goto LABEL_27;
    }
    v67 = objc_msgSend(v7, "style");
  }
  v12 = objc_msgSend(v7, "imageIdentifier");
  if (v12)
  {
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v63 = v15;
    v64 = v14;

    if (!v6)
      goto LABEL_19;
  }
  else
  {
    v63 = 0;
    v64 = 0;
    if (!v6)
      goto LABEL_19;
  }
LABEL_16:
  v16 = objc_msgSend(v6, "imageDescription");
  if (v16)
  {
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v65 = v19;
    v66 = v18;

    goto LABEL_25;
  }
  if (!v7)
  {
    v65 = 0;
    v66 = 0;
    goto LABEL_25;
  }
LABEL_19:
  v20 = objc_msgSend(v7, "imageDescription");
  if (v20)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v65 = v23;
    v66 = v22;

    if (!v6)
      goto LABEL_27;
  }
  else
  {
    v65 = 0;
    v66 = 0;
    if (!v6)
      goto LABEL_27;
  }
LABEL_25:
  v24 = objc_msgSend(v6, "title");
  if (v24)
  {
    v25 = v24;
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    object = v27;

    goto LABEL_28;
  }
LABEL_27:
  v29 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v30._countAndFlagsBits = 0xD000000000000026;
  v73._object = (void *)0xE000000000000000;
  v30._object = (void *)0x80000001000B79B0;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v73._countAndFlagsBits = 0;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v73);
  countAndFlagsBits = v32._countAndFlagsBits;
  object = v32._object;

  if (!v6)
  {
LABEL_30:
    v35 = 0;
    v37 = 0;
    goto LABEL_31;
  }
LABEL_28:
  v33 = objc_msgSend(v6, "subtitle");
  if (!v33)
    goto LABEL_30;
  v34 = v33;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v37 = v36;

LABEL_31:
  v38 = objc_msgSend(a1, "error");

  if (v38 || objc_msgSend(a1, "status") == (id)2)
  {
    swift_bridgeObjectRelease(object);
    v39 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v74._object = (void *)0xE000000000000000;
    v40._object = (void *)0x80000001000B7A20;
    v40._countAndFlagsBits = 0xD00000000000001BLL;
    v41._countAndFlagsBits = 0;
    v41._object = (void *)0xE000000000000000;
    v74._countAndFlagsBits = 0;
    v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)v39, v41, v74);
    countAndFlagsBits = v42._countAndFlagsBits;
    object = v42._object;

LABEL_34:
    v43 = v70;
    goto LABEL_35;
  }
  if (!objc_msgSend(a1, "status"))
  {
    swift_bridgeObjectRelease(object);
    v59 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v60._countAndFlagsBits = 0xD000000000000032;
    v75._object = (void *)0xE000000000000000;
    v60._object = (void *)0x80000001000B79E0;
    v61._countAndFlagsBits = 0;
    v61._object = (void *)0xE000000000000000;
    v75._countAndFlagsBits = 0;
    v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, (Swift::String_optional)0, (NSBundle)v59, v61, v75);
    countAndFlagsBits = v62._countAndFlagsBits;
    object = v62._object;

    goto LABEL_34;
  }
  v43 = v70;
  if (!v6 || (v58 = objc_msgSend(v6, "image")) == 0)
  {
    if (v71)
      v58 = objc_msgSend(v71, "image");
    else
      v58 = 0;
  }
  objc_msgSend(v70, "setImage:", v58);

LABEL_35:
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v43, "setCaption:", v44);

  if (v37)
  {
    swift_bridgeObjectRetain(v37);
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
  }
  else
  {
    v45 = 0;
  }
  objc_msgSend(v43, "setSubcaption:", v45);

  if (v37)
  {
    v46._countAndFlagsBits = v35;
    v46._object = v37;
    String.append(_:)(v46);
    swift_bridgeObjectRetain(object);
    v47._countAndFlagsBits = 32;
    v47._object = (void *)0xE100000000000000;
    String.append(_:)(v47);
    swift_bridgeObjectRelease(0xE100000000000000);
  }
  else
  {
    swift_bridgeObjectRetain(object);
  }
  v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v72, "setAccessibilityLabel:", v48);

  v49 = objc_msgSend(v69, "selectedMessage");
  if (v49
    && (v50 = v49, v51 = objc_msgSend(v49, "layout"), v50, v51)
    && (v52 = objc_opt_self(MSMessageLiveLayout),
        v53 = swift_dynamicCastObjCClass(v51, v52),
        v51,
        v53))
  {
    v54 = objc_msgSend(objc_allocWithZone((Class)MSMessageLiveLayout), "initWithAlternateLayout:", v43);
    v55 = v72;
    objc_msgSend(v72, "setLayout:", v54);

  }
  else
  {
    v55 = v72;
    objc_msgSend(v72, "setLayout:", v43);
  }
  v56 = objc_allocWithZone((Class)BCMessageInfo);
  swift_bridgeObjectRetain(object);
  sub_1000631C0(countAndFlagsBits, (uint64_t)object, v35, (uint64_t)v37, v67, countAndFlagsBits, (uint64_t)object, v64, v63, v66, v65);

  return v55;
}

void sub_10004B7E8()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_authenticationManager] = 0;
  v1 = OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_webViewController;
  static String._unconditionallyBridgeFromObjectiveC(_:)(BCOAuthRedirectURI);
  v3 = v2;
  v4 = objc_allocWithZone((Class)type metadata accessor for IMBWebViewController());
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v6 = objc_msgSend(v4, "initWithCallbackURI:", v5);

  *(_QWORD *)&v0[v1] = v6;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_session] = 0;
  v0[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_didShowAuth] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_aswasWindow] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x80000001000B7B30, "Business/IMBAuthenticationViewController.swift", 46, 2);
  __break(1u);
}

void sub_10004B8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  NSString v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void **v73;
  uint64_t (*v74)(uint64_t, uint64_t, void *);
  void *v75;
  void *v76;
  id v77;
  void **v78;
  id v79;
  uint64_t (*v80)(uint64_t, uint64_t, void *);
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t Strong;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t ObjectType;
  void (*v100)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  void *v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  NSString v108;
  NSString v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  id v113;
  void **v114;
  id v115;
  void *v116;
  id v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  id v123;
  char v124[24];
  char v125[24];
  void **aBlock;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, uint64_t, void *);
  void *v129;
  uint64_t (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;

  v4 = v3;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.Encoding(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  v17 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)(v4 + OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_authenticationManager);
  if (!v18)
    goto LABEL_9;
  v120 = v9;
  v121 = v8;
  v19 = objc_msgSend(v18, "authenticationRequest");
  v20 = objc_msgSend(v19, "oauth2");
  swift_unknownObjectRelease(v19);
  v21 = objc_opt_self(BCNativeOAuth2URLProvider);
  v22 = (void *)swift_dynamicCastObjCClass(v20, v21);
  if (!v22)
  {
    swift_unknownObjectRelease(v20);
LABEL_9:
    v40 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
    v123 = (id)static OS_os_log.default.getter(v40);
    v41 = static os_log_type_t.default.getter(v123);
    os_log(_:dso:log:type:_:)("IMBAuthenticationViewController nativeAuthenticationSessionDidFinish called with incorrect URLProvider", 102, 2, &_mh_execute_header, v123, v41, _swiftEmptyArrayStorage);

    return;
  }
  v122 = v12;
  v117 = v22;
  v118 = v20;
  v23 = objc_msgSend(v22, "responseEncryptionKey");
  if (!v23)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v25 = v24;
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
  }
  v26 = (_QWORD *)swift_allocObject(&unk_1000D8A90, 32, 7);
  v26[2] = 0;
  v27 = v26 + 2;
  v123 = v26;
  v26[3] = 0;
  v28 = swift_allocObject(&unk_1000D8AB8, 24, 7);
  v119 = v28;
  *(_QWORD *)(v28 + 16) = a3;
  v29 = (uint64_t *)(v28 + 16);
  if (a2)
  {
    v30 = swift_errorRetain(a3);
    static String.Encoding.utf8.getter(v30);
    v31 = String.data(using:allowLossyConversion:)(v17, 0, a1, a2);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    if (v33 >> 60 != 15)
    {
      v115 = (id)objc_opt_self(BCCryptor);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v35 = swift_allocObject(&unk_1000D8AE0, 32, 7);
      v116 = (void *)v31;
      v36 = v119;
      v37 = v123;
      *(_QWORD *)(v35 + 16) = v119;
      *(_QWORD *)(v35 + 24) = v37;
      v130 = sub_10004C240;
      v131 = v35;
      aBlock = _NSConcreteStackBlock;
      v127 = 1107296256;
      v128 = sub_100048D88;
      v129 = &unk_1000D8AF8;
      v38 = _Block_copy(&aBlock);
      v39 = v131;
      swift_retain(v36);
      swift_retain(v37);
      swift_release(v39);
      objc_msgSend(v115, "encryptData:key:completion:", isa, v23, v38);
      _Block_release(v38);

      sub_100010BE8((uint64_t)v116, v33);
      goto LABEL_12;
    }
  }
  else
  {
    swift_errorRetain(a3);
  }

LABEL_12:
  swift_beginAccess(v27, v125, 0, 0);
  v42 = *((_QWORD *)v123 + 3);
  swift_beginAccess(v29, v124, 0, 0);
  v43 = *v29;
  v44 = v122;
  if (*v29)
  {
    swift_bridgeObjectRetain(v42);
    swift_errorRetain(v43);
    v45 = _convertErrorToNSError(_:)(v43);
    swift_errorRelease(v43);
    if (v42)
      goto LABEL_14;
LABEL_17:
    v46 = 0;
    if (v45)
      goto LABEL_15;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain(v42);
  v45 = 0;
  if (!v42)
    goto LABEL_17;
LABEL_14:
  v46 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  if (v45)
  {
LABEL_15:
    v47 = (void *)_convertErrorToNSError(_:)(v45);
    swift_errorRelease(v45);
    goto LABEL_19;
  }
LABEL_18:
  v47 = 0;
LABEL_19:
  v48 = objc_msgSend(objc_allocWithZone((Class)BCNativeOAuth2Response), "initWithToken:error:", v46, v47);

  v49 = v48;
  v50 = sub_10004B0C0(v49, v4);
  v52 = v51;

  v53 = objc_msgSend(v49, "error");
  if (!v53)
    goto LABEL_33;
  v54 = objc_msgSend(v49, "error");
  if (!v54)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kAuthenticationErrorDomain);
    v62 = v64;
    goto LABEL_27;
  }
  v55 = v54;
  v56 = objc_msgSend(v54, "domain");

  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
  v59 = v58;

  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(kAuthenticationErrorDomain);
  v62 = v61;
  if (!v59)
  {
LABEL_27:
    swift_bridgeObjectRelease(v62);
    goto LABEL_28;
  }
  if (v57 == v60 && v59 == v61)
    goto LABEL_32;
  v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v59, v60, v61, 0);
  swift_bridgeObjectRelease(v59);
  swift_bridgeObjectRelease(v62);
  if ((v63 & 1) == 0)
  {
LABEL_28:
    v65 = objc_msgSend(v49, "error");
    if (v65)
    {
      v66 = v65;
      v67 = objc_msgSend(v65, "domain");

      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
      v59 = v69;

      v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCryptorErrorDomain);
      v72 = v71;
      if (v59)
      {
        if (v68 == v70 && v59 == v71)
        {
LABEL_32:
          swift_bridgeObjectRelease_n(v59, 2);
          goto LABEL_33;
        }
        v112 = _stringCompareWithSmolCheck(_:_:expecting:)(v68, v59, v70, v71, 0);
        swift_bridgeObjectRelease(v59);
        swift_bridgeObjectRelease(v72);
        if ((v112 & 1) != 0)
          goto LABEL_33;
LABEL_40:
        v94 = v4 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate;
        Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate);
        swift_unknownObjectRelease(Strong);
        if (Strong)
        {
          v96 = swift_unknownObjectWeakLoadStrong(v94);
          v92 = v118;
          if (v96)
          {
            v97 = v96;
            v98 = *(_QWORD *)(v94 + 8);
            ObjectType = swift_getObjectType(v96);
            v100 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 16);
            v101 = type metadata accessor for IMBAuthenticationViewController();
            v100(v4, v101, ObjectType, v98);
            swift_unknownObjectRelease(v97);
          }
          goto LABEL_43;
        }
LABEL_49:
        __break(1u);
        return;
      }
    }
    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(kCryptorErrorDomain);
      v72 = v93;
    }
    swift_bridgeObjectRelease(v72);
    goto LABEL_40;
  }
LABEL_33:
  v74 = *(uint64_t (**)(uint64_t, uint64_t, void *))(v4
                                                           + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_conversation);
  v75 = (void *)BCMessageRootAuthenticateKey;
  aBlock = *(void ***)(v4 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message);
  v73 = aBlock;
  v127 = (uint64_t)v50;
  v128 = v74;
  v129 = v52;
  v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))BCMessageRootAuthenticateKey;
  v131 = (uint64_t)v49;
  v76 = v50;
  v77 = v49;
  v78 = v73;
  v115 = v76;
  v79 = v76;
  v80 = v74;
  v116 = v52;
  v81 = v52;
  v82 = v75;
  sub_1000371DC(1);
  v83 = v4 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate;
  v84 = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate);
  swift_unknownObjectRelease(v84);
  if (!v84)
  {
    __break(1u);
    goto LABEL_49;
  }
  v85 = swift_unknownObjectWeakLoadStrong(v83);
  if (v85)
  {
    v86 = v85;
    v87 = *(_QWORD *)(v83 + 8);
    v88 = swift_getObjectType(v85);
    v114 = v78;
    v89 = v88;
    v113 = v79;
    v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 16);
    v91 = type metadata accessor for IMBAuthenticationViewController();
    v90(v4, v91, v89, v87);

    swift_unknownObjectRelease(v86);
  }
  else
  {

  }
  v92 = v118;
  v44 = v122;
  v50 = v115;
  v52 = v116;
LABEL_43:
  v102 = *(void **)(v4 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message);
  v103 = kBCAnalyticsMessagesForBusinessOAuth;
  v104 = objc_msgSend(v102, "version");
  v105 = objc_msgSend(v117, "authenticationSessionURL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v105);

  URL.displayDomainString.getter();
  v107 = v106;
  (*(void (**)(char *, uint64_t))(v120 + 8))(v44, v121);
  v108 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v107);
  v109 = (id)NSStringFromServerSideAuthStatus(objc_msgSend(v49, "status"));
  if (!v109)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v111 = v110;
    v109 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v111);
  }
  objc_msgSend((id)objc_opt_self(BCLogger), "logEventWithName:version:authDomain:status:", v103, v104, v108, v109);
  swift_unknownObjectRelease(v92);
  swift_release(v123);
  swift_release(v119);

}

uint64_t sub_10004C1CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004C1F0()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004C214()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004C240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100049D90(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_10004C248()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10004C26C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100049368(a1, a2, v2);
}

char *sub_10004C284(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;

  v2 = v1;
  v4 = sub_100007D40(&qword_1000ED070);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16)
    || (v13 = sub_10004F068(0x696669746E656469, 0xEA00000000007265), (v14 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)&v42),
        (swift_dynamicCast(&v40, &v42, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
    v22 = swift_bridgeObjectRelease(a1);
    if (qword_1000EBCB8 != -1)
      v22 = swift_once(&qword_1000EBCB8, sub_100082798);
    v23 = qword_1000F8A90;
    v24 = static os_log_type_t.error.getter(v22);
    os_log(_:dso:log:type:_:)("Unable to create timeslot: IdentifierDictionaryKey is missing", 61, 2, &_mh_execute_header, v23, v24, _swiftEmptyArrayStorage);
    goto LABEL_13;
  }
  v15 = v41;
  if (!*(_QWORD *)(a1 + 16)
    || (v16 = v40, v17 = sub_10004F068(0x6D69547472617473, 0xE900000000000065), (v18 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v17, (uint64_t)&v42),
        (swift_dynamicCast(&v40, &v42, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
    swift_bridgeObjectRelease(v15);
    v27 = swift_bridgeObjectRelease(a1);
    if (qword_1000EBCB8 != -1)
      v27 = swift_once(&qword_1000EBCB8, sub_100082798);
    v28 = qword_1000F8A90;
    v29 = static os_log_type_t.error.getter(v27);
    os_log(_:dso:log:type:_:)("Unable to create timeslot: StartTimeDictionaryKey is missing", 60, 2, &_mh_execute_header, v28, v29, _swiftEmptyArrayStorage);
    goto LABEL_13;
  }
  v19 = v41;
  v39 = v40;
  if (*(_QWORD *)(a1 + 16) && (v20 = sub_10004F068(0x6E6F697461727564, 0xE800000000000000), (v21 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v20, (uint64_t)&v42);
  }
  else
  {
    v42 = 0u;
    v43 = 0u;
  }
  swift_bridgeObjectRelease(a1);
  if (!*((_QWORD *)&v43 + 1))
  {
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v15);
    v34 = sub_100010A98((uint64_t)&v42, (uint64_t *)&unk_1000EEB60);
LABEL_27:
    if (qword_1000EBCB8 != -1)
      v34 = swift_once(&qword_1000EBCB8, sub_100082798);
    v35 = qword_1000F8A90;
    v36 = static os_log_type_t.error.getter(v34);
    os_log(_:dso:log:type:_:)("Unable to create timeslot: DurationDictionaryKey is missing", 59, 2, &_mh_execute_header, v35, v36, _swiftEmptyArrayStorage);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(&v40, &v42, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v19);
    v34 = swift_bridgeObjectRelease(v15);
    goto LABEL_27;
  }
  v30 = v40;
  Date.init(fromUTCString:)(v39, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    v37 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v37(v12, v7, v8);
    *((_QWORD *)v2 + 2) = v16;
    *((_QWORD *)v2 + 3) = v15;
    v37(&v2[OBJC_IVAR____TtC8Business19IMBProposedTimeslot_startTime], v12, v8);
    *(_QWORD *)&v2[OBJC_IVAR____TtC8Business19IMBProposedTimeslot_duration] = v30;
    return v2;
  }
  swift_bridgeObjectRelease(v15);
  v31 = sub_100010A98((uint64_t)v7, &qword_1000ED070);
  if (qword_1000EBCB8 != -1)
    v31 = swift_once(&qword_1000EBCB8, sub_100082798);
  v32 = qword_1000F8A90;
  v33 = static os_log_type_t.error.getter(v31);
  os_log(_:dso:log:type:_:)("Unable to create proposed timeslot because the date specified is not UTC", 72, 2, &_mh_execute_header, v32, v33, _swiftEmptyArrayStorage);
LABEL_13:
  v25 = type metadata accessor for IMBProposedTimeslot(0);
  swift_deallocPartialClassInstance(v2, v25, *(unsigned int *)(*(_QWORD *)v2 + 48), *(unsigned __int16 *)(*(_QWORD *)v2 + 52));
  return 0;
}

void *sub_10004C738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char isUniquelyReferenced_nonNull_native;
  Swift::String v5;
  char v6;
  uint64_t v7;
  char v8;
  _OWORD v10[2];
  Swift::String v11;
  void *v12;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v12 = &type metadata for String;
  v11._countAndFlagsBits = v2;
  v11._object = v3;
  sub_100009CF0(&v11, v10);
  swift_bridgeObjectRetain(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v10, 0x696669746E656469, 0xEA00000000007265, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(0x8000000000000000);
  v5 = Date.toUTCString()();
  v12 = &type metadata for String;
  v11 = v5;
  sub_100009CF0(&v11, v10);
  v6 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v10, 0x6D69547472617473, 0xE900000000000065, v6);
  swift_bridgeObjectRelease(0x8000000000000000);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business19IMBProposedTimeslot_duration);
  v12 = &type metadata for Int;
  v11._countAndFlagsBits = v7;
  sub_100009CF0(&v11, v10);
  v8 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v10, 0x6E6F697461727564, 0xE800000000000000, v8);
  swift_bridgeObjectRelease(0x8000000000000000);
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_10004C8A0()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[3]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Business19IMBProposedTimeslot_startTime;
  v2 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10004C8F8()
{
  return type metadata accessor for IMBProposedTimeslot(0);
}

uint64_t type metadata accessor for IMBProposedTimeslot(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EDC38;
  if (!qword_1000EDC38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IMBProposedTimeslot);
  return result;
}

uint64_t sub_10004C93C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_1000B19E8;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10004C9C0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007D40(&qword_1000EDD38);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_37;
      v15 = *(_QWORD *)(v29 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_37;
        v15 = *(_QWORD *)(v29 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_37;
          v15 = *(_QWORD *)(v29 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v41);
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v19;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v20;
    *((_QWORD *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_100009CF0(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_100009CF0(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_100009CF0(v37, v38);
    sub_100009CF0(v38, &v34);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v30;
    *(_OWORD *)(v11 + 16) = v31;
    *(_QWORD *)(v11 + 32) = v32;
    result = (uint64_t)sub_100009CF0(&v34, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_10004F0CC(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v29 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_10004CD84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t *v9;
  uint64_t *v10;
  unint64_t result;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[16];
  uint64_t v44;
  _BYTE v45[32];
  __int128 v46;
  _OWORD v47[2];
  __int128 v48;
  _OWORD v49[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007D40(&qword_1000EDD58);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v36 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v35 = (unint64_t)(63 - v4) >> 6;
  v7 = v49;
  v8 = v47;
  v9 = &v42;
  v10 = &v44;
  result = swift_bridgeObjectRetain(v1);
  v37 = 0;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v19 = v37 + 1;
  if (__OFADD__(v37, 1))
    goto LABEL_35;
  if (v19 >= v35)
    goto LABEL_32;
  v20 = *(_QWORD *)(v36 + 8 * v19);
  v21 = v37 + 1;
  if (!v20)
  {
    v21 = v37 + 2;
    if (v37 + 2 >= v35)
      goto LABEL_32;
    v20 = *(_QWORD *)(v36 + 8 * v21);
    if (!v20)
    {
      v21 = v37 + 3;
      if (v37 + 3 >= v35)
        goto LABEL_32;
      v20 = *(_QWORD *)(v36 + 8 * v21);
      if (!v20)
      {
        v21 = v37 + 4;
        if (v37 + 4 >= v35)
          goto LABEL_32;
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          v22 = v37 + 5;
          if (v37 + 5 < v35)
          {
            v20 = *(_QWORD *)(v36 + 8 * v22);
            if (v20)
            {
              v21 = v37 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v35)
                break;
              v20 = *(_QWORD *)(v36 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_10004F0CC(v1);
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  v37 = v21;
  v38 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v6)) | (v37 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    sub_100009C74(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v7);
    *(_QWORD *)&v48 = v25;
    *((_QWORD *)&v48 + 1) = v24;
    v46 = v48;
    v47[0] = v49[0];
    v47[1] = v49[1];
    v40 = v25;
    v41 = v24;
    sub_100009CF0(v8, v39);
    swift_bridgeObjectRetain(v24);
    v26 = sub_100007D40((uint64_t *)&unk_1000EEB60);
    swift_dynamicCast(v9, v39, (char *)&type metadata for Any + 8, v26, 7);
    v28 = v40;
    v27 = v41;
    sub_10002B588((uint64_t)v9, (uint64_t)v10);
    sub_10002B588((uint64_t)v10, (uint64_t)v45);
    sub_10002B588((uint64_t)v45, (uint64_t)v43);
    result = sub_10004F068(v28, v27);
    v29 = result;
    if ((v30 & 1) != 0)
    {
      v12 = v10;
      v13 = v9;
      v14 = v1;
      v15 = v8;
      v16 = v7;
      v17 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v17[1]);
      *v17 = v28;
      v17[1] = v27;
      v7 = v16;
      v8 = v15;
      v1 = v14;
      v9 = v13;
      v10 = v12;
      result = sub_10004F898((uint64_t)v43, v3[7] + 32 * v29);
      v6 = v38;
      if (!v38)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v31 = (uint64_t *)(v3[6] + 16 * result);
    *v31 = v28;
    v31[1] = v27;
    result = sub_10002B588((uint64_t)v43, v3[7] + 32 * result);
    v32 = v3[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_34;
    v3[2] = v34;
    v6 = v38;
    if (!v38)
      goto LABEL_11;
LABEL_10:
    v38 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_10004D120(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t result;
  int64_t i;
  char *v11;
  void *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t *v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _OWORD v50[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007D40(&qword_1000ED5B8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v41 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v40 = (unint64_t)(63 - v4) >> 6;
  v7 = &v47;
  v8 = &v49;
  result = swift_bridgeObjectRetain(v1);
  i = 0;
  v11 = (char *)&type metadata for Any + 8;
  v12 = &type metadata for String;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v21 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v21 >= v40)
    goto LABEL_32;
  v22 = *(_QWORD *)(v41 + 8 * v21);
  v23 = i + 1;
  if (!v22)
  {
    v23 = i + 2;
    if (i + 2 >= v40)
      goto LABEL_32;
    v22 = *(_QWORD *)(v41 + 8 * v23);
    if (!v22)
    {
      v23 = i + 3;
      if (i + 3 >= v40)
        goto LABEL_32;
      v22 = *(_QWORD *)(v41 + 8 * v23);
      if (!v22)
      {
        v23 = i + 4;
        if (i + 4 >= v40)
          goto LABEL_32;
        v22 = *(_QWORD *)(v41 + 8 * v23);
        if (!v22)
        {
          v24 = i + 5;
          if (i + 5 < v40)
          {
            v22 = *(_QWORD *)(v41 + 8 * v24);
            if (v22)
            {
              v23 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v23 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_36;
              if (v23 >= v40)
                break;
              v22 = *(_QWORD *)(v41 + 8 * v23);
              ++v24;
              if (v22)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_10004F0CC(v1);
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  v43 = (v22 - 1) & v22;
  v20 = __clz(__rbit64(v22)) + (v23 << 6);
  for (i = v23; ; v20 = __clz(__rbit64(v6)) | (i << 6))
  {
    v25 = 16 * v20;
    v26 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v20);
    v28 = *v26;
    v27 = v26[1];
    v29 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v25);
    v30 = *v29;
    v31 = v29[1];
    v45 = v28;
    v46 = v27;
    v44[0] = v30;
    v44[1] = v31;
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v31);
    swift_dynamicCast(v7, v44, v12, v11, 7);
    v32 = v45;
    v33 = v46;
    sub_100009CF0(v7, v8);
    sub_100009CF0(v8, v50);
    sub_100009CF0(v50, &v48);
    result = sub_10004F068(v32, v33);
    v34 = result;
    if ((v35 & 1) != 0)
    {
      v42 = i;
      v13 = v8;
      v14 = v7;
      v15 = v1;
      v16 = v12;
      v17 = v11;
      v18 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v18[1]);
      *v18 = v32;
      v18[1] = v33;
      v11 = v17;
      v12 = v16;
      v1 = v15;
      v7 = v14;
      v8 = v13;
      i = v42;
      v19 = (_QWORD *)(v3[7] + 32 * v34);
      sub_100010C40(v19);
      result = (unint64_t)sub_100009CF0(&v48, v19);
      v6 = v43;
      if (!v43)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v36 = (uint64_t *)(v3[6] + 16 * result);
    *v36 = v32;
    v36[1] = v33;
    result = (unint64_t)sub_100009CF0(&v48, (_OWORD *)(v3[7] + 32 * result));
    v37 = v3[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_34;
    v3[2] = v39;
    v6 = v43;
    if (!v43)
      goto LABEL_11;
LABEL_10:
    v43 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_10004D488(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t result;
  int64_t i;
  char *v11;
  void *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t *v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _OWORD v46[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007D40(&qword_1000ED5B8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v37 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v36 = (unint64_t)(63 - v4) >> 6;
  v7 = &v43;
  v8 = &v45;
  result = swift_bridgeObjectRetain(v1);
  i = 0;
  v11 = (char *)&type metadata for Any + 8;
  v12 = &type metadata for Double;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v21 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v21 >= v36)
    goto LABEL_32;
  v22 = *(_QWORD *)(v37 + 8 * v21);
  v23 = i + 1;
  if (!v22)
  {
    v23 = i + 2;
    if (i + 2 >= v36)
      goto LABEL_32;
    v22 = *(_QWORD *)(v37 + 8 * v23);
    if (!v22)
    {
      v23 = i + 3;
      if (i + 3 >= v36)
        goto LABEL_32;
      v22 = *(_QWORD *)(v37 + 8 * v23);
      if (!v22)
      {
        v23 = i + 4;
        if (i + 4 >= v36)
          goto LABEL_32;
        v22 = *(_QWORD *)(v37 + 8 * v23);
        if (!v22)
        {
          v24 = i + 5;
          if (i + 5 < v36)
          {
            v22 = *(_QWORD *)(v37 + 8 * v24);
            if (v22)
            {
              v23 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v23 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_36;
              if (v23 >= v36)
                break;
              v22 = *(_QWORD *)(v37 + 8 * v23);
              ++v24;
              if (v22)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_10004F0CC(v1);
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  v39 = (v22 - 1) & v22;
  v20 = __clz(__rbit64(v22)) + (v23 << 6);
  for (i = v23; ; v20 = __clz(__rbit64(v6)) | (i << 6))
  {
    v25 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v20);
    v26 = v25[1];
    v27 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v20);
    v41 = *v25;
    v42 = v26;
    v40 = v27;
    swift_bridgeObjectRetain(v26);
    swift_dynamicCast(v7, &v40, v12, v11, 7);
    v28 = v41;
    v29 = v42;
    sub_100009CF0(v7, v8);
    sub_100009CF0(v8, v46);
    sub_100009CF0(v46, &v44);
    result = sub_10004F068(v28, v29);
    v30 = result;
    if ((v31 & 1) != 0)
    {
      v38 = i;
      v13 = v8;
      v14 = v7;
      v15 = v1;
      v16 = v12;
      v17 = v11;
      v18 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v18[1]);
      *v18 = v28;
      v18[1] = v29;
      v11 = v17;
      v12 = v16;
      v1 = v15;
      v7 = v14;
      v8 = v13;
      i = v38;
      v19 = (_QWORD *)(v3[7] + 32 * v30);
      sub_100010C40(v19);
      result = (unint64_t)sub_100009CF0(&v44, v19);
      v6 = v39;
      if (!v39)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v32 = (uint64_t *)(v3[6] + 16 * result);
    *v32 = v28;
    v32[1] = v29;
    result = (unint64_t)sub_100009CF0(&v44, (_OWORD *)(v3[7] + 32 * result));
    v33 = v3[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_34;
    v3[2] = v35;
    v6 = v39;
    if (!v39)
      goto LABEL_11;
LABEL_10:
    v39 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_10004D7E0(uint64_t a1)
{
  return sub_10004D7F4(a1, (unint64_t *)&qword_1000EEB80, UIView_ptr);
}

unint64_t sub_10004D7F4(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  unint64_t result;
  int64_t i;
  char *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  int64_t v17;
  char *v18;
  uint64_t *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  _OWORD v51[2];

  v3 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    sub_100007D40(&qword_1000ED5B8);
    v5 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v4);
  }
  else
  {
    v5 = &_swiftEmptyDictionarySingleton;
  }
  v41 = v3 + 64;
  v6 = -1 << *(_BYTE *)(v3 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 64);
  v40 = (unint64_t)(63 - v6) >> 6;
  v9 = &v48;
  v10 = &v50;
  result = swift_bridgeObjectRetain(v3);
  i = 0;
  v13 = (char *)&type metadata for Any + 8;
  if (v8)
    goto LABEL_10;
LABEL_11:
  v23 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v23 >= v40)
    goto LABEL_32;
  v24 = *(_QWORD *)(v41 + 8 * v23);
  v25 = i + 1;
  if (!v24)
  {
    v25 = i + 2;
    if (i + 2 >= v40)
      goto LABEL_32;
    v24 = *(_QWORD *)(v41 + 8 * v25);
    if (!v24)
    {
      v25 = i + 3;
      if (i + 3 >= v40)
        goto LABEL_32;
      v24 = *(_QWORD *)(v41 + 8 * v25);
      if (!v24)
      {
        v25 = i + 4;
        if (i + 4 >= v40)
          goto LABEL_32;
        v24 = *(_QWORD *)(v41 + 8 * v25);
        if (!v24)
        {
          v26 = i + 5;
          if (i + 5 < v40)
          {
            v24 = *(_QWORD *)(v41 + 8 * v26);
            if (v24)
            {
              v25 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v25 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_36;
              if (v25 >= v40)
                break;
              v24 = *(_QWORD *)(v41 + 8 * v25);
              ++v26;
              if (v24)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_10004F0CC(v3);
          return (unint64_t)v5;
        }
      }
    }
  }
LABEL_26:
  v8 = (v24 - 1) & v24;
  v22 = __clz(__rbit64(v24)) + (v25 << 6);
  for (i = v25; ; v22 = v21 | (i << 6))
  {
    v27 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v22);
    v28 = v27[1];
    v29 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v22);
    v46 = *v27;
    v47 = v28;
    v45 = v29;
    v30 = sub_1000090C8(0, a2, a3);
    swift_bridgeObjectRetain(v28);
    v31 = v29;
    swift_dynamicCast(v9, &v45, v30, v13, 7);
    v33 = v46;
    v32 = v47;
    sub_100009CF0(v9, v10);
    sub_100009CF0(v10, v51);
    sub_100009CF0(v51, &v49);
    result = sub_10004F068(v33, v32);
    v34 = result;
    if ((v35 & 1) != 0)
    {
      v42 = v8;
      v14 = v10;
      v15 = v9;
      v16 = v3;
      v17 = i;
      v18 = v13;
      v19 = (uint64_t *)(v5[6] + 16 * result);
      swift_bridgeObjectRelease(v19[1]);
      *v19 = v33;
      v19[1] = v32;
      v13 = v18;
      i = v17;
      v3 = v16;
      v9 = v15;
      v10 = v14;
      v8 = v42;
      v20 = (_QWORD *)(v5[7] + 32 * v34);
      sub_100010C40(v20);
      result = (unint64_t)sub_100009CF0(&v49, v20);
      if (!v42)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v5[2] >= v5[3])
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v36 = (uint64_t *)(v5[6] + 16 * result);
    *v36 = v33;
    v36[1] = v32;
    result = (unint64_t)sub_100009CF0(&v49, (_OWORD *)(v5[7] + 32 * result));
    v37 = v5[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_34;
    v5[2] = v39;
    if (!v8)
      goto LABEL_11;
LABEL_10:
    v21 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_10004DB50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007D40(&qword_1000EDD28);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    result = sub_10004F104((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004DC58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007D40(&qword_1000EDD18);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100010BA4(v7, (uint64_t)&v14, &qword_1000EDD20);
    v8 = v14;
    result = sub_10004F104(v14);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    result = (unint64_t)sub_100009CF0(&v15, (_OWORD *)(v4[7] + 32 * result));
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v7 += 40;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004DD84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_100007D40(&qword_1000EDD30);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
    v9 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v27 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v27);
    return (unint64_t)v9;
  }
  sub_100007D40(&qword_1000ED608);
  v8 = static _DictionaryStorage.allocate(capacity:)(v7);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_9;
  v11 = *(int *)(v2 + 48);
  v12 = v8 + 64;
  v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v29 = a1;
  v14 = a1 + v13;
  v15 = *(_QWORD *)(v3 + 72);
  swift_retain(v8);
  while (1)
  {
    sub_100010BA4(v14, (uint64_t)v6, &qword_1000EDD30);
    result = sub_10004F190((uint64_t)v6, v16, v17);
    if ((v19 & 1) != 0)
      break;
    v21 = result;
    *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v22 = v9[6];
    v23 = type metadata accessor for IndexPath(0, v19, v20);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v21, v6, v23);
    *(_QWORD *)(v9[7] + 8 * v21) = *(_QWORD *)&v6[v11];
    v24 = v9[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_12;
    v9[2] = v26;
    v14 += v15;
    if (!--v10)
    {
      swift_release(v9);
      v27 = v29;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10004DF18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007D40(&qword_1000ED5B8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100010BA4(v7, (uint64_t)&v16, &qword_1000EDD50);
    v8 = v16;
    v9 = v17;
    result = sub_10004F068(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_100009CF0(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004E04C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007D40(&qword_1000EDD60);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_QWORD *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(*v6);
    swift_bridgeObjectRetain(v8);
    result = sub_10004F068(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004E16C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t result;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007D40(&qword_1000EDD40);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = (void *)*(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    v10 = v7;
    swift_bridgeObjectRetain(v9);
    result = sub_10004F1FC(v7);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v7;
    v13 = (_QWORD *)(v4[7] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v16;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004E27C(uint64_t a1)
{
  return sub_10004E288(a1, &qword_1000EDD10);
}

unint64_t sub_10004E288(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007D40(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (void **)(a1 + 48);
  while (1)
  {
    v8 = (uint64_t)*(v7 - 2);
    v9 = (uint64_t)*(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    v11 = v10;
    result = sub_10004F068(v8, v9);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v5[6] + 16 * result);
    *v14 = v8;
    v14[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v11;
    v15 = v5[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004E39C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007D40(&qword_1000EDD08);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_10004F068(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10004E4AC(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, _QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  NSURL *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t inited;
  _QWORD *v40;
  unint64_t v41;
  id v42;
  NSURL *v43;
  void *v44;
  void *v45;
  void *v46;
  unint64_t v47;
  Class isa;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  _QWORD aBlock[5];
  uint64_t v61;
  char v62[56];

  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  v12 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)objc_opt_self(BCConstants);
  if (objc_msgSend(v13, "isRunningInMacCatalyst"))
  {
    v14 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    v59 = a1;
    if (v14)
    {
      v16 = v14;
      URL._bridgeToObjectiveC()(v15);
      v58 = v17;
      v18 = objc_msgSend(objc_allocWithZone((Class)_LSOpenConfiguration), "init");
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
      v19 = *(unsigned __int8 *)(v9 + 80);
      v20 = a4;
      v21 = (v19 + 16) & ~v19;
      v22 = (uint64_t)a3;
      v23 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
      v24 = swift_allocObject(&unk_1000D8B90, v23 + 16, v19 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24 + v21, v12, v8);
      v25 = (uint64_t *)(v24 + v23);
      *v25 = v22;
      v25[1] = v20;
      aBlock[4] = sub_10004EFEC;
      v61 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004EEE0;
      aBlock[3] = &unk_1000D8BA8;
      v26 = _Block_copy(aBlock);
      v27 = v61;
      sub_10002B604(v22, v20);
      swift_release(v27);
      v28 = v58;
      objc_msgSend(v16, "openURL:configuration:completionHandler:", v58, v18, v26);
      _Block_release(v26);

    }
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v29 = qword_1000F8A90;
    v30 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v31 = swift_allocObject(v30, 72, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1000AF070;
    v32 = sub_1000086B8(&qword_1000EDCE8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v33 = dispatch thunk of CustomStringConvertible.description.getter(v8, v32);
    v35 = v34;
    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_QWORD *)(v31 + 64) = sub_100009084();
    *(_QWORD *)(v31 + 32) = v33;
    *(_QWORD *)(v31 + 40) = v35;
    v36 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("attempted to open URL: %@", 25, 2, &_mh_execute_header, v29, v36, v31);
    return swift_bridgeObjectRelease(v31);
  }
  else if (objc_msgSend(v13, "isRunningInMac"))
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000042, 0x80000001000B7D20, "Business/URLHelper.swift", 24, 2, 65, 0);
    __break(1u);
  }
  else
  {
    if ((a2 & 1) != 0)
    {
      v38 = sub_100007D40(&qword_1000EDCF0);
      inited = swift_initStackObject(v38, v62);
      *(_OWORD *)(inited + 16) = xmmword_1000AF070;
      *(_QWORD *)(inited + 32) = 0xD000000000000018;
      *(_QWORD *)(inited + 40) = 0x80000001000B7CE0;
      *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", 1);
      v40 = (_QWORD *)inited;
    }
    else
    {
      v40 = _swiftEmptyArrayStorage;
    }
    v41 = sub_10004E288((uint64_t)v40, &qword_1000EDD00);
    v42 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (v42)
    {
      v44 = v42;
      URL._bridgeToObjectiveC()(v43);
      v46 = v45;
      v47 = sub_10004D7F4(v41, &qword_1000EDCF8, NSNumber_ptr);
      swift_bridgeObjectRelease(v41);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v47);
      objc_msgSend(v44, "openURL:withOptions:", v46, isa);

    }
    else
    {
      swift_bridgeObjectRelease(v41);
    }
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v49 = qword_1000F8A90;
    v50 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v51 = swift_allocObject(v50, 72, 7);
    *(_OWORD *)(v51 + 16) = xmmword_1000AF070;
    v52 = sub_1000086B8(&qword_1000EDCE8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v53 = dispatch thunk of CustomStringConvertible.description.getter(v8, v52);
    v55 = v54;
    *(_QWORD *)(v51 + 56) = &type metadata for String;
    *(_QWORD *)(v51 + 64) = sub_100009084();
    *(_QWORD *)(v51 + 32) = v53;
    *(_QWORD *)(v51 + 40) = v55;
    v56 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("attempted to open URL: %{private}@", 34, 2, &_mh_execute_header, v49, v56, v51);
    result = swift_bridgeObjectRelease(v51);
    if (a3)
      return a3(1, 0);
  }
  return result;
}

uint64_t sub_10004EA08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)objc_opt_self(BCConstants);
  if ((objc_msgSend(v6, "isRunningInMacCatalyst") & 1) != 0
    || objc_msgSend(v6, "isRunningInMac"))
  {
    return URL.init(fileURLWithPath:)(0xD000000000000038, 0x80000001000B7E90);
  }
  URL.init(string:)(0xD00000000000002CLL, 0x80000001000B7E20);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  sub_10004AF88((uint64_t)v5);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x80000001000B7E50, "Business/URLHelper.swift", 24, 2, 31, 0);
  __break(1u);
  return result;
}

void sub_10004EB94()
{
  double v0;
  Swift::String v1;
  void *object;

  v0 = Date.timeIntervalSinceReferenceDate.getter();
  if ((~*(_QWORD *)&v0 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v0 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v0 < 9.22337204e18)
  {
    v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v1._object;
    String.append(_:)(v1);
    swift_bridgeObjectRelease(object);
    URL.init(string:)(0x3A776F68736C6163, 0xE800000000000000);
    swift_bridgeObjectRelease(0xE800000000000000);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_10004EC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v6 = qword_1000F8A90;
    v7 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v8 = swift_allocObject(v7, 112, 7);
    *(_OWORD *)(v8 + 16) = xmmword_1000ADFC0;
    v9 = type metadata accessor for URL(0);
    v10 = sub_1000086B8(&qword_1000EDCE8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v11 = dispatch thunk of CustomStringConvertible.description.getter(v9, v10);
    v13 = v12;
    *(_QWORD *)(v8 + 56) = &type metadata for String;
    v14 = sub_100009084();
    *(_QWORD *)(v8 + 64) = v14;
    *(_QWORD *)(v8 + 32) = v11;
    *(_QWORD *)(v8 + 40) = v13;
    v29 = a2;
    swift_errorRetain(a2);
    v15 = sub_100007D40(&qword_1000F07D0);
    v16 = String.init<A>(describing:)(&v29, v15);
    *(_QWORD *)(v8 + 96) = &type metadata for String;
    *(_QWORD *)(v8 + 104) = v14;
    *(_QWORD *)(v8 + 72) = v16;
    *(_QWORD *)(v8 + 80) = v17;
    v18 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("Failed to open URL: %{private}@ error: %@", 41, 2, &_mh_execute_header, v6, v18, v8);
    swift_bridgeObjectRelease(v8);
    result = swift_errorRelease(a2);
    if (a4)
      return a4(a2 == 0, a2);
  }
  else
  {
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v20 = qword_1000F8A90;
    v21 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v22 = swift_allocObject(v21, 72, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1000AF070;
    v23 = type metadata accessor for URL(0);
    v24 = sub_1000086B8(&qword_1000EDCE8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v25 = dispatch thunk of CustomStringConvertible.description.getter(v23, v24);
    v27 = v26;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    *(_QWORD *)(v22 + 64) = sub_100009084();
    *(_QWORD *)(v22 + 32) = v25;
    *(_QWORD *)(v22 + 40) = v27;
    v28 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("Successfully opened URL: %{private}@", 36, 2, &_mh_execute_header, v20, v28, v22);
    result = swift_bridgeObjectRelease(v22);
    if (a4)
      return a4(a2 == 0, a2);
  }
  return result;
}

uint64_t sub_10004EEE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  uint64_t v6;
  id v7;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  else
    v6 = 0;
  swift_retain(v4);
  v7 = a3;
  v5(v6, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_10004EF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_10004EFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10004EC6C(a1, a2, v2 + v6, *(uint64_t (**)(BOOL, uint64_t))(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10004F050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004F060(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10004F068(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, a1, a2);
  v4 = Hasher._finalize()();
  return sub_10004F338(a1, a2, v4);
}

uint64_t sub_10004F0CC(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

unint64_t sub_10004F0D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10004F418(a1, v4);
}

unint64_t sub_10004F104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  Hasher.init(_seed:)(v7);
  String.hash(into:)(v7, v2, v4);
  v5 = Hasher._finalize()();
  swift_bridgeObjectRelease(v4);
  return sub_10004F4DC(a1, v5);
}

unint64_t sub_10004F190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = v3;
  v6 = *(_QWORD *)(v4 + 40);
  v7 = type metadata accessor for IndexPath(0, a2, a3);
  v8 = sub_1000086B8((unint64_t *)&qword_1000ED600, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v6, v7, v8);
  return sub_10004F650(a1, v9, v10);
}

unint64_t sub_10004F1FC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  if (a1)
  {
    Hasher._combine(_:)(1u);
    type metadata accessor for CFString(0);
    v3 = v2;
    v4 = sub_1000086B8(&qword_1000EDD48, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1000AEF44);
    v5 = a1;
    _CFObject.hash(into:)(v8, v3, v4);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v6 = Hasher._finalize()();
  return sub_10004F790((uint64_t)a1, v6);
}

unint64_t sub_10004F2B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  Hasher.init(_seed:)(v7);
  String.hash(into:)(v7, v2, v4);
  v5 = Hasher._finalize()();
  swift_bridgeObjectRelease(v4);
  return sub_10004F4DC(a1, v5);
}

unint64_t sub_10004F338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10004F418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_100008FC8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_100009004((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10004F4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10004F650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v20 = a1;
  v6 = type metadata accessor for IndexPath(0, a2, a3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = -1 << *(_BYTE *)(v4 + 32);
  v12 = a2 & ~v11;
  if (((*(_QWORD *)(v4 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    v14 = *(_QWORD *)(v7 + 72);
    v15 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v15(v10, *(_QWORD *)(v4 + 48) + v14 * v12, v6);
      v16 = sub_1000086B8((unint64_t *)&qword_1000ECC90, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v17 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v20, v6, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v17 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
    }
    while (((*(_QWORD *)(v4 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

unint64_t sub_10004F790(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = v2;
    v8 = ~v4;
    do
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        if (a1)
        {
          type metadata accessor for CFString(0);
          v11 = v10;
          v12 = sub_1000086B8(&qword_1000EDD48, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1000AEF44);
          v13 = v9;
          LOBYTE(v11) = static _CFObject.== infix(_:_:)(v13, a1, v11, v12);

          if ((v11 & 1) != 0)
            return v5;
        }
      }
      else if (!a1)
      {
        return v5;
      }
      v5 = (v5 + 1) & v8;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_10004F898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40((uint64_t *)&unk_1000EEB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004F8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_10004F91C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10004F950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10004F994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10004F9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10004FA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10004FA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004FA6C);
}

uint64_t sub_10004FA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10004FAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004FAB4);
}

uint64_t sub_10004FAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for URLHelper(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EDDC0;
  if (!qword_1000EDDC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for URLHelper);
  return result;
}

uint64_t sub_10004FB30(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_10004FB98(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10004FBD8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10004FC24 + 4 * byte_1000B1A34[a2]))(1414745936);
}

uint64_t sub_10004FC24(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1414745936 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 1414745936, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE400000000000000);
  return v2 & 1;
}

uint64_t sub_10004FCB4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 28526;
  else
    v3 = 7562617;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE200000000000000;
  if ((a2 & 1) != 0)
    v5 = 28526;
  else
    v5 = 7562617;
  if ((a2 & 1) != 0)
    v6 = 0xE200000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10004FD44(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x7972616D697270;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x7261646E6F636573;
    else
      v4 = 0x7463757274736564;
    if (v3 == 1)
      v5 = 0xE900000000000079;
    else
      v5 = 0xEB00000000657669;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x7261646E6F636573;
      else
        v2 = 0x7463757274736564;
      if (v6 == 1)
        v7 = 0xE900000000000079;
      else
        v7 = 0xEB00000000657669;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = 0x7972616D697270;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v4 != 0x7972616D697270)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_10004FE74(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_10004FEC0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_10004FF2C + 4 * byte_1000B1A3C[a2]))(v2 + 1);
}

uint64_t sub_10004FF2C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000001000B3A30;
  if (a1 == v1 + 1 && v2 == 0x80000001000B3A30)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 1, 0x80000001000B3A30, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

uint64_t sub_10004FFD8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C6D746878;
  else
    v3 = 1819112552;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C6D746878;
  else
    v5 = 1819112552;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_100050070(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xED00006E6F697463;
  v3 = 0x656E6E6F43206F4ELL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 1768319319;
    else
      v5 = 0x72616C756C6C6543;
    if (v4 == 1)
      v6 = 0xE400000000000000;
    else
      v6 = 0xE800000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x656E6E6F43206F4ELL;
  v6 = 0xED00006E6F697463;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 1768319319;
    else
      v3 = 0x72616C756C6C6543;
    if (v7 == 1)
      v2 = 0xE400000000000000;
    else
      v2 = 0xE800000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

uint64_t sub_100050188(char *a1, char *a2)
{
  return sub_10004FFD8(*a1, *a2);
}

Swift::Int sub_100050194()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x6C6D746878;
  else
    v2 = 1819112552;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100050208(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x6C6D746878;
  else
    v2 = 1819112552;
  if (*v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100050258()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x6C6D746878;
  else
    v2 = 1819112552;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1000502C8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D5F10, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100050324(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1819112552;
  if (*v1)
    v2 = 0x6C6D746878;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100050358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  char v36;
  char *v37;
  Swift::String v38;
  Swift::Int v39;
  void (*v40)(char *, char *, uint64_t);
  unint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  int v62;
  char *v63;
  char *v64;
  char **v65;
  uint64_t v66;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  __int128 v86;
  __int128 v87;

  v2 = v1;
  v4 = type metadata accessor for String.Encoding(0);
  v80 = *(_QWORD *)(v4 - 8);
  v81 = v4;
  __chkstk_darwin(v4, v5);
  v82 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v7, v8);
  v79 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83, v11);
  v78 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007D40(&qword_1000ED070);
  v15 = __chkstk_darwin(v13, v14);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  v20 = (char *)&v78 - v19;
  v21 = type metadata accessor for Date(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Business10IMBContent_title);
  *v26 = 0;
  v26[1] = 0;
  v27 = v2 + OBJC_IVAR____TtC8Business10IMBContent_date;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v28(v2 + OBJC_IVAR____TtC8Business10IMBContent_date, 1, 1, v21);
  v29 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Business10IMBContent_doc);
  *v29 = 0;
  v29[1] = 0;
  if (!*(_QWORD *)(a1 + 16)
    || (v30 = sub_10004F068(1702125924, 0xE400000000000000), (v31 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v30, (uint64_t)&v86),
        (swift_dynamicCast(&v84, &v86, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
LABEL_6:
    v32 = v10;
    v33 = v83;
    v28((uint64_t)v17, 1, 1, v21);
    swift_beginAccess(v27, &v86, 33, 0);
    sub_100051130((uint64_t)v17, v27);
    swift_endAccess(&v86);
    v34 = &unk_1000F8000;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_13;
    goto LABEL_7;
  }
  Date.init(fromUTCString:)(v84, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_100010A98((uint64_t)v20, &qword_1000ED070);
    goto LABEL_6;
  }
  v40 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v40(v25, v20, v21);
  v40(v17, v25, v21);
  v28((uint64_t)v17, 0, 1, v21);
  swift_beginAccess(v27, &v86, 33, 0);
  sub_100051130((uint64_t)v17, v27);
  swift_endAccess(&v86);
  v34 = (_QWORD *)&unk_1000F8000;
  v32 = v10;
  v33 = v83;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_13;
LABEL_7:
  v35 = sub_10004F068(1701869940, 0xE400000000000000);
  if ((v36 & 1) == 0
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v35, (uint64_t)&v86),
        (swift_dynamicCast(&v84, &v86, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    || (v37 = v85,
        v38 = String.lowercased()(),
        swift_bridgeObjectRelease(v37),
        v39 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D5F10, v38),
        swift_bridgeObjectRelease(v38._object),
        v39 != 1))
  {
LABEL_13:
    *(_BYTE *)(v2 + 16) = 0;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_18;
    goto LABEL_14;
  }
  *(_BYTE *)(v2 + 16) = 1;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_18;
LABEL_14:
  v41 = sub_10004F068(7107189, 0xE300000000000000);
  if ((v42 & 1) != 0)
  {
    sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v41, (uint64_t)&v86);
    if ((swift_dynamicCast(&v84, &v86, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v43 = v85;
      v44 = (uint64_t)v79;
      URL.init(string:)(v84, v85);
      v45 = v43;
      v46 = v44;
      swift_bridgeObjectRelease(v45);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v44, 1, v33) != 1)
      {
        v68 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 32);
        v69 = v78;
        v68(v78, v46, v33);
        v70 = v2 + OBJC_IVAR____TtC8Business10IMBContent_url;
        v68((char *)(v2 + OBJC_IVAR____TtC8Business10IMBContent_url), (uint64_t)v69, v33);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v70, 0, 1, v33);
        goto LABEL_19;
      }
      sub_100010A98(v44, (uint64_t *)&unk_1000ED480);
    }
  }
LABEL_18:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v2 + OBJC_IVAR____TtC8Business10IMBContent_url, 1, 1, v33);
LABEL_19:
  if (*(_QWORD *)(a1 + 16))
  {
    v47 = sub_10004F068(6516580, 0xE300000000000000);
    if ((v48 & 1) != 0)
    {
      sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v47, (uint64_t)&v86);
      v49 = swift_dynamicCast(&v84, &v86, (char *)&type metadata for Any + 8, &type metadata for String, 6);
      if ((v49 & 1) != 0)
      {
        v50 = v84;
        v51 = v85;
        v52 = v82;
        static String.Encoding.utf8.getter(v49);
        v53 = String.data(using:allowLossyConversion:)(v52, 0, v50, v51);
        v55 = v54;
        swift_bridgeObjectRelease(v51);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v52, v81);
        if (v55 >> 60 != 15)
        {
          v56 = Data.init(base64Encoded:options:)(v53, v55, 1);
          if (v57 >> 60 != 15)
          {
            v71 = v56;
            v72 = v57;
            v73 = v82;
            static String.Encoding.utf8.getter(v56);
            v74 = String.init(data:encoding:)(v71, v72, v73);
            v76 = v75;
            sub_100010BE8(v53, v55);
            sub_100010BE8(v71, v72);
            v77 = (uint64_t *)(v2 + v34[327]);
            v59 = v77[1];
            *v77 = v74;
            v77[1] = v76;
            goto LABEL_26;
          }
          sub_100010BE8(v53, v55);
        }
      }
    }
  }
  v58 = (_QWORD *)(v2 + v34[327]);
  v59 = v58[1];
  *v58 = 0;
  v58[1] = 0;
LABEL_26:
  swift_bridgeObjectRelease(v59);
  if (*(_QWORD *)(a1 + 16) && (v60 = sub_10004F068(0x656C746974, 0xE500000000000000), (v61 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v60, (uint64_t)&v86);
  }
  else
  {
    v86 = 0u;
    v87 = 0u;
  }
  swift_bridgeObjectRelease(a1);
  if (*((_QWORD *)&v87 + 1))
  {
    v62 = swift_dynamicCast(&v84, &v86, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    v63 = v84;
    v64 = v85;
    if (!v62)
    {
      v63 = 0;
      v64 = 0;
    }
  }
  else
  {
    sub_100010A98((uint64_t)&v86, (uint64_t *)&unk_1000EEB60);
    v63 = 0;
    v64 = 0;
  }
  v65 = (char **)(v2 + OBJC_IVAR____TtC8Business10IMBContent_title);
  v66 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business10IMBContent_title + 8);
  *v65 = v63;
  v65[1] = v64;
  swift_bridgeObjectRelease(v66);
  return v2;
}

void *sub_100050A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  char v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  _OWORD v39[2];
  Swift::String v40;
  void *v41;
  void *v42;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007D40(&qword_1000ED070);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v11, v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_BYTE *)(v0 + 16) == 0;
  v16 = 1819112552;
  if (*(_BYTE *)(v0 + 16))
    v16 = 0x6C6D746878;
  v17 = 0xE400000000000000;
  v41 = &type metadata for String;
  if (!v15)
    v17 = 0xE500000000000000;
  v40._countAndFlagsBits = v16;
  v40._object = (void *)v17;
  sub_100009CF0(&v40, v39);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  v38 = &_swiftEmptyDictionarySingleton;
  sub_10003A658(v39, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  v42 = v38;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_100010BA4(v0 + OBJC_IVAR____TtC8Business10IMBContent_url, (uint64_t)v14, (uint64_t *)&unk_1000ED480);
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v14, 1, v19);
  if ((_DWORD)v21 == 1)
  {
    sub_100010A98((uint64_t)v14, (uint64_t *)&unk_1000ED480);
    sub_100039FE8(7107189, 0xE300000000000000, &v40);
    sub_100010A98((uint64_t)&v40, (uint64_t *)&unk_1000EEB60);
  }
  else
  {
    v22 = URL.absoluteString.getter(v21);
    v41 = &type metadata for String;
    v40._countAndFlagsBits = v22;
    v40._object = v23;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v19);
    sub_100009CF0(&v40, v39);
    v24 = v42;
    v25 = swift_isUniquelyReferenced_nonNull_native(v42);
    v38 = v24;
    sub_10003A658(v39, 7107189, 0xE300000000000000, v25);
    v42 = v38;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v26 = *(void **)(v1 + OBJC_IVAR____TtC8Business10IMBContent_title + 8);
  if (v26)
  {
    v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business10IMBContent_title);
    v41 = &type metadata for String;
    v40._countAndFlagsBits = v27;
    v40._object = v26;
    sub_100009CF0(&v40, v39);
    swift_bridgeObjectRetain(v26);
    v28 = v42;
    v29 = swift_isUniquelyReferenced_nonNull_native(v42);
    v38 = v28;
    sub_10003A658(v39, 0x656C746974, 0xE500000000000000, v29);
    v42 = v38;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0x656C746974, 0xE500000000000000, &v40);
    sub_100010A98((uint64_t)&v40, (uint64_t *)&unk_1000EEB60);
  }
  v30 = v1 + OBJC_IVAR____TtC8Business10IMBContent_date;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business10IMBContent_date, &v38, 0, 0);
  sub_100010BA4(v30, (uint64_t)v10, &qword_1000ED070);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2))
  {
    sub_100010A98((uint64_t)v10, &qword_1000ED070);
    sub_100039FE8(1702125924, 0xE400000000000000, &v40);
    sub_100010A98((uint64_t)&v40, (uint64_t *)&unk_1000EEB60);
    return v42;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v10, v2);
    sub_100010A98((uint64_t)v10, &qword_1000ED070);
    v32 = Date.toUTCString()();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v41 = &type metadata for String;
    v40 = v32;
    sub_100009CF0(&v40, v39);
    v33 = (uint64_t)v42;
    v34 = swift_isUniquelyReferenced_nonNull_native(v42);
    v37 = v33;
    sub_10003A658(v39, 1702125924, 0xE400000000000000, v34);
    v31 = v37;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  return (void *)v31;
}

uint64_t sub_100050EA8()
{
  uint64_t v0;

  sub_100010A98(v0 + OBJC_IVAR____TtC8Business10IMBContent_url, (uint64_t *)&unk_1000ED480);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business10IMBContent_title + 8));
  sub_100010A98(v0 + OBJC_IVAR____TtC8Business10IMBContent_date, &qword_1000ED070);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business10IMBContent_doc + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100050F20()
{
  return type metadata accessor for IMBContent(0);
}

uint64_t type metadata accessor for IMBContent(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EDE20;
  if (!qword_1000EDE20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IMBContent);
  return result;
}

void sub_100050F64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = &unk_1000B1A68;
  sub_10000EE1C(319, (unint64_t *)&qword_1000EF650, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_1000B1A80;
    sub_10000EE1C(319, (unint64_t *)&unk_1000EC160, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_1000B1A80;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

uint64_t storeEnumTagSinglePayload for IMBContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100051068 + 4 * byte_1000B1A45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10005109C + 4 * byte_1000B1A40[v4]))();
}

uint64_t sub_10005109C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000510A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000510ACLL);
  return result;
}

uint64_t sub_1000510B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000510C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000510C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000510CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IMBContentType()
{
  return &type metadata for IMBContentType;
}

unint64_t sub_1000510EC()
{
  unint64_t result;

  result = qword_1000EDF18;
  if (!qword_1000EDF18)
  {
    result = swift_getWitnessTable(&unk_1000B1B20, &type metadata for IMBContentType);
    atomic_store(result, (unint64_t *)&qword_1000EDF18);
  }
  return result;
}

uint64_t sub_100051130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000ED070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100051178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[20];
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _BYTE v11[352];

  v1 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v1, v2);
  v10 = type metadata accessor for URL(0);
  __chkstk_darwin(v10, v3);
  v9 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007D40(&qword_1000EDF20);
  v7[18] = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v5);
  sub_1000190D8(v0, (uint64_t)v11);
  v6 = (char *)sub_100051290 + 4 * word_1000B1B80[sub_10004326C((uint64_t)v11)];
  __asm { BR              X10 }
}

uint64_t sub_100051290()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t result;
  uint64_t v8;

  v4 = sub_100043310(v0 + 240);
  v5 = *(_QWORD *)(v4 + 48);
  v6 = *(_OWORD *)(v4 + 16);
  *v1 = *(_OWORD *)v4;
  v1[1] = v6;
  v1[2] = *(_OWORD *)(v4 + 32);
  *(_QWORD *)(v0 + 448) = v5;
  result = sub_100051BD0(v2);
  if (!v3)
  {
    v8 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    return swift_storeEnumTagMultiPayload(v2, v8, 0);
  }
  return result;
}

uint64_t sub_100051BD0@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v4 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100045930(v2, (uint64_t)&v34);
  v13 = v36;
  if (v36 < 0)
  {
    v36 &= ~0x8000000000000000;
    v17 = v35;
    v18 = v37;
    v19 = v38;
    v20 = v39;
    v21 = v40;
    *(_QWORD *)a1 = v34;
    *(_QWORD *)(a1 + 8) = v17;
    *(_BYTE *)(a1 + 16) = v13 & 1;
    *(_QWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = v19;
    *(_QWORD *)(a1 + 40) = v20;
    *(_QWORD *)(a1 + 48) = v21;
    v22 = type metadata accessor for BIABubbleViewModelUserAction(0);
    swift_storeEnumTagMultiPayload(a1, v22, 1);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v19);
    return swift_bridgeObjectRetain(v21);
  }
  URL.init(string:)(v34, v35);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100010A98((uint64_t)v7, (uint64_t *)&unk_1000ED480);
    v14 = sub_100051E78();
    v15 = swift_allocError(&type metadata for BIABubbleViewModelRenderingError, v14, 0, 0);
    return swift_willThrow(v15);
  }
  v23 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 32);
  v24 = v23(v12, v7, v8);
  v25 = URL.scheme.getter(v24);
  if (!v26)
    goto LABEL_11;
  v27 = v26;
  if (v25 == 0x7370747468 && v26 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(v26);
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, 0x7370747468, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v27);
    if ((v29 & 1) == 0)
    {
LABEL_11:
      v30 = sub_100051E78();
      v31 = swift_allocError(&type metadata for BIABubbleViewModelRenderingError, v30, 0, 0);
      swift_willThrow(v31);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
  }
  v23((char *)a1, v12, v8);
  v32 = type metadata accessor for BIABubbleViewModelUserAction(0);
  return swift_storeEnumTagMultiPayload(a1, v32, 0);
}

uint64_t sub_100051E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000EDF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100051E78()
{
  unint64_t result;

  result = qword_1000EDF28;
  if (!qword_1000EDF28)
  {
    result = swift_getWitnessTable(&unk_1000B1C2C, &type metadata for BIABubbleViewModelRenderingError);
    atomic_store(result, (unint64_t *)&qword_1000EDF28);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BIABubbleViewModelRenderingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100051EFC + 4 * byte_1000B1B88[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100051F1C + 4 * byte_1000B1B8D[v4]))();
}

_BYTE *sub_100051EFC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100051F1C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100051F24(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100051F2C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100051F34(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100051F3C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BIABubbleViewModelRenderingError()
{
  return &type metadata for BIABubbleViewModelRenderingError;
}

unint64_t sub_100051F5C()
{
  unint64_t result;

  result = qword_1000EDF30;
  if (!qword_1000EDF30)
  {
    result = swift_getWitnessTable(&unk_1000B1C04, &type metadata for BIABubbleViewModelRenderingError);
    atomic_store(result, (unint64_t *)&qword_1000EDF30);
  }
  return result;
}

uint64_t NetworkStatus.rawValue.getter(char a1)
{
  if (!a1)
    return 0x656E6E6F43206F4ELL;
  if (a1 == 1)
    return 1768319319;
  return 0x72616C756C6C6543;
}

uint64_t sub_100052000(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100050070(*a1, *a2);
}

Swift::Int sub_10005200C()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE400000000000000;
  v3 = 1768319319;
  if (v1 != 1)
  {
    v3 = 0x72616C756C6C6543;
    v2 = 0xE800000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x656E6E6F43206F4ELL;
  if (v1)
    v5 = v2;
  else
    v5 = 0xED00006E6F697463;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1000520B0(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE400000000000000;
  v3 = 1768319319;
  if (*v1 != 1)
  {
    v3 = 0x72616C756C6C6543;
    v2 = 0xE800000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x656E6E6F43206F4ELL;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xED00006E6F697463;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100052130()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE400000000000000;
  v3 = 1768319319;
  if (v1 != 1)
  {
    v3 = 0x72616C756C6C6543;
    v2 = 0xE800000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x656E6E6F43206F4ELL;
  if (v1)
    v5 = v2;
  else
    v5 = 0xED00006E6F697463;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_1000521D0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8Business13NetworkStatusO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1000521FC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xED00006E6F697463;
  v4 = 0xE400000000000000;
  v5 = 1768319319;
  if (v2 != 1)
  {
    v5 = 0x72616C756C6C6543;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x656E6E6F43206F4ELL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void *Reachability.reachibilityChangedNotificationName.unsafeMutableAddressor()
{
  return &static Reachability.reachibilityChangedNotificationName;
}

unint64_t static Reachability.reachibilityChangedNotificationName.getter()
{
  return 0xD00000000000001ELL;
}

NSString sub_100052288()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static Reachability.reachibilityChangedNotification = (uint64_t)result;
  return result;
}

uint64_t *Reachability.reachibilityChangedNotification.unsafeMutableAddressor()
{
  if (qword_1000EBC80 != -1)
    swift_once(&qword_1000EBC80, sub_100052288);
  return &static Reachability.reachibilityChangedNotification;
}

id static Reachability.reachibilityChangedNotification.getter()
{
  if (qword_1000EBC80 != -1)
    swift_once(&qword_1000EBC80, sub_100052288);
  return (id)static Reachability.reachibilityChangedNotification;
}

uint64_t Reachability.__allocating_init(networkReachability:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 88, 7);
  Reachability.init(networkReachability:)(a1);
  return v3;
}

uint64_t Reachability.init(networkReachability:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v21;
  _QWORD *v22;

  v2 = v1;
  v21 = a1;
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v12, v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v2 + 44) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_BYTE *)(v2 + 60) = 1;
  sub_100052624();
  static DispatchQoS.unspecified.getter();
  v22 = _swiftEmptyArrayStorage;
  v16 = sub_100052660();
  v17 = sub_100007D40(&qword_1000EBD10);
  v18 = sub_100007D80();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v17, v18, v8, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  *(_QWORD *)(v2 + 64) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000026, 0x80000001000B3C40, v15, v11, v7, 0);
  *(_BYTE *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v19 = *(void **)(v2 + 48);
  *(_QWORD *)(v2 + 48) = v21;

  return v2;
}

uint64_t Reachability.deinit()
{
  uint64_t v0;

  sub_100028980(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  sub_100028980(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));

  return v0;
}

uint64_t Reachability.__deallocating_deinit()
{
  uint64_t v0;

  sub_100028980(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  sub_100028980(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));

  return swift_deallocClassInstance(v0, 88, 7);
}

unint64_t _s8Business13NetworkStatusO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D6038, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_100052624()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EBD00;
  if (!qword_1000EBD00)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000EBD00);
  }
  return result;
}

unint64_t sub_100052660()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EBD08;
  if (!qword_1000EBD08)
  {
    v1 = type metadata accessor for OS_dispatch_queue.Attributes(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_1000EBD08);
  }
  return result;
}

unint64_t sub_1000526AC()
{
  unint64_t result;

  result = qword_1000EDF38;
  if (!qword_1000EDF38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NetworkStatus, &type metadata for NetworkStatus);
    atomic_store(result, (unint64_t *)&qword_1000EDF38);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NetworkStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10005273C + 4 * byte_1000B1C75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100052770 + 4 * byte_1000B1C70[v4]))();
}

uint64_t sub_100052770(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100052778(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100052780);
  return result;
}

uint64_t sub_10005278C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100052794);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100052798(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000527A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkStatus()
{
  return &type metadata for NetworkStatus;
}

uint64_t type metadata accessor for Reachability()
{
  return objc_opt_self(_TtC8Business12Reachability);
}

id sub_1000527DC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v1 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_separatorColor;
  v2 = (void *)objc_opt_self(UIColor);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "blackColor");
  v4 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_titleLabel;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_subtitleLabel;
  *(_QWORD *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_separator;
  *(_QWORD *)&v3[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for IMBContentHeaderView();
  v7 = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100052C34();
  sub_100052DFC();

  return v7;
}

char *sub_100052904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char *v5;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  NSString v19;
  void *v20;
  id v21;
  NSString v22;
  void *v23;
  id v24;
  objc_super v26;

  v9 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_separatorColor;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v5;
  *(_QWORD *)&v5[v9] = objc_msgSend(v10, "blackColor");
  v12 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_titleLabel;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_subtitleLabel;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v14 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_separator;
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  v26.receiver = v11;
  v26.super_class = (Class)type metadata accessor for IMBContentHeaderView();
  v15 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = *(void **)&v15[OBJC_IVAR____TtC8Business20IMBContentHeaderView_titleLabel];
  v17 = v15;
  v18 = v16;
  if (a2)
  {
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v16, "setText:", v19);

  v20 = *(void **)&v15[OBJC_IVAR____TtC8Business20IMBContentHeaderView_subtitleLabel];
  v21 = v20;
  if (a4)
  {
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v20, "setText:", v22);

  v23 = *(void **)&v15[OBJC_IVAR____TtC8Business20IMBContentHeaderView_separatorColor];
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Business20IMBContentHeaderView_separatorColor] = a5;
  v24 = a5;

  sub_100052C34();
  sub_100052DFC();

  return v15;
}

id sub_100052AFC(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  v3 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_separatorColor;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "blackColor");
  v6 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_titleLabel;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_subtitleLabel;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC8Business20IMBContentHeaderView_separator;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for IMBContentHeaderView();
  v9 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);
  v10 = v9;
  if (v9)
  {
    v11 = v9;
    sub_100052C34();
    sub_100052DFC();

  }
  return v10;
}

id sub_100052C34()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "clearColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  v3 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBContentHeaderView_separator];
  objc_msgSend(v3, "setBackgroundColor:", *(_QWORD *)&v0[OBJC_IVAR____TtC8Business20IMBContentHeaderView_separatorColor]);
  v4 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBContentHeaderView_titleLabel];
  v5 = (void *)objc_opt_self(UIFont);
  v6 = objc_msgSend(v5, "systemFontOfSize:weight:", 18.0, UIFontWeightBold);
  objc_msgSend(v4, "setFont:", v6);

  objc_msgSend(v4, "setNumberOfLines:", 0);
  v7 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBContentHeaderView_subtitleLabel];
  v8 = objc_msgSend(v5, "systemFontOfSize:weight:", 14.0, UIFontWeightRegular);
  objc_msgSend(v7, "setFont:", v8);

  objc_msgSend(v7, "setNumberOfLines:", 0);
  v9 = objc_msgSend(v1, "grayColor");
  objc_msgSend(v7, "setTextColor:", v9);

  objc_msgSend(v0, "addSubview:", v4);
  objc_msgSend(v0, "addSubview:", v7);
  return objc_msgSend(v0, "addSubview:", v3);
}

void sub_100052DFC()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBContentHeaderView_titleLabel];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v1, "topAnchor");
  v3 = objc_msgSend(v0, "topAnchor");
  v4 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v3, 18.0);

  objc_msgSend(v4, "setActive:", 1);
  v5 = objc_msgSend(v1, "leadingAnchor");
  v6 = objc_msgSend(v0, "leadingAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v6, 20.0);

  objc_msgSend(v7, "setActive:", 1);
  v8 = objc_msgSend(v1, "trailingAnchor");
  v9 = objc_msgSend(v0, "trailingAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9, -20.0);

  objc_msgSend(v10, "setActive:", 1);
  v11 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBContentHeaderView_subtitleLabel];
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = objc_msgSend(v11, "topAnchor");
  v13 = objc_msgSend(v1, "bottomAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  objc_msgSend(v14, "setActive:", 1);
  v15 = objc_msgSend(v11, "leadingAnchor");
  v16 = objc_msgSend(v0, "leadingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, 20.0);

  objc_msgSend(v17, "setActive:", 1);
  v18 = objc_msgSend(v11, "trailingAnchor");
  v19 = objc_msgSend(v0, "trailingAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, -20.0);

  objc_msgSend(v20, "setActive:", 1);
  v21 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBContentHeaderView_separator];
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v22 = objc_msgSend(v21, "heightAnchor");
  v23 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v23, "scale");
  v25 = v24;

  v26 = objc_msgSend(v22, "constraintEqualToConstant:", 1.0 / v25);
  objc_msgSend(v26, "setActive:", 1);

  v27 = objc_msgSend(v21, "topAnchor");
  v28 = objc_msgSend(v11, "bottomAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, 18.0);

  objc_msgSend(v29, "setActive:", 1);
  v30 = objc_msgSend(v21, "rightAnchor");
  v31 = objc_msgSend(v0, "rightAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  objc_msgSend(v32, "setActive:", 1);
  v33 = objc_msgSend(v21, "bottomAnchor");
  v34 = objc_msgSend(v0, "bottomAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  objc_msgSend(v35, "setActive:", 1);
  v36 = objc_msgSend(v21, "leftAnchor");
  v37 = objc_msgSend(v0, "leftAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v37, 20.0);

  objc_msgSend(v38, "setActive:", 1);
}

id sub_1000533B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBContentHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBContentHeaderView()
{
  return objc_opt_self(_TtC8Business20IMBContentHeaderView);
}

char *sub_100053460(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t inited;
  void *v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  char v22;
  uint64_t i;
  char v24;
  id v25;
  void *v26;
  id v27;
  char *result;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  void *v34;
  id v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char v45[80];
  char v46[128];
  uint64_t v47;
  char v48[48];
  objc_super v49;

  v9 = &v4[OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_delegate];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = objc_allocWithZone((Class)UIButton);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_leftButton] = v12;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_rightButton] = v13;

  v49.receiver = v11;
  v49.super_class = (Class)type metadata accessor for BIABubbleBinaryChoiceView();
  v14 = (char *)objc_msgSendSuper2(&v49, "initWithFrame:", a1, a2, a3, a4);
  v15 = sub_100007D40((uint64_t *)&unk_1000ED490);
  inited = swift_initStackObject(v15, v48);
  *(_OWORD *)(inited + 16) = xmmword_1000B1DA0;
  v42 = OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_leftButton;
  v17 = *(void **)&v14[OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_leftButton];
  *(_QWORD *)(inited + 32) = v17;
  v43 = OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_rightButton;
  v18 = *(void **)&v14[OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_rightButton];
  *(_QWORD *)(inited + 40) = v18;
  v47 = inited;
  specialized Array._endMutation()(inited);
  v44 = v14;
  v19 = v14;
  v20 = v17;
  v21 = v18;
  v22 = 0;
  for (i = 0; ; i = 1)
  {
    v24 = v22;
    v25 = (v47 & 0xC000000000000001) != 0
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v47)
        : *(id *)(v47 + 32 + 8 * i);
    v26 = v25;
    objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0, v42);
    v27 = objc_msgSend(v26, "layer");
    objc_msgSend(v27, "setCornerRadius:", 8.0);

    result = (char *)objc_msgSend(v26, "titleLabel");
    if (!result)
      break;
    v29 = result;
    if (qword_1000EBC78 != -1)
      swift_once(&qword_1000EBC78, sub_10002D9C8);
    objc_msgSend(v29, "setFont:", qword_1000F89F8);

    objc_msgSend(v19, "addSubview:", v26);
    if (qword_1000EBC48 != -1)
      swift_once(&qword_1000EBC48, sub_10002D8DC);
    objc_msgSend(v26, "setBackgroundColor:", qword_1000F89C8);
    if (qword_1000EBC60 != -1)
      swift_once(&qword_1000EBC60, sub_10002D94C);
    objc_msgSend(v26, "setTitleColor:forState:", qword_1000F89E0, 0);

    v22 = 1;
    if ((v24 & 1) != 0)
    {
      swift_bridgeObjectRelease(v47);
      v30 = sub_100007D40(&qword_1000ED050);
      v31 = swift_initStackObject(v30, v46);
      *(_OWORD *)(v31 + 16) = xmmword_1000ADFC0;
      *(_QWORD *)(v31 + 32) = 0x747475427466656CLL;
      *(_QWORD *)(v31 + 40) = 0xEA00000000006E6FLL;
      v32 = *(void **)&v14[v42];
      v33 = sub_100053A64();
      *(_QWORD *)(v31 + 48) = v32;
      *(_QWORD *)(v31 + 72) = v33;
      *(_QWORD *)(v31 + 80) = 0x7475427468676972;
      *(_QWORD *)(v31 + 88) = 0xEB000000006E6F74;
      v34 = *(void **)&v14[v43];
      *(_QWORD *)(v31 + 120) = v33;
      *(_QWORD *)(v31 + 96) = v34;
      v35 = v32;
      v36 = v34;
      v37 = sub_10004DF18(v31);
      v38 = swift_initStackObject(v30, v45);
      *(_OWORD *)(v38 + 16) = xmmword_1000AF070;
      strcpy((char *)(v38 + 32), "buttonSpacing");
      *(_WORD *)(v38 + 46) = -4864;
      *(_QWORD *)(v38 + 72) = &type metadata for Double;
      *(_QWORD *)(v38 + 48) = 0x4024000000000000;
      v39 = sub_10004DF18(v38);
      v40 = v19;
      sub_10007D8EC(v37, v39, (uint64_t)v40);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v39);

      objc_msgSend(*(id *)&v44[v42], "addTarget:action:forControlEvents:", v40, "handleLeftButtonTap", 64);
      v41 = *(id *)&v44[v43];
      objc_msgSend(v41, "addTarget:action:forControlEvents:", v40, "handleRightButtonTap", 64);

      return v40;
    }
  }
  __break(1u);
  return result;
}

char *sub_100053968(char *result, uint64_t a2, int a3)
{
  uint64_t v3;
  char *v5;

  v3 = *(_QWORD *)&result[OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_delegate];
  if (v3)
  {
    v5 = result;
    swift_unknownObjectRetain(v3);
    sub_10005DABC(a3);

    return (char *)swift_unknownObjectRelease(v3);
  }
  return result;
}

id sub_1000539CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BIABubbleBinaryChoiceView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BIABubbleBinaryChoiceView()
{
  return objc_opt_self(_TtC8Business25BIABubbleBinaryChoiceView);
}

unint64_t sub_100053A64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EE148;
  if (!qword_1000EE148)
  {
    v1 = objc_opt_self(UIButton);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000EE148);
  }
  return result;
}

id sub_100053AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  NSString v10;
  id v11;
  id v12;
  objc_super v14;

  v6 = OBJC_IVAR____TtC8Business22IMBActionTableViewCell_iconView;
  v7 = objc_allocWithZone((Class)UIImageView);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC8Business22IMBActionTableViewCell_titleLabel;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_actionEnabled] = 1;

  if (a3)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v10 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for IMBActionTableViewCell();
  v11 = objc_msgSendSuper2(&v14, "initWithStyle:reuseIdentifier:", a1, v10);

  v12 = v11;
  sub_100053CF8();
  sub_100053FC4();

  return v12;
}

id sub_100053BF8(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = OBJC_IVAR____TtC8Business22IMBActionTableViewCell_iconView;
  v4 = objc_allocWithZone((Class)UIImageView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC8Business22IMBActionTableViewCell_titleLabel;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_actionEnabled] = 1;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for IMBActionTableViewCell();
  v7 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);
  v8 = v7;
  if (v7)
  {
    v9 = v7;
    sub_100053CF8();
    sub_100053FC4();

  }
  return v8;
}

id sub_100053CF8()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  UIAccessibilityTraits v9;
  UIAccessibilityTraits v10;

  if (sub_10002DA10() == 2)
  {
    if (qword_1000EBBF8 != -1)
      swift_once(&qword_1000EBBF8, sub_10002D65C);
    objc_msgSend(v0, "setBackgroundColor:", qword_1000F8978);
    v1 = objc_msgSend(v0, "contentView");
    objc_msgSend(v1, "setDirectionalLayoutMargins:", 0.0, 16.0, 0.0, 16.0);

  }
  objc_msgSend(v0, "setBounds:", 0.0, 0.0, 350.0, 10000.0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_titleLabel];
  if (qword_1000EBC88 != -1)
    swift_once(&qword_1000EBC88, sub_100054824);
  objc_msgSend(v2, "setFont:", qword_1000EE150);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_iconView];
  v4 = objc_msgSend(v3, "layer");
  if (qword_1000EBC98 != -1)
    swift_once(&qword_1000EBC98, sub_10005494C);
  objc_msgSend(v4, "setCornerRadius:", *(double *)&qword_1000EE160 * 0.5);

  v5 = objc_msgSend(v3, "layer");
  objc_msgSend(v5, "setMasksToBounds:", 1);

  v6 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  objc_msgSend(v3, "setBackgroundColor:", v6);

  objc_msgSend(v3, "setContentMode:", 1);
  v7 = objc_msgSend(v0, "contentView");
  objc_msgSend(v7, "addSubview:", v3);

  v8 = objc_msgSend(v0, "contentView");
  objc_msgSend(v8, "addSubview:", v2);

  v9 = UIAccessibilityTraitButton;
  if ((v0[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_actionEnabled] & 1) == 0)
  {
    v10 = UIAccessibilityTraitNotEnabled;
    if ((UIAccessibilityTraitNotEnabled & ~UIAccessibilityTraitButton) == 0)
      v10 = 0;
    v9 = v10 | UIAccessibilityTraitButton;
  }
  return objc_msgSend(v0, "setAccessibilityTraits:", v9);
}

void sub_100053FC4()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_iconView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v1, "topAnchor");
  v3 = objc_msgSend(v0, "contentView");
  v4 = objc_msgSend(v3, "topAnchor");

  v5 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v4, 10.0);
  objc_msgSend(v5, "setActive:", 1);

  v6 = objc_msgSend(v1, "trailingAnchor");
  v7 = objc_msgSend(v0, "contentView");
  v8 = objc_msgSend(v7, "layoutMarginsGuide");

  v9 = objc_msgSend(v8, "trailingAnchor");
  v10 = objc_msgSend(v6, "constraintEqualToAnchor:", v9);

  objc_msgSend(v10, "setActive:", 1);
  v11 = objc_msgSend(v1, "bottomAnchor");
  v12 = objc_msgSend(v0, "contentView");
  v13 = objc_msgSend(v12, "bottomAnchor");

  v14 = objc_msgSend(v11, "constraintLessThanOrEqualToAnchor:constant:", v13, -10.0);
  objc_msgSend(v14, "setActive:", 1);

  v15 = objc_msgSend(v1, "heightAnchor");
  if (qword_1000EBC98 != -1)
    swift_once(&qword_1000EBC98, sub_10005494C);
  v16 = objc_msgSend(v15, "constraintEqualToConstant:", *(double *)&qword_1000EE160);

  objc_msgSend(v16, "setActive:", 1);
  v17 = objc_msgSend(v1, "widthAnchor");
  v18 = objc_msgSend(v17, "constraintEqualToConstant:", *(double *)&qword_1000EE160);

  objc_msgSend(v18, "setActive:", 1);
  v19 = *(void **)&v0[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_titleLabel];
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = objc_msgSend(v19, "topAnchor");
  v21 = objc_msgSend(v0, "contentView");
  v22 = objc_msgSend(v21, "topAnchor");

  v23 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v22, 10.0);
  objc_msgSend(v23, "setActive:", 1);

  v24 = objc_msgSend(v19, "leadingAnchor");
  v25 = objc_msgSend(v0, "contentView");
  v26 = objc_msgSend(v25, "layoutMarginsGuide");

  v27 = objc_msgSend(v26, "leadingAnchor");
  v28 = objc_msgSend(v24, "constraintEqualToAnchor:", v27);

  objc_msgSend(v28, "setActive:", 1);
  v29 = objc_msgSend(v19, "trailingAnchor");
  v30 = objc_msgSend(v1, "leadingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v30, 5.0);

  objc_msgSend(v31, "setActive:", 1);
  v32 = objc_msgSend(v19, "bottomAnchor");
  v33 = objc_msgSend(v0, "contentView");
  v34 = objc_msgSend(v33, "bottomAnchor");

  v35 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v34, -10.0);
  objc_msgSend(v35, "setActive:", 1);

}

void sub_100054500()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  CGColor *v4;
  CGColorRef CopyWithAlpha;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  if (v0[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_actionEnabled] != 1)
  {
    objc_msgSend(v0, "setSelectionStyle:", 0);
    objc_msgSend(v0, "setSelectedBackgroundView:", 0);
    v10 = *(void **)&v0[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_titleLabel];
    v11 = objc_msgSend((id)objc_opt_self(UIColor), "lightGrayColor");
    objc_msgSend(v10, "setTextColor:", v11);

    v8 = *(void **)&v0[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_iconView];
    v9 = objc_msgSend(v10, "textColor");
LABEL_13:
    v12 = v9;
    objc_msgSend(v8, "setTintColor:");

    return;
  }
  objc_msgSend(v0, "setSelectionStyle:", 1);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v0, "setSelectedBackgroundView:", v1);

  v2 = objc_msgSend(v0, "selectedBackgroundView");
  if (!v2)
  {
LABEL_7:
    v7 = *(void **)&v0[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_titleLabel];
    if (qword_1000EBC88 != -1)
      swift_once(&qword_1000EBC88, sub_100054824);
    objc_msgSend(v7, "setFont:", qword_1000EE150);
    if (qword_1000EBC90 != -1)
      swift_once(&qword_1000EBC90, sub_10005490C);
    objc_msgSend(v7, "setTextColor:", qword_1000EE158);
    v8 = *(void **)&v0[OBJC_IVAR____TtC8Business22IMBActionTableViewCell_iconView];
    v9 = objc_msgSend(v7, "textColor");
    goto LABEL_13;
  }
  v3 = v2;
  if (qword_1000EBC90 != -1)
    swift_once(&qword_1000EBC90, sub_10005490C);
  v4 = (CGColor *)objc_msgSend((id)qword_1000EE158, "CGColor");
  CopyWithAlpha = CGColorCreateCopyWithAlpha(v4, 0.1);

  if (CopyWithAlpha)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", CopyWithAlpha);

    objc_msgSend(v3, "setBackgroundColor:", v6);
    goto LABEL_7;
  }
  __break(1u);
}

id sub_10005479C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBActionTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBActionTableViewCell()
{
  return objc_opt_self(_TtC8Business22IMBActionTableViewCell);
}

void sub_100054824()
{
  id v0;
  id v1;
  id v2;

  if (sub_10002DA10() == 2)
  {
    v0 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
    v1 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 13.0);
    v2 = objc_msgSend(v0, "scaledFontForFont:", v1);

  }
  else
  {
    v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  }
  qword_1000EE150 = (uint64_t)v2;
}

id sub_10005490C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "tableCellBlueTextColor");
  if (result)
    qword_1000EE158 = (uint64_t)result;
  else
    __break(1u);
  return result;
}

uint64_t sub_10005494C()
{
  uint64_t result;
  double v1;

  result = sub_10002DA10();
  v1 = 40.0;
  if (result == 2)
    v1 = 20.0;
  qword_1000EE160 = *(_QWORD *)&v1;
  return result;
}

id sub_100054980(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSString v12;
  id v13;
  id v14;
  objc_super v16;

  v4 = OBJC_IVAR____TtC8Business23ListPickerSectionHeader_headerLabel;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v2;
  *(_QWORD *)&v2[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC8Business23ListPickerSectionHeader_topSeparator;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = OBJC_IVAR____TtC8Business23ListPickerSectionHeader_bottomSeparator;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v9 = OBJC_IVAR____TtC8Business23ListPickerSectionHeader_separatorColor;
  v10 = objc_msgSend(objc_allocWithZone((Class)UITableView), "init");
  v11 = objc_msgSend(v10, "separatorColor");

  *(_QWORD *)&v6[v9] = v11;
  if (a2)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v12 = 0;
  }
  v16.receiver = v6;
  v16.super_class = (Class)type metadata accessor for ListPickerSectionHeader();
  v13 = objc_msgSendSuper2(&v16, "initWithReuseIdentifier:", v12);

  v14 = v13;
  sub_100054B30();
  sub_100054CCC();

  return v14;
}

id sub_100054B30()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerSectionHeader_topSeparator];
  v2 = OBJC_IVAR____TtC8Business23ListPickerSectionHeader_separatorColor;
  objc_msgSend(v1, "setBackgroundColor:", *(_QWORD *)&v0[OBJC_IVAR____TtC8Business23ListPickerSectionHeader_separatorColor]);
  v3 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerSectionHeader_bottomSeparator];
  objc_msgSend(v3, "setBackgroundColor:", *(_QWORD *)&v0[v2]);
  v4 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerSectionHeader_headerLabel];
  v5 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v4, "setFont:", v5);

  v6 = (void *)objc_opt_self(UIColor);
  v7 = objc_msgSend(v6, "labelColor");
  objc_msgSend(v4, "setTextColor:", v7);

  objc_msgSend(v4, "setNumberOfLines:", 0);
  v8 = objc_msgSend(v0, "contentView");
  v9 = objc_msgSend(v6, "systemBackgroundColor");
  objc_msgSend(v8, "setBackgroundColor:", v9);

  objc_msgSend(v0, "addSubview:", v4);
  objc_msgSend(v0, "addSubview:", v1);
  return objc_msgSend(v0, "addSubview:", v3);
}

void sub_100054CCC()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  double v4;
  double v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  double v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerSectionHeader_topSeparator];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v1, "heightAnchor");
  v45 = (id)objc_opt_self(UIScreen);
  v3 = objc_msgSend(v45, "mainScreen");
  objc_msgSend(v3, "scale");
  v5 = v4;

  v6 = objc_msgSend(v2, "constraintEqualToConstant:", 1.0 / v5);
  objc_msgSend(v6, "setActive:", 1);

  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v0, "topAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  objc_msgSend(v9, "setActive:", 1);
  v10 = objc_msgSend(v1, "rightAnchor");
  v11 = objc_msgSend(v0, "rightAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  objc_msgSend(v12, "setActive:", 1);
  v13 = objc_msgSend(v1, "leftAnchor");
  v14 = objc_msgSend(v0, "leftAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  objc_msgSend(v15, "setActive:", 1);
  v16 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerSectionHeader_headerLabel];
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = objc_msgSend(v16, "topAnchor");
  v18 = objc_msgSend(v1, "bottomAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, 8.0);

  objc_msgSend(v19, "setActive:", 1);
  v20 = objc_msgSend(v16, "leftAnchor");
  v21 = objc_msgSend(v0, "layoutMarginsGuide");
  v22 = objc_msgSend(v21, "leftAnchor");

  v23 = objc_msgSend(v20, "constraintEqualToAnchor:", v22);
  objc_msgSend(v23, "setActive:", 1);

  v24 = objc_msgSend(v16, "rightAnchor");
  v25 = objc_msgSend(v0, "layoutMarginsGuide");
  v26 = objc_msgSend(v25, "rightAnchor");

  v27 = objc_msgSend(v24, "constraintEqualToAnchor:", v26);
  objc_msgSend(v27, "setActive:", 1);

  v28 = *(void **)&v0[OBJC_IVAR____TtC8Business23ListPickerSectionHeader_bottomSeparator];
  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v29 = objc_msgSend(v28, "heightAnchor");
  v30 = objc_msgSend(v45, "mainScreen");
  objc_msgSend(v30, "scale");
  v32 = v31;

  v33 = objc_msgSend(v29, "constraintEqualToConstant:", 1.0 / v32);
  objc_msgSend(v33, "setActive:", 1);

  v34 = objc_msgSend(v28, "topAnchor");
  v35 = objc_msgSend(v16, "bottomAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v35, 8.0);

  objc_msgSend(v36, "setActive:", 1);
  v37 = objc_msgSend(v28, "leftAnchor");
  v38 = objc_msgSend(v0, "leftAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  objc_msgSend(v39, "setActive:", 1);
  v40 = objc_msgSend(v28, "rightAnchor");
  v41 = objc_msgSend(v0, "rightAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  objc_msgSend(v42, "setActive:", 1);
  v43 = objc_msgSend(v28, "bottomAnchor");
  v44 = objc_msgSend(v0, "bottomAnchor");
  v46 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  objc_msgSend(v46, "setActive:", 1);
}

id sub_100055300()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ListPickerSectionHeader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ListPickerSectionHeader()
{
  return objc_opt_self(_TtC8Business23ListPickerSectionHeader);
}

void sub_1000553A8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Business23ListPickerSectionHeader_headerLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = OBJC_IVAR____TtC8Business23ListPickerSectionHeader_topSeparator;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = OBJC_IVAR____TtC8Business23ListPickerSectionHeader_bottomSeparator;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v4 = OBJC_IVAR____TtC8Business23ListPickerSectionHeader_separatorColor;
  v5 = objc_msgSend(objc_allocWithZone((Class)UITableView), "init");
  v6 = objc_msgSend(v5, "separatorColor");

  *(_QWORD *)&v0[v4] = v6;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000B3DA0, "Business/ListPickerSectionHeader.swift", 38, 2, 30, 0);
  __break(1u);
}

uint64_t sub_1000554AC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v3 = v2;
  v5 = a1;
  v6 = _swiftEmptyArrayStorage;
  v43 = (uint64_t)_swiftEmptyArrayStorage;
  if (*(_QWORD *)(a1 + 16))
  {
    v7 = sub_10004F068(0x736D657469, 0xE500000000000000);
    if ((v8 & 1) != 0)
    {
      sub_100009C74(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v41);
      v9 = sub_100007D40(&qword_1000ED040);
      if (swift_dynamicCast(v40, &v41, (char *)&type metadata for Any + 8, v9, 6))
        v6 = (_QWORD *)v40[0];
    }
  }
  v10 = v6[2];
  if (v10)
  {
    v38 = v5;
    v39 = v3;
    v11 = type metadata accessor for IMBListItem();
    for (i = 0; i != v10; ++i)
    {
      v18 = v6[i + 4];
      swift_allocObject(v11, 104, 7);
      swift_bridgeObjectRetain_n(v18, 2);
      swift_bridgeObjectRetain(a2);
      v19 = sub_100059A94(v18, a2);
      if (v19)
      {
        v13 = v19;
        swift_bridgeObjectRelease(v18);
        v14 = swift_retain(v13);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v16 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v15 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v16 >= v15 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
        v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
        specialized Array._endMutation()(v17);
        swift_release(v13);
      }
      else
      {
        if (qword_1000EBCB8 != -1)
          v19 = swift_once(&qword_1000EBCB8, sub_100082798);
        v20 = qword_1000F8A90;
        v21 = static os_log_type_t.error.getter(v19);
        v22 = sub_100007D40((uint64_t *)&unk_1000ECE50);
        v23 = swift_allocObject(v22, 72, 7);
        *(_OWORD *)(v23 + 16) = xmmword_1000AF070;
        *(_QWORD *)(v23 + 56) = sub_100007D40(&qword_1000EC478);
        *(_QWORD *)(v23 + 64) = sub_10001383C();
        *(_QWORD *)(v23 + 32) = v18;
        os_log(_:dso:log:type:_:)("Unable to create IMBListItem for dictionary: %@", 47, 2, &_mh_execute_header, v20, v21, v23);
        swift_bridgeObjectRelease(v23);
      }
    }
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v6);
    v24 = v43;
    v5 = v38;
    v3 = v39;
    if (v43 < 0)
      goto LABEL_40;
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(a2);
    v24 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    {
LABEL_40:
      swift_bridgeObjectRetain_n(v24, 2);
      v25 = (uint64_t)sub_1000A2C54(v24);
      swift_bridgeObjectRelease(v24);
      goto LABEL_20;
    }
  }
  if ((v24 & 0x4000000000000000) != 0)
    goto LABEL_40;
  v25 = v24 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v24, 2);
LABEL_20:
  *(_QWORD *)&v41 = v25;
  sub_100055E84((uint64_t *)&v41);
  swift_bridgeObjectRelease(v24);
  v26 = v41;
  swift_bridgeObjectRelease(v24);
  if (*(_QWORD *)(v5 + 16)
    && (v27 = sub_10004F068(0x656C746974, 0xE500000000000000), (v28 & 1) != 0)
    && (sub_100009C74(*(_QWORD *)(v5 + 56) + 32 * v27, (uint64_t)&v41),
        swift_dynamicCast(v40, &v41, (char *)&type metadata for Any + 8, &type metadata for String, 6)))
  {
    v29 = v40[0];
    v30 = v40[1];
  }
  else
  {
    v29 = 0;
    v30 = 0xE000000000000000;
  }
  *(_QWORD *)(v3 + 16) = v29;
  *(_QWORD *)(v3 + 24) = v30;
  if (*(_QWORD *)(v5 + 16)
    && (v31 = sub_10004F068(0x726564726FLL, 0xE500000000000000), (v32 & 1) != 0)
    && (sub_100009C74(*(_QWORD *)(v5 + 56) + 32 * v31, (uint64_t)&v41),
        swift_dynamicCast(v40, &v41, (char *)&type metadata for Any + 8, &type metadata for Int, 6)))
  {
    v33 = v40[0];
  }
  else
  {
    v33 = 0x7FFFFFFFFFFFFFFFLL;
  }
  *(_QWORD *)(v3 + 32) = v33;
  *(_QWORD *)(v3 + 40) = v26;
  if (*(_QWORD *)(v5 + 16) && (v34 = sub_10004F068(0xD000000000000011, 0x80000001000B8220), (v35 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v5 + 56) + 32 * v34, (uint64_t)&v41);
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
  }
  swift_bridgeObjectRelease(v5);
  if (!*((_QWORD *)&v42 + 1))
  {
    sub_100009CB0((uint64_t)&v41);
    goto LABEL_38;
  }
  if (!swift_dynamicCast(v40, &v41, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_38:
    v36 = 0;
    goto LABEL_39;
  }
  v36 = v40[0];
LABEL_39:
  *(_BYTE *)(v3 + 48) = v36;
  return v3;
}

void *sub_100055968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  _OWORD v20[2];
  __int128 v21;
  void *v22;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 40);
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (void *)swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
    if (v3)
      goto LABEL_3;
LABEL_18:
    v6 = _swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease(v2);
    v12 = *(_QWORD *)(v1 + 16);
    v13 = *(_QWORD *)(v1 + 24);
    v22 = &type metadata for String;
    *(_QWORD *)&v21 = v12;
    *((_QWORD *)&v21 + 1) = v13;
    sub_100009CF0(&v21, v20);
    swift_bridgeObjectRetain(v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v20, 0x656C746974, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);
    v15 = *(_QWORD *)(v1 + 32);
    v22 = &type metadata for Int;
    *(_QWORD *)&v21 = v15;
    sub_100009CF0(&v21, v20);
    v16 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v20, 0x726564726FLL, 0xE500000000000000, v16);
    swift_bridgeObjectRelease(0x8000000000000000);
    v22 = (void *)sub_100007D40(&qword_1000ED040);
    *(_QWORD *)&v21 = v6;
    sub_100009CF0(&v21, v20);
    v17 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v20, 0x736D657469, 0xE500000000000000, v17);
    swift_bridgeObjectRelease(0x8000000000000000);
    v18 = *(_BYTE *)(v1 + 48);
    v22 = &type metadata for Bool;
    LOBYTE(v21) = v18;
    sub_100009CF0(&v21, v20);
    v19 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v20, 0xD000000000000011, 0x80000001000B8220, v19);
    swift_bridgeObjectRelease(0x8000000000000000);
    return &_swiftEmptyDictionarySingleton;
  }
  if (v2 < 0)
    v11 = *(_QWORD *)(v0 + 40);
  else
    v11 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  result = (void *)_CocoaArrayWrapper.endIndex.getter(v11);
  v3 = (uint64_t)result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = _swiftEmptyArrayStorage;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      }
      else
      {
        v7 = *(_QWORD *)(v2 + 8 * v5 + 32);
        swift_retain(v7);
      }
      v8 = sub_100059F90();
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        v6 = sub_100038784(0, v6[2] + 1, 1, v6);
      v10 = v6[2];
      v9 = v6[3];
      if (v10 >= v9 >> 1)
        v6 = sub_100038784((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
      ++v5;
      v6[2] = v10 + 1;
      v6[v10 + 4] = v8;
      swift_release(v7);
    }
    while (v3 != v5);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_100055C48()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 49, 7);
}

uint64_t type metadata accessor for IMBListSection()
{
  return objc_opt_self(_TtC8Business14IMBListSection);
}

uint64_t sub_100055C94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  Swift::String v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  void *v15;
  Swift::String v16;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 0x203A726564726F20;
  v6._object = (void *)0xE800000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(0xE800000000000000);
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (*(_BYTE *)(v0 + 48))
    v7 = 1702195828;
  else
    v7 = 0x65736C6166;
  if (*(_BYTE *)(v0 + 48))
    v8 = 0xE400000000000000;
  else
    v8 = 0xE500000000000000;
  v9 = v8;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease(v8);
  v10._countAndFlagsBits = 0xD000000000000014;
  v10._object = (void *)0x80000001000B8240;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(0x80000001000B8240);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = type metadata accessor for IMBListItem();
  v13 = swift_bridgeObjectRetain(v11);
  v14._countAndFlagsBits = Array.description.getter(v13, v12);
  v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 0x203A736D65746920;
  v16._object = (void *)0xE800000000000000;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(0xE800000000000000);
  return 0x203A656C746974;
}

uint64_t sub_100055E64()
{
  return sub_100055C94();
}

uint64_t sub_100055E84(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  Swift::Int v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1000A5D94(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  v5 = sub_100055EFC(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

Swift::Int sub_100055EFC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Swift::Int v17;
  uint64_t v18;
  Swift::Int v19;
  unint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  Swift::Int v27;
  Swift::Int v28;
  uint64_t *v29;
  uint64_t v30;
  Swift::Int v31;
  _QWORD *v32;
  uint64_t v33;
  Swift::Int v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t *v121;
  Swift::Int v122;
  Swift::Int v123;
  uint64_t v124;
  Swift::Int v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *__dst;
  char *v130;
  char *v131;
  unint64_t v132;
  int64_t v133;
  uint64_t v134;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
    {
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
      __break(1u);
      goto LABEL_194;
    }
    if ((unint64_t)v3 >= 2)
    {
      v10 = 0;
      v11 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v13 = *(_QWORD *)(v11 + 8 * i);
        v14 = v10;
        do
        {
          v15 = *(_QWORD *)(v11 + v14);
          if (*(_QWORD *)(v13 + 96) >= *(_QWORD *)(v15 + 96))
            break;
          if (!v11)
            goto LABEL_189;
          *(_QWORD *)(v11 + v14 + 8) = v15;
          *(_QWORD *)(v11 + v14) = v13;
          v14 -= 8;
        }
        while (v14 != -8);
        v10 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
    {
LABEL_194:
      LOBYTE(v120) = 2;
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, v120, 936, 0);
      __break(1u);
      return result;
    }
    v121 = a1;
    v122 = result;
    v124 = v1;
    if (v3 >= 2)
    {
      v6 = v5 >> 1;
      v7 = type metadata accessor for IMBListItem();
      v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
      v9 = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v134 = v8;
      goto LABEL_18;
    }
    v16 = (char *)_swiftEmptyArrayStorage;
    v134 = (uint64_t)_swiftEmptyArrayStorage;
    v9 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 == 1)
    {
LABEL_18:
      v17 = 0;
      v18 = *a1;
      v126 = v18 - 8;
      v16 = (char *)_swiftEmptyArrayStorage;
      v19 = v3;
      v123 = v3;
      __dst = v9;
      while (1)
      {
        v21 = v17 + 1;
        if (v17 + 1 < v19)
        {
          v22 = *(_QWORD *)(*(_QWORD *)(v18 + 8 * v21) + 96);
          v23 = *(_QWORD *)(*(_QWORD *)(v18 + 8 * v17) + 96);
          v21 = v17 + 2;
          if (v17 + 2 < v19)
          {
            v24 = v22;
            while (1)
            {
              v25 = *(_QWORD *)(*(_QWORD *)(v18 + 8 * v21) + 96);
              if (v22 < v23 == v25 >= v24)
                break;
              ++v21;
              v24 = v25;
              if (v19 == v21)
              {
                v21 = v19;
                break;
              }
            }
          }
          if (v22 < v23)
          {
            if (v21 < v17)
              goto LABEL_184;
            if (v17 < v21)
            {
              v26 = (uint64_t *)(v126 + 8 * v21);
              v27 = v21;
              v28 = v17;
              v29 = (uint64_t *)(v18 + 8 * v17);
              do
              {
                if (v28 != --v27)
                {
                  if (!v18)
                    goto LABEL_191;
                  v30 = *v29;
                  *v29 = *v26;
                  *v26 = v30;
                }
                ++v28;
                --v26;
                ++v29;
              }
              while (v28 < v27);
            }
          }
        }
        if (v21 < v19)
        {
          if (__OFSUB__(v21, v17))
            goto LABEL_179;
          if (v21 - v17 < v122)
          {
            v31 = v17 + v122;
            if (__OFADD__(v17, v122))
              goto LABEL_185;
            if (v31 >= v19)
              v31 = v19;
            if (v31 < v17)
              goto LABEL_186;
            if (v21 != v31)
            {
              v32 = (_QWORD *)(v126 + 8 * v21);
              do
              {
                v33 = *(_QWORD *)(v18 + 8 * v21);
                v34 = v17;
                v35 = v32;
                do
                {
                  v36 = *v35;
                  if (*(_QWORD *)(v33 + 96) >= *(_QWORD *)(*v35 + 96))
                    break;
                  if (!v18)
                    goto LABEL_187;
                  *v35 = v33;
                  v35[1] = v36;
                  --v35;
                  ++v34;
                }
                while (v21 != v34);
                ++v21;
                ++v32;
              }
              while (v21 != v31);
              v21 = v31;
            }
          }
        }
        if (v21 < v17)
          goto LABEL_178;
        v125 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          v16 = sub_1000A4058(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
        v9 = __dst;
        v38 = *((_QWORD *)v16 + 2);
        v37 = *((_QWORD *)v16 + 3);
        v20 = v38 + 1;
        if (v38 >= v37 >> 1)
        {
          v111 = sub_1000A4058((char *)(v37 > 1), v38 + 1, 1, v16);
          v9 = __dst;
          v16 = v111;
        }
        *((_QWORD *)v16 + 2) = v20;
        v39 = v16 + 32;
        v40 = &v16[16 * v38 + 32];
        *(_QWORD *)v40 = v17;
        *((_QWORD *)v40 + 1) = v125;
        if (v38)
          break;
        v20 = 1;
LABEL_20:
        v19 = v123;
        v17 = v125;
        if (v125 >= v123)
          goto LABEL_150;
      }
      v127 = v16 + 32;
      v128 = v16;
      while (1)
      {
        v41 = v20 - 1;
        if (v20 >= 4)
        {
          v46 = &v39[16 * v20];
          v47 = *((_QWORD *)v46 - 8);
          v48 = *((_QWORD *)v46 - 7);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_167;
          v51 = *((_QWORD *)v46 - 6);
          v50 = *((_QWORD *)v46 - 5);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_168;
          v53 = v20 - 2;
          v54 = &v39[16 * v20 - 32];
          v56 = *(_QWORD *)v54;
          v55 = *((_QWORD *)v54 + 1);
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_170;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_173;
          if (v58 >= v49)
          {
            v76 = &v39[16 * v41];
            v78 = *(_QWORD *)v76;
            v77 = *((_QWORD *)v76 + 1);
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_177;
            v69 = v44 < v79;
            goto LABEL_90;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v70 = *((_QWORD *)v16 + 4);
            v71 = *((_QWORD *)v16 + 5);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_84;
          }
          v43 = *((_QWORD *)v16 + 4);
          v42 = *((_QWORD *)v16 + 5);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_169;
        v53 = v20 - 2;
        v59 = &v39[16 * v20 - 32];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_172;
        v65 = &v39[16 * v41];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_175;
        if (__OFADD__(v63, v68))
          goto LABEL_176;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_90:
          if (v69)
            v41 = v53;
          goto LABEL_92;
        }
LABEL_84:
        if ((v64 & 1) != 0)
          goto LABEL_171;
        v72 = &v39[16 * v41];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_174;
        if (v75 < v63)
          goto LABEL_20;
LABEL_92:
        if (v41 - 1 >= v20)
        {
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
          goto LABEL_180;
        }
        if (!v18)
          goto LABEL_190;
        v132 = v41 - 1;
        v131 = &v39[16 * v41 - 16];
        v80 = *(_QWORD *)v131;
        v133 = v41;
        v81 = &v39[16 * v41];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v130 = v81;
        v84 = (char *)(v18 + 8 * *(_QWORD *)v131);
        v85 = (char *)(v18 + 8 * *(_QWORD *)v81);
        v86 = v18;
        v87 = v18 + 8 * v82;
        v88 = v85 - v84;
        v89 = v85 - v84 + 7;
        if (v85 - v84 >= 0)
          v89 = v85 - v84;
        v90 = v89 >> 3;
        v91 = v87 - (_QWORD)v85;
        v92 = v87 - (_QWORD)v85 + 7;
        if ((uint64_t)(v87 - (_QWORD)v85) >= 0)
          v92 = v87 - (_QWORD)v85;
        v93 = v92 >> 3;
        if (v90 >= v92 >> 3)
        {
          if (v91 < -7)
            goto LABEL_193;
          if ((unint64_t)v9 >= v87 || v9 != v85)
          {
            v99 = v82;
            memmove(v9, v85, 8 * v93);
            v82 = v99;
            v9 = __dst;
          }
          v95 = &v9[8 * v93];
          if (v80 >= v83 || v91 < 8)
          {
            v96 = v9;
            v18 = v86;
            goto LABEL_138;
          }
          v100 = (char *)(v126 + 8 * v82);
          v101 = v85;
          v18 = v86;
          while (2)
          {
            v102 = v100 + 8;
            v104 = *((_QWORD *)v101 - 1);
            v101 -= 8;
            v103 = v104;
            if (*(_QWORD *)(*((_QWORD *)v95 - 1) + 96) >= *(_QWORD *)(v104 + 96))
            {
              v103 = *((_QWORD *)v95 - 1);
              v101 = v85;
              if (v102 != v95)
              {
                v95 -= 8;
                goto LABEL_131;
              }
              v105 = v100 >= v95;
              v95 -= 8;
              if (v105)
LABEL_131:
                *(_QWORD *)v100 = v103;
            }
            else if (v102 != v85 || v100 >= v85)
            {
              goto LABEL_131;
            }
            if (v84 >= v101 || (v100 -= 8, v85 = v101, v9 >= v95))
            {
              v96 = v9;
              v85 = v101;
              goto LABEL_138;
            }
            continue;
          }
        }
        if (v88 < -7)
          goto LABEL_193;
        v18 = v86;
        if (v9 != v84 || v9 >= v85)
        {
          v94 = v82;
          memmove(v9, v84, 8 * v90);
          v82 = v94;
          v9 = __dst;
        }
        v95 = &v9[8 * v90];
        if (v83 < v82 && v88 >= 8)
        {
          v96 = v9;
          while (1)
          {
            v97 = *(_QWORD *)v85;
            if (*(_QWORD *)(*(_QWORD *)v85 + 96) >= *(_QWORD *)(*(_QWORD *)v96 + 96))
              break;
            v98 = v84 == v85;
            v85 += 8;
            if (!v98)
              goto LABEL_111;
LABEL_112:
            v84 += 8;
            if (v96 >= v95 || (unint64_t)v85 >= v87)
              goto LABEL_136;
          }
          v97 = *(_QWORD *)v96;
          v98 = v84 == v96;
          v96 += 8;
          if (v98)
            goto LABEL_112;
LABEL_111:
          *(_QWORD *)v84 = v97;
          goto LABEL_112;
        }
        v96 = v9;
LABEL_136:
        v85 = v84;
LABEL_138:
        v106 = v95 - v96;
        v107 = v95 - v96 + 7;
        if (v106 >= 0)
          v107 = v106;
        if (v106 <= -8)
          goto LABEL_193;
        v108 = v107 >> 3;
        if (v85 != v96 || v85 >= &v96[8 * v108])
        {
          v109 = v82;
          memmove(v85, v96, 8 * v108);
          v82 = v109;
        }
        if (v82 < v80)
          goto LABEL_164;
        v16 = v128;
        if (v133 > *((_QWORD *)v128 + 2))
          goto LABEL_165;
        *(_QWORD *)v131 = v80;
        v39 = v127;
        *(_QWORD *)&v127[16 * v132 + 8] = v82;
        v110 = *((_QWORD *)v128 + 2);
        if (v133 >= (uint64_t)v110)
          goto LABEL_166;
        v20 = v110 - 1;
        memmove(v130, v130 + 16, 16 * (v110 - 1 - v133));
        *((_QWORD *)v128 + 2) = v110 - 1;
        v9 = __dst;
        if (v110 <= 2)
          goto LABEL_20;
      }
    }
    v20 = _swiftEmptyArrayStorage[2];
LABEL_150:
    if (v20 >= 2)
    {
      v112 = *v121;
      while (1)
      {
        v113 = v20 - 2;
        if (v20 < 2)
          break;
        if (!v112)
          goto LABEL_192;
        v114 = v9;
        v115 = *(_QWORD *)&v16[16 * v113 + 32];
        v116 = *(_QWORD *)&v16[16 * v20 + 24];
        sub_10005681C((char *)(v112 + 8 * v115), (char *)(v112 + 8 * *(_QWORD *)&v16[16 * v20 + 16]), v112 + 8 * v116, v9);
        if (v124)
          goto LABEL_161;
        if (v116 < v115)
          goto LABEL_181;
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          v16 = sub_1000A4308((uint64_t)v16);
        if (v113 >= *((_QWORD *)v16 + 2))
          goto LABEL_182;
        v117 = &v16[16 * v113 + 32];
        *(_QWORD *)v117 = v115;
        *((_QWORD *)v117 + 1) = v116;
        v118 = *((_QWORD *)v16 + 2);
        if (v20 > v118)
          goto LABEL_183;
        memmove(&v16[16 * v20 + 16], &v16[16 * v20 + 32], 16 * (v118 - v20));
        *((_QWORD *)v16 + 2) = v118 - 1;
        v20 = v118 - 1;
        v9 = v114;
        if (v118 <= 2)
          goto LABEL_161;
      }
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
      goto LABEL_188;
    }
LABEL_161:
    v119 = swift_bridgeObjectRelease(v16);
    *(_QWORD *)((v134 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    specialized Array._endMutation()(v119);
    return swift_bridgeObjectRelease(v134);
  }
  return result;
}

uint64_t sub_10005681C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*(_QWORD *)(*((_QWORD *)v16 - 1) + 96) >= *(_QWORD *)(v20 + 96))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)(*(_QWORD *)v6 + 96) >= *(_QWORD *)(*(_QWORD *)v4 + 96))
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1000A4150(&v24, &v23, &v22);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100056A98(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v7 = a2[1];
    v6 = a2[2];
    *((_QWORD *)a1 + 1) = v7;
    *((_QWORD *)a1 + 2) = v6;
    v9 = a2[3];
    v8 = a2[4];
    *((_QWORD *)a1 + 3) = v9;
    *((_QWORD *)a1 + 4) = v8;
    v10 = a2[5];
    v11 = *(int *)(a3 + 32);
    v12 = &a1[v11];
    v13 = (char **)((char *)a2 + v11);
    *((_QWORD *)a1 + 5) = v10;
    v14 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    v15 = v4;
    v16 = v7;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v14);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v24 = v13[1];
        *(_QWORD *)v12 = *v13;
        *((_QWORD *)v12 + 1) = v24;
        v25 = (void *)v13[2];
        v26 = (void *)v13[3];
        *((_QWORD *)v12 + 2) = v25;
        *((_QWORD *)v12 + 3) = v26;
        swift_bridgeObjectRetain(v24);
        v27 = v25;
        v28 = v26;
        v29 = sub_100007D40(&qword_1000EC8C0);
        v30 = *(int *)(v29 + 80);
        v31 = &v12[v30];
        v32 = (char *)v13 + v30;
        v33 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
        {
          v34 = *((_QWORD *)v32 + 1);
          *(_QWORD *)v31 = *(_QWORD *)v32;
          *((_QWORD *)v31 + 1) = v34;
          v31[16] = v32[16];
          v35 = *((_QWORD *)v32 + 4);
          *((_QWORD *)v31 + 3) = *((_QWORD *)v32 + 3);
          *((_QWORD *)v31 + 4) = v35;
          v36 = *((_QWORD *)v32 + 5);
          v37 = *((_QWORD *)v32 + 6);
          *((_QWORD *)v31 + 5) = v36;
          *((_QWORD *)v31 + 6) = v37;
          swift_bridgeObjectRetain(v34);
          swift_bridgeObjectRetain(v35);
          swift_bridgeObjectRetain(v37);
          v38 = 1;
        }
        else
        {
          v44 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v31, v32, v44);
          v38 = 0;
        }
        swift_storeEnumTagMultiPayload(v31, v33, v38);
        v45 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
        v46 = &v12[v45];
        v47 = (_QWORD *)((char *)v13 + v45);
        v48 = v47[1];
        *(_QWORD *)v46 = *v47;
        *((_QWORD *)v46 + 1) = v48;
        v49 = (void *)v47[2];
        v50 = (void *)v47[3];
        *((_QWORD *)v46 + 2) = v49;
        *((_QWORD *)v46 + 3) = v50;
        v51 = *(int *)(v29 + 80);
        v52 = &v46[v51];
        v53 = (char *)v47 + v51;
        swift_bridgeObjectRetain(v48);
        v54 = v49;
        v55 = v50;
        if (swift_getEnumCaseMultiPayload(v53, v33) == 1)
        {
          v56 = *((_QWORD *)v53 + 1);
          *(_QWORD *)v52 = *(_QWORD *)v53;
          *((_QWORD *)v52 + 1) = v56;
          v52[16] = v53[16];
          v57 = *((_QWORD *)v53 + 4);
          *((_QWORD *)v52 + 3) = *((_QWORD *)v53 + 3);
          *((_QWORD *)v52 + 4) = v57;
          v58 = *((_QWORD *)v53 + 5);
          v59 = *((_QWORD *)v53 + 6);
          *((_QWORD *)v52 + 5) = v58;
          *((_QWORD *)v52 + 6) = v59;
          swift_bridgeObjectRetain(v56);
          swift_bridgeObjectRetain(v57);
          swift_bridgeObjectRetain(v59);
          v60 = 1;
        }
        else
        {
          v61 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v52, v53, v61);
          v60 = 0;
        }
        swift_storeEnumTagMultiPayload(v52, v33, v60);
        v41 = v12;
        v42 = v14;
        v43 = 2;
        goto LABEL_19;
      case 1:
        v39 = v13[1];
        *(_QWORD *)v12 = *v13;
        *((_QWORD *)v12 + 1) = v39;
        v40 = v13[2];
        *((_QWORD *)v12 + 2) = v40;
        swift_bridgeObjectRetain(v39);
        swift_bridgeObjectRetain(v40);
        v41 = v12;
        v42 = v14;
        v43 = 1;
LABEL_19:
        swift_storeEnumTagMultiPayload(v41, v42, v43);
        return v5;
      case 0:
        v18 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(v13, v18) == 1)
        {
          v19 = v13[1];
          *(_QWORD *)v12 = *v13;
          *((_QWORD *)v12 + 1) = v19;
          v12[16] = *((_BYTE *)v13 + 16);
          v20 = v13[4];
          *((_QWORD *)v12 + 3) = v13[3];
          *((_QWORD *)v12 + 4) = v20;
          v21 = v13[5];
          v22 = v13[6];
          *((_QWORD *)v12 + 5) = v21;
          *((_QWORD *)v12 + 6) = v22;
          swift_bridgeObjectRetain(v19);
          swift_bridgeObjectRetain(v20);
          swift_bridgeObjectRetain(v22);
          v23 = 1;
        }
        else
        {
          v62 = type metadata accessor for URL(0);
          (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v12, v13, v62);
          v23 = 0;
        }
        swift_storeEnumTagMultiPayload(v12, v18, v23);
        v41 = v12;
        v42 = v14;
        v43 = 0;
        goto LABEL_19;
    }
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return v5;
}

uint64_t type metadata accessor for BIABubbleViewModelUserInteractionParadigm(uint64_t a1)
{
  return sub_100057C70(a1, qword_1000EE470, (uint64_t)&nominal type descriptor for BIABubbleViewModelUserInteractionParadigm);
}

uint64_t type metadata accessor for BIABubbleViewModelUserAction(uint64_t a1)
{
  return sub_100057C70(a1, qword_1000EE3C8, (uint64_t)&nominal type descriptor for BIABubbleViewModelUserAction);
}

uint64_t sub_100056E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  result = swift_getEnumCaseMultiPayload(v4, v5);
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));

      v10 = sub_100007D40(&qword_1000EC8C0);
      v11 = (_QWORD *)(v4 + *(int *)(v10 + 80));
      v12 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
      {
        swift_bridgeObjectRelease(v11[1]);
        swift_bridgeObjectRelease(v11[4]);
        swift_bridgeObjectRelease(v11[6]);
      }
      else
      {
        v13 = type metadata accessor for URL(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
      }
      v14 = v4 + *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
      swift_bridgeObjectRelease(*(_QWORD *)(v14 + 8));

      v4 = v14 + *(int *)(v10 + 80);
      v8 = v4;
      v7 = v12;
      goto LABEL_11;
    case 1:
      swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));
      v9 = *(_QWORD *)(v4 + 16);
      return swift_bridgeObjectRelease(v9);
    case 0:
      v7 = type metadata accessor for BIABubbleViewModelUserAction(0);
      v8 = v4;
LABEL_11:
      if (swift_getEnumCaseMultiPayload(v8, v7) == 1)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));
        swift_bridgeObjectRelease(*(_QWORD *)(v4 + 32));
        v9 = *(_QWORD *)(v4 + 48);
        return swift_bridgeObjectRelease(v9);
      }
      v15 = type metadata accessor for URL(0);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v4, v15);
  }
  return result;
}

_QWORD *sub_100056FC4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  id v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(int *)(a3 + 32);
  v9 = (_QWORD *)(a2 + v8);
  v10 = (_QWORD *)((char *)a1 + v8);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v7;
  v11 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  v12 = v4;
  v13 = v5;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v11);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v21 = v9[1];
      *v10 = *v9;
      v10[1] = v21;
      v22 = (void *)v9[2];
      v23 = (void *)v9[3];
      v10[2] = v22;
      v10[3] = v23;
      swift_bridgeObjectRetain(v21);
      v24 = v22;
      v25 = v23;
      v26 = sub_100007D40(&qword_1000EC8C0);
      v27 = *(int *)(v26 + 80);
      v28 = (char *)v10 + v27;
      v29 = (char *)v9 + v27;
      v30 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
      {
        v31 = *((_QWORD *)v29 + 1);
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *((_QWORD *)v28 + 1) = v31;
        v28[16] = v29[16];
        v32 = *((_QWORD *)v29 + 4);
        *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
        *((_QWORD *)v28 + 4) = v32;
        v33 = *((_QWORD *)v29 + 5);
        v34 = *((_QWORD *)v29 + 6);
        *((_QWORD *)v28 + 5) = v33;
        *((_QWORD *)v28 + 6) = v34;
        swift_bridgeObjectRetain(v31);
        swift_bridgeObjectRetain(v32);
        swift_bridgeObjectRetain(v34);
        v35 = 1;
      }
      else
      {
        v41 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v28, v29, v41);
        v35 = 0;
      }
      swift_storeEnumTagMultiPayload(v28, v30, v35);
      v42 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
      v43 = (_QWORD *)((char *)v10 + v42);
      v44 = (_QWORD *)((char *)v9 + v42);
      v45 = v44[1];
      *v43 = *v44;
      v43[1] = v45;
      v46 = (void *)v44[2];
      v47 = (void *)v44[3];
      v43[2] = v46;
      v43[3] = v47;
      v48 = *(int *)(v26 + 80);
      v49 = (char *)v43 + v48;
      v50 = (char *)v44 + v48;
      swift_bridgeObjectRetain(v45);
      v51 = v46;
      v52 = v47;
      if (swift_getEnumCaseMultiPayload(v50, v30) == 1)
      {
        v53 = *((_QWORD *)v50 + 1);
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v53;
        v49[16] = v50[16];
        v54 = *((_QWORD *)v50 + 4);
        *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
        *((_QWORD *)v49 + 4) = v54;
        v55 = *((_QWORD *)v50 + 5);
        v56 = *((_QWORD *)v50 + 6);
        *((_QWORD *)v49 + 5) = v55;
        *((_QWORD *)v49 + 6) = v56;
        swift_bridgeObjectRetain(v53);
        swift_bridgeObjectRetain(v54);
        swift_bridgeObjectRetain(v56);
        v57 = 1;
      }
      else
      {
        v58 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v49, v50, v58);
        v57 = 0;
      }
      swift_storeEnumTagMultiPayload(v49, v30, v57);
      v38 = v10;
      v39 = v11;
      v40 = 2;
      goto LABEL_17;
    case 1:
      v36 = v9[1];
      *v10 = *v9;
      v10[1] = v36;
      v37 = v9[2];
      v10[2] = v37;
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRetain(v37);
      v38 = v10;
      v39 = v11;
      v40 = 1;
LABEL_17:
      swift_storeEnumTagMultiPayload(v38, v39, v40);
      return a1;
    case 0:
      v15 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v9, v15) == 1)
      {
        v16 = v9[1];
        *v10 = *v9;
        v10[1] = v16;
        *((_BYTE *)v10 + 16) = *((_BYTE *)v9 + 16);
        v17 = v9[4];
        v10[3] = v9[3];
        v10[4] = v17;
        v18 = v9[5];
        v19 = v9[6];
        v10[5] = v18;
        v10[6] = v19;
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v19);
        v20 = 1;
      }
      else
      {
        v59 = type metadata accessor for URL(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v10, v9, v59);
        v20 = 0;
      }
      swift_storeEnumTagMultiPayload(v10, v15, v20);
      v38 = v10;
      v39 = v11;
      v40 = 0;
      goto LABEL_17;
  }
  memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  return a1;
}

uint64_t sub_1000572E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  if (a1 != a2)
  {
    v16 = *(int *)(a3 + 32);
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    sub_1000367CC(a1 + v16, type metadata accessor for BIABubbleViewModelUserInteractionParadigm);
    v19 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v19);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *v17 = *v18;
        v26 = v18[1];
        v17[1] = v26;
        v27 = (void *)v18[2];
        v17[2] = v27;
        v28 = (void *)v18[3];
        v17[3] = v28;
        swift_bridgeObjectRetain(v26);
        v29 = v27;
        v30 = v28;
        v31 = sub_100007D40(&qword_1000EC8C0);
        v32 = *(int *)(v31 + 80);
        v33 = (char *)v17 + v32;
        v34 = (char *)v18 + v32;
        v35 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
        {
          *(_QWORD *)v33 = *(_QWORD *)v34;
          v36 = *((_QWORD *)v34 + 1);
          *((_QWORD *)v33 + 1) = v36;
          v33[16] = v34[16];
          *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
          v37 = *((_QWORD *)v34 + 4);
          *((_QWORD *)v33 + 4) = v37;
          *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
          v38 = *((_QWORD *)v34 + 6);
          *((_QWORD *)v33 + 6) = v38;
          swift_bridgeObjectRetain(v36);
          swift_bridgeObjectRetain(v37);
          swift_bridgeObjectRetain(v38);
          v39 = 1;
        }
        else
        {
          v46 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v33, v34, v46);
          v39 = 0;
        }
        swift_storeEnumTagMultiPayload(v33, v35, v39);
        v47 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
        v48 = (_QWORD *)((char *)v17 + v47);
        v49 = (_QWORD *)((char *)v18 + v47);
        *v48 = *v49;
        v50 = v49[1];
        v48[1] = v50;
        v51 = (void *)v49[2];
        v48[2] = v51;
        v52 = (void *)v49[3];
        v48[3] = v52;
        v53 = *(int *)(v31 + 80);
        v54 = (char *)v48 + v53;
        v55 = (char *)v49 + v53;
        swift_bridgeObjectRetain(v50);
        v56 = v51;
        v57 = v52;
        if (swift_getEnumCaseMultiPayload(v55, v35) == 1)
        {
          *(_QWORD *)v54 = *(_QWORD *)v55;
          v58 = *((_QWORD *)v55 + 1);
          *((_QWORD *)v54 + 1) = v58;
          v54[16] = v55[16];
          *((_QWORD *)v54 + 3) = *((_QWORD *)v55 + 3);
          v59 = *((_QWORD *)v55 + 4);
          *((_QWORD *)v54 + 4) = v59;
          *((_QWORD *)v54 + 5) = *((_QWORD *)v55 + 5);
          v60 = *((_QWORD *)v55 + 6);
          *((_QWORD *)v54 + 6) = v60;
          swift_bridgeObjectRetain(v58);
          swift_bridgeObjectRetain(v59);
          swift_bridgeObjectRetain(v60);
          v61 = 1;
        }
        else
        {
          v62 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v54, v55, v62);
          v61 = 0;
        }
        swift_storeEnumTagMultiPayload(v54, v35, v61);
        v42 = v17;
        v43 = v19;
        v44 = 2;
        goto LABEL_18;
      case 1:
        *v17 = *v18;
        v40 = v18[1];
        v17[1] = v40;
        v41 = v18[2];
        v17[2] = v41;
        swift_bridgeObjectRetain(v40);
        swift_bridgeObjectRetain(v41);
        v42 = v17;
        v43 = v19;
        v44 = 1;
LABEL_18:
        swift_storeEnumTagMultiPayload(v42, v43, v44);
        return a1;
      case 0:
        v21 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(v18, v21) == 1)
        {
          *v17 = *v18;
          v22 = v18[1];
          v17[1] = v22;
          *((_BYTE *)v17 + 16) = *((_BYTE *)v18 + 16);
          v17[3] = v18[3];
          v23 = v18[4];
          v17[4] = v23;
          v17[5] = v18[5];
          v24 = v18[6];
          v17[6] = v24;
          swift_bridgeObjectRetain(v22);
          swift_bridgeObjectRetain(v23);
          swift_bridgeObjectRetain(v24);
          v25 = 1;
        }
        else
        {
          v45 = type metadata accessor for URL(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v17, v18, v45);
          v25 = 0;
        }
        swift_storeEnumTagMultiPayload(v17, v21, v25);
        v42 = v17;
        v43 = v19;
        v44 = 0;
        goto LABEL_18;
    }
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1000576C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 32);
  v6 = (_OWORD *)((char *)a1 + v5);
  v7 = (_OWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  if (EnumCaseMultiPayload == 2)
  {
    v11 = v7[1];
    *v6 = *v7;
    v6[1] = v11;
    v12 = sub_100007D40(&qword_1000EC8C0);
    v13 = *(int *)(v12 + 80);
    v14 = (char *)v6 + v13;
    v15 = (char *)v7 + v13;
    v16 = type metadata accessor for BIABubbleViewModelUserAction(0);
    if (swift_getEnumCaseMultiPayload(v15, v16))
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v21 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v14, v15, v21);
      swift_storeEnumTagMultiPayload(v14, v16, 0);
    }
    v22 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
    v23 = (_OWORD *)((char *)v6 + v22);
    v24 = (_OWORD *)((char *)v7 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = *(int *)(v12 + 80);
    v27 = (char *)v23 + v26;
    v28 = (char *)v24 + v26;
    if (swift_getEnumCaseMultiPayload((char *)v24 + v26, v16))
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      swift_storeEnumTagMultiPayload(v27, v16, 0);
    }
    v18 = v6;
    v19 = v8;
    v20 = 2;
    goto LABEL_15;
  }
  if (!EnumCaseMultiPayload)
  {
    v10 = type metadata accessor for BIABubbleViewModelUserAction(0);
    if (swift_getEnumCaseMultiPayload(v7, v10))
    {
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v17 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v6, v7, v17);
      swift_storeEnumTagMultiPayload(v6, v10, 0);
    }
    v18 = v6;
    v19 = v8;
    v20 = 0;
LABEL_15:
    swift_storeEnumTagMultiPayload(v18, v19, v20);
    return a1;
  }
  memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  return a1;
}

void **sub_1000578E4(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v6 = *a1;
  *a1 = *a2;

  v7 = a1[1];
  a1[1] = a2[1];

  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 32);
    v13 = (_OWORD *)((char *)a1 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    sub_1000367CC((uint64_t)a1 + v12, type metadata accessor for BIABubbleViewModelUserInteractionParadigm);
    v15 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
    if (EnumCaseMultiPayload == 2)
    {
      v18 = v14[1];
      *v13 = *v14;
      v13[1] = v18;
      v19 = sub_100007D40(&qword_1000EC8C0);
      v20 = *(int *)(v19 + 80);
      v21 = (char *)v13 + v20;
      v22 = (char *)v14 + v20;
      v23 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v22, v23))
      {
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v28 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v21, v22, v28);
        swift_storeEnumTagMultiPayload(v21, v23, 0);
      }
      v29 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
      v30 = (_OWORD *)((char *)v13 + v29);
      v31 = (_OWORD *)((char *)v14 + v29);
      v32 = v31[1];
      *v30 = *v31;
      v30[1] = v32;
      v33 = *(int *)(v19 + 80);
      v34 = (char *)v30 + v33;
      v35 = (char *)v31 + v33;
      if (swift_getEnumCaseMultiPayload((char *)v31 + v33, v23))
      {
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v36 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
        swift_storeEnumTagMultiPayload(v34, v23, 0);
      }
      v25 = v13;
      v26 = v15;
      v27 = 2;
      goto LABEL_16;
    }
    if (!EnumCaseMultiPayload)
    {
      v17 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v14, v17))
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v24 = type metadata accessor for URL(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v13, v14, v24);
        swift_storeEnumTagMultiPayload(v13, v17, 0);
      }
      v25 = v13;
      v26 = v15;
      v27 = 0;
LABEL_16:
      swift_storeEnumTagMultiPayload(v25, v26, v27);
      return a1;
    }
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100057B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100057B60);
}

uint64_t sub_100057B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100057BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100057BE8);
}

uint64_t sub_100057BE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for BIABubbleViewModel(uint64_t a1)
{
  return sub_100057C70(a1, qword_1000EE310, (uint64_t)&nominal type descriptor for BIABubbleViewModel);
}

uint64_t sub_100057C70(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_100057CA4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = &unk_1000B1EE0;
  v4[3] = &unk_1000B1EF8;
  result = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100057D2C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v14);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v8;
      v9 = a2[5];
      v10 = a2[6];
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v10;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v10);
      v11 = a1;
      v12 = a3;
      v13 = 1;
    }
    else
    {
      v15 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_100057E10(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[4]);
    return swift_bridgeObjectRelease(a1[6]);
  }
  else
  {
    v4 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
}

uint64_t sub_100057E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v7;
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    v10 = a1;
    v11 = a3;
    v12 = 1;
  }
  else
  {
    v13 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    v10 = a1;
    v11 = a3;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

uint64_t sub_100057F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1000367CC(a1, type metadata accessor for BIABubbleViewModelUserAction);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v6;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v8 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v8;
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

void *sub_100058010(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_100058098(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1000367CC((uint64_t)a1, type metadata accessor for BIABubbleViewModelUserAction);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100058138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_100058144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_100058154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_100058164(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "8";
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_1000581D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v17);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        v19 = (void *)a2[2];
        v20 = (void *)a2[3];
        a1[2] = v19;
        a1[3] = v20;
        swift_bridgeObjectRetain(v18);
        v21 = v19;
        v22 = v20;
        v23 = sub_100007D40(&qword_1000EC8C0);
        v24 = *(int *)(v23 + 80);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
        {
          v28 = *((_QWORD *)v26 + 1);
          *(_QWORD *)v25 = *(_QWORD *)v26;
          *((_QWORD *)v25 + 1) = v28;
          v25[16] = v26[16];
          v29 = *((_QWORD *)v26 + 4);
          *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
          *((_QWORD *)v25 + 4) = v29;
          v30 = *((_QWORD *)v26 + 5);
          v31 = *((_QWORD *)v26 + 6);
          *((_QWORD *)v25 + 5) = v30;
          *((_QWORD *)v25 + 6) = v31;
          swift_bridgeObjectRetain(v28);
          swift_bridgeObjectRetain(v29);
          swift_bridgeObjectRetain(v31);
          v32 = 1;
        }
        else
        {
          v38 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v25, v26, v38);
          v32 = 0;
        }
        swift_storeEnumTagMultiPayload(v25, v27, v32);
        v39 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
        v40 = (_QWORD *)((char *)a1 + v39);
        v41 = (_QWORD *)((char *)a2 + v39);
        v42 = v41[1];
        *v40 = *v41;
        v40[1] = v42;
        v43 = (void *)v41[2];
        v44 = (void *)v41[3];
        v40[2] = v43;
        v40[3] = v44;
        v45 = *(int *)(v23 + 80);
        v46 = (char *)v40 + v45;
        v47 = (char *)v41 + v45;
        swift_bridgeObjectRetain(v42);
        v48 = v43;
        v49 = v44;
        if (swift_getEnumCaseMultiPayload(v47, v27) == 1)
        {
          v50 = *((_QWORD *)v47 + 1);
          *(_QWORD *)v46 = *(_QWORD *)v47;
          *((_QWORD *)v46 + 1) = v50;
          v46[16] = v47[16];
          v51 = *((_QWORD *)v47 + 4);
          *((_QWORD *)v46 + 3) = *((_QWORD *)v47 + 3);
          *((_QWORD *)v46 + 4) = v51;
          v52 = *((_QWORD *)v47 + 5);
          v53 = *((_QWORD *)v47 + 6);
          *((_QWORD *)v46 + 5) = v52;
          *((_QWORD *)v46 + 6) = v53;
          swift_bridgeObjectRetain(v50);
          swift_bridgeObjectRetain(v51);
          swift_bridgeObjectRetain(v53);
          v54 = 1;
        }
        else
        {
          v55 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v46, v47, v55);
          v54 = 0;
        }
        swift_storeEnumTagMultiPayload(v46, v27, v54);
        v35 = a1;
        v36 = a3;
        v37 = 2;
        goto LABEL_19;
      case 1:
        v33 = a2[1];
        *a1 = *a2;
        a1[1] = v33;
        v34 = a2[2];
        a1[2] = v34;
        swift_bridgeObjectRetain(v33);
        swift_bridgeObjectRetain(v34);
        v35 = a1;
        v36 = a3;
        v37 = 1;
LABEL_19:
        swift_storeEnumTagMultiPayload(v35, v36, v37);
        return a1;
      case 0:
        v9 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(a2, v9) == 1)
        {
          v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          v11 = a2[4];
          a1[3] = a2[3];
          a1[4] = v11;
          v12 = a2[5];
          v13 = a2[6];
          a1[5] = v12;
          a1[6] = v13;
          swift_bridgeObjectRetain(v10);
          swift_bridgeObjectRetain(v11);
          swift_bridgeObjectRetain(v13);
          v14 = a1;
          v15 = v9;
          v16 = 1;
        }
        else
        {
          v56 = type metadata accessor for URL(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(a1, a2, v56);
          v14 = a1;
          v15 = v9;
          v16 = 0;
        }
        swift_storeEnumTagMultiPayload(v14, v15, v16);
        v35 = a1;
        v36 = a3;
        v37 = 0;
        goto LABEL_19;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1000584D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = a1;
  result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));

      v7 = sub_100007D40(&qword_1000EC8C0);
      v8 = (_QWORD *)(v2 + *(int *)(v7 + 80));
      v9 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
      {
        swift_bridgeObjectRelease(v8[1]);
        swift_bridgeObjectRelease(v8[4]);
        swift_bridgeObjectRelease(v8[6]);
      }
      else
      {
        v10 = type metadata accessor for URL(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
      }
      v11 = v2 + *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + 8));

      v2 = v11 + *(int *)(v7 + 80);
      v5 = v2;
      v4 = v9;
      goto LABEL_11;
    case 1:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      v6 = *(_QWORD *)(v2 + 16);
      return swift_bridgeObjectRelease(v6);
    case 0:
      v4 = type metadata accessor for BIABubbleViewModelUserAction(0);
      v5 = v2;
LABEL_11:
      if (swift_getEnumCaseMultiPayload(v5, v4) == 1)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
        swift_bridgeObjectRelease(*(_QWORD *)(v2 + 32));
        v6 = *(_QWORD *)(v2 + 48);
        return swift_bridgeObjectRelease(v6);
      }
      v12 = type metadata accessor for URL(0);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v2, v12);
  }
  return result;
}

_QWORD *sub_100058650(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      v16 = (void *)a2[2];
      v17 = (void *)a2[3];
      a1[2] = v16;
      a1[3] = v17;
      swift_bridgeObjectRetain(v15);
      v18 = v16;
      v19 = v17;
      v20 = sub_100007D40(&qword_1000EC8C0);
      v21 = *(int *)(v20 + 80);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
      {
        v25 = *((_QWORD *)v23 + 1);
        *(_QWORD *)v22 = *(_QWORD *)v23;
        *((_QWORD *)v22 + 1) = v25;
        v22[16] = v23[16];
        v26 = *((_QWORD *)v23 + 4);
        *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
        *((_QWORD *)v22 + 4) = v26;
        v27 = *((_QWORD *)v23 + 5);
        v28 = *((_QWORD *)v23 + 6);
        *((_QWORD *)v22 + 5) = v27;
        *((_QWORD *)v22 + 6) = v28;
        swift_bridgeObjectRetain(v25);
        swift_bridgeObjectRetain(v26);
        swift_bridgeObjectRetain(v28);
        v29 = 1;
      }
      else
      {
        v35 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v22, v23, v35);
        v29 = 0;
      }
      swift_storeEnumTagMultiPayload(v22, v24, v29);
      v36 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
      v37 = (_QWORD *)((char *)a1 + v36);
      v38 = (_QWORD *)((char *)a2 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      v40 = (void *)v38[2];
      v41 = (void *)v38[3];
      v37[2] = v40;
      v37[3] = v41;
      v42 = *(int *)(v20 + 80);
      v43 = (char *)v37 + v42;
      v44 = (char *)v38 + v42;
      swift_bridgeObjectRetain(v39);
      v45 = v40;
      v46 = v41;
      if (swift_getEnumCaseMultiPayload(v44, v24) == 1)
      {
        v47 = *((_QWORD *)v44 + 1);
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *((_QWORD *)v43 + 1) = v47;
        v43[16] = v44[16];
        v48 = *((_QWORD *)v44 + 4);
        *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
        *((_QWORD *)v43 + 4) = v48;
        v49 = *((_QWORD *)v44 + 5);
        v50 = *((_QWORD *)v44 + 6);
        *((_QWORD *)v43 + 5) = v49;
        *((_QWORD *)v43 + 6) = v50;
        swift_bridgeObjectRetain(v47);
        swift_bridgeObjectRetain(v48);
        swift_bridgeObjectRetain(v50);
        v51 = 1;
      }
      else
      {
        v52 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v43, v44, v52);
        v51 = 0;
      }
      swift_storeEnumTagMultiPayload(v43, v24, v51);
      v32 = a1;
      v33 = a3;
      v34 = 2;
      goto LABEL_17;
    case 1:
      v30 = a2[1];
      *a1 = *a2;
      a1[1] = v30;
      v31 = a2[2];
      a1[2] = v31;
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRetain(v31);
      v32 = a1;
      v33 = a3;
      v34 = 1;
LABEL_17:
      swift_storeEnumTagMultiPayload(v32, v33, v34);
      return a1;
    case 0:
      v7 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
      {
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v9 = a2[4];
        a1[3] = a2[3];
        a1[4] = v9;
        v10 = a2[5];
        v11 = a2[6];
        a1[5] = v10;
        a1[6] = v11;
        swift_bridgeObjectRetain(v8);
        swift_bridgeObjectRetain(v9);
        swift_bridgeObjectRetain(v11);
        v12 = a1;
        v13 = v7;
        v14 = 1;
      }
      else
      {
        v53 = type metadata accessor for URL(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(a1, a2, v53);
        v12 = a1;
        v13 = v7;
        v14 = 0;
      }
      swift_storeEnumTagMultiPayload(v12, v13, v14);
      v32 = a1;
      v33 = a3;
      v34 = 0;
      goto LABEL_17;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_10005892C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  if (a1 != a2)
  {
    sub_1000367CC((uint64_t)a1, type metadata accessor for BIABubbleViewModelUserInteractionParadigm);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *a2;
        v14 = a2[1];
        a1[1] = v14;
        v15 = (void *)a2[2];
        a1[2] = v15;
        v16 = (void *)a2[3];
        a1[3] = v16;
        swift_bridgeObjectRetain(v14);
        v17 = v15;
        v18 = v16;
        v19 = sub_100007D40(&qword_1000EC8C0);
        v20 = *(int *)(v19 + 80);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
        {
          *(_QWORD *)v21 = *(_QWORD *)v22;
          v24 = *((_QWORD *)v22 + 1);
          *((_QWORD *)v21 + 1) = v24;
          v21[16] = v22[16];
          *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
          v25 = *((_QWORD *)v22 + 4);
          *((_QWORD *)v21 + 4) = v25;
          *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
          v26 = *((_QWORD *)v22 + 6);
          *((_QWORD *)v21 + 6) = v26;
          swift_bridgeObjectRetain(v24);
          swift_bridgeObjectRetain(v25);
          swift_bridgeObjectRetain(v26);
          v27 = 1;
        }
        else
        {
          v34 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v21, v22, v34);
          v27 = 0;
        }
        swift_storeEnumTagMultiPayload(v21, v23, v27);
        v35 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
        v36 = (_QWORD *)((char *)a1 + v35);
        v37 = (_QWORD *)((char *)a2 + v35);
        *v36 = *v37;
        v38 = v37[1];
        v36[1] = v38;
        v39 = (void *)v37[2];
        v36[2] = v39;
        v40 = (void *)v37[3];
        v36[3] = v40;
        v41 = *(int *)(v19 + 80);
        v42 = (char *)v36 + v41;
        v43 = (char *)v37 + v41;
        swift_bridgeObjectRetain(v38);
        v44 = v39;
        v45 = v40;
        if (swift_getEnumCaseMultiPayload(v43, v23) == 1)
        {
          *(_QWORD *)v42 = *(_QWORD *)v43;
          v46 = *((_QWORD *)v43 + 1);
          *((_QWORD *)v42 + 1) = v46;
          v42[16] = v43[16];
          *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
          v47 = *((_QWORD *)v43 + 4);
          *((_QWORD *)v42 + 4) = v47;
          *((_QWORD *)v42 + 5) = *((_QWORD *)v43 + 5);
          v48 = *((_QWORD *)v43 + 6);
          *((_QWORD *)v42 + 6) = v48;
          swift_bridgeObjectRetain(v46);
          swift_bridgeObjectRetain(v47);
          swift_bridgeObjectRetain(v48);
          v49 = 1;
        }
        else
        {
          v50 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v42, v43, v50);
          v49 = 0;
        }
        swift_storeEnumTagMultiPayload(v42, v23, v49);
        v30 = a1;
        v31 = a3;
        v32 = 2;
        goto LABEL_18;
      case 1:
        *a1 = *a2;
        v28 = a2[1];
        a1[1] = v28;
        v29 = a2[2];
        a1[2] = v29;
        swift_bridgeObjectRetain(v28);
        swift_bridgeObjectRetain(v29);
        v30 = a1;
        v31 = a3;
        v32 = 1;
LABEL_18:
        swift_storeEnumTagMultiPayload(v30, v31, v32);
        return a1;
      case 0:
        v7 = type metadata accessor for BIABubbleViewModelUserAction(0);
        if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
        {
          *a1 = *a2;
          v8 = a2[1];
          a1[1] = v8;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          a1[3] = a2[3];
          v9 = a2[4];
          a1[4] = v9;
          a1[5] = a2[5];
          v10 = a2[6];
          a1[6] = v10;
          swift_bridgeObjectRetain(v8);
          swift_bridgeObjectRetain(v9);
          swift_bridgeObjectRetain(v10);
          v11 = a1;
          v12 = v7;
          v13 = 1;
        }
        else
        {
          v33 = type metadata accessor for URL(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
          v11 = a1;
          v12 = v7;
          v13 = 0;
        }
        swift_storeEnumTagMultiPayload(v11, v12, v13);
        v30 = a1;
        v31 = a3;
        v32 = 0;
        goto LABEL_18;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_100058C90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = sub_100007D40(&qword_1000EC8C0);
    v10 = *(int *)(v9 + 80);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for BIABubbleViewModelUserAction(0);
    if (swift_getEnumCaseMultiPayload(v12, v13))
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v18 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v11, v12, v18);
      swift_storeEnumTagMultiPayload(v11, v13, 0);
    }
    v19 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
    v20 = (_OWORD *)((char *)a1 + v19);
    v21 = (_OWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = *(int *)(v9 + 80);
    v24 = (char *)v20 + v23;
    v25 = (char *)v21 + v23;
    if (swift_getEnumCaseMultiPayload((char *)v21 + v23, v13))
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      swift_storeEnumTagMultiPayload(v24, v13, 0);
    }
    v15 = a1;
    v16 = a3;
    v17 = 2;
    goto LABEL_15;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for BIABubbleViewModelUserAction(0);
    if (swift_getEnumCaseMultiPayload(a2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      swift_storeEnumTagMultiPayload(a1, v7, 0);
    }
    v15 = a1;
    v16 = a3;
    v17 = 0;
LABEL_15:
    swift_storeEnumTagMultiPayload(v15, v16, v17);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_100058E90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  if (a1 != a2)
  {
    sub_1000367CC((uint64_t)a1, type metadata accessor for BIABubbleViewModelUserInteractionParadigm);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = sub_100007D40(&qword_1000EC8C0);
      v10 = *(int *)(v9 + 80);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(v12, v13))
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v18 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v11, v12, v18);
        swift_storeEnumTagMultiPayload(v11, v13, 0);
      }
      v19 = *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
      v20 = (_OWORD *)((char *)a1 + v19);
      v21 = (_OWORD *)((char *)a2 + v19);
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      v23 = *(int *)(v9 + 80);
      v24 = (char *)v20 + v23;
      v25 = (char *)v21 + v23;
      if (swift_getEnumCaseMultiPayload((char *)v21 + v23, v13))
      {
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v26 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        swift_storeEnumTagMultiPayload(v24, v13, 0);
      }
      v15 = a1;
      v16 = a3;
      v17 = 2;
      goto LABEL_16;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for BIABubbleViewModelUserAction(0);
      if (swift_getEnumCaseMultiPayload(a2, v7))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v14 = type metadata accessor for URL(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload(a1, v7, 0);
      }
      v15 = a1;
      v16 = a3;
      v17 = 0;
LABEL_16:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000590A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[32];
  void *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _BYTE v10[32];
  _BYTE v11[32];
  _QWORD v12[3];

  result = type metadata accessor for BIABubbleViewModelUserAction(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v12[0] = v4;
    v12[1] = &unk_1000B1F80;
    v6 = &unk_1000B1EE0;
    v7 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v9 = v4;
    swift_getTupleTypeLayout(v10, 0, 4, &v6);
    v6 = &unk_1000B1EE0;
    v7 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v9 = v4;
    swift_getTupleTypeLayout(v5, 0, 4, &v6);
    swift_getTupleTypeLayout2(v11, v10, v5);
    v12[2] = v11;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v12);
    return 0;
  }
  return result;
}

void sub_100059180(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  Class isa;
  id v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  Class v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  v4 = a1[7];
  *(_QWORD *)(a2 + 16) = a1[6];
  *(_QWORD *)(a2 + 24) = v4;
  v5 = a1[9];
  *(_QWORD *)(a2 + 32) = a1[8];
  *(_QWORD *)(a2 + 40) = v5;
  v6 = (uint64_t)a1 + *(int *)(type metadata accessor for BIAPayload(0) + 36);
  v7 = type metadata accessor for BIABubbleViewModel(0);
  sub_100059698(v6, a2 + *(int *)(v7 + 32));
  v8 = a1[3];
  if (!v8)
  {
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v4);
    v16 = a1[5];
    if (!v16)
      goto LABEL_5;
    goto LABEL_8;
  }
  v9 = a1[2];
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v4);
  v10 = Data.init(base64Encoded:options:)(v9, v8, 0);
  v12 = v11;
  swift_bridgeObjectRelease(v8);
  if (v12 >> 60 == 15
    || (v13 = objc_allocWithZone((Class)UIImage),
        isa = Data._bridgeToObjectiveC()().super.isa,
        v15 = objc_msgSend(v13, "initWithData:", isa),
        sub_100010BE8(v10, v12),
        isa,
        !v15))
  {
    v19 = 0;
LABEL_12:
    v27 = sub_1000596DC();
    v28 = swift_allocError(&type metadata for BIABubbleViewModelError, v27, 0, 0);
    *v29 = v19;
    swift_willThrow(v28);
    sub_1000367CC((uint64_t)a1, type metadata accessor for BIAPayload);
    v17 = type metadata accessor for BIABubbleViewModel;
    v18 = a2;
    goto LABEL_13;
  }
  *(_QWORD *)(a2 + 8) = v15;
  v16 = a1[5];
  if (v16)
  {
LABEL_8:
    v20 = a1[4];
    swift_bridgeObjectRetain(v16);
    v21 = Data.init(base64Encoded:options:)(v20, v16, 0);
    v23 = v22;
    swift_bridgeObjectRelease(v16);
    if (v23 >> 60 != 15)
    {
      v24 = objc_allocWithZone((Class)UIImage);
      v25 = Data._bridgeToObjectiveC()().super.isa;
      v26 = objc_msgSend(v24, "initWithData:", v25);
      sub_100010BE8(v21, v23);

      if (v26)
      {
        sub_1000367CC((uint64_t)a1, type metadata accessor for BIAPayload);

        *(_QWORD *)a2 = v26;
        return;
      }
    }
    v19 = 1;
    goto LABEL_12;
  }
LABEL_5:
  v17 = type metadata accessor for BIAPayload;
  v18 = (uint64_t)a1;
LABEL_13:
  sub_1000367CC(v18, v17);
}

uint64_t sub_1000593C8(char *a1, char *a2)
{
  return sub_10004FCB4(*a1, *a2);
}

Swift::Int sub_1000593D4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 28526;
  else
    v2 = 7562617;
  if (v1)
    v3 = 0xE200000000000000;
  else
    v3 = 0xE300000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100059440(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 28526;
  else
    v2 = 7562617;
  if (*v1)
    v3 = 0xE200000000000000;
  else
    v3 = 0xE300000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100059488()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 28526;
  else
    v2 = 7562617;
  if (v1)
    v3 = 0xE200000000000000;
  else
    v3 = 0xE300000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1000594F0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D60A0, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_10005954C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7562617;
  if (*v1)
    v2 = 28526;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE200000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100059578(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[3];
  char v12[8];

  if ((result & 1) == 0)
  {
    if (qword_1000EBCB8 != -1)
      result = swift_once(&qword_1000EBCB8, sub_100082798);
    v3 = qword_1000F8A90;
    v4 = static os_log_type_t.error.getter(result);
    v5 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v6 = swift_allocObject(v5, 72, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1000AF070;
    if (a2)
    {
      swift_getErrorValue(a2, v12, v11);
      a2 = Error.localizedDescription.getter(v11[1], v11[2]);
      v8 = v7;
    }
    else
    {
      v8 = 0;
    }
    *(_QWORD *)(v6 + 56) = &type metadata for String;
    *(_QWORD *)(v6 + 64) = sub_100009084();
    if (v8)
      v9 = a2;
    else
      v9 = 0;
    v10 = 0xE000000000000000;
    if (v8)
      v10 = v8;
    *(_QWORD *)(v6 + 32) = v9;
    *(_QWORD *)(v6 + 40) = v10;
    os_log(_:dso:log:type:_:)("BIABubbleViewModelUserAction: Failed to open URL, error: %@", 59, 2, &_mh_execute_header, v3, v4, v6);
    return swift_bridgeObjectRelease(v6);
  }
  return result;
}

uint64_t sub_100059698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000596DC()
{
  unint64_t result;

  result = qword_1000EE4A8;
  if (!qword_1000EE4A8)
  {
    result = swift_getWitnessTable(&unk_1000B20FC, &type metadata for BIABubbleViewModelError);
    atomic_store(result, (unint64_t *)&qword_1000EE4A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for BIABubbleViewModelError()
{
  return &type metadata for BIABubbleViewModelError;
}

uint64_t _s8Business51BIABubbleViewModelUserActionDeterminateResponseTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100059780 + 4 * byte_1000B1EA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000597B4 + 4 * byte_1000B1EA0[v4]))();
}

uint64_t sub_1000597B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000597BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000597C4);
  return result;
}

uint64_t sub_1000597D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000597D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000597DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000597E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BIABubbleViewModelUserActionDeterminateResponseType()
{
  return &type metadata for BIABubbleViewModelUserActionDeterminateResponseType;
}

unint64_t sub_100059804()
{
  unint64_t result;

  result = qword_1000EE4B0;
  if (!qword_1000EE4B0)
  {
    result = swift_getWitnessTable(&unk_1000B206C, &type metadata for BIABubbleViewModelUserActionDeterminateResponseType);
    atomic_store(result, (unint64_t *)&qword_1000EE4B0);
  }
  return result;
}

unint64_t sub_10005984C()
{
  unint64_t result;

  result = qword_1000EE4B8;
  if (!qword_1000EE4B8)
  {
    result = swift_getWitnessTable(&unk_1000B20D4, &type metadata for BIABubbleViewModelError);
    atomic_store(result, (unint64_t *)&qword_1000EE4B8);
  }
  return result;
}

BOOL sub_100059898()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;

  v1 = v0[3];
  v2 = v0[2] & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0)
    v2 = HIBYTE(v1) & 0xF;
  if (v2)
    return 1;
  v3 = v0[6];
  v4 = v0[5] & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v4 = HIBYTE(v3) & 0xF;
  if (v4)
    return 1;
  v6 = v0[9];
  v7 = v0[8] & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v6) & 0xF;
  return v7 && sub_10002DA10() > 1u;
}

uint64_t sub_100059918()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[9]);
  sub_100028980(v0[10], v0[11]);
  return swift_deallocClassInstance(v0, 97, 7);
}

uint64_t type metadata accessor for FooterToolbarModel()
{
  return objc_opt_self(_TtC8Business18FooterToolbarModel);
}

Swift::Int sub_100059974()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x746C7561666564, 0xE700000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1000599C4(uint64_t a1)
{
  return String.hash(into:)(a1, 0x746C7561666564, 0xE700000000000000);
}

Swift::Int sub_1000599DC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x746C7561666564, 0xE700000000000000);
  return Hasher._finalize()();
}

uint64_t sub_100059A28@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D60F0, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_100059A78(_QWORD *a1@<X8>)
{
  *a1 = 0x746C7561666564;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_100059A94(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  void *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;

  v3 = v2;
  *(_QWORD *)(v3 + 16) = 0;
  if (!*(_QWORD *)(a1 + 16)
    || (v6 = sub_10004F068(0x696669746E656469, 0xEA00000000007265), (v7 & 1) == 0)
    || (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)&v49),
        (swift_dynamicCast(&v47, &v49, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
    swift_bridgeObjectRelease(a1);
    v18 = swift_bridgeObjectRelease(a2);
    if (qword_1000EBCB8 != -1)
      v18 = swift_once(&qword_1000EBCB8, sub_100082798);
    v19 = qword_1000F8A90;
    v20 = static os_log_type_t.error.getter(v18);
    os_log(_:dso:log:type:_:)("Unable to create list item: IdentifierDictionaryKey is missing", 62, 2, &_mh_execute_header, v19, v20, _swiftEmptyArrayStorage);
    goto LABEL_14;
  }
  v8 = v48;
  if (!*(_QWORD *)(a1 + 16) || (v9 = v47, v10 = sub_10004F068(0x656C746974, 0xE500000000000000), (v11 & 1) == 0))
  {
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(a2);
    v23 = v8;
LABEL_17:
    v24 = swift_bridgeObjectRelease(v23);
    if (qword_1000EBCB8 != -1)
      v24 = swift_once(&qword_1000EBCB8, sub_100082798);
    v25 = qword_1000F8A90;
    v26 = static os_log_type_t.error.getter(v24);
    os_log(_:dso:log:type:_:)("Unable to create list item: TitleDictionaryKey is missing", 57, 2, &_mh_execute_header, v25, v26, _swiftEmptyArrayStorage);
LABEL_14:

    v21 = type metadata accessor for IMBListItem();
    swift_deallocPartialClassInstance(v3, v21, 104, 7);
    return 0;
  }
  sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)&v49);
  if ((swift_dynamicCast(&v47, &v49, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(a1);
    v23 = a2;
    goto LABEL_17;
  }
  v12 = v47;
  v13 = v48;
  if (*(_QWORD *)(a1 + 16)
    && (v14 = sub_10004F068(0x656C797473, 0xE500000000000000), (v15 & 1) != 0)
    && (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v49),
        swift_dynamicCast(&v47, &v49, (char *)&type metadata for Any + 8, &type metadata for String, 6)))
  {
    v16 = v47;
    v17 = v48;
  }
  else
  {
    v16 = 0;
    v17 = 0xE000000000000000;
  }
  v27 = v17;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D5ED8, *(Swift::String *)&v16);
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(v3 + 24) = v9;
  *(_QWORD *)(v3 + 32) = v8;
  *(_QWORD *)(v3 + 40) = v12;
  *(_QWORD *)(v3 + 48) = v13;
  v28 = *(_QWORD *)(a1 + 16);
  if (!v28)
    goto LABEL_27;
  v29 = sub_10004F068(0x656C746974627573, 0xE800000000000000);
  if ((v30 & 1) == 0)
  {
    v28 = 0;
LABEL_27:
    v32 = 0;
    goto LABEL_28;
  }
  sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v29, (uint64_t)&v49);
  v31 = swift_dynamicCast(&v47, &v49, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  v28 = v47;
  v32 = v48;
  if (!v31)
  {
    v28 = 0;
    v32 = 0;
  }
LABEL_28:
  *(_QWORD *)(v3 + 56) = v28;
  *(_QWORD *)(v3 + 64) = v32;
  v33 = *(_QWORD *)(a1 + 16);
  if (!v33)
  {
LABEL_33:
    v37 = 0;
    goto LABEL_34;
  }
  v34 = sub_10004F068(0x6564496567616D69, 0xEF7265696669746ELL);
  if ((v35 & 1) == 0)
  {
    v33 = 0;
    goto LABEL_33;
  }
  sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v34, (uint64_t)&v49);
  v36 = swift_dynamicCast(&v47, &v49, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  v33 = v47;
  v37 = v48;
  if (!v36)
  {
    v33 = 0;
    v37 = 0;
  }
LABEL_34:
  *(_QWORD *)(v3 + 72) = v33;
  *(_QWORD *)(v3 + 80) = v37;
  if (*(_QWORD *)(a1 + 16) && (v38 = sub_10004F068(0x726564726FLL, 0xE500000000000000), (v39 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v38, (uint64_t)&v49);
  }
  else
  {
    v49 = 0u;
    v50 = 0u;
  }
  swift_bridgeObjectRelease(a1);
  if (*((_QWORD *)&v50 + 1))
  {
    if (swift_dynamicCast(&v47, &v49, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
    {
      v40 = v47;
      goto LABEL_43;
    }
  }
  else
  {
    sub_100009CB0((uint64_t)&v49);
  }
  v40 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_43:
  *(_QWORD *)(v3 + 96) = v40;
  v41 = *(_QWORD *)(v3 + 80);
  if (!v41)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_49;
  }
  if (!a2)
  {
LABEL_49:
    *(_QWORD *)(v3 + 88) = 0;
    return v3;
  }
  if (*(_QWORD *)(a2 + 16))
  {
    v42 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + 80));
    v43 = sub_10004F068(v42, v41);
    if ((v44 & 1) != 0)
    {
      v45 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v43);
      v46 = v45;
    }
    else
    {
      v45 = 0;
    }
    swift_bridgeObjectRelease(v41);
  }
  else
  {
    v45 = 0;
  }
  swift_bridgeObjectRelease(a2);
  *(_QWORD *)(v3 + 88) = v45;
  return v3;
}

void *sub_100059F90()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  _OWORD v20[2];
  __int128 v21;
  void *v22;
  void *v23;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  v22 = &type metadata for String;
  *(_QWORD *)&v21 = v2;
  *((_QWORD *)&v21 + 1) = v3;
  sub_100009CF0(&v21, v20);
  swift_bridgeObjectRetain(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  v23 = &_swiftEmptyDictionarySingleton;
  sub_10003A658(v20, 0x696669746E656469, 0xEA00000000007265, isUniquelyReferenced_nonNull_native);
  v5 = v23;
  swift_bridgeObjectRelease(0x8000000000000000);
  v6 = v1[5];
  v7 = v1[6];
  v22 = &type metadata for String;
  *(_QWORD *)&v21 = v6;
  *((_QWORD *)&v21 + 1) = v7;
  sub_100009CF0(&v21, v20);
  swift_bridgeObjectRetain(v7);
  v8 = swift_isUniquelyReferenced_nonNull_native(v5);
  sub_10003A658(v20, 0x656C746974, 0xE500000000000000, v8);
  v23 = v5;
  swift_bridgeObjectRelease(0x8000000000000000);
  v9 = v1[8];
  if (v9)
  {
    v10 = v1[7];
    v22 = &type metadata for String;
    *(_QWORD *)&v21 = v10;
    *((_QWORD *)&v21 + 1) = v9;
    sub_100009CF0(&v21, v20);
    swift_bridgeObjectRetain(v9);
    v11 = swift_isUniquelyReferenced_nonNull_native(v5);
    sub_10003A658(v20, 0x656C746974627573, 0xE800000000000000, v11);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0x656C746974627573, 0xE800000000000000, &v21);
    sub_100009CB0((uint64_t)&v21);
    v5 = v23;
  }
  v22 = &type metadata for String;
  *(_QWORD *)&v21 = 0x746C7561666564;
  *((_QWORD *)&v21 + 1) = 0xE700000000000000;
  sub_100009CF0(&v21, v20);
  v12 = swift_isUniquelyReferenced_nonNull_native(v5);
  sub_10003A658(v20, 0x656C797473, 0xE500000000000000, v12);
  swift_bridgeObjectRelease(0x8000000000000000);
  v13 = v1[12];
  v22 = &type metadata for Int;
  *(_QWORD *)&v21 = v13;
  sub_100009CF0(&v21, v20);
  v14 = swift_isUniquelyReferenced_nonNull_native(v5);
  sub_10003A658(v20, 0x726564726FLL, 0xE500000000000000, v14);
  v23 = v5;
  swift_bridgeObjectRelease(0x8000000000000000);
  v15 = v1[10];
  if (v15)
  {
    v16 = v1[9];
    v22 = &type metadata for String;
    *(_QWORD *)&v21 = v16;
    *((_QWORD *)&v21 + 1) = v15;
    sub_100009CF0(&v21, v20);
    swift_bridgeObjectRetain(v15);
    v17 = swift_isUniquelyReferenced_nonNull_native(v5);
    sub_10003A658(v20, 0x6564496567616D69, 0xEF7265696669746ELL, v17);
    v18 = v5;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0x6564496567616D69, 0xEF7265696669746ELL, &v21);
    sub_100009CB0((uint64_t)&v21);
    return v23;
  }
  return v18;
}

uint64_t sub_10005A288()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));

  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for IMBListItem()
{
  return objc_opt_self(_TtC8Business11IMBListItem);
}

uint64_t storeEnumTagSinglePayload for IMBListItemStyle(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10005A334 + 4 * asc_1000B21A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10005A354 + 4 * byte_1000B21A5[v4]))();
}

_BYTE *sub_10005A334(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10005A354(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10005A35C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10005A364(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10005A36C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10005A374(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IMBListItemStyle()
{
  return &type metadata for IMBListItemStyle;
}

unint64_t sub_10005A394()
{
  unint64_t result;

  result = qword_1000EE6F8;
  if (!qword_1000EE6F8)
  {
    result = swift_getWitnessTable(&unk_1000B229C, &type metadata for IMBListItemStyle);
    atomic_store(result, (unint64_t *)&qword_1000EE6F8);
  }
  return result;
}

BOOL sub_10005A3D8(_QWORD **a1, _QWORD **a2)
{
  return sub_10005A4C4(*a1, *a2);
}

uint64_t sub_10005A3E4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;

  v1 = v0[3];
  v2 = (void *)v0[4];
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v5 = v0[5];
  v4 = (void *)v0[6];
  swift_bridgeObjectRetain(v4);
  v6._countAndFlagsBits = v5;
  v6._object = v4;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v4);
  v7._countAndFlagsBits = 0x203A656C74697420;
  v7._object = (void *)0xE800000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(0xE800000000000000);
  return 540697705;
}

uint64_t sub_10005A4A4()
{
  return sub_10005A3E4();
}

BOOL sub_10005A4C4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v4 = a1[3];
  v5 = a1[4];
  v6 = a2[3];
  v7 = a2[4];
  v8 = v4 == v6 && v5 == v7;
  if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0), result = 0, (v9 & 1) != 0))
  {
    v11 = a1[5];
    v12 = a1[6];
    v13 = a2[5];
    v14 = a2[6];
    v15 = v11 == v13 && v12 == v14;
    if (v15
      || (v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v13, v14, 0), result = 0, (v16 & 1) != 0))
    {
      v17 = a1[8];
      v18 = a2[8];
      if (v17)
      {
        if (!v18)
          return 0;
        v19 = a1[7];
        v20 = a2[7];
        if (v19 != v20 || v17 != v18)
        {
          v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v17, v20, v18, 0);
          result = 0;
          if ((v21 & 1) == 0)
            return result;
        }
      }
      else if (v18)
      {
        return 0;
      }
      v22 = a1[10];
      v23 = a2[10];
      if (v22)
      {
        if (v23)
        {
          v24 = a1[9];
          v25 = a2[9];
          if (v24 != v25 || v22 != v23)
          {
            v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v22, v25, v23, 0);
            result = 0;
            if ((v26 & 1) == 0)
              return result;
          }
          return a1[12] == a2[12];
        }
      }
      else if (!v23)
      {
        return a1[12] == a2[12];
      }
      return 0;
    }
  }
  return result;
}

id sub_10005A5D8(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, char *, uint64_t);
  unint64_t v22;
  char v23;
  objc_class *v24;
  objc_super v25;
  double v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;

  v5 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v5, v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = v2;
  if (v14 && (v16 = sub_10004F068(7107189, 0xE300000000000000), (v17 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v16, (uint64_t)&v28);
    if ((swift_dynamicCast(&v26, &v28, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v18 = v27;
      URL.init(string:)(*(_QWORD *)&v26, v27);
      swift_bridgeObjectRelease(v18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(a2);

        sub_100010A98((uint64_t)v8, (uint64_t *)&unk_1000ED480);
      }
      else
      {
        v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v21(v13, v8, v9);
        if (*(_QWORD *)(a1 + 16) && (v22 = sub_10004F068(0x79616C6564, 0xE500000000000000), (v23 & 1) != 0))
        {
          sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v22, (uint64_t)&v28);
        }
        else
        {
          v28 = 0u;
          v29 = 0u;
        }
        swift_bridgeObjectRelease(a1);
        if (*((_QWORD *)&v29 + 1))
        {
          if ((swift_dynamicCast(&v26, &v28, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0
            && v26 < 29.0)
          {
            *(double *)((char *)v15 + OBJC_IVAR____TtC8Business22IMBDelayedAuthResponse_delay) = v26;
            v21((char *)v15 + OBJC_IVAR____TtC8Business22IMBDelayedAuthResponse_url, v13, v9);
            *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC8Business22IMBDelayedAuthResponse_messageBody) = a2;

            v24 = (objc_class *)type metadata accessor for IMBDelayedAuthResponse(0);
            v25.receiver = v15;
            v25.super_class = v24;
            return objc_msgSendSuper2(&v25, "init");
          }

          swift_bridgeObjectRelease(a2);
        }
        else
        {

          swift_bridgeObjectRelease(a2);
          sub_100010A98((uint64_t)&v28, (uint64_t *)&unk_1000EEB60);
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      }
    }
    else
    {

      swift_bridgeObjectRelease(a1);
      swift_bridgeObjectRelease(a2);
    }
  }
  else
  {
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(a2);

  }
  v19 = type metadata accessor for IMBDelayedAuthResponse(0);
  swift_deallocPartialClassInstance(v15, v19, *(unsigned int *)((swift_isaMask & *v15) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v15) + 0x34));
  return 0;
}

id sub_10005A900()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBDelayedAuthResponse(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005A984()
{
  return type metadata accessor for IMBDelayedAuthResponse(0);
}

uint64_t type metadata accessor for IMBDelayedAuthResponse(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EE728;
  if (!qword_1000EE728)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IMBDelayedAuthResponse);
  return result;
}

uint64_t sub_10005A9C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

id sub_10005AA50(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  id v27;
  uint64_t v29;
  uint64_t v30;

  v8 = v7;
  v16 = a1[3];
  v17 = sub_100008FA4(a1, v16);
  v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v16);
  v19 = a4[3];
  if (v19)
  {
    v20 = sub_100008FA4(a4, a4[3]);
    v29 = a5;
    v30 = a2;
    v21 = a3;
    v22 = *(_QWORD *)(v19 - 8);
    __chkstk_darwin(v20, v20);
    v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v24);
    v25 = _bridgeAnythingToObjectiveC<A>(_:)(v24, v19);
    v26 = *(void (**)(char *, uint64_t))(v22 + 8);
    a3 = v21;
    v26(v24, v19);
    a5 = v29;
    a2 = v30;
    sub_100010C40(a4);
  }
  else
  {
    v25 = 0;
  }
  v27 = objc_msgSend((id)swift_getObjCClassFromMetadata(v8), "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:", v18, a2, a3, v25, a5, a6, a7);
  swift_unknownObjectRelease(v18);
  swift_unknownObjectRelease(v25);
  sub_100010C40(a1);
  return v27;
}

uint64_t sub_10005ABC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  _BYTE v15[24];
  _BYTE v16[24];

  v1 = v0;
  v2 = sub_100007D40(&qword_1000ED6C0);
  __chkstk_darwin(v2, v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Business13BIABubbleView_optionsViewController);
  v7 = v1 + OBJC_IVAR____TtC8Business13BIABubbleView_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business13BIABubbleView_viewModel, v16, 0, 0);
  sub_10005DA20(v7, (uint64_t)v5);
  v8 = (uint64_t)v6 + OBJC_IVAR____TtC8Business30BIABubbleOptionsViewController_viewModel;
  swift_beginAccess((char *)v6 + OBJC_IVAR____TtC8Business30BIABubbleOptionsViewController_viewModel, v15, 33, 0);
  sub_100042050((uint64_t)v5, v8);
  v9 = swift_endAccess(v15);
  (*(void (**)(uint64_t))((swift_isaMask & *v6) + 0xE0))(v9);
  sub_100010A98((uint64_t)v5, &qword_1000ED6C0);
  result = sub_10005B4A4();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Business13BIABubbleView_wasSizeRequested) == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8Business13BIABubbleView_wasSizeRequested) = 0;
    v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business13BIABubbleView_delegate);
    if (v11)
    {
      v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business13BIABubbleView_delegate + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Business13BIABubbleView_delegate));
      v14 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v12 + 32);
      swift_unknownObjectRetain(v11);
      v14(v1, &off_1000D91B0, ObjectType, v12);
      return swift_unknownObjectRelease(v11);
    }
  }
  return result;
}

void sub_10005AD3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Class isa;
  uint64_t v6;
  void *v7;
  Class v8;

  v2 = OBJC_IVAR____TtC8Business13BIABubbleView_bubbleConstraints;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business13BIABubbleView_bubbleConstraints);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business13BIABubbleView_bubbleConstraints) = a1;
  if (v3)
  {
    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "deactivateConstraints:", isa);

  }
  v6 = *(_QWORD *)(v1 + v2);
  if (v6)
  {
    v7 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v6);
    v8 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v6);
    objc_msgSend(v7, "activateConstraints:", v8);
    swift_bridgeObjectRelease(v3);

  }
  else
  {
    swift_bridgeObjectRelease(v3);
  }
}

uint64_t sub_10005AE54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *Strong;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[5];
  uint64_t v25;
  _BYTE v26[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2 + 16;
  sub_1000090C8(0, (unint64_t *)&qword_1000EBD00, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = swift_allocObject(&unk_1000D91F0, 24, 7);
  swift_beginAccess(v13, v26, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v13);
  swift_unknownObjectWeakInit(v15 + 16, Strong);

  aBlock[4] = sub_10005DA00;
  v25 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100025AB0;
  aBlock[3] = &unk_1000D9208;
  v17 = _Block_copy(aBlock);
  v18 = swift_release(v25);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_100041F44();
  v20 = sub_100007D40((uint64_t *)&unk_1000EEBA0);
  v21 = sub_100041F8C();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v3, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

void sub_10005B05C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(void *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10005B4A4();

  }
  swift_beginAccess(v1, &v10, 0, 0);
  v4 = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (v4)
  {
    v5 = v4;
    if (v4[OBJC_IVAR____TtC8Business13BIABubbleView_wasSizeRequested] == 1
      && (v4[OBJC_IVAR____TtC8Business13BIABubbleView_wasSizeRequested] = 0,
          (v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Business13BIABubbleView_delegate]) != 0))
    {
      v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Business13BIABubbleView_delegate + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v4[OBJC_IVAR____TtC8Business13BIABubbleView_delegate]);
      v9 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v7 + 32);
      swift_unknownObjectRetain(v6);
      v9(v5, &off_1000D91B0, ObjectType, v7);

      swift_unknownObjectRelease(v6);
    }
    else
    {

    }
  }
}

id sub_10005B154()
{
  char *v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;
  char v10[24];

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC8Business13BIABubbleView_subcriptions];
  swift_beginAccess(v2, v10, 0, 0);
  v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain_n(*v2, 2);
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v3, 2);
    v9.receiver = v1;
    v9.super_class = (Class)type metadata accessor for BIABubbleView(0);
    return objc_msgSendSuper2(&v9, "dealloc");
  }
  if (v3 < 0)
    v8 = *v2;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v3, 2);
  result = (id)_CocoaArrayWrapper.endIndex.getter(v8);
  v4 = (uint64_t)result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      }
      else
      {
        v7 = *(_QWORD *)(v3 + 8 * i + 32);
        swift_retain(v7);
      }
      AnyCancellable.cancel()();
      swift_release(v7);
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005B398()
{
  return type metadata accessor for BIABubbleView(0);
}

uint64_t type metadata accessor for BIABubbleView(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EE7D0;
  if (!qword_1000EE7D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BIABubbleView);
  return result;
}

uint64_t sub_10005B4A4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(_QWORD, _QWORD, _QWORD);
  id v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  void *v42;
  __objc2_class_ro *v43;
  id v44;
  __objc2_class_ro *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  void *v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  NSString v143;
  uint64_t v144;
  NSString v145;
  id v146;
  void *v147;
  NSString v148;
  Class isa;
  Class v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t KeyPath;
  uint64_t v155;
  uint64_t v156;
  NSString v157;
  Class v158;
  NSDictionary v159;
  uint64_t v160;
  char *v161;
  void *v162;
  Class v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  NSString v167;
  Class v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  NSString v173;
  Class v174;
  NSDictionary v175;
  void *v176;
  Class v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  NSString v181;
  _QWORD *v182;
  id v183;
  Class v184;
  id v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  uint64_t v203;
  char *v204;
  id v205;
  char *v206;
  id v207;
  char *v208;
  uint64_t v209;
  id v210;
  id v211;
  id v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  const char *v225;
  unint64_t v226;
  uint64_t v227;
  _QWORD v228[2];
  id v229;
  char *v230;
  char *v231;
  uint64_t v232;
  char *v233;
  id v234;
  id v235;
  unint64_t v236;
  unint64_t v237;
  id v238;
  id v239;
  char *v240;
  uint64_t *v241;
  id v242;
  id v243;
  id v244;
  uint64_t v245;
  uint64_t v246;
  id v247;
  uint64_t v248;
  id v249;
  _QWORD *v250;
  __int128 v251;
  __int128 v252;
  _QWORD v253[3];
  uint64_t v254;
  char v255;

  v1 = v0;
  v2 = sub_100007D40(&qword_1000EC8C0);
  v4 = __chkstk_darwin(v2, v3);
  v6 = (char *)v228 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  v9 = (char *)v228 - v8;
  v10 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  __chkstk_darwin(v10, v11);
  v13 = (char *)v228 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007D40(&qword_1000ED6C0);
  __chkstk_darwin(v14, v15);
  v17 = (char *)v228 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for BIABubbleViewModel(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  v250 = (_QWORD *)((char *)v228 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = (uint64_t)&v0[OBJC_IVAR____TtC8Business13BIABubbleView_viewModel];
  swift_beginAccess(v22, &v255, 0, 0);
  sub_10005DA20(v22, (uint64_t)v17);
  v23 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v19 + 48);
  v241 = (uint64_t *)v18;
  if (v23(v17, 1, v18) == 1)
    return sub_100010A98((uint64_t)v17, &qword_1000ED6C0);
  v232 = v10;
  v233 = v13;
  v228[1] = v2;
  v230 = v9;
  v231 = v6;
  sub_10005DA78((uint64_t)v17, (uint64_t)v250, type metadata accessor for BIABubbleViewModel);
  v238 = *(id *)&v1[OBJC_IVAR____TtC8Business13BIABubbleView_optionsViewController];
  v25 = objc_msgSend(v238, "view");
  if (!v25)
  {
    v226 = 0xD000000000000029;
    v224 = 0x80000001000B8620;
    v225 = "Business/BIABubbleView.swift";
    v227 = 28;
    goto LABEL_66;
  }
  v26 = v25;
  v27 = v1;
  v28 = sub_100007D40(&qword_1000ED050);
  v29 = swift_allocObject(v28, 272, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1000B2350;
  *(_QWORD *)(v29 + 32) = 0xD000000000000010;
  *(_QWORD *)(v29 + 40) = 0x80000001000B8650;
  v30 = *(void **)&v1[OBJC_IVAR____TtC8Business13BIABubbleView_titleAndSubtitleView];
  v31 = sub_1000090C8(0, (unint64_t *)&qword_1000EEB80, UIView_ptr);
  *(_QWORD *)(v29 + 48) = v30;
  *(_QWORD *)(v29 + 72) = v31;
  *(_QWORD *)(v29 + 80) = 0x656C746974;
  *(_QWORD *)(v29 + 88) = 0xE500000000000000;
  v32 = *(void **)&v1[OBJC_IVAR____TtC8Business13BIABubbleView_titleLabel];
  v33 = sub_1000090C8(0, &qword_1000EC778, UILabel_ptr);
  *(_QWORD *)(v29 + 96) = v32;
  *(_QWORD *)(v29 + 120) = v33;
  *(_QWORD *)(v29 + 128) = 0x656C746974627573;
  v34 = *(void **)&v1[OBJC_IVAR____TtC8Business13BIABubbleView_subtitleLabel];
  *(_QWORD *)(v29 + 136) = 0xE800000000000000;
  *(_QWORD *)(v29 + 144) = v34;
  v245 = v33;
  *(_QWORD *)(v29 + 168) = v33;
  *(_QWORD *)(v29 + 176) = 0x42736E6F6974706FLL;
  *(_QWORD *)(v29 + 184) = 0xEA0000000000786FLL;
  *(_QWORD *)(v29 + 192) = v26;
  *(_QWORD *)(v29 + 216) = v31;
  strcpy((char *)(v29 + 224), "binaryChoice");
  *(_BYTE *)(v29 + 237) = 0;
  *(_WORD *)(v29 + 238) = -5120;
  v35 = *(void **)&v1[OBJC_IVAR____TtC8Business13BIABubbleView_binaryChoiceView];
  *(_QWORD *)(v29 + 264) = type metadata accessor for BIABubbleBinaryChoiceView();
  *(_QWORD *)(v29 + 240) = v35;
  v244 = v30;
  v243 = v32;
  v247 = v34;
  v239 = v35;
  v242 = v26;
  v36 = sub_10004DF18(v29);
  v37 = swift_allocObject(v28, 176, 7);
  *(_OWORD *)(v37 + 16) = xmmword_1000AF280;
  *(_QWORD *)(v37 + 32) = 0x6464615074786574;
  *(_QWORD *)(v37 + 40) = 0xEB00000000676E69;
  *(_QWORD *)(v37 + 48) = 0x4028000000000000;
  *(_QWORD *)(v37 + 72) = &type metadata for Double;
  *(_QWORD *)(v37 + 80) = 0x536F54656C746974;
  *(_QWORD *)(v37 + 88) = 0xEF656C7469746275;
  *(_QWORD *)(v37 + 96) = 0x4000000000000000;
  *(_QWORD *)(v37 + 120) = &type metadata for Double;
  *(_QWORD *)(v37 + 128) = 0xD000000000000011;
  *(_QWORD *)(v37 + 168) = &type metadata for Double;
  *(_QWORD *)(v37 + 136) = 0x80000001000B8670;
  *(_QWORD *)(v37 + 144) = 0x4020000000000000;
  v38 = sub_10004DF18(v37);
  v39 = type metadata accessor for ConstraintBuilder();
  v40 = swift_allocObject(v39, 48, 7);
  *(_BYTE *)(v40 + 16) = 0;
  *(_QWORD *)(v40 + 40) = _swiftEmptyArrayStorage;
  v41 = (uint64_t *)(v40 + 40);
  v237 = v36;
  *(_QWORD *)(v40 + 24) = v36;
  *(_QWORD *)(v40 + 32) = v38;
  v246 = v40;
  v236 = v38;
  v42 = *(void **)&v1[OBJC_IVAR____TtC8Business13BIABubbleView_imageView];
  v43 = &BIABubbleOptionsiOSViewController;
  objc_msgSend(v42, "setImage:", *v250);
  v44 = objc_msgSend(v42, "image");

  v45 = &BIABubbleOptionsiOSViewController;
  v248 = v31;
  v240 = v1;
  if (v44)
  {
    objc_msgSend(v42, "setHidden:", 0);
    v46 = sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
    v47 = v27;
    v48 = sub_1000090C8(0, &qword_1000EC780, UIImageView_ptr);
    v254 = v48;
    *((_QWORD *)&v252 + 1) = v31;
    v253[0] = v42;
    *(_QWORD *)&v251 = *(_QWORD *)&v47[OBJC_IVAR____TtC8Business13BIABubbleView_contentView];
    v49 = (void *)v251;
    v50 = v42;
    v51 = v49;
    v52 = sub_10005AA50(v253, 3, 0, &v251, 3, 1.0, 0.0);
    v254 = v48;
    *((_QWORD *)&v252 + 1) = v31;
    v253[0] = v50;
    *(_QWORD *)&v251 = v51;
    v53 = v50;
    v54 = v51;
    v229 = sub_10005AA50(v253, 1, 0, &v251, 1, 1.0, 0.0);
    v254 = v48;
    *((_QWORD *)&v252 + 1) = v31;
    v253[0] = v53;
    *(_QWORD *)&v251 = v54;
    v55 = v53;
    v249 = v54;
    v56 = sub_10005AA50(v253, 2, 0, &v251, 2, 1.0, 0.0);
    v254 = v48;
    *((_QWORD *)&v252 + 1) = v48;
    v253[0] = v55;
    *(_QWORD *)&v251 = v55;
    v57 = v55;
    v234 = sub_10005AA50(v253, 8, 0, &v251, 7, 0.6015625, 0.0);
    v58 = *(void **)&v47[OBJC_IVAR____TtC8Business13BIABubbleView_textAndOptionsView];
    v254 = v31;
    *((_QWORD *)&v252 + 1) = v48;
    v253[0] = v58;
    *(_QWORD *)&v251 = v57;
    v59 = v57;
    v235 = v58;
    v60 = sub_10005AA50(v253, 3, 0, &v251, 4, 1.0, 0.0);
    swift_beginAccess(v41, v253, 33, 0);
    v61 = *v41;
    if ((unint64_t)*v41 >> 62)
    {
      if (v61 < 0)
        v222 = *v41;
      else
        v222 = v61 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v41);
      v63 = _CocoaArrayWrapper.endIndex.getter(v222);
      swift_bridgeObjectRelease(v61);
    }
    else
    {
      v62 = v61 & 0xFFFFFFFFFFFFF8;
      v63 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v45 = &BIABubbleOptionsiOSViewController;
    if (__OFADD__(v63, 5))
    {
      __break(1u);
    }
    else
    {
      v64 = sub_10005D870(v63 + 5, 1);
      specialized Array._endMutation()(v64);
      v52 = v52;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
      v63 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v62 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v63 < v62 >> 1)
      {
LABEL_9:
        v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v52);
        specialized Array._endMutation()(v65);
        v66 = v229;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v66);
        v68 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v67 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v68 >= v67 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
        v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v66);
        specialized Array._endMutation()(v69);
        v70 = v56;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
        v72 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v71 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v72 >= v71 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
        v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
        specialized Array._endMutation()(v73);
        v74 = v234;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
        v76 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v75 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v76 >= v75 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v75 > 1, v76 + 1, 1);
        v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v74);
        specialized Array._endMutation()(v77);
        v78 = v60;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78);
        v80 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v79 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v80 >= v79 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v80 + 1, 1);
        v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v78);
        specialized Array._endMutation()(v81);
        swift_endAccess(v253);

        v27 = v240;
        v43 = &BIABubbleOptionsiOSViewController;
        v82 = v249;
        v83 = v235;
        goto LABEL_21;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1);
    goto LABEL_9;
  }
  objc_msgSend(v42, "setHidden:", 1);
  v46 = sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
  v84 = *(void **)&v27[OBJC_IVAR____TtC8Business13BIABubbleView_textAndOptionsView];
  v254 = v31;
  *((_QWORD *)&v252 + 1) = v31;
  v253[0] = v84;
  *(_QWORD *)&v251 = *(_QWORD *)&v27[OBJC_IVAR____TtC8Business13BIABubbleView_contentView];
  v85 = (void *)v251;
  v83 = v84;
  v82 = v85;
  v86 = sub_10005AA50(v253, 3, 0, &v251, 3, 1.0, 0.0);
  swift_beginAccess(v41, v253, 33, 0);
  v66 = v86;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v66);
  v88 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v87 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v88 >= v87 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v87 > 1, v88 + 1, 1);
  v89 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v88, v66);
  specialized Array._endMutation()(v89);
  swift_endAccess(v253);
LABEL_21:

  sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
  v254 = v248;
  *((_QWORD *)&v252 + 1) = v248;
  v253[0] = v83;
  *(_QWORD *)&v251 = v82;
  v235 = v83;
  v234 = v82;
  v90 = sub_10005AA50(v253, 4, 0, &v251, 4, 1.0, 0.0);
  swift_beginAccess(v41, v253, 33, 0);
  v91 = v90;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v91);
  v93 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v92 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v93 >= v92 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v92 > 1, v93 + 1, 1);
  v94 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v93, v91);
  specialized Array._endMutation()(v94);
  swift_endAccess(v253);

  v95 = v250;
  v96 = (void *)v250[1];
  v97 = *(void **)&v27[OBJC_IVAR____TtC8Business13BIABubbleView_iconView];
  if (v96)
  {
    v98 = v96;
    v229 = v98;
    objc_msgSend(v97, (SEL)v45[43].base_prots, 0);
    objc_msgSend(v97, (SEL)v43[44].base_props, v98);
    v99 = sub_100007D40((uint64_t *)&unk_1000ED490);
    v100 = swift_allocObject(v99, 96, 7);
    *(_OWORD *)(v100 + 16) = xmmword_1000B2360;
    v101 = sub_1000090C8(0, &qword_1000EC780, UIImageView_ptr);
    v254 = v101;
    v102 = v248;
    *((_QWORD *)&v252 + 1) = v248;
    v253[0] = v97;
    *(_QWORD *)&v251 = v244;
    v103 = v244;
    v104 = v97;
    *(_QWORD *)(v100 + 32) = sub_10005AA50(v253, 3, 0, &v251, 3, 1.0, 0.0);
    v254 = v101;
    *((_QWORD *)&v252 + 1) = v102;
    v253[0] = v104;
    *(_QWORD *)&v251 = v103;
    v105 = v103;
    v106 = v104;
    *(_QWORD *)(v100 + 40) = sub_10005AA50(v253, 1, 0, &v251, 1, 1.0, 0.0);
    v254 = v101;
    *((_QWORD *)&v252 + 1) = v101;
    v253[0] = v106;
    *(_QWORD *)&v251 = v106;
    v107 = v106;
    *(_QWORD *)(v100 + 48) = sub_10005AA50(v253, 7, 0, &v251, 8, 1.0, 0.0);
    v254 = v101;
    v253[0] = v107;
    v251 = 0u;
    v252 = 0u;
    v108 = v107;
    *(_QWORD *)(v100 + 56) = sub_10005AA50(v253, 8, 0, &v251, 0, 0.0, 60.0);
    v254 = v102;
    *((_QWORD *)&v252 + 1) = v101;
    v253[0] = v105;
    *(_QWORD *)&v251 = v108;
    v109 = v105;
    v110 = v108;
    *(_QWORD *)(v100 + 64) = sub_10005AA50(v253, 4, 1, &v251, 4, 1.0, 0.0);
    v254 = v102;
    v111 = v245;
    *((_QWORD *)&v252 + 1) = v245;
    v253[0] = v109;
    v112 = v247;
    *(_QWORD *)&v251 = v247;
    v113 = v109;
    v95 = v250;
    v114 = v112;
    *(_QWORD *)(v100 + 72) = sub_10005AA50(v253, 4, 1, &v251, 4, 1.0, 0.0);
    v254 = v111;
    v115 = v243;
    *((_QWORD *)&v252 + 1) = v101;
    v253[0] = v243;
    *(_QWORD *)&v251 = v110;
    v116 = v243;
    v117 = v110;
    *(_QWORD *)(v100 + 80) = sub_10005AA50(v253, 1, 0, &v251, 2, 1.0, 12.0);
    v254 = v111;
    *((_QWORD *)&v252 + 1) = v101;
    v253[0] = v114;
    *(_QWORD *)&v251 = v117;
    v118 = v114;
    v119 = v117;
    v120 = sub_10005AA50(v253, 1, 0, &v251, 2, 1.0, 12.0);
    *(_QWORD *)(v100 + 88) = v120;
    v253[0] = v100;
    specialized Array._endMutation()(v120);
    v121 = v253[0];
    swift_beginAccess(v41, v253, 33, 0);
    v122 = swift_bridgeObjectRetain(v121);
    sub_10009AA70(v122);
    swift_endAccess(v253);

    swift_bridgeObjectRelease(v121);
    goto LABEL_31;
  }
  objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC8Business13BIABubbleView_iconView], (SEL)v45[43].base_prots, 1);
  v123 = v245;
  v254 = v245;
  v115 = v243;
  v124 = v248;
  *((_QWORD *)&v252 + 1) = v248;
  v253[0] = v243;
  *(_QWORD *)&v251 = v244;
  v125 = v244;
  v126 = v115;
  v127 = sub_10005AA50(v253, 1, 0, &v251, 1, 1.0, 0.0);
  v254 = v123;
  v128 = v247;
  *((_QWORD *)&v252 + 1) = v124;
  v253[0] = v247;
  *(_QWORD *)&v251 = v125;
  v129 = v125;
  v130 = v128;
  v131 = sub_10005AA50(v253, 1, 0, &v251, 1, 1.0, 0.0);
  swift_beginAccess(v41, v253, 33, 0);
  v132 = *v41;
  if (!((unint64_t)*v41 >> 62))
  {
    v133 = v132 & 0xFFFFFFFFFFFFF8;
    v134 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFF8) + 0x10);
    v135 = v134 + 2;
    if (!__OFADD__(v134, 2))
      goto LABEL_27;
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v132 < 0)
    v223 = *v41;
  else
    v223 = v132 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v41);
  v134 = _CocoaArrayWrapper.endIndex.getter(v223);
  swift_bridgeObjectRelease(v132);
  v135 = v134 + 2;
  if (__OFADD__(v134, 2))
    goto LABEL_62;
LABEL_27:
  v136 = sub_10005D870(v135, 1);
  specialized Array._endMutation()(v136);
  v127 = v127;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v127);
  v134 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v133 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v134 >= v133 >> 1)
LABEL_63:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v133 > 1, v134 + 1, 1);
  v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v134, v127);
  specialized Array._endMutation()(v137);
  v138 = v131;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v138);
  v140 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v139 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v140 >= v139 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v139 > 1, v140 + 1, 1);
  v141 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v140, v138);
  specialized Array._endMutation()(v141);
  swift_endAccess(v253);

LABEL_31:
  v142 = v95[3];
  swift_bridgeObjectRetain(v142);
  v143 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v142);
  objc_msgSend(v115, "setText:", v143);

  v144 = v95[5];
  v249 = (id)v46;
  if (v144)
  {
    swift_bridgeObjectRetain(v144);
    v145 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v144);
  }
  else
  {
    v145 = 0;
  }
  v146 = v247;
  objc_msgSend(v247, "setText:", v145);

  objc_msgSend(v146, "setHidden:", v144 == 0);
  objc_msgSend(v146, "isHidden");
  v147 = (void *)objc_opt_self(NSLayoutConstraint);
  v148 = String._bridgeToObjectiveC()();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v150 = Dictionary._bridgeToObjectiveC()().super.isa;
  v151 = objc_msgSend(v147, "constraintsWithVisualFormat:options:metrics:views:", v148, 0, isa, v150);

  v152 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v151, v249);
  swift_beginAccess(v41, v253, 33, 0);
  v153 = swift_bridgeObjectRetain(v152);
  sub_10009AA70(v153);
  swift_endAccess(v253);
  swift_bridgeObjectRelease(v152);
  KeyPath = swift_getKeyPath(&unk_1000B2420);
  v155 = swift_getKeyPath(&unk_1000B2448);
  static Published.subscript.getter(v253, v238, KeyPath, v155);
  swift_release(KeyPath);
  swift_release(v155);
  if ((v253[0] & 1) == 0)
  {
    objc_msgSend(v242, "setHidden:", 1);
    v160 = (uint64_t)v233;
    sub_100059698((uint64_t)v95 + *((int *)v241 + 8), (uint64_t)v233);
    v161 = (char *)&loc_10005C5F8 + dword_10005D53C[swift_getEnumCaseMultiPayload(v160, v232)];
    __asm { BR              X10 }
  }
  objc_msgSend(v242, "setHidden:", 0);
  objc_msgSend(v239, "setHidden:", 1);
  v156 = v246;
  if (*(_BYTE *)(v246 + 16) == 1)
    goto LABEL_64;
  v157 = String._bridgeToObjectiveC()();
  v158 = *(Class *)(v156 + 32);
  if (v158)
    v159.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  else
    v159.super.isa = 0;
  v162 = (void *)objc_opt_self(NSLayoutConstraint);
  v163 = Dictionary._bridgeToObjectiveC()().super.isa;
  v164 = objc_msgSend(v162, "constraintsWithVisualFormat:options:metrics:views:", v157, 0, v159.super.isa, v163);

  v165 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v164, v249);
  swift_beginAccess(v41, v253, 33, 0);
  v166 = swift_bridgeObjectRetain(v165);
  sub_10009AA70(v166);
  swift_endAccess(v253);
  swift_bridgeObjectRelease(v165);
  v167 = String._bridgeToObjectiveC()();
  if (v158)
    v158 = Dictionary._bridgeToObjectiveC()().super.isa;
  v168 = Dictionary._bridgeToObjectiveC()().super.isa;
  v169 = objc_msgSend(v162, "constraintsWithVisualFormat:options:metrics:views:", v167, 0, v158, v168);

  v170 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v169, v249);
  swift_beginAccess(v41, v253, 33, 0);
  v171 = swift_bridgeObjectRetain(v170);
  sub_10009AA70(v171);
  swift_endAccess(v253);
  swift_bridgeObjectRelease(v170);
  v172 = v246;
  v241 = v41;
  if (*(_BYTE *)(v246 + 16) == 1)
  {
LABEL_64:
    v224 = 0x80000001000B87D0;
    v225 = "Business/ConstraintBuilder.swift";
    v226 = 0xD000000000000026;
    v227 = 32;
LABEL_66:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v226, v224, v225, v227, 2);
    __break(1u);
    JUMPOUT(0x10005D53CLL);
  }
  v173 = String._bridgeToObjectiveC()();
  v174 = *(Class *)(v172 + 32);
  if (v174)
    v175.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  else
    v175.super.isa = 0;
  v176 = (void *)objc_opt_self(NSLayoutConstraint);
  v177 = Dictionary._bridgeToObjectiveC()().super.isa;
  v178 = objc_msgSend(v176, "constraintsWithVisualFormat:options:metrics:views:", v173, 0, v175.super.isa, v177);

  v179 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v178, v249);
  swift_beginAccess(v241, v253, 33, 0);
  v180 = swift_bridgeObjectRetain(v179);
  sub_10009AA70(v180);
  swift_endAccess(v253);
  swift_bridgeObjectRelease(v179);
  v181 = String._bridgeToObjectiveC()();
  if (v174)
    v174 = Dictionary._bridgeToObjectiveC()().super.isa;
  v182 = v250;
  v183 = v243;
  v184 = Dictionary._bridgeToObjectiveC()().super.isa;
  v185 = objc_msgSend(v176, "constraintsWithVisualFormat:options:metrics:views:", v181, 0, v174, v184);

  v186 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v185, v249);
  v187 = v241;
  swift_beginAccess(v241, v253, 33, 0);
  v188 = swift_bridgeObjectRetain(v186);
  sub_10009AA70(v188);
  swift_endAccess(v253);
  swift_bridgeObjectRelease(v186);
  v189 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v190 = swift_allocObject(v189, 112, 7);
  *(_OWORD *)(v190 + 16) = xmmword_1000B2370;
  v191 = v245;
  v254 = v245;
  v192 = v248;
  *((_QWORD *)&v252 + 1) = v248;
  v253[0] = v183;
  *(_QWORD *)&v251 = v244;
  v193 = v244;
  v194 = v183;
  *(_QWORD *)(v190 + 32) = sub_10005AA50(v253, 3, 0, &v251, 3, 1.0, 0.0);
  v254 = v191;
  *((_QWORD *)&v252 + 1) = v192;
  v253[0] = v194;
  *(_QWORD *)&v251 = v193;
  v195 = v193;
  v196 = v194;
  *(_QWORD *)(v190 + 40) = sub_10005AA50(v253, 2, 0, &v251, 2, 1.0, 0.0);
  v254 = v191;
  v197 = v247;
  *((_QWORD *)&v252 + 1) = v192;
  v253[0] = v247;
  *(_QWORD *)&v251 = v195;
  v198 = v195;
  v199 = v197;
  *(_QWORD *)(v190 + 48) = sub_10005AA50(v253, 4, 0, &v251, 4, 1.0, 0.0);
  v254 = v191;
  *((_QWORD *)&v252 + 1) = v192;
  v253[0] = v199;
  *(_QWORD *)&v251 = v198;
  v200 = v198;
  v201 = v199;
  *(_QWORD *)(v190 + 56) = sub_10005AA50(v253, 2, 0, &v251, 2, 1.0, 0.0);
  v254 = v192;
  v202 = v234;
  v253[0] = v234;
  v203 = type metadata accessor for BIABubbleView(0);
  *((_QWORD *)&v252 + 1) = v203;
  v204 = v240;
  *(_QWORD *)&v251 = v240;
  v205 = v202;
  v206 = v204;
  *(_QWORD *)(v190 + 64) = sub_10005AA50(v253, 3, 0, &v251, 3, 1.0, 0.0);
  v254 = v192;
  *((_QWORD *)&v252 + 1) = v203;
  v253[0] = v205;
  *(_QWORD *)&v251 = v206;
  v207 = v205;
  v208 = v206;
  *(_QWORD *)(v190 + 72) = sub_10005AA50(v253, 4, 0, &v251, 4, 1.0, 0.0);
  v254 = v192;
  *((_QWORD *)&v252 + 1) = v203;
  v253[0] = v207;
  *(_QWORD *)&v251 = v208;
  v209 = qword_1000EBBF0;
  v210 = v207;
  v211 = v208;
  if (v209 != -1)
    swift_once(&qword_1000EBBF0, sub_10002D62C);
  *(_QWORD *)(v190 + 80) = sub_10005AA50(v253, 1, 0, &v251, 1, 1.0, *(double *)&qword_1000F8970);
  v254 = v192;
  *((_QWORD *)&v252 + 1) = v203;
  v253[0] = v210;
  *(_QWORD *)&v251 = v211;
  v212 = v210;
  v211;
  *(_QWORD *)(v190 + 88) = sub_10005AA50(v253, 2, 0, &v251, 2, 1.0, 0.0);
  v254 = v192;
  *((_QWORD *)&v252 + 1) = v192;
  v253[0] = v235;
  *(_QWORD *)&v251 = v212;
  v213 = v235;
  v214 = v212;
  *(_QWORD *)(v190 + 96) = sub_10005AA50(v253, 1, 0, &v251, 1, 1.0, 0.0);
  v254 = v192;
  *((_QWORD *)&v252 + 1) = v192;
  v253[0] = v213;
  *(_QWORD *)&v251 = v214;
  v215 = v213;
  v216 = v214;
  v217 = sub_10005AA50(v253, 2, 0, &v251, 2, 1.0, 0.0);
  *(_QWORD *)(v190 + 104) = v217;
  v253[0] = v190;
  specialized Array._endMutation()(v217);
  v218 = v253[0];
  swift_beginAccess(v187, v253, 33, 0);
  v219 = swift_bridgeObjectRetain(v218);
  sub_10009AA70(v219);
  swift_endAccess(v253);
  swift_bridgeObjectRelease(v218);
  v220 = (_QWORD *)v246;
  v221 = swift_bridgeObjectRetain(*(_QWORD *)(v246 + 40));
  sub_10005AD3C(v221);
  swift_setDeallocating(v220);
  swift_bridgeObjectRelease(v220[3]);
  swift_bridgeObjectRelease(v220[4]);
  swift_bridgeObjectRelease(v220[5]);
  swift_deallocClassInstance(v220, 48, 7);

  return sub_1000367CC((uint64_t)v182, type metadata accessor for BIABubbleViewModel);
}

id sub_10005D54C(double a1, double a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  _BYTE v22[24];

  v5 = sub_100007D40(&qword_1000ED6C0);
  __chkstk_darwin(v5, v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for BIABubbleViewModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v2[OBJC_IVAR____TtC8Business13BIABubbleView_wasSizeRequested] = 1;
  v14 = (uint64_t)&v2[OBJC_IVAR____TtC8Business13BIABubbleView_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC8Business13BIABubbleView_viewModel], v22, 0, 0);
  sub_10005DA20(v14, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100010A98((uint64_t)v8, &qword_1000ED6C0);
    v15 = 236.0;
  }
  else
  {
    sub_10005DA78((uint64_t)v8, (uint64_t)v13, type metadata accessor for BIABubbleViewModel);
    if (*v13)
    {
      sub_1000367CC((uint64_t)v13, type metadata accessor for BIABubbleViewModel);
      v15 = 256.0;
    }
    else
    {
      v16 = v13[1];
      sub_1000367CC((uint64_t)v13, type metadata accessor for BIABubbleViewModel);
      v15 = 236.0;
      if (v16)
        v15 = 232.0;
    }
  }
  v17 = sub_10005DA68(a1, v15);
  LODWORD(v18) = 1148846080;
  LODWORD(v19) = 1132068864;
  return objc_msgSend(v2, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", v17, a2, v18, v19);
}

void sub_10005D734(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[15];

  v4[0] = &unk_1000B2390;
  sub_10005D7F0(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1000B23A8;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[13] = &unk_1000B23C0;
    v4[14] = &unk_1000B23D8;
    swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
}

void sub_10005D7F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000EE7E0)
  {
    v2 = type metadata accessor for BIABubbleViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000EE7E0);
  }
}

uint64_t sub_10005D844(uint64_t a1, uint64_t a2)
{
  sub_10005D92C(a1, a2);
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_10005D870(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_10005D92C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Business13BIABubbleView_delegate);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Business13BIABubbleView_delegate);
  *v3 = a1;
  v3[1] = a2;
  ((void (*)(void))swift_unknownObjectRetain)();
  result = swift_unknownObjectRelease(v4);
  v6 = *v3;
  if (*v3)
  {
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC8Business13BIABubbleView_wasSizeRequested) & 1) == 0)
    {
      v7 = v3[1];
      ObjectType = swift_getObjectType(v6);
      v9 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 32);
      swift_unknownObjectRetain(v6);
      v9(v2, &off_1000D91B0, ObjectType, v7);
      return swift_unknownObjectRelease(v6);
    }
  }
  return result;
}

uint64_t sub_10005D9DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10005DA00()
{
  uint64_t v0;

  sub_10005B05C(v0);
}

uint64_t sub_10005DA08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005DA18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005DA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000ED6C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_10005DA68(double a1, double a2)
{
  return fmin(a1, a2);
}

uint64_t sub_10005DA78(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005DABC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t result;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  _BYTE v39[24];

  v38 = a1;
  v36 = sub_100007D40(&qword_1000EC8C0);
  v3 = __chkstk_darwin(v36, v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v6);
  v8 = (char *)&v36 - v7;
  v9 = type metadata accessor for BIABubbleViewModelUserInteractionParadigm(0);
  __chkstk_darwin(v9, v10);
  v12 = (uint64_t *)((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100007D40(&qword_1000ED6C0);
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for BIABubbleViewModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v1;
  v22 = v1 + OBJC_IVAR____TtC8Business13BIABubbleView_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business13BIABubbleView_viewModel, v39, 0, 0);
  sub_10005DA20(v22, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100010A98((uint64_t)v16, &qword_1000ED6C0);
    v33 = 0x80000001000B8930;
    v34 = 0xD000000000000033;
LABEL_13:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v34, v33, "Business/BIABubbleView.swift", 28, 2);
    __break(1u);
    return result;
  }
  sub_10005DA78((uint64_t)v16, (uint64_t)v21, type metadata accessor for BIABubbleViewModel);
  sub_100059698((uint64_t)&v21[*(int *)(v17 + 32)], (uint64_t)v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v9);
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v35 = v12[1];
        swift_bridgeObjectRelease(v12[2]);
        swift_bridgeObjectRelease(v35);
      }
    }
    else
    {
      sub_1000367CC((uint64_t)v12, type metadata accessor for BIABubbleViewModelUserAction);
    }
    v34 = 0xD00000000000004BLL;
    v33 = 0x80000001000B8970;
    goto LABEL_13;
  }
  v24 = (char *)v12 + *(int *)(sub_100007D40(&qword_1000EC8C8) + 48);
  v25 = v36;
  v26 = *(int *)(v36 + 80);
  v27 = &v8[v26];
  *(_QWORD *)v8 = *v12;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v12 + 1);
  *((_QWORD *)v8 + 3) = v12[3];
  sub_10005DA78((uint64_t)v12 + v26, (uint64_t)&v8[v26], type metadata accessor for BIABubbleViewModelUserAction);
  v28 = *(int *)(v25 + 80);
  v29 = &v5[v28];
  *(_QWORD *)v5 = *(_QWORD *)v24;
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(v24 + 8);
  *((_QWORD *)v5 + 3) = *((_QWORD *)v24 + 3);
  sub_10005DA78((uint64_t)&v24[v28], (uint64_t)&v5[v28], type metadata accessor for BIABubbleViewModelUserAction);
  v30 = (void *)*sub_100008FA4((_QWORD *)(v37 + OBJC_IVAR____TtC8Business13BIABubbleView_context), *(_QWORD *)(v37 + OBJC_IVAR____TtC8Business13BIABubbleView_context + 24));
  if ((v38 & 1) != 0)
    v31 = (uint64_t)v29;
  else
    v31 = (uint64_t)v27;
  sub_10009D254(v30, v31);
  sub_100010A98((uint64_t)v5, &qword_1000EC8C0);
  sub_100010A98((uint64_t)v8, &qword_1000EC8C0);
  return sub_1000367CC((uint64_t)v21, type metadata accessor for BIABubbleViewModel);
}

id sub_10005DE3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8Business18ApplePayBubbleView____lazy_storage___applePayButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business18ApplePayBubbleView____lazy_storage___applePayButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business18ApplePayBubbleView____lazy_storage___applePayButton);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)PKPaymentButton), "initWithPaymentButtonType:paymentButtonStyle:", 0, 2);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "setUserInteractionEnabled:", 0);
    v5 = objc_msgSend(v4, "layer");
    objc_msgSend(v5, "setMasksToBounds:", 1);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

double sub_10005DF0C()
{
  void *v0;
  double v1;

  objc_msgSend(v0, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
  return ceil(v1);
}

_QWORD *sub_10005DF3C(char a1, void *a2, void *a3, void *a4)
{
  _BYTE *v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  id v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  NSString v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;

  v8 = a1 & 1;
  v9 = type metadata accessor for URLHelper(0);
  v11 = __chkstk_darwin(v9, v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  v16 = (char *)&v54 - v15;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayButtonWidthConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business18ApplePayBubbleView____lazy_storage___applePayButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business18ApplePayBubbleView_message] = a3;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayManager] = a4;
  v17 = a3;
  v18 = a4;
  sub_10004EA08((uint64_t)v16);
  sub_100020D60((uint64_t)v16, (uint64_t)v13);
  v19 = sub_10003F6C0(v8, a2, (uint64_t)v13, v4);
  sub_100020DA4((uint64_t)v16);
  v20 = OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel;
  v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel];
  v22 = *(_QWORD *)(v21 + 40);
  v23 = *(_QWORD *)(v21 + 48);
  v24 = (_QWORD *)((char *)v19 + OBJC_IVAR____TtC8Business13IMBBubbleView_title);
  v25 = *(_QWORD *)((char *)v19 + OBJC_IVAR____TtC8Business13IMBBubbleView_title + 8);
  *v24 = v22;
  v24[1] = v23;
  v26 = v19;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v25);
  sub_1000AA190();

  v27 = *(void **)((char *)v26 + OBJC_IVAR____TtC8Business13IMBBubbleView_subtitleLabel);
  objc_msgSend(v27, "setAttributedText:", *(_QWORD *)(*(_QWORD *)&v18[v20] + 56));
  v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)((char *)v26 + OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayManager)
                              + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel)
                  + 72);
  v29 = v27;
  if (v28)
  {
    swift_bridgeObjectRetain(v28);
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
  }
  else
  {
    v30 = 0;
  }
  objc_msgSend(v27, "setAccessibilityLabel:", v30);

  v31 = BCBubbleViewStyleLarge;
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v34 = v33;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v37 = v35;
  if (v32 == v36 && v34 == v35)
  {
    swift_bridgeObjectRelease_n(v34, 2);
  }
  else
  {
    v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v36, v35, 0);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v37);
    if ((v38 & 1) == 0)
      goto LABEL_20;
  }
  v39 = v26;
  v40 = objc_msgSend(v17, "receivedMessage");
  if (v40)
  {
    v41 = v40;
    v42 = objc_msgSend(v40, "image");

  }
  else
  {
    v42 = 0;
  }
  v43 = OBJC_IVAR____TtC8Business13IMBBubbleView_image;
  v44 = *(void **)&v39[OBJC_IVAR____TtC8Business13IMBBubbleView_image];
  *(_QWORD *)&v39[OBJC_IVAR____TtC8Business13IMBBubbleView_image] = v42;
  v45 = v42;

  sub_1000AA424();
  v46 = *(void **)&v39[v43];
  if (v46)
  {
    v47 = v46;
    if (objc_msgSend(v17, "isFromMe"))
    {
      v48 = objc_msgSend(v17, "replyMessage");
      if (v48)
      {
LABEL_16:
        v49 = v48;
        v50 = objc_msgSend(v48, "imageDescription");

        if (v50)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
          v52 = v51;

          v50 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v52);
        }
        goto LABEL_19;
      }
    }
    else
    {
      v48 = objc_msgSend(v17, "receivedMessage");
      if (v48)
        goto LABEL_16;
    }
    v50 = 0;
LABEL_19:
    objc_msgSend(v47, "setAccessibilityLabel:", v50);

  }
LABEL_20:

  return v26;
}

void sub_10005E398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  sub_1000A88F0();
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayManager)
                 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (v2)
  {
    v3 = v2 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
    if ((*(_BYTE *)(v3 + 8) & 1) == 0 && *(_QWORD *)v3 == 6)
    {
      if (qword_1000EBCB8 != -1)
        v1 = swift_once(&qword_1000EBCB8, sub_100082798);
      v4 = qword_1000F8A90;
      v5 = static os_log_type_t.default.getter(v1);
      os_log(_:dso:log:type:_:)("ApplePayBubble not eligible logged in aggregate", 47, 2, &_mh_execute_header, v4, v5, _swiftEmptyArrayStorage);
    }
  }
  v6 = *(void **)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_informationView);
  v7 = sub_10005DE3C();
  objc_msgSend(v6, "addSubview:", v7);

  sub_10005ED7C();
}

void sub_10005E490()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  Class isa;
  uint64_t v5;
  Class v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t *v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  Class v71;
  id v72;
  int IsAccessibilityContentSizeCategory;
  double v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  void *v79;
  void *v80;
  id v81;
  double v82;
  double v83;
  uint64_t *v84;
  uint64_t *v85;
  id v86;
  id v87;

  v1 = v0;
  sub_1000A8DA0();
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v85 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_largeLabelContainerConstraints);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_largeLabelContainerConstraints);
  sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v2, "deactivateConstraints:", isa);

  v84 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainerFirstConstraintsIconSmall);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainerFirstConstraintsIconSmall);
  swift_bridgeObjectRetain(v5);
  v6 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  v86 = v2;
  objc_msgSend(v2, "deactivateConstraints:", v6);

  v7 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v8 = swift_allocObject(v7, 88, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1000AF590;
  v9 = *(void **)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainer);
  v10 = objc_msgSend(v9, "leadingAnchor");
  v11 = *(void **)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_informationView);
  v12 = objc_msgSend(v11, "leadingAnchor");
  v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v8 + 32) = v13;
  v14 = objc_msgSend(v9, "topAnchor");
  v15 = objc_msgSend(v11, "topAnchor");
  v16 = objc_msgSend(v14, "constraintGreaterThanOrEqualToAnchor:constant:", v15, 10.0);

  *(_QWORD *)(v8 + 40) = v16;
  v17 = objc_msgSend(v9, "bottomAnchor");
  v18 = objc_msgSend(v11, "bottomAnchor");
  v19 = objc_msgSend(v17, "constraintLessThanOrEqualToAnchor:constant:", v18, -10.0);

  *(_QWORD *)(v8 + 48) = v19;
  v20 = sub_10005DE3C();
  v21 = objc_msgSend(v20, "leadingAnchor");

  v22 = objc_msgSend(v9, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, 10.0);

  *(_QWORD *)(v8 + 56) = v23;
  v24 = sub_10005DE3C();
  v25 = objc_msgSend(v24, "trailingAnchor");

  v26 = objc_msgSend(v11, "trailingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v8 + 64) = v27;
  v28 = sub_10005DE3C();
  v29 = objc_msgSend(v28, "centerYAnchor");

  v30 = objc_msgSend(v11, "centerYAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v8 + 72) = v31;
  v32 = objc_msgSend(v9, "centerYAnchor");
  v33 = objc_msgSend(v11, "centerYAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v8 + 80) = v34;
  specialized Array._endMutation()(v35);
  v36 = *v84;
  *v84 = v8;
  swift_bridgeObjectRelease(v36);
  v37 = swift_allocObject(v7, 80, 7);
  *(_OWORD *)(v37 + 16) = xmmword_1000B2470;
  v38 = objc_msgSend(v9, "topAnchor");
  v39 = objc_msgSend(v11, "topAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v39, 10.0);

  *(_QWORD *)(v37 + 32) = v40;
  v41 = objc_msgSend(v9, "bottomAnchor");
  v42 = objc_msgSend(v11, "bottomAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, -10.0);

  *(_QWORD *)(v37 + 40) = v43;
  v44 = objc_msgSend(v9, "leadingAnchor");
  v45 = objc_msgSend(v11, "leadingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v37 + 48) = v46;
  v47 = sub_10005DE3C();
  v48 = objc_msgSend(v47, "leadingAnchor");

  v49 = objc_msgSend(v9, "trailingAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, 10.0);

  *(_QWORD *)(v37 + 56) = v50;
  v51 = sub_10005DE3C();
  v52 = objc_msgSend(v51, "trailingAnchor");

  v53 = objc_msgSend(v11, "trailingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v37 + 64) = v54;
  v55 = sub_10005DE3C();
  v56 = objc_msgSend(v55, "centerYAnchor");

  v57 = v85;
  v58 = objc_msgSend(v11, "centerYAnchor");
  v59 = objc_msgSend(v56, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v37 + 72) = v59;
  specialized Array._endMutation()(v60);
  v61 = *v85;
  *v85 = v37;
  swift_bridgeObjectRelease(v61);
  v62 = BCBubbleViewStyleLarge;
  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v1
                                                                         + OBJC_IVAR____TtC8Business13IMBBubbleView_style));
  v65 = v64;
  v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
  v68 = v66;
  if (v63 == v67 && v65 == v66)
  {
    swift_bridgeObjectRelease_n(v65, 2);
  }
  else
  {
    v69 = _stringCompareWithSmolCheck(_:_:expecting:)(v63, v65, v67, v66, 0);
    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v68);
    if ((v69 & 1) == 0)
      v57 = v84;
  }
  v70 = *v57;
  swift_bridgeObjectRetain(*v57);
  v71 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v70);
  objc_msgSend(v86, "activateConstraints:", v71);

  if (UIApp)
  {
    v72 = objc_msgSend(UIApp, "preferredContentSizeCategory");
    IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory();

    if (IsAccessibilityContentSizeCategory)
    {
      LODWORD(v74) = 1144750080;
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_titleLabel), "setContentCompressionResistancePriority:forAxis:", 1, v74);
    }
    v75 = sub_10005DE3C();
    v76 = objc_msgSend(v75, "widthAnchor");

    v77 = objc_msgSend(v76, "constraintEqualToConstant:", 60.0);
    v78 = OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayButtonWidthConstraint;
    v79 = *(void **)(v1 + OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayButtonWidthConstraint);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayButtonWidthConstraint) = v77;

    v80 = *(void **)(v1 + v78);
    if (v80)
      objc_msgSend(v80, "setActive:", 1);
    v81 = sub_10005DE3C();
    LODWORD(v82) = 1148846080;
    objc_msgSend(v81, "setContentHuggingPriority:forAxis:", 1, v82);

    v87 = sub_10005DE3C();
    LODWORD(v83) = 1148846080;
    objc_msgSend(v87, "setContentHuggingPriority:forAxis:", 0, v83);

  }
  else
  {
    __break(1u);
  }
}

void sub_10005ED7C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayManager];
  v2 = OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_applePayViewModel);
  v5 = *(_QWORD *)(v3 + 40);
  v4 = *(_QWORD *)(v3 + 48);
  v6 = &v0[OBJC_IVAR____TtC8Business13IMBBubbleView_title];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_title + 8];
  *(_QWORD *)v6 = v5;
  *((_QWORD *)v6 + 1) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v7);
  sub_1000AA190();
  v8 = *(void **)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_subtitleLabel];
  objc_msgSend(v8, "setAttributedText:", *(_QWORD *)(*(_QWORD *)(v1 + v2) + 56));
  v9 = *(_QWORD *)(v1 + v2);
  v10 = *(_QWORD *)(v9 + 72);
  if (v10)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v9 + 72));
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v8, "setAccessibilityLabel:", v11);

  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (!v12)
    goto LABEL_8;
  v13 = v12 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
  if ((*(_BYTE *)(v13 + 8) & 1) != 0)
    goto LABEL_8;
  v14 = *(_QWORD *)v13;
  if (v14 > 7)
    return;
  if (((1 << v14) & 0x9A) != 0 || v14 == 2)
  {
LABEL_8:
    sub_10005F1B8();
    if ((v0[OBJC_IVAR____TtC8Business13IMBBubbleView_useAlternateTapTarget] & 1) == 0)
      objc_msgSend(v0, "setUserInteractionEnabled:", 0);
  }
  else if (v14 == 6)
  {
    sub_10005F1B8();
  }
}

void sub_10005EF10()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  Class isa;
  UIWindow_optional v24;

  objc_msgSend(v0, "setBackgroundColor:", *(_QWORD *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_defaultColor]);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business18ApplePayBubbleView_message];
  v2 = objc_msgSend(v1, "rootKey");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = objc_msgSend(v1, "isFromMe");
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayManager];
  v8 = OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest;
  v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (v9)
  {
    v10 = v9 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
    if (*(_BYTE *)(v10 + 8))
      v11 = 1;
    else
      v11 = *(_QWORD *)v10;
  }
  else
  {
    v11 = 1;
  }
  v12 = sub_100060F1C(v11);
  v14 = v13;
  sub_100085D10(v3, v5, v6, v12, v13, (uint64_t)objc_msgSend(v1, "version"));
  swift_bridgeObjectRelease(v5);
  v15 = swift_bridgeObjectRelease(v14);
  if (qword_1000EBCB8 != -1)
    v15 = swift_once(&qword_1000EBCB8, sub_100082798);
  v16 = qword_1000F8A90;
  v17 = static os_log_type_t.default.getter(v15);
  v18 = os_log(_:dso:log:type:_:)("ApplePayBubble open logged in aggregate", 39, 2, &_mh_execute_header, v16, v17, _swiftEmptyArrayStorage);
  v19 = *(_QWORD *)(v7 + v8);
  if (v19)
  {
    v20 = v19 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState;
    if ((*(_BYTE *)(v20 + 8) & 1) == 0)
    {
      v21 = *(_QWORD *)v20;
      if (v21 <= 7)
      {
        if (((1 << v21) & 0x9C) != 0)
        {
          sub_10005ED7C();
        }
        else if (((1 << v21) & 0x21) != 0)
        {
          v22 = static os_log_type_t.info.getter(v18);
          os_log(_:dso:log:type:_:)("Presenting Apple Pay sheet", 26, 2, &_mh_execute_header, v16, v22, _swiftEmptyArrayStorage);
          v24.value.super.super.super.isa = (Class)objc_msgSend(v0, "window");
          isa = v24.value.super.super.super.isa;
          IMBApplePayManager.presentApplePay(with:)(v24);

        }
        else if (v21 == 6)
        {
          sub_10005F3F0();
        }
      }
    }
  }
}

uint64_t sub_10005F1B8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000090C8(0, (unint64_t *)&qword_1000EBD00, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = swift_allocObject(&unk_1000D9260, 24, 7);
  *(_QWORD *)(v13 + 16) = v0;
  aBlock[4] = sub_10005F994;
  v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100025AB0;
  aBlock[3] = &unk_1000D9278;
  v14 = _Block_copy(aBlock);
  v15 = v23;
  v16 = v1;
  v17 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100041F44();
  v19 = sub_100007D40((uint64_t *)&unk_1000EEBA0);
  v20 = sub_100041F8C();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v2, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

id sub_10005F390(uint64_t a1)
{
  id v2;
  id result;

  v2 = sub_10005DE3C();
  objc_msgSend(v2, "setHidden:", 1);

  result = *(id *)(a1 + OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayButtonWidthConstraint);
  if (result)
    return objc_msgSend(result, "setConstant:", 0.0);
  return result;
}

void sub_10005F3F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char v46;
  _BYTE v48[24];

  v1 = v0;
  v2 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v2, v3);
  v5 = &v48[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = __chkstk_darwin(v6, v8);
  v11 = &v48[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = __chkstk_darwin(v9, v12);
  v15 = &v48[-v14 - 8];
  if (qword_1000EBCB8 != -1)
    v13 = swift_once(&qword_1000EBCB8, sub_100082798);
  v16 = qword_1000F8A90;
  v17 = static os_log_type_t.info.getter(v13);
  os_log(_:dso:log:type:_:)("Opening fallback URL", 20, 2, &_mh_execute_header, v16, v17, _swiftEmptyArrayStorage);
  v18 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Business18ApplePayBubbleView_applePayManager)
                  + OBJC_IVAR____TtC8Business18IMBApplePayManager_messagePaymentRequest);
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_13;
  }
  v19 = v18 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_fallbackUrl, v48, 0, 0);
  sub_10003CED0(v19, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_13:
    sub_10004AF88((uint64_t)v5);
    v27 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
    v28 = (void *)static OS_os_log.default.getter(v27);
    v29 = static os_log_type_t.default.getter(v28);
    os_log(_:dso:log:type:_:)("BusinessChat: Unable to open fallbackUrl as it was not in payload", 65, 2, &_mh_execute_header, v28, v29, _swiftEmptyArrayStorage);

    sub_10008D0D4();
    return;
  }
  v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v15, v5, v6);
  v21 = URL.scheme.getter(v20);
  if (v22)
  {
    v23 = v22;
    if (v21 == 1886680168 && v22 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease(v22);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v15, v6);
LABEL_20:
      v33 = *(void (**)(char *, uint64_t))(v7 + 8);
      v33(v11, v6);
      goto LABEL_21;
    }
    v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 1886680168, 0xE400000000000000, 0);
    swift_bridgeObjectRelease(v23);
    v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v11, v15, v6);
    if ((v25 & 1) != 0)
      goto LABEL_20;
  }
  else
  {
    v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v11, v15, v6);
  }
  v30 = URL.scheme.getter(v26);
  if (!v31)
  {
    v45 = *(void (**)(char *, uint64_t))(v7 + 8);
    v45(v11, v6);
    v45(v15, v6);
    return;
  }
  v32 = v31;
  if (v30 == 0x7370747468 && v31 == 0xE500000000000000)
  {
    v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v11, v6);
    swift_bridgeObjectRelease(0xE500000000000000);
  }
  else
  {
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, 0x7370747468, 0xE500000000000000, 0);
    v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v11, v6);
    swift_bridgeObjectRelease(v32);
    if ((v46 & 1) == 0)
      goto LABEL_24;
  }
LABEL_21:
  v34 = *(void **)(v1 + OBJC_IVAR____TtC8Business18ApplePayBubbleView_message);
  v35 = objc_msgSend(v34, "rootKey");
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  LOBYTE(v35) = objc_msgSend(v34, "isFromMe");
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCLoggingEventNameFallback);
  v41 = v40;
  sub_100085D10(v36, v38, (char)v35, v39, v40, (uint64_t)objc_msgSend(v34, "version"));
  swift_bridgeObjectRelease(v38);
  v42 = swift_bridgeObjectRelease(v41);
  v43 = qword_1000F8A90;
  v44 = static os_log_type_t.default.getter(v42);
  os_log(_:dso:log:type:_:)("ApplePayBubble open fallback logged in aggregate", 48, 2, &_mh_execute_header, v43, v44, _swiftEmptyArrayStorage);
  sub_100008FA4((_QWORD *)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_urlHelper), *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_urlHelper + 24));
  sub_10004E4AC((uint64_t)v15, 0, 0, 0);
LABEL_24:
  v33(v15, v6);
}

void sub_10005F87C()
{
  uint64_t v0;

}

id sub_10005F8C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ApplePayBubbleView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ApplePayBubbleView()
{
  return objc_opt_self(_TtC8Business18ApplePayBubbleView);
}

uint64_t sub_10005F970()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10005F994()
{
  uint64_t v0;

  return sub_10005F390(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10005F99C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005F9AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void destroy for IMBJITAppKitBubbleModel(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 8));
}

_QWORD *_s8Business23IMBJITAppKitBubbleModelVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  swift_retain(v4);
  v7 = v5;
  return a1;
}

uint64_t assignWithCopy for IMBJITAppKitBubbleModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_retain(v8);
  swift_release(v7);
  v9 = *(void **)(a2 + 16);
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  v11 = v9;

  return a1;
}

__n128 initializeWithTake for IMBJITAppKitBubbleModel(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IMBJITAppKitBubbleModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for IMBJITAppKitBubbleModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IMBJITAppKitBubbleModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IMBJITAppKitBubbleModel()
{
  return &type metadata for IMBJITAppKitBubbleModel;
}

uint64_t storeEnumTagSinglePayload for JITAppKitBubbleState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10005FBE0 + 4 * byte_1000B24A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10005FC14 + 4 * asc_1000B24A0[v4]))();
}

uint64_t sub_10005FC14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005FC1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10005FC24);
  return result;
}

uint64_t sub_10005FC30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10005FC38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10005FC3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005FC44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JITAppKitBubbleState()
{
  return &type metadata for JITAppKitBubbleState;
}

unint64_t sub_10005FC64()
{
  unint64_t result;

  result = qword_1000EE830;
  if (!qword_1000EE830)
  {
    result = swift_getWitnessTable(&unk_1000B2528, &type metadata for JITAppKitBubbleState);
    atomic_store(result, (unint64_t *)&qword_1000EE830);
  }
  return result;
}

double sub_10005FCA8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v6;
  char v7;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_10004F068(a1, a2), (v7 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

unint64_t sub_10005FCF8@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char v6;

  if (*(_QWORD *)(a3 + 16))
  {
    result = sub_10004F068(result, a2);
    if ((v6 & 1) != 0)
      return sub_100019360(*(_QWORD *)(a3 + 56) + 32 * result, (uint64_t)a4);
  }
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  a4[3] = 1;
  return result;
}

uint64_t sub_10005FD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_10004F068(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  v7 = *v6;
  swift_bridgeObjectRetain(v6[1]);
  return v7;
}

id sub_10005FDA0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id result;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = sub_100007D40((uint64_t *)&unk_1000ED480);
  v4 = __chkstk_darwin(v2, v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  v9 = (char *)&v37 - v8;
  v10 = type metadata accessor for IMBMessage();
  v11 = (void *)swift_dynamicCastClass(a1, v10);
  v12 = a1;
  v13 = v12;
  if (v11)
  {
    v14 = v12;
    goto LABEL_19;
  }
  v15 = objc_msgSend(v12, "messageData");
  v16 = v15;
  if (!v15)
    goto LABEL_7;
  v17 = objc_msgSend(v15, "data");

  if (!v17)
  {
    v16 = 0;
LABEL_7:
    v19 = 0xF000000000000000;
    goto LABEL_8;
  }
  v16 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v19 = v18;

LABEL_8:
  v20 = objc_msgSend(v13, "messageData");
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, "url");

    if (v22)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v22);

      v23 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 0, 1, v23);
    }
    else
    {
      v25 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
    }
    sub_100030C84((uint64_t)v6, (uint64_t)v9);
  }
  else
  {
    v24 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 1, 1, v24);
  }
  v26 = objc_msgSend(v13, "messageGUID");
  if (v26)
  {
    v27 = v26;
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v30 = v29;

  }
  else
  {
    v28 = 0;
    v30 = 0;
  }
  result = sub_10003C284((uint64_t)v16, v19, (uint64_t)v9, v28, v30, (char)objc_msgSend(v13, "isFromMe"));
  if (!result)
  {
    __break(1u);
    return result;
  }
  v11 = result;
LABEL_19:
  v32 = v11;
  v33 = objc_msgSend(v32, "rootObject");
  if (v33)
  {
    v34 = v33;
    v35 = type metadata accessor for IMBJITAppKitData();
    v36 = swift_dynamicCastClass(v34, v35);

    if (!v36)
      swift_unknownObjectRelease(v34);
  }
  else
  {

  }
  return v13;
}

uint64_t sub_100060064(char a1, id a2, uint64_t a3)
{
  unsigned int v6;
  char **v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  void *v16;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  v6 = objc_msgSend(a2, "isFromMe");
  v7 = &selRef_replyMessage;
  if (!v6)
    v7 = &selRef_receivedMessage;
  v8 = objc_msgSend(a2, *v7);
  v9 = v8;
  if (!v8
    || (v10 = objc_msgSend(v8, "alternateTitle")) == 0
    && (v10 = objc_msgSend(v9, "title")) == 0)
  {
    v10 = objc_msgSend((id)objc_opt_self(BCMessage), "defaultBubbleTitleFor:", a2);
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);

  if ((a1 & 1) == 0)
  {
    if (a3)
    {
      v12 = *(_QWORD *)(a3 + 16);
      if (*(_QWORD *)(v12 + 16))
      {
        swift_bridgeObjectRetain(v12);
        v13 = sub_10004F068(0xD000000000000012, 0x80000001000B8BB0);
        if ((v14 & 1) != 0)
        {
          sub_100009C74(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v19);

          swift_bridgeObjectRelease(v12);
          if (*((_QWORD *)&v20 + 1))
          {
            swift_dynamicCast(&v18, &v19, (char *)&type metadata for Any + 8, &type metadata for String, 6);
            return v11;
          }
        }
        else
        {
          v19 = 0u;
          v20 = 0u;

          swift_bridgeObjectRelease(v12);
        }
      }
      else
      {
        v19 = 0u;
        v20 = 0u;

      }
    }
    else
    {

      v19 = 0u;
      v20 = 0u;
    }
    sub_100009CB0((uint64_t)&v19);
    return v11;
  }
  if (v9)
  {
    v15 = objc_msgSend(v9, "subtitle");
    if (v15)
    {
      v16 = v15;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v15);

    }
  }
  return v11;
}

id sub_100060290(char a1, id a2)
{
  unsigned int v4;
  char **v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;

  v4 = objc_msgSend(a2, "isFromMe");
  v5 = &selRef_replyMessage;
  if (!v4)
    v5 = &selRef_receivedMessage;
  v6 = objc_msgSend(a2, *v5);
  v7 = v6;
  if ((a1 & 1) == 0)
  {

    return 0;
  }
  if (!v6)
    return 0;
  v8 = objc_msgSend(v6, "image");
  v9 = objc_msgSend(v7, "imageDescription");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);

  }
  return v8;
}

double sub_10006038C()
{
  double result;

  qword_1000EE858 = 0;
  result = 0.0;
  xmmword_1000EE838 = 0u;
  unk_1000EE848 = 0u;
  return result;
}

uint64_t sub_1000603A4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000EBCA0 != -1)
    swift_once(&qword_1000EBCA0, sub_10006038C);
  return sub_10006043C((uint64_t)&xmmword_1000EE838, a1);
}

uint64_t sub_1000603F8()
{
  unint64_t v0;

  v0 = sub_1000420E4();
  return EnvironmentValues.subscript.getter(&type metadata for BubbleContextKey, &type metadata for BubbleContextKey, v0);
}

ValueMetadata *type metadata accessor for BubbleContextKey()
{
  return &type metadata for BubbleContextKey;
}

uint64_t sub_10006043C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000ED6D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100060484()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Business20QuickReplyItemButton____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business20QuickReplyItemButton____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business20QuickReplyItemButton____lazy_storage___titleLabel);
  }
  else
  {
    v4 = sub_1000604E0();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1000604E0()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;
  id v6;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v1) = 1148846080;
  objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 0, v1);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 1, v2);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, "setContentHuggingPriority:forAxis:", 0, v3);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v0, "setContentHuggingPriority:forAxis:", 1, v4);
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  objc_msgSend(v0, "setTextColor:", v5);

  objc_msgSend(v0, "setMinimumScaleFactor:", 0.4);
  objc_msgSend(v0, "setAdjustsFontSizeToFitWidth:", 1);
  v6 = sub_1000907D4((uint64_t)UIFontTextStyleSubheadline, 0x8000, 0, 1, 1, 0.0);
  objc_msgSend(v0, "setFont:", v6);

  objc_msgSend(v0, "setNumberOfLines:", 0);
  return v0;
}

id sub_10006064C(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  id v5;
  id v6;
  NSString v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  Class isa;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  double v48;
  double v49;
  id v50;
  double v51;
  id v52;
  uint64_t v53;
  Class v54;
  objc_super v57;

  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business20QuickReplyItemButton____lazy_storage___titleLabel] = 0;
  v57.receiver = v3;
  v57.super_class = (Class)type metadata accessor for QuickReplyItemButton();
  v5 = objc_msgSendSuper2(&v57, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v5, "setIsAccessibilityElement:", 1);
  objc_msgSend(v5, "setAccessibilityTraits:", UIAccessibilityTraitButton);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setAccessibilityLabel:", v7);

  v8 = sub_100060484();
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(v8, "setText:", v9);

  v10 = v6;
  v11 = sub_100060484();
  objc_msgSend(v10, "addSubview:", v11);

  v12 = (void *)objc_opt_self(NSLayoutConstraint);
  v13 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v14 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1000AF130;
  v15 = sub_100060484();
  v16 = objc_msgSend(v15, "leadingAnchor");

  v17 = objc_msgSend(v10, "leadingAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, 12.0);

  *(_QWORD *)(v14 + 32) = v18;
  v19 = sub_100060484();
  v20 = objc_msgSend(v19, "trailingAnchor");

  v21 = objc_msgSend(v10, "trailingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, -12.0);

  *(_QWORD *)(v14 + 40) = v22;
  v23 = sub_100060484();
  v24 = objc_msgSend(v23, "topAnchor");

  v25 = objc_msgSend(v10, "topAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, 12.0);

  *(_QWORD *)(v14 + 48) = v26;
  v27 = sub_100060484();
  v28 = objc_msgSend(v27, "bottomAnchor");

  v29 = objc_msgSend(v10, "bottomAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, -12.0);

  *(_QWORD *)(v14 + 56) = v30;
  specialized Array._endMutation()(v31);
  sub_100011A28();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v12, "activateConstraints:", isa);

  if ((a3 & 1) != 0)
  {
    v33 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v34 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
    objc_msgSend(v33, "setBackgroundColor:", v34);

    objc_msgSend(v10, "addSubview:", v33);
    v35 = swift_allocObject(v13, 64, 7);
    *(_OWORD *)(v35 + 16) = xmmword_1000AF130;
    v36 = objc_msgSend(v33, "leadingAnchor");
    v37 = sub_100060484();
    v38 = objc_msgSend(v37, "leadingAnchor");

    v39 = objc_msgSend(v36, "constraintEqualToAnchor:", v38);
    *(_QWORD *)(v35 + 32) = v39;
    v40 = objc_msgSend(v33, "trailingAnchor");
    v41 = objc_msgSend(v10, "trailingAnchor");
    v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

    *(_QWORD *)(v35 + 40) = v42;
    v43 = objc_msgSend(v33, "bottomAnchor");
    v44 = objc_msgSend(v10, "bottomAnchor");
    v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

    *(_QWORD *)(v35 + 48) = v45;
    v46 = objc_msgSend(v33, "heightAnchor");
    v47 = objc_msgSend(v10, "traitCollection");
    objc_msgSend(v47, "displayScale");
    v49 = v48;

    if (v49 <= 0.0)
    {
      v50 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v50, "scale");
      v49 = v51;

      if (v49 <= 0.0)
        v49 = 1.0;
    }
    v52 = objc_msgSend(v46, "constraintEqualToConstant:", 1.0 / v49, 4, 9);

    *(_QWORD *)(v35 + 56) = v52;
    specialized Array._endMutation()(v53);
    v54 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v35);
    objc_msgSend(v12, "activateConstraints:", v54);

  }
  return v10;
}

void sub_100060DBC(char a1)
{
  void *v1;
  id v3;
  unsigned int v4;
  double v5;
  id v6;
  _BOOL4 v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for QuickReplyItemButton();
  objc_msgSendSuper2(&v8, "setHighlighted:", a1 & 1);
  v3 = sub_100060484();
  v4 = objc_msgSend(v1, "isHighlighted");
  v5 = 1.0;
  if (v4)
  {
    v6 = objc_msgSend(v1, "traitCollection", 1.0);
    v7 = objc_msgSend(v6, "userInterfaceStyle") == (id)2;

    v5 = dbl_1000B25B0[v7];
  }
  objc_msgSend(v3, "setAlpha:", v5);

}

id sub_100060EA4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QuickReplyItemButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for QuickReplyItemButton()
{
  return objc_opt_self(_TtC8Business20QuickReplyItemButton);
}

uint64_t BCApplePayStatus.init(rawValue:)(uint64_t a1, unint64_t a2)
{
  return sub_10006103C(a1, a2);
}

uint64_t sub_100060F1C(uint64_t a1)
{
  uint64_t result;

  result = 0x64657269707865;
  switch(a1)
  {
    case 0:
      result = 0x64696C6176;
      break;
    case 1:
      result = 0x64696C61766E69;
      break;
    case 2:
      return result;
    case 3:
      result = 1684627824;
      break;
    case 4:
      result = 0x64656E696C636564;
      break;
    case 5:
      result = 0x7075746573;
      break;
    case 6:
      result = 0x616C696176616E75;
      break;
    case 7:
      result = 0xD000000000000013;
      break;
    default:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Business/BCExtensions.swift", 27, 2, 62, 0);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_10006103C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  if (a1 == 1684627824 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 1684627824, 0xE400000000000000, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 3;
  }
  if (a1 == 0x64696C61766E69 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x64696C61766E69, 0xE700000000000000, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x64696C6176 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 0;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x64696C6176, 0xE500000000000000, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x64656E696C636564 && a2 == 0xE800000000000000)
  {
    v9 = 0xE800000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x64656E696C636564, 0xE800000000000000, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x7075746573 && a2 == 0xE500000000000000)
  {
    v10 = 0xE500000000000000;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x7075746573, 0xE500000000000000, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x616C696176616E75 && a2 == 0xEB00000000656C62)
  {
    v11 = 0xEB00000000656C62;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x616C696176616E75, 0xEB00000000656C62, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x80000001000B8C80)
  {
    swift_bridgeObjectRelease(0x80000001000B8C80);
    return 7;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000013, 0x80000001000B8C80, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 7;
    else
      return 0;
  }
}

id sub_100061330()
{
  uint64_t v0;
  void *v1;
  Class v2;
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  Class isa;

  v1 = *(void **)(v0 + 88);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = -[objc_class imageData](v2, "imageData");
  v4 = v3;
  if (v3)
  {
    v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

    v8 = objc_allocWithZone((Class)UIImage);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v4 = objc_msgSend(v8, "initWithData:", isa);
    sub_100010BFC(v5, v7);

    v2 = isa;
  }

  return v4;
}

void sub_1000613F4(void *a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  Swift::String v40;
  Swift::String v41;
  NSString v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;

  v3 = v2;
  v6 = objc_msgSend(a2, "receivedMessage");
  v7 = objc_msgSend(a2, "replyMessage");
  v8 = (void *)sub_100062CC0(v6, v7);

  v9 = objc_msgSend(a1, "selectedMessage");
  v49 = objc_msgSend(v9, "session");

  v10 = v49;
  if (!v49)
    v10 = objc_msgSend(objc_allocWithZone((Class)MSSession), "init");
  v50 = v10;
  v11 = objc_msgSend(objc_allocWithZone((Class)MSMessage), "initWithSession:", v10);
  v12 = objc_msgSend(objc_allocWithZone((Class)MSMessageTemplateLayout), "init");
  v13 = objc_msgSend(a2, "replyMessage");
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, "image");

    if (v15)
      goto LABEL_16;
  }
  v16 = *(_QWORD *)(v3 + 24);
  swift_retain(v3);
  v17 = swift_bridgeObjectRetain(v16);
  v19 = sub_1000638D0(v17, v3, v18);
  swift_bridgeObjectRelease(v16);
  swift_release(v3);
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v21 = v19;
    else
      v21 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v19);
    if (v22)
      goto LABEL_7;
LABEL_15:
    swift_bridgeObjectRelease(v19);
    v15 = 0;
    goto LABEL_16;
  }
  if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_15;
LABEL_7:
  if ((v19 & 0xC000000000000001) != 0)
  {
    v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
  }
  else
  {
    if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v20 = *(_QWORD *)(v19 + 32);
    swift_retain(v20);
  }
  swift_bridgeObjectRelease(v19);
  v15 = sub_100061330();
  swift_release(v20);
LABEL_16:
  objc_msgSend(v12, "setImage:", v15, v50);

  v23 = objc_msgSend(v8, "title");
  objc_msgSend(v12, "setCaption:", v23);

  v24 = objc_msgSend(v8, "subtitle");
  objc_msgSend(v12, "setSubcaption:", v24);

  v25 = objc_msgSend(a1, "selectedMessage");
  if (v25
    && (v26 = v25, v27 = objc_msgSend(v25, "layout"), v26, v27)
    && (v28 = objc_opt_self(MSMessageLiveLayout),
        v29 = swift_dynamicCastObjCClass(v27, v28),
        v27,
        v29))
  {
    v30 = objc_msgSend(objc_allocWithZone((Class)MSMessageLiveLayout), "initWithAlternateLayout:", v12);
    objc_msgSend(v11, "setLayout:", v30);

  }
  else
  {
    objc_msgSend(v11, "setLayout:", v12);
  }
  v31 = objc_msgSend(v8, "title");
  if (v31)
  {
    v32 = v31;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

  }
  else
  {
    v34 = 0xE000000000000000;
  }
  v35 = objc_msgSend(v8, "subtitle");
  if (v35)
  {
    v36 = v35;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v39 = v38;

    v40._countAndFlagsBits = v37;
    v40._object = v39;
    String.append(_:)(v40);
    swift_bridgeObjectRelease(v39);
    v41._countAndFlagsBits = 32;
    v41._object = (void *)0xE100000000000000;
    String.append(_:)(v41);
    swift_bridgeObjectRelease(0xE100000000000000);
  }
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  objc_msgSend(v11, "setAccessibilityLabel:", v42);

  v43 = (void *)BCMessageRootListPickerKey;
  swift_retain(v3);
  v44 = a2;
  v45 = v11;
  v46 = a1;
  v47 = v8;
  v48 = v43;
  sub_1000371DC(1);
  swift_release(v3);

}

uint64_t sub_1000618C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24);
  if ((unint64_t)v1 >> 62)
    goto LABEL_37;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v27))
  {
    v3 = 0;
    v33 = v1 & 0xC000000000000001;
    v29 = v1 + 32;
    v30 = v1 & 0xFFFFFFFFFFFFFF8;
    v4 = _swiftEmptyArrayStorage;
    v31 = v2;
    v32 = v1;
    while (1)
    {
      if (v33)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
        v8 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_35;
      }
      else
      {
        if (v3 >= *(_QWORD *)(v30 + 16))
          goto LABEL_36;
        v7 = *(_QWORD *)(v29 + 8 * v3);
        swift_retain(v7);
        v8 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_35;
      }
      v9 = *(_QWORD *)(v7 + 40);
      if ((unint64_t)v9 >> 62)
      {
        if (v9 < 0)
          v26 = *(_QWORD *)(v7 + 40);
        else
          v26 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)(v7 + 40));
        v10 = _CocoaArrayWrapper.endIndex.getter(v26);
        swift_bridgeObjectRelease(v9);
        if (v10 < 0)
        {
          __break(1u);
          goto LABEL_33;
        }
      }
      else
      {
        v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10)
        break;
      swift_release(v7);
LABEL_5:
      v3 = v8;
      if (v8 == v2)
        goto LABEL_42;
    }
    v34 = v7;
    v35 = v8;
    v11 = type metadata accessor for IndexPath(0, v5, v6);
    v12 = 0;
    v13 = *(_QWORD *)(v11 - 8);
    v1 = *(_QWORD *)(v13 + 72);
    v14 = *(unsigned __int8 *)(v13 + 80);
    v15 = (v14 + 32) & ~v14;
    v36 = v14 | 7;
    while (v10 != v12)
    {
      v16 = sub_100007D40(&qword_1000ED5E8);
      v17 = swift_allocObject(v16, v15 + v1, v36);
      v18 = v17 + v15;
      v19 = v3;
      IndexPath.init(row:section:)(v12, v3);
      v20 = v4[2];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
      if (!isUniquelyReferenced_nonNull_native || (v22 = v4[3] >> 1, v22 <= v20))
      {
        v4 = (_QWORD *)sub_100038BCC(isUniquelyReferenced_nonNull_native, v20 + 1, 1, (unint64_t)v4);
        v22 = v4[3] >> 1;
      }
      v23 = v4[2];
      if (v22 <= v23)
        goto LABEL_34;
      v24 = (char *)v4 + v15 + v23 * v1;
      if (v18 < (unint64_t)&v24[v1] && (unint64_t)v24 < v18 + v1)
      {
        result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
        __break(1u);
        return result;
      }
      v3 = v19;
      ++v12;
      swift_arrayInitWithCopy(v24);
      ++v4[2];
      swift_setDeallocating(v17);
      swift_arrayDestroy(v18, 1, v11);
      swift_deallocClassInstance(v17, 32, 7);
      if (v10 == v12)
      {
        swift_release(v34);
        v2 = v31;
        v1 = v32;
        v8 = v35;
        goto LABEL_5;
      }
    }
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (v1 < 0)
      v27 = v1;
    else
      v27 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
  }
  v4 = _swiftEmptyArrayStorage;
LABEL_42:
  swift_bridgeObjectRelease(v1);
  return (uint64_t)v4;
}

unint64_t sub_100061BE8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 24);
  v4 = swift_bridgeObjectRetain(v3);
  result = IndexPath.section.getter(v4);
  if ((v3 & 0xC000000000000001) == 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v6 = *(_QWORD *)(v3 + 8 * result + 32);
      swift_retain(v6);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_13;
  }
  v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v3);
LABEL_5:
  swift_bridgeObjectRelease(v3);
  v3 = *(_QWORD *)(v6 + 40);
  swift_bridgeObjectRetain(v3);
  v7 = swift_release(v6);
  result = IndexPath.row.getter(v7);
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_13:
    v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v3);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(_QWORD *)(v3 + 8 * result + 32);
    swift_retain(v8);
LABEL_9:
    result = swift_bridgeObjectRelease(v3);
    *a2 = v8;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100061CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  Swift::String v65;
  Swift::String v66;
  Swift::String v67;
  Swift::String v68;
  uint64_t v69;
  void *v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  Swift::String v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  Swift::String v94;
  Swift::String v95;

  v2 = *(_QWORD *)(v0 + 24);
  swift_retain(v0);
  v3 = swift_bridgeObjectRetain(v2);
  v4 = 0;
  v6 = sub_1000638D0(v3, v0, v5);
  swift_bridgeObjectRelease(v2);
  swift_release(v0);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v85 = v6;
    else
      v85 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(v6);
    if (!v7)
      goto LABEL_8;
  }
  else
  {
    v7 = *(_QWORD **)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      goto LABEL_8;
  }
  v8 = (unint64_t)v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
  }
  else if ((v6 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(_QWORD **)(v6 + 8 * v8 + 32);
      swift_retain(v7);
      goto LABEL_8;
    }
    __break(1u);
LABEL_128:
    v11 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
    goto LABEL_13;
  }
  v7 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
LABEL_8:
  swift_bridgeObjectRelease(v6);
  swift_retain(v0);
  v9 = swift_bridgeObjectRetain(v2);
  v1 = sub_1000638D0(v9, v0, v10);
  swift_bridgeObjectRelease(v2);
  swift_release(v0);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v86 = v1;
    else
      v86 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v11 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease(v1);
    if (!v11)
      goto LABEL_13;
  }
  else
  {
    v11 = *(_QWORD **)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      goto LABEL_13;
  }
  if ((v1 & 0xC000000000000001) != 0)
    goto LABEL_128;
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_130;
  }
  v11 = *(_QWORD **)(v1 + 32);
  swift_retain(v11);
LABEL_13:
  swift_bridgeObjectRelease(v1);
  swift_retain(v0);
  v12 = swift_bridgeObjectRetain(v2);
  v14 = sub_1000638D0(v12, v0, v13);
  swift_bridgeObjectRelease(v2);
  swift_release(v0);
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v87 = v14;
    else
      v87 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v87);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v14);
  swift_retain(v0);
  v16 = swift_bridgeObjectRetain(v2);
  v4 = sub_1000638D0(v16, v0, v17);
  swift_bridgeObjectRelease(v2);
  result = swift_release(v0);
  v19 = (unint64_t)v4 >> 62;
  if (v15 == 1)
  {
    if (!v19)
    {
      v20 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v20)
      {
LABEL_18:
        if ((v4 & 0xC000000000000001) != 0)
        {
          v90 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
          swift_bridgeObjectRelease(v4);
          v20 = *(_QWORD *)(v90 + 40);
          swift_bridgeObjectRetain(*(_QWORD *)(v90 + 48));
          swift_unknownObjectRelease(v90);
          goto LABEL_21;
        }
        if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v21 = *(_QWORD *)(v4 + 32);
          swift_retain(v21);
          swift_bridgeObjectRelease(v4);
          v20 = *(_QWORD *)(v21 + 40);
          swift_bridgeObjectRetain(*(_QWORD *)(v21 + 48));
          swift_release(v21);
LABEL_21:
          swift_release(v11);
          goto LABEL_140;
        }
        __break(1u);
        goto LABEL_143;
      }
      goto LABEL_134;
    }
LABEL_130:
    if (v4 < 0)
      v88 = v4;
    else
      v88 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v20 = _CocoaArrayWrapper.endIndex.getter(v88);
    result = swift_bridgeObjectRelease(v4);
    if (v20)
      goto LABEL_18;
LABEL_134:
    swift_bridgeObjectRelease(v4);
    swift_release(v11);
LABEL_140:
    swift_release(v7);
    return v20;
  }
  if (!v19)
  {
    v22 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22)
      goto LABEL_24;
LABEL_139:
    swift_bridgeObjectRelease(v4);
    swift_release(v11);
    v20 = 0;
    goto LABEL_140;
  }
  if (v4 < 0)
    v89 = v4;
  else
    v89 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v22 = _CocoaArrayWrapper.endIndex.getter(v89);
  result = swift_bridgeObjectRelease(v4);
  if (!v22)
    goto LABEL_139;
LABEL_24:
  if (v22 >= 1)
  {
    v91 = v15;
    v92 = v4;
    v23 = 0;
    v93 = v4 & 0xC000000000000001;
    while (1)
    {
      if (v93)
      {
        v24 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v4);
        if (!v11)
          break;
      }
      else
      {
        v24 = *(_QWORD **)(v4 + 8 * v23 + 32);
        swift_retain(v24);
        if (!v11)
          break;
      }
      v25 = v24[3];
      v26 = v24[4];
      v27 = v11[3];
      v28 = v11[4];
      v29 = v25 == v27 && v26 == v28;
      if (!v29 && (_stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, v27, v28, 0) & 1) == 0)
        break;
      v31 = v24[5];
      v30 = (void *)v24[6];
      v32 = v11[5];
      v33 = (void *)v11[6];
      v34 = v31 == v32 && v30 == v33;
      if (!v34 && (_stringCompareWithSmolCheck(_:_:expecting:)(v24[5], v24[6], v32, v33, 0) & 1) == 0)
        break;
      v35 = v24[8];
      v36 = v11[8];
      if (v35)
      {
        if (!v36)
          break;
        v37 = v24[7];
        v38 = v11[7];
        if ((v37 != v38 || v35 != v36)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v37, v35, v38, v36, 0) & 1) == 0)
        {
          break;
        }
      }
      else if (v36)
      {
        break;
      }
      v39 = v24[10];
      v40 = v11[10];
      if (v39)
      {
        if (!v40)
          break;
        v41 = v24[9];
        v42 = v11[9];
        if ((v41 != v42 || v39 != v40)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v41, v39, v42, v40, 0) & 1) == 0)
        {
          break;
        }
      }
      else if (v40)
      {
        break;
      }
      if (v91 != 2 || v24[12] != v11[12])
        break;
      swift_bridgeObjectRetain(v30);
      v43._countAndFlagsBits = 32;
      v43._object = (void *)0xE100000000000000;
      String.append(_:)(v43);
      v44._countAndFlagsBits = v31;
      v44._object = v30;
      String.append(_:)(v44);
      swift_bridgeObjectRelease(v30);
      swift_release(v24);
LABEL_108:
      if (v22 == ++v23)
      {
        swift_release(v11);
        swift_bridgeObjectRelease(v4);
        v20 = 0;
        goto LABEL_140;
      }
    }
    v45 = v22;
    if (!v7)
      goto LABEL_105;
    v46 = v24[3];
    v47 = v24[4];
    v49 = v7[3];
    v48 = v7[4];
    v50 = v46 == v49 && v47 == v48;
    v51 = v50;
    if (!v50 && (_stringCompareWithSmolCheck(_:_:expecting:)(v24[3], v24[4], v7[3], v7[4], 0) & 1) == 0)
      goto LABEL_86;
    v52 = v24[5];
    v53 = v24[6];
    v54 = v7[5];
    v55 = v7[6];
    if (v52 == v54 && v53 == v55 || (_stringCompareWithSmolCheck(_:_:expecting:)(v52, v53, v54, v55, 0) & 1) != 0)
    {
      v56 = v24[8];
      v57 = v7[8];
      if (v56)
      {
        if (!v57)
          goto LABEL_85;
        v58 = v24[7];
        v59 = v7[7];
        if ((v58 != v59 || v56 != v57)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v58, v56, v59, v57, 0) & 1) == 0)
        {
          goto LABEL_85;
        }
      }
      else if (v57)
      {
        goto LABEL_85;
      }
      v60 = v24[10];
      v61 = v7[10];
      if (v60)
      {
        if (!v61)
          goto LABEL_85;
        v62 = v24[9];
        v63 = v7[9];
        if ((v62 != v63 || v60 != v61)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v62, v60, v63, v61, 0) & 1) == 0)
        {
          goto LABEL_85;
        }
      }
      else if (v61)
      {
        goto LABEL_85;
      }
      if (v24[12] == v7[12])
      {
        v64 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v95._object = (void *)0xE000000000000000;
        v65._countAndFlagsBits = 4476481;
        v65._object = (void *)0xE300000000000000;
        v66._countAndFlagsBits = 0;
        v66._object = (void *)0xE000000000000000;
        v95._countAndFlagsBits = 0;
        v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(v65, (Swift::String_optional)0, (NSBundle)v64, v66, v95);

        v94 = v67;
        swift_bridgeObjectRetain(v67._object);
        v68._countAndFlagsBits = 32;
        v68._object = (void *)0xE100000000000000;
        String.append(_:)(v68);
        swift_bridgeObjectRelease(v67._object);
        v69 = v24[5];
        v70 = (void *)v24[6];
        swift_bridgeObjectRetain(v67._object);
        v71._countAndFlagsBits = v69;
        v71._object = v70;
        String.append(_:)(v71);
        swift_bridgeObjectRelease(v67._object);
LABEL_106:
        String.append(_:)(v94);
        swift_bridgeObjectRelease(v94._object);
        goto LABEL_107;
      }
    }
LABEL_85:
    if (v51)
    {
LABEL_87:
      v72 = v24[5];
      v73 = v24[6];
      v74 = v7[5];
      v75 = v7[6];
      if ((v72 != v74 || v73 != v75) && (_stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v74, v75, 0) & 1) == 0)
        goto LABEL_105;
      v76 = v24[8];
      v77 = v7[8];
      if (v76)
      {
        if (!v77)
          goto LABEL_105;
        v78 = v24[7];
        v79 = v7[7];
        if ((v78 != v79 || v76 != v77)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v78, v76, v79, v77, 0) & 1) == 0)
        {
          goto LABEL_105;
        }
      }
      else if (v77)
      {
        goto LABEL_105;
      }
      v80 = v24[10];
      v81 = v7[10];
      if (v80)
      {
        if (!v81)
          goto LABEL_105;
        v82 = v24[9];
        v83 = v7[9];
        if ((v82 != v83 || v80 != v81)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v82, v80, v83, v81, 0) & 1) == 0)
        {
          goto LABEL_105;
        }
LABEL_104:
        if (v24[12] == v7[12])
        {
LABEL_107:
          swift_release(v24);
          v22 = v45;
          v4 = v92;
          goto LABEL_108;
        }
        goto LABEL_105;
      }
      if (!v81)
        goto LABEL_104;
LABEL_105:
      v94 = *(Swift::String *)(v24 + 5);
      swift_bridgeObjectRetain(v94._object);
      v84._countAndFlagsBits = 8236;
      v84._object = (void *)0xE200000000000000;
      String.append(_:)(v84);
      goto LABEL_106;
    }
LABEL_86:
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v46, v47, v49, v48, 0) & 1) == 0)
      goto LABEL_105;
    goto LABEL_87;
  }
LABEL_143:
  __break(1u);
  return result;
}

uint64_t sub_1000624C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 32);
  }
  else
  {
    v2 = sub_100062520(v0);
    v3 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v2;
    swift_retain(v2);
    swift_release(v3);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_100062520(uint64_t a1)
{
  void *v1;
  char **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t j;
  id v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t k;
  uint64_t v34;
  uint64_t m;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  Swift::String v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  Swift::String v71;

  v4 = *(_QWORD *)(a1 + 24);
  swift_retain(a1);
  v5 = swift_bridgeObjectRetain(v4);
  v7 = sub_1000638D0(v5, a1, v6);
  swift_bridgeObjectRelease(v4);
  swift_release(a1);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v66 = v7;
    else
      v66 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v66);
    if (!v8)
      goto LABEL_10;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    if (!v8)
      goto LABEL_10;
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_45;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v8; ++i)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
      *(_QWORD *)(v10 + 96) = i;
      swift_unknownObjectRelease(v10);
    }
  }
  else
  {
    for (j = 0; j != v8; ++j)
      *(_QWORD *)(*(_QWORD *)(v7 + 32 + 8 * j) + 96) = j;
  }
LABEL_10:
  swift_bridgeObjectRelease_n(v7, 2);
  v1 = (void *)objc_opt_self(NSBundle);
  v2 = &selRef_layoutMarginsGuide;
  v12 = objc_msgSend(v1, "mainBundle");
  v71._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0x454C45535F554F59;
  v13._object = (void *)0xEC00000044455443;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v71._countAndFlagsBits = 0;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v71);

  swift_retain(a1);
  v16 = swift_bridgeObjectRetain(v4);
  v18 = sub_1000638D0(v16, a1, v17);
  swift_bridgeObjectRelease(v4);
  swift_release(a1);
  v8 = type metadata accessor for IMBListSection();
  v7 = swift_allocObject(v8, 49, 7);
  *(Swift::String *)(v7 + 16) = v15;
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = v18;
  *(_BYTE *)(v7 + 48) = 0;
  swift_retain(v7);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v21 >= v20 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
  v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v7);
  specialized Array._endMutation()(v22);
  v23 = sub_1000618C0();
  swift_retain(a1);
  v24 = sub_100063B28(v23, a1);
  swift_release(a1);
  swift_retain(a1);
  v26 = sub_1000638D0(v24, a1, v25);
  swift_bridgeObjectRelease(v24);
  swift_release(a1);
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v67 = v26;
    else
      v67 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v27 = _CocoaArrayWrapper.endIndex.getter(v67);
    swift_bridgeObjectRelease(v26);
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v26);
  if (!v27)
    goto LABEL_32;
  v28 = sub_1000618C0();
  swift_retain(a1);
  v29 = sub_100063B28(v28, a1);
  swift_release(a1);
  swift_retain(a1);
  v4 = sub_1000638D0(v29, a1, v30);
  swift_bridgeObjectRelease(v29);
  swift_release(a1);
  if ((unint64_t)v4 >> 62)
  {
LABEL_45:
    if (v4 < 0)
      v68 = v4;
    else
      v68 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    result = _CocoaArrayWrapper.endIndex.getter(v68);
    v31 = result;
    if (result)
      goto LABEL_17;
    goto LABEL_24;
  }
  v31 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(v4);
  if (v31)
  {
LABEL_17:
    if (v31 < 1)
    {
      __break(1u);
      return result;
    }
    if ((v4 & 0xC000000000000001) != 0)
    {
      for (k = 0; k != v31; ++k)
      {
        v34 = specialized _ArrayBuffer._getElementSlowPath(_:)(k, v4);
        *(_QWORD *)(v34 + 96) = k;
        swift_unknownObjectRelease(v34);
      }
    }
    else
    {
      for (m = 0; m != v31; ++m)
        *(_QWORD *)(*(_QWORD *)(v4 + 32 + 8 * m) + 96) = m;
    }
  }
LABEL_24:
  swift_bridgeObjectRelease_n(v4, 2);
  v36 = sub_1000618C0();
  swift_retain(a1);
  v37 = sub_100063B28(v36, a1);
  swift_release(a1);
  swift_retain(a1);
  v39 = sub_1000638D0(v37, a1, v38);
  swift_bridgeObjectRelease(v37);
  swift_release(a1);
  if ((unint64_t)v39 >> 62)
  {
    if (v39 < 0)
      v69 = v39;
    else
      v69 = v39 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v39);
    v40 = _CocoaArrayWrapper.endIndex.getter(v69);
    swift_bridgeObjectRelease(v39);
  }
  else
  {
    v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v39);
  v41 = objc_msgSend(v1, v2[33]);
  v70 = 0xE000000000000000;
  if (v40 < 2)
  {
    v42 = 0x524548544FLL;
    v43 = 0xE500000000000000;
  }
  else
  {
    v42 = 0x53524548544FLL;
    v43 = 0xE600000000000000;
  }
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v45 = 0;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v42, (Swift::String_optional)0, (NSBundle)v41, v44, *(Swift::String *)(&v70 - 1));

  v47 = sub_1000618C0();
  swift_retain(a1);
  v48 = sub_100063B28(v47, a1);
  swift_release(a1);
  swift_retain(a1);
  v50 = sub_1000638D0(v48, a1, v49);
  swift_bridgeObjectRelease(v48);
  swift_release(a1);
  v51 = swift_allocObject(v8, 49, 7);
  *(Swift::String *)(v51 + 16) = v46;
  *(_QWORD *)(v51 + 32) = 1;
  *(_QWORD *)(v51 + 40) = v50;
  *(_BYTE *)(v51 + 48) = 0;
  swift_retain(v51);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
  v54 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v53 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v54 >= v53 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
  v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v51);
  specialized Array._endMutation()(v55);
  swift_release(v51);
LABEL_32:
  v56 = *(_BYTE *)(*(_QWORD *)(a1 + 16) + 16);
  v57 = type metadata accessor for IMBListRequest();
  v58 = swift_allocObject(v57, 32, 7);
  *(_BYTE *)(v58 + 16) = v56;
  *(_QWORD *)(v58 + 24) = _swiftEmptyArrayStorage;
  if (qword_1000EBCC0 != -1)
    swift_once(&qword_1000EBCC0, sub_1000827F0);
  v59 = qword_1000F8A98;
  v60 = static os_log_type_t.debug.getter();
  v61 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v62 = swift_allocObject(v61, 72, 7);
  *(_OWORD *)(v62 + 16) = xmmword_1000AF070;
  swift_retain(v58);
  v63 = sub_100087F60();
  v65 = v64;
  swift_release(v58);
  *(_QWORD *)(v62 + 56) = &type metadata for String;
  *(_QWORD *)(v62 + 64) = sub_100009084();
  *(_QWORD *)(v62 + 32) = v63;
  *(_QWORD *)(v62 + 40) = v65;
  os_log(_:dso:log:type:_:)("Reply listRequest: %@", 21, 2, &_mh_execute_header, v59, v60, v62);
  swift_release(v7);
  swift_bridgeObjectRelease(v62);
  return v58;
}

uint64_t sub_100062BEC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for IMBListResponse()
{
  return objc_opt_self(_TtC8Business15IMBListResponse);
}

uint64_t sub_100062CC0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;

  v3 = v2;
  v6 = 0;
  v7 = sub_100061CE8();
  v9 = v8;
  if (a2)
  {
    v10 = objc_msgSend(a2, "subtitle");
    if (v10)
    {
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0;
    }
    v56 = objc_msgSend(a2, "style");
    v16 = objc_msgSend(a2, "imageIdentifier");
    if (v16)
    {
      v17 = v16;
      v57 = v14;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v14 = v19;

      goto LABEL_22;
    }
  }
  else
  {
    if (a1)
      v15 = objc_msgSend(a1, "style");
    else
      v15 = BCBubbleViewStyleIcon;
    v56 = v15;
    v12 = 0;
    v14 = 0;
  }
  v20 = *(_QWORD *)(v3 + 24);
  swift_retain(v3);
  v21 = swift_bridgeObjectRetain(v20);
  v18 = sub_1000638D0(v21, v3, v22);
  swift_bridgeObjectRelease(v20);
  swift_release(v3);
  if (!((unint64_t)v18 >> 62))
  {
    v57 = v14;
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_13;
LABEL_21:
    swift_bridgeObjectRelease(0);
    swift_bridgeObjectRelease(v18);
    v18 = 0;
    v14 = 0;
    if (!a2)
      goto LABEL_26;
    goto LABEL_22;
  }
  if (v18 < 0)
    v24 = v18;
  else
    v24 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v18);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v18);
  v57 = v14;
  if (!v25)
    goto LABEL_21;
LABEL_13:
  if ((v18 & 0xC000000000000001) != 0)
  {
    v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
    swift_bridgeObjectRelease(v18);
    v18 = *(_QWORD *)(v32 + 72);
    v14 = *(_QWORD *)(v32 + 80);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRelease(0);
    swift_unknownObjectRelease(v32);
    if (!a2)
      goto LABEL_26;
  }
  else
  {
    if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    v23 = *(_QWORD *)(v18 + 32);
    swift_retain(v23);
    swift_bridgeObjectRelease(v18);
    v18 = *(_QWORD *)(v23 + 72);
    v14 = *(_QWORD *)(v23 + 80);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRelease(0);
    swift_release(v23);
    if (!a2)
    {
LABEL_26:
      v33 = *(_QWORD *)(v3 + 24);
      swift_retain(v3);
      v34 = swift_bridgeObjectRetain(v33);
      v6 = sub_1000638D0(v34, v3, v35);
      swift_bridgeObjectRelease(v33);
      result = swift_release(v3);
      if ((unint64_t)v6 >> 62)
      {
        if (v6 < 0)
          v42 = v6;
        else
          v42 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v6);
        v43 = _CocoaArrayWrapper.endIndex.getter(v42);
        result = swift_bridgeObjectRelease(v6);
        if (v43)
        {
LABEL_28:
          if ((v6 & 0xC000000000000001) == 0)
          {
            if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return result;
            }
            v37 = *(_QWORD *)(v6 + 32);
            swift_retain(v37);
            swift_bridgeObjectRelease(v6);
            v38 = *(void **)(v37 + 88);
            v39 = v38;
            swift_release(v37);
            if (!v38)
              goto LABEL_38;
LABEL_31:
            v40 = objc_msgSend(v39, "imageDescription");

            if (v40)
            {
              v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
              v31 = v41;

              goto LABEL_39;
            }
LABEL_38:
            v29 = 0;
            v31 = 0;
            goto LABEL_39;
          }
LABEL_43:
          v54 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
          swift_bridgeObjectRelease(v6);
          v55 = *(void **)(v54 + 88);
          v39 = v55;
          swift_unknownObjectRelease(v54);
          if (!v55)
            goto LABEL_38;
          goto LABEL_31;
        }
      }
      else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_28;
      }
      swift_bridgeObjectRelease(v6);
      goto LABEL_38;
    }
  }
LABEL_22:
  v26 = objc_msgSend(a2, "imageIdentifier");
  if (!v26)
    goto LABEL_26;

  v27 = objc_msgSend(a2, "imageDescription");
  if (!v27)
    goto LABEL_38;
  v28 = v27;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v31 = v30;

LABEL_39:
  objc_allocWithZone((Class)BCMessageInfo);
  v44 = v56;
  swift_bridgeObjectRetain(v9);
  v45 = sub_1000631C0(v7, v9, v12, v57, v44, v7, v9, v18, v14, v29, v31);
  if (qword_1000EBCC0 != -1)
    swift_once(&qword_1000EBCC0, sub_1000827F0);
  v46 = qword_1000F8A98;
  v47 = static os_log_type_t.debug.getter();
  v48 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v49 = swift_allocObject(v48, 72, 7);
  *(_OWORD *)(v49 + 16) = xmmword_1000AF070;
  v50 = objc_msgSend(v45, "debugDescription");
  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v53 = v52;

  *(_QWORD *)(v49 + 56) = &type metadata for String;
  *(_QWORD *)(v49 + 64) = sub_100009084();
  *(_QWORD *)(v49 + 32) = v51;
  *(_QWORD *)(v49 + 40) = v53;
  os_log(_:dso:log:type:_:)("Composed reply message: %@", 26, 2, &_mh_execute_header, v46, v47, v49);

  swift_bridgeObjectRelease(v49);
  return (uint64_t)v45;
}

id sub_1000631C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void *v11;
  NSString v16;
  NSString v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  NSString v21;
  NSString v22;
  id v23;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (a4)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
    v18 = a9;
    if (a7)
      goto LABEL_3;
  }
  else
  {
    v17 = 0;
    v18 = a9;
    if (a7)
    {
LABEL_3:
      v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a7);
      v20 = a11;
      if (v18)
        goto LABEL_4;
LABEL_8:
      v21 = 0;
      if (v20)
        goto LABEL_5;
LABEL_9:
      v22 = 0;
      goto LABEL_10;
    }
  }
  v19 = 0;
  v20 = a11;
  if (!v18)
    goto LABEL_8;
LABEL_4:
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  if (!v20)
    goto LABEL_9;
LABEL_5:
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
LABEL_10:
  v23 = objc_msgSend(v11, "initWithTitle:subtitle:style:alternateTitle:imageIdentifier:imageDescription:", v16, v17, a5, v19, v21, v22);

  return v23;
}

uint64_t sub_10006330C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5 = type metadata accessor for IndexPath(0, a2, a3);
  v8 = sub_100020EC8(v5, v6, v7);
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, v5, v8) & 1;
}

BOOL sub_100063368(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  int v18;
  BOOL v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  _BOOL8 v33;
  uint64_t (*v34)(char *);
  uint64_t v35;

  v4 = v3;
  v5 = a3;
  v33 = a2;
  v34 = a1;
  v35 = type metadata accessor for IndexPath(0, a2, a3);
  v6 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35, v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007D40(&qword_1000ECC88);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v5 + 16);
  if (v14)
  {
    v15 = v5 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v30 = *(_QWORD *)(v6 + 72);
    v31 = v9;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v28 = v5;
    swift_bridgeObjectRetain(v5);
    while (1)
    {
      v16 = v35;
      v32(v13, v15, v35);
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v17(v13, 0, 1, v16);
      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v16);
      v19 = v18 != 1;
      if (v18 == 1)
      {
        v5 = v28;
        goto LABEL_13;
      }
      v29 = 1;
      v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v21 = v6;
      v22 = v31;
      v20(v31, v13, v16);
      v19 = v33;
      v23 = v34(v22);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v16);
        swift_bridgeObjectRelease(v28);
        return v19;
      }
      v24 = v23;
      v25 = v17;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v16);
      if ((v24 & 1) != 0)
        break;
      v15 += v30;
      --v14;
      v4 = 0;
      v6 = v21;
      if (!v14)
      {
        v5 = v28;
        goto LABEL_9;
      }
    }
    v5 = v28;
    v19 = v29;
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain(v5);
LABEL_9:
    v25(v13, 1, 1, v35);
    v19 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease(v5);
  return v19;
}

void (*sub_100063590(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100063710(v6, a2, a3);
  return sub_1000635E4;
}

void (*sub_1000635E8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100063784(v6, a2, a3);
  return sub_1000635E4;
}

void (*sub_10006363C(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_1000637F0(v6, a2, a3);
  return sub_1000635E4;
}

void (*sub_100063690(void (**a1)(id *), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100063864(v6, a2, a3);
  return sub_1000635E4;
}

void sub_1000636E4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_100063710(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_10006377C;
  }
  __break(1u);
  return result;
}

void sub_10006377C(id *a1)
{

}

uint64_t (*sub_100063784(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return sub_100063EE8;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1000637F0(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)sub_10006385C;
  }
  __break(1u);
  return result;
}

uint64_t sub_10006385C(_QWORD *a1)
{
  return swift_release(*a1);
}

void (*sub_100063864(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_100063EEC;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000638D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v4 = v3;
  v31 = a2;
  v6 = type metadata accessor for IndexPath(0, a2, a3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v28 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007D40(&qword_1000ECC88);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v15 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v29 = *(_QWORD *)(v7 + 72);
    v30 = v16;
    v27 = a1;
    swift_bridgeObjectRetain(a1);
    v17 = v28;
    do
    {
      v30(v13, v15, v6);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v19(v13, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
      {
        a1 = v27;
        goto LABEL_14;
      }
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v13, v6);
      sub_100061BE8(v31, &v33);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
        swift_bridgeObjectRelease(v27);
        return swift_bridgeObjectRelease(v34);
      }
      v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v17, v6);
      v21 = v33;
      if (v33)
      {
        v32 = 0;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v23 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v22 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v23 >= v22 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
        v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
        specialized Array._endMutation()(v18);
        v4 = v32;
        v17 = v28;
      }
      v15 += v29;
      --v14;
    }
    while (v14);
    a1 = v27;
    v19(v13, 1, 1, v6);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain(a1);
    v24(v13, 1, 1, v6);
  }
LABEL_14:
  swift_bridgeObjectRelease(a1);
  return v34;
}

uint64_t sub_100063B28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  void (*v53)(char *, unint64_t, uint64_t);
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  _QWORD *v58;

  v47 = a2;
  v3 = sub_100007D40(&qword_1000ECC88);
  v5 = __chkstk_darwin(v3, v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  v10 = (char *)&v43 - v9;
  v13 = type metadata accessor for IndexPath(0, v11, v12);
  v14 = *(_QWORD *)(v13 - 8);
  v16 = __chkstk_darwin(v13, v15);
  v48 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16, v18);
  v52 = (char *)&v43 - v20;
  result = __chkstk_darwin(v19, v21);
  v56 = (char *)&v43 - v23;
  v58 = _swiftEmptyArrayStorage;
  v46 = *(_QWORD *)(a1 + 16);
  if (v46)
  {
    v24 = 0;
    v44 = v10;
    v45 = a1;
    while (v24 < *(_QWORD *)(a1 + 16))
    {
      v26 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v27 = *(_QWORD *)(v14 + 72);
      v53 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
      v54 = v27;
      v53(v10, a1 + v26 + v27 * v24, v13);
      v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v55(v10, 0, 1, v13);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      if (v28(v10, 1, v13) == 1)
        goto LABEL_22;
      v51 = v24;
      v57 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v57(v56, v10, v13);
      v29 = *(_QWORD *)(v47 + 24);
      v30 = *(_QWORD *)(v29 + 16);
      v49 = v26;
      v50 = v29;
      if (v30)
      {
        v31 = v29 + v26;
        swift_bridgeObjectRetain(v29);
        while (1)
        {
          v53(v7, v31, v13);
          v55(v7, 0, 1, v13);
          if (v28(v7, 1, v13) == 1)
            break;
          v32 = v52;
          v33 = ((uint64_t (*)(char *, char *, uint64_t))v57)(v52, v7, v13);
          v36 = sub_100020EC8(v33, v34, v35);
          v37 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v56, v13, v36);
          v38 = v14;
          v39 = *(void (**)(char *, uint64_t))(v14 + 8);
          v39(v32, v13);
          if ((v37 & 1) != 0)
          {
            swift_bridgeObjectRelease(v50);
            result = ((uint64_t (*)(char *, uint64_t))v39)(v56, v13);
            v10 = v44;
            v14 = v38;
            v25 = v51;
            goto LABEL_4;
          }
          v31 += v54;
          --v30;
          v14 = v38;
          if (!v30)
            goto LABEL_14;
        }
      }
      else
      {
        swift_bridgeObjectRetain(v29);
LABEL_14:
        v55(v7, 1, 1, v13);
      }
      swift_bridgeObjectRelease(v50);
      v57(v48, v56, v13);
      v40 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native(v58) & 1) == 0)
      {
        sub_10009CAA0(0, v40[2] + 1, 1);
        v40 = v58;
      }
      v10 = v44;
      v25 = v51;
      v42 = v40[2];
      v41 = v40[3];
      if (v42 >= v41 >> 1)
      {
        sub_10009CAA0(v41 > 1, v42 + 1, 1);
        v40 = v58;
      }
      v40[2] = v42 + 1;
      result = ((uint64_t (*)(char *, char *, uint64_t))v57)((char *)v40 + v49 + v42 * v54, v48, v13);
      v58 = v40;
LABEL_4:
      v24 = v25 + 1;
      a1 = v45;
      if (v24 == v46)
        goto LABEL_21;
    }
    __break(1u);
  }
  else
  {
    v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
LABEL_21:
    v55(v10, 1, 1, v13);
LABEL_22:
    swift_bridgeObjectRelease(a1);
    sub_100020F10((uint64_t)v10);
    return (uint64_t)v58;
  }
  return result;
}

unint64_t sub_100063EF0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D5E40, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

id sub_100063F38(uint64_t a1)
{
  unint64_t v2;
  char v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSString v30;
  Class isa;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSArray v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  Class v57;
  uint64_t countAndFlagsBits;
  char v59;
  id v60;
  uint64_t v61;
  Swift::String v62;
  _QWORD v63[3];
  uint64_t v64;
  _BYTE v65[24];
  uint64_t v66;
  unint64_t v67;

  v67 = (unint64_t)_swiftEmptyArrayStorage;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
  v2 = sub_10004F068(0x737574617473, 0xE600000000000000);
  if ((v3 & 1) == 0)
    goto LABEL_6;
  sub_100019360(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v63);
  sub_10002B588((uint64_t)v63, (uint64_t)v65);
  if (!v66)
  {
    swift_bridgeObjectRelease(a1);
    sub_100010A98((uint64_t)v65, (uint64_t *)&unk_1000EEB60);
    goto LABEL_7;
  }
  v4 = &type metadata for String;
  if ((swift_dynamicCast(&v62, v65, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0
    || (v5 = sub_100063EF0(v62), v5 == 5))
  {
LABEL_6:
    swift_bridgeObjectRelease(a1);
LABEL_7:
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v6 = qword_1000F8A90;
    v7 = static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)("BusinessChat: Auth Response did not contain TransactionResult", 61, 2, &_mh_execute_header, v6, v7, _swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return 0;
  }
  v10 = v5;
  if (*(_QWORD *)(a1 + 16) && (v11 = sub_10004F068(0x73726F727265, 0xE600000000000000), (v12 & 1) != 0))
  {
    sub_100019360(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v63);
  }
  else
  {
    memset(v63, 0, sizeof(v63));
    v64 = 1;
  }
  swift_bridgeObjectRelease(a1);
  if (v64 == 1)
  {
    v13 = (uint64_t *)&unk_1000EC480;
    v14 = v63;
LABEL_34:
    v16 = sub_100010A98((uint64_t)v14, v13);
    goto LABEL_35;
  }
  sub_10002B588((uint64_t)v63, (uint64_t)v65);
  if (!v66)
  {
    v13 = (uint64_t *)&unk_1000EEB60;
    v14 = v65;
    goto LABEL_34;
  }
  v15 = sub_100007D40(&qword_1000ED040);
  v16 = swift_dynamicCast(&v62, v65, (char *)&type metadata for Any + 8, v15, 6);
  if ((v16 & 1) == 0)
  {
LABEL_35:
    if (v10)
    {
      if (qword_1000EBCB8 != -1)
        swift_once(&qword_1000EBCB8, sub_100082798);
      v48 = qword_1000F8A90;
      v49 = static os_log_type_t.error.getter();
      os_log(_:dso:log:type:_:)("Transaction was denied", 22, 2, &_mh_execute_header, v48, v49, _swiftEmptyArrayStorage);
      v50 = objc_allocWithZone((Class)PKPaymentAuthorizationResult);
      sub_100007D40(&qword_1000F07D0);
      v51.super.isa = Array._bridgeToObjectiveC()().super.isa;
      v52 = objc_msgSend(v50, "initWithStatus:errors:", 1, v51.super.isa);
    }
    else
    {
      if (qword_1000EBCB8 != -1)
        v16 = swift_once(&qword_1000EBCB8, sub_100082798);
      v53 = qword_1000F8A90;
      v54 = static os_log_type_t.default.getter(v16);
      os_log(_:dso:log:type:_:)("Transaction was approved", 24, 2, &_mh_execute_header, v53, v54, _swiftEmptyArrayStorage);
      v55 = objc_allocWithZone((Class)PKPaymentAuthorizationResult);
      sub_100007D40(&qword_1000F07D0);
      v51.super.isa = Array._bridgeToObjectiveC()().super.isa;
      v52 = objc_msgSend(v55, "initWithStatus:errors:", 0, v51.super.isa);
    }
    v8 = v52;

    return v8;
  }
  v59 = v10;
  v17 = *(_QWORD *)(v62._countAndFlagsBits + 16);
  countAndFlagsBits = v62._countAndFlagsBits;
  if (v17)
  {
    v18 = (_QWORD *)(v62._countAndFlagsBits + 32);
    v19 = _swiftEmptyArrayStorage;
    do
    {
      v21 = swift_bridgeObjectRetain(*v18);
      v22 = sub_100022E54(v21);
      if (v22)
      {
        v23 = v22;
        v61 = v17;
        static String._unconditionallyBridgeFromObjectiveC(_:)(PKPaymentErrorDomain);
        v25 = v24;
        v26 = qword_1000B2638[*(char *)(v23 + 16)];
        sub_100022364();
        v28 = v27;
        v29 = objc_allocWithZone((Class)NSError);
        v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v25);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v28);
        v32 = objc_msgSend(v29, "initWithDomain:code:userInfo:", v30, v26, isa, countAndFlagsBits);

        v34 = v4;
        if (qword_1000EBCB8 != -1)
          v33 = swift_once(&qword_1000EBCB8, sub_100082798);
        v35 = qword_1000F8A90;
        v36 = static os_log_type_t.default.getter(v33);
        v37 = sub_100007D40((uint64_t *)&unk_1000ECE50);
        v38 = swift_allocObject(v37, 72, 7);
        *(_OWORD *)(v38 + 16) = xmmword_1000AF070;
        v60 = v32;
        v39 = objc_msgSend(v32, "debugDescription");
        v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v42 = v41;

        *(_QWORD *)(v38 + 56) = v34;
        *(_QWORD *)(v38 + 64) = sub_100009084();
        *(_QWORD *)(v38 + 32) = v40;
        *(_QWORD *)(v38 + 40) = v42;
        os_log(_:dso:log:type:_:)("BusinessChat: ApplePayError = %@", 32, 2, &_mh_execute_header, v35, v36, v38);
        swift_bridgeObjectRelease(v38);
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
          v19 = sub_100038890(0, v19[2] + 1, 1, v19);
        v44 = v19[2];
        v43 = v19[3];
        v4 = v34;
        if (v44 >= v43 >> 1)
          v19 = sub_100038890((_QWORD *)(v43 > 1), v44 + 1, 1, v19);
        v19[2] = v44 + 1;
        v19[v44 + 4] = v60;
        v45 = swift_retain(v23);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
        v47 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v46 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v47 >= v46 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
        v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v23);
        specialized Array._endMutation()(v20);
        swift_release(v23);
        v17 = v61;
      }
      ++v18;
      --v17;
    }
    while (v17);
  }
  else
  {
    v19 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(countAndFlagsBits);
  v56 = objc_allocWithZone((Class)PKPaymentAuthorizationResult);
  swift_bridgeObjectRetain(v19);
  sub_100007D40(&qword_1000F07D0);
  v57 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v19);
  v8 = objc_msgSend(v56, "initWithStatus:errors:", v59 != 0, v57);

  return v8;
}

id sub_1000645EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  double v10;
  unint64_t v11;
  char v12;
  double v13;
  void *ObjCClassFromMetadata;
  NSString v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  unint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;

  v2 = v1;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_25;
  v4 = sub_10004F068(0x656C746974, 0xE500000000000000);
  if ((v5 & 1) == 0)
    goto LABEL_25;
  sub_100019360(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)v34);
  sub_10002B588((uint64_t)v34, (uint64_t)v36);
  if (!v37)
  {
    swift_bridgeObjectRelease(a1);
    v22 = sub_100010A98((uint64_t)v36, (uint64_t *)&unk_1000EEB60);
LABEL_26:
    if (qword_1000EBCB8 != -1)
      v22 = swift_once(&qword_1000EBCB8, sub_100082798);
    v26 = qword_1000F8A90;
    v27 = static os_log_type_t.error.getter(v22);
    os_log(_:dso:log:type:_:)("Unable to create location: title key is missing", 47, 2, &_mh_execute_header, v26, v27, _swiftEmptyArrayStorage);
    return 0;
  }
  if ((swift_dynamicCast(&v32, v36, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_25:
    v22 = swift_bridgeObjectRelease(a1);
    goto LABEL_26;
  }
  v6 = v33;
  v7 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0)
    v7 = *(_QWORD *)&v32 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    swift_bridgeObjectRelease(v33);
    goto LABEL_25;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_20;
  v8 = sub_10004F068(0x656475746974616CLL, 0xE800000000000000);
  if ((v9 & 1) == 0)
    goto LABEL_20;
  sub_100019360(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)v34);
  sub_10002B588((uint64_t)v34, (uint64_t)v36);
  if (!v37)
  {
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(a1);
    v23 = sub_100010A98((uint64_t)v36, (uint64_t *)&unk_1000EEB60);
    goto LABEL_21;
  }
  if ((swift_dynamicCast(&v32, v36, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) == 0)
  {
LABEL_20:
    swift_bridgeObjectRelease(v6);
    v23 = swift_bridgeObjectRelease(a1);
LABEL_21:
    if (qword_1000EBCB8 != -1)
      v23 = swift_once(&qword_1000EBCB8, sub_100082798);
    v24 = qword_1000F8A90;
    v25 = static os_log_type_t.error.getter(v23);
    os_log(_:dso:log:type:_:)("Unable to create location: latitude key is missing", 50, 2, &_mh_execute_header, v24, v25, _swiftEmptyArrayStorage);
    return 0;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_32;
  v10 = v32;
  v11 = sub_10004F068(0x64757469676E6F6CLL, 0xE900000000000065);
  if ((v12 & 1) == 0)
    goto LABEL_32;
  sub_100019360(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34);
  sub_10002B588((uint64_t)v34, (uint64_t)v36);
  if (!v37)
  {
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(a1);
    v29 = sub_100010A98((uint64_t)v36, (uint64_t *)&unk_1000EEB60);
    goto LABEL_33;
  }
  if ((swift_dynamicCast(&v32, v36, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease(v6);
    v29 = swift_bridgeObjectRelease(a1);
LABEL_33:
    if (qword_1000EBCB8 != -1)
      v29 = swift_once(&qword_1000EBCB8, sub_100082798);
    v30 = qword_1000F8A90;
    v31 = static os_log_type_t.error.getter(v29);
    os_log(_:dso:log:type:_:)("Unable to create location: longitude key is missing", 51, 2, &_mh_execute_header, v30, v31, _swiftEmptyArrayStorage);
    return 0;
  }
  v13 = v32;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v2);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v16 = objc_msgSend(ObjCClassFromMetadata, "locationWithTitle:", v15);

  v17 = objc_allocWithZone((Class)CLLocation);
  v18 = v16;
  v19 = objc_msgSend(v17, "initWithLatitude:longitude:", v10, v13);
  objc_msgSend(v18, "setGeoLocation:", v19);
  if (*(_QWORD *)(a1 + 16) && (v20 = sub_10004F068(0x737569646172, 0xE600000000000000), (v21 & 1) != 0))
  {
    sub_100019360(*(_QWORD *)(a1 + 56) + 32 * v20, (uint64_t)v34);
  }
  else
  {
    memset(v34, 0, sizeof(v34));
    v35 = 1;
  }
  swift_bridgeObjectRelease(a1);
  if (v35 == 1)
  {

    sub_100010A98((uint64_t)v34, &qword_1000EC480);
  }
  else
  {
    sub_10002B588((uint64_t)v34, (uint64_t)v36);
    if (v37)
    {
      if ((swift_dynamicCast(&v32, v36, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
        objc_msgSend(v18, "setRadius:", v32);

    }
    else
    {

      sub_100010A98((uint64_t)v36, (uint64_t *)&unk_1000EEB60);
    }
  }
  return v18;
}

void *sub_100064AA8()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  char v21;
  void *v23;
  void *v24;
  void *v25;
  _OWORD v26[2];
  __int128 v27;
  void *v28;
  void *v29;

  v1 = v0;
  v29 = &_swiftEmptyDictionarySingleton;
  v2 = objc_msgSend(v0, "title");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

    v28 = &type metadata for String;
    *(_QWORD *)&v27 = v4;
    *((_QWORD *)&v27 + 1) = v6;
    sub_100009CF0(&v27, v26);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v23 = &_swiftEmptyDictionarySingleton;
    sub_10003A658(v26, 0x656C746974, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
    v29 = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0x656C746974, 0xE500000000000000, &v27);
    sub_100010A98((uint64_t)&v27, (uint64_t *)&unk_1000EEB60);
  }
  v8 = objc_msgSend(v0, "geoLocation", v23);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "coordinate");
    v11 = v10;

    v28 = &type metadata for Double;
    *(_QWORD *)&v27 = v11;
    sub_100009CF0(&v27, v26);
    v12 = v29;
    v13 = swift_isUniquelyReferenced_nonNull_native(v29);
    v24 = v12;
    sub_10003A658(v26, 0x656475746974616CLL, 0xE800000000000000, v13);
    v29 = v12;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0x656475746974616CLL, 0xE800000000000000, &v27);
    sub_100010A98((uint64_t)&v27, (uint64_t *)&unk_1000EEB60);
  }
  v14 = objc_msgSend(v1, "geoLocation", v24);
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "coordinate");
    v17 = v16;

    v28 = &type metadata for Double;
    *(_QWORD *)&v27 = v17;
    sub_100009CF0(&v27, v26);
    v18 = v29;
    v19 = swift_isUniquelyReferenced_nonNull_native(v29);
    v25 = v18;
    sub_10003A658(v26, 0x64757469676E6F6CLL, 0xE900000000000065, v19);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_100039FE8(0x64757469676E6F6CLL, 0xE900000000000065, &v27);
    sub_100010A98((uint64_t)&v27, (uint64_t *)&unk_1000EEB60);
    v18 = v29;
  }
  objc_msgSend(v1, "radius", v25);
  v28 = &type metadata for Double;
  *(_QWORD *)&v27 = v20;
  sub_100009CF0(&v27, v26);
  v21 = swift_isUniquelyReferenced_nonNull_native(v18);
  sub_10003A658(v26, 0x737569646172, 0xE600000000000000, v21);
  swift_bridgeObjectRelease(0x8000000000000000);
  return v18;
}

uint64_t EKEventStore.events(fromDate:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD aBlock[5];
  uint64_t v48;

  v40 = a2;
  v41 = a3;
  v37 = a1;
  v42 = type metadata accessor for DispatchWorkItemFlags(0);
  v45 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42, v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10, v13);
  v14 = type metadata accessor for DispatchQoS.QoSClass(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000090C8(0, (unint64_t *)&qword_1000EBD00, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, enum case for DispatchQoS.QoSClass.default(_:), v14);
  v38 = static OS_dispatch_queue.global(qos:)(v18);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v37, v10);
  v19 = *(unsigned __int8 *)(v11 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1000D9478, v22 + 16, v19 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v23 + v20, (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v25 = v39;
  v24 = v40;
  *(_QWORD *)(v23 + v21) = v39;
  v26 = (_QWORD *)(v23 + v22);
  v27 = v41;
  *v26 = v24;
  v26[1] = v27;
  aBlock[4] = sub_100065580;
  v48 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100025AB0;
  aBlock[3] = &unk_1000D9490;
  v28 = _Block_copy(aBlock);
  v29 = v25;
  swift_retain(v27);
  static DispatchQoS.unspecified.getter(v30);
  v46 = _swiftEmptyArrayStorage;
  v31 = sub_100041F44();
  v32 = sub_100007D40((uint64_t *)&unk_1000EEBA0);
  v33 = sub_100041F8C();
  v34 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v32, v33, v42, v31);
  v35 = (void *)v38;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v34);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v44);
  return swift_release(v48);
}

uint64_t sub_10006507C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  Class isa;
  uint64_t v20;
  uint64_t v21;
  Class v22;
  Class v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t aBlock[5];
  _QWORD *v54;

  v46 = a3;
  v47 = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v50 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Date(0);
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  v16 = __chkstk_darwin(v14, v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.addingTimeInterval(_:)(v16, 86400.0);
  isa = (Class)objc_msgSend(a2, "calendarsForEntityType:", 0);
  if (!isa)
  {
    v20 = sub_1000090C8(0, &qword_1000EE980, EKCalendar_ptr);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v20);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v21);
  }
  v22 = Date._bridgeToObjectiveC()().super.isa;
  v23 = Date._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(a2, "predicateForEventsWithStartDate:endDate:calendars:", v22, v23, isa);

  v25 = objc_msgSend(a2, "eventsMatchingPredicate:", v24);
  v26 = sub_1000090C8(0, &qword_1000EE988, EKEvent_ptr);
  v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

  if (v27 < 0 || (v27 & 0x4000000000000000) != 0)
  {
    v44 = swift_bridgeObjectRetain(v27);
    v28 = (uint64_t)sub_1000A2C6C(v44);
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v28 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
  }
  aBlock[0] = v28;
  sub_1000655E8(aBlock);
  v29 = swift_bridgeObjectRelease(v27);
  v30 = aBlock[0];
  if (qword_1000EBCB8 != -1)
    v29 = swift_once(&qword_1000EBCB8, sub_100082798);
  v52 = v6;
  static os_log_type_t.default.getter(v29);
  v31 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v32 = swift_allocObject(v31, 72, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1000AF070;
  if (v30 < 0 || (v30 & 0x4000000000000000) != 0)
  {
    v45 = swift_bridgeObjectRetain(v30);
    v33 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_release(v30);
  }
  else
  {
    v33 = *(_QWORD *)(v30 + 16);
  }
  *(_QWORD *)(v32 + 56) = &type metadata for Int;
  *(_QWORD *)(v32 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v32 + 32) = v33;
  os_log(_:dso:log:type:_:)("Events found %d in calendar", v46);
  swift_bridgeObjectRelease(v32);
  sub_1000090C8(0, (unint64_t *)&qword_1000EBD00, OS_dispatch_queue_ptr);
  v34 = (void *)static OS_dispatch_queue.main.getter();
  v35 = (_QWORD *)swift_allocObject(&unk_1000D94C8, 40, 7);
  v36 = v47;
  v35[2] = v46;
  v35[3] = v36;
  v35[4] = v30;
  aBlock[4] = (uint64_t)sub_10006568C;
  v54 = v35;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100025AB0;
  aBlock[3] = (uint64_t)&unk_1000D94E0;
  v37 = _Block_copy(aBlock);
  v38 = v54;
  swift_retain(v36);
  v39 = swift_release(v38);
  static DispatchQoS.unspecified.getter(v39);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v40 = sub_100041F44();
  v41 = sub_100007D40((uint64_t *)&unk_1000EEBA0);
  v42 = sub_100041F8C();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v41, v42, v5, v40);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v37);
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v18, v49);
}

uint64_t sub_1000654F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_100065580()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10006507C(v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1000655D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000655E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000655E8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1000A62B4(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_1000656B4(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

uint64_t sub_100065660()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10006568C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

void sub_1000656B4(uint64_t *a1)
{
  uint64_t v1;
  void (*v2)(char *, char *, unint64_t);
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  Swift::Int v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  char *v41;
  id v42;
  id v43;
  void *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  unsigned int (*v48)(char *, uint64_t, unint64_t);
  id v49;
  id v50;
  void *v51;
  char *v52;
  char *v53;
  void (*v54)(int64_t, unint64_t);
  id *v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  char *v60;
  char *v61;
  id v62;
  void *v63;
  char *v64;
  char *v65;
  unsigned int (*v66)(char *, uint64_t, unint64_t);
  _BOOL4 v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t *v72;
  char *v73;
  char *v74;
  uint64_t *v75;
  uint64_t v76;
  Swift::Int v77;
  void **v78;
  char *v79;
  void *v80;
  char *v81;
  void *v82;
  id v83;
  id v84;
  void *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unsigned int (*v89)(char *, uint64_t, unint64_t);
  id v90;
  void *v91;
  unint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void *v98;
  char *v99;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  BOOL v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  BOOL v126;
  uint64_t v127;
  char v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  BOOL v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  Swift::Int v160;
  char *v161;
  char *v162;
  char *v163;
  void (*v164)(char *, unint64_t);
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  void **v169;
  char *v170;
  void **v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  id v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;

  v5 = type metadata accessor for Date(0);
  v178 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  v179 = (char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007D40(&qword_1000ED070);
  v10 = __chkstk_darwin(v8, v9);
  v173 = (char *)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10, v12);
  v177 = (char *)&v157 - v14;
  v16 = __chkstk_darwin(v13, v15);
  v165 = (char *)&v157 - v17;
  v19 = __chkstk_darwin(v16, v18);
  v170 = (char *)&v157 - v20;
  v22 = __chkstk_darwin(v19, v21);
  v24 = (int64_t)&v157 - v23;
  __chkstk_darwin(v22, v25);
  v163 = (char *)&v157 - v26;
  v27 = a1[1];
  v28 = _minimumMergeRunLength(_:)(v27);
  if (v28 >= v27)
  {
    if (v27 < 0)
      goto LABEL_147;
    if (v27)
      sub_100066350(0, (char *)v27, (char *)1, a1);
    return;
  }
  if (v27 >= 0)
    v29 = v27;
  else
    v29 = v27 + 1;
  if (v27 < -1)
    goto LABEL_167;
  v160 = v28;
  v172 = v1;
  v157 = a1;
  if (v27 < 2)
  {
    v34 = (char *)_swiftEmptyArrayStorage;
    v180 = (uint64_t)_swiftEmptyArrayStorage;
    v171 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v27 != 1)
    {
      v37 = _swiftEmptyArrayStorage[2];
LABEL_110:
      if (v37 >= 2)
      {
        v151 = *v157;
        do
        {
          v5 = v37 - 2;
          if (v37 < 2)
            goto LABEL_142;
          if (!v151)
            goto LABEL_162;
          v145 = v34;
          v24 = *(_QWORD *)&v34[16 * v5 + 32];
          v152 = *(_QWORD *)&v34[16 * v37 + 24];
          v153 = v172;
          sub_100066644((void **)(v151 + 8 * v24), (void **)(v151 + 8 * *(_QWORD *)&v34[16 * v37 + 16]), (void **)(v151 + 8 * v152), v171);
          v172 = v153;
          if (v153)
            goto LABEL_122;
          if (v152 < v24)
            goto LABEL_143;
          if ((swift_isUniquelyReferenced_nonNull_native(v145) & 1) == 0)
            v145 = sub_1000A4308((uint64_t)v145);
          if (v5 >= *((_QWORD *)v145 + 2))
            goto LABEL_144;
          v154 = &v145[16 * v5 + 32];
          *(_QWORD *)v154 = v24;
          *((_QWORD *)v154 + 1) = v152;
          v5 = *((_QWORD *)v145 + 2);
          if (v37 > v5)
            goto LABEL_145;
          v24 = v5 - 1;
          memmove(&v145[16 * v37 + 16], &v145[16 * v37 + 32], 16 * (v5 - v37));
          v34 = v145;
          *((_QWORD *)v145 + 2) = v5 - 1;
          v37 = v5 - 1;
        }
        while (v5 > 2);
      }
      v155 = v34;
LABEL_124:
      v156 = swift_bridgeObjectRelease(v155);
      *(_QWORD *)((v180 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v156);
      swift_bridgeObjectRelease(v180);
      return;
    }
  }
  else
  {
    v30 = a1;
    v31 = v29 >> 1;
    v32 = sub_1000090C8(0, &qword_1000EE988, EKEvent_ptr);
    v33 = static Array._allocateBufferUninitialized(minimumCapacity:)(v31, v32);
    *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) = v31;
    a1 = v30;
    v171 = (void **)((v33 & 0xFFFFFFFFFFFFFF8) + 32);
    v180 = v33;
  }
  v35 = 0;
  v36 = *a1;
  v159 = *a1 + 16;
  v158 = v36 - 8;
  v34 = (char *)_swiftEmptyArrayStorage;
  v161 = (char *)v24;
  v167 = (char *)v27;
  v174 = v36;
  while (1)
  {
    v38 = v35;
    v39 = v35 + 1;
    v168 = v35;
    if ((uint64_t)(v35 + 1) < v27)
    {
      v162 = v34;
      v40 = *(void **)(v36 + 8 * (_QWORD)v35);
      v41 = (char *)*(id *)(v36 + 8 * (_QWORD)v39);
      v42 = v40;
      v175 = v41;
      v176 = v42;
      v43 = objc_msgSend(v41, "startDate");
      if (!v43)
        goto LABEL_163;
      v44 = v43;
      v45 = v179;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v43);

      v46 = v178;
      v2 = *(void (**)(char *, char *, unint64_t))(v178 + 32);
      v47 = v163;
      v2(v163, v45, v5);
      v3 = *(_QWORD *)(v46 + 56);
      ((void (*)(char *, _QWORD, uint64_t, unint64_t))v3)(v47, 0, 1, v5);
      v48 = *(unsigned int (**)(char *, uint64_t, unint64_t))(v46 + 48);
      if (v48(v47, 1, v5) == 1)
        goto LABEL_164;
      v49 = v176;
      v50 = objc_msgSend(v176, "startDate");
      if (!v50)
        goto LABEL_165;
      v51 = v50;
      v52 = v179;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v50);

      v2((char *)v24, v52, v5);
      ((void (*)(int64_t, _QWORD, uint64_t, unint64_t))v3)(v24, 0, 1, v5);
      if (v48((char *)v24, 1, v5) == 1)
        goto LABEL_166;
      v53 = v163;
      v166 = Date.compare(_:)(v24);
      v54 = *(void (**)(int64_t, unint64_t))(v178 + 8);
      v54(v24, v5);
      v164 = (void (*)(char *, unint64_t))v54;
      v54((int64_t)v53, v5);

      v38 = v168;
      v39 = v168 + 2;
      if ((uint64_t)(v168 + 2) < v27)
      {
        v55 = (id *)(v159 + 8 * (_QWORD)v168);
        while (1)
        {
          v175 = v39;
          v56 = *(v55 - 1);
          v57 = *v55;
          v24 = v56;
          v58 = objc_msgSend(v57, "startDate");
          if (!v58)
            goto LABEL_157;
          v59 = v58;
          v60 = v179;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v58);

          v61 = v170;
          v2(v170, v60, v5);
          ((void (*)(char *, _QWORD, uint64_t, unint64_t))v3)(v61, 0, 1, v5);
          if (v48(v61, 1, v5) == 1)
            goto LABEL_158;
          v176 = v57;
          v169 = (void **)v24;
          v62 = objc_msgSend((id)v24, "startDate");
          if (!v62)
            goto LABEL_159;
          v63 = v62;
          v64 = v179;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v62);

          v65 = v165;
          v24 = (int64_t)v2;
          v2(v165, v64, v5);
          v2 = (void (*)(char *, char *, unint64_t))v3;
          ((void (*)(char *, _QWORD, uint64_t, unint64_t))v3)(v65, 0, 1, v5);
          v66 = v48;
          if (v48(v65, 1, v5) == 1)
            goto LABEL_160;
          v67 = v166 == -1;
          v68 = v65;
          v69 = v170;
          v70 = Date.compare(_:)(v65);
          v71 = v68;
          v3 = (uint64_t)v164;
          v164(v71, v5);
          ((void (*)(char *, unint64_t))v3)(v69, v5);

          if (v67 == (v70 != -1))
            break;
          v39 = v175 + 1;
          ++v55;
          v27 = (Swift::Int)v167;
          v3 = (uint64_t)v2;
          v2 = (void (*)(char *, char *, unint64_t))v24;
          v48 = v66;
          if (v167 == v175 + 1)
          {
            v39 = v167;
            goto LABEL_30;
          }
        }
        v27 = (Swift::Int)v167;
        v39 = v175;
LABEL_30:
        v38 = v168;
      }
      v34 = v162;
      v36 = v174;
      if (v166 == -1)
      {
        if ((uint64_t)v39 < (uint64_t)v38)
          goto LABEL_150;
        if ((uint64_t)v38 < (uint64_t)v39)
        {
          v72 = (uint64_t *)(v158 + 8 * (_QWORD)v39);
          v73 = v39;
          v74 = v38;
          v75 = (uint64_t *)(v174 + 8 * (_QWORD)v38);
          do
          {
            if (v74 != --v73)
            {
              if (!v36)
                goto LABEL_161;
              v76 = *v75;
              *v75 = *v72;
              *v72 = v76;
            }
            ++v74;
            --v72;
            ++v75;
          }
          while ((uint64_t)v74 < (uint64_t)v73);
        }
      }
    }
    if ((uint64_t)v39 < v27)
    {
      if (__OFSUB__(v39, v38))
        goto LABEL_146;
      if (v39 - v38 < v160)
        break;
    }
LABEL_61:
    if ((uint64_t)v39 < (uint64_t)v38)
      goto LABEL_141;
    v99 = v34;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
    v175 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v34 = v99;
    else
      v34 = sub_1000A4058(0, *((_QWORD *)v99 + 2) + 1, 1, v99);
    v102 = *((_QWORD *)v34 + 2);
    v101 = *((_QWORD *)v34 + 3);
    v37 = v102 + 1;
    v36 = v174;
    if (v102 >= v101 >> 1)
    {
      v150 = sub_1000A4058((char *)(v101 > 1), v102 + 1, 1, v34);
      v36 = v174;
      v34 = v150;
    }
    *((_QWORD *)v34 + 2) = v37;
    v24 = (int64_t)(v34 + 32);
    v103 = &v34[16 * v102 + 32];
    v104 = v175;
    *(_QWORD *)v103 = v168;
    *((_QWORD *)v103 + 1) = v104;
    if (v102)
    {
      while (1)
      {
        v105 = v37 - 1;
        if (v37 >= 4)
        {
          v110 = (char *)(v24 + 16 * v37);
          v111 = *((_QWORD *)v110 - 8);
          v112 = *((_QWORD *)v110 - 7);
          v116 = __OFSUB__(v112, v111);
          v113 = v112 - v111;
          if (v116)
            goto LABEL_130;
          v115 = *((_QWORD *)v110 - 6);
          v114 = *((_QWORD *)v110 - 5);
          v116 = __OFSUB__(v114, v115);
          v108 = v114 - v115;
          v109 = v116;
          if (v116)
            goto LABEL_131;
          v117 = v37 - 2;
          v118 = (char *)(v24 + 16 * (v37 - 2));
          v120 = *(_QWORD *)v118;
          v119 = *((_QWORD *)v118 + 1);
          v116 = __OFSUB__(v119, v120);
          v121 = v119 - v120;
          if (v116)
            goto LABEL_133;
          v116 = __OFADD__(v108, v121);
          v122 = v108 + v121;
          if (v116)
            goto LABEL_136;
          if (v122 >= v113)
          {
            v140 = (char *)(v24 + 16 * v105);
            v142 = *(_QWORD *)v140;
            v141 = *((_QWORD *)v140 + 1);
            v116 = __OFSUB__(v141, v142);
            v143 = v141 - v142;
            if (v116)
              goto LABEL_140;
            v133 = v108 < v143;
            goto LABEL_98;
          }
        }
        else
        {
          if (v37 != 3)
          {
            v134 = *((_QWORD *)v34 + 4);
            v135 = *((_QWORD *)v34 + 5);
            v116 = __OFSUB__(v135, v134);
            v127 = v135 - v134;
            v128 = v116;
            goto LABEL_92;
          }
          v107 = *((_QWORD *)v34 + 4);
          v106 = *((_QWORD *)v34 + 5);
          v116 = __OFSUB__(v106, v107);
          v108 = v106 - v107;
          v109 = v116;
        }
        if ((v109 & 1) != 0)
          goto LABEL_132;
        v117 = v37 - 2;
        v123 = (char *)(v24 + 16 * (v37 - 2));
        v125 = *(_QWORD *)v123;
        v124 = *((_QWORD *)v123 + 1);
        v126 = __OFSUB__(v124, v125);
        v127 = v124 - v125;
        v128 = v126;
        if (v126)
          goto LABEL_135;
        v129 = (char *)(v24 + 16 * v105);
        v131 = *(_QWORD *)v129;
        v130 = *((_QWORD *)v129 + 1);
        v116 = __OFSUB__(v130, v131);
        v132 = v130 - v131;
        if (v116)
          goto LABEL_138;
        if (__OFADD__(v127, v132))
          goto LABEL_139;
        if (v127 + v132 >= v108)
        {
          v133 = v108 < v132;
LABEL_98:
          if (v133)
            v105 = v117;
          goto LABEL_100;
        }
LABEL_92:
        if ((v128 & 1) != 0)
          goto LABEL_134;
        v136 = (char *)(v24 + 16 * v105);
        v138 = *(_QWORD *)v136;
        v137 = *((_QWORD *)v136 + 1);
        v116 = __OFSUB__(v137, v138);
        v139 = v137 - v138;
        if (v116)
          goto LABEL_137;
        if (v139 < v127)
          goto LABEL_14;
LABEL_100:
        v144 = v105 - 1;
        if (v105 - 1 >= v37)
        {
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        if (!v36)
          goto LABEL_156;
        v145 = v34;
        v146 = (char *)(v24 + 16 * v144);
        v2 = *(void (**)(char *, char *, unint64_t))v146;
        v147 = (char *)(v24 + 16 * v105);
        v3 = *((_QWORD *)v147 + 1);
        v148 = v172;
        sub_100066644((void **)(v36 + 8 * *(_QWORD *)v146), (void **)(v36 + 8 * *(_QWORD *)v147), (void **)(v36 + 8 * v3), v171);
        v172 = v148;
        if (v148)
        {
LABEL_122:
          v155 = v145;
          goto LABEL_124;
        }
        if (v3 < (uint64_t)v2)
          goto LABEL_127;
        if (v105 > *((_QWORD *)v145 + 2))
          goto LABEL_128;
        *(_QWORD *)v146 = v2;
        *(_QWORD *)(v24 + 16 * v144 + 8) = v3;
        v149 = *((_QWORD *)v145 + 2);
        if (v105 >= v149)
          goto LABEL_129;
        v37 = v149 - 1;
        memmove((void *)(v24 + 16 * v105), v147 + 16, 16 * (v149 - 1 - v105));
        v34 = v145;
        *((_QWORD *)v145 + 2) = v149 - 1;
        v36 = v174;
        if (v149 <= 2)
          goto LABEL_14;
      }
    }
    v37 = 1;
LABEL_14:
    v27 = (Swift::Int)v167;
    v35 = v175;
    v24 = (int64_t)v161;
    if ((uint64_t)v175 >= (uint64_t)v167)
      goto LABEL_110;
  }
  if (__OFADD__(v38, v160))
    goto LABEL_148;
  if ((uint64_t)&v38[v160] >= v27)
    v77 = v27;
  else
    v77 = (Swift::Int)&v38[v160];
  if (v77 >= (uint64_t)v38)
  {
    if (v39 != (char *)v77)
    {
      v162 = v34;
      v78 = (void **)(v158 + 8 * (_QWORD)v39);
      v166 = v77;
      do
      {
        v80 = *(void **)(v36 + 8 * (_QWORD)v39);
        v81 = v38;
        v169 = v78;
        v175 = v39;
        while (1)
        {
          v82 = *v78;
          v83 = v80;
          v24 = v82;
          v176 = v83;
          v84 = objc_msgSend(v83, "startDate");
          if (!v84)
            goto LABEL_151;
          v85 = v84;
          v86 = v179;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v84);

          v88 = v177;
          v87 = v178;
          v3 = *(_QWORD *)(v178 + 32);
          ((void (*)(char *, char *, unint64_t))v3)(v177, v86, v5);
          v2 = *(void (**)(char *, char *, unint64_t))(v87 + 56);
          ((void (*)(char *, _QWORD, uint64_t, unint64_t))v2)(v88, 0, 1, v5);
          v89 = *(unsigned int (**)(char *, uint64_t, unint64_t))(v87 + 48);
          if (v89(v88, 1, v5) == 1)
            goto LABEL_152;
          v90 = objc_msgSend((id)v24, "startDate");
          if (!v90)
            goto LABEL_153;
          v91 = v90;
          v92 = v5;
          v93 = v179;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v90);

          v94 = v173;
          v95 = v93;
          v5 = v92;
          ((void (*)(char *, char *, unint64_t))v3)(v173, v95, v92);
          ((void (*)(char *, _QWORD, uint64_t, unint64_t))v2)(v94, 0, 1, v92);
          if (v89(v94, 1, v92) == 1)
            goto LABEL_154;
          v96 = v94;
          v3 = (uint64_t)v177;
          v97 = Date.compare(_:)(v94);
          v2 = *(void (**)(char *, char *, unint64_t))(v178 + 8);
          ((void (*)(char *, unint64_t))v2)(v96, v5);
          ((void (*)(uint64_t, unint64_t))v2)(v3, v5);

          if (v97 != -1)
            break;
          v36 = v174;
          v79 = v175;
          if (!v174)
            goto LABEL_155;
          v98 = *v78;
          v80 = v78[1];
          *v78 = v80;
          v78[1] = v98;
          --v78;
          if (v79 == ++v81)
            goto LABEL_50;
        }
        v36 = v174;
        v79 = v175;
LABEL_50:
        v39 = v79 + 1;
        v38 = v168;
        v78 = v169 + 1;
      }
      while (v39 != (char *)v166);
      v39 = (char *)v166;
      v34 = v162;
    }
    goto LABEL_61;
  }
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v178 + 56))(v177, 1, 1, v5);
LABEL_152:
  __break(1u);
LABEL_153:
  ((void (*)(char *, uint64_t, uint64_t, unint64_t))v2)(v173, 1, 1, v5);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  ((void (*)(char *, uint64_t, uint64_t, unint64_t))v3)(v170, 1, 1, v5);
LABEL_158:
  __break(1u);
LABEL_159:
  ((void (*)(char *, uint64_t, uint64_t, unint64_t))v3)(v165, 1, 1, v5);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v178 + 56))(v163, 1, 1, v5);
LABEL_164:
  __break(1u);
LABEL_165:
  ((void (*)(int64_t, uint64_t, uint64_t, unint64_t))v3)(v24, 1, 1, v5);
LABEL_166:
  __break(1u);
LABEL_167:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100066350(uint64_t a1, char *a2, char *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  id v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  char *v45;
  char *v46;
  uint64_t v47;
  id v48;

  v40 = a1;
  v7 = type metadata accessor for Date(0);
  v47 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  v46 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007D40(&qword_1000ED070);
  v12 = __chkstk_darwin(v10, v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  v45 = (char *)&v38 - v16;
  v39 = a2;
  if (a3 != a2)
  {
    v42 = *a4;
    v17 = v42 + 8 * (_QWORD)a3 - 8;
LABEL_5:
    v18 = *(void **)(v42 + 8 * (_QWORD)a3);
    v19 = v40;
    v41 = v17;
    v43 = a3;
    while (1)
    {
      v20 = *(void **)v17;
      v21 = v18;
      v48 = v20;
      v22 = objc_msgSend(v21, "startDate");
      if (!v22)
        break;
      v23 = v22;
      v44 = v21;
      v24 = v46;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v22);

      v25 = v47;
      v26 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      v27 = v45;
      v26(v45, v24, v7);
      a3 = *(char **)(v25 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))a3)(v27, 0, 1, v7);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v28(v27, 1, v7) == 1)
        goto LABEL_15;
      v29 = objc_msgSend(v48, "startDate");
      if (!v29)
        goto LABEL_16;
      v30 = v29;
      v31 = v7;
      v32 = v46;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v29);

      v33 = v32;
      v7 = v31;
      v26(v14, v33, v31);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))a3)(v14, 0, 1, v31);
      if (v28(v14, 1, v31) == 1)
        goto LABEL_17;
      v34 = v45;
      v35 = Date.compare(_:)(v14);
      v36 = *(void (**)(char *, uint64_t))(v47 + 8);
      v36(v14, v7);
      v36(v34, v7);

      a3 = v43;
      if (v35 == -1)
      {
        if (!v42)
          goto LABEL_18;
        v37 = *(void **)v17;
        v18 = *(void **)(v17 + 8);
        *(_QWORD *)v17 = v18;
        *(_QWORD *)(v17 + 8) = v37;
        v17 -= 8;
        if (a3 != (char *)++v19)
          continue;
      }
      ++a3;
      v17 = v41 + 8;
      if (a3 == v39)
        return;
      goto LABEL_5;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v45, 1, 1, v7);
LABEL_15:
    __break(1u);
LABEL_16:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))a3)(v14, 1, 1, v7);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
}

uint64_t sub_100066644(void **a1, void **a2, void **a3, void **a4)
{
  void (*v4)(char *, uint64_t, uint64_t, uint64_t);
  void (*v5)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  void **v40;
  id v41;
  void *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  void **v48;
  void **v49;
  void **v50;
  void **v51;
  void **v52;
  char **v53;
  void **v54;
  void **v55;
  void *v56;
  id v57;
  const char *v58;
  id v59;
  void *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(void);
  uint64_t v64;
  void **v65;
  unsigned int (*v66)(void **, uint64_t, uint64_t);
  id v67;
  void *v68;
  void **v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void **v73;
  uint64_t v74;
  uint64_t result;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  void **v77;
  id v78;
  char *v79;
  void **v80;
  void **v81;
  uint64_t v82;
  char *v83;
  void **v84;
  void **v85;
  char *v86;
  uint64_t v87;
  void **v88;
  void **v89;
  void **v90;

  v5 = v4;
  v82 = type metadata accessor for Date(0);
  v87 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82, v10);
  v86 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007D40(&qword_1000ED070);
  v14 = __chkstk_darwin(v12, v13);
  v77 = (void **)((char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __chkstk_darwin(v14, v16);
  v81 = (void **)((char *)&v76 - v18);
  v20 = __chkstk_darwin(v17, v19);
  v79 = (char *)&v76 - v21;
  __chkstk_darwin(v20, v22);
  v83 = (char *)&v76 - v23;
  v24 = (char *)a2 - (char *)a1;
  v25 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v25 = (char *)a2 - (char *)a1;
  v26 = v25 >> 3;
  v80 = a3;
  v27 = (char *)a3 - (char *)a2;
  v28 = v27 / 8;
  v90 = a1;
  v89 = a4;
  v76 = v4;
  v85 = a1;
  if (v25 >> 3 >= v27 / 8)
  {
    if (v27 < -7)
      goto LABEL_59;
    if (a4 != a2 || &a2[v28] <= a4)
      memmove(a4, a2, 8 * v28);
    v51 = &a4[v28];
    v88 = v51;
    v90 = a2;
    if (v27 < 8 || v85 >= a2)
      goto LABEL_50;
    v52 = v80 - 1;
    v53 = &selRef_layoutMarginsGuide;
    v54 = a2;
    v84 = a4;
    while (1)
    {
      v79 = (char *)v51;
      v80 = a2;
      v55 = v51 - 1;
      v56 = *--v54;
      v57 = *(v51 - 1);
      v83 = v56;
      v58 = v53[266];
      v78 = v57;
      v59 = objc_msgSend(v57, v58);
      if (!v59)
        goto LABEL_55;
      v60 = v59;
      v61 = v86;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v59);

      v62 = v87;
      v63 = *(void (**)(void))(v87 + 32);
      v65 = v81;
      v64 = v82;
      ((void (*)(void **, char *, uint64_t))v63)(v81, v61, v82);
      v26 = *(_QWORD *)(v62 + 56);
      ((void (*)(void **, _QWORD, uint64_t, uint64_t))v26)(v65, 0, 1, v64);
      v66 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v62 + 48);
      if (v66(v65, 1, v64) == 1)
        goto LABEL_56;
      v67 = objc_msgSend(v83, v53[266]);
      if (!v67)
        goto LABEL_57;
      v68 = v67;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v67);

      v69 = v77;
      v70 = v82;
      v63();
      v71 = v70;
      ((void (*)(void **, _QWORD, uint64_t, uint64_t))v26)(v69, 0, 1, v70);
      if (v66(v69, 1, v70) == 1)
        goto LABEL_58;
      v72 = (char *)(v52 + 1);
      v73 = v81;
      v74 = Date.compare(_:)(v69);
      v26 = *(_QWORD *)(v87 + 8);
      ((void (*)(void **, uint64_t))v26)(v69, v71);
      ((void (*)(void **, uint64_t))v26)(v73, v71);

      if (v74 == -1)
        break;
      v88 = v55;
      v54 = v80;
      if (v72 < v79 || v52 >= (void **)v79)
      {
        *v52 = *v55;
        v51 = v55;
        goto LABEL_48;
      }
      v53 = &selRef_layoutMarginsGuide;
      if (v72 != v79)
        *v52 = *v55;
      v51 = v55;
      if (v55 <= v84)
        goto LABEL_50;
LABEL_49:
      --v52;
      a2 = v54;
      if (v54 <= v85)
        goto LABEL_50;
    }
    v51 = (void **)v79;
    if (v72 != (char *)v80 || v52 >= v80)
      *v52 = *v54;
    v90 = v54;
LABEL_48:
    v53 = &selRef_layoutMarginsGuide;
    if (v51 <= v84)
      goto LABEL_50;
    goto LABEL_49;
  }
  if (v24 >= -7)
  {
    v29 = v82;
    if (a4 != a1 || &a1[v26] <= a4)
      memmove(a4, a1, 8 * v26);
    v81 = &a4[v26];
    v88 = v81;
    if (v24 >= 8 && a2 < v80)
    {
      while (1)
      {
        v30 = *a2;
        v84 = a4;
        v31 = *a4;
        v32 = v30;
        v33 = v31;
        v34 = objc_msgSend(v32, "startDate");
        if (!v34)
          break;
        v35 = v34;
        v36 = v86;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v34);

        v37 = v87;
        v26 = *(_QWORD *)(v87 + 32);
        v38 = v83;
        ((void (*)(char *, char *, uint64_t))v26)(v83, v36, v29);
        v5 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
        v5(v38, 0, 1, v29);
        v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
        if (v39(v38, 1, v29) == 1)
          goto LABEL_52;
        v40 = a2;
        v41 = objc_msgSend(v33, "startDate");
        if (!v41)
          goto LABEL_53;
        v42 = v41;
        v43 = v86;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v41);

        v44 = v79;
        ((void (*)(char *, char *, uint64_t))v26)(v79, v43, v29);
        v26 = (uint64_t)v44;
        v5(v44, 0, 1, v29);
        if (v39(v44, 1, v29) == 1)
          goto LABEL_54;
        v45 = v83;
        v46 = Date.compare(_:)(v44);
        v47 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
        v47(v26, v29);
        v47((uint64_t)v45, v29);

        if (v46 == -1)
        {
          v50 = v40 + 1;
          a4 = v84;
          v48 = v85;
          if (v85 < v40 || v85 >= v50 || v85 != v40)
            *v85 = *v40;
        }
        else
        {
          v49 = v84;
          v48 = v85;
          if (v85 != v84)
            *v85 = *v84;
          a4 = v49 + 1;
          v89 = a4;
          v50 = v40;
        }
        v85 = v48 + 1;
        v90 = v48 + 1;
        if (a4 < v81)
        {
          a2 = v50;
          if (v50 < v80)
            continue;
        }
        goto LABEL_50;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v83, 1, 1, v29);
LABEL_52:
      __break(1u);
LABEL_53:
      v5(v79, 1, 1, v29);
LABEL_54:
      __break(1u);
LABEL_55:
      (*(void (**)(void **, uint64_t, uint64_t, uint64_t))(v87 + 56))(v81, 1, 1, v82);
LABEL_56:
      __break(1u);
LABEL_57:
      ((void (*)(void **, uint64_t, uint64_t, uint64_t))v26)(v77, 1, 1, v82);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
LABEL_50:
    sub_1000A4150(&v90, &v89, &v88);
    return 1;
  }
LABEL_59:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

id sub_100066D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  uint64_t v32;
  NSString v33;
  id v34;
  id v35;
  void *v37;
  objc_super v40;

  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItem] = 0;
  v3[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_selectionType] = 0;
  v3[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_showsSeparator] = 1;
  v3[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemSelected] = 0;
  v3[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_accessibilityRoleIsButton] = 0;
  v3[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_isDimmed] = 0;
  v4 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_titleLabel;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v3;
  v7 = objc_msgSend(v5, "init");
  objc_msgSend(v7, "setNumberOfLines:", 0);
  v8 = sub_1000907D4((uint64_t)UIFontTextStyleBody, 0, *(uint64_t *)&UIFontWeightSemibold, 0, 1, 13.0);
  objc_msgSend(v7, "setFont:", v8);

  *(_QWORD *)&v3[v4] = v7;
  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v9, "setNumberOfLines:", 0);
  v37 = (void *)objc_opt_self(UIFontDescriptor);
  v10 = objc_msgSend(v37, "preferredFontDescriptorWithTextStyle:", UIFontTextStyleSubheadline);
  v11 = (void *)objc_opt_self(UIFont);
  v12 = objc_msgSend(v11, "fontWithDescriptor:size:", v10, 11.0);
  v13 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleSubheadline);
  v14 = objc_msgSend(v13, "scaledFontForFont:", v12);

  v15 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_subtitleLabel;
  objc_msgSend(v9, "setFont:", v14);

  *(_QWORD *)&v6[v15] = v9;
  v16 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemImageView;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v17, "setContentMode:", 2);
  v18 = objc_msgSend(v17, "layer");
  objc_msgSend(v18, "setMasksToBounds:", 1);

  *(_QWORD *)&v6[v16] = v17;
  v19 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_horizontalStackView;
  v20 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v20, "setAxis:", 0);
  objc_msgSend(v20, "setAlignment:", 3);
  objc_msgSend(v20, "setDistribution:", 0);
  objc_msgSend(v20, "setSpacing:", 10.0);
  *(_QWORD *)&v6[v19] = v20;
  v21 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_verticalStackView;
  v22 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v22, "setAxis:", 1);
  objc_msgSend(v22, "setAlignment:", 1);
  objc_msgSend(v22, "setDistribution:", 0);
  objc_msgSend(v22, "setSpacing:", 2.0);
  *(_QWORD *)&v6[v21] = v22;
  v23 = objc_msgSend(v37, "preferredFontDescriptorWithTextStyle:", UIFontTextStyleBody);
  v24 = objc_msgSend(v11, "fontWithDescriptor:size:", v23, 13.0);
  v25 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  v26 = objc_msgSend(v25, "scaledFontForFont:", v24);

  v27 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkImageView;
  v28 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v26);
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v29, v28);

  v31 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v30);
  *(_QWORD *)&v6[v27] = v31;
  v32 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkPlacholderView;
  *(_QWORD *)&v6[v32] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell____lazy_storage___separatorView] = 0;

  if (a3)
  {
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v33 = 0;
  }
  v40.receiver = v6;
  v40.super_class = (Class)type metadata accessor for MacListPickerTableViewCell();
  v34 = objc_msgSendSuper2(&v40, "initWithStyle:reuseIdentifier:", a1, v33);

  v35 = v34;
  sub_10006729C();
  sub_1000673D8();
  sub_100067C78();

  return v35;
}

void sub_10006729C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_verticalStackView];
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_titleLabel]);
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_subtitleLabel]);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_horizontalStackView];
  objc_msgSend(v2, "addArrangedSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemImageView]);
  objc_msgSend(v2, "addArrangedSubview:", v1);
  objc_msgSend(v2, "addArrangedSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkImageView]);
  objc_msgSend(v2, "addArrangedSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkPlacholderView]);
  v3 = objc_msgSend(v0, "contentView");
  objc_msgSend(v3, "addSubview:", v2);

  v4 = objc_msgSend(v0, "contentView");
  v5 = sub_100067D08();
  objc_msgSend(v4, "addSubview:", v5);

}

void sub_1000673D8()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  double v30;
  double v31;
  void *v32;
  double v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  double v38;
  void *v39;
  id v40;
  uint64_t v41;
  Class isa;
  id v43;
  id v44;
  id v45;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_horizontalStackView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v4 = swift_allocObject(v3, 96, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1000B2360;
  v5 = objc_msgSend(v2, "topAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "topAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v7, 12.0);
  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v2, "bottomAnchor");
  v10 = objc_msgSend(v1, "contentView");
  v11 = objc_msgSend(v10, "bottomAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v11, -12.0);
  *(_QWORD *)(v4 + 40) = v12;
  v13 = objc_msgSend(v2, "leadingAnchor");
  v14 = objc_msgSend(v1, "contentView");
  v15 = objc_msgSend(v14, "leadingAnchor");

  v16 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v15, 16.0);
  *(_QWORD *)(v4 + 48) = v16;
  v17 = objc_msgSend(v2, "trailingAnchor");
  v18 = objc_msgSend(v1, "contentView");
  v19 = objc_msgSend(v18, "trailingAnchor");

  v20 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v19, -16.0);
  *(_QWORD *)(v4 + 56) = v20;
  v21 = *(void **)&v1[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemImageView];
  v22 = objc_msgSend(v21, "heightAnchor");
  v23 = objc_msgSend(v22, "constraintEqualToConstant:", 48.0);

  *(_QWORD *)(v4 + 64) = v23;
  v24 = objc_msgSend(v21, "widthAnchor");
  v25 = objc_msgSend(v24, "constraintEqualToConstant:", 48.0);

  *(_QWORD *)(v4 + 72) = v25;
  v26 = *(void **)&v1[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkPlacholderView];
  v27 = objc_msgSend(v26, "heightAnchor");
  v28 = *(void **)&v1[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkImageView];
  v29 = objc_msgSend(v28, "image");
  v30 = 0.0;
  v31 = 0.0;
  if (v29)
  {
    v32 = v29;
    objc_msgSend(v29, "size");
    v31 = v33;

  }
  v34 = objc_msgSend(v27, "constraintEqualToConstant:", v31);

  *(_QWORD *)(v4 + 80) = v34;
  v35 = objc_msgSend(v26, "widthAnchor");
  v36 = objc_msgSend(v28, "image");
  if (v36)
  {
    v37 = v36;
    objc_msgSend(v36, "size");
    v30 = v38;

  }
  v39 = (void *)objc_opt_self(NSLayoutConstraint);
  v40 = objc_msgSend(v35, "constraintEqualToConstant:", v30);

  *(_QWORD *)(v4 + 88) = v40;
  specialized Array._endMutation()(v41);
  sub_100011A28();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v39, "activateConstraints:", isa);

  v43 = objc_msgSend(v1, "contentView");
  v44 = *(id *)&v1[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_verticalStackView];
  v45 = v2;
  sub_1000683C4(1, v43, v44, v45, v1, -1.0, 0.0, 0.0);

}

void sub_1000678A0()
{
  char *v0;
  _QWORD *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  NSString v5;
  void *v6;
  uint64_t v7;
  void *v8;
  NSString v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  void *v13;
  NSString v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  double v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD **)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItem];
  if (v1)
  {
    v2 = v0;
    v3 = *(void **)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_titleLabel];
    v4 = v1[6];
    swift_bridgeObjectRetain(v4);
    swift_retain(v1);
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    objc_msgSend(v3, "setText:", v5);

    v6 = (void *)v1[8];
    if (v6)
    {
      v7 = v1[7];
      v8 = *(void **)&v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_subtitleLabel];
      swift_bridgeObjectRetain(v1[8]);
      v9 = String._bridgeToObjectiveC()();
      objc_msgSend(v8, "setText:", v9);

      objc_msgSend(v8, "setHidden:", 0);
      v27 = v1[5];
      v29 = v1[6];
      swift_bridgeObjectRetain(v29);
      v10._countAndFlagsBits = 8250;
      v10._object = (void *)0xE200000000000000;
      String.append(_:)(v10);
      swift_bridgeObjectRetain(v29);
      v11._countAndFlagsBits = v7;
      v11._object = v6;
      String.append(_:)(v11);
      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease(v6);
      v12 = v29;
    }
    else
    {
      v13 = *(void **)&v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_subtitleLabel];
      objc_msgSend(v13, "setText:", 0);
      objc_msgSend(v13, "setHidden:", 1);
      v12 = v1[6];
      swift_bridgeObjectRetain(v12);
    }
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    objc_msgSend(v2, "setAccessibilityLabel:", v14);

    swift_retain(v1);
    v15 = sub_100061330();
    swift_release(v1);
    v16 = *(void **)&v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemImageView];
    if (v15)
    {
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemImageView], "setImage:", v15);
      objc_msgSend(v16, "setHidden:", 0);
      v17 = (void *)v1[11];
      if (v17 && (v18 = objc_msgSend(v17, "imageDescription")) != 0)
      {
        v19 = v18;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v21 = v20;

        v22 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v21);
        objc_msgSend(v16, "setAccessibilityLabel:", v22);

        objc_msgSend(v16, "setIsAccessibilityElement:", 1, v27);
      }
      else
      {
        objc_msgSend(v16, "setAccessibilityLabel:", 0, v27);
        objc_msgSend(v16, "setIsAccessibilityElement:", 0, v28);
      }

    }
    else
    {
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemImageView], "setHidden:", 1);
      objc_msgSend(v16, "setAccessibilityLabel:", 0);
      objc_msgSend(v16, "setIsAccessibilityElement:", 0);
    }
    v23 = sub_100067D08();
    if (!objc_msgSend(v2, "isSelected")
      || (v24 = 0.0, v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_selectionType] != 1))
    {
      v24 = 1.0;
    }
    objc_msgSend(v23, "setAlpha:", v24, v27);

    v25 = *(void **)&v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkImageView];
    if (v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_selectionType] > 1u)
    {
      v26 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemSelected;
      objc_msgSend(v25, "setHidden:", (v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemSelected] & 1) == 0);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkPlacholderView], "setHidden:", v2[v26]);
    }
    else
    {
      objc_msgSend(v25, "setHidden:", 1);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkPlacholderView], "setHidden:", 1);
    }
    objc_msgSend(v2, "setNeedsUpdateConfiguration");
    swift_release(v1);
  }
}

id sub_100067C78()
{
  _BYTE *v0;
  UIAccessibilityTraits *v1;
  UIAccessibilityTraits v2;
  UIAccessibilityTraits v3;
  UIAccessibilityTraits v4;

  if (v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_accessibilityRoleIsButton])
    v1 = &UIAccessibilityTraitButton;
  else
    v1 = &UIAccessibilityTraitStaticText;
  v2 = *v1;
  if (v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_isDimmed] == 1)
  {
    v3 = UIAccessibilityTraitNotEnabled;
    if ((UIAccessibilityTraitNotEnabled & ~v2) == 0)
      v3 = 0;
    v2 |= v3;
  }
  if (v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemSelected] == 1)
  {
    v4 = UIAccessibilityTraitSelected;
    if ((UIAccessibilityTraitSelected & ~v2) == 0)
      v4 = 0;
    v2 |= v4;
  }
  return objc_msgSend(v0, "setAccessibilityTraits:", v2);
}

id sub_100067D08()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business26MacListPickerTableViewCell____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business26MacListPickerTableViewCell____lazy_storage___separatorView);
  }
  else
  {
    v4 = type metadata accessor for SeparatorView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t sub_100067D7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  void *v39;
  id v40;
  void (*v41)(_QWORD *, _QWORD);
  id v42;
  uint64_t (*v43)(_QWORD *, _QWORD);
  uint64_t v44;
  void *v45;
  Class isa;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  void *v49;
  Class v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v56)(char *, uint64_t);
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  void *v69;

  v2 = sub_100007D40(&qword_1000EEA28);
  __chkstk_darwin(v2, v3);
  v62 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60, v5);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIListContentConfiguration(0);
  v61 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8, v9);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  v15 = (char *)&v56 - v14;
  v65 = type metadata accessor for UIBackgroundConfiguration(0);
  v63 = *(_QWORD *)(v65 - 8);
  v17 = __chkstk_darwin(v65, v16);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v20);
  v64 = (char *)&v56 - v21;
  v22 = type metadata accessor for UICellConfigurationState(0);
  __chkstk_darwin(v22, v23);
  v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v26;
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v28 = v27(v25, a1, v22);
  v29 = UICellConfigurationState.isSelected.getter(v28);
  if ((v29 & 1) != 0)
    v29 = UICellConfigurationState.isFocused.setter(1);
  static UIBackgroundConfiguration.listSidebarCell()(v29);
  v68 = v22;
  v69 = &protocol witness table for UICellConfigurationState;
  v30 = (char *)sub_100030FF8(v67);
  v27(v30, (uint64_t)v25, v22);
  UIBackgroundConfiguration.updated(for:)(v67);
  v57 = *(void (**)(char *, uint64_t))(v63 + 8);
  v57(v19, v65);
  v31 = sub_100010C40(v67);
  UIBackgroundConfiguration.cornerRadius.setter(v31, 5.0);
  if (qword_1000EBBF8 != -1)
    swift_once(&qword_1000EBBF8, sub_10002D65C);
  v32 = qword_1000F8978;
  v33 = (id)qword_1000F8978;
  v34 = UIBackgroundConfiguration.backgroundColor.setter(v32);
  v35 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_selectionType;
  if (*(unsigned __int8 *)(v66 + OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_selectionType) <= 1u)
    v34 = UICellConfigurationState.isSelected.getter(v34);
  static UIListContentConfiguration.sidebarCell()(v34);
  v68 = v22;
  v69 = &protocol witness table for UICellConfigurationState;
  v36 = (char *)sub_100030FF8(v67);
  v27(v36, (uint64_t)v25, v22);
  UIListContentConfiguration.updated(for:)(v67);
  v37 = *(void (**)(char *, uint64_t))(v61 + 8);
  v61 = v8;
  v56 = v37;
  v37(v12, v8);
  v38 = sub_100010C40(v67);
  if (*(_BYTE *)(v66 + v35) == 2)
  {
    v39 = (void *)objc_opt_self(UIColor);
    v40 = objc_msgSend(v39, "labelColor");
    v41 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v67);
    UIListContentConfiguration.TextProperties.color.setter(v40);
    v41(v67, 0);
    v42 = objc_msgSend(v39, "labelColor");
    v43 = (uint64_t (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v67);
    UIListContentConfiguration.TextProperties.color.setter(v42);
    v38 = v43(v67, 0);
  }
  v44 = v66;
  v45 = *(void **)(v66 + OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_titleLabel);
  UIListContentConfiguration.textProperties.getter(v38);
  isa = UIListContentConfiguration.TextProperties.resolvedColor()().super.isa;
  v47 = *(void (**)(char *, uint64_t))(v58 + 8);
  v48 = v60;
  v47(v7, v60);
  objc_msgSend(v45, "setTextColor:", isa);

  v49 = *(void **)(v44 + OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_subtitleLabel);
  UIListContentConfiguration.secondaryTextProperties.getter();
  v50 = UIListContentConfiguration.TextProperties.resolvedColor()().super.isa;
  v47(v7, v48);
  objc_msgSend(v49, "setTextColor:", v50);

  v51 = v62;
  v52 = v63;
  v54 = v64;
  v53 = v65;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, v64, v65);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v51, 0, 1, v53);
  UITableViewCell.backgroundConfiguration.setter(v51);
  v56(v15, v61);
  v57(v54, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v25, v22);
}

id sub_1000682CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MacListPickerTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MacListPickerTableViewCell()
{
  return objc_opt_self(_TtC8Business26MacListPickerTableViewCell);
}

void sub_1000683C4(char a1, void *a2, void *a3, void *a4, void *a5, double a6, double a7, double a8)
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  double v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;

  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = sub_100067D08();

  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = v18;
  v21 = sub_100067D08();

  v22 = objc_msgSend(v21, "heightAnchor");
  v23 = objc_msgSend(v20, "traitCollection");
  objc_msgSend(v23, "displayScale");
  v25 = v24;

  if (v25 <= 0.0)
  {
    v26 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v26, "scale");
    v25 = v27;

    if (v25 <= 0.0)
      v25 = 1.0;
  }
  v28 = objc_msgSend(v22, "constraintEqualToConstant:", 1.0 / v25);

  objc_msgSend(v28, "setActive:", 1);
  v29 = v20;
  v30 = sub_100067D08();

  if ((a1 & 1) != 0)
  {
    v31 = objc_msgSend(v30, "bottomAnchor");

    v32 = objc_msgSend(v15, "bottomAnchor");
  }
  else
  {
    v31 = objc_msgSend(v30, "topAnchor");

    v32 = objc_msgSend(v15, "topAnchor");
  }
  v33 = v32;
  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, a6);

  objc_msgSend(v34, "setActive:", 1);
  v35 = v29;
  v36 = sub_100067D08();

  v37 = objc_msgSend(v36, "leadingAnchor");
  v38 = objc_msgSend(v16, "leadingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, a7);

  objc_msgSend(v39, "setActive:", 1);
  v40 = v35;
  v41 = sub_100067D08();

  v42 = objc_msgSend(v41, "trailingAnchor");
  v43 = objc_msgSend(v17, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, -a8);

  objc_msgSend(v44, "setActive:", 1);
}

void sub_100068740()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  NSString v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItem] = 0;
  v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_selectionType] = 0;
  v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_showsSeparator] = 1;
  v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemSelected] = 0;
  v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_accessibilityRoleIsButton] = 0;
  v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_isDimmed] = 0;
  v1 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_titleLabel;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setNumberOfLines:", 0);
  v3 = sub_1000907D4((uint64_t)UIFontTextStyleBody, 0, *(uint64_t *)&UIFontWeightSemibold, 0, 1, 13.0);
  objc_msgSend(v2, "setFont:", v3);

  *(_QWORD *)&v0[v1] = v2;
  v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v4, "setNumberOfLines:", 0);
  v28 = (void *)objc_opt_self(UIFontDescriptor);
  v5 = objc_msgSend(v28, "preferredFontDescriptorWithTextStyle:", UIFontTextStyleSubheadline);
  v6 = (void *)objc_opt_self(UIFont);
  v7 = objc_msgSend(v6, "fontWithDescriptor:size:", v5, 11.0);
  v8 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleSubheadline);
  v9 = objc_msgSend(v8, "scaledFontForFont:", v7);

  v10 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_subtitleLabel;
  objc_msgSend(v4, "setFont:", v9);

  *(_QWORD *)&v0[v10] = v4;
  v11 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_listItemImageView;
  v12 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v12, "setContentMode:", 2);
  v13 = objc_msgSend(v12, "layer");
  objc_msgSend(v13, "setMasksToBounds:", 1);

  *(_QWORD *)&v0[v11] = v12;
  v14 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_horizontalStackView;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v15, "setAxis:", 0);
  objc_msgSend(v15, "setAlignment:", 3);
  objc_msgSend(v15, "setDistribution:", 0);
  objc_msgSend(v15, "setSpacing:", 10.0);
  *(_QWORD *)&v0[v14] = v15;
  v16 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_verticalStackView;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v17, "setAxis:", 1);
  objc_msgSend(v17, "setAlignment:", 1);
  objc_msgSend(v17, "setDistribution:", 0);
  objc_msgSend(v17, "setSpacing:", 2.0);
  *(_QWORD *)&v0[v16] = v17;
  v18 = objc_msgSend(v28, "preferredFontDescriptorWithTextStyle:", UIFontTextStyleBody);
  v19 = objc_msgSend(v6, "fontWithDescriptor:size:", v18, 13.0);
  v20 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  v21 = objc_msgSend(v20, "scaledFontForFont:", v19);

  v22 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkImageView;
  v23 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v21);
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v24, v23);

  v26 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v25);
  *(_QWORD *)&v0[v22] = v26;
  v27 = OBJC_IVAR____TtC8Business26MacListPickerTableViewCell_checkmarkPlacholderView;
  *(_QWORD *)&v0[v27] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business26MacListPickerTableViewCell____lazy_storage___separatorView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000B3DA0, "Business/MacListPickerTableViewCell.swift", 41, 2);
  __break(1u);
}

NSString sub_100068C14()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1000F8A68 = (uint64_t)result;
  return result;
}

char *sub_100068C48(void *a1, void *a2, char a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  Class isa;
  objc_class *v40;
  char isUniquelyReferenced_nonNull_native;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  unsigned __int8 v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  char *v58;
  Swift::String v59;
  uint64_t v60;
  _OWORD v61[2];
  __int128 v62;
  __int128 v63;

  v7 = type metadata accessor for URLHelper(0);
  v9 = __chkstk_darwin(v7, v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  v14 = (char *)&v58 - v13;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_rawDictionary] = 0;
  v15 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_label;
  v16 = objc_allocWithZone((Class)UILabel);
  v17 = v3;
  *(_QWORD *)&v3[v15] = objc_msgSend(v16, "init");
  v18 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator;
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  v17[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_showStateLabel] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController] = 0;
  v17[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded] = 0;
  v17[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_viewDidAppearFired] = 0;
  v19 = &v17[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_bundleVersion];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v17[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_userCanSelect] = a3;

  v20 = a1;
  v21 = a2;
  sub_10004EA08((uint64_t)v14);
  sub_100020D60((uint64_t)v14, (uint64_t)v11);
  v22 = (char *)sub_1000A5DA8(v20, v21, (uint64_t)v11, v17);

  sub_100020DA4((uint64_t)v14);
  v23 = OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message;
  v24 = *(void **)&v22[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message];
  v25 = v22;
  v26 = objc_msgSend(v24, "dictionaryValue");
  v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v26, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v27 + 16))
  {
    v62 = 0u;
    v63 = 0u;
LABEL_11:

LABEL_12:
    sub_100009CB0((uint64_t)&v62);
LABEL_26:
    swift_bridgeObjectRelease(v27);
    return v25;
  }
  swift_bridgeObjectRetain(v27);
  v28 = sub_10004F068(0x63696D616E7964, 0xE700000000000000);
  if ((v29 & 1) != 0)
  {
    sub_100009C74(*(_QWORD *)(v27 + 56) + 32 * v28, (uint64_t)&v62);
  }
  else
  {
    v62 = 0u;
    v63 = 0u;
  }
  swift_bridgeObjectRelease(v27);
  if (!*((_QWORD *)&v63 + 1))
    goto LABEL_11;
  v30 = sub_100007D40(&qword_1000EC478);
  if ((swift_dynamicCast(v61, &v62, (char *)&type metadata for Any + 8, v30, 6) & 1) == 0)
  {
LABEL_25:

    goto LABEL_26;
  }
  v31 = *(_QWORD *)&v61[0];
  if (*(_QWORD *)(*(_QWORD *)&v61[0] + 16)
    && (v32 = sub_10004F068(0x6E6F6973726576, 0xE700000000000000), (v33 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v31 + 56) + 32 * v32, (uint64_t)&v62);
  }
  else
  {
    v62 = 0u;
    v63 = 0u;
  }
  swift_bridgeObjectRelease(v31);
  if (!*((_QWORD *)&v63 + 1))
  {

    goto LABEL_12;
  }
  if ((swift_dynamicCast(v61, &v62, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_25;
  v59 = (Swift::String)v61[0];
  if (qword_1000EBCF0 != -1)
    swift_once(&qword_1000EBCF0, sub_100097FB0);
  v34 = *(void **)&v22[v23];
  v58 = (char *)(id)qword_1000F0850;
  v35 = objc_msgSend(v34, "imageStore");
  if (v35)
  {
    v36 = v35;
    v37 = objc_msgSend(v35, "rawArray");

    if (v37)
    {
      v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v30);

      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v38);
      *((_QWORD *)&v63 + 1) = sub_1000090C8(0, &qword_1000EEB70, NSArray_ptr);
      *(_QWORD *)&v62 = isa;
      sub_100009CF0(&v62, v61);
      v40 = isa;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v27);
      v60 = v27;
      sub_10003A658(v61, 0x736567616D69, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
      v27 = v60;

      swift_bridgeObjectRelease(0x8000000000000000);
    }
  }
  v42 = v58;
  v43 = *(_QWORD *)(v27 + 16);
  if (v43)
  {
    v44 = sub_10004F068(0x6E655F6775626564, 0xED000064656C6261);
    if ((v45 & 1) != 0
      && (sub_100009C74(*(_QWORD *)(v27 + 56) + 32 * v44, (uint64_t)&v62),
          swift_dynamicCast(v61, &v62, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)))
    {
      LOBYTE(v43) = v61[0];
    }
    else
    {
      LOBYTE(v43) = 0;
    }
  }
  v25[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_showStateLabel] = v43;
  v47 = objc_msgSend(*(id *)&v22[v23], "isFromMe");
  *((_QWORD *)&v63 + 1) = &type metadata for Bool;
  LOBYTE(v62) = v47;
  sub_100009CF0(&v62, v61);
  v48 = swift_isUniquelyReferenced_nonNull_native(v27);
  v60 = v27;
  sub_10003A658(v61, 0x654D6D6F72467369, 0xE800000000000000, v48);
  v49 = v60;
  swift_bridgeObjectRelease(0x8000000000000000);
  v50 = *(_QWORD *)&v25[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_rawDictionary];
  *(_QWORD *)&v25[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_rawDictionary] = v49;
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRelease(v50);
  v51 = *(_QWORD *)&v25[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_bundleVersion + 8];
  v52 = v59;
  *(Swift::String *)&v25[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_bundleVersion] = v59;
  swift_bridgeObjectRetain(v52._object);
  v53 = swift_bridgeObjectRelease(v51);
  if (qword_1000EBCB8 != -1)
    v53 = swift_once(&qword_1000EBCB8, sub_100082798);
  v54 = qword_1000F8A90;
  v55 = static os_log_type_t.info.getter(v53);
  os_log(_:dso:log:type:_:)("JITAppKit : initializing JITAppKit Base View controller ", 56, 2, &_mh_execute_header, v54, v55, _swiftEmptyArrayStorage);
  v56 = &v42[OBJC_IVAR____TtC8Business22IMBJITAppBundleManager_delegate];
  *((_QWORD *)v56 + 1) = &off_1000D9548;
  swift_unknownObjectWeakAssign(v56, v25);
  v57 = objc_msgSend((id)objc_opt_self(TKApplication), "shared");
  objc_msgSend(v57, "setDelegate:", v25);

  IMBJITAppBundleManager.load(_:)(v52);
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v52._object);

  return v25;
}

void sub_10006935C(char a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for IMBJITAppKitViewController();
  objc_msgSendSuper2(&v9, "viewDidDisappear:", a1 & 1);
  v3 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController;
  v4 = *(void **)&v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "willMoveToParentViewController:", 0);
    v6 = objc_msgSend(v5, "view");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "removeFromSuperview");

      objc_msgSend(v5, "removeFromParentViewController");
      v8 = *(void **)&v1[v3];
      *(_QWORD *)&v1[v3] = 0;

      v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded] = 0;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10006946C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1000EBCF0 != -1)
    swift_once(&qword_1000EBCF0, sub_100097FB0);
  v1 = objc_msgSend((id)qword_1000F0850, "bundleState");
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_viewDidAppearFired) != 1)
  {
    if (qword_1000EBCB8 != -1)
      v1 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v2 = qword_1000F8A90;
    v3 = static os_log_type_t.info.getter(v1);
    v4 = "JITAppKit : View is not on screen yet!";
    v5 = 38;
    goto LABEL_11;
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded) & 1) != 0)
  {
    if (qword_1000EBCB8 != -1)
      v1 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v2 = qword_1000F8A90;
    v3 = static os_log_type_t.info.getter(v1);
    v4 = "JITAppKit : View already on screen skipping relaunching the view";
    v5 = 64;
LABEL_11:
    os_log(_:dso:log:type:_:)(v4, v5, 2, &_mh_execute_header, v2, v3, _swiftEmptyArrayStorage);
    return;
  }
  if (v1 == (id)5)
  {
    if (qword_1000EBCB8 != -1)
      v1 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v7 = qword_1000F8A90;
    v8 = static os_log_type_t.error.getter(v1);
    os_log(_:dso:log:type:_:)("JITAppKit : Error state showing retry view", 42, 2, &_mh_execute_header, v7, v8, _swiftEmptyArrayStorage);
    v9 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator;
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator), "stopAnimating");
    sub_10006B580((uint64_t)objc_msgSend(*(id *)(v0 + v9), "removeFromSuperview"));
  }
  else if (v1 == (id)3)
  {
    v6 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator;
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator), "stopAnimating");
    objc_msgSend(*(id *)(v0 + v6), "removeFromSuperview");
    sub_10006967C();
  }
  else
  {
    sub_100069F24();
  }
}

void sub_10006967C()
{
  char *v0;
  _BYTE *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  Class v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  _OWORD v62[2];
  __int128 v63;
  uint64_t v64;

  v1 = v0;
  v2 = objc_msgSend(v0, "viewIfLoaded");
  if (!v2)
  {
    if (qword_1000EBCB8 != -1)
      v2 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v30 = qword_1000F8A90;
    v31 = static os_log_type_t.error.getter(v2);
    v32 = os_log(_:dso:log:type:_:)("JITAppKit : Unable to launch view as the view is in transition and is not ready to accept any constraints. Exiting as this might lead to a crash!", 145, 2, &_mh_execute_header, v30, v31, _swiftEmptyArrayStorage);
    sub_10006B580(v32);
    return;
  }
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_rawDictionary];
  v4 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded;
  v61 = v2;
  if (!v3)
  {
    if (!v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded])
    {
      if (qword_1000EBCB8 != -1)
        v2 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
      v35 = qword_1000F8A90;
      v36 = static os_log_type_t.error.getter(v2);
      os_log(_:dso:log:type:_:)("JITAppKit : Unable to launch view as the data is empty.", 55, 2, &_mh_execute_header, v35, v36, _swiftEmptyArrayStorage);
      v37 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator;
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator], "stopAnimating");
      sub_10006B580((uint64_t)objc_msgSend(*(id *)&v1[v37], "removeFromSuperview"));
      goto LABEL_21;
    }
LABEL_15:
    if (qword_1000EBCB8 != -1)
      v2 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v33 = qword_1000F8A90;
    v34 = static os_log_type_t.info.getter(v2);
    os_log(_:dso:log:type:_:)("JITAppKit : ViewController already onscreen. Skipping relaunch", 62, 2, &_mh_execute_header, v33, v34, _swiftEmptyArrayStorage);
LABEL_21:

    return;
  }
  if ((v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded] & 1) != 0)
    goto LABEL_15;
  v5 = *(void **)&v1[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_conversation];
  swift_bridgeObjectRetain(v3);
  v6 = objc_msgSend(v5, "recipientAddresses");
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String);

  v64 = sub_100007D40(qword_1000EEBB0);
  *(_QWORD *)&v63 = v7;
  sub_100009CF0(&v63, v62);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  sub_10003A658(v62, 0xD000000000000012, 0x80000001000B9380, isUniquelyReferenced_nonNull_native);
  v9 = v3;
  v10 = swift_bridgeObjectRelease(0x8000000000000000);
  if (qword_1000EBCB8 != -1)
    v10 = swift_once(&qword_1000EBCB8, sub_100082798);
  v11 = qword_1000F8A90;
  v12 = static os_log_type_t.info.getter(v10);
  os_log(_:dso:log:type:_:)("JITAppKit : Attaching template to base view controller", 54, 2, &_mh_execute_header, v11, v12, _swiftEmptyArrayStorage);
  v13 = objc_msgSend((id)objc_opt_self(TKApplication), "shared");
  v14 = String._bridgeToObjectiveC()();
  v15 = swift_bridgeObjectRetain(v9);
  v16 = sub_10004C9C0(v15);
  swift_bridgeObjectRelease(v9);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v18 = objc_msgSend(v13, "loadPage:withData:", v14, isa);

  objc_msgSend(v18, "loadViewIfNeeded");
  v19 = objc_msgSend(v18, "view");
  if (!v19)
  {
    v38 = swift_bridgeObjectRelease(v9);
    v39 = qword_1000F8A90;
    v40 = static os_log_type_t.error.getter(v38);
    os_log(_:dso:log:type:_:)("JITAppKit : Error with loading view for the given vc", 52, 2, &_mh_execute_header, v39, v40, _swiftEmptyArrayStorage);
    v41 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator], "stopAnimating");
    sub_10006B580((uint64_t)objc_msgSend(*(id *)&v1[v41], "removeFromSuperview"));
LABEL_27:

    return;
  }
  v20 = v19;
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_10006BAE0();
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator], "stopAnimating");
  objc_msgSend(v1, "loadViewIfNeeded");
  v21 = objc_msgSend(v1, "view");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "addSubview:", v20);

    v23 = objc_msgSend(v1, "view");
    if (v23)
    {
      v24 = v23;
      swift_bridgeObjectRelease(v9);
      objc_msgSend(v24, "bringSubviewToFront:", v20);

      objc_msgSend(v1, "addChildViewController:", v18);
      objc_msgSend(v18, "didMoveToParentViewController:", v1);
      v25 = sub_100007D40((uint64_t *)&unk_1000ED490);
      v26 = swift_allocObject(v25, 64, 7);
      *(_OWORD *)(v26 + 16) = xmmword_1000AF130;
      v27 = objc_msgSend(v20, "topAnchor");
      if (sub_10002DA10() == 1)
      {
        v28 = objc_msgSend(v61, "safeAreaLayoutGuide");
        v29 = objc_msgSend(v28, "topAnchor");

      }
      else
      {
        v29 = objc_msgSend(v61, "topAnchor");
      }
      v60 = (id)objc_opt_self(NSLayoutConstraint);
      v42 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);

      *(_QWORD *)(v26 + 32) = v42;
      v43 = objc_msgSend(v20, "bottomAnchor");
      v44 = objc_msgSend(v61, "safeAreaLayoutGuide");
      v45 = objc_msgSend(v44, "bottomAnchor");

      v46 = objc_msgSend(v43, "constraintEqualToAnchor:", v45);
      *(_QWORD *)(v26 + 40) = v46;
      v47 = objc_msgSend(v20, "leftAnchor");
      v48 = objc_msgSend(v61, "safeAreaLayoutGuide");
      v49 = objc_msgSend(v48, "leftAnchor");

      v50 = objc_msgSend(v47, "constraintEqualToAnchor:", v49);
      *(_QWORD *)(v26 + 48) = v50;
      v51 = objc_msgSend(v20, "rightAnchor");
      v52 = objc_msgSend(v61, "safeAreaLayoutGuide");
      v53 = objc_msgSend(v52, "rightAnchor");

      v54 = objc_msgSend(v51, "constraintEqualToAnchor:", v53);
      *(_QWORD *)(v26 + 56) = v54;
      *(_QWORD *)&v63 = v26;
      specialized Array._endMutation()(v55);
      v56 = v63;
      sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
      v57 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v56);
      objc_msgSend(v60, "activateConstraints:", v57);

      v1[v4] = 1;
      v58 = *(void **)&v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController];
      *(_QWORD *)&v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController] = v18;
      v59 = v18;

      v18 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1000EBCA8 != -1)
        swift_once(&qword_1000EBCA8, sub_100068C14);
      objc_msgSend(v18, "addObserver:selector:name:object:", v1, "composeResponseWithNotification:", qword_1000F8A68, 0);

      goto LABEL_27;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100069F24()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (**v8)(_QWORD, _QWORD);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  Class isa;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  NSString v69;
  id v70;
  void *v71;
  id v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  id v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  Class v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  void (**v107)(_QWORD, _QWORD);
  _QWORD aBlock[5];
  uint64_t v109;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(void (***)(_QWORD, _QWORD))(v7 - 8);
  __chkstk_darwin(v7, v9);
  v11 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchTime(0);
  v14 = __chkstk_darwin(v12, v13);
  v16 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v14, v17);
  v21 = (char *)&v98 - v20;
  v22 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded;
  if ((v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded] & 1) == 0)
  {
    v105 = v19;
    v106 = v11;
    v104 = v18;
    v107 = v8;
    v32 = objc_msgSend(v1, "view");
    if (v32)
    {
      v33 = v32;
      v100 = v7;
      v101 = v6;
      v102 = v3;
      v103 = v2;
      v34 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
      objc_msgSend(v33, "setBackgroundColor:", v34);

      v35 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator;
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator], "setActivityIndicatorViewStyle:", 100);
      objc_msgSend(*(id *)&v1[v35], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(*(id *)&v1[v35], "setHidesWhenStopped:", 1);
      v36 = objc_msgSend(v1, "view");
      if (v36)
      {
        v37 = v36;
        objc_msgSend(v36, "addSubview:", *(_QWORD *)&v1[v35]);

        v99 = sub_100007D40((uint64_t *)&unk_1000ED490);
        v38 = swift_allocObject(v99, 48, 7);
        *(_OWORD *)(v38 + 16) = xmmword_1000B1DA0;
        v39 = objc_msgSend(*(id *)&v1[v35], "centerXAnchor");
        v40 = objc_msgSend(v1, "view");
        if (v40)
        {
          v41 = v40;
          v42 = objc_msgSend(v40, "centerXAnchor");

          v43 = objc_msgSend(v39, "constraintEqualToAnchor:", v42);
          *(_QWORD *)(v38 + 32) = v43;
          v44 = objc_msgSend(*(id *)&v1[v35], "centerYAnchor");
          v45 = objc_msgSend(v1, "view");
          if (v45)
          {
            v46 = v45;
            v47 = (void *)objc_opt_self(NSLayoutConstraint);
            v48 = objc_msgSend(v46, "centerYAnchor");

            v49 = objc_msgSend(v44, "constraintEqualToAnchor:", v48);
            *(_QWORD *)(v38 + 40) = v49;
            aBlock[0] = v38;
            specialized Array._endMutation()(v50);
            v51 = aBlock[0];
            v98 = sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v51);
            objc_msgSend(v47, "activateConstraints:", isa);

            sub_1000090C8(0, (unint64_t *)&qword_1000EBD00, OS_dispatch_queue_ptr);
            v53 = (void *)static OS_dispatch_queue.main.getter();
            static DispatchTime.now()();
            v54 = v21;
            + infix(_:_:)(v16, 0.5);
            v55 = v104;
            v105 = *(_QWORD *)(v105 + 8);
            ((void (*)(char *, uint64_t))v105)(v16, v104);
            v56 = swift_allocObject(&unk_1000D9578, 24, 7);
            *(_QWORD *)(v56 + 16) = v1;
            aBlock[4] = sub_10006BE74;
            v109 = v56;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_100025AB0;
            aBlock[3] = &unk_1000D9590;
            v57 = _Block_copy(aBlock);
            v58 = v109;
            v59 = v1;
            v60 = swift_release(v58);
            v61 = v106;
            static DispatchQoS.unspecified.getter(v60);
            aBlock[0] = _swiftEmptyArrayStorage;
            v62 = sub_100041F44();
            v63 = sub_100007D40((uint64_t *)&unk_1000EEBA0);
            v64 = sub_100041F8C();
            v65 = v101;
            v66 = v103;
            dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v63, v64, v103, v62);
            OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v54, v61, v65, v57);
            _Block_release(v57);

            (*(void (**)(char *, uint64_t))(v102 + 8))(v65, v66);
            ((void (**)(char *, uint64_t))v107)[1](v61, v100);
            ((void (*)(char *, uint64_t))v105)(v54, v55);
            if (v59[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_showStateLabel] == 1)
            {
              v67 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_label;
              objc_msgSend(*(id *)&v59[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_label], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
              objc_msgSend(*(id *)&v59[v67], "setNumberOfLines:", 0);
              v68 = *(id *)&v59[v67];
              v69 = String._bridgeToObjectiveC()();
              objc_msgSend(v68, "setText:", v69);

              v70 = objc_msgSend(v59, "view");
              if (!v70)
              {
LABEL_25:
                __break(1u);
                goto LABEL_26;
              }
              v71 = v70;
              objc_msgSend(v70, "addSubview:", *(_QWORD *)&v59[v67]);

              v72 = objc_msgSend(v59, "view");
              if (!v72)
              {
LABEL_26:
                __break(1u);
                goto LABEL_27;
              }
              v73 = v72;
              v74 = swift_allocObject(v99, 64, 7);
              *(_OWORD *)(v74 + 16) = xmmword_1000AF130;
              v75 = objc_msgSend(*(id *)&v59[v67], "bottomAnchor");
              v76 = objc_msgSend(v59, "view");
              if (!v76)
              {
LABEL_27:
                __break(1u);
                goto LABEL_28;
              }
              v77 = v76;
              v78 = objc_msgSend(v76, "bottomAnchor");

              v79 = objc_msgSend(v75, "constraintEqualToAnchor:constant:", v78, 10.0);
              *(_QWORD *)(v74 + 32) = v79;
              v80 = objc_msgSend(*(id *)&v59[v67], "leadingAnchor");
              v81 = objc_msgSend(v59, "view");
              if (!v81)
              {
LABEL_28:
                __break(1u);
                goto LABEL_29;
              }
              v82 = v81;
              v83 = objc_msgSend(v81, "leadingAnchor");

              v84 = objc_msgSend(v80, "constraintEqualToAnchor:constant:", v83, 10.0);
              *(_QWORD *)(v74 + 40) = v84;
              v85 = objc_msgSend(*(id *)&v59[v67], "trailingAnchor");
              v86 = objc_msgSend(v59, "view");
              if (!v86)
              {
LABEL_29:
                __break(1u);
                goto LABEL_30;
              }
              v87 = v86;
              v88 = objc_msgSend(v86, "trailingAnchor");

              v89 = objc_msgSend(v85, "constraintEqualToAnchor:constant:", v88, -10.0);
              *(_QWORD *)(v74 + 48) = v89;
              v90 = objc_msgSend(*(id *)&v59[v67], "topAnchor");
              v91 = objc_msgSend(v59, "view");
              if (!v91)
              {
LABEL_30:
                __break(1u);
                return;
              }
              v92 = v91;
              v93 = objc_msgSend(v91, "topAnchor");

              v94 = objc_msgSend(v90, "constraintEqualToAnchor:constant:", v93, 10.0);
              *(_QWORD *)(v74 + 56) = v94;
              aBlock[0] = v74;
              specialized Array._endMutation()(v95);
              v96 = aBlock[0];
              v97 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v96);
              objc_msgSend(v73, "addConstraints:", v97);

            }
            return;
          }
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  v23 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController;
  v24 = *(void **)&v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController];
  if (v24)
  {
    v25 = qword_1000EBCB8;
    v26 = v24;
    v107 = (void (**)(_QWORD, _QWORD))v26;
    if (v25 != -1)
      v26 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v27 = qword_1000F8A90;
    v28 = static os_log_type_t.info.getter(v26);
    os_log(_:dso:log:type:_:)("JITAppKit : Tearing down existing View and restarting", 53, 2, &_mh_execute_header, v27, v28, _swiftEmptyArrayStorage);
    objc_msgSend(v107, "willMoveToParentViewController:", 0);
    v29 = objc_msgSend(v107, "view");
    if (v29)
    {
      v30 = v29;
      objc_msgSend(v29, "removeFromSuperview");

      objc_msgSend(v107, "removeFromParentViewController");
      v31 = *(void **)&v1[v23];
      *(_QWORD *)&v1[v23] = 0;

      v1[v22] = 0;
      sub_100069F24();

      return;
    }
    goto LABEL_24;
  }
}

id sub_10006A898(uint64_t a1)
{
  id result;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded) != 1)
    return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator), "startAnimating");
  if (qword_1000EBCF0 != -1)
    swift_once(&qword_1000EBCF0, sub_100097FB0);
  result = objc_msgSend((id)qword_1000F0850, "bundleState");
  if (result != (id)5)
    return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator), "startAnimating");
  return result;
}

void sub_10006A92C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  NSString v69;
  NSString v70;
  Swift::String v71;
  uint64_t v72;
  void *v73;
  Swift::String v74;
  uint64_t v75;
  NSString v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  id v89;
  void *v90;
  void *v91;
  void *v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t Strong;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t ObjectType;
  id v106;
  void (*v107)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  void *v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  unint64_t v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1000EBCA8 != -1)
    swift_once(&qword_1000EBCA8, sub_100068C14);
  objc_msgSend(v4, "removeObserver:name:object:", v2, qword_1000F8A68, 0);

  v5 = objc_msgSend(a1, "userInfo");
  if (!v5)
  {
    v128 = 0u;
    v129 = 0u;
LABEL_25:
    v11 = sub_100009CB0((uint64_t)&v128);
    goto LABEL_26;
  }
  v6 = v5;
  v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v126 = 0x6F697463656C6573;
  v127 = 0xEA0000000000736ELL;
  AnyHashable.init<A>(_:)(&v130, &v126, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_10004F0D4((uint64_t)&v130), (v9 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v128);
  }
  else
  {
    v128 = 0u;
    v129 = 0u;
  }
  swift_bridgeObjectRelease(v7);
  sub_100009004((uint64_t)&v130);
  if (!*((_QWORD *)&v129 + 1))
    goto LABEL_25;
  v10 = sub_100007D40(&qword_1000EC478);
  v11 = swift_dynamicCast(&v130, &v128, (char *)&type metadata for Any + 8, v10, 6);
  if ((v11 & 1) == 0)
    goto LABEL_26;
  v12 = v130;
  v13 = objc_msgSend(a1, "userInfo");
  if (!v13)
  {
    v128 = 0u;
    v129 = 0u;
LABEL_24:
    swift_bridgeObjectRelease(v12);
    goto LABEL_25;
  }
  v14 = v13;
  v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v126 = 0x496567617373656DLL;
  v127 = 0xEB000000006F666ELL;
  AnyHashable.init<A>(_:)(&v130, &v126, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_10004F0D4((uint64_t)&v130), (v17 & 1) != 0))
  {
    sub_100009C74(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v128);
  }
  else
  {
    v128 = 0u;
    v129 = 0u;
  }
  swift_bridgeObjectRelease(v15);
  sub_100009004((uint64_t)&v130);
  if (!*((_QWORD *)&v129 + 1))
    goto LABEL_24;
  if ((swift_dynamicCast(&v130, &v128, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
  {
    v18 = v130;
    v122 = *(id *)(v2 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_conversation);
    v19 = objc_msgSend(v122, "selectedMessage");
    v20 = objc_msgSend(v19, "session");

    if (!v20)
      v20 = objc_msgSend(objc_allocWithZone((Class)MSSession), "init");
    v119 = objc_msgSend(objc_allocWithZone((Class)MSMessage), "initWithSession:", v20);
    v121 = objc_msgSend(objc_allocWithZone((Class)MSMessageTemplateLayout), "init");
    v21 = *(void **)(v2 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message);
    v22 = objc_msgSend(v21, "replyMessage");
    if (v22
      && (v23 = v22,
          v24 = objc_msgSend(v22, "imageIdentifier"),
          v23,
          v24))
    {
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v116 = v26;
      v117 = v25;

    }
    else if (*(_QWORD *)(v18 + 16) && (v29 = sub_10004F068(0x6564496567616D69, 0xEF7265696669746ELL), (v30 & 1) != 0))
    {
      sub_100009C74(*(_QWORD *)(v18 + 56) + 32 * v29, (uint64_t)&v130);
      v31 = swift_dynamicCast(&v128, &v130, (char *)&type metadata for Any + 8, &type metadata for String, 6);
      v33 = *((_QWORD *)&v128 + 1);
      v32 = v128;
      if (!v31)
      {
        v33 = 0;
        v32 = 0;
      }
      v116 = v33;
      v117 = v32;
    }
    else
    {
      v116 = 0;
      v117 = 0;
    }
    v34 = objc_msgSend(v21, "replyMessage");
    if (v34
      && (v35 = v34,
          v36 = objc_msgSend(v34, "imageIdentifier"),
          v35,
          v36))
    {

      v37 = objc_msgSend(v21, "replyMessage");
      if (v37)
      {
        v38 = v37;
        v39 = objc_msgSend(v37, "imageDescription");

        if (v39)
        {
          v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
          v114 = v41;
          v115 = v40;

LABEL_51:
          v47 = objc_msgSend(v21, "replyMessage");
          if (v47 || (v47 = objc_msgSend(v21, "receivedMessage")) != 0)
          {
            v48 = v47;
            v113 = objc_msgSend(v47, "style");

          }
          else
          {
            v113 = BCBubbleViewStyleIcon;
          }
          v111 = v20;
          v118 = v12;
          if (*(_QWORD *)(v18 + 16)
            && (v49 = sub_10004F068(0x6E6F6974706163, 0xE700000000000000), (v50 & 1) != 0)
            && (sub_100009C74(*(_QWORD *)(v18 + 56) + 32 * v49, (uint64_t)&v130),
                swift_dynamicCast(&v128, &v130, (char *)&type metadata for Any + 8, &type metadata for String, 6)))
          {
            v52 = *((_QWORD *)&v128 + 1);
            v51 = v128;
          }
          else
          {
            v51 = 0;
            v52 = 0xE000000000000000;
          }
          v124 = v51;
          v53 = objc_msgSend(v21, "replyMessage");
          if (v53)
          {
            v54 = v53;
            v55 = v21;
            v56 = objc_msgSend(v53, "subtitle");

            if (v56)
            {
              v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
              v59 = v58;

LABEL_64:
              v60 = objc_msgSend(v55, "replyMessage");
              if (v60
                && (v61 = v60,
                    v62 = objc_msgSend(v60, "image"),
                    v61,
                    v62))
              {
                swift_bridgeObjectRelease(v18);
                *(_QWORD *)&v128 = v62;
                v63 = v121;
                v64 = v57;
                v65 = v124;
              }
              else
              {
                v64 = v57;
                if (*(_QWORD *)(v18 + 16)
                  && (v66 = sub_10004F068(0xD000000000000010, 0x80000001000B91E0), (v67 & 1) != 0))
                {
                  sub_100009C74(*(_QWORD *)(v18 + 56) + 32 * v66, (uint64_t)&v130);
                }
                else
                {
                  v130 = 0u;
                  v131 = 0u;
                }
                v65 = v124;
                swift_bridgeObjectRelease(v18);
                if (*((_QWORD *)&v131 + 1))
                {
                  v68 = sub_1000090C8(0, (unint64_t *)&unk_1000F07E0, UIImage_ptr);
                  if ((swift_dynamicCast(&v128, &v130, (char *)&type metadata for Any + 8, v68, 6) & 1) == 0)
                    *(_QWORD *)&v128 = 0;
                  v62 = (id)v128;
                }
                else
                {
                  sub_100009CB0((uint64_t)&v130);
                  v62 = 0;
                  *(_QWORD *)&v128 = 0;
                }
                v63 = v121;
              }
              objc_msgSend(v63, "setImage:", v62);

              v69 = String._bridgeToObjectiveC()();
              objc_msgSend(v63, "setCaption:", v69);

              if (v59)
              {
                swift_bridgeObjectRetain(v59);
                v70 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease(v59);
              }
              else
              {
                v70 = 0;
              }
              objc_msgSend(v63, "setSubcaption:", v70);

              *(_QWORD *)&v128 = v65;
              *((_QWORD *)&v128 + 1) = v52;
              v112 = v55;
              if (v59)
              {
                *(_QWORD *)&v130 = 32;
                *((_QWORD *)&v130 + 1) = 0xE100000000000000;
                v71._countAndFlagsBits = v64;
                v71._object = v59;
                String.append(_:)(v71);
                v73 = (void *)*((_QWORD *)&v130 + 1);
                v72 = v130;
                swift_bridgeObjectRetain(v52);
                v74._countAndFlagsBits = v72;
                v74._object = v73;
                String.append(_:)(v74);
                swift_bridgeObjectRelease(v73);
                v75 = *((_QWORD *)&v128 + 1);
              }
              else
              {
                swift_bridgeObjectRetain(v52);
                v75 = v52;
              }
              swift_bridgeObjectRetain(v75);
              v76 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v75);
              v77 = v119;
              objc_msgSend(v119, "setAccessibilityLabel:", v76);

              v78 = objc_msgSend(v122, "selectedMessage");
              v79 = objc_msgSend(v78, "layout");

              if (v79)
              {
                v80 = objc_msgSend(objc_allocWithZone((Class)MSMessageLiveLayout), "initWithAlternateLayout:", v63);
                objc_msgSend(v119, "setLayout:", v80);

              }
              else
              {
                objc_msgSend(v119, "setLayout:", v63);
              }
              v81 = objc_allocWithZone((Class)BCMessageInfo);
              swift_bridgeObjectRetain(v52);
              v82 = v113;
              v83 = sub_1000631C0(v124, v52, v64, (uint64_t)v59, v82, v124, v52, v117, v116, v115, v114);
              v84 = type metadata accessor for IMBJITAppKitData();
              v85 = swift_allocObject(v84, 24, 7);
              *(_QWORD *)(v85 + 16) = v118;
              v86 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController;
              v87 = *(void **)(v2 + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController);
              v120 = v82;
              if (v87)
              {
                v88 = v87;
                objc_msgSend(v88, "willMoveToParentViewController:", 0);
                v89 = objc_msgSend(v88, "view");
                if (!v89)
                  goto LABEL_97;
                v90 = v89;
                swift_bridgeObjectRelease(v75);
                objc_msgSend(v90, "removeFromSuperview");

                objc_msgSend(v88, "removeFromParentViewController");
                v91 = *(void **)(v2 + v86);
                *(_QWORD *)(v2 + v86) = 0;

                *(_BYTE *)(v2 + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded) = 0;
              }
              else
              {
                swift_bridgeObjectRelease(v75);
              }
              v92 = (void *)BCMessageRootJITAppKitKey;
              *(_QWORD *)&v130 = v112;
              *((_QWORD *)&v130 + 1) = v77;
              *(_QWORD *)&v131 = v122;
              *((_QWORD *)&v131 + 1) = v83;
              v132 = BCMessageRootJITAppKitKey;
              v133 = v85;
              v93 = v112;
              v94 = v77;
              v95 = v122;
              v96 = v83;
              v97 = v92;
              swift_retain(v85);
              sub_1000371DC(1);
              v98 = v2 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate;
              Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate);
              swift_unknownObjectRelease(Strong);
              if (Strong)
              {
                v100 = swift_unknownObjectWeakLoadStrong(v98);
                if (v100)
                {
                  v101 = v100;
                  v125 = v94;
                  v102 = *(_QWORD *)(v98 + 8);
                  v103 = v85;
                  v104 = v97;
                  ObjectType = swift_getObjectType(v100);
                  v123 = v93;
                  v106 = v95;
                  v107 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 16);
                  v108 = type metadata accessor for IMBJITAppKitViewController();
                  v109 = ObjectType;
                  v97 = v104;
                  v85 = v103;
                  v110 = v102;
                  v94 = v125;
                  v107(v2, v108, v109, v110);
                  v95 = v106;

                  swift_unknownObjectRelease(v101);
                }
                else
                {

                }
                swift_release_n(v85, 2);

                return;
              }
              __break(1u);
LABEL_97:
              __break(1u);
              return;
            }
          }
          else
          {
            v55 = v21;
          }
          v57 = 0;
          v59 = 0;
          goto LABEL_64;
        }
      }
    }
    else if (*(_QWORD *)(v18 + 16))
    {
      v42 = sub_10004F068(0xD000000000000010, 0x80000001000B91E0);
      if ((v43 & 1) != 0)
      {
        sub_100009C74(*(_QWORD *)(v18 + 56) + 32 * v42, (uint64_t)&v130);
        v44 = swift_dynamicCast(&v128, &v130, (char *)&type metadata for Any + 8, &type metadata for String, 6);
        if (v44)
          v45 = v128;
        else
          v45 = 0;
        if (v44)
          v46 = *((_QWORD *)&v128 + 1);
        else
          v46 = 0;
        v114 = v46;
        v115 = v45;
        goto LABEL_51;
      }
    }
    v114 = 0;
    v115 = 0;
    goto LABEL_51;
  }
  v11 = swift_bridgeObjectRelease(v12);
LABEL_26:
  if (qword_1000EBCB8 != -1)
    v11 = swift_once(&qword_1000EBCB8, sub_100082798);
  v27 = qword_1000F8A90;
  v28 = static os_log_type_t.error.getter(v11);
  os_log(_:dso:log:type:_:)("JITAppKIT : Malformed response. Please retry with proper keys in the userinfo.", 78, 2, &_mh_execute_header, v27, v28, _swiftEmptyArrayStorage);
}

void sub_10006B580(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  Class isa;

  if (qword_1000EBCB8 != -1)
    a1 = swift_once(&qword_1000EBCB8, sub_100082798);
  v2 = qword_1000F8A90;
  v3 = static os_log_type_t.info.getter(a1);
  os_log(_:dso:log:type:_:)("JITAppKit : Not able load bundle/launch view at this moment. Try again.", 71, 2, &_mh_execute_header, v2, v3, _swiftEmptyArrayStorage);
  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RetryView()), "init");
  v5 = &v4[OBJC_IVAR____TtC8Business9RetryView_delegate];
  *((_QWORD *)v5 + 1) = &off_1000D9558;
  swift_unknownObjectWeakAssign(v5, v1);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController;
  v7 = *(void **)&v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController];
  if (!v7)
  {
LABEL_6:
    v12 = objc_msgSend(v1, "view");
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v12, "subviews");

      v15 = sub_1000090C8(0, (unint64_t *)&qword_1000EEB80, UIView_ptr);
      v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

      if ((unint64_t)v16 >> 62)
      {
        if (v16 < 0)
          v21 = v16;
        else
          v21 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v16);
        v17 = _CocoaArrayWrapper.endIndex.getter(v21);
        swift_bridgeObjectRelease(v16);
        if (!v17)
          goto LABEL_19;
      }
      else
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v17)
          goto LABEL_19;
      }
      if (v17 >= 1)
      {
        v18 = 0;
        do
        {
          if ((v16 & 0xC000000000000001) != 0)
            v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
          else
            v19 = *(id *)(v16 + 8 * v18 + 32);
          v20 = v19;
          ++v18;
          objc_msgSend(v19, "removeFromSuperview");
          objc_msgSend(v20, "setHidden:", 1);

        }
        while (v17 != v18);
LABEL_19:
        swift_bridgeObjectRelease(v16);
        v22 = objc_msgSend(v1, "view");
        if (v22)
        {
          v23 = v22;
          objc_msgSend(v22, "addSubview:", v4);

          v24 = objc_msgSend(v1, "view");
          if (v24)
          {
            v25 = v24;
            objc_msgSend(v24, "bringSubviewToFront:", v4);

            v26 = objc_msgSend(v1, "view");
            if (v26)
            {
              v27 = v26;
              v28 = sub_100007D40((uint64_t *)&unk_1000ED490);
              v29 = swift_allocObject(v28, 56, 7);
              *(_OWORD *)(v29 + 16) = xmmword_1000AF110;
              v30 = objc_msgSend(v4, "centerYAnchor");
              v31 = objc_msgSend(v1, "view");
              if (v31)
              {
                v32 = v31;
                v33 = objc_msgSend(v31, "centerYAnchor");

                v34 = objc_msgSend(v30, "constraintEqualToAnchor:", v33);
                *(_QWORD *)(v29 + 32) = v34;
                v35 = objc_msgSend(v4, "leadingAnchor");
                v36 = objc_msgSend(v1, "view");
                if (v36)
                {
                  v37 = v36;
                  v38 = objc_msgSend(v36, "layoutMarginsGuide");

                  v39 = objc_msgSend(v38, "leadingAnchor");
                  v40 = objc_msgSend(v35, "constraintEqualToAnchor:", v39);

                  *(_QWORD *)(v29 + 40) = v40;
                  v41 = objc_msgSend(v4, "trailingAnchor");
                  v42 = objc_msgSend(v1, "view");
                  if (v42)
                  {
                    v43 = v42;
                    v44 = objc_msgSend(v42, "layoutMarginsGuide");

                    v45 = objc_msgSend(v44, "trailingAnchor");
                    v46 = objc_msgSend(v41, "constraintEqualToAnchor:", v45);

                    *(_QWORD *)(v29 + 48) = v46;
                    specialized Array._endMutation()(v47);
                    sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
                    isa = Array._bridgeToObjectiveC()().super.isa;
                    swift_bridgeObjectRelease(v29);
                    objc_msgSend(v27, "addConstraints:", isa);

                    return;
                  }
                  goto LABEL_33;
                }
LABEL_32:
                __break(1u);
LABEL_33:
                __break(1u);
                goto LABEL_34;
              }
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  v8 = v7;
  objc_msgSend(v8, "willMoveToParentViewController:", 0);
  v9 = objc_msgSend(v8, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "removeFromSuperview");

    objc_msgSend(v8, "removeFromParentViewController");
    v11 = *(void **)&v1[v6];
    *(_QWORD *)&v1[v6] = 0;

    v1[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded] = 0;
    goto LABEL_6;
  }
LABEL_34:
  __break(1u);
}

id sub_10006BAE0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id result;
  void *v10;
  void *v11;
  uint64_t v12;

  v1 = objc_msgSend(v0, "childViewControllers");
  v2 = sub_1000090C8(0, (unint64_t *)&qword_1000EEB78, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_3;
    return (id)swift_bridgeObjectRelease_n(v3, 2);
  }
LABEL_13:
  if (v3 < 0)
    v12 = v3;
  else
    v12 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v4)
    return (id)swift_bridgeObjectRelease_n(v3, 2);
LABEL_3:
  for (i = 4; ; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3);
    else
      v6 = *(id *)(v3 + 8 * i);
    v7 = v6;
    v8 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    result = objc_msgSend(v6, "view");
    if (!result)
      break;
    v10 = result;
    objc_msgSend(result, "removeFromSuperview");

    result = objc_msgSend(v7, "view");
    if (!result)
      goto LABEL_19;
    v11 = result;
    objc_msgSend(result, "setHidden:", 1);

    objc_msgSend(v7, "removeFromParentViewController");
    if (v8 == v4)
      return (id)swift_bridgeObjectRelease_n(v3, 2);
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_10006BC70()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_rawDictionary));

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_bundleVersion
                                             + 8));
}

id sub_10006BCD0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBJITAppKitViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBJITAppKitViewController()
{
  return objc_opt_self(_TtC8Business26IMBJITAppKitViewController);
}

uint64_t sub_10006BE50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10006BE74()
{
  uint64_t v0;

  return sub_10006A898(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10006BE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006BE8C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10006BE94()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_rawDictionary] = 0;
  v1 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_label;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_loadingIndicator;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  v0[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_showStateLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewController] = 0;
  v0[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_jitAppViewLoaded] = 0;
  v0[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_viewDidAppearFired] = 0;
  v3 = &v0[OBJC_IVAR____TtC8Business26IMBJITAppKitViewController_bundleVersion];
  *v3 = 0;
  v3[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000B3DA0, "Business/IMBJITAppKitViewController.swift", 41, 2, 74, 0);
  __break(1u);
}

uint64_t sub_10006BF88()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000090C8(0, (unint64_t *)&qword_1000EBD00, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = swift_allocObject(&unk_1000D95C8, 24, 7);
  *(_QWORD *)(v13 + 16) = v0;
  aBlock[4] = sub_10006C160;
  v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100025AB0;
  aBlock[3] = &unk_1000D95E0;
  v14 = _Block_copy(aBlock);
  v15 = v23;
  v16 = v1;
  v17 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100041F44();
  v19 = sub_100007D40((uint64_t *)&unk_1000EEBA0);
  v20 = sub_100041F8C();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v2, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_10006C160()
{
  sub_10006946C();
}

uint64_t sub_10006C18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  _QWORD v8[2];

  v8[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v5 = type metadata accessor for Outcome(255, *(_QWORD *)(a1 + 80), a3, a4);
  result = type metadata accessor for Optional(319, v5);
  if (v7 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 2, v8, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_10006C218()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  swift_bridgeObjectRelease(v0[2]);
  v2 = (char *)v0 + *(_QWORD *)(*v0 + 96);
  v5 = type metadata accessor for Outcome(255, *(_QWORD *)(v1 + 80), v3, v4);
  v6 = type metadata accessor for Optional(0, v5);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2, v6);
  return v0;
}

uint64_t sub_10006C280()
{
  uint64_t v0;

  sub_10006C218();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for Future(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000150D8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Future);
}

double sub_10006C2B0(double a1, double a2)
{
  _QWORD *v2;
  double v5;
  id v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = fmin(a1, 263.0);
  v6 = objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC8Business13IMBBubbleView_widthConstraint), "setConstant:", v5);
  v7 = (*(double (**)(id))((swift_isaMask & *v2) + 0x390))(v6);
  if (v7 <= a2)
    v8 = v7;
  else
    v8 = a2;
  v9 = OBJC_IVAR____TtC8Business13IMBBubbleView_heightConstraint;
  objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC8Business13IMBBubbleView_heightConstraint), "setActive:", 0);
  objc_msgSend(*(id *)((char *)v2 + v9), "setConstant:", v8);
  objc_msgSend(*(id *)((char *)v2 + v9), "setActive:", 1);
  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v10 = qword_1000F8A90;
  v11 = static os_log_type_t.debug.getter();
  v12 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v13 = swift_allocObject(v12, 112, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1000ADFC0;
  v14 = CGSize.debugDescription.getter(a1, a2);
  v16 = v15;
  *(_QWORD *)(v13 + 56) = &type metadata for String;
  v17 = sub_100009084();
  *(_QWORD *)(v13 + 64) = v17;
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  v18 = CGSize.debugDescription.getter(v5, v8);
  *(_QWORD *)(v13 + 96) = &type metadata for String;
  *(_QWORD *)(v13 + 104) = v17;
  *(_QWORD *)(v13 + 72) = v18;
  *(_QWORD *)(v13 + 80) = v19;
  os_log(_:dso:log:type:_:)("IMBBubbleView.contentSizeThatFits: size %@ preferredSize: %@", 60, 2, &_mh_execute_header, v10, v11, v13);
  swift_bridgeObjectRelease(v13);
  return v5;
}

void sub_10006C574(uint64_t a1, uint64_t a2)
{
  void *v2;
  NSString v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  objc_super v12;

  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for ABSBarButtonItem();
  objc_msgSendSuper2(&v12, "setTitle:", v4);

  if (sub_10002DA10() == 2)
  {
    v5 = objc_msgSend(v2, "customView");
    if (v5)
    {
      v6 = v5;
      v7 = objc_opt_self(UIButton);
      v8 = swift_dynamicCastObjCClass(v6, v7);
      if (v8)
      {
        v9 = (void *)v8;
        v10 = v6;
        v11 = objc_msgSend(v2, "title");
        objc_msgSend(v9, "setTitle:forState:", v11, 0);

      }
    }
  }
}

void sub_10006C6F0(char a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for ABSBarButtonItem();
  objc_msgSendSuper2(&v9, "setEnabled:", a1 & 1);
  if (sub_10002DA10() == 2)
  {
    v3 = objc_msgSend(v1, "customView");
    if (v3)
    {
      v4 = v3;
      v5 = objc_opt_self(UIButton);
      v6 = swift_dynamicCastObjCClass(v4, v5);
      if (v6)
      {
        v7 = (void *)v6;
        v8 = v4;
        objc_msgSend(v7, "setEnabled:", objc_msgSend(v1, "isEnabled"));

      }
    }
  }
}

id sub_10006C840()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ABSBarButtonItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ABSBarButtonItem()
{
  return objc_opt_self(_TtC8Business16ABSBarButtonItem);
}

id sub_10006C890()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___timeFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___timeFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___timeFormatter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    objc_msgSend(v4, "setDateStyle:", 0);
    objc_msgSend(v4, "setTimeStyle:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10006C958()
{
  return sub_10006CC10(&OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___dateLabel, (uint64_t (*)(void))sub_10006C9A0);
}

id sub_10006C9A0()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = sub_100070E68();
  objc_msgSend(v0, "setFont:", v1);

  if (sub_10002DA10() >= 2u)
    v2 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  else
    v2 = 0;
  objc_msgSend(v0, "setTextColor:", v2);

  objc_msgSend(v0, "setNumberOfLines:", 0);
  return v0;
}

id sub_10006CA90()
{
  return sub_10006CC10(&OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___conflictsLabel, (uint64_t (*)(void))sub_10006CAD8);
}

id sub_10006CAD8()
{
  id v0;
  id v1;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v0, "setFont:", v1);

  sub_100017F94();
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.57647, 0.57647, 0.59608, 1.0).super.isa;
  objc_msgSend(v0, "setTextColor:", isa);

  objc_msgSend(v0, "setNumberOfLines:", 0);
  objc_msgSend(v0, "setLineBreakMode:", 0);
  return v0;
}

id sub_10006CBFC()
{
  return sub_10006CC10(&OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___showMoreButton, (uint64_t (*)(void))sub_10006CC9C);
}

id sub_10006CC10(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2();
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_10006CC9C()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v0 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "linkColor");
  objc_msgSend(v0, "setTitleColor:forState:", v1, 0);

  v2 = objc_msgSend(v0, "titleLabel");
  if (v2)
  {
    v3 = v2;
    if (sub_10002DA10() == 2)
    {
      v4 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleSubheadline);
      v5 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 11.0);
      v6 = objc_msgSend(v4, "scaledFontForFont:", v5);

    }
    else
    {
      v6 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
    }
    objc_msgSend(v3, "setFont:", v6);

  }
  objc_msgSend(v0, "setContentHorizontalAlignment:", 1);
  return v0;
}

id sub_10006CE40()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  NSString v9;
  Swift::String v11;

  if (sub_10002DA10() >= 2u
    && (v0 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline)) != 0)
  {
    v1 = v0;
    v2 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
    v3 = objc_msgSend(v2, "titleLabel");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "setFont:", v1);

    }
  }
  else
  {
    v2 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  }
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11._object = (void *)0xE000000000000000;
  v6._object = (void *)0x80000001000B9930;
  v6._countAndFlagsBits = 0xD000000000000010;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v11._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v11)._object;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v2, "setTitle:forState:", v9, 0);

  return v2;
}

id sub_10006CFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  NSString v12;
  id v13;
  id v14;
  objc_super v16;

  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___timeFormatter] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___dateLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___conflictsLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___showMoreButton] = 0;
  v6 = OBJC_IVAR____TtC8Business20IMBDateTableViewCell_viewInCalendarButton;
  v7 = v3;
  *(_QWORD *)&v3[v6] = sub_10006CE40();
  v8 = OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotContainerView;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IMBTimeslotsContainerView(0)), "init");
  v9 = &v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotViewTopConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_conflictHeigthConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonHeigthConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonBottomConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonHeight] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonWidth] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData] = 0;
  v10 = &v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_urlHelper];
  *((_QWORD *)v10 + 3) = type metadata accessor for URLHelper(0);
  *((_QWORD *)v10 + 4) = &off_1000D8BD0;
  v11 = sub_100030FF8(v10);
  sub_10004EA08((uint64_t)v11);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___separatorView] = 0;

  if (a3)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v12 = 0;
  }
  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for IMBDateTableViewCell();
  v13 = objc_msgSendSuper2(&v16, "initWithStyle:reuseIdentifier:", a1, v12);

  v14 = v13;
  sub_10006D3A0();
  sub_10006D724();

  return v14;
}

id sub_10006D1F8(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___timeFormatter] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___dateLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___conflictsLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___showMoreButton] = 0;
  v3 = OBJC_IVAR____TtC8Business20IMBDateTableViewCell_viewInCalendarButton;
  v4 = v1;
  *(_QWORD *)&v1[v3] = sub_10006CE40();
  v5 = OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotContainerView;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IMBTimeslotsContainerView(0)), "init");
  v6 = &v4[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotViewTopConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_conflictHeigthConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonHeigthConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonBottomConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonHeight] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonWidth] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData] = 0;
  v7 = &v4[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_urlHelper];
  *((_QWORD *)v7 + 3) = type metadata accessor for URLHelper(0);
  *((_QWORD *)v7 + 4) = &off_1000D8BD0;
  v8 = sub_100030FF8(v7);
  sub_10004EA08((uint64_t)v8);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___separatorView] = 0;

  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for IMBDateTableViewCell();
  v9 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);
  v10 = v9;
  if (v9)
  {
    v11 = v9;
    sub_10006D3A0();
    sub_10006D724();

  }
  return v10;
}

uint64_t sub_10006D3A0()
{
  uint64_t isEscapingClosureAtFileLocation;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t result;
  _QWORD v22[5];
  uint64_t v23;

  if (sub_10002DA10() != 2)
    goto LABEL_4;
  if (qword_1000EBBF8 != -1)
    goto LABEL_6;
  while (1)
  {
    objc_msgSend((id)isEscapingClosureAtFileLocation, "setBackgroundColor:", qword_1000F8978);
LABEL_4:
    objc_msgSend((id)isEscapingClosureAtFileLocation, "setBounds:", 0.0, 0.0, 350.0, 10000.0);
    objc_msgSend((id)isEscapingClosureAtFileLocation, "setSelectionStyle:", 0);
    v1 = sub_10006CBFC();
    objc_msgSend(v1, "addTarget:action:forControlEvents:", isEscapingClosureAtFileLocation, "toggleMoreLess", 64);

    v2 = *(void **)(isEscapingClosureAtFileLocation
                  + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_viewInCalendarButton);
    objc_msgSend(v2, "addTarget:action:forControlEvents:", isEscapingClosureAtFileLocation, "viewInCalendar", 64);
    v3 = *(_QWORD *)(isEscapingClosureAtFileLocation
                   + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotContainerView);
    v4 = v3 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeSelectionDelegate;
    *(_QWORD *)(v4 + 8) = &off_1000D9728;
    swift_unknownObjectWeakAssign(v4, isEscapingClosureAtFileLocation);
    v5 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
    objc_msgSend(v5, "addSubview:", v3);

    v6 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
    v7 = sub_10006CBFC();
    objc_msgSend(v6, "addSubview:", v7);

    v8 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
    v9 = sub_10006C958();
    objc_msgSend(v8, "addSubview:", v9);

    v10 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
    v11 = sub_10006CA90();
    objc_msgSend(v10, "addSubview:", v11);

    v12 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
    objc_msgSend(v12, "addSubview:", v2);

    v13 = objc_msgSend((id)isEscapingClosureAtFileLocation, "contentView");
    v14 = sub_1000706D8();
    objc_msgSend(v13, "addSubview:", v14);

    v15 = (void *)objc_opt_self(UIView);
    v16 = swift_allocObject(&unk_1000D9938, 32, 7);
    *(_BYTE *)(v16 + 16) = 0;
    *(_QWORD *)(v16 + 24) = isEscapingClosureAtFileLocation;
    v17 = swift_allocObject(&unk_1000D9960, 32, 7);
    *(_QWORD *)(v17 + 16) = sub_100071364;
    *(_QWORD *)(v17 + 24) = v16;
    v22[4] = sub_100071368;
    v23 = v17;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_10006F67C;
    v22[3] = &unk_1000D9978;
    v18 = _Block_copy(v22);
    v19 = v23;
    v20 = (id)isEscapingClosureAtFileLocation;
    swift_retain(v17);
    swift_release(v19);
    objc_msgSend(v15, "performWithoutAnimation:", v18);
    _Block_release(v18);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v17, "", 117, 268, 40, 1);
    swift_release(v16);
    result = swift_release(v17);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_6:
    swift_once(&qword_1000EBBF8, sub_10002D65C);
  }
  return result;
}

void sub_10006D724()
{
  char *v0;
  id v1;
  int IsAccessibilityContentSizeCategory;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char v11;
  double v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  double v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  __objc2_class_ro *v43;
  int v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  double v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  char v79;
  double v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  void *v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  void *v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  double v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  void *v124;
  void *v125;
  id v126;
  id v127;
  void *v128;
  id v129;
  id v130;
  id v131;
  id v132;

  if (!UIApp)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v1 = objc_msgSend(UIApp, "preferredContentSizeCategory");
  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory();

  v3 = sub_10006CBFC();
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v4 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotContainerView];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = sub_10006C958();
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v6 = sub_10006CA90();
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v131 = *(id *)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_viewInCalendarButton];
  objc_msgSend(v131, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = sub_10006C958();
  v8 = objc_msgSend(v7, "topAnchor");

  v9 = objc_msgSend(v0, "contentView");
  v10 = objc_msgSend(v9, "topAnchor");

  v11 = sub_10002DA10();
  v12 = 20.0;
  if (v11 == 2)
    v12 = 0.0;
  v13 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v10, v12);

  objc_msgSend(v13, "setActive:", 1);
  v14 = sub_10006C958();
  v15 = objc_msgSend(v14, "leadingAnchor");

  v16 = objc_msgSend(v0, "layoutMarginsGuide");
  v17 = objc_msgSend(v16, "leadingAnchor");

  v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);
  objc_msgSend(v18, "setActive:", 1);

  if (sub_10002DA10() != 2)
  {
    v19 = sub_10006C958();
    v20 = objc_msgSend(v19, "heightAnchor");

    v21 = objc_msgSend(v20, "constraintGreaterThanOrEqualToConstant:", 22.0);
    objc_msgSend(v21, "setActive:", 1);

  }
  v22 = sub_10006C958();
  LODWORD(v23) = 1148846080;
  objc_msgSend(v22, "setContentCompressionResistancePriority:forAxis:", 1, v23);

  if (IsAccessibilityContentSizeCategory)
  {
    v24 = sub_10006C958();
    v25 = objc_msgSend(v24, "trailingAnchor");

    v26 = objc_msgSend(v0, "layoutMarginsGuide");
    v27 = objc_msgSend(v26, "trailingAnchor");

    v28 = objc_msgSend(v25, "constraintEqualToAnchor:", v27);
    objc_msgSend(v28, "setActive:", 1);

    v29 = sub_10006CBFC();
    v30 = objc_msgSend(v29, "topAnchor");

    v31 = sub_10006C958();
    v32 = objc_msgSend(v31, "bottomAnchor");

    v33 = objc_msgSend(v30, "constraintEqualToAnchor:", v32);
    objc_msgSend(v33, "setActive:", 1);

    v34 = sub_10006CBFC();
    v35 = objc_msgSend(v34, "leadingAnchor");

    v36 = objc_msgSend(v0, "layoutMarginsGuide");
    v37 = objc_msgSend(v36, "leadingAnchor");

    v38 = objc_msgSend(v35, "constraintEqualToAnchor:", v37);
    objc_msgSend(v38, "setActive:", 1);

    v39 = sub_10006CBFC();
    v40 = objc_msgSend(v39, "trailingAnchor");

    v41 = objc_msgSend(v0, "layoutMarginsGuide");
    v42 = objc_msgSend(v41, "trailingAnchor");

    sub_10002DA10();
    v43 = &BIABubbleOptionsiOSViewController;
  }
  else
  {
    v44 = sub_10002DA10();
    v45 = sub_10006CBFC();
    v46 = v45;
    if (v44 == 2)
    {
      v47 = objc_msgSend(v45, "firstBaselineAnchor");

      v48 = sub_10006C958();
      v49 = objc_msgSend(v48, "firstBaselineAnchor");
    }
    else
    {
      v47 = objc_msgSend(v45, "centerYAnchor");

      v48 = sub_10006C958();
      v49 = objc_msgSend(v48, "centerYAnchor");
    }
    v50 = v49;

    v51 = objc_msgSend(v47, "constraintEqualToAnchor:", v50);
    objc_msgSend(v51, "setActive:", 1);

    v52 = sub_10006CBFC();
    LODWORD(v53) = 1148846080;
    objc_msgSend(v52, "setContentHuggingPriority:forAxis:", 0, v53);

    v54 = sub_10006C958();
    v55 = objc_msgSend(v54, "trailingAnchor");

    v56 = sub_10006CBFC();
    v57 = objc_msgSend(v56, "leadingAnchor");

    v43 = &BIABubbleOptionsiOSViewController;
    v58 = objc_msgSend(v55, "constraintEqualToAnchor:constant:", v57, -8.0);

    objc_msgSend(v58, "setActive:", 1);
    v59 = sub_10006CBFC();
    v40 = objc_msgSend(v59, "trailingAnchor");

    v60 = objc_msgSend(v0, "layoutMarginsGuide");
    v42 = objc_msgSend(v60, "trailingAnchor");

    sub_10002DA10();
  }
  v61 = objc_msgSend(v40, (SEL)v43[52].base_prots, v42, 0.0);

  objc_msgSend(v61, "setActive:", 1);
  v62 = sub_10006CBFC();
  v63 = objc_msgSend(v62, "heightAnchor");

  v64 = objc_msgSend(v63, "constraintEqualToConstant:", 0.0);
  v65 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonHeight];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonHeight] = v64;

  v66 = sub_10006CBFC();
  v67 = objc_msgSend(v66, "widthAnchor");

  v68 = objc_msgSend(v67, "constraintEqualToConstant:", 0.0);
  v69 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonWidth];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonWidth] = v68;

  v70 = objc_msgSend(v4, "leadingAnchor");
  v71 = objc_msgSend(v0, "layoutMarginsGuide");
  v72 = objc_msgSend(v71, "leadingAnchor");

  sub_10002DA10();
  v73 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v72, 0.0);

  objc_msgSend(v73, "setActive:", 1);
  v74 = objc_msgSend(v4, "trailingAnchor");
  v75 = objc_msgSend(v0, "layoutMarginsGuide");
  v76 = objc_msgSend(v75, "trailingAnchor");

  sub_10002DA10();
  v77 = objc_msgSend(v74, "constraintEqualToAnchor:constant:", v76, 0.0);

  objc_msgSend(v77, "setActive:", 1);
  v78 = objc_msgSend(v4, "heightAnchor");
  v79 = sub_10002DA10();
  v80 = 55.0;
  if ((v79 & 0xFE) == 0)
    v80 = 68.0;
  v81 = objc_msgSend(v78, "constraintGreaterThanOrEqualToConstant:", v80);

  objc_msgSend(v81, "setActive:", 1);
  v82 = objc_msgSend(v4, "topAnchor");
  v83 = objc_msgSend(v0, "contentView");
  v84 = objc_msgSend(v83, "topAnchor");

  v85 = objc_msgSend(v82, "constraintEqualToAnchor:", v84);
  v86 = OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotViewTopConstraint;
  v87 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotViewTopConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotViewTopConstraint] = v85;

  v88 = *(void **)&v0[v86];
  if (!v88)
    goto LABEL_21;
  objc_msgSend(v88, "setActive:", 1);
  v89 = sub_10006CA90();
  v90 = objc_msgSend(v89, "topAnchor");

  v91 = objc_msgSend(v4, "bottomAnchor");
  v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

  objc_msgSend(v92, "setActive:", 1);
  v93 = sub_10006CA90();
  v94 = objc_msgSend(v93, "leadingAnchor");

  v95 = objc_msgSend(v0, "layoutMarginsGuide");
  v96 = objc_msgSend(v95, "leadingAnchor");

  v97 = objc_msgSend(v94, "constraintEqualToAnchor:", v96);
  objc_msgSend(v97, "setActive:", 1);

  v98 = sub_10006CA90();
  v99 = objc_msgSend(v98, "trailingAnchor");

  v100 = objc_msgSend(v0, "layoutMarginsGuide");
  v101 = objc_msgSend(v100, "trailingAnchor");

  v102 = objc_msgSend(v99, "constraintEqualToAnchor:", v101);
  objc_msgSend(v102, "setActive:", 1);

  v103 = objc_msgSend(v131, "heightAnchor");
  v104 = objc_msgSend(v103, "constraintEqualToConstant:", 0.0);

  v105 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_conflictHeigthConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_conflictHeigthConstraint] = v104;

  v106 = objc_msgSend(v131, "topAnchor");
  v107 = sub_10006CA90();
  v108 = objc_msgSend(v107, "bottomAnchor");

  v109 = objc_msgSend(v106, "constraintEqualToAnchor:", v108);
  objc_msgSend(v109, "setActive:", 1);

  v110 = objc_msgSend(v131, "leadingAnchor");
  v111 = objc_msgSend(v0, "layoutMarginsGuide");
  v112 = objc_msgSend(v111, "leadingAnchor");

  v113 = objc_msgSend(v110, "constraintEqualToAnchor:", v112);
  objc_msgSend(v113, "setActive:", 1);

  v114 = objc_msgSend(v131, "trailingAnchor");
  v115 = objc_msgSend(v0, "layoutMarginsGuide");
  v116 = objc_msgSend(v115, "trailingAnchor");

  v117 = objc_msgSend(v114, "constraintLessThanOrEqualToAnchor:", v116);
  objc_msgSend(v117, "setActive:", 1);

  LODWORD(v118) = 1148846080;
  objc_msgSend(v131, "setContentHuggingPriority:forAxis:", 0, v118);
  v119 = objc_msgSend(v131, "bottomAnchor");
  v120 = objc_msgSend(v0, "contentView");
  v121 = objc_msgSend(v120, "bottomAnchor");

  v122 = objc_msgSend(v119, "constraintEqualToAnchor:constant:", v121, -20.0);
  v123 = OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonBottomConstraint;
  v124 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonBottomConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonBottomConstraint] = v122;

  v125 = *(void **)&v0[v123];
  if (!v125)
  {
LABEL_22:
    __break(1u);
    return;
  }
  objc_msgSend(v125, "setActive:", 1);
  v126 = objc_msgSend(v131, "heightAnchor");
  v127 = objc_msgSend(v126, "constraintEqualToConstant:", 0.0);

  v128 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonHeigthConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonHeigthConstraint] = v127;

  if (sub_10002DA10() == 2)
  {
    v129 = sub_10006C958();
    v130 = objc_msgSend(v0, "layoutMarginsGuide");
    v132 = objc_msgSend(v0, "layoutMarginsGuide");
    sub_100070AEC(1, v129, v130, v132, v0, 4.0, 0.0, 0.0);

  }
  else
  {
    v132 = objc_msgSend(v0, "contentView");
    sub_100090A64(1, v132);
  }

}

uint64_t sub_10006E60C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  _BYTE *v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;

  v1 = v0;
  objc_msgSend(v0, "setNeedsLayout");
  objc_msgSend(v0, "layoutIfNeeded");
  v2 = &v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate]);
  if (Strong)
  {
    v4 = Strong;
    v5 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v5 + 24))(ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
  v7 = *(_BYTE **)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotContainerView];
  v8 = OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_expanded;
  v9 = v7[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_expanded];
  v10 = (void *)objc_opt_self(UIView);
  v11 = swift_allocObject(&unk_1000D9820, 32, 7);
  *(_BYTE *)(v11 + 16) = (v9 & 1) == 0;
  *(_QWORD *)(v11 + 24) = v1;
  v12 = swift_allocObject(&unk_1000D9848, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_100071364;
  *(_QWORD *)(v12 + 24) = v11;
  v31 = sub_100071368;
  v32 = v12;
  v27 = _NSConcreteStackBlock;
  v28 = 1107296256;
  v29 = sub_10006F67C;
  v30 = &unk_1000D9860;
  v13 = _Block_copy(&v27);
  v14 = v32;
  v15 = v1;
  swift_retain(v12);
  swift_release(v14);
  objc_msgSend(v10, "performWithoutAnimation:", v13);
  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v12, "", 117, 268, 40, 1);
  swift_release(v11);
  result = swift_release(v12);
  if ((v13 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v7[v8] == 1)
    {
      v7[v8] = 0;
      v17 = swift_allocObject(&unk_1000D98E8, 24, 7);
      *(_QWORD *)(v17 + 16) = v7;
      v31 = sub_100071398;
      v32 = v17;
      v27 = _NSConcreteStackBlock;
      v28 = 1107296256;
      v18 = &unk_1000D9900;
    }
    else
    {
      v7[v8] = 1;
      v19 = swift_allocObject(&unk_1000D9898, 24, 7);
      *(_QWORD *)(v19 + 16) = v7;
      v31 = sub_100071398;
      v32 = v19;
      v27 = _NSConcreteStackBlock;
      v28 = 1107296256;
      v18 = &unk_1000D98B0;
    }
    v29 = sub_100025AB0;
    v30 = v18;
    v20 = _Block_copy(&v27);
    v21 = v32;
    v22 = v7;
    swift_release(v21);
    objc_msgSend(v10, "animateWithDuration:animations:", v20, 0.3, v27, v28);
    _Block_release(v20);
    v23 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData];
    if (v23)
      *(_BYTE *)(v23 + 24) = v7[v8];
    sub_10006F69C();
    result = swift_unknownObjectWeakLoadStrong(v2);
    if (result)
    {
      v24 = result;
      v25 = *((_QWORD *)v2 + 1);
      v26 = swift_getObjectType(result);
      (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v26, v25);
      return swift_unknownObjectRelease(v24);
    }
  }
  return result;
}

uint64_t sub_10006E940()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  char *v50;
  _QWORD v51[3];
  uint64_t v52;

  v1 = (_QWORD *)type metadata accessor for Date(0);
  v2 = *(v1 - 1);
  __chkstk_darwin(v1, v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007D40(&qword_1000ED070);
  v8 = __chkstk_darwin(v6, v7);
  v50 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v46 - v11;
  v13 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  result = __chkstk_darwin(v17, v19);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData);
  if (!v23)
    return result;
  v24 = *(_QWORD *)(v23 + 32);
  if (!v24)
    return result;
  v47 = v22;
  v48 = v6;
  v49 = v1;
  v25 = (id)(v24 & 0xFFFFFFFFFFFFFF8);
  if (!((unint64_t)v24 >> 62))
  {
    v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v24);
    if (v26)
      goto LABEL_5;
    return swift_bridgeObjectRelease(v24);
  }
  if (v24 >= 0)
    v45 = v24 & 0xFFFFFFFFFFFFFF8;
  else
    v45 = v24;
  swift_bridgeObjectRetain(v24);
  if (!_CocoaArrayWrapper.endIndex.getter(v45))
    return swift_bridgeObjectRelease(v24);
LABEL_5:
  if ((v24 & 0xC000000000000001) != 0)
  {
    v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v24);
LABEL_8:
    v28 = v27;
    v25 = v49;
    swift_bridgeObjectRelease(v24);
    v46 = v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_urlHelper;
    sub_10003D1A8(v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_urlHelper, (uint64_t)v51);
    sub_100008FA4(v51, v52);
    v49 = v28;
    v29 = objc_msgSend(v28, "startDate");
    if (v29)
    {
      v30 = v29;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v29);

      (*(void (**)(char *, char *, id))(v2 + 32))(v12, v5, v25);
      v5 = *(char **)(v2 + 56);
      ((void (*)(char *, _QWORD, uint64_t, id))v5)(v12, 0, 1, v25);
      result = (*(uint64_t (**)(char *, uint64_t, id))(v2 + 48))(v12, 1, v25);
      if ((_DWORD)result != 1)
      {
        sub_10004EB94();
        (*(void (**)(char *, id))(v2 + 8))(v12, v25);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
        {
          v41 = (uint64_t)v47;
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v47, v16, v17);
          sub_100010C40(v51);
          sub_10003D1A8(v46, (uint64_t)v51);
          sub_100008FA4(v51, v52);
          sub_10004E4AC(v41, 1, 0, 0);

          (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v41, v17);
          return sub_100010C40(v51);
        }
        sub_10004AF88((uint64_t)v16);
        v31 = sub_100010C40(v51);
        if (qword_1000EBCB8 == -1)
          goto LABEL_12;
        goto LABEL_25;
      }
    }
    else
    {
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t, id))(v2 + 56))(v12, 1, 1, v25);
    }
    __break(1u);
    return result;
  }
  if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v27 = *(id *)(v24 + 32);
    goto LABEL_8;
  }
  __break(1u);
LABEL_25:
  v31 = swift_once(&qword_1000EBCB8, sub_100082798);
LABEL_12:
  v32 = qword_1000F8A90;
  v33 = static os_log_type_t.error.getter(v31);
  v34 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v35 = swift_allocObject(v34, 72, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1000AF070;
  v36 = v49;
  v37 = objc_msgSend(v49, "startDate");
  v38 = v50;
  if (v37)
  {
    v39 = v37;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v37);

    v40 = 0;
  }
  else
  {
    v40 = 1;
  }
  ((void (*)(char *, uint64_t, uint64_t, id))v5)(v38, v40, 1, v25);
  v42 = String.init<A>(describing:)(v38, v48);
  v44 = v43;
  *(_QWORD *)(v35 + 56) = &type metadata for String;
  *(_QWORD *)(v35 + 64) = sub_100009084();
  *(_QWORD *)(v35 + 32) = v42;
  *(_QWORD *)(v35 + 40) = v44;
  os_log(_:dso:log:type:_:)("IMBDateTableViewCell: Failed to generate calShow url for date %@", 64, 2, &_mh_execute_header, v32, v33, v35);

  return swift_bridgeObjectRelease(v35);
}

void sub_10006EDFC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  const char *v28;
  void *v29;
  void *v30;
  Class v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *object;
  NSString v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  double v47;
  void *v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char isEscapingClosureAtFileLocation;
  id v57;
  double v58;
  double v59;
  id v60;
  double v61;
  double v62;
  uint64_t *v63;
  id v64;
  double v65;
  double v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[4];
  int IsAccessibilityContentSizeCategory;
  void **aBlock;
  uint64_t v75;
  uint64_t (*v76)(uint64_t);
  void *v77;
  void *v78;
  uint64_t v79;
  char v80[24];
  char v81[24];
  char v82[24];
  char v83[32];

  v1 = v0;
  v2 = sub_100007D40(&qword_1000EC5F0);
  v4 = __chkstk_darwin(v2, v3);
  v6 = &v72[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4, v7);
  v9 = &v72[-v8];
  v10 = OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData;
  v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData];
  if (v11)
  {
    if (!UIApp)
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v12 = objc_msgSend(UIApp, "preferredContentSizeCategory", swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData]).n128_f64[0]);
    IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory();

    v13 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    sub_100070FCC(*(_QWORD *)(v11 + 16) + OBJC_IVAR____TtC8Business15IMBProposedDate_date);
    v15 = v14;
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
    objc_msgSend(v13, "setDateFormat:", v16);

    v17 = *(_QWORD *)&v1[v10];
    if (v17)
    {
      v18 = v17 + OBJC_IVAR____TtC8Business20IMBTableViewCellData_timezone;
      swift_beginAccess(v17 + OBJC_IVAR____TtC8Business20IMBTableViewCellData_timezone, v83, 0, 0);
      sub_100014518(v18, (uint64_t)v9);
      v19 = type metadata accessor for TimeZone(0);
      v20 = *(_QWORD *)(v19 - 8);
      isa = 0;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19) != 1)
      {
        isa = TimeZone._bridgeToObjectiveC()().super.isa;
        (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v9, v19);
      }
    }
    else
    {
      v22 = type metadata accessor for TimeZone(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
      isa = 0;
    }
    objc_msgSend(v13, "setTimeZone:", isa);

    v23 = (uint64_t *)(*(_QWORD *)(v11 + 16) + OBJC_IVAR____TtC8Business15IMBProposedDate_timeslots);
    swift_beginAccess(v23, v82, 0, 0);
    v24 = *v23;
    if ((unint64_t)v24 >> 62)
    {
      if (v24 < 0)
        v69 = v24;
      else
        v69 = v24 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v24);
      v25 = _CocoaArrayWrapper.endIndex.getter(v69);
      swift_bridgeObjectRelease(v24);
    }
    else
    {
      v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v26 = sub_10006CBFC();
    v27 = v26;
    v28 = "setHidden:";
    if (v25 <= 3)
    {
      objc_msgSend(v26, "setHidden:", 1);

      v29 = *(void **)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonHeight];
      if (!v29)
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      objc_msgSend(v29, "setActive:", 1);
      v26 = *(id *)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonWidth];
      if (v26)
      {
LABEL_15:
        objc_msgSend(v26, "setActive:", v25 < 4);
        v31 = Date._bridgeToObjectiveC()().super.isa;
        v32 = objc_msgSend(v13, "stringFromDate:", v31);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v34 = v33;

        v35 = sub_10006C958();
        if (sub_10002DA10() == 2)
        {
          object = String.uppercased()()._object;
          swift_bridgeObjectRelease(v34);
          v34 = object;
        }
        v37 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v34);
        objc_msgSend(v35, "setText:", v37);

        v38 = *(_BYTE **)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotContainerView];
        v39 = v11 + OBJC_IVAR____TtC8Business20IMBTableViewCellData_timezone;
        swift_beginAccess(v11 + OBJC_IVAR____TtC8Business20IMBTableViewCellData_timezone, v81, 0, 0);
        sub_100014518(v39, (uint64_t)v6);
        sub_1000714DC((uint64_t)v6);
        v40 = (uint64_t *)(*(_QWORD *)(v11 + 16) + OBJC_IVAR____TtC8Business15IMBProposedDate_timeslots);
        swift_beginAccess(v40, v80, 0, 0);
        v41 = *v40;
        v42 = *(_QWORD *)&v38[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslots];
        *(_QWORD *)&v38[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslots] = v41;
        swift_bridgeObjectRetain(v41);
        swift_bridgeObjectRelease(v42);
        sub_100071F2C();
        v43 = *(_QWORD *)&v1[v10];
        if (v43)
          v44 = *(unsigned __int8 *)(v43 + 24);
        else
          v44 = 0;
        v38[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_expanded] = v44;
        v45 = (void *)objc_opt_self(UIView);
        v46 = swift_allocObject(&unk_1000D9758, 24, 7);
        *(_QWORD *)(v46 + 16) = v38;
        v78 = sub_1000712C4;
        v79 = v46;
        aBlock = _NSConcreteStackBlock;
        *(_QWORD *)&v47 = 1107296256;
        v75 = 1107296256;
        v76 = sub_100025AB0;
        v77 = &unk_1000D9770;
        v48 = _Block_copy(&aBlock);
        v49 = v79;
        v50 = v38;
        swift_release(v49);
        objc_msgSend(v45, "animateWithDuration:animations:", v48, 0.3);
        _Block_release(v48);
        v51 = swift_allocObject(&unk_1000D97A8, 32, 7);
        *(_BYTE *)(v51 + 16) = v44;
        *(_QWORD *)(v51 + 24) = v1;
        v52 = swift_allocObject(&unk_1000D97D0, 32, 7);
        *(_QWORD *)(v52 + 16) = sub_1000712E4;
        *(_QWORD *)(v52 + 24) = v51;
        v78 = sub_100071300;
        v79 = v52;
        aBlock = _NSConcreteStackBlock;
        v75 = 1107296256;
        v76 = sub_10006F67C;
        v77 = &unk_1000D97E8;
        v53 = _Block_copy(&aBlock);
        v54 = v79;
        v55 = v1;
        swift_retain(v52);
        swift_release(v54);
        objc_msgSend(v45, "performWithoutAnimation:", v53);
        _Block_release(v53);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v52, "", 117, 268, 40, 1);
        swift_release(v51);
        swift_release(v52);
        if ((isEscapingClosureAtFileLocation & 1) != 0)
        {
          __break(1u);
        }
        else
        {
          objc_msgSend(v55, "setNeedsLayout");
          objc_msgSend(v55, "layoutIfNeeded");
          v57 = sub_10006C958();
          objc_msgSend(v57, "frame");
          v59 = v58;

          v60 = sub_10006C958();
          objc_msgSend(v60, "frame");
          v62 = v61;

          v47 = v59 + v62;
          if (sub_10002DA10() == 2)
            v47 = v47 + 5.0;
          if (!IsAccessibilityContentSizeCategory)
            goto LABEL_27;
          v63 = (uint64_t *)(*(_QWORD *)(v11 + 16) + OBJC_IVAR____TtC8Business15IMBProposedDate_timeslots);
          swift_beginAccess(v63, &aBlock, 0, 0);
          v44 = *v63;
          if (!((unint64_t)v44 >> 62))
          {
            if (*(uint64_t *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10) < 4)
              goto LABEL_27;
            goto LABEL_26;
          }
        }
        if (v44 < 0)
          v70 = v44;
        else
          v70 = v44 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v44);
        v71 = _CocoaArrayWrapper.endIndex.getter(v70);
        swift_bridgeObjectRelease(v44);
        if (v71 >= 4)
        {
LABEL_26:
          v64 = sub_10006CBFC();
          objc_msgSend(v64, "bounds");
          v66 = v65;

          v47 = v47 + v66;
        }
LABEL_27:
        v67 = *(void **)&v55[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotViewTopConstraint];
        if (v67)
        {
          v68 = v67;
          objc_msgSend(v68, "setConstant:", v47);

          swift_release(v11);
          return;
        }
        goto LABEL_41;
      }
      __break(1u);
    }
    objc_msgSend(v26, v28, 0);

    v30 = *(void **)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonHeight];
    if (!v30)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    objc_msgSend(v30, "setActive:", 0);
    v26 = *(id *)&v1[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_showMoreButtonWidth];
    if (!v26)
    {
LABEL_44:
      __break(1u);
      return;
    }
    goto LABEL_15;
  }
}

void sub_10006F574(char a1)
{
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  void *object;
  unint64_t v9;
  NSString v10;

  v2 = sub_10006CBFC();
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((a1 & 1) != 0)
  {
    v4 = 0xE900000000000053;
    v9 = 0xE000000000000000;
    v5 = 0x53454C5F574F4853;
  }
  else
  {
    v9 = 0xE000000000000000;
    v5 = 0x524F4D5F574F4853;
    v4 = 0xE900000000000045;
  }
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v7 = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, (Swift::String_optional)0, (NSBundle)v3, v6, *(Swift::String *)(&v9 + -8))._object;

  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v2, "setTitle:forState:", v10, 0);

}

uint64_t sub_10006F67C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_10006F69C()
{
  unint64_t v0;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSArray v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  id v29;
  void *v30;
  double v31;
  id v32;
  void *v33;
  void (*v34)(void);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  double v40;
  void (*v41)(char *, uint64_t);
  id v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  double v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  char *v56;
  unint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  void *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  void *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;

  v91 = type metadata accessor for Date(0);
  isUniquelyReferenced_nonNull_native = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91, v2);
  v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007D40(&qword_1000ED070);
  v7 = __chkstk_darwin(v5, v6);
  v83 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  v90 = (char *)&v74 - v10;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData);
  v80 = v0;
  if (!v11)
    goto LABEL_61;
  v12 = *(_QWORD *)(v11 + 32);
  if (!v12)
    goto LABEL_61;
  v13 = v12 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v12 >> 62)
    goto LABEL_55;
  v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v12);
  if (!v14)
  {
LABEL_59:
    v68 = v12;
    goto LABEL_60;
  }
  while (1)
  {
    v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotContainerView);
    v16 = *(_QWORD *)(v15 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslots);
    if (!v16)
      goto LABEL_59;
    v89 = isUniquelyReferenced_nonNull_native;
    type metadata accessor for IMBProposedTimeslot(0);
    swift_bridgeObjectRetain(v16);
    v17.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v16);
    v18 = *(unsigned __int8 *)(v15 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_expanded);
    v19 = (uint64_t)-[objc_class count](v17.super.isa, "count");
    v20 = 3;
    if (v19 < 3)
      v20 = v19;
    v21 = v18 ? v19 : v20;
    v22 = -[objc_class subarrayWithRange:](v17.super.isa, "subarrayWithRange:", 0, v21);
    v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, (char *)&type metadata for Any + 8);

    v24 = (unint64_t)sub_1000709F4(v23);
    swift_bridgeObjectRelease(v23);
    if (!v24)
      goto LABEL_59;
    v25 = v24 & 0xFFFFFFFFFFFFFF8;
    v76 = v24 & 0xFFFFFFFFFFFFFF8;
    v77 = v24;
    if (v24 >> 62)
    {
      v72 = v77;
      if (v77 >= 0)
        v73 = v25;
      else
        v73 = v77;
      swift_bridgeObjectRetain(v77);
      v26 = _CocoaArrayWrapper.endIndex.getter(v73);
      swift_bridgeObjectRelease(v72);
      isUniquelyReferenced_nonNull_native = v89;
      if (!v26)
      {
LABEL_67:
        swift_bridgeObjectRelease(v12);
        v68 = v77;
LABEL_60:
        swift_bridgeObjectRelease(v68);
LABEL_61:
        v66 = &_swiftEmptyDictionarySingleton;
LABEL_62:
        v69 = swift_bridgeObjectRetain(v66);
        v70 = sub_1000A2D78(v69);
        swift_bridgeObjectRelease(v66);
        sub_10006FDD0((uint64_t)v70);
        swift_bridgeObjectRelease(v66);
        return swift_release(v70);
      }
    }
    else
    {
      v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      isUniquelyReferenced_nonNull_native = v89;
      if (!v26)
        goto LABEL_67;
    }
    v0 = 0;
    v79 = v77 & 0xC000000000000001;
    v88 = v12 & 0xC000000000000001;
    v82 = &_swiftEmptyDictionarySingleton;
    v75 = v77 + 32;
    v86 = v14;
    v87 = v12;
    v78 = v26;
LABEL_16:
    if (v79)
    {
      v85 = specialized _ArrayBuffer._getElementSlowPath(_:)(v0, v77);
      v27 = __OFADD__(v0++, 1);
      if (!v27)
        break;
      goto LABEL_53;
    }
    v13 = *(_QWORD *)(v76 + 16);
    if (v0 >= v13)
      goto LABEL_54;
    v85 = *(_QWORD *)(v75 + 8 * v0);
    swift_retain(v85);
    v27 = __OFADD__(v0++, 1);
    if (!v27)
      break;
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    if (v12 >= 0)
      v67 = v13;
    else
      v67 = v12;
    swift_bridgeObjectRetain_n(v12, 2);
    v14 = _CocoaArrayWrapper.endIndex.getter(v67);
    swift_bridgeObjectRelease(v12);
    if (!v14)
      goto LABEL_59;
  }
  v81 = v0;
  v92 = v85 + OBJC_IVAR____TtC8Business19IMBProposedTimeslot_startTime;
  v84 = OBJC_IVAR____TtC8Business19IMBProposedTimeslot_duration;
  swift_bridgeObjectRetain(v12);
  v28 = 4;
  while (1)
  {
    v0 = v28 - 4;
    if (v88)
      v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28 - 4, v12);
    else
      v29 = *(id *)(v12 + 8 * v28);
    v30 = v29;
    v13 = v28 - 3;
    if (__OFADD__(v0, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v93 = v28 - 3;
    v31 = Date.timeIntervalSince1970.getter(v29);
    v32 = objc_msgSend(v30, "endDate");
    if (!v32)
      break;
    v33 = v32;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v32);

    v34 = *(void (**)(void))(isUniquelyReferenced_nonNull_native + 32);
    v35 = v91;
    v36 = v4;
    v37 = v90;
    v34();
    v12 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v12)(v37, 0, 1, v35);
    v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 48);
    v39 = v38(v37, 1, v35);
    if ((_DWORD)v39 == 1)
      goto LABEL_69;
    v40 = Date.timeIntervalSince1970.getter(v39);
    v41 = *(void (**)(char *, uint64_t))(isUniquelyReferenced_nonNull_native + 8);
    v41(v37, v35);
    if (v31 > v40)
    {

      isUniquelyReferenced_nonNull_native = v89;
LABEL_33:
      v4 = v36;
      goto LABEL_24;
    }
    v42 = objc_msgSend(v30, "startDate");
    if (!v42)
      goto LABEL_70;
    v43 = v42;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v42);

    v44 = v83;
    v45 = v91;
    ((void (*)(char *, char *, uint64_t))v34)(v83, v4, v91);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v12)(v44, 0, 1, v45);
    v46 = v38(v44, 1, v45);
    if ((_DWORD)v46 == 1)
      goto LABEL_71;
    v47 = Date.timeIntervalSince1970.getter(v46);
    v48 = ((uint64_t (*)(char *, uint64_t))v41)(v44, v45);
    v49 = Date.timeIntervalSince1970.getter(v48);
    v50 = Date.init(timeIntervalSince1970:)(v49 + (double)*(uint64_t *)(v85 + v84));
    v51 = Date.timeIntervalSince1970.getter(v50);
    v41(v4, v45);
    if (v47 <= v51 && (objc_msgSend(v30, "isAllDay") & 1) == 0)
    {
      v52 = objc_msgSend(v30, "calendarItemIdentifier");
      v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
      v12 = v54;

      v55 = v30;
      v0 = (unint64_t)v82;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v82);
      v94 = (_QWORD *)v0;
      v57 = sub_10004F068(v53, v12);
      v13 = *(_QWORD *)(v0 + 16);
      v58 = (v56 & 1) == 0;
      v59 = v13 + v58;
      if (__OFADD__(v13, v58))
        goto LABEL_51;
      v4 = v56;
      if (*(_QWORD *)(v0 + 24) >= v59)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v0 = (unint64_t)&v94;
          sub_10003B0D8();
        }
      }
      else
      {
        sub_10003954C(v59, isUniquelyReferenced_nonNull_native);
        v0 = (unint64_t)v94;
        v60 = sub_10004F068(v53, v12);
        if ((v4 & 1) != (v61 & 1))
          goto LABEL_72;
        v57 = v60;
      }
      isUniquelyReferenced_nonNull_native = v89;
      v62 = v94;
      v82 = v94;
      if ((v4 & 1) != 0)
      {
        v63 = v94[7];

        *(_QWORD *)(v63 + 8 * v57) = v55;
      }
      else
      {
        v94[(v57 >> 6) + 8] |= 1 << v57;
        v64 = (uint64_t *)(v62[6] + 16 * v57);
        *v64 = v53;
        v64[1] = v12;
        *(_QWORD *)(v62[7] + 8 * v57) = v55;
        v65 = v62[2];
        v27 = __OFADD__(v65, 1);
        v13 = v65 + 1;
        if (v27)
          goto LABEL_52;
        v62[2] = v13;
        swift_bridgeObjectRetain(v12);
      }

      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(0x8000000000000000);
      goto LABEL_33;
    }

    isUniquelyReferenced_nonNull_native = v89;
LABEL_24:
    ++v28;
    v12 = v87;
    if (v93 == v86)
    {
      swift_release(v85);
      swift_bridgeObjectRelease(v12);
      v0 = v81;
      if (v81 != v78)
        goto LABEL_16;
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v77);
      v66 = v82;
      goto LABEL_62;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 56))(v90, 1, 1, v91);
LABEL_69:
  __break(1u);
LABEL_70:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v12)(v83, 1, 1, v91);
LABEL_71:
  __break(1u);
LABEL_72:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_10006FDD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  Class v33;
  void (*v34)(char *, uint64_t);
  id v35;
  char *v36;
  char *v37;
  id v38;
  id v39;
  void *v40;
  char *v41;
  Class v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSString v66;
  id v67;
  id v68;
  Swift::String v69;
  Swift::String v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  char v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  NSString v87;
  void *v88;
  void *v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v95;
  id v96;
  uint64_t v97;
  char *v98;
  char v99[24];
  Swift::String v100;
  Swift::String v101;

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v98 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007D40(&qword_1000ED070);
  v9 = __chkstk_darwin(v7, v8);
  v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  v14 = (char *)&v92 - v13;
  v15 = sub_100007D40(&qword_1000EC5F0);
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!((unint64_t)a1 >> 62))
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_34:
    v86 = sub_10006CA90();
    v87 = String._bridgeToObjectiveC()();
    objc_msgSend(v86, "setText:", v87);

    v88 = *(void **)(v1 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonHeigthConstraint);
    if (v88)
    {
      objc_msgSend(v88, "setActive:", 1);
      v89 = *(void **)(v1 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_conflictHeigthConstraint);
      if (v89)
      {
        objc_msgSend(v89, "setActive:", 1);
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_viewInCalendarButton), "setAlpha:", 0.0);
        v90 = sub_10006CA90();
        objc_msgSend(v90, "setAlpha:", 0.0);

        v91 = *(void **)(v1 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonBottomConstraint);
        if (v91)
        {
          objc_msgSend(v91, "setConstant:", -12.0);
          return;
        }
        goto LABEL_49;
      }
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (a1 < 0)
    v84 = a1;
  else
    v84 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v85 = _CocoaArrayWrapper.endIndex.getter(v84);
  swift_bridgeObjectRelease(a1);
  if (!v85)
    goto LABEL_34;
LABEL_3:
  v95 = (unint64_t)a1 >> 62;
  v19 = sub_10006C890();
  v97 = v1;
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData);
  if (v20)
  {
    v21 = v20 + OBJC_IVAR____TtC8Business20IMBTableViewCellData_timezone;
    swift_beginAccess(v20 + OBJC_IVAR____TtC8Business20IMBTableViewCellData_timezone, v99, 0, 0);
    sub_100014518(v21, (uint64_t)v18);
    v22 = type metadata accessor for TimeZone(0);
    v23 = *(_QWORD *)(v22 - 8);
    isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22) != 1)
    {
      isa = TimeZone._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v22);
    }
  }
  else
  {
    v25 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v18, 1, 1, v25);
    isa = 0;
  }
  objc_msgSend(v19, "setTimeZone:", isa);

  if ((a1 & 0xC000000000000001) != 0)
  {
    v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_40;
    }
    v26 = *(id *)(a1 + 32);
  }
  v27 = sub_10006C890();
  v96 = v26;
  v28 = objc_msgSend(v26, "startDate");
  if (!v28)
  {
LABEL_40:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v14, 1, 1, v3);
    goto LABEL_41;
  }
  v29 = v28;
  v30 = v98;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

  v31 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v31(v14, v30, v3);
  v94 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v94(v14, 0, 1, v3);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v32(v14, 1, v3) == 1)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v33 = Date._bridgeToObjectiveC()().super.isa;
  v34 = *(void (**)(char *, uint64_t))(v4 + 8);
  v34(v14, v3);
  v35 = objc_msgSend(v27, "stringFromDate:", v33);

  v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v37 = v36;

  v38 = sub_10006C890();
  v39 = objc_msgSend(v96, "endDate");
  if (!v39)
  {
LABEL_42:
    v94(v11, 1, 1, v3);
    goto LABEL_43;
  }
  v40 = v39;
  v41 = v98;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v39);

  v31(v11, v41, v3);
  v94(v11, 0, 1, v3);
  if (v32(v11, 1, v3) == 1)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v42 = Date._bridgeToObjectiveC()().super.isa;
  v34(v11, v3);
  v43 = objc_msgSend(v38, "stringFromDate:", v42);

  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v46 = v45;

  if (v95)
  {
    if (a1 < 0)
      v48 = a1;
    else
      v48 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v47 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v47 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v49 = v97;
  if (v47 == 1)
  {
    v95 = v44;
    v98 = v37;
    v50 = sub_10006CA90();
    v51 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v100._object = (void *)0xE000000000000000;
    v52._object = (void *)0x80000001000B98A0;
    v52._countAndFlagsBits = 0xD000000000000010;
    v53._countAndFlagsBits = 0;
    v53._object = (void *)0xE000000000000000;
    v100._countAndFlagsBits = 0;
    v54 = NSLocalizedString(_:tableName:bundle:value:comment:)(v52, (Swift::String_optional)0, (NSBundle)v51, v53, v100);

    v55 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v56 = swift_allocObject(v55, 152, 7);
    *(_OWORD *)(v56 + 16) = xmmword_1000AF280;
    v57 = objc_msgSend(v96, "title");
    if (!v57)
    {
LABEL_50:
      __break(1u);
      return;
    }
    v58 = v57;
    v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
    v61 = v60;

    *(_QWORD *)(v56 + 56) = &type metadata for String;
    v62 = sub_100009084();
    *(_QWORD *)(v56 + 32) = v59;
    *(_QWORD *)(v56 + 40) = v61;
    *(_QWORD *)(v56 + 96) = &type metadata for String;
    *(_QWORD *)(v56 + 104) = v62;
    v63 = v93;
    *(_QWORD *)(v56 + 64) = v62;
    *(_QWORD *)(v56 + 72) = v63;
    *(_QWORD *)(v56 + 80) = v98;
    *(_QWORD *)(v56 + 136) = &type metadata for String;
    *(_QWORD *)(v56 + 144) = v62;
    *(_QWORD *)(v56 + 112) = v95;
    *(_QWORD *)(v56 + 120) = v46;
    static String.localizedStringWithFormat(_:_:)(v54._countAndFlagsBits, v54._object, v56);
    v65 = v64;
    swift_bridgeObjectRelease(v54._object);
    swift_bridgeObjectRelease(v56);
    v66 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v65);
    objc_msgSend(v50, "setText:", v66);
    v49 = v97;
  }
  else
  {
    swift_bridgeObjectRelease(v46);
    v67 = sub_10006CA90();
    v68 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v69._countAndFlagsBits = 0xD00000000000001ALL;
    v101._object = (void *)0xE000000000000000;
    v69._object = (void *)0x80000001000B9880;
    v70._countAndFlagsBits = 0;
    v70._object = (void *)0xE000000000000000;
    v101._countAndFlagsBits = 0;
    v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v69, (Swift::String_optional)0, (NSBundle)v68, v70, v101);

    v72 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v73 = swift_allocObject(v72, 112, 7);
    *(_OWORD *)(v73 + 16) = xmmword_1000ADFC0;
    *(_QWORD *)(v73 + 56) = &type metadata for Int;
    *(_QWORD *)(v73 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v73 + 32) = v47;
    *(_QWORD *)(v73 + 96) = &type metadata for String;
    *(_QWORD *)(v73 + 104) = sub_100009084();
    *(_QWORD *)(v73 + 72) = v93;
    *(_QWORD *)(v73 + 80) = v37;
    static String.localizedStringWithFormat(_:_:)(v71._countAndFlagsBits, v71._object, v73);
    v75 = v74;
    swift_bridgeObjectRelease(v71._object);
    swift_bridgeObjectRelease(v73);
    v66 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v75);
    v50 = v67;
    objc_msgSend(v67, "setText:", v66);
  }

  v76 = *(void **)(v49 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonHeigthConstraint);
  v77 = v96;
  if (!v76)
    goto LABEL_44;
  objc_msgSend(v76, "setActive:", 0);
  v78 = *(void **)(v49 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_conflictHeigthConstraint);
  if (!v78)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  objc_msgSend(v78, "setActive:", 0);
  objc_msgSend(*(id *)(v49 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_viewInCalendarButton), "setAlpha:", 1.0);
  v79 = sub_10006CA90();
  objc_msgSend(v79, "setAlpha:", 1.0);

  v80 = *(void **)(v49 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_calendarButtonBottomConstraint);
  if (!v80)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v81 = v80;
  v82 = sub_10002DA10();
  v83 = -20.0;
  if (v82 == 2)
    v83 = -10.0;
  objc_msgSend(v81, "setConstant:", v83);

}

id sub_1000706D8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell____lazy_storage___separatorView);
  }
  else
  {
    v4 = type metadata accessor for SeparatorView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_10007074C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBDateTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBDateTableViewCell()
{
  return objc_opt_self(_TtC8Business20IMBDateTableViewCell);
}

uint64_t sub_1000708B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate;
  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_100070924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate;
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

uint64_t sub_10007097C()
{
  char *v0;
  char *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  objc_msgSend(v0, "setNeedsLayout");
  objc_msgSend(v0, "layoutIfNeeded");
  v1 = &v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate];
  result = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate]);
  if (result)
  {
    v3 = result;
    v4 = *((_QWORD *)v1 + 1);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(v4 + 24))(ObjectType, v4);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

_QWORD *sub_1000709F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[32];
  _QWORD *v11;

  v11 = _swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v2);
  if (!v2)
    return v11;
  for (i = a1 + 32; ; i += 32)
  {
    sub_100009C74(i, (uint64_t)v10);
    v4 = type metadata accessor for IMBProposedTimeslot(0);
    if (!swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v4, 6))
      break;
    v5 = v9;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    v6 = v11[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
    v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v5);
    specialized ContiguousArray._endMutation()(v7);
    if (!--v2)
      return v11;
  }
  v9 = 0;
  swift_release(v11);
  swift_release(v9);
  return 0;
}

void sub_100070AEC(char a1, void *a2, void *a3, void *a4, void *a5, double a6, double a7, double a8)
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  double v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;

  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = sub_1000706D8();

  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = v18;
  v21 = sub_1000706D8();

  v22 = objc_msgSend(v21, "heightAnchor");
  v23 = objc_msgSend(v20, "traitCollection");
  objc_msgSend(v23, "displayScale");
  v25 = v24;

  if (v25 <= 0.0)
  {
    v26 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v26, "scale");
    v25 = v27;

    if (v25 <= 0.0)
      v25 = 1.0;
  }
  v28 = objc_msgSend(v22, "constraintEqualToConstant:", 1.0 / v25);

  objc_msgSend(v28, "setActive:", 1);
  v29 = v20;
  v30 = sub_1000706D8();

  if ((a1 & 1) != 0)
  {
    v31 = objc_msgSend(v30, "bottomAnchor");

    v32 = objc_msgSend(v15, "bottomAnchor");
  }
  else
  {
    v31 = objc_msgSend(v30, "topAnchor");

    v32 = objc_msgSend(v15, "topAnchor");
  }
  v33 = v32;
  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, a6);

  objc_msgSend(v34, "setActive:", 1);
  v35 = v29;
  v36 = sub_1000706D8();

  v37 = objc_msgSend(v36, "leadingAnchor");
  v38 = objc_msgSend(v16, "leadingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, a7);

  objc_msgSend(v39, "setActive:", 1);
  v40 = v35;
  v41 = sub_1000706D8();

  v42 = objc_msgSend(v41, "trailingAnchor");
  v43 = objc_msgSend(v17, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, -a8);

  objc_msgSend(v44, "setActive:", 1);
}

id sub_100070E68()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  id v6;
  id v7;
  id v8;

  if (sub_10002DA10() > 1u)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleSubheadline);
    v7 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 11.0, UIFontWeightSemibold);
    v8 = objc_msgSend(v6, "scaledFontForFont:", v7);

    return v8;
  }
  else
  {
    v0 = (void *)objc_opt_self(UIFont);
    v1 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleTitle3);
    v2 = objc_msgSend(v1, "fontDescriptor");

    objc_msgSend(v2, "pointSize");
    v4 = v3;

    return objc_msgSend(v0, "systemFontOfSize:weight:", v4, UIFontWeightSemibold);
  }
}

uint64_t sub_100070FCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  id v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a1;
  v1 = sub_100007D40((uint64_t *)&unk_1000F0880);
  __chkstk_darwin(v1, v2);
  v35 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Calendar.Component(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Calendar(0);
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  v15 = __chkstk_darwin(v13, v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v15);
  v18 = enum case for Calendar.Component.year(_:);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v20 = v19(v12, enum case for Calendar.Component.year(_:), v8);
  Date.init()(v20);
  v21 = Calendar.component(_:from:)(v12, v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v34);
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v8);
  v19(v12, v18, v8);
  v23 = Calendar.component(_:from:)(v12, v36);
  v22(v12, v8);
  v24 = v35;
  if (v21 == v23)
    v25 = 0x4D4D202C45454545;
  else
    v25 = 0xD000000000000012;
  if (v21 == v23)
    v26 = 0xEC00000064204D4DLL;
  else
    v26 = 0x80000001000B98C0;
  v27 = String._bridgeToObjectiveC()();
  Calendar.locale.getter();
  v28 = type metadata accessor for Locale(0);
  v29 = *(_QWORD *)(v28 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v24, 1, v28) != 1)
  {
    isa = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v28);
  }
  v31 = objc_msgSend((id)objc_opt_self(NSDateFormatter), "dateFormatFromTemplate:options:locale:", v27, 0, isa);

  if (v31)
  {
    swift_bridgeObjectRelease(v26);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);

  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v38);
  return v25;
}

uint64_t sub_1000712A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000712C4()
{
  return sub_100071608();
}

uint64_t sub_1000712CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000712DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000712E4()
{
  uint64_t v0;

  sub_10006F574(*(_BYTE *)(v0 + 16));
}

uint64_t sub_1000712F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100071300()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100071320()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100071344()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100071354()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t (*sub_100071494(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1000714DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  _BYTE v14[24];

  v3 = sub_100007D40(&qword_1000EC5F0);
  __chkstk_darwin(v3, v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = v1 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timezone;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timezone, v14, 33, 0);
  sub_100073704(a1, v7);
  swift_endAccess(v14);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_dateFormatter);
  sub_100014518(v7, (uint64_t)v6);
  v9 = type metadata accessor for TimeZone(0);
  v10 = *(_QWORD *)(v9 - 8);
  isa = 0;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
  {
    isa = TimeZone._bridgeToObjectiveC()().super.isa;
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v6, v9);
  }
  objc_msgSend(v8, "setTimeZone:", isa);

  return sub_10007374C(a1);
}

id sub_100071608()
{
  return sub_100072E78();
}

char *sub_100071628()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char *v11;
  NSString v12;
  id v13;
  objc_super v15;

  v1 = OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotsView;
  v2 = objc_allocWithZone((Class)UIView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_dateFormatter;
  v5 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v5, "setDateStyle:", 0);
  objc_msgSend(v5, "setTimeStyle:", 1);
  *(_QWORD *)&v3[v4] = v5;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViewHeightConstraint] = 0;
  v3[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_areConflictsShowing] = 1;
  v6 = &v3[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeSelectionDelegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslots] = 0;
  v7 = &v3[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timezone];
  v8 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v3[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_expanded] = 0;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for IMBTimeslotsContainerView(0);
  v9 = (char *)objc_msgSendSuper2(&v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = *(void **)&v9[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotsView];
  v11 = v9;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setAccessibilityIdentifier:", v12);

  v13 = objc_msgSend(v10, "layer");
  objc_msgSend(v13, "setMasksToBounds:", 1);

  objc_msgSend(v11, "addSubview:", v10);
  sub_100071A78();

  return v11;
}

char *sub_100071848(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  NSString v15;
  id v16;
  objc_super v18;

  v3 = OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotsView;
  v4 = objc_allocWithZone((Class)UIView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_dateFormatter;
  v7 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v7, "setDateStyle:", 0);
  objc_msgSend(v7, "setTimeStyle:", 1);
  *(_QWORD *)&v5[v6] = v7;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViewHeightConstraint] = 0;
  v5[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_areConflictsShowing] = 1;
  v8 = &v5[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeSelectionDelegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslots] = 0;
  v9 = &v5[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timezone];
  v10 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v5[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_expanded] = 0;

  v18.receiver = v5;
  v18.super_class = (Class)type metadata accessor for IMBTimeslotsContainerView(0);
  v11 = (char *)objc_msgSendSuper2(&v18, "initWithCoder:", a1);
  v12 = v11;
  if (v11)
  {
    v13 = *(void **)&v11[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotsView];
    v14 = v11;
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setAccessibilityIdentifier:", v15);

    v16 = objc_msgSend(v13, "layer");
    objc_msgSend(v16, "setMasksToBounds:", 1);

    objc_msgSend(v14, "addSubview:", v13);
    sub_100071A78();

  }
  return v12;
}

id sub_100071A78()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  double v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  double v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  double v20;
  id result;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotsView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v1, "topAnchor");
  v3 = objc_msgSend(v0, "topAnchor");
  if ((sub_10002DA10() & 0xFE) != 0)
    v4 = 10.0;
  else
    v4 = 12.0;
  v5 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v3, v4);

  objc_msgSend(v5, "setActive:", 1);
  v6 = objc_msgSend(v1, "leadingAnchor");
  v7 = objc_msgSend(v0, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  objc_msgSend(v8, "setActive:", 1);
  v9 = objc_msgSend(v1, "trailingAnchor");
  v10 = objc_msgSend(v0, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  objc_msgSend(v11, "setActive:", 1);
  v12 = objc_msgSend(v1, "bottomAnchor");
  v13 = objc_msgSend(v0, "bottomAnchor");
  if ((sub_10002DA10() & 0xFE) != 0)
    v14 = 10.0;
  else
    v14 = 12.0;
  v15 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, v14);

  objc_msgSend(v15, "setActive:", 1);
  v16 = objc_msgSend(v0, "heightAnchor");
  v17 = objc_msgSend(v16, "constraintGreaterThanOrEqualToConstant:", 68.0);

  v18 = OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViewHeightConstraint;
  v19 = *(void **)&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViewHeightConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViewHeightConstraint] = v17;

  result = *(id *)&v0[v18];
  if (result)
  {
    LODWORD(v20) = 1132068864;
    objc_msgSend(result, "setPriority:", v20);
    result = *(id *)&v0[v18];
    if (result)
      return objc_msgSend(result, "setActive:", 1);
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100071D34()
{
  char *v0;
  id result;
  id v2;
  char IsAccessibilityContentSizeCategory;
  double v4;
  double Width;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v15;
  _BYTE v16[24];
  CGRect v17;

  result = (id)UIApp;
  if (UIApp)
  {
    v2 = objc_msgSend(UIApp, "preferredContentSizeCategory");
    IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory();

    if ((IsAccessibilityContentSizeCategory & 1) == 0)
    {
      v4 = (sub_10002DA10() & 0xFE) != 0 ? 20.0 : 24.0;
      objc_msgSend(v0, "frame");
      Width = CGRectGetWidth(v17);
      v6 = (uint64_t *)&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews];
      swift_beginAccess(&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews], v16, 0, 0);
      v7 = *v6;
      if (v7)
      {
        v8 = v7 & 0xFFFFFFFFFFFFFF8;
        if ((unint64_t)v7 >> 62)
        {
LABEL_19:
          if (v7 >= 0)
            v14 = v8;
          else
            v14 = v7;
          swift_bridgeObjectRetain_n(v7, 2);
          v9 = _CocoaArrayWrapper.endIndex.getter(v14);
          if (v9)
          {
LABEL_9:
            v10 = 4;
            Width = (Width - v4) / 3.0;
            while (1)
            {
              if ((v7 & 0xC000000000000001) != 0)
                v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v7);
              else
                v11 = (char *)*(id *)(v7 + 8 * v10);
              v12 = v11;
              v13 = v10 - 3;
              if (__OFADD__(v10 - 4, 1))
              {
                __break(1u);
                goto LABEL_19;
              }
              result = *(id *)&v11[OBJC_IVAR____TtC8Business15IMBTimeslotView_widthLayoutConstraint];
              if (!result)
                break;
              objc_msgSend(result, "setConstant:", Width);

              ++v10;
              if (v13 == v9)
                goto LABEL_16;
            }
            __break(1u);
            goto LABEL_25;
          }
        }
        else
        {
          v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n(v7, 2);
          if (v9)
            goto LABEL_9;
        }
LABEL_16:
        swift_bridgeObjectRelease_n(v7, 2);
      }
    }
    v15.receiver = v0;
    v15.super_class = (Class)type metadata accessor for IMBTimeslotsContainerView(0);
    return objc_msgSendSuper2(&v15, "layoutSubviews");
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_100071F2C()
{
  char *v0;
  uint64_t v1;
  char *v2;
  id result;
  id v4;
  int IsAccessibilityContentSizeCategory;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  char *v31;
  char *v32;
  id v33;
  Class v34;
  NSString v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  double v40;
  id v41;
  __objc2_class_ro *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  char *v50;
  _QWORD *v51;
  uint64_t (*v52)(_QWORD);
  _QWORD *v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  objc_class *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  id v66;
  char *v67;
  char *v68;
  id v69;
  Class isa;
  NSString v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  __objc2_class_ro *v75;
  id v76;
  __objc2_class_ro *v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  double v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  __objc2_class_ro *v102;
  char *v103;
  char *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  double v110;
  id v111;
  id v112;
  char *v113;
  _QWORD *v114;
  uint64_t (*v115)(_QWORD);
  _QWORD *v116;
  char *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  unint64_t v125;
  char *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  id v132;
  id v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  objc_super v138;
  objc_super v139;
  char v140[24];
  _BYTE v141[40];

  result = (id)UIApp;
  if (!UIApp)
    goto LABEL_93;
  v4 = objc_msgSend(UIApp, "preferredContentSizeCategory");
  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory();

  v127 = *(id *)&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotsView];
  v6 = objc_msgSend(v127, "subviews");
  v7 = sub_1000736C8();
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  v137 = v0;
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v14 = v8;
    else
      v14 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v14);
    if (v9)
      goto LABEL_4;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9)
    {
LABEL_4:
      if (v9 < 1)
        goto LABEL_80;
      for (i = 0; i != v9; ++i)
      {
        if ((v8 & 0xC000000000000001) != 0)
          v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
        else
          v12 = *(id *)(v8 + 8 * i + 32);
        v13 = v12;
        objc_msgSend(v12, "removeFromSuperview");

      }
    }
  }
  swift_bridgeObjectRelease_n(v8, 2);
  v2 = v0;
  v16 = sub_100071494((uint64_t)v141);
  v17 = *v15;
  if (*v15)
  {
    *v15 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v17);
  }
  ((void (*)(_BYTE *, _QWORD))v16)(v141, 0);
  v18 = &v137[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews];
  swift_beginAccess(&v137[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews], v140, 1, 0);
  v19 = *(_QWORD *)v18;
  *(_QWORD *)v18 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v19);
  v1 = *(_QWORD *)&v137[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslots];
  if (!v1)
    return sub_100072E78();
  v10 = v1 & 0xFFFFFFFFFFFFFF8;
  v130 = *(_QWORD *)&v137[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslots];
  v20 = (unint64_t)v1 >> 62;
  if (IsAccessibilityContentSizeCategory)
  {
    if (v20)
      goto LABEL_81;
    v21 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain(v1);
    if (!v21)
      goto LABEL_77;
    goto LABEL_20;
  }
  if (v20)
  {
    if (v1 >= 0)
      v122 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v122 = *(_QWORD *)&v137[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslots];
    swift_bridgeObjectRetain(v1);
    v58 = _CocoaArrayWrapper.endIndex.getter(v122);
    if (!v58)
      goto LABEL_77;
  }
  else
  {
    v58 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    if (!v58)
      goto LABEL_77;
  }
  v134 = 0;
  v136 = 0;
  v2 = 0;
  v132 = 0;
  v124 = *(id *)&v137[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_dateFormatter];
  v125 = v1 & 0xC000000000000001;
  v59 = 4;
  v123 = v58;
  while (1)
  {
    v60 = v59 - 4;
    if (!v125)
      break;
    v61 = specialized _ArrayBuffer._getElementSlowPath(_:)(v59 - 4, v1);
    v10 = v59 - 3;
    if (__OFADD__(v60, 1))
      goto LABEL_79;
LABEL_49:
    v128 = v10;
    v129 = v59;
    v62 = (objc_class *)type metadata accessor for IMBTimeslotView();
    v63 = (char *)objc_allocWithZone(v62);
    v64 = &v63[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeSelectionDelegate];
    *((_QWORD *)v64 + 1) = 0;
    swift_unknownObjectWeakInit(v64, 0);
    *(_QWORD *)&v63[OBJC_IVAR____TtC8Business15IMBTimeslotView_widthLayoutConstraint] = 0;
    v65 = OBJC_IVAR____TtC8Business15IMBTimeslotView_timeLabel;
    v66 = objc_allocWithZone((Class)UILabel);
    swift_retain(v61);
    v67 = v63;
    *(_QWORD *)&v63[v65] = objc_msgSend(v66, "init");
    v67[OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected] = 0;
    *(_QWORD *)&v67[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeslot] = v61;
    swift_retain(v61);

    v139.receiver = v67;
    v139.super_class = v62;
    v68 = (char *)objc_msgSendSuper2(&v139, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    sub_10007A474();
    sub_10007A65C();

    swift_release(v61);
    v69 = *(id *)&v68[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeLabel];
    isa = Date._bridgeToObjectiveC()().super.isa;
    v71 = objc_msgSend(v124, "stringFromDate:", isa);

    if (!v71)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v73 = v72;
      v71 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v73);
    }
    objc_msgSend(v69, "setText:", v71, v123);

    v74 = &v68[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeSelectionDelegate];
    *((_QWORD *)v74 + 1) = &off_1000D99B0;
    result = (id)swift_unknownObjectWeakAssign(v74, v137);
    v126 = &v2[3 * (v136 / 3)];
    if (v126)
    {
      v75 = &BIABubbleOptionsiOSViewController;
      v76 = v132;
      if (!v132)
        goto LABEL_92;
      v77 = &BIABubbleOptionsiOSViewController;
    }
    else
    {
      v76 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      objc_msgSend(v76, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v78 = v127;
      objc_msgSend(v127, "addSubview:", v76);
      v75 = &BIABubbleOptionsiOSViewController;
      if (v132)
      {
        if (v134)
        {
          v79 = v132;
          v80 = objc_msgSend(v134, "trailingAnchor");
          v81 = objc_msgSend(v79, "trailingAnchor");
          v82 = objc_msgSend(v80, "constraintEqualToAnchor:", v81);

          objc_msgSend(v82, "setActive:", 1);
        }
        else
        {
          v86 = v132;
        }
        v87 = objc_msgSend(v76, "topAnchor");
        v88 = objc_msgSend(v132, "bottomAnchor");
        if ((sub_10002DA10() & 0xFE) != 0)
          v89 = 10.0;
        else
          v89 = 12.0;
        v85 = objc_msgSend(v87, "constraintEqualToAnchor:constant:", v88, v89);

        objc_msgSend(v85, "setActive:", 1);
        v78 = v127;
      }
      else
      {
        v83 = objc_msgSend(v76, "topAnchor");
        v84 = objc_msgSend(v127, "topAnchor");
        v85 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

        objc_msgSend(v85, "setActive:", 1);
        v132 = 0;
      }

      v90 = objc_msgSend(v76, "leadingAnchor");
      v91 = objc_msgSend(v78, "leadingAnchor");
      v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

      objc_msgSend(v92, "setActive:", 1);
      v93 = objc_msgSend(v76, "trailingAnchor");
      v94 = objc_msgSend(v78, "trailingAnchor");
      v95 = objc_msgSend(v93, "constraintEqualToAnchor:", v94);

      objc_msgSend(v95, "setActive:", 1);
      v132 = v76;
      v77 = &BIABubbleOptionsiOSViewController;
    }
    v50 = (char *)v76;
    objc_msgSend(v50, "addSubview:", v68);

    objc_msgSend(v68, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v96 = objc_msgSend(v68, "topAnchor");
    v97 = objc_msgSend(v50, "topAnchor");
    v98 = objc_msgSend(v96, (SEL)v75[51].base_props, v97);

    objc_msgSend(v98, (SEL)v77[54].base_meths, 1);
    v99 = objc_msgSend(v68, "bottomAnchor");
    v100 = objc_msgSend(v50, "bottomAnchor");
    v101 = objc_msgSend(v99, (SEL)v75[51].base_props, v100);

    objc_msgSend(v101, (SEL)v77[54].base_meths, 1);
    v102 = v77;
    v103 = v134;
    if (!v134)
      goto LABEL_70;
    v104 = v134;
    v105 = objc_msgSend(v68, "widthAnchor");
    v106 = objc_msgSend(v104, "widthAnchor");
    v107 = objc_msgSend(v105, (SEL)v75[51].base_props, v106);

    v103 = v134;
    objc_msgSend(v107, (SEL)v102[54].base_meths, 1);

    if (v126)
    {
      v108 = objc_msgSend(v68, "leadingAnchor");
      v109 = objc_msgSend(v104, "trailingAnchor");
      if ((sub_10002DA10() & 0xFE) != 0)
        v110 = 10.0;
      else
        v110 = 12.0;
      v111 = objc_msgSend(v108, "constraintEqualToAnchor:constant:", v109, v110);
    }
    else
    {
LABEL_70:
      v108 = objc_msgSend(v68, "leadingAnchor");
      v109 = objc_msgSend(v50, "leadingAnchor");
      v111 = objc_msgSend(v108, (SEL)v75[51].base_props, v109);
    }
    v112 = v111;

    objc_msgSend(v112, (SEL)v102[54].base_meths, 1);
    v113 = v68;

    v115 = sub_100071494((uint64_t)v141);
    if (*v114)
    {
      v116 = v114;
      v117 = v113;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v117);
      v119 = *(_QWORD *)((*v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v118 = *(_QWORD *)((*v116 & 0xFFFFFFFFFFFFFF8) + 0x18);
      v1 = v130;
      if (v119 >= v118 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v118 > 1, v119 + 1, 1);
      v120 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v119, v117);
      specialized Array._endMutation()(v120);
      ((void (*)(_BYTE *, _QWORD))v115)(v141, 0);
    }
    else
    {
      ((void (*)(_BYTE *, _QWORD))v115)(v141, 0);
      v1 = v130;
    }

    swift_release(v61);
    --v2;
    v134 = v113;
    ++v136;
    v59 = v129 + 1;
    if (v128 == v123)
    {

      v2 = v137;
      goto LABEL_76;
    }
  }
  v61 = *(_QWORD *)(v1 + 8 * v59);
  swift_retain(v61);
  v10 = v59 - 3;
  if (!__OFADD__(v60, 1))
    goto LABEL_49;
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  if (v1 >= 0)
    v121 = v10;
  else
    v121 = v1;
  swift_bridgeObjectRetain(v1);
  result = (id)_CocoaArrayWrapper.endIndex.getter(v121);
  v21 = (uint64_t)result;
  if (!result)
  {
LABEL_77:
    swift_bridgeObjectRelease(v1);
    objc_msgSend(v2, "setNeedsLayout");
    objc_msgSend(v2, "layoutIfNeeded");
    return sub_100072E78();
  }
LABEL_20:
  if (v21 >= 1)
  {
    v22 = 0;
    v23 = 0;
    v131 = (id)(v1 & 0xC000000000000001);
    v133 = *(id *)&v2[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_dateFormatter];
    v135 = v21;
    do
    {
      if (v131)
      {
        v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v1);
      }
      else
      {
        v24 = *(_QWORD *)(v1 + 8 * v23 + 32);
        swift_retain(v24);
      }
      v25 = (objc_class *)type metadata accessor for IMBTimeslotView();
      v26 = (char *)objc_allocWithZone(v25);
      v27 = &v26[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeSelectionDelegate];
      *((_QWORD *)v27 + 1) = 0;
      swift_unknownObjectWeakInit(v27, 0);
      *(_QWORD *)&v26[OBJC_IVAR____TtC8Business15IMBTimeslotView_widthLayoutConstraint] = 0;
      v28 = OBJC_IVAR____TtC8Business15IMBTimeslotView_timeLabel;
      v29 = objc_allocWithZone((Class)UILabel);
      swift_retain(v24);
      v30 = v26;
      *(_QWORD *)&v26[v28] = objc_msgSend(v29, "init");
      v30[OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected] = 0;
      *(_QWORD *)&v30[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeslot] = v24;
      swift_retain(v24);

      v138.receiver = v30;
      v138.super_class = v25;
      v31 = (char *)objc_msgSendSuper2(&v138, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      sub_10007A474();
      sub_10007A65C();

      swift_release(v24);
      v32 = &v31[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeSelectionDelegate];
      *((_QWORD *)v32 + 1) = &off_1000D99B0;
      swift_unknownObjectWeakAssign(v32, v137);
      v33 = *(id *)&v31[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeLabel];
      v34 = Date._bridgeToObjectiveC()().super.isa;
      v35 = objc_msgSend(v133, "stringFromDate:", v34);

      if (!v35)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v37 = v36;
        v35 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v37);
      }
      objc_msgSend(v33, "setText:", v35, v123);

      objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v127, "addSubview:", v31);
      v38 = objc_msgSend(v31, "topAnchor");
      if (v22)
      {
        v39 = objc_msgSend(v22, "bottomAnchor");
        if ((sub_10002DA10() & 0xFE) != 0)
          v40 = 10.0;
        else
          v40 = 12.0;
        v41 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v39, v40);
        v42 = &BIABubbleOptionsiOSViewController;
      }
      else
      {
        v39 = objc_msgSend(v127, "topAnchor");
        v42 = &BIABubbleOptionsiOSViewController;
        v41 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);
      }
      v43 = v41;

      objc_msgSend(v43, "setActive:", 1);
      v44 = objc_msgSend(v31, "leadingAnchor");
      v45 = objc_msgSend(v127, "leadingAnchor");
      v46 = objc_msgSend(v44, (SEL)v42[51].base_props, v45);

      objc_msgSend(v46, "setActive:", 1);
      v47 = objc_msgSend(v31, "trailingAnchor");
      v48 = objc_msgSend(v127, "trailingAnchor");
      v49 = objc_msgSend(v47, (SEL)v42[51].base_props, v48);

      objc_msgSend(v49, "setActive:", 1);
      v50 = v31;
      v2 = v137;
      v52 = sub_100071494((uint64_t)v141);
      if (*v51)
      {
        v53 = v51;
        v54 = v50;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
        v56 = *(_QWORD *)((*v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v55 = *(_QWORD *)((*v53 & 0xFFFFFFFFFFFFFF8) + 0x18);
        v1 = v130;
        if (v56 >= v55 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
        v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
        specialized Array._endMutation()(v57);
        ((void (*)(_BYTE *, _QWORD))v52)(v141, 0);
        v2 = v137;
      }
      else
      {
        ((void (*)(_BYTE *, _QWORD))v52)(v141, 0);
        v1 = v130;
      }
      ++v23;

      swift_release(v24);
      v22 = v31;
    }
    while (v135 != v23);
LABEL_76:

    goto LABEL_77;
  }
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
  return result;
}

id sub_100072E78()
{
  _BYTE *v0;
  int64_t v1;
  uint64_t v2;
  uint64_t *v3;
  id result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char IsAccessibilityContentSizeCategory;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  double v33;
  double v34;
  char v35;
  double v36;
  id v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  int i;
  uint64_t v46;
  char v47;
  char v48[24];

  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews];
  result = (id)swift_beginAccess(&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews], v48, 0, 0);
  v5 = *v3;
  if (!*v3)
    return result;
  v6 = UIApp;
  if (!UIApp)
  {
    __break(1u);
    goto LABEL_87;
  }
  swift_bridgeObjectRetain(v5);
  v7 = objc_msgSend((id)v6, "preferredContentSizeCategory");
  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory();

  v2 = OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_expanded;
  v46 = v5 & 0xFFFFFFFFFFFFFF8;
  v47 = IsAccessibilityContentSizeCategory;
  if (v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_expanded] != 1)
  {
    v6 = 3;
    if (!((unint64_t)v5 >> 62))
      goto LABEL_7;
LABEL_22:
    if (v5 >= 0)
      v15 = v5 & 0xFFFFFFFFFFFFFF8;
    else
      v15 = v5;
    swift_bridgeObjectRetain(v5);
    v16 = _CocoaArrayWrapper.endIndex.getter(v15);
    if (v16)
    {
      v1 = v16;
      if (v16 >= 1)
        goto LABEL_91;
      __break(1u);
    }
    i = 1;
    goto LABEL_29;
  }
  if ((unint64_t)v5 >> 62)
  {
    if (v5 >= 0)
      v14 = v5 & 0xFFFFFFFFFFFFFF8;
    else
      v14 = v5;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v5);
    goto LABEL_22;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
  v1 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v1)
  {
    i = 0;
    goto LABEL_30;
  }
  swift_bridgeObjectRetain(v5);
  for (i = 0; ; i = 1)
  {
    v9 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v5);
      else
        v10 = *(id *)(v5 + 8 * v9 + 32);
      v11 = v10;
      v12 = v9 + 1;
      if (v9 >= v6)
        v13 = 0.0;
      else
        v13 = 1.0;
      objc_msgSend(v10, "setAlpha:", v13);

      ++v9;
    }
    while (v1 != v12);
LABEL_29:
    swift_bridgeObjectRelease(v5);
LABEL_30:
    v17 = *(void **)&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotsView];
    v18 = objc_msgSend(v17, "subviews");
    v1 = sub_1000736C8();
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v1);

    if ((unint64_t)v19 >> 62)
      break;
    v6 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      goto LABEL_77;
LABEL_32:
    if ((v19 & 0xC000000000000001) != 0)
    {
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
    }
    else
    {
      if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_82;
      }
      v20 = *(id *)(v19 + 32);
    }
    v6 = (uint64_t)v20;
    swift_bridgeObjectRelease(v19);
    if ((v47 & 1) != 0)
    {
      if (v0[v2] == 1)
      {
        swift_bridgeObjectRelease(v5);
        v21 = *(void **)&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViewHeightConstraint];
        if (v21)
          goto LABEL_41;
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
      v29 = *(void **)&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViewHeightConstraint];
      if (!v29)
      {
LABEL_89:
        __break(1u);
        goto LABEL_90;
      }
      if (i)
      {
        if (v5 >= 0)
          v30 = v46;
        else
          v30 = v5;
        swift_bridgeObjectRetain(v5);
        v31 = v29;
        v32 = _CocoaArrayWrapper.endIndex.getter(v30);
        swift_bridgeObjectRelease(v5);
      }
      else
      {
        v32 = *(_QWORD *)(v46 + 16);
        v37 = v29;
      }
      swift_bridgeObjectRelease(v5);
      if (v32 >= 3)
        v38 = 3;
      else
        v38 = v32;
      objc_msgSend((id)v6, "bounds");
      v40 = v39;
      if ((sub_10002DA10() & 0xFE) != 0)
        v41 = 10.0;
      else
        v41 = 12.0;
      if ((sub_10002DA10() & 0xFE) != 0)
        v42 = 10.0;
      else
        v42 = 12.0;
      objc_msgSend(v29, "setConstant:", v42 + (v40 + v41) * (double)v38);

LABEL_72:
      return objc_msgSend(v0, "layoutIfNeeded");
    }
    swift_bridgeObjectRelease(v5);
    v21 = *(void **)&v0[OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViewHeightConstraint];
    if (v0[v2] == 1)
    {
      if (!v21)
      {
LABEL_88:
        __break(1u);
        goto LABEL_89;
      }
LABEL_41:
      v5 = v21;
      v22 = objc_msgSend(v17, "subviews");
      v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v1);

      if (!((unint64_t)v1 >> 62))
      {
        v23 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_43;
      }
LABEL_82:
      if (v1 < 0)
        v44 = v1;
      else
        v44 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v23 = _CocoaArrayWrapper.endIndex.getter(v44);
      swift_bridgeObjectRelease(v1);
LABEL_43:
      swift_bridgeObjectRelease(v1);
      objc_msgSend((id)v6, "bounds");
      v25 = v24;
      if ((sub_10002DA10() & 0xFE) != 0)
        v26 = 10.0;
      else
        v26 = 12.0;
      if ((sub_10002DA10() & 0xFE) != 0)
        v27 = 10.0;
      else
        v27 = 12.0;
      v28 = v27 + (v25 + v26) * (double)v23;
LABEL_60:
      objc_msgSend((id)v5, "setConstant:", v28);

      goto LABEL_72;
    }
    if (v21)
    {
      v5 = v21;
      objc_msgSend((id)v6, "bounds");
      v34 = v33;
      v35 = sub_10002DA10();
      v36 = 20.0;
      if ((v35 & 0xFE) == 0)
        v36 = 24.0;
      v28 = v34 + v36;
      goto LABEL_60;
    }
LABEL_90:
    __break(1u);
LABEL_91:
    ;
  }
  if (v19 < 0)
    v43 = v19;
  else
    v43 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v19);
  v6 = _CocoaArrayWrapper.endIndex.getter(v43);
  swift_bridgeObjectRelease(v19);
  if (v6)
    goto LABEL_32;
LABEL_77:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v19);
  return objc_msgSend(v0, "layoutIfNeeded");
}

id sub_1000733B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBTimeslotsContainerView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100073470()
{
  return type metadata accessor for IMBTimeslotsContainerView(0);
}

uint64_t type metadata accessor for IMBTimeslotsContainerView(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EED70;
  if (!qword_1000EED70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IMBTimeslotsContainerView);
  return result;
}

void sub_1000734B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = "\b";
  v4[3] = &unk_1000B2818;
  v4[4] = &unk_1000B2830;
  v4[5] = "\b";
  v4[6] = "\b";
  sub_100073554(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_1000B2818;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

void sub_100073554(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000EED80)
  {
    v2 = type metadata accessor for TimeZone(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000EED80);
  }
}

uint64_t sub_1000735A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeSelectionDelegate;
  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeSelectionDelegate);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_100073618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeSelectionDelegate;
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeSelectionDelegate);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

uint64_t sub_100073670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeSelectionDelegate;
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeSelectionDelegate);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(v4 + 24))(ObjectType, v4);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

unint64_t sub_1000736C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EEB80;
  if (!qword_1000EEB80)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000EEB80);
  }
  return result;
}

uint64_t sub_100073704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000EC5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007374C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007D40(&qword_1000EC5F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_10007378C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  objc_super v12;

  v4 = OBJC_IVAR____TtC8Business20IMBWebViewController_navigationToolbar;
  v5 = objc_allocWithZone((Class)type metadata accessor for IMBWebNavigationToolbar());
  v6 = v2;
  *(_QWORD *)&v2[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC8Business20IMBWebViewController_URLView;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IMBWebURLView(0)), "init");
  v8 = OBJC_IVAR____TtC8Business20IMBWebViewController_titleView;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IMBWebTitleView()), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Business20IMBWebViewController_titleViewHeightConstraint] = 0;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for IMBWebViewController();
  v10 = objc_msgSendSuper2(&v12, "initWithCallbackURI:", v9);

  return v10;
}

id sub_1000739B8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  unsigned int v7;
  id v8;
  const char *v9;
  id result;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, "webkitView");
  v7 = objc_msgSend(v6, "hasOnlySecureContent");

  v8 = *(id *)&v1[OBJC_IVAR____TtC8Business20IMBWebViewController_titleView];
  v9 = "setHidden:";
  if (!v7)
  {
LABEL_5:
    objc_msgSend(v8, v9, 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business20IMBWebViewController_titleViewHeightConstraint], "setActive:", 1);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v13 = result;
      objc_msgSend(result, "setNeedsLayout");

      result = objc_msgSend(v1, "view");
      v12 = result;
      if (result)
        goto LABEL_7;
LABEL_13:
      __break(1u);
      return result;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v8, "setHidden:", 0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Business20IMBWebViewController_titleViewHeightConstraint], "setActive:", 0);
  result = objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v11 = result;
  objc_msgSend(result, "setNeedsLayout");

  v8 = objc_msgSend(v1, "view");
  v12 = v8;
  if (!v8)
  {
    __break(1u);
    goto LABEL_5;
  }
LABEL_7:
  objc_msgSend(v12, "layoutIfNeeded");

  v14 = objc_msgSend(v1, "webkitView");
  v15 = objc_msgSend(v14, "URL");

  if (v15)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v15);

    v16 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 0, 1, v16);
  }
  else
  {
    v17 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
  }
  sub_10007E3B8((uint64_t)v5, v7);
  return (id)sub_10004AF88((uint64_t)v5);
}

void sub_100073C18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  objc_super v18;

  v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for IMBWebViewController();
  objc_msgSendSuper2(&v18, "setupSubviews");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business20IMBWebViewController_navigationToolbar];
  v3 = v2 + OBJC_IVAR____TtC8Business23IMBWebNavigationToolbar_actionDelegate;
  *(_QWORD *)(v3 + 8) = &off_1000D99D8;
  swift_unknownObjectWeakAssign(v3, v1);
  v4 = sub_10001AC48();
  objc_msgSend(v4, "setEnabled:", 0);

  v5 = sub_10001ADF4();
  objc_msgSend(v5, "setEnabled:", 0);

  if (sub_10002DA10() == 2)
  {
    v6 = objc_msgSend(v1, "webkitView");
    v7 = objc_msgSend(v6, "layer");

    objc_msgSend(v7, "setBorderWidth:", 1.0);
    v8 = objc_msgSend(v1, "webkitView");
    v9 = objc_msgSend(v8, "layer");

    v10 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray3Color");
    v11 = objc_msgSend(v10, "CGColor");

    objc_msgSend(v9, "setBorderColor:", v11);
  }
  v12 = objc_msgSend(v1, "view");
  if (!v12)
  {
    __break(1u);
    goto LABEL_8;
  }
  v13 = v12;
  objc_msgSend(v12, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC8Business20IMBWebViewController_titleView]);

  v14 = objc_msgSend(v1, "view");
  if (!v14)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v15 = v14;
  objc_msgSend(v14, "addSubview:", v2);

  v16 = objc_msgSend(v1, "view");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC8Business20IMBWebViewController_URLView]);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100073E90()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  Class isa;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  Class v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  uint64_t v62;
  Class v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  char v86;
  double v87;
  id v88;
  uint64_t v89;
  Class v90;
  void *v91;
  uint64_t v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  id v117;
  Class v118;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBWebViewController_titleView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend(v0, "webkitView");
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v4 = *(void **)&v1[OBJC_IVAR____TtC8Business20IMBWebViewController_navigationToolbar];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = *(void **)&v1[OBJC_IVAR____TtC8Business20IMBWebViewController_URLView];
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(v2, "heightAnchor");
  v7 = objc_msgSend(v6, "constraintEqualToConstant:", 0.0);

  v8 = *(void **)&v1[OBJC_IVAR____TtC8Business20IMBWebViewController_titleViewHeightConstraint];
  v114 = OBJC_IVAR____TtC8Business20IMBWebViewController_titleViewHeightConstraint;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Business20IMBWebViewController_titleViewHeightConstraint] = v7;

  v117 = (id)sub_100007D40((uint64_t *)&unk_1000ED490);
  v9 = swift_allocObject(v117, 56, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1000AF110;
  v10 = objc_msgSend(v2, "topAnchor");
  v11 = objc_msgSend(v1, "view");
  if (!v11)
  {
    __break(1u);
    goto LABEL_22;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "safeAreaLayoutGuide");

  v14 = objc_msgSend(v13, "topAnchor");
  v15 = objc_msgSend(v10, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v9 + 32) = v15;
  v16 = objc_msgSend(v2, "leftAnchor");
  v17 = objc_msgSend(v1, "view");
  if (!v17)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = v17;
  v116 = v4;
  v19 = objc_msgSend(v17, "leftAnchor");

  v20 = objc_msgSend(v16, "constraintEqualToAnchor:", v19);
  *(_QWORD *)(v9 + 40) = v20;
  v21 = objc_msgSend(v2, "rightAnchor");
  v22 = objc_msgSend(v1, "view");
  if (!v22)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v23 = v22;
  v24 = (void *)objc_opt_self(NSLayoutConstraint);
  v25 = objc_msgSend(v23, "rightAnchor");

  v26 = objc_msgSend(v21, "constraintEqualToAnchor:", v25);
  *(_QWORD *)(v9 + 48) = v26;
  specialized Array._endMutation()(v27);
  sub_100011A28();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v24, "activateConstraints:", isa);

  v29 = swift_allocObject(v117, 56, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1000AF110;
  v30 = objc_msgSend(v5, "topAnchor");
  v31 = objc_msgSend(v2, "bottomAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v29 + 32) = v32;
  v33 = objc_msgSend(v5, "leftAnchor");
  v34 = objc_msgSend(v1, "view");
  if (!v34)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, "leftAnchor");

  v37 = objc_msgSend(v33, "constraintEqualToAnchor:", v36);
  *(_QWORD *)(v29 + 40) = v37;
  v38 = objc_msgSend(v5, "rightAnchor");
  v39 = objc_msgSend(v1, "view");
  if (!v39)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "rightAnchor");

  v42 = objc_msgSend(v38, "constraintEqualToAnchor:", v41);
  *(_QWORD *)(v29 + 48) = v42;
  specialized Array._endMutation()(v43);
  v44 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v29);
  objc_msgSend(v24, "activateConstraints:", v44);

  v45 = swift_allocObject(v117, 56, 7);
  *(_OWORD *)(v45 + 16) = xmmword_1000AF110;
  v46 = objc_msgSend(v1, "webkitView");
  v47 = objc_msgSend(v46, "topAnchor");

  v48 = objc_msgSend(v5, "bottomAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v45 + 32) = v49;
  v50 = objc_msgSend(v1, "webkitView");
  v51 = objc_msgSend(v50, "leftAnchor");

  v52 = objc_msgSend(v1, "view");
  if (!v52)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v53 = v52;
  v54 = objc_msgSend(v52, "leftAnchor");

  v55 = objc_msgSend(v51, "constraintEqualToAnchor:", v54);
  *(_QWORD *)(v45 + 40) = v55;
  v56 = objc_msgSend(v1, "webkitView");
  v57 = objc_msgSend(v56, "rightAnchor");

  v58 = objc_msgSend(v1, "view");
  if (!v58)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v59 = v58;
  v60 = objc_msgSend(v58, "rightAnchor");

  v61 = objc_msgSend(v57, "constraintEqualToAnchor:", v60);
  *(_QWORD *)(v45 + 48) = v61;
  specialized Array._endMutation()(v62);
  v63 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v45);
  objc_msgSend(v24, "activateConstraints:", v63);

  if (sub_10002DA10() != 2)
  {
    v92 = swift_allocObject(v117, 64, 7);
    *(_OWORD *)(v92 + 16) = xmmword_1000AF130;
    v93 = objc_msgSend(v116, "topAnchor");
    v94 = objc_msgSend(v1, "webkitView");
    v95 = objc_msgSend(v94, "bottomAnchor");

    v96 = objc_msgSend(v93, "constraintEqualToAnchor:", v95);
    *(_QWORD *)(v92 + 32) = v96;
    v97 = objc_msgSend(v116, "leftAnchor");
    v98 = objc_msgSend(v1, "view");
    if (v98)
    {
      v99 = v98;
      v100 = objc_msgSend(v98, "leftAnchor");

      v101 = objc_msgSend(v97, "constraintEqualToAnchor:", v100);
      *(_QWORD *)(v92 + 40) = v101;
      v102 = objc_msgSend(v116, "rightAnchor");
      v103 = objc_msgSend(v1, "view");
      if (v103)
      {
        v104 = v103;
        v105 = objc_msgSend(v103, "rightAnchor");

        v106 = objc_msgSend(v102, "constraintEqualToAnchor:", v105);
        *(_QWORD *)(v92 + 48) = v106;
        v107 = objc_msgSend(v116, "bottomAnchor");
        v108 = objc_msgSend(v1, "view");
        if (v108)
        {
          v109 = v108;
          v110 = objc_msgSend(v108, "safeAreaLayoutGuide");

          v111 = objc_msgSend(v110, "bottomAnchor");
          v112 = objc_msgSend(v107, "constraintEqualToAnchor:", v111);

          *(_QWORD *)(v92 + 56) = v112;
          specialized Array._endMutation()(v113);
          v118 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v92);
          objc_msgSend(v24, "activateConstraints:", v118);

          return;
        }
        goto LABEL_33;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      return;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v64 = swift_allocObject(v117, 72, 7);
  *(_OWORD *)(v64 + 16) = xmmword_1000AF580;
  v65 = objc_msgSend(v116, "topAnchor");
  v66 = objc_msgSend(v1, "webkitView");
  v67 = objc_msgSend(v66, "bottomAnchor");

  v68 = objc_msgSend(v65, "constraintEqualToAnchor:", v67);
  *(_QWORD *)(v64 + 32) = v68;
  v69 = objc_msgSend(v116, "leftAnchor");
  v70 = objc_msgSend(v1, "view");
  if (!v70)
    goto LABEL_28;
  v71 = v70;
  v72 = objc_msgSend(v70, "leftAnchor");

  v73 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v72, -19.0);
  *(_QWORD *)(v64 + 40) = v73;
  v74 = objc_msgSend(v116, "rightAnchor");
  v75 = objc_msgSend(v1, "view");
  if (!v75)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v76 = v75;
  v77 = objc_msgSend(v75, "rightAnchor");

  v78 = objc_msgSend(v74, "constraintEqualToAnchor:constant:", v77, 26.0);
  *(_QWORD *)(v64 + 48) = v78;
  v79 = objc_msgSend(v116, "bottomAnchor");
  v80 = objc_msgSend(v1, "view");
  if (!v80)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v81 = v80;
  v82 = objc_msgSend(v80, "safeAreaLayoutGuide");

  v83 = objc_msgSend(v82, "bottomAnchor");
  v84 = objc_msgSend(v79, "constraintEqualToAnchor:", v83);

  *(_QWORD *)(v64 + 56) = v84;
  v85 = objc_msgSend(v116, "heightAnchor");
  v86 = sub_10002DA10();
  v87 = 60.0;
  if ((v86 & 0xFE) == 0)
    v87 = 44.0;
  v88 = objc_msgSend(v85, "constraintEqualToConstant:", v87, v114);

  *(_QWORD *)(v64 + 64) = v88;
  specialized Array._endMutation()(v89);
  v90 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v64);
  objc_msgSend(v24, "activateConstraints:", v90);

  v91 = *(void **)&v1[v115];
  if (v91)
    objc_msgSend(v91, "setActive:", 1);
}

void sub_100074B90()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = sub_10001AC48();
  v2 = objc_msgSend(v0, "webkitView");
  v3 = objc_msgSend(v2, "canGoBack");

  objc_msgSend(v1, "setEnabled:", v3);
  v6 = sub_10001ADF4();
  v4 = objc_msgSend(v0, "webkitView");
  v5 = objc_msgSend(v4, "canGoForward");

  objc_msgSend(v6, "setEnabled:", v5);
}

id sub_100074CCC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBWebViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBWebViewController()
{
  return objc_opt_self(_TtC8Business20IMBWebViewController);
}

void sub_100074D74()
{
  sub_100074DB4("IMBWebViewController: previous", 30, (SEL *)&selRef_canGoBack, (SEL *)&selRef_goBack);
}

void sub_100074D94()
{
  sub_100074DB4("IMBWebViewController: next", 26, (SEL *)&selRef_canGoForward, (SEL *)&selRef_goForward);
}

void sub_100074DB4(const char *a1, uint64_t a2, SEL *a3, SEL *a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unsigned int v12;
  id v13;

  if (qword_1000EBCB8 != -1)
    swift_once(&qword_1000EBCB8, sub_100082798);
  v9 = qword_1000F8A90;
  v10 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)(a1, a2, 2, &_mh_execute_header, v9, v10, _swiftEmptyArrayStorage);
  v11 = objc_msgSend(v4, "webkitView");
  v12 = objc_msgSend(v11, *a3);

  if (v12)
  {
    v13 = objc_msgSend(v4, "webkitView");

  }
}

void sub_100074F2C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC8Business20IMBWebViewController_navigationToolbar;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IMBWebNavigationToolbar()), "init");
  v2 = OBJC_IVAR____TtC8Business20IMBWebViewController_URLView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IMBWebURLView(0)), "init");
  v3 = OBJC_IVAR____TtC8Business20IMBWebViewController_titleView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IMBWebTitleView()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business20IMBWebViewController_titleViewHeightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x80000001000B7B30, "Business/IMBWebViewController.swift", 35, 2);
  __break(1u);
}

uint64_t sub_100075000(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v2 = v1;
  v4 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v11 = __chkstk_darwin(v8, v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  v16 = (char *)&v29 - v15;
  v17 = objc_msgSend(a1, "URL");
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_10004AF88((uint64_t)v7);
  }
  v18 = v17;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v17);

  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v19(v7, v13, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_10004AF88((uint64_t)v7);
  v20 = ((uint64_t (*)(char *, char *, uint64_t))v19)(v16, v7, v8);
  if (qword_1000EBCB8 != -1)
    v20 = swift_once(&qword_1000EBCB8, sub_100082798);
  v21 = qword_1000F8A90;
  v22 = static os_log_type_t.default.getter(v20);
  v23 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v24 = swift_allocObject(v23, 72, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1000AF070;
  v25 = URL.absoluteString.getter(v24);
  v27 = v26;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  *(_QWORD *)(v24 + 64) = sub_100009084();
  *(_QWORD *)(v24 + 32) = v25;
  *(_QWORD *)(v24 + 40) = v27;
  os_log(_:dso:log:type:_:)("IMBWebViewController: didFinishNavigation to: %@", 48, 2, &_mh_execute_header, v21, v22, v24);
  swift_bridgeObjectRelease(v24);
  objc_msgSend(v2, "updateNavigationBar");
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v16, v8);
}

uint64_t sub_10007524C(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = &unk_1000B28B8;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 88);
}

id sub_1000752A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  objc_super v9;

  v1 = swift_isaMask & *v0;
  v2 = *(_QWORD *)((char *)v0 + qword_1000EEDE0 + 8);
  v3 = *(id *)((char *)v0 + qword_1000EEDE8);
  swift_bridgeObjectRetain(v2);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  objc_msgSend(v3, "removeObserver:forKeyPath:", v0, v4);

  v7 = (objc_class *)type metadata accessor for KVObserver(0, *(_QWORD *)(v1 + 80), v5, v6);
  v9.receiver = v0;
  v9.super_class = v7;
  return objc_msgSendSuper2(&v9, "dealloc");
}

id sub_100075370(void *a1)
{
  id v1;

  v1 = a1;
  return sub_1000752A8();
}

void sub_100075394(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_1000EEDD8 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1000EEDE0 + 8));

}

uint64_t sub_1000753E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  _OWORD v19[2];

  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v9 = v8;
    if (a4)
      goto LABEL_3;
LABEL_6:
    memset(v19, 0, sizeof(v19));
    v16 = a5;
    v17 = a1;
    if (a5)
      goto LABEL_4;
LABEL_7:
    v15 = 0;
    goto LABEL_8;
  }
  v9 = 0;
  if (!a4)
    goto LABEL_6;
LABEL_3:
  swift_unknownObjectRetain(a4);
  v10 = a5;
  v11 = a1;
  _bridgeAnyObjectToAny(_:)(v19);
  swift_unknownObjectRelease(a4);
  if (!a5)
    goto LABEL_7;
LABEL_4:
  type metadata accessor for NSKeyValueChangeKey(0);
  v13 = v12;
  v14 = sub_100075714();
  v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a5, v13, (char *)&type metadata for Any + 8, v14);

LABEL_8:
  sub_1000755C4((uint64_t)v19, v15);

  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v15);
  return sub_100009CB0((uint64_t)v19);
}

void sub_1000754D4()
{
  sub_1000756E8();
}

uint64_t type metadata accessor for KVObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000150D8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KVObserver);
}

uint64_t sub_1000754FC(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 88);
}

uint64_t sub_100075540()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for Signal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000150D8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Signal);
}

uint64_t sub_100075578()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for ExampleClass()
{
  return objc_opt_self(_TtC8Business12ExampleClass);
}

uint64_t sub_1000755C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *);
  NSString *v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_QWORD *)((swift_isaMask & *v2) + 0x50);
  v5 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(a1, a2);
  v8 = (char *)&v15 - v7;
  if (v9)
  {
    v10 = *(void (**)(char *))((char *)v2 + qword_1000EEDD8);
    if (*(_QWORD *)(a2 + 16))
    {
      v11 = NSKeyValueChangeNewKey;
      v12 = sub_10004F2B8((uint64_t)v11);
      if ((v13 & 1) != 0)
      {
        sub_100009C74(*(_QWORD *)(a2 + 56) + 32 * v12, (uint64_t)&v15);
      }
      else
      {
        v15 = 0u;
        v16 = 0u;
      }

    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    v14 = sub_100007D40((uint64_t *)&unk_1000EEB60);
    swift_dynamicCast(v8, &v15, v14, v4, 7);
    v10(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

void sub_1000756E8()
{
  _swift_stdlib_reportUnimplementedInitializer("Business.KVObserver", 19, "init()", 6, 0);
  __break(1u);
}

unint64_t sub_100075714()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EBFA0;
  if (!qword_1000EBFA0)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = swift_getWitnessTable(&unk_1000AEFB4, v1);
    atomic_store(result, (unint64_t *)&qword_1000EBFA0);
  }
  return result;
}

uint64_t Date.init(fromUTCString:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t result;
  char *v33;
  id v34;
  Class isa;
  NSString v36;
  Class v37;
  unint64_t v38;
  NSString v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  double v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v64 = a2;
  v3 = sub_100007D40(&qword_1000ED070);
  __chkstk_darwin(v3, v4);
  v59 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v63 - 8);
  v8 = __chkstk_darwin(v63, v7);
  v58 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  v55 = (char *)&v55 - v11;
  v12 = type metadata accessor for Calendar.Identifier(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Calendar(0);
  v60 = *(_QWORD *)(v17 - 8);
  v61 = v17;
  __chkstk_darwin(v17, v18);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007D40(&qword_1000EC5F0);
  __chkstk_darwin(v21, v22);
  v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for TimeZone(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25, v27);
  v30 = (char *)&v55 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = HIBYTE(v28) & 0xF;
  v62 = a1;
  if ((v28 & 0x2000000000000000) == 0)
    v31 = (unint64_t)a1 & 0xFFFFFFFFFFFFLL;
  if (!v31)
  {
    swift_bridgeObjectRelease(v28);
    v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v46 = v63;
    v49 = v64;
    goto LABEL_11;
  }
  v56 = v6;
  v57 = v28;
  TimeZone.init(secondsFromGMT:)(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25);
  if ((_DWORD)result != 1)
  {
    v33 = v30;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v30, v24, v25);
    v34 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, enum case for Calendar.Identifier.gregorian(_:), v12);
    Calendar.init(identifier:)(v16);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    isa = Calendar._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v20, v61);
    objc_msgSend(v34, "setCalendar:", isa);

    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v34, "setDateFormat:", v36);

    v37 = TimeZone._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v34, "setTimeZone:", v37);

    v38 = v57;
    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
    v40 = objc_msgSend(v34, "dateFromString:", v39);

    if (v40)
    {
      v41 = v25;
      v42 = v58;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v40);

      v43 = v56;
      v44 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
      v45 = (uint64_t)v59;
      v46 = v63;
      v44(v59, v42, v63);
      v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
      v47(v45, 0, 1, v46);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v45, 1, v46);
      v49 = v64;
      if (v48 != 1)
      {
        v62 = v33;
        v52 = v55;
        v53 = ((uint64_t (*)(char *, uint64_t, uint64_t))v44)(v55, v45, v46);
        v54 = Date.timeIntervalSince1970.getter(v53);
        Date.init(timeIntervalSince1970:)(v54);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v52, v46);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v62, v41);
        v50 = v49;
        v51 = 0;
        return v47(v50, v51, 1, v46);
      }
      v25 = v41;
    }
    else
    {
      v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
      v45 = (uint64_t)v59;
      v46 = v63;
      v47((uint64_t)v59, 1, 1, v63);
      v49 = v64;
    }

    (*(void (**)(char *, uint64_t))(v26 + 8))(v33, v25);
    sub_100010A98(v45, &qword_1000ED070);
LABEL_11:
    v50 = v49;
    v51 = 1;
    return v47(v50, v51, 1, v46);
  }
  __break(1u);
  return result;
}

Swift::String __swiftcall Date.toUTCString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  Class v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  Swift::String result;
  uint64_t v21;

  v0 = sub_100007D40(&qword_1000EC5F0);
  v2 = __chkstk_darwin(v0, v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2, v5);
  v7 = (char *)&v21 - v6;
  TimeZone.init(abbreviation:)(5524807, 0xE300000000000000);
  v8 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setDateFormat:", v9);

  sub_100014518((uint64_t)v7, (uint64_t)v4);
  v10 = type metadata accessor for TimeZone(0);
  v11 = *(_QWORD *)(v10 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) != 1)
  {
    isa = TimeZone._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  }
  objc_msgSend(v8, "setTimeZone:", isa);

  v13 = Date._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v8, "stringFromDate:", v13);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  sub_100010A98((uint64_t)v7, &qword_1000EC5F0);
  v18 = v15;
  v19 = v17;
  result._object = v19;
  result._countAndFlagsBits = v18;
  return result;
}

void sub_100075E08()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  _QWORD v14[3];
  uint64_t v15;
  _UNKNOWN **v16;
  _QWORD v17[5];

  sub_10003D1A8((uint64_t)v0 + OBJC_IVAR____TtC8Business23BIABubbleViewController_context, (uint64_t)v17);
  v1 = sub_100031BA4((uint64_t)v17, v17[3]);
  __chkstk_darwin(v1, v1);
  v3 = (_QWORD *)((char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v4 + 16))(v3);
  v5 = *v3;
  v15 = type metadata accessor for PluginBubbleContext();
  v16 = &off_1000D6B68;
  v14[0] = v5;
  v6 = objc_allocWithZone((Class)type metadata accessor for BIABubbleView(0));
  v7 = sub_100031BA4((uint64_t)v14, v15);
  __chkstk_darwin(v7, v7);
  v9 = (_QWORD *)((char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  v11 = *v9;
  v12 = v0;
  v13 = sub_1000763B0(v12, v11, v6);

  sub_100010C40(v14);
  sub_100010C40(v17);
  objc_msgSend(v12, "setView:", v13);

}

id sub_100075FBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BIABubbleViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BIABubbleViewController()
{
  return objc_opt_self(_TtC8Business23BIABubbleViewController);
}

id sub_10007601C(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  objc_class *v13;
  id v14;
  objc_super v16;
  char v17;
  _QWORD v18[5];

  v4 = sub_100007D40(&qword_1000EEFF0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[3] = type metadata accessor for PluginBubbleContext();
  v18[4] = &off_1000D6B68;
  v18[0] = a1;
  v9 = &a2[OBJC_IVAR____TtC8Business30BIABubbleOptionsViewController_viewModel];
  v10 = type metadata accessor for BIABubbleViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  swift_unknownObjectWeakInit(&a2[OBJC_IVAR____TtC8Business30BIABubbleOptionsViewController_containingView], 0);
  v11 = &a2[OBJC_IVAR____TtC8Business30BIABubbleOptionsViewController__shouldBeVisible];
  v17 = 0;
  v12 = a2;
  Published.init(initialValue:)(&v17, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v8, v4);
  sub_10003D1A8((uint64_t)v18, (uint64_t)&v12[OBJC_IVAR____TtC8Business30BIABubbleOptionsViewController_context]);

  v13 = (objc_class *)type metadata accessor for BIABubbleOptionsViewController(0);
  v16.receiver = v12;
  v16.super_class = v13;
  v14 = objc_msgSendSuper2(&v16, "initWithNibName:bundle:", 0, 0);
  sub_100010C40(v18);
  return v14;
}

id sub_100076184(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  _QWORD v10[5];
  _QWORD v11[5];

  v11[3] = type metadata accessor for PluginBubbleContext();
  v11[4] = &off_1000D6B68;
  v11[0] = a1;
  *(_QWORD *)&a2[OBJC_IVAR____TtC8Business33BIABubbleOptionsiOSViewController____lazy_storage___optionsLabel] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC8Business33BIABubbleOptionsiOSViewController_containingViewGestureRecognizer] = 0;
  sub_10003D1A8((uint64_t)v11, (uint64_t)v10);
  v4 = sub_100031BA4((uint64_t)v10, v10[3]);
  __chkstk_darwin(v4, v4);
  v6 = (_QWORD *)((char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v7 + 16))(v6);
  v8 = sub_10007601C(*v6, a2);
  sub_100010C40(v10);
  sub_100010C40(v11);
  return v8;
}

id sub_100076264(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD v18[3];
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _QWORD v22[5];

  v2 = type metadata accessor for PluginBubbleContext();
  v22[3] = v2;
  v22[4] = &off_1000D6B68;
  v22[0] = a1;
  sub_10003D1A8((uint64_t)v22, (uint64_t)v21);
  v3 = sub_100031BA4((uint64_t)v21, v21[3]);
  __chkstk_darwin(v3, v3);
  v5 = (_QWORD *)((char *)&v18[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v6 + 16))(v5);
  v7 = *v5;
  v19 = v2;
  v20 = &off_1000D6B68;
  v18[0] = v7;
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for BIABubbleOptionsiOSViewController(0));
  v9 = sub_100031BA4((uint64_t)v18, v19);
  __chkstk_darwin(v9, v9);
  v11 = (_QWORD *)((char *)&v18[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  v13 = *v11;
  v14 = a1;
  v15 = sub_100076184(v13, v8);
  sub_100010C40(v18);
  sub_100010C40(v21);
  sub_100010C40(v22);
  return v15;
}

char *sub_1000763B0(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void **v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  double v37;
  id v38;
  double v39;
  id v40;
  double v41;
  id v42;
  double v43;
  id v44;
  double v45;
  id v46;
  double v47;
  id v48;
  double v49;
  id v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  id v61;
  char *result;
  char *v63;
  void *v64;
  id v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  id v72;
  void *v73;
  id v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  double v82;
  char *v83;
  _QWORD *v84;
  char *v85;
  void *Strong;
  uint64_t v87;
  void *v88;
  void (*v89)(void *, void *);
  char *v90;
  _QWORD *v91;
  char **v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  _BYTE v123[24];
  objc_super v124;
  _QWORD v125[3];
  uint64_t v126;
  _UNKNOWN **v127;

  v107 = a1;
  v110 = sub_100007D40(&qword_1000EEFE8);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110, v5);
  v108 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for PluginBubbleContext();
  v127 = &off_1000D6B68;
  v125[0] = a2;
  v7 = &a3[OBJC_IVAR____TtC8Business13BIABubbleView_delegate];
  *v7 = 0;
  v7[1] = 0;
  v8 = &a3[OBJC_IVAR____TtC8Business13BIABubbleView_viewModel];
  v9 = type metadata accessor for BIABubbleViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Business13BIABubbleView_bubbleConstraints] = 0;
  a3[OBJC_IVAR____TtC8Business13BIABubbleView_wasSizeRequested] = 0;
  sub_10003D1A8((uint64_t)v125, (uint64_t)&a3[OBJC_IVAR____TtC8Business13BIABubbleView_context]);
  v10 = objc_allocWithZone((Class)UIView);
  v11 = a3;
  v12 = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business13BIABubbleView_contentView] = v12;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business13BIABubbleView_imageView] = v13;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business13BIABubbleView_textAndOptionsView] = v14;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business13BIABubbleView_titleAndSubtitleView] = v15;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business13BIABubbleView_iconView] = v16;
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business13BIABubbleView_titleLabel] = v17;
  v18 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business13BIABubbleView_subtitleLabel] = v18;
  v19 = (void **)sub_100008FA4(v125, v126);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business13BIABubbleView_optionsViewController] = sub_100076264(*v19);
  v20 = type metadata accessor for BIABubbleBinaryChoiceView();
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business13BIABubbleView_binaryChoiceView] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v20)), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business13BIABubbleView_subcriptions] = _swiftEmptyArrayStorage;

  v21 = (objc_class *)type metadata accessor for BIABubbleView(0);
  v124.receiver = v11;
  v124.super_class = v21;
  v22 = (char *)objc_msgSendSuper2(&v124, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v114 = OBJC_IVAR____TtC8Business13BIABubbleView_contentView;
  v23 = *(void **)&v22[OBJC_IVAR____TtC8Business13BIABubbleView_contentView];
  v115 = OBJC_IVAR____TtC8Business13BIABubbleView_imageView;
  v24 = *(void **)&v22[OBJC_IVAR____TtC8Business13BIABubbleView_imageView];
  v118 = OBJC_IVAR____TtC8Business13BIABubbleView_textAndOptionsView;
  v25 = *(void **)&v22[OBJC_IVAR____TtC8Business13BIABubbleView_textAndOptionsView];
  v116 = OBJC_IVAR____TtC8Business13BIABubbleView_titleAndSubtitleView;
  v26 = *(void **)&v22[OBJC_IVAR____TtC8Business13BIABubbleView_titleAndSubtitleView];
  v120 = OBJC_IVAR____TtC8Business13BIABubbleView_iconView;
  v27 = *(void **)&v22[OBJC_IVAR____TtC8Business13BIABubbleView_iconView];
  v117 = OBJC_IVAR____TtC8Business13BIABubbleView_binaryChoiceView;
  v28 = *(void **)&v22[OBJC_IVAR____TtC8Business13BIABubbleView_binaryChoiceView];
  v119 = OBJC_IVAR____TtC8Business13BIABubbleView_titleLabel;
  v29 = *(void **)&v22[OBJC_IVAR____TtC8Business13BIABubbleView_titleLabel];
  v121 = OBJC_IVAR____TtC8Business13BIABubbleView_subtitleLabel;
  v30 = *(void **)&v22[OBJC_IVAR____TtC8Business13BIABubbleView_subtitleLabel];
  v31 = v23;
  v113 = v31;
  v122 = v22;
  v32 = v24;
  v33 = v25;
  v34 = v26;
  v35 = v27;
  v111 = v28;
  v36 = v29;
  v112 = v30;
  objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v37) = 1144750080;
  objc_msgSend(v31, "setContentHuggingPriority:forAxis:", 1, v37);

  v38 = v32;
  objc_msgSend(v38, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v39) = 1144750080;
  objc_msgSend(v38, "setContentHuggingPriority:forAxis:", 1, v39);

  v40 = v33;
  objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v41) = 1144750080;
  objc_msgSend(v40, "setContentHuggingPriority:forAxis:", 1, v41);

  v42 = v34;
  objc_msgSend(v42, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v43) = 1144750080;
  objc_msgSend(v42, "setContentHuggingPriority:forAxis:", 1, v43);

  v44 = v35;
  objc_msgSend(v44, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v45) = 1144750080;
  objc_msgSend(v44, "setContentHuggingPriority:forAxis:", 1, v45);

  v46 = v111;
  objc_msgSend(v46, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v47) = 1144750080;
  objc_msgSend(v46, "setContentHuggingPriority:forAxis:", 1, v47);

  v48 = v36;
  objc_msgSend(v48, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v49) = 1144750080;
  objc_msgSend(v48, "setContentHuggingPriority:forAxis:", 1, v49);

  v50 = v112;
  v51 = v118;
  objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v52) = 1144750080;
  objc_msgSend(v50, "setContentHuggingPriority:forAxis:", 1, v52);

  v53 = v114;
  v54 = v115;

  v55 = *(void **)&v22[v53];
  v56 = v122;
  objc_msgSend(v122, "addSubview:", v55);
  objc_msgSend(v55, "addSubview:", *(_QWORD *)&v22[v54]);
  v57 = *(void **)&v22[v51];
  objc_msgSend(v55, "addSubview:", v57);
  v58 = *(void **)&v22[v116];
  objc_msgSend(v57, "addSubview:", v58);
  objc_msgSend(v58, "addSubview:", *(_QWORD *)&v22[v120]);
  objc_msgSend(v58, "addSubview:", *(_QWORD *)&v22[v119]);
  objc_msgSend(v58, "addSubview:", *(_QWORD *)&v22[v121]);
  v59 = OBJC_IVAR____TtC8Business13BIABubbleView_optionsViewController;
  v60 = *(void **)&v56[OBJC_IVAR____TtC8Business13BIABubbleView_optionsViewController];
  v61 = v57;
  result = (char *)objc_msgSend(v60, "view");
  if (result)
  {
    v63 = result;
    objc_msgSend(v61, "addSubview:", result);

    objc_msgSend(*(id *)&v22[v51], "addSubview:", *(_QWORD *)&v22[v117]);
    v64 = *(void **)&v56[v59];
    v65 = v107;
    objc_msgSend(v107, "addChildViewController:", v64);
    objc_msgSend(v64, "didMoveToParentViewController:", v65);
    v66 = qword_1000EBC08;
    v67 = v56;
    if (v66 != -1)
      swift_once(&qword_1000EBC08, sub_10002D6C0);
    objc_msgSend(v67, "setBackgroundColor:", qword_1000F8988);

    objc_msgSend(*(id *)&v22[v53], "setBackgroundColor:", qword_1000F8988);
    v68 = qword_1000EBC18;
    v69 = *(id *)&v22[v54];
    if (v68 != -1)
      swift_once(&qword_1000EBC18, sub_10002D738);
    objc_msgSend(v69, "setTintColor:", qword_1000F8998);

    v70 = *(void **)&v22[v54];
    objc_msgSend(v70, "setContentMode:", 1);
    v71 = qword_1000EBC00;
    v72 = v70;
    if (v71 != -1)
      swift_once(&qword_1000EBC00, sub_10002D670);
    objc_msgSend(v72, "setBackgroundColor:", qword_1000F8980);

    objc_msgSend(*(id *)&v22[v118], "setBackgroundColor:", qword_1000F8988);
    v73 = *(void **)&v22[v120];
    objc_msgSend(v73, "setContentMode:", 2);
    objc_msgSend(v73, "setClipsToBounds:", 1);
    v74 = objc_msgSend(v73, "layer");
    objc_msgSend(v74, "setCornerRadius:", 13.0);

    v75 = qword_1000EBC10;
    v76 = *(id *)&v22[v119];
    if (v75 != -1)
      swift_once(&qword_1000EBC10, sub_10002D6F4);
    v77 = qword_1000F8990;
    objc_msgSend(v76, "setTextColor:", qword_1000F8998);
    objc_msgSend(v76, "setFont:", v77);
    objc_msgSend(v76, "setLineBreakMode:", 0);
    objc_msgSend(v76, "setNumberOfLines:", 0);
    LODWORD(v78) = 1148846080;
    objc_msgSend(v76, "setContentCompressionResistancePriority:forAxis:", 1, v78);
    objc_msgSend(v76, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    v79 = qword_1000EBC20;
    v80 = *(id *)&v22[v121];
    if (v79 != -1)
      swift_once(&qword_1000EBC20, sub_10002D74C);
    v81 = qword_1000F89A0;
    if (qword_1000EBC28 != -1)
      swift_once(&qword_1000EBC28, sub_10002D760);
    objc_msgSend(v80, "setTextColor:", qword_1000F89A8);
    objc_msgSend(v80, "setFont:", v81);
    objc_msgSend(v80, "setLineBreakMode:", 0);
    objc_msgSend(v80, "setNumberOfLines:", 0);
    LODWORD(v82) = 1148846080;
    objc_msgSend(v80, "setContentCompressionResistancePriority:forAxis:", 1, v82);
    objc_msgSend(v80, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    v83 = v122;
    v84 = *(_QWORD **)&v122[v59];
    v85 = (char *)v84 + OBJC_IVAR____TtC8Business30BIABubbleOptionsViewController_containingView;
    Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)v84 + OBJC_IVAR____TtC8Business30BIABubbleOptionsViewController_containingView);
    v87 = swift_unknownObjectWeakAssign(v85, v67);
    v88 = (void *)swift_unknownObjectWeakLoadStrong(v87);
    v89 = *(void (**)(void *, void *))((swift_isaMask & *v84) + 0xE8);
    v90 = v67;
    v91 = v84;
    v89(Strong, v88);

    v92 = (char **)(*(_QWORD *)&v22[v117] + OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_delegate);
    v93 = *v92;
    *v92 = v67;
    v92[1] = (char *)&off_1000D91A0;
    v94 = v90;
    swift_unknownObjectRelease(v93);
    swift_beginAccess(*(_QWORD *)&v83[v59] + OBJC_IVAR____TtC8Business30BIABubbleOptionsViewController__shouldBeVisible, v123, 33, 0);
    v95 = sub_100007D40(&qword_1000EEFF0);
    v96 = v108;
    Published.projectedValue.getter(v95);
    swift_endAccess(v123);
    v97 = swift_allocObject(&unk_1000D9B88, 24, 7);
    swift_unknownObjectWeakInit(v97 + 16, v94);
    v98 = sub_100076F20();
    v99 = v110;
    v100 = Publisher<>.sink(receiveValue:)(sub_100076F18, v97, v110, v98);
    swift_release(v97);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v96, v99);
    v101 = &v94[OBJC_IVAR____TtC8Business13BIABubbleView_subcriptions];
    v102 = swift_beginAccess(&v94[OBJC_IVAR____TtC8Business13BIABubbleView_subcriptions], v123, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v102);
    v104 = *(_QWORD *)((*(_QWORD *)v101 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v103 = *(_QWORD *)((*(_QWORD *)v101 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v104 >= v103 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v103 > 1, v104 + 1, 1);
    v105 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v104, v100);
    specialized Array._endMutation()(v105);
    swift_endAccess(v123);

    sub_100010C40(v125);
    return v94;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100076EF4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100076F18(uint64_t a1)
{
  uint64_t v1;

  return sub_10005AE54(a1, v1);
}

unint64_t sub_100076F20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EEFF8;
  if (!qword_1000EEFF8)
  {
    v1 = sub_100007DCC(&qword_1000EEFE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1000EEFF8);
  }
  return result;
}

void sub_100076F6C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  uint64_t v9;
  id v10;
  id v11;
  objc_super v12;

  v3 = (void *)a1;
  if (qword_1000EBCB8 != -1)
    a1 = swift_once(&qword_1000EBCB8, sub_100082798);
  v4 = qword_1000F8A90;
  v5 = static os_log_type_t.debug.getter(a1, a2);
  v6 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v7 = swift_allocObject(v6, 112, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1000ADFC0;
  v8 = (objc_class *)type metadata accessor for IMBMessagesAppViewController();
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = sub_1000798D4(&qword_1000EF110, v9, (uint64_t (*)(uint64_t))type metadata accessor for IMBMessagesAppViewController);
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 96) = sub_1000090C8(0, &qword_1000ED510, MSConversation_ptr);
  *(_QWORD *)(v7 + 104) = sub_100079894((unint64_t *)&unk_1000EF190, &qword_1000ED510, MSConversation_ptr);
  *(_QWORD *)(v7 + 72) = v3;
  v10 = v2;
  v11 = v3;
  os_log(_:dso:log:type:_:)("%{public}@: willBecomeActive with conversation: %@", 50, 2, &_mh_execute_header, v4, v5, v7);
  swift_bridgeObjectRelease(v7);
  v12.receiver = v10;
  v12.super_class = v8;
  objc_msgSendSuper2(&v12, "willBecomeActiveWithConversation:", v11);
  sub_100077664((uint64_t)v11, (uint64_t)objc_msgSend(v10, "presentationStyle"));
}

void sub_100077138(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  objc_super v17;

  v3 = (id)a1;
  if (qword_1000EBCB8 != -1)
    a1 = swift_once(&qword_1000EBCB8, sub_100082798);
  v4 = qword_1000F8A90;
  v5 = static os_log_type_t.debug.getter(a1, a2);
  v6 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v7 = swift_allocObject(v6, 152, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1000AF280;
  v8 = (objc_class *)type metadata accessor for IMBMessagesAppViewController();
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = sub_1000798D4(&qword_1000EF110, v9, (uint64_t (*)(uint64_t))type metadata accessor for IMBMessagesAppViewController);
  *(_QWORD *)(v7 + 32) = v2;
  if (v3)
  {
    if (v3 == (id)2)
    {
      v10 = 0xEA00000000007470;
      v11 = 0x697263736E617274;
    }
    else if (v3 == (id)1)
    {
      v10 = 0xE800000000000000;
      v11 = 0x6465646E61707865;
    }
    else
    {
      v10 = 0xE700000000000000;
      v11 = 0x6E776F6E6B6E75;
    }
  }
  else
  {
    v10 = 0xE700000000000000;
    v11 = 0x746361706D6F63;
  }
  *(_QWORD *)(v7 + 96) = &type metadata for String;
  *(_QWORD *)(v7 + 104) = sub_100009084();
  *(_QWORD *)(v7 + 72) = v11;
  *(_QWORD *)(v7 + 80) = v10;
  v12 = v2;
  v13 = objc_msgSend(v12, "activeConversation");
  if (v13)
  {
    v14 = v13;
    *(_QWORD *)(v7 + 136) = sub_1000090C8(0, &qword_1000ED510, MSConversation_ptr);
    *(_QWORD *)(v7 + 144) = sub_100079894((unint64_t *)&unk_1000EF190, &qword_1000ED510, MSConversation_ptr);
    *(_QWORD *)(v7 + 112) = v14;
    os_log(_:dso:log:type:_:)("%{public}@: willTransitionTo presentationStyle: %{public}@ with conversation %@", 79, 2, &_mh_execute_header, v4, v5, v7);
    swift_bridgeObjectRelease(v7);
    v17.receiver = v12;
    v17.super_class = v8;
    objc_msgSendSuper2(&v17, "willTransitionToPresentationStyle:", v3);
    v15 = objc_msgSend(v12, "activeConversation");
    if (v15)
    {
      v16 = v15;
      if (objc_msgSend(v12, "presentationStyle") != v3)
        sub_100077664((uint64_t)v16, (uint64_t)v3);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100077464()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;

  v1 = *(void **)&v0[OBJC_IVAR___IMBMessagesAppViewController_embeddedTranscriptViewController];
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  objc_msgSend(v2, "willMoveToParentViewController:", v0);
  objc_msgSend(v0, "addChildViewController:", v2);
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = v3;
  v5 = objc_msgSend(v2, "view");
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = v5;
  objc_msgSend(v4, "addSubview:", v5);

  objc_msgSend(v2, "didMoveToParentViewController:", v0);
  v17 = objc_msgSend(v2, "view");
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = objc_msgSend(v0, "view");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "bounds");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    objc_msgSend(v17, "setFrame:", v10, v12, v14, v16);
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_1000775E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OBJC_IVAR___IMBMessagesAppViewController____lazy_storage___dismissalDelegator;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___IMBMessagesAppViewController____lazy_storage___dismissalDelegator);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR___IMBMessagesAppViewController____lazy_storage___dismissalDelegator);
  }
  else
  {
    v4 = type metadata accessor for IMBMessagesAppViewControllerDismissalDelegator();
    v3 = swift_allocObject(v4, 24, 7);
    v5 = swift_unknownObjectWeakInit(v3 + 16, 0);
    swift_unknownObjectWeakAssign(v5, v0);
    v6 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v6);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

void sub_100077664(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;

  v4 = (void *)a1;
  if (qword_1000EBCB8 != -1)
    a1 = swift_once(&qword_1000EBCB8, sub_100082798);
  v5 = qword_1000F8A90;
  v6 = static os_log_type_t.debug.getter(a1, a2);
  v7 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v8 = swift_allocObject(v7, 112, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1000ADFC0;
  *(_QWORD *)(v8 + 56) = type metadata accessor for IMBMessagesAppViewController();
  *(_QWORD *)(v8 + 64) = sub_1000798D4(&qword_1000EF110, v9, (uint64_t (*)(uint64_t))type metadata accessor for IMBMessagesAppViewController);
  *(_QWORD *)(v8 + 32) = v2;
  if (a2)
  {
    if (a2 == 2)
    {
      v10 = 0xEA00000000007470;
      v11 = 0x697263736E617274;
    }
    else if (a2 == 1)
    {
      v10 = 0xE800000000000000;
      v11 = 0x6465646E61707865;
    }
    else
    {
      v10 = 0xE700000000000000;
      v11 = 0x6E776F6E6B6E75;
    }
  }
  else
  {
    v10 = 0xE700000000000000;
    v11 = 0x746361706D6F63;
  }
  *(_QWORD *)(v8 + 96) = &type metadata for String;
  *(_QWORD *)(v8 + 104) = sub_100009084();
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 80) = v10;
  v12 = v2;
  os_log(_:dso:log:type:_:)("%{public}@: presenting view controller with style: %{public}@", 61, 2, &_mh_execute_header, v5, v6, v8);
  swift_bridgeObjectRelease(v8);
  if (a2 == 2)
    sub_100078958(v4);
  else
    sub_100077808((SEL *)v4, a2 == 1);
}

void sub_100077808(SEL *a1, char a2)
{
  SEL *v2;
  SEL *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSString v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  unint64_t v40;
  SEL *v41;
  int v42;
  char v43;
  id v44;
  SEL *v45;
  id v46;
  id v47;
  id v48;
  char *v49;
  char v50;
  SEL *v51;
  id v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  NSString v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  Class isa;
  id v80;
  uint64_t v81;
  SEL *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  SEL *v88;
  uint64_t v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  SEL *v97;
  char *v98;
  SEL *v99;
  id v100;
  void *v101;
  id v102;
  void *v103;
  void *v104;
  id v105;
  void *v106;
  id v107;
  void *v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  id v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  void *v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  unsigned int v131;
  SEL *v132;
  id v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  id v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  SEL *v147;
  char v148;
  _QWORD *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  char v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  SEL *v173;
  uint64_t v174;
  id v175;
  NSString v176;
  char *v177;
  char *v178;
  NSString v179;
  __int128 v180;
  unint64_t v181;
  SEL *v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  __int128 v187;
  uint64_t v188;
  _UNKNOWN **v189;

  v3 = v2;
  v6 = type metadata accessor for URLHelper(0);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v174 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -[SEL selectedMessage](a1, "selectedMessage");
  v11 = (uint64_t)&off_1000EB000;
  if (!v10)
    goto LABEL_14;
  v12 = v10;
  v13 = type metadata accessor for IMBMessage();
  v183 = v12;
  v14 = sub_1000873D0(v183);
  if (!v14)
  {

LABEL_14:
    if (qword_1000EBCB8 != -1)
      v10 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
    v33 = qword_1000F8A90;
    v34 = static os_log_type_t.error.getter(v10);
    v35 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v36 = swift_allocObject(v35, 112, 7);
    *(_OWORD *)(v36 + 16) = xmmword_1000ADFC0;
    *(_QWORD *)(v36 + 56) = type metadata accessor for IMBMessagesAppViewController();
    *(_QWORD *)(v36 + 64) = sub_1000798D4(&qword_1000EF110, v37, (uint64_t (*)(uint64_t))type metadata accessor for IMBMessagesAppViewController);
    *(_QWORD *)(v36 + 32) = v3;
    v38 = (a2 & 1) == 0;
    if ((a2 & 1) != 0)
      v39 = 0x6465646E61707865;
    else
      v39 = 0x746361706D6F63;
    if (v38)
      v40 = 0xE700000000000000;
    else
      v40 = 0xE800000000000000;
    *(_QWORD *)(v36 + 96) = &type metadata for String;
    *(_QWORD *)(v36 + 104) = sub_100009084();
    *(_QWORD *)(v36 + 72) = v39;
    *(_QWORD *)(v36 + 80) = v40;
    v41 = v3;
    os_log(_:dso:log:type:_:)("%{public}@: No message specified for %{public}@ style presentation, not doing anything", 86, 2, &_mh_execute_header, v33, v34, v36);
    swift_bridgeObjectRelease(v36);
    return;
  }
  v15 = v14;
  v186 = v13;
  v16 = objc_msgSend(v14, "rootKey");
  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v18 = v17;
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
  }
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootListPickerKey);
  v21 = v20;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v24 = v19 == v22 && v21 == v23;
  v179 = v16;
  if (v24)
  {
    swift_bridgeObjectRelease_n(v21, 2);
  }
  else
  {
    v25 = v23;
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v25);
    if ((v26 & 1) == 0)
    {
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootContentKey);
      v29 = v28;
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v32 = v30;
      if (v27 == v31 && v29 == v30)
      {
        swift_bridgeObjectRelease_n(v29, 2);
LABEL_29:
        v51 = a1;
        v52 = v15;
        sub_10004EA08((uint64_t)v9);
        v188 = v6;
        v189 = &off_1000D8BD0;
        v53 = sub_100030FF8(&v187);
        sub_100020D60((uint64_t)v9, (uint64_t)v53);
        v54 = (char *)objc_allocWithZone((Class)type metadata accessor for IMBHTMLContentViewController());
        v55 = sub_100031BA4((uint64_t)&v187, v188);
        __chkstk_darwin(v55, v55);
        v57 = (char *)&v174 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v58 + 16))(v57);
        v59 = sub_100079914(v51, v52, (uint64_t)v57, v54);
LABEL_30:
        v47 = v59;

LABEL_31:
        sub_100010C40(&v187);
        sub_100020DA4((uint64_t)v9);
        goto LABEL_32;
      }
      v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0);
      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease(v32);
      if ((v50 & 1) != 0)
        goto LABEL_29;
      v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootEventKey);
      v126 = v125;
      v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v129 = v127;
      if (v124 == v128 && v126 == v127)
      {
        swift_bridgeObjectRelease_n(v126, 2);
LABEL_59:
        v131 = objc_msgSend(v15, "isFromMe");
        v132 = a1;
        v133 = v15;
        sub_10004EA08((uint64_t)v9);
        v188 = v6;
        v189 = &off_1000D8BD0;
        v134 = sub_100030FF8(&v187);
        sub_100020D60((uint64_t)v9, (uint64_t)v134);
        if (v131)
        {
          v135 = (char *)objc_allocWithZone((Class)type metadata accessor for IMBTimeSelectedViewController());
          v136 = sub_100031BA4((uint64_t)&v187, v188);
          __chkstk_darwin(v136, v136);
          v138 = (char *)&v174 - ((v137 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v139 + 16))(v138);
          v140 = sub_100079B5C(v132, v133, (uint64_t)v138, v135);
        }
        else
        {
          v141 = (char *)objc_allocWithZone((Class)type metadata accessor for IMBTimeSelectionTableViewController());
          v142 = sub_100031BA4((uint64_t)&v187, v188);
          __chkstk_darwin(v142, v142);
          v144 = (char *)&v174 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v145 + 16))(v144);
          v140 = sub_100079D3C(v132, v133, (uint64_t)v144, v141);
        }
        v47 = v140;

        goto LABEL_31;
      }
      v130 = _stringCompareWithSmolCheck(_:_:expecting:)(v124, v126, v128, v127, 0);
      swift_bridgeObjectRelease(v126);
      swift_bridgeObjectRelease(v129);
      if ((v130 & 1) != 0)
        goto LABEL_59;
      v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootAuthenticateKey);
      v81 = v146;
      v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v82 = v147;
      if (v85 == v84 && (SEL *)v81 == v147)
      {
        swift_bridgeObjectRelease_n(v81, 2);
LABEL_68:
        v51 = a1;
        v52 = v15;
        sub_10004EA08((uint64_t)v9);
        v188 = v6;
        v189 = &off_1000D8BD0;
        v149 = sub_100030FF8(&v187);
        sub_100020D60((uint64_t)v9, (uint64_t)v149);
        v150 = (char *)objc_allocWithZone((Class)type metadata accessor for IMBAuthenticationViewController());
        v151 = sub_100031BA4((uint64_t)&v187, v188);
        __chkstk_darwin(v151, v151);
        v153 = (char *)&v174 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v154 + 16))(v153);
        v59 = sub_100079EBC(v51, v52, (uint64_t)v153, v150);
        goto LABEL_30;
      }
LABEL_67:
      v148 = _stringCompareWithSmolCheck(_:_:expecting:)(v85, v81, v84, v82, 0);
      swift_bridgeObjectRelease(v81);
      swift_bridgeObjectRelease(v82);
      if ((v148 & 1) != 0)
        goto LABEL_68;
      v155 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootJITAppKitKey);
      v157 = v156;
      v159 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v160 = v158;
      if (v155 == v159 && v157 == v158)
      {
        swift_bridgeObjectRelease_n(v157, 2);
      }
      else
      {
        v161 = _stringCompareWithSmolCheck(_:_:expecting:)(v155, v157, v159, v158, 0);
        swift_bridgeObjectRelease(v157);
        v162 = swift_bridgeObjectRelease(v160);
        if ((v161 & 1) == 0)
        {
          if (*(_QWORD *)(v11 + 3256) == -1)
          {
LABEL_75:
            v165 = qword_1000F8A90;
            v166 = static os_log_type_t.error.getter(v162);
            v167 = sub_100007D40((uint64_t *)&unk_1000ECE50);
            v168 = swift_allocObject(v167, 112, 7);
            *(_OWORD *)(v168 + 16) = xmmword_1000ADFC0;
            *(_QWORD *)(v168 + 56) = type metadata accessor for IMBMessagesAppViewController();
            *(_QWORD *)(v168 + 64) = sub_1000798D4(&qword_1000EF110, v169, (uint64_t (*)(uint64_t))type metadata accessor for IMBMessagesAppViewController);
            *(_QWORD *)(v168 + 32) = v3;
            v170 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
            v172 = v171;
            *(_QWORD *)(v168 + 96) = &type metadata for String;
            *(_QWORD *)(v168 + 104) = sub_100009084();
            *(_QWORD *)(v168 + 72) = v170;
            *(_QWORD *)(v168 + 80) = v172;
            v173 = v3;
            os_log(_:dso:log:type:_:)("%{public}@: Couldn't pick the right presentDetailedViewController for rootKey %@, not doing anything", 100, 2, &_mh_execute_header, v165, v166, v168);
            swift_bridgeObjectRelease(v168);

            return;
          }
LABEL_87:
          v162 = swift_once(&qword_1000EBCB8, sub_100082798);
          goto LABEL_75;
        }
      }
      v163 = objc_msgSend(v15, "isFromMe") ^ 1;
      v164 = objc_allocWithZone((Class)type metadata accessor for IMBJITAppKitViewController());
      v49 = sub_100068C48(a1, v15, v163);
      goto LABEL_27;
    }
  }
  v42 = sub_10002DA10();
  v43 = objc_msgSend(v15, "isFromMe") ^ 1;
  if (v42 != 2)
  {
    v48 = objc_allocWithZone((Class)type metadata accessor for IMBListPickerTableViewController());
    v49 = sub_10001E180(a1, v15, v43);
LABEL_27:
    v47 = v49;
    goto LABEL_32;
  }
  v44 = objc_allocWithZone((Class)type metadata accessor for MacListPickerTableViewController());
  v45 = a1;
  v46 = v15;
  v47 = sub_1000A6144(v45, v46, v43);

LABEL_32:
  v60 = v186;
  v61 = (char *)v47;
  v62 = sub_1000775E0();
  v63 = &v61[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate];
  *((_QWORD *)v63 + 1) = &off_1000D9BA0;
  swift_unknownObjectWeakAssign(v63, v62);
  swift_release(v62);
  v64 = sub_10002DA10();
  v65 = v61;
  if (v64 != 2)
  {
    v65 = (char *)objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v61);
    objc_msgSend(v65, "setNavigationBarHidden:animated:", 1, 0);

  }
  v177 = v65;
  v178 = v61;
  v66 = v179;
  if (*(_QWORD *)(v11 + 3256) != -1)
    v64 = swift_once(&qword_1000EBCB8, sub_100082798);
  v67 = qword_1000F8A90;
  v68 = static os_log_type_t.default.getter(v64);
  v186 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v69 = swift_allocObject(v186, 232, 7);
  *(_OWORD *)(v69 + 16) = xmmword_1000B2350;
  v185 = type metadata accessor for IMBMessagesAppViewController();
  *(_QWORD *)(v69 + 56) = v185;
  v184 = sub_1000798D4(&qword_1000EF110, v70, (uint64_t (*)(uint64_t))type metadata accessor for IMBMessagesAppViewController);
  *(_QWORD *)(v69 + 64) = v184;
  *(_QWORD *)(v69 + 32) = v3;
  *(_QWORD *)(v69 + 96) = sub_1000090C8(0, &qword_1000ED5A8, MSMessage_ptr);
  *(_QWORD *)(v69 + 104) = sub_100079894((unint64_t *)&qword_1000EF140, &qword_1000ED5A8, MSMessage_ptr);
  *(_QWORD *)(v69 + 72) = v183;
  *(_QWORD *)(v69 + 136) = v60;
  *(_QWORD *)(v69 + 144) = sub_1000798D4(&qword_1000EF148, 255, (uint64_t (*)(uint64_t))type metadata accessor for IMBMessage);
  *(_QWORD *)(v69 + 112) = v15;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
  v72 = v71;
  v73 = v183;
  v16 = v15;
  v3 = v3;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v72);
  v188 = sub_1000090C8(0, &qword_1000EF150, NSString_ptr);
  v189 = (_UNKNOWN **)sub_100079894(&qword_1000EF158, &qword_1000EF150, NSString_ptr);
  *(_QWORD *)&v187 = v15;
  sub_10001CFC0(&v187, v69 + 152);
  v175 = v73;
  v74 = objc_msgSend(v73, "_data");
  if (!v74)
  {
LABEL_82:

    __break(1u);
    goto LABEL_83;
  }
  v75 = v74;
  v76 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v74);
  v78 = v77;

  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100010BFC(v76, v78);
  v9 = (char *)&qword_1000EF160;
  *(_QWORD *)(v69 + 216) = sub_1000090C8(0, &qword_1000EF160, NSData_ptr);
  *(_QWORD *)(v69 + 224) = sub_100079894(&qword_1000EF168, &qword_1000EF160, NSData_ptr);
  *(_QWORD *)(v69 + 192) = isa;
  os_log(_:dso:log:type:_:)("%@: presentDetailedViewController selectedMessage %@ imbMessage %@ rootKey %@ _data %@", 86, 2, &_mh_execute_header, v67, v68, v69);
  swift_bridgeObjectRelease(v69);
  v80 = -[SEL childViewControllers](v3, "childViewControllers");
  v183 = (id)sub_1000090C8(0, (unint64_t *)&qword_1000EEB78, UIViewController_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v80, v183);

  v176 = v16;
  v182 = v3;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v3 = (SEL *)v6;
    else
      v3 = (SEL *)(v6 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v6);
    v81 = _CocoaArrayWrapper.endIndex.getter(v3);
    a1 = (SEL *)&BIABubbleOptionsiOSViewController;
    if (v81)
    {
LABEL_39:
      v181 = v6 & 0xC000000000000001;
      v11 = 4;
      v180 = xmmword_1000ADFC0;
      v82 = v182;
      while (1)
      {
        v15 = (NSString)(v11 - 4);
        if (v181)
          v83 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v6);
        else
          v83 = *(id *)(v6 + 8 * v11);
        v16 = v83;
        v85 = v11 - 3;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
          goto LABEL_67;
        }
        v15 = (NSString)qword_1000F8A90;
        v9 = (char *)static os_log_type_t.error.getter(v83);
        v3 = a1;
        v86 = swift_allocObject(v186, 112, 7);
        *(_OWORD *)(v86 + 16) = v180;
        v87 = v184;
        *(_QWORD *)(v86 + 56) = v185;
        *(_QWORD *)(v86 + 64) = v87;
        *(_QWORD *)(v86 + 32) = v82;
        *(_QWORD *)(v86 + 96) = v183;
        *(_QWORD *)(v86 + 104) = sub_100079894((unint64_t *)&unk_1000EF170, (unint64_t *)&qword_1000EEB78, UIViewController_ptr);
        *(_QWORD *)(v86 + 72) = v16;
        v88 = v82;
        v16 = v16;
        os_log(_:dso:log:type:_:)("%{public}@: Removing child view controller: %@", 46, 2, &_mh_execute_header, v15, v9, v86);
        v89 = v86;
        a1 = v3;
        swift_bridgeObjectRelease(v89);
        objc_msgSend(v16, "willMoveToParentViewController:", 0);
        objc_msgSend(v16, "removeFromParentViewController");
        v90 = objc_msgSend(v16, v3[476]);
        if (!v90)
          break;
        v91 = v90;
        objc_msgSend(v90, "removeFromSuperview");

        objc_msgSend(v16, "didMoveToParentViewController:", 0);
        ++v11;
        if (v85 == v81)
          goto LABEL_46;
      }
      __break(1u);
      goto LABEL_82;
    }
  }
  else
  {
    v81 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    a1 = (SEL *)&BIABubbleOptionsiOSViewController;
    if (v81)
      goto LABEL_39;
  }
LABEL_46:
  v92 = swift_bridgeObjectRelease_n(v6, 2);
  v93 = qword_1000F8A90;
  v15 = (NSString)static os_log_type_t.error.getter(v92);
  v94 = swift_allocObject(v186, 112, 7);
  *(_OWORD *)(v94 + 16) = xmmword_1000ADFC0;
  v95 = v184;
  *(_QWORD *)(v94 + 56) = v185;
  *(_QWORD *)(v94 + 64) = v95;
  v97 = v182;
  v96 = v183;
  *(_QWORD *)(v94 + 32) = v182;
  *(_QWORD *)(v94 + 96) = v96;
  *(_QWORD *)(v94 + 104) = sub_100079894((unint64_t *)&unk_1000EF170, (unint64_t *)&qword_1000EEB78, UIViewController_ptr);
  v98 = v177;
  *(_QWORD *)(v94 + 72) = v177;
  v99 = v97;
  v3 = v98;
  os_log(_:dso:log:type:_:)("%{public}@: Adding child view controller: %@", 44, 2, &_mh_execute_header, v93, v15, v94);
  swift_bridgeObjectRelease(v94);
  -[SEL willMoveToParentViewController:](v3, "willMoveToParentViewController:", v99);
  -[SEL addChildViewController:](v99, "addChildViewController:", v3);
  v100 = objc_msgSend(v99, a1[476]);
  if (!v100)
  {
LABEL_83:

    __break(1u);
    goto LABEL_84;
  }
  v101 = v100;
  v102 = objc_msgSend(v3, a1[476]);
  v103 = v179;
  v104 = v176;
  if (!v102)
  {
LABEL_84:

    __break(1u);
    goto LABEL_85;
  }
  v15 = v102;
  objc_msgSend(v101, "addSubview:", v102);

  -[SEL didMoveToParentViewController:](v3, "didMoveToParentViewController:", v99);
  v105 = objc_msgSend(v3, a1[476]);
  if (!v105)
  {
LABEL_85:

    __break(1u);
    goto LABEL_86;
  }
  v106 = v105;
  v107 = objc_msgSend(v99, a1[476]);
  if (!v107)
  {
LABEL_86:

    __break(1u);
    goto LABEL_87;
  }
  v108 = v107;
  objc_msgSend(v107, "bounds");
  v110 = v109;
  v112 = v111;
  v114 = v113;
  v116 = v115;

  objc_msgSend(v106, "setFrame:", v110, v112, v114, v116);
  v117 = objc_msgSend(v104, "rootObject");
  if (v117
    && (v118 = v117,
        v119 = objc_opt_self(BCServerSideOAuth2Request),
        v120 = swift_dynamicCastObjCClass(v118, v119),
        swift_unknownObjectRelease(v118),
        v120))
  {
    v121 = objc_msgSend(v99, a1[476]);
    if (v121)
    {
      v122 = v121;
      v123 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      objc_msgSend(v122, "setBackgroundColor:", v123);

    }
    else
    {

      __break(1u);
    }
  }
  else
  {

  }
}

void sub_100078958(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  id v25;
  void *v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  id v42;
  char *v43;
  char *v44;
  char *v45;
  _QWORD v46[3];
  uint64_t v47;
  _UNKNOWN **v48;
  id v49[6];

  v3 = type metadata accessor for URLHelper(0);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v46[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v1[OBJC_IVAR___IMBMessagesAppViewController_embeddedTranscriptViewController];
  if (*(_QWORD *)&v1[OBJC_IVAR___IMBMessagesAppViewController_embeddedTranscriptViewController])
  {
    if (qword_1000EBCB8 != -1)
      swift_once(&qword_1000EBCB8, sub_100082798);
    v8 = qword_1000F8A90;
    v9 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v10 = swift_allocObject(v9, 152, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1000AF280;
    *(_QWORD *)(v10 + 56) = type metadata accessor for IMBMessagesAppViewController();
    *(_QWORD *)(v10 + 64) = sub_1000798D4(&qword_1000EF110, v11, (uint64_t (*)(uint64_t))type metadata accessor for IMBMessagesAppViewController);
    *(_QWORD *)(v10 + 32) = v1;
    v12 = v1;
    v49[0] = objc_msgSend(a1, "selectedMessage");
    v13 = sub_100007D40(&qword_1000EF118);
    v14 = String.init<A>(describing:)(v49, v13);
    v16 = v15;
    *(_QWORD *)(v10 + 96) = &type metadata for String;
    v17 = sub_100009084();
    *(_QWORD *)(v10 + 104) = v17;
    *(_QWORD *)(v10 + 72) = v14;
    *(_QWORD *)(v10 + 80) = v16;
    *(_OWORD *)v49 = *(_OWORD *)v7;
    v18 = v49[0];
    v19 = sub_100007D40((uint64_t *)&unk_1000EF120);
    v20 = String.init<A>(describing:)(v49, v19);
    *(_QWORD *)(v10 + 136) = &type metadata for String;
    *(_QWORD *)(v10 + 144) = v17;
    *(_QWORD *)(v10 + 112) = v20;
    *(_QWORD *)(v10 + 120) = v21;
    v22 = static os_log_type_t.default.getter(v20);
    os_log(_:dso:log:type:_:)("%{public}@: being asked to present a transcriptVC for message: %@ when I'm alreadying presenting: %@", 100, 2, &_mh_execute_header, v8, v22, v10);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    objc_allocWithZone((Class)type metadata accessor for PluginBubbleContext());
    v23 = a1;
    v24 = v1;
    v25 = sub_100018440(v24, v23);
    if (v25)
    {
      v26 = v25;
      sub_10003D1A8((uint64_t)&v24[OBJC_IVAR___IMBMessagesAppViewController_featureFlagArbiter], (uint64_t)v49);
      sub_10004EA08((uint64_t)v6);
      v47 = v3;
      v48 = &off_1000D8BD0;
      v27 = sub_100030FF8(v46);
      sub_100020D60((uint64_t)v6, (uint64_t)v27);
      v28 = (char *)objc_allocWithZone((Class)type metadata accessor for IMBTranscriptMessageViewController());
      v29 = sub_100031BA4((uint64_t)v46, v47);
      __chkstk_darwin(v29, v29);
      v31 = (char *)&v46[-1] - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v32 + 16))(v31);
      v33 = sub_100079630(v26, v49, (uint64_t)v31, v28);
      sub_100010C40(v46);
      sub_100020DA4((uint64_t)v6);
      v34 = &v33[OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_messagesAppProxy];
      *((_QWORD *)v34 + 1) = &off_1000D9BB8;
      swift_unknownObjectWeakAssign(v34, v24);
      if (!*(_QWORD *)v7)
      {
        *(_QWORD *)v7 = v33;
        *((_QWORD *)v7 + 1) = &off_1000D7E40;
        v35 = v33;
        sub_100077464();

        return;
      }
      __break(1u);
    }
    else
    {
      if (qword_1000EBCB8 != -1)
        swift_once(&qword_1000EBCB8, sub_100082798);
      v36 = qword_1000F8A90;
      v37 = sub_100007D40((uint64_t *)&unk_1000ECE50);
      v38 = swift_allocObject(v37, 72, 7);
      *(_OWORD *)(v38 + 16) = xmmword_1000AF070;
      *(_QWORD *)(v38 + 56) = type metadata accessor for IMBMessagesAppViewController();
      *(_QWORD *)(v38 + 64) = sub_1000798D4(&qword_1000EF110, v39, (uint64_t (*)(uint64_t))type metadata accessor for IMBMessagesAppViewController);
      *(_QWORD *)(v38 + 32) = v24;
      v40 = v24;
      v41 = static os_log_type_t.default.getter(v40);
      os_log(_:dso:log:type:_:)("%{public}@: No message specified for transcript style presentation, using empty bubble", 86, 2, &_mh_execute_header, v36, v41, v38);
      swift_bridgeObjectRelease(v38);
      v42 = objc_allocWithZone((Class)type metadata accessor for IMBTranscriptEmptyMessageViewController());
      v43 = (char *)sub_100031184(v23);
      v44 = &v43[OBJC_IVAR____TtC8Business39IMBTranscriptEmptyMessageViewController_messagesAppProxy];
      *((_QWORD *)v44 + 1) = &off_1000D9BB8;
      swift_unknownObjectWeakAssign(v44, v40);
      if (!*(_QWORD *)v7)
      {
        *(_QWORD *)v7 = v43;
        *((_QWORD *)v7 + 1) = &off_1000D7880;
        v45 = v43;
        sub_100077464();

        return;
      }
    }
    __break(1u);
  }
}

id sub_100078DC8(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  id v7;
  char *v8;
  id v9;
  char *v10;
  NSString v11;
  id v12;
  objc_super v14;

  v6 = &v3[OBJC_IVAR___IMBMessagesAppViewController_featureFlagArbiter];
  v7 = objc_allocWithZone((Class)BCFeatureFlag);
  v8 = v3;
  v9 = objc_msgSend(v7, "init");
  *((_QWORD *)v6 + 3) = sub_1000090C8(0, (unint64_t *)&unk_1000EF180, BCFeatureFlag_ptr);
  *((_QWORD *)v6 + 4) = &off_1000D71A0;
  *(_QWORD *)v6 = v9;
  v10 = &v8[OBJC_IVAR___IMBMessagesAppViewController_embeddedTranscriptViewController];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR___IMBMessagesAppViewController____lazy_storage___dismissalDelegator] = 0;

  if (a2)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for IMBMessagesAppViewController();
  v12 = objc_msgSendSuper2(&v14, "initWithNibName:bundle:", v11, a3);

  return v12;
}

id sub_100078F3C(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  char *v5;
  id v6;
  char *v7;
  id v8;
  objc_super v10;

  v3 = &v1[OBJC_IVAR___IMBMessagesAppViewController_featureFlagArbiter];
  v4 = objc_allocWithZone((Class)BCFeatureFlag);
  v5 = v1;
  v6 = objc_msgSend(v4, "init");
  *((_QWORD *)v3 + 3) = sub_1000090C8(0, (unint64_t *)&unk_1000EF180, BCFeatureFlag_ptr);
  *((_QWORD *)v3 + 4) = &off_1000D71A0;
  *(_QWORD *)v3 = v6;
  v7 = &v5[OBJC_IVAR___IMBMessagesAppViewController_embeddedTranscriptViewController];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR___IMBMessagesAppViewController____lazy_storage___dismissalDelegator] = 0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for IMBMessagesAppViewController();
  v8 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);

  return v8;
}

id sub_100079110()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBMessagesAppViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBMessagesAppViewController()
{
  return objc_opt_self(IMBMessagesAppViewController);
}

uint64_t sub_1000791A8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  __int128 v25;
  uint64_t ObjectType;
  char *v27;

  v1 = v0;
  v2 = type metadata accessor for Mirror.AncestorRepresentation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007D40(&qword_1000ED508);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v1;
  v11 = sub_100007D40(&qword_1000ED050);
  v12 = swift_allocObject(v11, 128, 7);
  v13 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_1000ADFC0;
  *(_QWORD *)(v12 + 32) = 0xD000000000000014;
  *(_QWORD *)(v12 + 40) = 0x80000001000B9E10;
  v14 = *(void **)&v1[OBJC_IVAR___IMBMessagesAppViewController_embeddedTranscriptViewController];
  if (v14)
  {
    ObjectType = swift_getObjectType(*(_QWORD *)&v1[OBJC_IVAR___IMBMessagesAppViewController_embeddedTranscriptViewController]);
    *(_QWORD *)&v25 = v14;
    sub_100009CF0(&v25, (_OWORD *)(v13 + 48));
  }
  else
  {
    *(_QWORD *)(v12 + 72) = &type metadata for String;
    *(_QWORD *)(v12 + 48) = 7104878;
    *(_QWORD *)(v12 + 56) = 0xE300000000000000;
  }
  v15 = v1;
  *(_QWORD *)(v13 + 80) = 0x65746E6573657270;
  *(_QWORD *)(v13 + 88) = 0xEB00000000435664;
  v16 = v14;
  v17 = objc_msgSend(v1, "presentedViewController");
  if (v17)
  {
    v18 = v17;
    ObjectType = sub_1000090C8(0, (unint64_t *)&qword_1000EEB78, UIViewController_ptr);
    *(_QWORD *)&v25 = v18;
    sub_100009CF0(&v25, (_OWORD *)(v13 + 96));
  }
  else
  {
    *(_QWORD *)(v13 + 120) = &type metadata for String;
    *(_QWORD *)(v13 + 96) = 7104878;
    *(_QWORD *)(v13 + 104) = 0xE300000000000000;
  }
  v19 = enum case for Mirror.DisplayStyle.class(_:);
  v20 = type metadata accessor for Mirror.DisplayStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v10, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v10, 0, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for Mirror.AncestorRepresentation.generated(_:), v2);
  v22 = type metadata accessor for IMBMessagesAppViewController();
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)(&v27, v13, v10, v6, v22);
}

uint64_t sub_100079414()
{
  return sub_1000791A8();
}

void sub_100079434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;

  if (qword_1000EBCB8 != -1)
    a1 = swift_once(&qword_1000EBCB8, sub_100082798);
  v4 = qword_1000F8A90;
  v5 = static os_log_type_t.debug.getter(a1, a2);
  v6 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v7 = swift_allocObject(v6, 112, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1000ADFC0;
  v8 = v2 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
  v10 = Strong;
  if (Strong)
  {
    v11 = objc_msgSend(Strong, "description");

    v10 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

  }
  else
  {
    v13 = 0;
  }
  *(_QWORD *)(v7 + 56) = &type metadata for String;
  v14 = sub_100009084();
  *(_QWORD *)(v7 + 64) = v14;
  v15 = 0xD000000000000024;
  if (v13)
    v15 = (unint64_t)v10;
  v16 = 0x80000001000B9E30;
  if (v13)
    v16 = v13;
  *(_QWORD *)(v7 + 32) = v15;
  *(_QWORD *)(v7 + 40) = v16;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, a2);
  v18 = dispatch thunk of CustomStringConvertible.description.getter(a2, WitnessTable);
  *(_QWORD *)(v7 + 96) = &type metadata for String;
  *(_QWORD *)(v7 + 104) = v14;
  *(_QWORD *)(v7 + 72) = v18;
  *(_QWORD *)(v7 + 80) = v19;
  os_log(_:dso:log:type:_:)("%{public}@: viewControllerDidFinish: %@", 39, 2, &_mh_execute_header, v4, v5, v7);
  swift_bridgeObjectRelease(v7);
  v20 = (void *)swift_unknownObjectWeakLoadStrong(v8);
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, "dismiss");

  }
}

uint64_t sub_1000795E8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for IMBMessagesAppViewControllerDismissalDelegator()
{
  return objc_opt_self(_TtC8BusinessP33_9C70006D0F6E8C49E88883B0CF99D19746IMBMessagesAppViewControllerDismissalDelegator);
}

char *sub_100079630(void *a1, _QWORD *a2, uint64_t a3, char *a4)
{
  _QWORD *v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  objc_class *ObjCClassFromMetadata;
  NSString *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  objc_super v30;
  _QWORD v31[5];

  v31[3] = type metadata accessor for URLHelper(0);
  v31[4] = &off_1000D8BD0;
  v8 = sub_100030FF8(v31);
  sub_100042128(a3, (uint64_t)v8);
  v9 = &a4[OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_messagesAppProxy];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  v10 = &a4[OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_bubbleView];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_authvc] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_pluginBubbleContext] = a1;
  sub_10003D1A8((uint64_t)a2, (uint64_t)&a4[OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_featureFlagArbiter]);
  sub_10003D1A8((uint64_t)v31, (uint64_t)&a4[OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_urlHelper]);
  v30.receiver = a4;
  v30.super_class = (Class)type metadata accessor for IMBTranscriptMessageViewController();
  v11 = a1;
  v12 = objc_msgSendSuper2(&v30, "initWithNibName:bundle:", 0, 0);
  v13 = qword_1000EBCB8;
  v14 = (char *)v12;
  v16 = v14;
  if (v13 != -1)
    v14 = (char *)swift_once(&qword_1000EBCB8, sub_100082798);
  v17 = qword_1000F8A90;
  v18 = static os_log_type_t.debug.getter(v14, v15);
  v19 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v20 = swift_allocObject(v19, 112, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1000ADFC0;
  ObjectType = swift_getObjectType(v16);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(ObjectType);
  v23 = NSStringFromClass(ObjCClassFromMetadata);
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;

  *(_QWORD *)(v20 + 56) = &type metadata for String;
  *(_QWORD *)(v20 + 64) = sub_100009084();
  *(_QWORD *)(v20 + 32) = v24;
  *(_QWORD *)(v20 + 40) = v26;
  v27 = *(void **)(*(_QWORD *)&v16[OBJC_IVAR____TtC8Business34IMBTranscriptMessageViewController_pluginBubbleContext]
                 + OBJC_IVAR____TtC8Business19PluginBubbleContext_bcMessage);
  *(_QWORD *)(v20 + 96) = sub_1000090C8(0, &qword_1000EBE68, BCMessage_ptr);
  *(_QWORD *)(v20 + 104) = sub_100079894((unint64_t *)&qword_1000EF130, &qword_1000EBE68, BCMessage_ptr);
  *(_QWORD *)(v20 + 72) = v27;
  v28 = v27;
  os_log(_:dso:log:type:_:)("Created a %@ for message: %@", 28, 2, &_mh_execute_header, v17, v18, v20);
  swift_bridgeObjectRelease(v20);

  sub_100010C40(v31);
  sub_100010C40(a2);
  return v16;
}

uint64_t sub_100079894(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1000090C8(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000798D4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = a3(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_100079914(void *a1, void *a2, uint64_t a3, char *a4)
{
  _QWORD *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  _QWORD v26[5];
  _QWORD v27[5];

  v27[3] = type metadata accessor for URLHelper(0);
  v27[4] = &off_1000D8BD0;
  v8 = sub_100030FF8(v27);
  sub_100042128(a3, (uint64_t)v8);
  v9 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_scrollview;
  v10 = objc_allocWithZone((Class)UIScrollView);
  v11 = a4;
  *(_QWORD *)&a4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_footerToolbar;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UIToolbar), "init");
  v13 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_toolbarBorder;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v14 = OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_shareButtonItem;
  v15 = type metadata accessor for IMBHTMLContentViewController();
  v16 = objc_allocWithZone((Class)UIBarButtonItem);
  v26[0] = v15;
  v17 = sub_100007D40((uint64_t *)&unk_1000ED4A0);
  v18 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v26, v17);
  v19 = objc_msgSend(v16, "initWithBarButtonSystemItem:target:action:", 9, v18, "shareButtonTapped:", v26[0]);
  swift_unknownObjectRelease(v18);
  *(_QWORD *)&v11[v14] = v19;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webview] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_headerView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_contentHeaderView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_webviewHeightConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business28IMBHTMLContentViewController_content] = 0;

  sub_10003D1A8((uint64_t)v27, (uint64_t)v26);
  v20 = sub_100031BA4((uint64_t)v26, v26[3]);
  __chkstk_darwin(v20, v20);
  v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  v24 = sub_1000A5DA8(a1, a2, (uint64_t)v22, v11);
  sub_100010C40(v26);
  sub_100010C40(v27);
  return v24;
}

id sub_100079B5C(void *a1, void *a2, uint64_t a3, char *a4)
{
  _QWORD *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  _QWORD v22[5];
  _QWORD v23[5];

  v23[3] = type metadata accessor for URLHelper(0);
  v23[4] = &off_1000D8BD0;
  v8 = sub_100030FF8(v23);
  sub_100042128(a3, (uint64_t)v8);
  v9 = OBJC_IVAR____TtC8Business29IMBTimeSelectedViewController_dayLabel;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = a4;
  *(_QWORD *)&a4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC8Business29IMBTimeSelectedViewController_dateLabel;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC8Business29IMBTimeSelectedViewController_timeLabel;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v14 = OBJC_IVAR____TtC8Business29IMBTimeSelectedViewController_warningLabel;
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v15 = OBJC_IVAR____TtC8Business29IMBTimeSelectedViewController_containerView;
  *(_QWORD *)&v11[v15] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business29IMBTimeSelectedViewController_tableViewData] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Business29IMBTimeSelectedViewController_proposedEvent] = 0;

  sub_10003D1A8((uint64_t)v23, (uint64_t)v22);
  v16 = sub_100031BA4((uint64_t)v22, v22[3]);
  __chkstk_darwin(v16, v16);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  v20 = sub_1000A5FB4(a1, a2, (uint64_t)v18, v11);
  sub_100010C40(v22);
  sub_100010C40(v23);
  return v20;
}

id sub_100079D3C(void *a1, void *a2, uint64_t a3, char *a4)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  _QWORD v15[5];
  _QWORD v16[5];

  v16[3] = type metadata accessor for URLHelper(0);
  v16[4] = &off_1000D8BD0;
  v8 = sub_100030FF8(v16);
  sub_100042128(a3, (uint64_t)v8);
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_proposedEvent] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_dates] = _swiftEmptyArrayStorage;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_datesDictionary] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_conflictedEvents] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedTimeslot] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedEvent] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedMessage] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedMessageInfo] = 0;
  sub_10003D1A8((uint64_t)v16, (uint64_t)v15);
  v9 = sub_100031BA4((uint64_t)v15, v15[3]);
  __chkstk_darwin(v9, v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  v13 = sub_1000A5FB4(a1, a2, (uint64_t)v11, a4);
  sub_100010C40(v15);
  sub_100010C40(v16);
  return v13;
}

id sub_100079EBC(void *a1, void *a2, uint64_t a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  NSString v24;
  id v25;
  void *v26;
  id v27;
  char *v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v34;
  void *v35;
  void *v36;
  __objc2_prot *v37;

  v35 = a2;
  v36 = a1;
  v6 = type metadata accessor for URLHelper(0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v8, v11);
  v14 = (char *)&v34 - v13;
  __chkstk_darwin(v12, v15);
  v17 = (char *)&v34 - v16;
  sub_100042128(a3, (uint64_t)&v34 - v16);
  v18 = OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_authenticationManager;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_authenticationManager] = 0;
  v19 = OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_webViewController;
  static String._unconditionallyBridgeFromObjectiveC(_:)(BCOAuthRedirectURI);
  v21 = v20;
  v22 = objc_allocWithZone((Class)type metadata accessor for IMBWebViewController());
  v23 = a4;
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v25 = objc_msgSend(v22, "initWithCallbackURI:", v24);

  *(_QWORD *)&a4[v19] = v25;
  v26 = v35;
  *(_QWORD *)&v23[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_session] = 0;
  v23[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_didShowAuth] = 0;
  *(_QWORD *)&v23[OBJC_IVAR____TtC8Business31IMBAuthenticationViewController_aswasWindow] = 0;
  v27 = objc_msgSend(v26, "rootObject");
  v28 = v23;
  if (v27)
  {
    v29 = v27;
    v37 = &OBJC_PROTOCOL___BCOAuth2RequestProtocol;
    v30 = swift_dynamicCastObjCProtocolConditional(v27, 1, &v37);
    if (v30)
    {
      v31 = objc_msgSend(objc_allocWithZone((Class)BCAuthenticationManager), "initWithAuthenticationRequest:", v30);
      swift_unknownObjectRelease(v29);
      v28 = *(char **)&a4[v18];
      *(_QWORD *)&a4[v18] = v31;

    }
    else
    {
      swift_unknownObjectRelease(v29);
      v28 = v23;
    }
  }

  sub_10004EA08((uint64_t)v14);
  sub_100020D60((uint64_t)v14, (uint64_t)v10);
  v32 = sub_1000A5DA8(v36, v26, (uint64_t)v10, v23);
  sub_100020DA4((uint64_t)v14);
  sub_100020DA4((uint64_t)v17);
  return v32;
}

void sub_10007A218(_QWORD *a1)
{
  _BYTE *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  unsigned int v11;
  NSString v12;
  id v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;

  if (a1)
  {
    v2 = a1;
    v3 = a1[2];
    v4 = v2[3];
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeslot];
    v6 = *(_QWORD *)(v5 + 16);
    v7 = *(_QWORD *)(v5 + 24);
    if (v3 != v6 || v4 != v7)
    {
      v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, v7, 0);
LABEL_12:
      v14 = OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected;
      v15 = v9 & 1;
      v1[OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected] = v9 & 1;
      v16 = *(void **)&v1[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeLabel];
      swift_retain(v2);
      sub_10007ABC4(v15);
      v18 = v17;
      objc_msgSend(v16, "setTextColor:", v17);

      v19 = objc_msgSend(v1, "layer");
      sub_10007ACC8();
      v21 = v20;
      objc_msgSend(v19, "setBorderColor:", v20);

      sub_10007ADC4(v1[v14]);
      v27 = v22;
      objc_msgSend(v1, "setBackgroundColor:");
      swift_release(v2);
LABEL_16:

      return;
    }
LABEL_11:
    v9 = 1;
    goto LABEL_12;
  }
  v10 = OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected;
  v1[OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected] = 0;
  v2 = *(_QWORD **)&v1[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeLabel];
  if (sub_10002DA10() > 1u)
  {
    v13 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    goto LABEL_15;
  }
  v11 = sub_10002DA10();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v12);

  if (v11 < 2)
  {
    if (!v13)
    {
      __break(1u);
      goto LABEL_11;
    }
LABEL_15:
    objc_msgSend(v2, "setTextColor:", v13);

    v23 = objc_msgSend(v1, "layer");
    sub_10007ACC8();
    v25 = v24;
    objc_msgSend(v23, "setBorderColor:", v24);

    sub_10007ADC4(v1[v10]);
    v27 = v26;
    objc_msgSend(v1, "setBackgroundColor:");
    goto LABEL_16;
  }
  if (v13)
    goto LABEL_15;
  __break(1u);
}

void sub_10007A474()
{
  char *v0;
  id v1;
  char v2;
  double v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v1 = objc_msgSend(v0, "layer");
  v2 = sub_10002DA10();
  v3 = 8.0;
  if (v2 == 2)
    v3 = 4.0;
  objc_msgSend(v1, "setCornerRadius:", v3);

  v4 = objc_msgSend(v0, "layer");
  objc_msgSend(v4, "setBorderWidth:", 1.0);

  v5 = *(void **)&v0[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeLabel];
  if (qword_1000EBCB0 != -1)
    swift_once(&qword_1000EBCB0, sub_10007A9B8);
  objc_msgSend(v5, "setFont:", qword_1000EF1A0);
  objc_msgSend(v5, "setTextAlignment:", 1);
  objc_msgSend(v0, "addSubview:", v5);
  v6 = OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected;
  sub_10007ABC4(v0[OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected]);
  v8 = v7;
  objc_msgSend(v5, "setTextColor:", v7);

  v9 = objc_msgSend(v0, "layer");
  sub_10007ACC8();
  v11 = v10;
  objc_msgSend(v9, "setBorderColor:", v10);

  sub_10007ADC4(v0[v6]);
  v13 = v12;
  objc_msgSend(v0, "setBackgroundColor:", v12);

  v14 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "timeViewTappedWithGestureRecognizer:");
  objc_msgSend(v0, "addGestureRecognizer:", v14);

}

id sub_10007A65C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  char v4;
  double v5;
  id v6;
  id v7;
  id v8;
  char v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  double v20;
  id result;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeLabel];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v1, "topAnchor");
  v3 = objc_msgSend(v0, "topAnchor");
  v4 = sub_10002DA10();
  v5 = 12.0;
  if (v4 == 2)
    v5 = 8.0;
  v6 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v3, v5);

  objc_msgSend(v6, "setActive:", 1);
  v7 = objc_msgSend(v1, "bottomAnchor");
  v8 = objc_msgSend(v0, "bottomAnchor");
  v9 = sub_10002DA10();
  v10 = -11.0;
  if (v9 == 2)
    v10 = -8.0;
  v11 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v8, v10);

  objc_msgSend(v11, "setActive:", 1);
  v12 = objc_msgSend(v1, "centerXAnchor");
  v13 = objc_msgSend(v0, "centerXAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  objc_msgSend(v14, "setActive:", 1);
  LODWORD(v15) = 1148846080;
  objc_msgSend(v1, "setContentCompressionResistancePriority:forAxis:", 1, v15);
  v16 = objc_msgSend(v0, "widthAnchor");
  v17 = objc_msgSend(v16, "constraintEqualToConstant:", 0.0);

  v18 = OBJC_IVAR____TtC8Business15IMBTimeslotView_widthLayoutConstraint;
  v19 = *(void **)&v0[OBJC_IVAR____TtC8Business15IMBTimeslotView_widthLayoutConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Business15IMBTimeslotView_widthLayoutConstraint] = v17;

  result = *(id *)&v0[v18];
  if (result)
  {
    LODWORD(v20) = 1132068864;
    objc_msgSend(result, "setPriority:", v20);
    result = *(id *)&v0[v18];
    if (result)
      return objc_msgSend(result, "setActive:", 1);
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10007A918(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  if (v1 == (id)2)
  {
    v3 = objc_msgSend(v2, "blackColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.25);
  }
  else
  {
    v3 = objc_msgSend(v2, "whiteColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.55);
  }
  v5 = v4;

  return v5;
}

void sub_10007A9B8()
{
  id v0;
  id v1;
  id v2;

  if (sub_10002DA10() == 2)
  {
    v0 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
    v1 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 13.0);
    v2 = objc_msgSend(v0, "scaledFontForFont:", v1);

  }
  else
  {
    v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  }
  qword_1000EF1A0 = (uint64_t)v2;
}

id sub_10007AACC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBTimeslotView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBTimeslotView()
{
  return objc_opt_self(_TtC8Business15IMBTimeslotView);
}

id sub_10007AB74(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

void sub_10007ABC4(char a1)
{
  void *v2;
  char **v3;
  id v4;
  unsigned int v5;
  NSString v6;
  id v7;

  if (sub_10002DA10() > 1u)
  {
    v2 = (void *)objc_opt_self(UIColor);
    v3 = &selRef_labelColor;
    if ((a1 & 1) != 0)
      v3 = &selRef_whiteColor;
    goto LABEL_6;
  }
  if ((a1 & 1) != 0)
  {
    v2 = (void *)objc_opt_self(UIColor);
    v3 = &selRef_whiteColor;
LABEL_6:
    v4 = objc_msgSend(v2, *v3);
    return;
  }
  v5 = sub_10002DA10();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v6);

  if (v5 < 2)
  {
    if (v7)
      return;
    __break(1u);
  }
  if (!v7)
    __break(1u);
}

void sub_10007ACC8()
{
  unsigned int v0;
  NSString v1;
  id v2;
  id v3;

  if (sub_10002DA10() > 1u)
    goto LABEL_5;
  v0 = sub_10002DA10();
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v1);

  if (v0 < 2)
  {
    if (!v2)
    {
      __break(1u);
LABEL_5:
      v2 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      v3 = objc_msgSend(v2, "CGColor");
LABEL_8:
      v3;

      return;
    }
LABEL_7:
    v3 = objc_msgSend(v2, "CGColor");
    goto LABEL_8;
  }
  if (v2)
    goto LABEL_7;
  __break(1u);
}

void sub_10007ADC4(char a1)
{
  id v1;
  unsigned int v2;
  NSString v3;
  unsigned int v4;
  NSString v5;
  id v6;
  id v7;
  void *v8;
  _QWORD v9[5];
  uint64_t v10;

  LOBYTE(v1) = a1;
  if (sub_10002DA10() <= 1u)
  {
    if ((v1 & 1) == 0)
    {
LABEL_10:
      v6 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      return;
    }
    v2 = sub_10002DA10();
    v3 = String._bridgeToObjectiveC()();
    v1 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v3);

    if (v2 >= 2)
    {
      if (v1)
        return;
      __break(1u);
      goto LABEL_14;
    }
    if (v1)
      return;
    __break(1u);
  }
  if ((v1 & 1) == 0)
  {
    v7 = objc_allocWithZone((Class)UIColor);
    v9[4] = sub_10007A918;
    v10 = 0;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_10007AB74;
    v9[3] = &unk_1000D9C10;
    v8 = _Block_copy(v9);
    objc_msgSend(v7, "initWithDynamicProvider:", v8);
    _Block_release(v8);
    swift_release(v10);
    return;
  }
  v4 = sub_10002DA10();
  v5 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v5);

  if (v4 >= 2)
  {
LABEL_14:
    if (!v1)
      __break(1u);
    return;
  }
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
}

uint64_t sub_10007AF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007AFAC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10007AFB4()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeLabel];
  v2 = OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected;
  sub_10007ABC4(v0[OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected]);
  v4 = v3;
  objc_msgSend(v1, "setTextColor:", v3);

  v5 = objc_msgSend(v0, "layer");
  sub_10007ACC8();
  v7 = v6;
  objc_msgSend(v5, "setBorderColor:", v6);

  sub_10007ADC4(v0[v2]);
  v9 = v8;
  objc_msgSend(v0, "setBackgroundColor:", v8);

}

void sub_10007B078()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeSelectionDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeSelectionDelegate]);
  if (Strong)
  {
    v4 = Strong;
    v5 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 + 8))(*(_QWORD *)&v1[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeslot], ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
  v7 = OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected;
  v1[OBJC_IVAR____TtC8Business15IMBTimeslotView_isSelected] = 1;
  v8 = *(void **)&v1[OBJC_IVAR____TtC8Business15IMBTimeslotView_timeLabel];
  sub_10002DA10();
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v8, "setTextColor:", v9);

  v10 = objc_msgSend(v1, "layer");
  sub_10007ACC8();
  v12 = v11;
  objc_msgSend(v10, "setBorderColor:", v11);

  sub_10007ADC4(v1[v7]);
  v14 = v13;
  objc_msgSend(v1, "setBackgroundColor:", v13);

}

uint64_t sub_10007B25C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for IMBJITAppKitData()
{
  return objc_opt_self(_TtC8Business16IMBJITAppKitData);
}

id sub_10007B2A0(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  NSString v21;
  id v22;
  id v23;
  id v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  void *object;
  NSString v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  Class isa;
  id v63;
  uint64_t v64;
  int v65;
  int v66;
  objc_super v67;
  Swift::String v68;

  v5 = &v3[OBJC_IVAR____TtC8Business26QuickReplyFromMeBubbleView_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  v67.receiver = v3;
  v67.super_class = (Class)type metadata accessor for QuickReplyFromMeBubbleView();
  v6 = objc_msgSendSuper2(&v67, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = qword_1000EBBD8;
  v8 = v6;
  if (v7 != -1)
    swift_once(&qword_1000EBBD8, sub_10002D56C);
  objc_msgSend(v8, "setBackgroundColor:", qword_1000F8958);
  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "labelColor");
  objc_msgSend(v9, "setTextColor:", v11);

  objc_msgSend(v9, "setMinimumScaleFactor:", 0.4);
  objc_msgSend(v9, "setAdjustsFontSizeToFitWidth:", 1);
  v12 = sub_1000907D4((uint64_t)UIFontTextStyleSubheadline, 0x8000, *(uint64_t *)&UIFontWeightSemibold, 0, 1, 0.0);
  objc_msgSend(v9, "setFont:", v12);

  objc_msgSend(v9, "setNumberOfLines:", 0);
  type metadata accessor for UILayoutPriority(0);
  v14 = v13;
  v65 = 1065353216;
  v66 = 1144750080;
  v15 = sub_10007BF94();
  static _UIKitNumericRawRepresentable.+ infix(_:_:)(&v64, &v66, &v65, v14, v15);
  LODWORD(v16) = v64;
  objc_msgSend(v9, "setContentCompressionResistancePriority:forAxis:", 0, v16);
  v65 = 1065353216;
  v66 = 1144750080;
  static _UIKitNumericRawRepresentable.+ infix(_:_:)(&v64, &v66, &v65, v14, v15);
  LODWORD(v17) = v64;
  objc_msgSend(v9, "setContentCompressionResistancePriority:forAxis:", 1, v17);
  v65 = 1065353216;
  v66 = 1148846080;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v64, &v66, &v65, v14, v15);
  LODWORD(v18) = v64;
  objc_msgSend(v9, "setContentHuggingPriority:forAxis:", 0, v18);
  v65 = 1065353216;
  v66 = 1148846080;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v64, &v66, &v65, v14, v15);
  LODWORD(v19) = v64;
  objc_msgSend(v9, "setContentHuggingPriority:forAxis:", 1, v19);
  if ((a3 & 1) != 0 || a2 < 0 || *(_QWORD *)(a1 + 16) <= a2)
  {
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v20 = *(_QWORD *)(a1 + 32 * a2 + 56);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRelease(a1);
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    objc_msgSend(v9, "setText:", v21);

  }
  v22 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v23 = objc_msgSend(v10, "secondaryLabelColor");
  objc_msgSend(v22, "setTextColor:", v23);

  objc_msgSend(v22, "setMinimumScaleFactor:", 0.4);
  objc_msgSend(v22, "setAdjustsFontSizeToFitWidth:", 1);
  v24 = sub_1000907D4((uint64_t)UIFontTextStyleFootnote, 0x8000, 0, 1, 1, 0.0);
  objc_msgSend(v22, "setFont:", v24);

  v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v68._object = (void *)0xE000000000000000;
  v26._countAndFlagsBits = 0x44455443454C4553;
  v26._object = (void *)0xEF4E4F4954504F5FLL;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v68._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v68)._object;

  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v22, "setText:", v29);

  objc_msgSend(v22, "setNumberOfLines:", 0);
  v65 = 1065353216;
  v66 = 1148846080;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v64, &v66, &v65, v14, v15);
  LODWORD(v30) = v64;
  objc_msgSend(v22, "setContentCompressionResistancePriority:forAxis:", 0, v30);
  v65 = 1065353216;
  v66 = 1148846080;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v64, &v66, &v65, v14, v15);
  LODWORD(v31) = v64;
  objc_msgSend(v22, "setContentCompressionResistancePriority:forAxis:", 1, v31);
  v65 = 1065353216;
  v66 = 1148846080;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v64, &v66, &v65, v14, v15);
  LODWORD(v32) = v64;
  objc_msgSend(v22, "setContentHuggingPriority:forAxis:", 0, v32);
  v65 = 1065353216;
  v66 = 1148846080;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v64, &v66, &v65, v14, v15);
  LODWORD(v33) = v64;
  objc_msgSend(v22, "setContentHuggingPriority:forAxis:", 1, v33);
  objc_msgSend(v8, "addSubview:", v9);
  objc_msgSend(v8, "addSubview:", v22);
  v63 = (id)objc_opt_self(NSLayoutConstraint);
  v34 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v35 = swift_allocObject(v34, 88, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1000AF590;
  v36 = objc_msgSend(v9, "topAnchor");
  v37 = objc_msgSend(v8, "topAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v37, 10.0);

  *(_QWORD *)(v35 + 32) = v38;
  v39 = objc_msgSend(v9, "leadingAnchor");
  v40 = objc_msgSend(v8, "leadingAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v40, 16.0);

  *(_QWORD *)(v35 + 40) = v41;
  v42 = objc_msgSend(v9, "trailingAnchor");
  v43 = objc_msgSend(v8, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, -16.0);

  *(_QWORD *)(v35 + 48) = v44;
  v45 = objc_msgSend(v22, "topAnchor");
  v46 = objc_msgSend(v9, "bottomAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, 2.0);

  *(_QWORD *)(v35 + 56) = v47;
  v48 = objc_msgSend(v22, "leadingAnchor");
  v49 = objc_msgSend(v8, "leadingAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, 16.0);

  *(_QWORD *)(v35 + 64) = v50;
  v51 = objc_msgSend(v22, "bottomAnchor");
  v52 = objc_msgSend(v8, "bottomAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v52, -10.0);

  *(_QWORD *)(v35 + 72) = v53;
  v54 = objc_msgSend(v22, "trailingAnchor");
  v55 = objc_msgSend(v8, "trailingAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v55, -16.0);

  *(_QWORD *)(v35 + 80) = v56;
  v64 = v35;
  specialized Array._endMutation()(v57);
  v58 = v64;
  sub_100011A28();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v58);
  objc_msgSend(v63, "activateConstraints:", isa);

  sub_10007BB78();
  return v8;
}

void sub_10007BB78()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "init");
  v2 = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "init");
  v3 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  objc_msgSend(v3, "setNumberOfTapsRequired:", 2);
  objc_msgSend(v3, "setCancelsTouchesInView:", 0);
  objc_msgSend(v3, "setDelaysTouchesEnded:", 0);
  v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  objc_msgSend(v4, "requireGestureRecognizerToFail:", v1);
  objc_msgSend(v4, "requireGestureRecognizerToFail:", v2);
  objc_msgSend(v4, "requireGestureRecognizerToFail:", v3);
  objc_msgSend(v4, "setCancelsTouchesInView:", 0);
  objc_msgSend(v4, "setDelaysTouchesEnded:", 0);
  objc_msgSend(v0, "addGestureRecognizer:", v1);
  objc_msgSend(v0, "addGestureRecognizer:", v2);
  objc_msgSend(v0, "addGestureRecognizer:", v3);
  objc_msgSend(v0, "addGestureRecognizer:", v4);

}

double sub_10007BD70(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  LODWORD(a3) = 1148846080;
  LODWORD(a4) = 1112014848;
  v7 = objc_msgSend(v4, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", fmin(a1, 263.0), a2, a3, a4);
  v10 = v9;
  v12 = v11;
  if (qword_1000EBCB8 != -1)
    v7 = (id)swift_once(&qword_1000EBCB8, sub_100082798);
  v13 = qword_1000F8A90;
  v14 = static os_log_type_t.debug.getter(v7, v8);
  v15 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v16 = swift_allocObject(v15, 112, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1000ADFC0;
  v17 = CGSize.debugDescription.getter(a1, a2);
  v19 = v18;
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  v20 = sub_100009084();
  *(_QWORD *)(v16 + 64) = v20;
  *(_QWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 40) = v19;
  v21 = CGSize.debugDescription.getter(v10, v12);
  *(_QWORD *)(v16 + 96) = &type metadata for String;
  *(_QWORD *)(v16 + 104) = v20;
  *(_QWORD *)(v16 + 72) = v21;
  *(_QWORD *)(v16 + 80) = v22;
  os_log(_:dso:log:type:_:)("QuickReplyFromMeBubbleView.contentSizeThatFits: size %@ preferredSize: %@", 73, 2, &_mh_execute_header, v13, v14, v16);
  swift_bridgeObjectRelease(v16);
  return v10;
}

id sub_10007BEF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QuickReplyFromMeBubbleView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for QuickReplyFromMeBubbleView()
{
  return objc_opt_self(_TtC8Business26QuickReplyFromMeBubbleView);
}

uint64_t sub_10007BF58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC8Business26QuickReplyFromMeBubbleView_delegate;
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign(v4, a1);
  return swift_unknownObjectRelease(a1);
}

unint64_t sub_10007BF94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EF2E8;
  if (!qword_1000EF2E8)
  {
    type metadata accessor for UILayoutPriority(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UILayoutPriority, v1);
    atomic_store(result, (unint64_t *)&qword_1000EF2E8);
  }
  return result;
}

id sub_10007C08C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeparatorView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_10007C0BC()
{
  id *v0;

  return objc_msgSend(*v0, "leadingAnchor");
}

id sub_10007C0E0()
{
  id *v0;

  return objc_msgSend(*v0, "topAnchor");
}

id sub_10007C104()
{
  id *v0;

  return objc_msgSend(*v0, "bottomAnchor");
}

uint64_t type metadata accessor for SeparatorView()
{
  return objc_opt_self(_TtC8Business13SeparatorView);
}

uint64_t sub_10007C154()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for FooterToolbarViewControllerFactory()
{
  return objc_opt_self(_TtC8Business34FooterToolbarViewControllerFactory);
}

_QWORD *sub_10007C184(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v2 = v1;
  if (*(_QWORD *)(a1 + 16)
    && (v4 = sub_10004F068(0x6C6562616CLL, 0xE500000000000000), (v5 & 1) != 0)
    && (sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v27),
        (swift_dynamicCast(&v25, &v27, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0))
  {
    v6 = v26;
    if (*(_QWORD *)(a1 + 16))
    {
      v7 = v25;
      v8 = sub_10004F068(0x746E756F6D61, 0xE600000000000000);
      if ((v9 & 1) != 0)
      {
        sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v27);
        if ((swift_dynamicCast(&v25, &v27, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
        {
          v10 = v25;
          v11 = v26;
          if (*(_QWORD *)(a1 + 16) && (v12 = sub_10004F068(1701869940, 0xE400000000000000), (v13 & 1) != 0))
          {
            sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)&v27);
          }
          else
          {
            v27 = 0u;
            v28 = 0u;
          }
          swift_bridgeObjectRelease(a1);
          if (*((_QWORD *)&v28 + 1))
          {
            if ((swift_dynamicCast(&v25, &v27, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
            {
              v22 = v26;
              if (v25 == 0x676E69646E6570 && v26 == 0xE700000000000000)
              {
                swift_bridgeObjectRelease(0xE700000000000000);
LABEL_27:
                v23 = 1;
                goto LABEL_28;
              }
              v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, 0x676E69646E6570, 0xE700000000000000, 0);
              swift_bridgeObjectRelease(v22);
              if ((v24 & 1) != 0)
                goto LABEL_27;
            }
          }
          else
          {
            sub_100009CB0((uint64_t)&v27);
          }
          v23 = 0;
LABEL_28:
          v2[5] = v11;
          v2[6] = v23;
          v2[2] = v7;
          v2[3] = v6;
          v2[4] = v10;
          return v2;
        }
      }
    }
    swift_bridgeObjectRelease(v6);
    v19 = swift_bridgeObjectRelease(a1);
    if (qword_1000EBCB8 != -1)
      v19 = swift_once(&qword_1000EBCB8, sub_100082798);
    v20 = qword_1000F8A90;
    v21 = static os_log_type_t.error.getter(v19);
    os_log(_:dso:log:type:_:)("Unable to create proposed line item: AmountDictionaryKey is missing", 67, 2, &_mh_execute_header, v20, v21, _swiftEmptyArrayStorage);
  }
  else
  {
    v14 = swift_bridgeObjectRelease(a1);
    if (qword_1000EBCB8 != -1)
      v14 = swift_once(&qword_1000EBCB8, sub_100082798);
    v15 = qword_1000F8A90;
    v16 = static os_log_type_t.error.getter(v14);
    os_log(_:dso:log:type:_:)("Unable to create proposed line item: LabelDictionaryKey is missing", 66, 2, &_mh_execute_header, v15, v16, _swiftEmptyArrayStorage);
  }
  v17 = type metadata accessor for IMBLineItem();
  swift_deallocPartialClassInstance(v2, v17, 56, 7);
  return 0;
}

void *sub_10007C4BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  char v10;
  _OWORD v12[2];
  __int128 v13;
  void *v14;

  v1 = v0;
  v2 = v0[2];
  v3 = v0[3];
  v14 = &type metadata for String;
  *(_QWORD *)&v13 = v2;
  *((_QWORD *)&v13 + 1) = v3;
  sub_100009CF0(&v13, v12);
  swift_bridgeObjectRetain(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v12, 0x6C6562616CLL, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(0x8000000000000000);
  v5 = v1[4];
  v6 = v1[5];
  v14 = &type metadata for String;
  *(_QWORD *)&v13 = v5;
  *((_QWORD *)&v13 + 1) = v6;
  sub_100009CF0(&v13, v12);
  swift_bridgeObjectRetain(v6);
  v7 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v12, 0x746E756F6D61, 0xE600000000000000, v7);
  swift_bridgeObjectRelease(0x8000000000000000);
  v8 = v1[6];
  type metadata accessor for PKPaymentSummaryItemType(0);
  v14 = v9;
  *(_QWORD *)&v13 = v8;
  sub_100009CF0(&v13, v12);
  v10 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10003A658(v12, 1701869940, 0xE400000000000000, v10);
  swift_bridgeObjectRelease(0x8000000000000000);
  return &_swiftEmptyDictionarySingleton;
}

id sub_10007C600()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  id v5;
  NSString v6;
  id v7;

  v1 = v0[3];
  v2 = v0[5];
  v3 = objc_allocWithZone((Class)NSDecimalNumber);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v5 = objc_msgSend(v3, "initWithString:", v4);

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v7 = objc_msgSend((id)objc_opt_self(PKPaymentSummaryItem), "summaryItemWithLabel:amount:", v6, v5);

  objc_msgSend(v7, "setType:", v0[6]);
  return v7;
}

uint64_t sub_10007C6E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for IMBLineItem()
{
  return objc_opt_self(_TtC8Business11IMBLineItem);
}

uint64_t sub_10007C870()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1000B2C80);
  v2 = swift_getKeyPath(&unk_1000B2CA8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_10007C8E0()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000061, 0x80000001000BA5A0, "Business/BIABubbleOptionsViewController.swift", 45, 2, 58, 0);
  __break(1u);
}

id sub_10007C968()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BIABubbleOptionsViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10007CA10()
{
  return type metadata accessor for BIABubbleOptionsViewController(0);
}

uint64_t type metadata accessor for BIABubbleOptionsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EF4B0;
  if (!qword_1000EF4B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BIABubbleOptionsViewController);
  return result;
}

void sub_10007CA54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = "(";
  sub_10005D7F0(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_1000B2C68;
    sub_10007CAF0();
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_10007CAF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1000EF4C0)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1000EF4C0);
  }
}

uint64_t sub_10007CB4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007D40(&qword_1000ED6C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10007CB8C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t Strong;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  double v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  Class isa;
  objc_super v46;

  v46.receiver = v0;
  v46.super_class = (Class)type metadata accessor for IMBJITAppKitErrorViewController();
  objc_msgSendSuper2(&v46, "viewDidLoad");
  v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RetryView()), "init");
  v2 = &v0[OBJC_IVAR____TtC8Business31IMBJITAppKitErrorViewController_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Business31IMBJITAppKitErrorViewController_delegate]);
  v4 = &v1[OBJC_IVAR____TtC8Business9RetryView_delegate];
  *((_QWORD *)v4 + 1) = *((_QWORD *)v2 + 1);
  swift_unknownObjectWeakAssign(v4, Strong);
  swift_unknownObjectRelease(Strong);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = v5;
  objc_msgSend(v5, "addSubview:", v1);

  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v0, "view");
  if (!v8)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "layoutMarginsGuide");

  v11 = objc_msgSend(v10, "topAnchor");
  v12 = objc_msgSend(v7, "constraintGreaterThanOrEqualToAnchor:constant:", v11, 8.0);

  LODWORD(v13) = 1132068864;
  objc_msgSend(v12, "setPriority:", v13);
  v14 = objc_msgSend(v1, "bottomAnchor");
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "layoutMarginsGuide");

  v18 = objc_msgSend(v17, "bottomAnchor");
  v19 = objc_msgSend(v14, "constraintGreaterThanOrEqualToAnchor:", v18);

  LODWORD(v20) = 1132068864;
  objc_msgSend(v19, "setPriority:", v20);
  v21 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1000AF580;
  v23 = objc_msgSend(v1, "centerYAnchor");
  v24 = objc_msgSend(v0, "view");
  if (!v24)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, "centerYAnchor");

  v27 = objc_msgSend(v23, "constraintEqualToAnchor:", v26);
  *(_QWORD *)(v22 + 32) = v27;
  v28 = objc_msgSend(v1, "leadingAnchor");
  v29 = objc_msgSend(v0, "view");
  if (!v29)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, "layoutMarginsGuide");

  v32 = objc_msgSend(v31, "leadingAnchor");
  v33 = objc_msgSend(v28, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v22 + 40) = v33;
  v34 = objc_msgSend(v1, "trailingAnchor");
  v35 = objc_msgSend(v0, "view");
  if (v35)
  {
    v36 = v35;
    v37 = (void *)objc_opt_self(NSLayoutConstraint);
    v38 = objc_msgSend(v36, "layoutMarginsGuide");

    v39 = objc_msgSend(v38, "trailingAnchor");
    v40 = objc_msgSend(v34, "constraintEqualToAnchor:", v39);

    *(_QWORD *)(v22 + 48) = v40;
    *(_QWORD *)(v22 + 56) = v12;
    *(_QWORD *)(v22 + 64) = v19;
    specialized Array._endMutation()(v41);
    v42 = v22;
    sub_100011A28();
    v43 = v12;
    v44 = v19;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v42);
    objc_msgSend(v37, "activateConstraints:", isa);

    return;
  }
LABEL_13:
  __break(1u);
}

id sub_10007D1B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBJITAppKitErrorViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBJITAppKitErrorViewController()
{
  return objc_opt_self(_TtC8Business31IMBJITAppKitErrorViewController);
}

uint64_t sub_10007D218()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for ConstraintBuilder()
{
  return objc_opt_self(_TtC8Business17ConstraintBuilder);
}

uint64_t sub_10007D26C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  NSString v6;
  NSDictionary v7;
  void *v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  NSString v16;
  NSDictionary v17;
  Class v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  NSString v24;
  NSDictionary v25;
  Class v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  _QWORD v64[3];
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  _UNKNOWN **v68;

  v67 = type metadata accessor for ConstraintBuilder();
  v68 = &off_1000D9CF0;
  v66[0] = a1;
  v4 = sub_100008FA4(v66, v67);
  v5 = *v4;
  if (*(_BYTE *)(*v4 + 16) == 1)
    goto LABEL_20;
  swift_retain(a1);
  v6 = String._bridgeToObjectiveC()();
  v61 = a2;
  v7.super.isa = *(_QWORD *)(v5 + 32) ? Dictionary._bridgeToObjectiveC()().super.isa : 0;
  v8 = (void *)objc_opt_self(NSLayoutConstraint);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "constraintsWithVisualFormat:options:metrics:views:", v6, 0, v7.super.isa, isa);

  v11 = sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  swift_beginAccess(v5 + 40, v64, 33, 0);
  v13 = swift_bridgeObjectRetain(v12);
  sub_10009AA70(v13);
  swift_endAccess(v64);
  swift_bridgeObjectRelease(v12);
  v14 = sub_100008FA4(v66, v67);
  v15 = *v14;
  if (*(_BYTE *)(*v14 + 16) == 1)
    goto LABEL_20;
  v16 = String._bridgeToObjectiveC()();
  v17.super.isa = *(_QWORD *)(v15 + 32) ? Dictionary._bridgeToObjectiveC()().super.isa : 0;
  v18 = Dictionary._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v8, "constraintsWithVisualFormat:options:metrics:views:", v16, 0, v17.super.isa, v18);

  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v11);
  swift_beginAccess(v15 + 40, v64, 33, 0);
  v21 = swift_bridgeObjectRetain(v20);
  sub_10009AA70(v21);
  swift_endAccess(v64);
  swift_bridgeObjectRelease(v20);
  v22 = sub_100008FA4(v66, v67);
  v23 = *v22;
  if (*(_BYTE *)(*v22 + 16) == 1)
  {
LABEL_20:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000026, 0x80000001000B87D0, "Business/ConstraintBuilder.swift", 32, 2);
    __break(1u);
  }
  else
  {
    v24 = String._bridgeToObjectiveC()();
    if (*(_QWORD *)(v23 + 32))
      v25.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    else
      v25.super.isa = 0;
    v26 = Dictionary._bridgeToObjectiveC()().super.isa;
    v27 = objc_msgSend(v8, "constraintsWithVisualFormat:options:metrics:views:", v24, 0, v25.super.isa, v26);

    v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v11);
    swift_beginAccess(v23 + 40, v64, 33, 0);
    v29 = swift_bridgeObjectRetain(v28);
    sub_10009AA70(v29);
    swift_endAccess(v64);
    swift_bridgeObjectRelease(v28);
    v30 = sub_100008FA4(v66, v67);
    v31 = *(void **)(v61 + OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_leftButton);
    v32 = sub_1000090C8(0, (unint64_t *)&qword_1000EE148, UIButton_ptr);
    v65 = v32;
    v64[0] = v31;
    v62 = 0u;
    v63 = 0u;
    v33 = v31;
    v34 = sub_10005AA50(v64, 8, 1, &v62, 0, 1.0, 34.0);
    v35 = *v30;
    swift_beginAccess(*v30 + 40, v64, 33, 0);
    v36 = v34;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
    v38 = *(_QWORD *)((*(_QWORD *)(v35 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v37 = *(_QWORD *)((*(_QWORD *)(v35 + 40) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v38 >= v37 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
    v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
    specialized Array._endMutation()(v39);
    swift_endAccess(v64);

    v40 = sub_100008FA4(v66, v67);
    v41 = *(void **)(v61 + OBJC_IVAR____TtC8Business25BIABubbleBinaryChoiceView_rightButton);
    v65 = v32;
    v64[0] = v41;
    *((_QWORD *)&v63 + 1) = v32;
    *(_QWORD *)&v62 = v33;
    v42 = v33;
    v43 = v41;
    v44 = sub_10005AA50(v64, 8, 0, &v62, 8, 1.0, 0.0);
    v45 = *v40;
    swift_beginAccess(*v40 + 40, v64, 33, 0);
    v46 = v44;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
    v48 = *(_QWORD *)((*(_QWORD *)(v45 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v47 = *(_QWORD *)((*(_QWORD *)(v45 + 40) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v48 >= v47 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
    v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v46);
    specialized Array._endMutation()(v49);
    swift_endAccess(v64);

    v50 = sub_100008FA4(v66, v67);
    v65 = v32;
    v64[0] = v42;
    *((_QWORD *)&v63 + 1) = v32;
    *(_QWORD *)&v62 = v43;
    v51 = v42;
    v52 = v43;
    v53 = sub_10005AA50(v64, 7, 0, &v62, 7, 1.0, 0.0);
    v54 = *v50;
    swift_beginAccess(*v50 + 40, v64, 33, 0);
    v55 = v53;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
    v56 = *(_QWORD *)(v54 + 40) & 0xFFFFFFFFFFFFFF8;
    v58 = *(_QWORD *)(v56 + 0x10);
    v57 = *(_QWORD *)(v56 + 24);
    if (v58 >= v57 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
    v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v55);
    specialized Array._endMutation()(v59);
    swift_endAccess(v64);

    return sub_100010C40(v66);
  }
  return result;
}

void sub_10007D8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  Class isa;
  _BYTE v11[24];

  v6 = type metadata accessor for ConstraintBuilder();
  v7 = swift_allocObject(v6, 48, 7);
  *(_BYTE *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 40) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  swift_bridgeObjectRetain(a2);
  swift_retain(v7);
  swift_bridgeObjectRetain(a1);
  sub_10007D26C(v7, a3);
  swift_release(v7);
  if (*(_BYTE *)(v7 + 16) == 1)
  {
    swift_release(v7);
  }
  else
  {
    *(_BYTE *)(v7 + 16) = 1;
    v8 = (void *)objc_opt_self(NSLayoutConstraint);
    swift_beginAccess(v7 + 40, v11, 0, 0);
    v9 = *(_QWORD *)(v7 + 40);
    sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v9);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v9);
    objc_msgSend(v8, "activateConstraints:", isa);
    swift_release(v7);

  }
}

id sub_10007DA30()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v1 = OBJC_IVAR____TtC8Business13IMBWebURLView_domainLabel;
  v2 = objc_allocWithZone((Class)UILabel);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC8Business13IMBWebURLView_separator;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v5 = &v3[OBJC_IVAR____TtC8Business13IMBWebURLView_navigationURL];
  v6 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);

  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for IMBWebURLView(0);
  v7 = objc_msgSendSuper2(&v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10007DD18();
  sub_10007DEB0();
  if (sub_10002DA10() == 2)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v7);
    objc_msgSend(v7, "addInteraction:", v8);
    v9 = objc_msgSend(objc_allocWithZone((Class)UIToolTipInteraction), "init");
    objc_msgSend(v9, "setDelegate:", v7);
    objc_msgSend(v7, "addInteraction:", v9);

  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v7, "handleLongPress");
    objc_msgSend(v9, "setDelegate:", v7);
    objc_msgSend(v7, "addGestureRecognizer:", v9);
  }

  return v7;
}

id sub_10007DD18()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business13IMBWebURLView_domainLabel];
  objc_msgSend(v1, "setNumberOfLines:", 1);
  v2 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v3 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v3, "labelFontSize");
  v4 = objc_msgSend(v3, "boldSystemFontOfSize:");
  v5 = objc_msgSend(v2, "scaledFontForFont:", v4);

  objc_msgSend(v1, "setFont:", v5);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = objc_msgSend(v6, "labelColor");
  objc_msgSend(v1, "setTextColor:", v7);

  objc_msgSend(v1, "setTextAlignment:", 1);
  v8 = *(void **)&v0[OBJC_IVAR____TtC8Business13IMBWebURLView_separator];
  v9 = objc_msgSend(v6, "systemGray2Color");
  objc_msgSend(v8, "setBackgroundColor:", v9);

  objc_msgSend(v0, "addSubview:", v1);
  return objc_msgSend(v0, "addSubview:", v8);
}

void sub_10007DEB0()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  double v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;
  id v19;
  id v20;
  id v21;
  double v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  double v35;
  double v36;
  id v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  Class v42;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business13IMBWebURLView_domainLabel];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC8Business13IMBWebURLView_separator];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v41 = (id)sub_100007D40((uint64_t *)&unk_1000ED490);
  v4 = swift_allocObject(v41, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1000AF110;
  v5 = objc_msgSend(v2, "topAnchor");
  v6 = objc_msgSend(v1, "topAnchor");
  if ((sub_10002DA10() & 0xFE) != 0)
    v7 = 0.0;
  else
    v7 = 8.0;
  v40 = (void *)objc_opt_self(NSLayoutConstraint);
  v8 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v6, v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v2, "leadingAnchor");
  v10 = objc_msgSend(v1, "layoutMarginsGuide");
  v11 = objc_msgSend(v10, "leadingAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:", v11);
  *(_QWORD *)(v4 + 40) = v12;
  v13 = objc_msgSend(v2, "trailingAnchor");
  v14 = objc_msgSend(v1, "layoutMarginsGuide");
  v15 = objc_msgSend(v14, "trailingAnchor");

  v16 = objc_msgSend(v13, "constraintEqualToAnchor:", v15);
  *(_QWORD *)(v4 + 48) = v16;
  specialized Array._endMutation()(v17);
  sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v40, "activateConstraints:", isa);

  v19 = objc_msgSend(v3, "bottomAnchor");
  v20 = objc_msgSend(v1, "bottomAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  LODWORD(v22) = 1132068864;
  objc_msgSend(v21, "setPriority:", v22);
  v23 = swift_allocObject(v41, 72, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1000AF580;
  v24 = objc_msgSend(v3, "topAnchor");
  v25 = objc_msgSend(v2, "bottomAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, 8.0);

  *(_QWORD *)(v23 + 32) = v26;
  v27 = objc_msgSend(v3, "leftAnchor");
  v28 = objc_msgSend(v1, "leftAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v23 + 40) = v29;
  v30 = objc_msgSend(v3, "rightAnchor");
  v31 = objc_msgSend(v1, "rightAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v23 + 48) = v32;
  v33 = objc_msgSend(v3, "heightAnchor");
  v34 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v34, "scale");
  v36 = v35;

  v37 = objc_msgSend(v33, "constraintEqualToConstant:", 1.0 / v36);
  *(_QWORD *)(v23 + 56) = v37;
  *(_QWORD *)(v23 + 64) = v21;
  specialized Array._endMutation()(v38);
  v39 = v21;
  v42 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23);
  objc_msgSend(v40, "activateConstraints:", v42);

}

uint64_t sub_10007E3B8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v19)(_BYTE *, _BYTE *, uint64_t);
  void (*v20)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  void *v22;
  id v23;
  _BYTE v25[24];

  v5 = sub_100007D40((uint64_t *)&unk_1000ED480);
  v7 = __chkstk_darwin(v5, v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7, v10);
  v12 = &v25[-v11 - 8];
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  v17 = &v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10003CED0(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_100010A98((uint64_t)v12, (uint64_t *)&unk_1000ED480);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32))(v17, v12, v13);
  v19 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16);
  v19(v9, v17, v13);
  v20 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56);
  v20(v9, 0, 1, v13);
  v21 = v2 + OBJC_IVAR____TtC8Business13IMBWebURLView_navigationURL;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Business13IMBWebURLView_navigationURL, v25, 33, 0);
  sub_10007F7C4((uint64_t)v9, v21);
  swift_endAccess(v25);
  v22 = *(void **)(v2 + OBJC_IVAR____TtC8Business13IMBWebURLView_domainLabel);
  v19(v9, v17, v13);
  v20(v9, 0, 1, v13);
  v23 = sub_10007E5B4((uint64_t)v9, a2 & 1);
  sub_100010A98((uint64_t)v9, (uint64_t *)&unk_1000ED480);
  objc_msgSend(v22, "setAttributedText:", v23);

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v13);
}

id sub_10007E5B4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  NSString v15;
  id v16;
  id v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  void *object;
  id v22;
  NSString v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  Class isa;
  unint64_t v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  double v36;
  double v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  NSString v45;
  id v46;
  id v47;
  NSString v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  void *v55;
  void *v56;
  id v58;
  NSAttributedStringKey v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  Swift::String v64;

  v4 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  v9 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  sub_10003CED0(a1, (uint64_t)v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {

    sub_100010A98((uint64_t)v7, (uint64_t *)&unk_1000ED480);
  }
  else
  {
    v62 = v8;
    v60 = URL.displayDomainString.getter();
    v61 = v12;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    v58 = v9;
    if ((a2 & 1) != 0)
    {
      v13 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
      v14 = (void *)objc_opt_self(UIImage);
      v15 = String._bridgeToObjectiveC()();
      v16 = objc_msgSend(v14, "__systemImageNamedSwift:", v15);

      if (v16)
      {
        v17 = objc_msgSend(v16, "imageWithRenderingMode:", 2);

      }
      else
      {
        v17 = 0;
      }
      v32 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
      v33 = (void *)objc_opt_self(UIFont);
      objc_msgSend(v33, "labelFontSize");
      v34 = objc_msgSend(v33, "boldSystemFontOfSize:");
      v35 = objc_msgSend(v32, "scaledFontForFont:", v34);

      objc_msgSend(v35, "capHeight");
      v37 = v36;

      v38 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, v37);
      v39 = objc_msgSend(v17, "imageByApplyingSymbolConfiguration:", v38);
      objc_msgSend(v13, "setImage:", v39);

      v40 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v13);
      objc_msgSend(v9, "appendAttributedString:", v40);
      v41 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
      v42 = objc_msgSend(v40, "length");
      v59 = NSForegroundColorAttributeName;
      objc_msgSend(v9, "addAttribute:value:range:", NSForegroundColorAttributeName, v41, 0, v42);

      isa = Double._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v9, "addAttribute:value:range:", NSBaselineOffsetAttributeName, isa, 0, objc_msgSend(v40, "length"));

      v31 = 0xE100000000000000;
    }
    else
    {
      v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v64._object = (void *)0xE000000000000000;
      v19._countAndFlagsBits = 0x554345535F544F4ELL;
      v19._object = (void *)0xEA00000000004552;
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      v64._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v64)._object;

      v22 = objc_allocWithZone((Class)NSMutableAttributedString);
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v24 = objc_msgSend(v22, "initWithString:", v23);

      objc_msgSend(v9, "appendAttributedString:", v24);
      v25 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
      v26 = objc_msgSend(v9, "length");
      v59 = NSForegroundColorAttributeName;
      objc_msgSend(v9, "addAttribute:value:range:", NSForegroundColorAttributeName, v25, 0, v26);

      v27 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
      v28 = (void *)objc_opt_self(UIFont);
      objc_msgSend(v28, "labelFontSize");
      v29 = objc_msgSend(v28, "systemFontOfSize:");
      isa = (Class)objc_msgSend(v27, "scaledFontForFont:", v29);

      objc_msgSend(v9, "addAttribute:value:range:", NSFontAttributeName, isa, 0, objc_msgSend(v9, "length"));
      v31 = 0xA500000000000000;
    }

    v43 = objc_allocWithZone((Class)NSMutableAttributedString);
    v44 = v61;
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v44);
    v46 = objc_msgSend(v43, "initWithString:", v45);

    v47 = objc_allocWithZone((Class)NSMutableAttributedString);
    v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    v49 = objc_msgSend(v47, "initWithString:", v48);

    v50 = objc_msgSend(v63, "effectiveUserInterfaceLayoutDirection");
    v51 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v52 = objc_msgSend(v49, "length");
    objc_msgSend(v49, "addAttribute:value:range:", v59, v51, 0, v52);

    v53 = v62;
    if (v50 == (id)1)
    {
      objc_msgSend(v62, "appendAttributedString:", v46);
      objc_msgSend(v53, "appendAttributedString:", v49);
      v8 = v53;
      v54 = v53;
      v55 = v58;
      objc_msgSend(v54, "appendAttributedString:", v58);

    }
    else
    {
      v56 = v58;
      objc_msgSend(v62, "appendAttributedString:", v58);
      objc_msgSend(v53, "appendAttributedString:", v49);
      v8 = v53;
      objc_msgSend(v53, "appendAttributedString:", v46);

    }
  }
  return v8;
}

void sub_10007EDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v6, v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v11 = v0 + OBJC_IVAR____TtC8Business13IMBWebURLView_navigationURL;
  swift_beginAccess(v11, v17, 0, 0);
  sub_10003CED0(v11, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1))
  {
    sub_100010A98((uint64_t)v9, (uint64_t *)&unk_1000ED480);
    v12 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v9, v1);
    v13 = sub_100010A98((uint64_t)v9, (uint64_t *)&unk_1000ED480);
    URL.absoluteString.getter(v13);
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
  }
  objc_msgSend(v10, "setString:", v12);

}

id sub_10007EFD8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBWebURLView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10007F060()
{
  return type metadata accessor for IMBWebURLView(0);
}

uint64_t type metadata accessor for IMBWebURLView(uint64_t a1)
{
  uint64_t result;

  result = qword_1000EF640;
  if (!qword_1000EF640)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IMBWebURLView);
  return result;
}

void sub_10007F0A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10007F120(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_10007F120(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000EF650)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000EF650);
  }
}

UIMenu sub_10007F250(uint64_t a1, void *a2)
{
  id v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v14;
  Swift::String swift__string;

  sub_1000090C8(0, &qword_1000EF788, UIAction_ptr);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  swift__string._object = (void *)0xE000000000000000;
  v4._object = (void *)0x80000001000BA830;
  v4._countAndFlagsBits = 0xD000000000000014;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  swift__string._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, swift__string);

  *(_QWORD *)(swift_allocObject(&unk_1000D9D68, 24, 7) + 16) = a2;
  v7 = a2;
  v8 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v6._countAndFlagsBits, v6._object, 0, 0, 0, 0, 0, 0, 0);
  sub_1000090C8(0, &qword_1000EF790, UIMenu_ptr);
  v9 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1000AF120;
  *(_QWORD *)(v10 + 32) = v8;
  preferredElementSize = v10;
  specialized Array._endMutation()(v10);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v14.value.super.isa = 0;
  v14.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v11, (Swift::String_optional)0, v14, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0);
}

id sub_10007F478(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;

  v4 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_1000090C8(0, &qword_1000EF780, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v8 = (void *)v4(v6, v7);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v8;
}

id sub_10007F4F0()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD v8[5];
  uint64_t v9;

  v1 = swift_allocObject(&unk_1000D9D18, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v8[4] = sub_10007F790;
  v9 = v1;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10007F478;
  v8[3] = &unk_1000D9D30;
  v3 = _Block_copy(v8);
  v4 = v9;
  v5 = v0;
  swift_retain(v1);
  swift_release(v4);
  v6 = objc_msgSend(v2, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v3);
  swift_release(v1);
  _Block_release(v3);
  return v6;
}

id sub_10007F5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  _BYTE v18[24];

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v6, v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = v0 + OBJC_IVAR____TtC8Business13IMBWebURLView_navigationURL;
  swift_beginAccess(v10, v18, 0, 0);
  sub_10003CED0(v10, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1))
  {
    sub_100010A98((uint64_t)v9, (uint64_t *)&unk_1000ED480);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v9, v1);
    v12 = sub_100010A98((uint64_t)v9, (uint64_t *)&unk_1000ED480);
    URL.absoluteString.getter(v12);
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    v11 = objc_msgSend((id)objc_opt_self(UIToolTipConfiguration), "configurationWithToolTip:", v15);

  }
  return v11;
}

uint64_t sub_10007F76C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

UIMenu sub_10007F790(uint64_t a1)
{
  uint64_t v1;

  return sub_10007F250(a1, *(void **)(v1 + 16));
}

uint64_t sub_10007F798(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007F7A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_10007F7B0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "copy:", *(_QWORD *)(v0 + 16));
}

uint64_t sub_10007F7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40((uint64_t *)&unk_1000ED480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10007F810(char a1, void *a2, void *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  id v27;
  BOOL v28;
  char v29;
  unsigned __int8 v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  id v43;
  _QWORD *v44;
  _BYTE v46[12];
  int v47;

  v47 = a1 & 1;
  v6 = type metadata accessor for URLHelper(0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = &v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v11);
  v13 = &v46[-v12];
  v14 = OBJC_IVAR____TtC8Business19IMBActionBubbleView_tapIndicator;
  v15 = objc_allocWithZone((Class)type metadata accessor for IMBAuthenticationTapIndicator());
  v16 = v3;
  *(_QWORD *)&v3[v14] = objc_msgSend(v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Business19IMBActionBubbleView_message] = a3;
  v17 = a3;
  v18 = objc_msgSend(v17, "rootKey");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCMessageRootErrorKey);
  if (v19 == v22 && v21 == v23)
  {
    swift_bridgeObjectRelease_n(v21, 2);
  }
  else
  {
    v25 = v23;
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v25);
    if ((v26 & 1) == 0)
    {
      v27 = objc_msgSend(v17, "rootObject");
      if (v27)
      {
        swift_unknownObjectRelease(v27);
        v16[OBJC_IVAR____TtC8Business19IMBActionBubbleView_isInvalid] = 0;
        v28 = v47 == 0;
        v29 = 1;
        goto LABEL_10;
      }
    }
  }
  v28 = 0;
  v29 = 0;
  v16[OBJC_IVAR____TtC8Business19IMBActionBubbleView_isInvalid] = 1;
LABEL_10:
  v16[OBJC_IVAR____TtC8Business19IMBActionBubbleView_shouldShowButton] = v28;
  v16[OBJC_IVAR____TtC8Business19IMBActionBubbleView_shouldShowImage] = v29;
  v30 = objc_msgSend(v17, "isFromMe");
  v16[OBJC_IVAR____TtC8Business19IMBActionBubbleView_shouldShowImageLeft] = v30 ^ 1;

  v31 = objc_msgSend(v17, "rootKey");
  if (!v31)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v33 = v32;
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v33);
  }
  if ((v16[OBJC_IVAR____TtC8Business19IMBActionBubbleView_isInvalid] & 1) != 0)
    goto LABEL_17;
  v34 = BCMessageRootInternalAuthenticateKey;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v37 = v36;
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v40 = v38;
  if (v35 == v39 && v37 == v38)
  {
    swift_bridgeObjectRelease_n(v37, 2);
LABEL_17:
    v42 = (void *)BCBubbleViewStyleIcon;
    goto LABEL_18;
  }
  v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v39, v38, 0);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v40);
  v42 = a2;
  if ((v41 & 1) != 0)
    goto LABEL_17;
LABEL_18:
  v43 = v42;
  sub_10004EA08((uint64_t)v13);
  sub_100020D60((uint64_t)v13, (uint64_t)v10);
  v44 = sub_10003F6C0(v47, v43, (uint64_t)v10, v16);

  sub_100020DA4((uint64_t)v13);
  return v44;
}

id sub_10007FB34()
{
  uint64_t v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  NSString v6;
  char v7;
  Swift::String v9;

  sub_1000A88F0();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_tapIndicator);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 0x4E495F4E474953;
  v3._object = (void *)0xE700000000000000;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v9)._object;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v1, "setText:", v6);

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_isInvalid) & 1) != 0)
    v7 = 1;
  else
    v7 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_shouldShowButton) ^ 1;
  objc_msgSend(v1, "setHidden:", v7 & 1);
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_informationView), "addSubview:", v1);
}

void sub_10007FC68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  Class isa;
  uint64_t v5;
  Class v6;
  uint64_t v7;
  Class v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  int IsAccessibilityContentSizeCategory;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  Class v51;
  uint64_t v52;

  v1 = v0;
  sub_1000A8DA0();
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_tapIndicator), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v50 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_largeLabelContainerConstraints);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_largeLabelContainerConstraints);
  sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v2, "deactivateConstraints:", isa);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_imageViewFirstConstraintsIconSmall);
  swift_bridgeObjectRetain(v5);
  v6 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v2, "deactivateConstraints:", v6);

  v49 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainerFirstConstraintsIconSmall);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainerFirstConstraintsIconSmall);
  swift_bridgeObjectRetain(v7);
  v8 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v2, "deactivateConstraints:", v8);

  v9 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v10 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1000AF110;
  v11 = *(void **)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainer);
  v12 = objc_msgSend(v11, "topAnchor");
  v13 = *(void **)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_informationView);
  v14 = objc_msgSend(v13, "topAnchor");
  v15 = objc_msgSend(v12, "constraintGreaterThanOrEqualToAnchor:constant:", v14, 10.0);

  *(_QWORD *)(v10 + 32) = v15;
  v16 = objc_msgSend(v11, "bottomAnchor");
  v17 = objc_msgSend(v13, "bottomAnchor");
  v18 = objc_msgSend(v16, "constraintLessThanOrEqualToAnchor:constant:", v17, -10.0);

  *(_QWORD *)(v10 + 40) = v18;
  v19 = objc_msgSend(v11, "centerYAnchor");
  v20 = objc_msgSend(v13, "centerYAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v10 + 48) = v21;
  v52 = v10;
  specialized Array._endMutation()(v22);
  v23 = *v49;
  *v49 = v10;
  swift_bridgeObjectRelease(v23);
  v24 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1000AF110;
  v25 = objc_msgSend(v11, "topAnchor");
  v26 = objc_msgSend(v13, "topAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v26, 10.0);

  *(_QWORD *)(v24 + 32) = v27;
  v28 = objc_msgSend(v11, "bottomAnchor");
  v29 = objc_msgSend(v13, "bottomAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, -10.0);

  *(_QWORD *)(v24 + 40) = v30;
  v31 = objc_msgSend(v11, "leadingAnchor");
  v32 = v50;
  v33 = objc_msgSend(v13, "leadingAnchor");
  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, 4.0);

  *(_QWORD *)(v24 + 48) = v34;
  v52 = v24;
  specialized Array._endMutation()(v35);
  v36 = *v50;
  *v50 = v24;
  swift_bridgeObjectRelease(v36);
  if (UIApp)
  {
    v37 = objc_msgSend(UIApp, "preferredContentSizeCategory");
    IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory();

    if (IsAccessibilityContentSizeCategory)
    {
      LODWORD(v39) = 1144750080;
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Business13IMBBubbleView_titleLabel), "setContentCompressionResistancePriority:forAxis:", 1, v39);
    }
    v40 = BCBubbleViewStyleLarge;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v1
                                                                           + OBJC_IVAR____TtC8Business13IMBBubbleView_style));
    v43 = v42;
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v46 = v44;
    if (v41 == v45 && v43 == v44)
    {
      swift_bridgeObjectRelease_n(v43, 2);
    }
    else
    {
      v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, v45, v44, 0);
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease(v46);
      if ((v47 & 1) == 0)
        v32 = v49;
    }
    v52 = swift_bridgeObjectRetain(*v32);
    sub_100080C78(&v52);
    sub_1000802F0(&v52);
    v48 = v52;
    v51 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v48);
    objc_msgSend(v2, "activateConstraints:", v51);

  }
  else
  {
    __break(1u);
  }
}

void sub_100080208()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;

  v1 = &v0[OBJC_IVAR____TtC8Business13IMBBubbleView_touch];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 1;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_defaultColor];
  objc_msgSend(v0, "setBackgroundColor:", v2);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business13IMBBubbleView_informationBackground], "setBackgroundColor:", v2);
  v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business19IMBActionBubbleView_tapIndicator], "layer");
  v4 = v3;
  if (qword_1000EBBA0 != -1)
  {
    swift_once(&qword_1000EBBA0, sub_100017B90);
    v3 = v4;
  }
  objc_msgSend(v3, "setBackgroundColor:", qword_1000F88E0);

}

void sub_1000802F0(uint64_t *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  __objc2_class_ro *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  id v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  id v99;

  v2 = v1;
  if (v2[OBJC_IVAR____TtC8Business19IMBActionBubbleView_shouldShowImage] == 1)
  {
    v4 = BCBubbleViewStyleLarge;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_style]);
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    if (v5 == v8 && v7 == v9)
    {
      swift_bridgeObjectRelease_n(v7, 2);
      return;
    }
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    if ((v12 & 1) != 0)
      return;
    v13 = *(void **)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_imageView];
    if (v2[OBJC_IVAR____TtC8Business19IMBActionBubbleView_shouldShowImageLeft] != 1)
    {
      v63 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_imageView], "trailingAnchor");
      v64 = *(void **)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_informationView];
      v65 = objc_msgSend(v64, "trailingAnchor");
      v17 = objc_msgSend(v63, "constraintEqualToAnchor:", v65);

      v66 = objc_msgSend(v13, "centerYAnchor");
      v67 = objc_msgSend(v64, "centerYAnchor");
      v20 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

      v68 = objc_msgSend(v13, "leadingAnchor");
      v69 = *(void **)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainer];
      v70 = objc_msgSend(v69, "trailingAnchor");
      v2 = (char *)objc_msgSend(v68, "constraintEqualToAnchor:constant:", v70, 10.0);

      v71 = objc_msgSend(v69, "leadingAnchor");
      v72 = objc_msgSend(v64, "leadingAnchor");
      v26 = objc_msgSend(v71, "constraintEqualToAnchor:constant:", v72, 4.0);

      v73 = *a1;
      if ((unint64_t)*a1 >> 62)
      {
        if (v73 < 0)
          v95 = *a1;
        else
          v95 = v73 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*a1);
        v96 = _CocoaArrayWrapper.endIndex.getter(v95);
        swift_bridgeObjectRelease(v73);
        v29 = v96 + 4;
        if (!__OFADD__(v96, 4))
          goto LABEL_27;
      }
      else
      {
        v74 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10);
        v29 = v74 + 4;
        if (!__OFADD__(v74, 4))
        {
LABEL_27:
          v75 = sub_10005D870(v29, 1);
          specialized Array._endMutation()(v75);
          v76 = v17;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v76);
          v78 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v77 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v78 >= v77 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v77 > 1, v78 + 1, 1);
          v79 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v78, v76);
          specialized Array._endMutation()(v79);
          v99 = v20;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v99);
          v81 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v80 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v81 >= v80 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
          v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v99);
          specialized Array._endMutation()(v82);
          v83 = v2;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v83);
          v85 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v84 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v85 >= v84 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v84 > 1, v85 + 1, 1);
          v86 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v85, v83);
          specialized Array._endMutation()(v86);
          v87 = v26;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v87);
          v89 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v88 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v89 >= v88 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v89 + 1, 1);
          v90 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v89, v87);
          specialized Array._endMutation()(v90);

          return;
        }
      }
      __break(1u);
      return;
    }
    v14 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_imageView], "leadingAnchor");
    v15 = *(void **)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_informationView];
    v16 = objc_msgSend(v15, "leadingAnchor");
    v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);

    v18 = objc_msgSend(v13, "centerYAnchor");
    v19 = objc_msgSend(v15, "centerYAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    v21 = objc_msgSend(v13, "trailingAnchor");
    v22 = *(void **)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainer];
    v23 = objc_msgSend(v22, "leadingAnchor");
    v2 = (char *)objc_msgSend(v21, "constraintEqualToAnchor:constant:", v23, -10.0);

    v24 = objc_msgSend(v22, "trailingAnchor");
    v25 = objc_msgSend(v15, "trailingAnchor");
    v26 = objc_msgSend(v24, "constraintLessThanOrEqualToAnchor:constant:", v25, -10.0);

    v27 = *a1;
    if ((unint64_t)*a1 >> 62)
    {
      if (v27 < 0)
        v93 = *a1;
      else
        v93 = v27 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*a1);
      v94 = _CocoaArrayWrapper.endIndex.getter(v93);
      swift_bridgeObjectRelease(v27);
      v29 = v94 + 4;
      if (!__OFADD__(v94, 4))
        goto LABEL_27;
    }
    else
    {
      v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      v29 = v28 + 4;
      if (!__OFADD__(v28, 4))
        goto LABEL_27;
    }
    __break(1u);
  }
  v30 = *(void **)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainer];
  v31 = &BIABubbleOptionsiOSViewController;
  v32 = objc_msgSend(v30, "trailingAnchor");
  v33 = *(void **)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_informationView];
  v34 = objc_msgSend(v33, "trailingAnchor");
  v98 = objc_msgSend(v32, "constraintLessThanOrEqualToAnchor:constant:", v34, -10.0);

  v35 = *(void **)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_imageView];
  v36 = objc_msgSend(v35, "leadingAnchor");
  v37 = objc_msgSend(v33, "leadingAnchor");
  v97 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  v38 = objc_msgSend(v35, "trailingAnchor");
  v39 = objc_msgSend(v30, "leadingAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  v41 = objc_msgSend(v30, "leadingAnchor");
  v42 = objc_msgSend(v33, "leadingAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, 4.0);

  v44 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    v45 = v44 & 0xFFFFFFFFFFFFF8;
    v46 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    v47 = v46 + 4;
    if (!__OFADD__(v46, 4))
      goto LABEL_14;
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v44 < 0)
    v91 = *a1;
  else
    v91 = v44 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v92 = _CocoaArrayWrapper.endIndex.getter(v91);
  swift_bridgeObjectRelease(v44);
  v47 = v92 + 4;
  if (__OFADD__(v92, 4))
    goto LABEL_41;
LABEL_14:
  v48 = sub_10005D870(v47, 1);
  specialized Array._endMutation()(v48);
  v31 = (__objc2_class_ro *)v98;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v44 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v45 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v44 >= v45 >> 1)
LABEL_42:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v44 + 1, 1);
  v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v31);
  specialized Array._endMutation()(v49);
  v50 = v97;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
  v52 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v51 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v52 >= v51 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
  v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
  specialized Array._endMutation()(v53);
  v54 = v40;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
  v56 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v55 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v56 >= v55 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
  v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
  specialized Array._endMutation()(v57);
  v58 = v43;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
  v60 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v59 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v60 >= v59 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
  v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v58);
  specialized Array._endMutation()(v61);

  v62 = *(void **)&v2[OBJC_IVAR____TtC8Business13IMBBubbleView_imageViewWidthConstraint];
  if (v62)
    objc_msgSend(v62, "setConstant:", 0.0);
}

void sub_100080C78(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  char v62;
  id v63;
  id v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char v81;
  id v82;
  id v83;
  char *v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  id v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  id v112;

  v2 = v1;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_shouldShowImageLeft) != 1)
  {
    v54 = BCBubbleViewStyleLarge;
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v2
                                                                           + OBJC_IVAR____TtC8Business13IMBBubbleView_style));
    v57 = v56;
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    if (v55 == v58 && v57 == v59)
    {
      swift_bridgeObjectRelease_n(v57, 2);
    }
    else
    {
      v61 = v59;
      v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v57, v58, v59, 0);
      swift_bridgeObjectRelease(v57);
      swift_bridgeObjectRelease(v61);
      if ((v62 & 1) == 0)
        return;
    }
    v63 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                + OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainer), "trailingAnchor"));
    v64 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                + OBJC_IVAR____TtC8Business13IMBBubbleView_informationView), "trailingAnchor"));
    v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

    v112 = v65;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v112);
    v67 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v66 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v67 >= v66 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
    v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v112);
    specialized Array._endMutation()(v68);
    goto LABEL_43;
  }
  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_tapIndicator);
  v5 = objc_msgSend(v4, "leadingAnchor");
  v111 = *(id *)(v2 + OBJC_IVAR____TtC8Business13IMBBubbleView_labelContainer);
  v6 = objc_msgSend(v111, "trailingAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v6, 10.0);

  v8 = objc_msgSend(v4, "trailingAnchor");
  v9 = *(void **)(v2 + OBJC_IVAR____TtC8Business13IMBBubbleView_informationView);
  v10 = objc_msgSend(v9, "trailingAnchor");
  v11 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);

  v12 = objc_msgSend(v4, "centerYAnchor");
  v13 = objc_msgSend(v9, "centerYAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  v15 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    if (v15 < 0)
      v104 = *a1;
    else
      v104 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*a1);
    v17 = _CocoaArrayWrapper.endIndex.getter(v104);
    swift_bridgeObjectRelease(v15);
    v18 = v17 + 3;
    if (!__OFADD__(v17, 3))
    {
LABEL_4:
      v19 = sub_10005D870(v18, 1);
      specialized Array._endMutation()(v19);
      v7 = v7;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v17 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 < v16 >> 1)
        goto LABEL_5;
      goto LABEL_51;
    }
  }
  else
  {
    v16 = v15 & 0xFFFFFFFFFFFFF8;
    v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v17 + 3;
    if (!__OFADD__(v17, 3))
      goto LABEL_4;
  }
  __break(1u);
LABEL_51:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
LABEL_5:
  v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v7);
  specialized Array._endMutation()(v20);
  v21 = v11;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
  v23 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v22 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v23 >= v22 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
  v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
  specialized Array._endMutation()(v24);
  v25 = v14;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
  v27 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v26 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v27 >= v26 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
  v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
  specialized Array._endMutation()(v28);

  v29 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Business19IMBActionBubbleView_shouldShowButton);
  v30 = objc_msgSend(v4, "widthAnchor");
  v31 = v30;
  if (v29 != 1)
  {
    v69 = objc_msgSend(v30, "constraintEqualToConstant:", 0.0);

    v70 = objc_msgSend(v4, "heightAnchor");
    v71 = objc_msgSend(v70, "constraintEqualToConstant:", 0.0);

    v72 = *a1;
    if ((unint64_t)*a1 >> 62)
    {
      if (v72 < 0)
        v107 = *a1;
      else
        v107 = v72 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*a1);
      v108 = _CocoaArrayWrapper.endIndex.getter(v107);
      swift_bridgeObjectRelease(v72);
      v75 = v108 + 2;
      if (!__OFADD__(v108, 2))
      {
LABEL_30:
        v76 = sub_10005D870(v75, 1);
        specialized Array._endMutation()(v76);
        v69 = v69;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
        v72 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v73 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v72 < v73 >> 1)
        {
LABEL_31:
          v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v69);
          specialized Array._endMutation()(v77);
          v112 = v71;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v112);
          v79 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v78 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v79 >= v78 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v78 > 1, v79 + 1, 1);
          v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v112);
          specialized Array._endMutation()(v80);

          goto LABEL_43;
        }
LABEL_65:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v72 + 1, 1);
        goto LABEL_31;
      }
    }
    else
    {
      v73 = v72 & 0xFFFFFFFFFFFFF8;
      v74 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
      v75 = v74 + 2;
      if (!__OFADD__(v74, 2))
        goto LABEL_30;
    }
    __break(1u);
    goto LABEL_65;
  }
  v32 = objc_msgSend(v30, "constraintGreaterThanOrEqualToConstant:", 65.0);

  v33 = objc_msgSend(v4, "heightAnchor");
  v34 = objc_msgSend(v33, "constraintGreaterThanOrEqualToConstant:", 30.0);

  v35 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    v36 = v35 & 0xFFFFFFFFFFFFF8;
    v37 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    v38 = v37 + 2;
    if (!__OFADD__(v37, 2))
      goto LABEL_12;
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v35 < 0)
    v105 = *a1;
  else
    v105 = v35 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v106 = _CocoaArrayWrapper.endIndex.getter(v105);
  swift_bridgeObjectRelease(v35);
  v38 = v106 + 2;
  if (__OFADD__(v106, 2))
    goto LABEL_57;
LABEL_12:
  v39 = sub_10005D870(v38, 1);
  specialized Array._endMutation()(v39);
  v32 = v32;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
  v35 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v36 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v35 >= v36 >> 1)
LABEL_58:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v35 + 1, 1);
  v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v32);
  specialized Array._endMutation()(v40);
  v41 = v34;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
  v43 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v42 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v43 >= v42 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
  v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
  specialized Array._endMutation()(v44);

  LODWORD(v45) = 1148846080;
  objc_msgSend(v4, "setContentHuggingPriority:forAxis:", 1, v45);
  LODWORD(v46) = 1148846080;
  objc_msgSend(v4, "setContentHuggingPriority:forAxis:", 0, v46);
  v47 = BCBubbleViewStyleLarge;
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v2
                                                                         + OBJC_IVAR____TtC8Business13IMBBubbleView_style));
  v50 = v49;
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  v53 = v51;
  if (v48 == v52 && v50 == v51)
  {
    swift_bridgeObjectRelease_n(v50, 2);
    goto LABEL_35;
  }
  v81 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v50, v52, v51, 0);
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v53);
  if ((v81 & 1) != 0)
  {
LABEL_35:
    v82 = objc_msgSend(v4, "leadingAnchor");
    v83 = objc_msgSend(v111, "trailingAnchor");
    v84 = (char *)objc_msgSend(v82, "constraintEqualToAnchor:constant:", v83, 10.0);

    v85 = objc_msgSend(v4, "trailingAnchor");
    v86 = objc_msgSend(v9, "trailingAnchor");
    v87 = objc_msgSend(v85, "constraintEqualToAnchor:", v86);

    v88 = objc_msgSend(v4, "centerYAnchor");
    v89 = objc_msgSend(v9, "centerYAnchor");
    v90 = objc_msgSend(v88, "constraintEqualToAnchor:", v89);

    v91 = *a1;
    if ((unint64_t)*a1 >> 62)
    {
      if (v91 < 0)
        v109 = *a1;
      else
        v109 = v91 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*a1);
      v110 = _CocoaArrayWrapper.endIndex.getter(v109);
      swift_bridgeObjectRelease(v91);
      v94 = v110 + 3;
      if (!__OFADD__(v110, 3))
      {
LABEL_37:
        v95 = sub_10005D870(v94, 1);
        specialized Array._endMutation()(v95);
        v91 = v84;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v91);
        v84 = *(char **)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v92 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if ((unint64_t)v84 < v92 >> 1)
        {
LABEL_38:
          v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v84, v91);
          specialized Array._endMutation()(v96);
          v112 = v87;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v112);
          v98 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v97 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v98 >= v97 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v98 + 1, 1);
          v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v112);
          specialized Array._endMutation()(v99);
          v100 = v90;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v100);
          v102 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v101 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v102 >= v101 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v101 > 1, v102 + 1, 1);
          v103 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v102, v100);
          specialized Array._endMutation()(v103);

LABEL_43:
          return;
        }
LABEL_72:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v92 > 1, v84 + 1, 1);
        goto LABEL_38;
      }
    }
    else
    {
      v92 = v91 & 0xFFFFFFFFFFFFF8;
      v93 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10);
      v94 = v93 + 3;
      if (!__OFADD__(v93, 3))
        goto LABEL_37;
    }
    __break(1u);
    goto LABEL_72;
  }
}

void sub_100081884()
{
  uint64_t v0;

}

id sub_1000818B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBActionBubbleView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBActionBubbleView()
{
  return objc_opt_self(_TtC8Business19IMBActionBubbleView);
}

unint64_t sub_100081938()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EF7F8;
  if (!qword_1000EF7F8)
  {
    v1 = sub_1000090C8(255, &qword_1000EF7F0, UITouch_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000EF7F8);
  }
  return result;
}

void sub_100081AD0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;

  v1 = v0;
  v2 = sub_1000090C8(0, &qword_1000EF830, BCOAuth2Request_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2);
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, v6, 0);

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v19 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  if (objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection") == (id)1)
  {
    v20 = v10;
    swift_bridgeObjectRetain(v10);
    v11 = 32;
    v12 = 0xE100000000000000;
  }
  else
  {
    v20 = 0xE100000000000000;
    v11 = v8;
    v12 = v10;
  }
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease(v10);
  v13 = objc_allocWithZone((Class)NSMutableAttributedString);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v15 = objc_msgSend(v13, "initWithString:", v14);

  objc_msgSend(v19, "appendAttributedString:", v15);
  v16 = *(void **)&v1[OBJC_IVAR____TtC8Business15IMBWebTitleView_titleLabel];
  objc_msgSend(v16, "setNumberOfLines:", 0);
  v17 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v16, "setFont:", v17);

  v18 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v16, "setTextColor:", v18);

  objc_msgSend(v16, "setAttributedText:", v19);
  objc_msgSend(v16, "setTextAlignment:", 1);
  objc_msgSend(v1, "addSubview:", v16);

}

void sub_100081D98()
{
  char *v0;
  void *v1;
  void *v2;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  Class isa;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business15IMBWebTitleView_titleLabel];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = sub_10002DA10();
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1000AF130;
  v7 = objc_msgSend(v2, "topAnchor");
  v8 = objc_msgSend(v1, "topAnchor");
  if (v3 == 2)
  {
    v9 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v8, 8.0);

    *(_QWORD *)(v6 + 32) = v9;
    v10 = objc_msgSend(v2, "leadingAnchor");
    v11 = objc_msgSend(v1, "layoutMarginsGuide");
    v12 = objc_msgSend(v11, "leadingAnchor");

    v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);
    *(_QWORD *)(v6 + 40) = v13;
    v14 = objc_msgSend(v2, "trailingAnchor");
    v15 = objc_msgSend(v1, "layoutMarginsGuide");
    v16 = objc_msgSend(v15, "trailingAnchor");

    v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);
    *(_QWORD *)(v6 + 48) = v17;
    v18 = objc_msgSend(v2, "centerYAnchor");
    v19 = objc_msgSend(v1, "layoutMarginsGuide");
    v20 = objc_msgSend(v19, "centerYAnchor");

    v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
    *(_QWORD *)(v6 + 56) = v21;
  }
  else
  {
    v23 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

    *(_QWORD *)(v6 + 32) = v23;
    v24 = objc_msgSend(v2, "leadingAnchor");
    v25 = objc_msgSend(v1, "layoutMarginsGuide");
    v26 = objc_msgSend(v25, "leadingAnchor");

    v27 = objc_msgSend(v24, "constraintEqualToAnchor:", v26);
    *(_QWORD *)(v6 + 40) = v27;
    v28 = objc_msgSend(v2, "trailingAnchor");
    v29 = objc_msgSend(v1, "layoutMarginsGuide");
    v30 = objc_msgSend(v29, "trailingAnchor");

    v31 = objc_msgSend(v28, "constraintEqualToAnchor:", v30);
    *(_QWORD *)(v6 + 48) = v31;
    v32 = objc_msgSend(v2, "bottomAnchor");
    v33 = objc_msgSend(v1, "bottomAnchor");
    v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

    *(_QWORD *)(v6 + 56) = v34;
  }
  specialized Array._endMutation()(v22);
  sub_1000090C8(0, (unint64_t *)&qword_1000EEB90, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v4, "activateConstraints:", isa);

}

id sub_100082208()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBWebTitleView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBWebTitleView()
{
  return objc_opt_self(_TtC8Business15IMBWebTitleView);
}

void sub_100082268(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  if (!a1)
    goto LABEL_29;
  v21 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v6 = 0;
  v7 = _swiftEmptyArrayStorage;
  if (!v4)
    goto LABEL_6;
LABEL_5:
  v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v8 | (v6 << 6); ; i = __clz(__rbit64(v11)) + (v6 << 6))
  {
    v13 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * i);
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;
    v17 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
      v7 = sub_100038678(0, v7[2] + 1, 1, v7);
    v19 = v7[2];
    v18 = v7[3];
    if (v19 >= v18 >> 1)
      v7 = sub_100038678((_QWORD *)(v18 > 1), v19 + 1, 1, v7);
    v7[2] = v19 + 1;
    v20 = &v7[2 * v19];
    v20[4] = v14;
    v20[5] = v16;

    if (v4)
      goto LABEL_5;
LABEL_6:
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v5)
      goto LABEL_26;
    v11 = *(_QWORD *)(v21 + 8 * v10);
    ++v6;
    if (!v11)
    {
      v6 = v10 + 1;
      if (v10 + 1 >= v5)
        goto LABEL_26;
      v11 = *(_QWORD *)(v21 + 8 * v6);
      if (!v11)
      {
        v6 = v10 + 2;
        if (v10 + 2 >= v5)
          goto LABEL_26;
        v11 = *(_QWORD *)(v21 + 8 * v6);
        if (!v11)
          break;
      }
    }
LABEL_19:
    v4 = (v11 - 1) & v11;
  }
  v12 = v10 + 3;
  if (v12 >= v5)
  {
LABEL_26:
    swift_release(a1);
    return;
  }
  v11 = *(_QWORD *)(v21 + 8 * v12);
  if (v11)
  {
    v6 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v6 >= v5)
      goto LABEL_26;
    v11 = *(_QWORD *)(v21 + 8 * v6);
    ++v12;
    if (v11)
      goto LABEL_19;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

void *sub_100082460(uint64_t a1)
{
  void *result;
  uint64_t v3;
  uint64_t i;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  NSString *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  char v27;
  id v28;
  void *v29;

  result = &_swiftEmptySetSingleton;
  v29 = &_swiftEmptySetSingleton;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(a1);
    for (i = a1 + 40; ; i += 16)
    {
      v5 = String.lowercased()();
      static String._unconditionallyBridgeFromObjectiveC(_:)(PKContactFieldPostalAddress);
      v7 = v6;
      v8 = String.lowercased()();
      swift_bridgeObjectRelease(v7);
      if (v8._countAndFlagsBits == v5._countAndFlagsBits && v8._object == v5._object)
        break;
      v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v8._countAndFlagsBits, v8._object, v5._countAndFlagsBits, v5._object, 0);
      swift_bridgeObjectRelease(v8._object);
      if ((v10 & 1) != 0)
        goto LABEL_12;
      static String._unconditionallyBridgeFromObjectiveC(_:)(PKContactFieldName);
      v12 = v11;
      v13 = String.lowercased()();
      swift_bridgeObjectRelease(v12);
      if (v13._countAndFlagsBits == v5._countAndFlagsBits && v13._object == v5._object)
      {
        swift_bridgeObjectRelease(v5._object);
LABEL_17:
        swift_bridgeObjectRelease(v5._object);
        v14 = PKContactFieldName;
        goto LABEL_13;
      }
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v13._countAndFlagsBits, v13._object, v5._countAndFlagsBits, v5._object, 0);
      swift_bridgeObjectRelease(v13._object);
      if ((v15 & 1) != 0)
        goto LABEL_17;
      static String._unconditionallyBridgeFromObjectiveC(_:)(PKContactFieldPhoneticName);
      v17 = v16;
      v18 = String.lowercased()();
      swift_bridgeObjectRelease(v17);
      if (v18._countAndFlagsBits == v5._countAndFlagsBits && v18._object == v5._object)
      {
        swift_bridgeObjectRelease(v5._object);
LABEL_22:
        swift_bridgeObjectRelease(v5._object);
        v14 = PKContactFieldPhoneticName;
        goto LABEL_13;
      }
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v18._countAndFlagsBits, v18._object, v5._countAndFlagsBits, v5._object, 0);
      swift_bridgeObjectRelease(v18._object);
      if ((v19 & 1) != 0)
        goto LABEL_22;
      static String._unconditionallyBridgeFromObjectiveC(_:)(PKContactFieldPhoneNumber);
      v21 = v20;
      v22 = String.lowercased()();
      swift_bridgeObjectRelease(v21);
      if (v22._countAndFlagsBits == v5._countAndFlagsBits && v22._object == v5._object)
      {
        swift_bridgeObjectRelease(v5._object);
LABEL_27:
        swift_bridgeObjectRelease(v5._object);
        v14 = PKContactFieldPhoneNumber;
        goto LABEL_13;
      }
      v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v22._countAndFlagsBits, v22._object, v5._countAndFlagsBits, v5._object, 0);
      swift_bridgeObjectRelease(v22._object);
      if ((v23 & 1) != 0)
        goto LABEL_27;
      static String._unconditionallyBridgeFromObjectiveC(_:)(PKContactFieldEmailAddress);
      v25 = v24;
      v26 = String.lowercased()();
      swift_bridgeObjectRelease(v25);
      if (v26._countAndFlagsBits == v5._countAndFlagsBits && v26._object == v5._object)
      {
        swift_bridgeObjectRelease_n(v5._object, 2);
      }
      else
      {
        v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v26._countAndFlagsBits, v26._object, v5._countAndFlagsBits, v5._object, 0);
        swift_bridgeObjectRelease(v5._object);
        swift_bridgeObjectRelease(v26._object);
        if ((v27 & 1) == 0)
          goto LABEL_14;
      }
      v14 = PKContactFieldEmailAddress;
LABEL_13:
      sub_1000A007C(&v28, v14);

LABEL_14:
      if (!--v3)
      {
        swift_bridgeObjectRelease(a1);
        return v29;
      }
    }
    swift_bridgeObjectRelease(v5._object);
LABEL_12:
    swift_bridgeObjectRelease(v5._object);
    v14 = PKContactFieldPostalAddress;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100082798()
{
  uint64_t result;

  sub_100020DE0();
  result = OS_os_log.init(subsystem:category:)(0xD00000000000002DLL, 0x80000001000BA9C0, 0x6E6F6D6D6F63, 0xE600000000000000);
  qword_1000F8A90 = result;
  return result;
}

uint64_t sub_1000827F0()
{
  uint64_t result;

  sub_100020DE0();
  result = OS_os_log.init(subsystem:category:)(0xD00000000000002DLL, 0x80000001000BA9C0, 0x6B6369507473696CLL, 0xEA00000000007265);
  qword_1000F8A98 = result;
  return result;
}

uint64_t sub_100082850()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_1000828D0(v0, qword_1000F8AA0);
  sub_100042038(v0, (uint64_t)qword_1000F8AA0);
  return Logger.init(subsystem:category:)(0xD000000000000025, 0x80000001000BA9F0, 0xD000000000000011, 0x80000001000BAA20);
}

uint64_t *sub_1000828D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t type metadata accessor for PaymentAuthorizationViewController()
{
  return objc_opt_self(_TtC8Business34PaymentAuthorizationViewController);
}

void sub_100082930()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  BOOL v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  char *v30;

  v1 = v0;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_14;
  }
  v3 = v2;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "systemBackgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v5);

  v6 = *(void **)&v1[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView];
  v7 = objc_msgSend(v1, "view");
  if (!v7)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v7;
  objc_msgSend(v7, "bounds");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  objc_msgSend(v6, "setFrame:", v10, v12, v14, v16);
  objc_msgSend(v6, "setDataSource:", v1);
  objc_msgSend(v6, "setDelegate:", v1);
  objc_msgSend(v6, "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(v6, "setEstimatedRowHeight:", 128.0);
  objc_msgSend(v6, "setSeparatorStyle:", 1);
  v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v6, "setTableFooterView:", v17);

  if (sub_10002DA10() >= 2u)
  {
    if (qword_1000EBBF8 != -1)
      swift_once(&qword_1000EBBF8, sub_10002D65C);
    v18 = (id)qword_1000F8978;
  }
  else
  {
    v18 = objc_msgSend(v4, "systemGroupedBackgroundColor");
  }
  v19 = v18;
  objc_msgSend(v6, "setBackgroundColor:", v18);

  v20 = sub_100082D64();
  v21 = sub_100059898();
  swift_release(v20);
  objc_msgSend(v6, "setInsetsContentViewsToSafeArea:", !v21);
  v22 = sub_100082CF0();
  objc_msgSend(v6, "setTableHeaderView:", v22);

  v23 = *(void **)&v1[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_nothingAvailableLabel];
  v24 = objc_msgSend(v4, "labelColor");
  objc_msgSend(v23, "setTextColor:", v24);

  objc_msgSend(v23, "setTextAlignment:", 1);
  objc_msgSend(v23, "setHidden:", 1);
  objc_msgSend(v23, "setUserInteractionEnabled:", 0);
  v25 = objc_msgSend(v1, "view");
  if (!v25)
    goto LABEL_15;
  v26 = v25;
  objc_msgSend(v25, "addSubview:", v6);

  v27 = objc_msgSend(v1, "view");
  if (!v27)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v28 = v27;
  objc_msgSend(v27, "addSubview:", v23);

  v29 = sub_100082D64();
  LOBYTE(v28) = sub_100059898();
  swift_release(v29);
  if ((v28 & 1) != 0)
  {
    v30 = sub_100082DDC();
    sub_100093C68(v30);

  }
}

id sub_100082CF0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___tableViewHeader;
  v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___tableViewHeader);
  if (v2)
  {
    v3 = *(id *)((char *)v0
               + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___tableViewHeader);
  }
  else
  {
    v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x118))();
    v5 = *(void **)((char *)v0 + v1);
    *(_QWORD *)((char *)v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_100082D64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___footerToolbarModel;
  v2 = *(_QWORD *)((char *)v0
                 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___footerToolbarModel);
  if (v2)
  {
    v3 = *(_QWORD *)((char *)v0
                   + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___footerToolbarModel);
  }
  else
  {
    v3 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120))();
    v4 = *(_QWORD *)((char *)v0 + v1);
    *(_QWORD *)((char *)v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v4);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

char *sub_100082DDC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v1 = v0
     + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___footerToolbarViewController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___footerToolbarViewController);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___footerToolbarViewController);
  }
  else
  {
    v4 = sub_100083588(v0);
    v5 = *(void **)v1;
    *(_QWORD *)v1 = v4;
    *(_QWORD *)(v1 + 8) = v6;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_100082E4C()
{
  char *v0;
  char *v1;
  void *v2;
  __objc2_class_ro *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  __objc2_class_ro *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  NSArray v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView];
  v3 = &BIABubbleOptionsiOSViewController;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v2, "topAnchor");
  v5 = objc_msgSend(v1, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_16;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "topAnchor");

  v8 = objc_msgSend(v4, "constraintEqualToAnchor:", v7);
  v9 = &BIABubbleOptionsiOSViewController;
  objc_msgSend(v8, "setActive:", 1);

  v10 = objc_msgSend(v2, "rightAnchor");
  v11 = objc_msgSend(v1, "view");
  if (!v11)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "rightAnchor");

  v14 = objc_msgSend(v10, "constraintEqualToAnchor:", v13);
  objc_msgSend(v14, "setActive:", 1);

  v15 = objc_msgSend(v2, "leftAnchor");
  v16 = objc_msgSend(v1, "view");
  if (!v16)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "leftAnchor");

  v19 = objc_msgSend(v15, "constraintEqualToAnchor:", v18);
  objc_msgSend(v19, "setActive:", 1);

  v20 = sub_100082D64();
  LOBYTE(v19) = sub_100059898();
  swift_release(v20);
  v65 = v2;
  if ((v19 & 1) == 0
    || (v21 = sub_100082DDC(),
        v22 = objc_msgSend(v21, "view"),
        v21,
        !v22))
  {
    v46 = objc_msgSend(v2, "bottomAnchor", v2);
    v47 = objc_msgSend(v1, "view");
    if (!v47)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v48 = v47;
    v49 = objc_msgSend(v47, "bottomAnchor");

    v45.super.isa = (Class)objc_msgSend(v46, "constraintEqualToAnchor:", v49);
    -[objc_class setActive:](v45.super.isa, "setActive:", 1);
LABEL_12:

    v50 = *(void **)&v1[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_nothingAvailableLabel];
    objc_msgSend(v50, *(SEL *)&v3[51].ivar_base_size, 0);
    v51 = objc_msgSend(v50, "leftAnchor");
    v52 = objc_msgSend(v1, "view");
    if (v52)
    {
      v53 = v52;
      v54 = objc_msgSend(v52, "layoutMarginsGuide");

      v55 = objc_msgSend(v54, "leftAnchor");
      v56 = objc_msgSend(v51, "constraintEqualToAnchor:", v55);

      objc_msgSend(v56, (SEL)v9[54].base_meths, 1);
      v57 = objc_msgSend(v50, "rightAnchor");
      v58 = objc_msgSend(v1, "view");
      if (v58)
      {
        v59 = v58;
        v60 = objc_msgSend(v58, "layoutMarginsGuide");

        v61 = objc_msgSend(v60, "rightAnchor");
        v62 = objc_msgSend(v57, "constraintEqualToAnchor:", v61);

        objc_msgSend(v62, (SEL)v9[54].base_meths, 1);
        v63 = objc_msgSend(v50, "centerYAnchor");
        v64 = objc_msgSend(v65, "centerYAnchor");
        v66 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

        objc_msgSend(v66, (SEL)v9[54].base_meths, 1);
        return;
      }
      goto LABEL_19;
    }
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v23 = sub_100007D40((uint64_t *)&unk_1000ED490);
  v24 = swift_allocObject(v23, 64, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1000AF130;
  v25 = objc_msgSend(v22, "topAnchor");
  v26 = objc_msgSend(v2, "bottomAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v24 + 32) = v27;
  v28 = objc_msgSend(v22, "leadingAnchor");
  v29 = objc_msgSend(v1, "view");
  if (!v29)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, "leadingAnchor");

  v32 = objc_msgSend(v28, "constraintEqualToAnchor:", v31);
  *(_QWORD *)(v24 + 40) = v32;
  v33 = objc_msgSend(v22, "trailingAnchor");
  v34 = objc_msgSend(v1, "view");
  if (!v34)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, "trailingAnchor");

  v37 = objc_msgSend(v33, "constraintEqualToAnchor:", v36);
  *(_QWORD *)(v24 + 48) = v37;
  v38 = objc_msgSend(v22, "bottomAnchor");
  v39 = objc_msgSend(v1, "view");
  if (v39)
  {
    v40 = v39;
    v41 = (void *)objc_opt_self(NSLayoutConstraint);
    v42 = objc_msgSend(v40, "bottomAnchor");

    v43 = objc_msgSend(v38, "constraintEqualToAnchor:", v42);
    *(_QWORD *)(v24 + 56) = v43;
    specialized Array._endMutation()(v44);
    sub_100011A28();
    v45.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    objc_msgSend(v41, "activateConstraints:", v45.super.isa);

    v9 = &BIABubbleOptionsiOSViewController;
    v3 = &BIABubbleOptionsiOSViewController;
    goto LABEL_12;
  }
LABEL_23:
  __break(1u);
}

char *sub_100083588(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  char *v5;
  _UNKNOWN **v6;
  id v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_100082D64();
  if (sub_10002DA10() == 2)
  {
    v3 = objc_allocWithZone((Class)type metadata accessor for MacFooterToolbarViewController());
    v4 = swift_retain(v2);
    v5 = sub_1000A65E0(v4);
    v6 = &off_1000DA780;
  }
  else
  {
    v7 = objc_allocWithZone((Class)type metadata accessor for iOSFooterToolbarViewController());
    v8 = swift_retain(v2);
    v5 = sub_10002DC14(v8);
    v6 = &off_1000D76C8;
  }
  swift_release(v2);
  ObjectType = swift_getObjectType(v5);
  v10 = (void (*)(uint64_t, uint64_t))v6[3];
  v11 = swift_unknownObjectRetain(a1);
  v10(v11, (uint64_t)&off_1000D9DC0);
  ((void (*)(uint64_t, uint64_t, _UNKNOWN **))v6[8])(a1, ObjectType, v6);
  return v5;
}

char *sub_100083674()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message);
  v2 = objc_msgSend(v1, "receivedMessage");
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, "title");

    if (v4)
    {
      v3 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v6 = v5;

      goto LABEL_6;
    }
    v3 = 0;
  }
  v6 = 0;
LABEL_6:
  v7 = objc_msgSend(v1, "receivedMessage");
  v8 = v7;
  if (!v7)
  {
LABEL_10:
    v11 = 0;
    goto LABEL_11;
  }
  v9 = objc_msgSend(v7, "subtitle");

  if (!v9)
  {
    v8 = 0;
    goto LABEL_10;
  }
  v8 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v11 = v10;

LABEL_11:
  v12 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView), "separatorColor");
  v13 = objc_allocWithZone((Class)type metadata accessor for IMBTableHeaderView());
  return sub_10009102C((uint64_t)v3, v6, (uint64_t)v8, v11, v12);
}

double sub_1000837C0()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = type metadata accessor for FooterToolbarModel();
  v1 = swift_allocObject(v0, 97, 7);
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  *(_BYTE *)(v1 + 96) = 1;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = 0xE000000000000000;
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v1 + 56) = xmmword_1000AFD50;
  *(_QWORD *)(v1 + 72) = 0xE000000000000000;
  return result;
}

uint64_t sub_100083884()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  CGFloat v9;
  double Width;
  double height;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  uint64_t result;
  void *v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void (*v26)(uint64_t, __n128);
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  objc_super v30;
  CGRect v31;
  CGRect v32;

  v30.receiver = v0;
  v30.super_class = (Class)type metadata accessor for IMBDetailedMessageTableViewController();
  objc_msgSendSuper2(&v30, "viewDidLayoutSubviews");
  v1 = sub_100082CF0();
  objc_msgSend(v1, "frame");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v31.origin.x = v3;
  v31.origin.y = v5;
  v31.size.width = v7;
  v31.size.height = v9;
  Width = CGRectGetWidth(v31);
  height = UILayoutFittingCompressedSize.height;
  v12 = sub_100082CF0();
  LODWORD(v13) = 1148846080;
  LODWORD(v14) = 1112014848;
  objc_msgSend(v12, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", Width, height, v13, v14);
  v16 = v15;

  v17 = sub_100082CF0();
  objc_msgSend(v17, "setFrame:", v3, v5, v7, v16);

  result = sub_10002DA10();
  if (result == 2)
  {
    v19 = *(void **)&v0[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView];
    objc_msgSend(v19, "contentSize");
    v21 = v20;
    objc_msgSend(v19, "bounds");
    v22 = CGRectGetHeight(v32);
    v23 = sub_100082D64();
    v24 = v23;
    v25 = *(unsigned __int8 *)(v23 + 96);
    if (v22 >= v21)
    {
      *(_BYTE *)(v23 + 96) = 0;
      if (!v25)
        return swift_release(v24);
      v26 = *(void (**)(uint64_t, __n128))(v23 + 80);
      if (!v26)
        return swift_release(v24);
      v27 = *(_QWORD *)(v23 + 88);
      v28 = swift_retain(v27);
      v29 = 0;
    }
    else
    {
      *(_BYTE *)(v23 + 96) = 1;
      if ((v25 & 1) != 0)
        return swift_release(v24);
      v26 = *(void (**)(uint64_t, __n128))(v23 + 80);
      if (!v26)
        return swift_release(v24);
      v27 = *(_QWORD *)(v23 + 88);
      v28 = swift_retain(v27);
      v29 = 1;
    }
    v26(v29, v28);
    sub_100028980((uint64_t)v26, v27);
    return swift_release(v24);
  }
  return result;
}

void sub_100083A74()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000026, 0x80000001000BAC20, "Business/IMBDetailedMessageTableViewController.swift", 52, 2, 125, 0);
  __break(1u);
}

void sub_100083ACC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000027, 0x80000001000BABF0, "Business/IMBDetailedMessageTableViewController.swift", 52, 2, 129, 0);
  __break(1u);
}

id sub_100083D38(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  objc_super v10;

  v3 = OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView;
  v4 = objc_allocWithZone((Class)UITableView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithFrame:style:", 1, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_nothingAvailableLabel;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___tableViewHeader] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___footerToolbarModel] = 0;
  v7 = &v5[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___footerToolbarViewController];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for IMBDetailedMessageTableViewController();
  v8 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);

  return v8;
}

void sub_100083E50()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___tableViewHeader));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___footerToolbarModel));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController____lazy_storage___footerToolbarViewController));
}

id sub_100083EAC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBDetailedMessageTableViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBDetailedMessageTableViewController()
{
  return objc_opt_self(_TtC8Business37IMBDetailedMessageTableViewController);
}

uint64_t sub_100083F64()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x138))();
}

uint64_t sub_100083F80()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x140))();
}

uint64_t sub_100083F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v1 = v0 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController__dismissalDelegate);
  result = swift_unknownObjectRelease(Strong);
  if (Strong)
  {
    result = swift_unknownObjectWeakLoadStrong(v1);
    if (result)
    {
      v4 = result;
      v5 = *(_QWORD *)(v1 + 8);
      ObjectType = swift_getObjectType(result);
      v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16);
      v8 = type metadata accessor for IMBDetailedMessageTableViewController();
      v7(v0, v8, ObjectType, v5);
      return swift_unknownObjectRelease(v4);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t URL.displayDomainString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  v0 = type metadata accessor for CharacterSet(0);
  v1 = *(_QWORD *)(v0 - 8);
  v3 = __chkstk_darwin(v0, v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.absoluteString.getter(v3);
  v7 = v6;
  v8 = objc_allocWithZone((Class)NSURL);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v10 = objc_msgSend(v8, "initWithString:", v9);

  if (!v10)
    return 0;
  v11 = objc_msgSend(v10, "safari_userVisibleStringConsideringLongURLs");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v13 = v12;

  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v15 = objc_msgSend(v14, "safari_simplifiedUserVisibleURLStringWithSimplifications:forDisplayOnly:simplifiedStringOffset:", 511, 1, 0);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v24[0] = v16;
  v24[1] = v18;
  static CharacterSet.controlCharacters.getter(v19, v20);
  v21 = sub_10002CDE8();
  v22 = StringProtocol.trimmingCharacters(in:)(v5, &type metadata for String, v21);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
  swift_bridgeObjectRelease(v18);
  return v22;
}

void sub_1000841E4()
{
  qword_1000EF9F0 = 0x4034000000000000;
}

id sub_1000841F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  NSString v9;
  id v10;
  id v11;
  objc_super v13;

  v6 = OBJC_IVAR____TtC8Business21IMBImageTableViewCell_largeImageView;
  v7 = objc_allocWithZone((Class)UIImageView);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");

  if (a3)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v9 = 0;
  }
  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for IMBImageTableViewCell();
  v10 = objc_msgSendSuper2(&v13, "initWithStyle:reuseIdentifier:", a1, v9);

  v11 = v10;
  sub_1000843EC();
  sub_100084554();

  return v11;
}

id sub_10008431C(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  v3 = OBJC_IVAR____TtC8Business21IMBImageTableViewCell_largeImageView;
  v4 = objc_allocWithZone((Class)UIImageView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for IMBImageTableViewCell();
  v6 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);
  v7 = v6;
  if (v6)
  {
    v8 = v6;
    sub_1000843EC();
    sub_100084554();

  }
  return v7;
}

void sub_1000843EC()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  if (sub_10002DA10() == 2)
  {
    if (qword_1000EBBF8 != -1)
      swift_once(&qword_1000EBBF8, sub_10002D65C);
    objc_msgSend(v0, "setBackgroundColor:", qword_1000F8978);
  }
  objc_msgSend(v0, "setBounds:", 0.0, 0.0, 350.0, 10000.0);
  objc_msgSend(v0, "setSelectionStyle:", 0);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business21IMBImageTableViewCell_largeImageView];
  v2 = objc_msgSend(v1, "layer");
  objc_msgSend(v2, "setMasksToBounds:", 1);

  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setCornerRadius:", 8.0);

  objc_msgSend(v1, "setContentMode:", 2);
  v4 = objc_msgSend(v0, "contentView");
  objc_msgSend(v4, "addSubview:", v1);

}

void sub_100084554()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  char v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char v21;
  double v22;
  id v23;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business21IMBImageTableViewCell_largeImageView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v1, "topAnchor");
  v3 = objc_msgSend(v0, "contentView");
  v4 = objc_msgSend(v3, "topAnchor");

  v5 = sub_10002DA10();
  v6 = 10.0;
  if (v5 != 2)
  {
    if (qword_1000EBCD0 != -1)
      swift_once(&qword_1000EBCD0, sub_1000841E4);
    v6 = *(double *)&qword_1000EF9F0;
  }
  v7 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v4, v6);

  objc_msgSend(v7, "setActive:", 1);
  v8 = objc_msgSend(v1, "leftAnchor");
  v9 = objc_msgSend(v0, "contentView");
  v10 = objc_msgSend(v9, "layoutMarginsGuide");

  v11 = objc_msgSend(v10, "leftAnchor");
  v12 = objc_msgSend(v8, "constraintEqualToAnchor:", v11);

  objc_msgSend(v12, "setActive:", 1);
  v13 = objc_msgSend(v1, "rightAnchor");
  v14 = objc_msgSend(v0, "contentView");
  v15 = objc_msgSend(v14, "layoutMarginsGuide");

  v16 = objc_msgSend(v15, "rightAnchor");
  v17 = objc_msgSend(v13, "constraintEqualToAnchor:", v16);

  objc_msgSend(v17, "setActive:", 1);
  v18 = objc_msgSend(v1, "bottomAnchor");
  v19 = objc_msgSend(v0, "contentView");
  v20 = objc_msgSend(v19, "bottomAnchor");

  v21 = sub_10002DA10();
  v22 = -10.0;
  if (v21 != 2)
  {
    if (qword_1000EBCD0 != -1)
      swift_once(&qword_1000EBCD0, sub_1000841E4);
    v22 = -*(double *)&qword_1000EF9F0;
  }
  v23 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v20, v22);

  objc_msgSend(v23, "setActive:", 1);
}

id sub_1000848A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBImageTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBImageTableViewCell()
{
  return objc_opt_self(_TtC8Business21IMBImageTableViewCell);
}

uint64_t sub_100084900()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for QuickReplyResponse()
{
  return objc_opt_self(_TtC8Business18QuickReplyResponse);
}

_QWORD *sub_1000849A8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  _QWORD *result;
  uint64_t v46;
  _OWORD v47[2];
  __int128 v48;
  void *v49;

  v1 = *(_QWORD *)(v0 + 40);
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_39;
  v2 = *(_QWORD *)(v0 + 16);
  if (v1 >= *(_QWORD *)(v2 + 16))
  {
LABEL_40:
    __break(1u);
LABEL_41:
    result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
  }
  else
  {
    v3 = v2 + 32 * v1;
    v4 = *(_QWORD *)(v3 + 32);
    v5 = *(_QWORD *)(v3 + 40);
    v49 = &type metadata for String;
    *(_QWORD *)&v48 = v4;
    *((_QWORD *)&v48 + 1) = v5;
    sub_100009CF0(&v48, v47);
    swift_bridgeObjectRetain(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    sub_10003A658(v47, 0xD000000000000012, 0x80000001000BAD60, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);
    v49 = &type metadata for Int;
    *(_QWORD *)&v48 = v1;
    sub_100009CF0(&v48, v47);
    v7 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    sub_10003A658(v47, 0x64657463656C6573, 0xED00007865646E49, v7);
    swift_bridgeObjectRelease(0x8000000000000000);
    v8 = *(_QWORD *)(v2 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain(v2);
      v46 = v2;
      v9 = (uint64_t *)(v2 + 56);
      v10 = _swiftEmptyArrayStorage;
      while (1)
      {
        v11 = *(v9 - 3);
        v12 = *(v9 - 2);
        v13 = *(v9 - 1);
        v14 = *v9;
        v49 = &type metadata for String;
        *(_QWORD *)&v48 = v11;
        *((_QWORD *)&v48 + 1) = v12;
        sub_100009CF0(&v48, v47);
        swift_bridgeObjectRetain_n(v12, 2);
        swift_bridgeObjectRetain(v14);
        v15 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        v17 = sub_10004F068(0x696669746E656469, 0xEA00000000007265);
        v18 = _swiftEmptyDictionarySingleton[2];
        v19 = (v16 & 1) == 0;
        v20 = v18 + v19;
        if (__OFADD__(v18, v19))
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        v21 = v16;
        if (_swiftEmptyDictionarySingleton[3] >= v20)
        {
          if ((v15 & 1) != 0)
          {
            if ((v16 & 1) != 0)
              goto LABEL_12;
          }
          else
          {
            sub_10003ACC4();
            if ((v21 & 1) != 0)
              goto LABEL_12;
          }
        }
        else
        {
          sub_100038EE4(v20, v15);
          v22 = sub_10004F068(0x696669746E656469, 0xEA00000000007265);
          if ((v21 & 1) != (v23 & 1))
            goto LABEL_41;
          v17 = v22;
          if ((v21 & 1) != 0)
          {
LABEL_12:
            v24 = (_QWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v17);
            sub_100010C40(v24);
            sub_100009CF0(v47, v24);
            goto LABEL_16;
          }
        }
        _swiftEmptyDictionarySingleton[(v17 >> 6) + 8] |= 1 << v17;
        v25 = (_QWORD *)(_swiftEmptyDictionarySingleton[6] + 16 * v17);
        *v25 = 0x696669746E656469;
        v25[1] = 0xEA00000000007265;
        sub_100009CF0(v47, (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v17));
        v26 = _swiftEmptyDictionarySingleton[2];
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
          goto LABEL_37;
        _swiftEmptyDictionarySingleton[2] = v28;
LABEL_16:
        swift_bridgeObjectRelease(0x8000000000000000);
        v49 = &type metadata for String;
        *(_QWORD *)&v48 = v13;
        *((_QWORD *)&v48 + 1) = v14;
        sub_100009CF0(&v48, v47);
        swift_bridgeObjectRetain(v14);
        v29 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        v31 = sub_10004F068(0x656C746974, 0xE500000000000000);
        v32 = _swiftEmptyDictionarySingleton[2];
        v33 = (v30 & 1) == 0;
        v34 = v32 + v33;
        if (__OFADD__(v32, v33))
          goto LABEL_36;
        v35 = v30;
        if (_swiftEmptyDictionarySingleton[3] >= v34)
        {
          if ((v29 & 1) != 0)
          {
            if ((v30 & 1) != 0)
              goto LABEL_23;
          }
          else
          {
            sub_10003ACC4();
            if ((v35 & 1) != 0)
              goto LABEL_23;
          }
        }
        else
        {
          sub_100038EE4(v34, v29);
          v36 = sub_10004F068(0x656C746974, 0xE500000000000000);
          if ((v35 & 1) != (v37 & 1))
            goto LABEL_41;
          v31 = v36;
          if ((v35 & 1) != 0)
          {
LABEL_23:
            v38 = (_QWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v31);
            sub_100010C40(v38);
            sub_100009CF0(v47, v38);
            goto LABEL_27;
          }
        }
        _swiftEmptyDictionarySingleton[(v31 >> 6) + 8] |= 1 << v31;
        v39 = (_QWORD *)(_swiftEmptyDictionarySingleton[6] + 16 * v31);
        *v39 = 0x656C746974;
        v39[1] = 0xE500000000000000;
        sub_100009CF0(v47, (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v31));
        v40 = _swiftEmptyDictionarySingleton[2];
        v27 = __OFADD__(v40, 1);
        v41 = v40 + 1;
        if (v27)
          goto LABEL_38;
        _swiftEmptyDictionarySingleton[2] = v41;
LABEL_27:
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(0x8000000000000000);
        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
          v10 = sub_100038784(0, v10[2] + 1, 1, v10);
        v43 = v10[2];
        v42 = v10[3];
        if (v43 >= v42 >> 1)
          v10 = sub_100038784((_QWORD *)(v42 > 1), v43 + 1, 1, v10);
        v9 += 4;
        v10[2] = v43 + 1;
        v10[v43 + 4] = _swiftEmptyDictionarySingleton;
        if (!--v8)
        {
          swift_bridgeObjectRelease(v46);
          goto LABEL_34;
        }
      }
    }
    v10 = _swiftEmptyArrayStorage;
LABEL_34:
    v49 = (void *)sub_100007D40(&qword_1000ED040);
    *(_QWORD *)&v48 = v10;
    sub_100009CF0(&v48, v47);
    v44 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    sub_10003A658(v47, 0x736D657469, 0xE500000000000000, v44);
    swift_bridgeObjectRelease(0x8000000000000000);
    return _swiftEmptyDictionarySingleton;
  }
  return result;
}

_QWORD *sub_100084EFC(char a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  _BYTE *v5;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  id v20;
  id v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;

  v10 = a1 & 1;
  v11 = type metadata accessor for URLHelper(0);
  v13 = __chkstk_darwin(v11, v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  v18 = (char *)&v25 - v17;
  v5[OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_bubbleState] = 1;
  v19 = &v5[OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_model];
  *v19 = a3;
  v19[1] = a4;
  v19[2] = a5;
  swift_retain(a4);
  v20 = a5;
  v21 = a3;
  sub_10004EA08((uint64_t)v18);
  sub_100020D60((uint64_t)v18, (uint64_t)v15);
  v22 = sub_10003F6C0(v10, a2, (uint64_t)v15, v5);
  sub_100020DA4((uint64_t)v18);
  v23 = v22;
  sub_1000850B0();
  sub_1000851E8();

  swift_release(a4);
  return v23;
}

void sub_1000850B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSString v19;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_model + 8);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_model + 16);
  v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_bubbleState);
  v4 = *(id *)(v0 + OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_model);
  v5 = v2;
  swift_retain(v1);
  v6 = sub_100060064(v3, v4, v1);
  v8 = v7;
  v10 = v9;
  v12 = v11;

  swift_release(v1);
  v13 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_title);
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_title + 8);
  *v13 = v6;
  v13[1] = v8;
  swift_bridgeObjectRelease(v14);
  sub_1000AA190();
  v15 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_subtitle);
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_subtitle + 8);
  *v15 = v10;
  v15[1] = v12;
  swift_bridgeObjectRelease(v16);
  v17 = *(void **)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_subtitleLabel);
  v18 = v15[1];
  if (v18)
  {
    swift_bridgeObjectRetain(v18);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v17, "setText:", v19);

}

void sub_1000851E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  NSString v12;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_model + 8);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_model + 16);
  v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_bubbleState);
  v4 = *(id *)(v0 + OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_model);
  v5 = v2;
  swift_retain(v1);
  v6 = sub_100060290(v3, v4);
  v8 = v7;

  swift_release(v1);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_image);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_image) = v6;
  v10 = v6;

  sub_1000AA424();
  v11 = *(void **)(v0 + OBJC_IVAR____TtC8Business13IMBBubbleView_imageView);
  if (v8)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v11, "setAccessibilityLabel:", v12);

}

uint64_t sub_1000852FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = v0 + OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_model;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Business22IMBJITAppKitBubbleView_model);
  v2 = *(_QWORD *)(v1 + 8);

  return swift_release(v2);
}

id sub_100085334()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBJITAppKitBubbleView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBJITAppKitBubbleView()
{
  return objc_opt_self(_TtC8Business22IMBJITAppKitBubbleView);
}

uint64_t sub_1000853BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000853C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_10008543C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t *v9;
  uint64_t v10;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v10 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v9 = (uint64_t *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v10 = *v9;
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *v9;
  }
  swift_retain(v10);
  return v4;
}

uint64_t sub_1000854EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  return swift_release(*(_QWORD *)((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFF8));
}

uint64_t sub_10008552C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v9 = *v8;
  *v7 = *v8;
  swift_retain(v9);
  return a1;
}

uint64_t sub_10008558C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v9 = *v8;
  v10 = *v7;
  *v7 = *v8;
  swift_retain(v9);
  swift_release(v10);
  return a1;
}

uint64_t sub_1000855F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100085654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  *v7 = *(_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release(v8);
  return a1;
}

uint64_t sub_1000856B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100085734 + 4 * byte_1000B2EF8[v10]))();
  }
}

void sub_1000857B8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1000858AC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100085920);
}

void sub_1000858B4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1000858BCLL);
  JUMPOUT(0x100085920);
}

void sub_1000858FC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100085920);
}

void sub_100085904()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100085920);
}

uint64_t sub_10008590C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x100085920);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x10008591CLL);
    JUMPOUT(0x100085918);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for BubbleView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000150D8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BubbleView);
}

uint64_t sub_100085944(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1000C82D4, 1);
}

uint64_t sub_100085978@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t WitnessTable;
  unint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v31 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = type metadata accessor for HStack(0, v4, v5);
  v30 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_100007DCC(&qword_1000EFB90);
  v11 = type metadata accessor for ModifiedContent(0, v6, v10);
  v12 = *(_QWORD *)(v11 - 8);
  v14 = __chkstk_darwin(v11, v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v14, v17);
  v20 = (char *)&v30 - v19;
  v33 = v4;
  v34 = v5;
  v35 = v2;
  v21 = static VerticalAlignment.center.getter(v18);
  HStack.init(alignment:spacing:content:)(v21, 0, 1, sub_100085C08, v32, v4, v5);
  v22 = *(_QWORD *)(v2 + *(int *)(a1 + 36));
  v38 = v22;
  v23 = swift_retain(v22);
  v24 = static Edge.Set.all.getter(v23);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v6);
  View.background<A>(_:ignoresSafeAreaEdges:)(&v38, v24, v6, &type metadata for Color, WitnessTable, &protocol witness table for Color);
  swift_release(v22);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
  v26 = sub_100085C14();
  v36 = WitnessTable;
  v37 = v26;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v27 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v27(v20, v16, v11);
  v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v16, v11);
  v27(v31, v20, v11);
  return ((uint64_t (*)(char *, uint64_t))v28)(v20, v11);
}

uint64_t sub_100085B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *);
  uint64_t v10;

  v5 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1, a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *))(v5 + 16);
  v8(v7);
  ((void (*)(uint64_t, char *, uint64_t))v8)(a3, v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

uint64_t sub_100085C08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100085B70(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100085C14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EFB98;
  if (!qword_1000EFB98)
  {
    v1 = sub_100007DCC(&qword_1000EFB90);
    result = swift_getWitnessTable(&protocol conformance descriptor for _BackgroundStyleModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1000EFB98);
  }
  return result;
}

uint64_t sub_100085C60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for HStack(255, *a1, a1[1]);
  v2 = sub_100007DCC(&qword_1000EFB90);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v1);
  sub_100085C14();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

id sub_100085CE0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)BCLogger), "init");
  qword_1000F8AB8 = (uint64_t)result;
  return result;
}

void sub_100085D10(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, uint64_t a6)
{
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  NSString v20;

  swift_bridgeObjectRetain(a2);
  if ((a3 & 1) != 0)
  {
    v10._countAndFlagsBits = 46;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 0x6465696C706572;
    v11._object = (void *)0xE700000000000000;
    String.append(_:)(v11);
  }
  v12._countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = a4;
  v13._object = a5;
  String.append(_:)(v13);
  v14 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v15 = swift_allocObject(v14, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  *(_QWORD *)(v15 + 64) = sub_100009084();
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  sub_100020DE0();
  v16 = swift_bridgeObjectRetain(a2);
  v17 = (void *)static OS_os_log.default.getter(v16);
  v18 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("BusinessChat: Logging Message App Extension event: %@", 53, 2, &_mh_execute_header, v17, v18, v15);
  swift_bridgeObjectRelease(v15);

  if (qword_1000EBCD8 != -1)
    swift_once(&qword_1000EBCD8, sub_100085CE0);
  v19 = (void *)qword_1000F8AB8;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(v19, "mt_log_icloud_messages_apps_businessframework:version:", v20, a6);

}

double sub_100085EA8()
{
  double result;

  result = 20.0;
  xmmword_1000EFBA0 = xmmword_1000B2F80;
  return result;
}

id sub_100085EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  NSString v10;
  id v11;
  id v12;
  objc_super v14;

  v6 = OBJC_IVAR____TtC8Business20IMBInfoTableViewCell_leftLabel;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC8Business20IMBInfoTableViewCell_rightLabel;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

  if (a3)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v10 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for IMBInfoTableViewCell();
  v11 = objc_msgSendSuper2(&v14, "initWithStyle:reuseIdentifier:", a1, v10);

  v12 = v11;
  sub_100086100();
  sub_100086390();

  return v12;
}

id sub_10008600C(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = OBJC_IVAR____TtC8Business20IMBInfoTableViewCell_leftLabel;
  v4 = objc_allocWithZone((Class)UILabel);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC8Business20IMBInfoTableViewCell_rightLabel;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for IMBInfoTableViewCell();
  v7 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);
  v8 = v7;
  if (v7)
  {
    v9 = v7;
    sub_100086100();
    sub_100086390();

  }
  return v8;
}

void sub_100086100()
{
  char *v0;
  id v1;
  void *v2;
  int v3;
  void *v4;
  char **v5;
  id v6;
  void *v7;
  int v8;
  void *v9;
  char **v10;
  id v11;
  id v12;
  id v13;

  if (sub_10002DA10() == 2)
  {
    if (qword_1000EBBF8 != -1)
      swift_once(&qword_1000EBBF8, sub_10002D65C);
    objc_msgSend(v0, "setBackgroundColor:", qword_1000F8978);
    v1 = objc_msgSend(v0, "contentView");
    objc_msgSend(v1, "setDirectionalLayoutMargins:", 0.0, 16.0, 0.0, 16.0);

  }
  objc_msgSend(v0, "setBounds:", 0.0, 0.0, 350.0, 10000.0);
  objc_msgSend(v0, "setSelectionStyle:", 0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBInfoTableViewCell_leftLabel];
  v3 = sub_10002DA10();
  v4 = (void *)objc_opt_self(UIColor);
  if (v3 == 2)
    v5 = &selRef_secondaryLabelColor;
  else
    v5 = &selRef_labelColor;
  v6 = objc_msgSend(v4, *v5);
  objc_msgSend(v2, "setTextColor:", v6);

  if (qword_1000EBCE8 != -1)
    swift_once(&qword_1000EBCE8, sub_100086D70);
  objc_msgSend(v2, "setFont:", qword_1000EFBB0);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  v7 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBInfoTableViewCell_rightLabel];
  v8 = sub_10002DA10();
  v9 = (void *)objc_opt_self(UIColor);
  if (v8 == 2)
    v10 = &selRef_labelColor;
  else
    v10 = &selRef_secondaryLabelColor;
  v11 = objc_msgSend(v9, *v10);
  objc_msgSend(v7, "setTextColor:", v11);

  objc_msgSend(v7, "setFont:", qword_1000EFBB0);
  objc_msgSend(v7, "setNumberOfLines:", 0);
  v12 = objc_msgSend(v0, "contentView");
  objc_msgSend(v12, "addSubview:", v2);

  v13 = objc_msgSend(v0, "contentView");
  objc_msgSend(v13, "addSubview:", v7);

}

id sub_100086390()
{
  char *v0;
  id result;
  id v2;
  int IsAccessibilityContentSizeCategory;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  char v38;
  double v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  char v53;
  double v54;
  id v55;
  double v56;
  id v57;
  id v58;
  id v59;
  char v60;
  double v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  char v69;
  double v70;
  id v71;

  result = (id)UIApp;
  if (UIApp)
  {
    v2 = objc_msgSend(UIApp, "preferredContentSizeCategory");
    IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory();

    v4 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBInfoTableViewCell_leftLabel];
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)&v0[OBJC_IVAR____TtC8Business20IMBInfoTableViewCell_rightLabel];
    objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    if (IsAccessibilityContentSizeCategory)
    {
      v6 = objc_msgSend(v4, "topAnchor");
      v7 = objc_msgSend(v0, "contentView");
      v8 = objc_msgSend(v7, "topAnchor");

      v9 = sub_10002DA10();
      v10 = 10.0;
      if (v9 != 2)
      {
        if (qword_1000EBCE0 != -1)
          swift_once(&qword_1000EBCE0, sub_100085EA8);
        v10 = *(double *)&xmmword_1000EFBA0;
      }
      v11 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v8, v10);

      objc_msgSend(v11, "setActive:", 1);
      v12 = objc_msgSend(v4, "leadingAnchor");
      v13 = objc_msgSend(v0, "contentView");
      v14 = objc_msgSend(v13, "layoutMarginsGuide");

      v15 = objc_msgSend(v14, "leadingAnchor");
      v16 = objc_msgSend(v12, "constraintEqualToAnchor:", v15);

      objc_msgSend(v16, "setActive:", 1);
      v17 = objc_msgSend(v4, "trailingAnchor");
      v18 = objc_msgSend(v0, "contentView");
      v19 = objc_msgSend(v18, "layoutMarginsGuide");

      v20 = objc_msgSend(v19, "trailingAnchor");
      v21 = objc_msgSend(v17, "constraintEqualToAnchor:", v20);

      objc_msgSend(v21, "setActive:", 1);
      v22 = objc_msgSend(v5, "firstBaselineAnchor");
      v23 = objc_msgSend(v4, "lastBaselineAnchor");
      v24 = objc_msgSend(v22, "constraintEqualToSystemSpacingBelowAnchor:multiplier:", v23, 1.0);

      objc_msgSend(v24, "setActive:", 1);
      v25 = objc_msgSend(v5, "leadingAnchor");
      v26 = objc_msgSend(v0, "contentView");
      v27 = objc_msgSend(v26, "layoutMarginsGuide");

      v28 = objc_msgSend(v27, "leadingAnchor");
      v29 = objc_msgSend(v25, "constraintEqualToAnchor:", v28);

      objc_msgSend(v29, "setActive:", 1);
      v30 = objc_msgSend(v5, "trailingAnchor");
      v31 = objc_msgSend(v0, "contentView");
      v32 = objc_msgSend(v31, "layoutMarginsGuide");

      v33 = objc_msgSend(v32, "trailingAnchor");
      v34 = objc_msgSend(v30, "constraintEqualToAnchor:", v33);

      objc_msgSend(v34, "setActive:", 1);
      v35 = objc_msgSend(v5, "bottomAnchor");
      v36 = objc_msgSend(v0, "contentView");
      v37 = objc_msgSend(v36, "bottomAnchor");

      v38 = sub_10002DA10();
      v39 = -10.0;
      if (v38 != 2)
      {
        if (qword_1000EBCE0 != -1)
          swift_once(&qword_1000EBCE0, sub_100085EA8);
        v39 = -*(double *)&xmmword_1000EFBA0;
      }
      v40 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v37, v39);
      v41 = 0;
    }
    else
    {
      v42 = objc_msgSend(v4, "leadingAnchor");
      v43 = objc_msgSend(v0, "contentView");
      v44 = objc_msgSend(v43, "layoutMarginsGuide");

      v45 = objc_msgSend(v44, "leadingAnchor");
      v46 = objc_msgSend(v42, "constraintEqualToAnchor:", v45);

      objc_msgSend(v46, "setActive:", 1);
      v47 = objc_msgSend(v4, "trailingAnchor");
      v48 = objc_msgSend(v5, "leadingAnchor");
      if (qword_1000EBCE0 != -1)
        swift_once(&qword_1000EBCE0, sub_100085EA8);
      v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, -*((double *)&xmmword_1000EFBA0 + 1));

      objc_msgSend(v49, "setActive:", 1);
      v50 = objc_msgSend(v4, "topAnchor");
      v51 = objc_msgSend(v0, "contentView");
      v52 = objc_msgSend(v51, "topAnchor");

      v53 = sub_10002DA10();
      v54 = *(double *)&xmmword_1000EFBA0;
      if (v53 == 2)
        v54 = 10.0;
      v55 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v52, v54);

      objc_msgSend(v55, "setActive:", 1);
      LODWORD(v56) = 1148846080;
      objc_msgSend(v4, "setContentCompressionResistancePriority:forAxis:", 0, v56);
      v57 = objc_msgSend(v5, "topAnchor");
      v58 = objc_msgSend(v0, "contentView");
      v59 = objc_msgSend(v58, "topAnchor");

      v60 = sub_10002DA10();
      v61 = *(double *)&xmmword_1000EFBA0;
      if (v60 == 2)
        v61 = 10.0;
      v62 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v59, v61);

      objc_msgSend(v62, "setActive:", 1);
      v63 = objc_msgSend(v5, "trailingAnchor");
      v64 = objc_msgSend(v0, "contentView");
      v65 = objc_msgSend(v64, "layoutMarginsGuide");

      v66 = objc_msgSend(v65, "trailingAnchor");
      v67 = objc_msgSend(v63, "constraintEqualToAnchor:", v66);

      objc_msgSend(v67, "setActive:", 1);
      v35 = objc_msgSend(v5, "bottomAnchor");
      v68 = objc_msgSend(v0, "contentView");
      v37 = objc_msgSend(v68, "bottomAnchor");

      v69 = sub_10002DA10();
      v70 = -*(double *)&xmmword_1000EFBA0;
      if (v69 == 2)
        v70 = -10.0;
      v40 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v37, v70);
      v41 = 2;
    }
    v71 = v40;

    objc_msgSend(v71, "setActive:", 1);
    return objc_msgSend(v5, "setTextAlignment:", v41);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100086CE8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBInfoTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBInfoTableViewCell()
{
  return objc_opt_self(_TtC8Business20IMBInfoTableViewCell);
}

void sub_100086D70()
{
  id v0;
  id v1;
  id v2;

  if (sub_10002DA10() == 2)
  {
    v0 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
    v1 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 13.0);
    v2 = objc_msgSend(v0, "scaledFontForFont:", v1);

  }
  else
  {
    v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  }
  qword_1000EFBB0 = (uint64_t)v2;
}

Swift::String __swiftcall String.sha256()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t countAndFlagsBits;
  void *object;
  Class isa;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  void *v21;
  Swift::String result;
  uint64_t v23;

  v2 = v1;
  v3 = v0;
  v4 = type metadata accessor for String.Encoding(0);
  v5 = *(_QWORD *)(v4 - 8);
  v7 = __chkstk_darwin(v4, v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter(v7);
  v10 = String.data(using:allowLossyConversion:)(v9, 0, v3, v2);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  if (v12 >> 60 == 15)
  {
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  else
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    v16 = (void *)sub_100087120(isa);

    sub_100087274(v16);
    v18 = v17;

    v19 = String.uppercased()();
    countAndFlagsBits = v19._countAndFlagsBits;
    object = v19._object;
    swift_bridgeObjectRelease(v18);
    sub_100010BE8(v10, v12);
  }
  v20 = countAndFlagsBits;
  v21 = object;
  result._object = v21;
  result._countAndFlagsBits = v20;
  return result;
}

_QWORD *sub_100086F70(int a1, size_t a2)
{
  uint64_t v4;
  _QWORD *result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (!a2)
      return _swiftEmptyArrayStorage;
    v4 = static Array._allocateBufferUninitialized(minimumCapacity:)(a2, &type metadata for UInt8);
    *(_QWORD *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return (_QWORD *)v4;
  }
  return result;
}

uint64_t sub_100087028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = a1;
  if (a2)
  {
    v12 = a1;
    v13 = a2;
    v10 = 43;
    v11 = 0xE100000000000000;
    v8 = 45;
    v9 = 0xE100000000000000;
    v3 = sub_10002CDE8();
    v4 = ((uint64_t (*)(uint64_t *, uint64_t *, uint64_t, _QWORD, _QWORD, uint64_t, void *, void *, void *, unint64_t, unint64_t, unint64_t))StringProtocol.replacingOccurrences<A, B>(of:with:options:range:))(&v10, &v8, 2, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v3, v3, v3);
    v6 = v5;
    v12 = v4;
    v13 = v5;
    v10 = 47;
    v11 = 0xE100000000000000;
    v8 = 95;
    v9 = 0xE100000000000000;
    v2 = ((uint64_t (*)(uint64_t *, uint64_t *, uint64_t, _QWORD, _QWORD, uint64_t, void *, void *, void *, unint64_t, unint64_t, unint64_t))StringProtocol.replacingOccurrences<A, B>(of:with:options:range:))(&v10, &v8, 2, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v3, v3, v3);
    swift_bridgeObjectRelease(v6);
  }
  return v2;
}

uint64_t sub_100087120(void *a1)
{
  uint64_t v2;
  unsigned __int8 *v3;
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  uint64_t result;

  v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(32, &type metadata for UInt8);
  *(_QWORD *)(v2 + 16) = 32;
  *(_OWORD *)(v2 + 32) = 0u;
  v3 = (unsigned __int8 *)(v2 + 32);
  *(_OWORD *)(v2 + 48) = 0u;
  v4 = objc_retainAutorelease(a1);
  v5 = objc_msgSend(v4, "bytes");
  v6 = (unint64_t)objc_msgSend(v4, "length");
  if ((v6 & 0x8000000000000000) != 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  }
  else
  {
    if (!HIDWORD(v6))
    {
      CC_SHA256(v5, v6, v3);
      v7 = objc_msgSend(objc_allocWithZone((Class)NSData), "initWithBytes:length:", v3, 32);
      swift_bridgeObjectRelease(v2);
      return (uint64_t)v7;
    }
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_100087274(void *a1)
{
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  void *object;

  v2 = sub_100086F70(0, (size_t)objc_msgSend(a1, "length"));
  v3 = objc_msgSend(a1, "length");
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100038DEC(0, v2[2], 0, v2);
  objc_msgSend(a1, "getBytes:length:", v2 + 4, v3);
  v4 = v2[2];
  if (v4)
  {
    v5 = 0;
    do
    {
      v6 = *((_BYTE *)v2 + v5++ + 32);
      v7 = sub_100007D40((uint64_t *)&unk_1000ECE50);
      v8 = swift_allocObject(v7, 72, 7);
      *(_OWORD *)(v8 + 16) = xmmword_1000AF070;
      *(_QWORD *)(v8 + 56) = &type metadata for UInt8;
      *(_QWORD *)(v8 + 64) = &protocol witness table for UInt8;
      *(_BYTE *)(v8 + 32) = v6;
      v9._countAndFlagsBits = String.init(format:_:)(2016555045, 0xE400000000000000, v8);
      object = v9._object;
      String.append(_:)(v9);
      swift_bridgeObjectRelease(object);
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease(v2);
  return 0;
}

id sub_1000873D0(void *a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  objc_class *v19;
  Class isa;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  NSURL *v26;
  void *v27;
  void *v28;
  objc_class *v29;
  uint64_t v30;
  objc_class *v31;
  Class v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v40;
  char *v41;

  v3 = sub_100007D40(&qword_1000EFBF0);
  v5 = __chkstk_darwin(v3, v4);
  v40 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v40 - v8;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007D40((uint64_t *)&unk_1000ED480);
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (objc_class *)objc_msgSend(a1, "_data");
  isa = v19;
  v41 = v9;
  if (v19)
  {
    v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v23 = v22;

    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100010BFC(v21, v23);
  }
  v24 = objc_msgSend(a1, "URL");
  if (v24)
  {
    v25 = v24;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v24);

    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v14, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v18, 1, v10) == 1)
    {
      v27 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v26);
      v27 = v28;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v18, 1, 1, v10);
    v27 = 0;
  }
  v29 = v1;
  v30 = (uint64_t)v41;
  v31 = (objc_class *)objc_msgSend(a1, "session");
  v32 = v31;
  if (v31)
  {
    v33 = -[objc_class identifier](v31, "identifier");

    if (v33)
    {
      v34 = (uint64_t)v40;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v33);

      v35 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
    }
    else
    {
      v35 = type metadata accessor for UUID(0);
      v34 = (uint64_t)v40;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v40, 1, 1, v35);
    }
    sub_10008776C(v34, v30);
    type metadata accessor for UUID(0);
    v37 = *(_QWORD *)(v35 - 8);
    v32 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v30, 1, v35) != 1)
    {
      v32 = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v30, v35);
    }
  }
  else
  {
    v36 = ((uint64_t (*)(void))type metadata accessor for UUID)();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v30, 1, 1, v36);
  }
  v38 = objc_msgSend(objc_allocWithZone(v29), "initWithData:url:sessionIdentifier:isFromMe:", isa, v27, v32, objc_msgSend(a1, "isFromMe"));

  return v38;
}

uint64_t sub_10008776C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000EFBF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000877B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  unint64_t v42;
  __int128 v43;
  __int128 v44;

  v3 = v2;
  if (!*(_QWORD *)(a1 + 16) || (v6 = sub_10004F068(0x736E6F6974636573, 0xE800000000000000), (v7 & 1) == 0))
  {
    v43 = 0u;
    v44 = 0u;
    swift_bridgeObjectRelease(a1);
    goto LABEL_22;
  }
  sub_100009C74(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)&v43);
  swift_bridgeObjectRelease(a1);
  if (!*((_QWORD *)&v44 + 1))
  {
LABEL_22:
    swift_bridgeObjectRelease(a2);
    v22 = sub_100009CB0((uint64_t)&v43);
LABEL_23:
    if (qword_1000EBCB8 != -1)
      v22 = swift_once(&qword_1000EBCB8, sub_100082798);
    v23 = qword_1000F8A90;
    v24 = static os_log_type_t.error.getter(v22);
    os_log(_:dso:log:type:_:)("Unable to create proposed list request: SectionsDictionaryKey is missing", 72, 2, &_mh_execute_header, v23, v24, _swiftEmptyArrayStorage);
    v25 = type metadata accessor for IMBListRequest();
    swift_deallocPartialClassInstance(v3, v25, 32, 7);
    return 0;
  }
  v8 = sub_100007D40(&qword_1000ED040);
  if ((swift_dynamicCast(v41, &v43, (char *)&type metadata for Any + 8, v8, 6) & 1) == 0)
  {
    v22 = swift_bridgeObjectRelease(a2);
    goto LABEL_23;
  }
  v9 = *(_QWORD *)&v41[0];
  v42 = (unint64_t)_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(*(_QWORD *)&v41[0] + 16);
  if (!v10)
  {
    swift_bridgeObjectRelease(*(_QWORD *)&v41[0]);
    swift_bridgeObjectRelease(a2);
    v27 = (uint64_t)_swiftEmptyArrayStorage;
    v28 = (unint64_t)_swiftEmptyArrayStorage >> 62;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_29;
    goto LABEL_35;
  }
  v11 = 0;
  do
  {
    v12 = *(_QWORD *)(v9 + 8 * v11 + 32);
    if (!*(_QWORD *)(v12 + 16))
    {
      v43 = 0u;
      v44 = 0u;
      swift_bridgeObjectRetain(v12);
LABEL_15:
      sub_100009CB0((uint64_t)&v43);
LABEL_16:
      *((_QWORD *)&v44 + 1) = &type metadata for Bool;
      LOBYTE(v43) = 0;
      sub_100009CF0(&v43, v41);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
      sub_10003A658(v41, 0xD000000000000011, 0x80000001000B8220, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease(0x8000000000000000);
      goto LABEL_17;
    }
    swift_bridgeObjectRetain_n(*(_QWORD *)(v9 + 8 * v11 + 32), 2);
    v13 = sub_10004F068(0xD000000000000011, 0x80000001000B8220);
    if ((v14 & 1) != 0)
    {
      sub_100009C74(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v43);
    }
    else
    {
      v43 = 0u;
      v44 = 0u;
    }
    swift_bridgeObjectRelease(v12);
    if (!*((_QWORD *)&v44 + 1))
      goto LABEL_15;
    if (!swift_dynamicCast(v41, &v43, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
      goto LABEL_16;
LABEL_17:
    v16 = type metadata accessor for IMBListSection();
    swift_allocObject(v16, 49, 7);
    swift_bridgeObjectRetain(a2);
    v17 = sub_1000554AC(v12, a2);
    v18 = swift_retain(v17);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
    v20 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v20 >= v19 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
    ++v11;
    v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v17);
    specialized Array._endMutation()(v21);
    swift_release(v17);
  }
  while (v10 != v11);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(v9);
  v27 = v42;
  v28 = v42 >> 62;
  if (!(v42 >> 62))
  {
LABEL_29:
    v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v27, 2);
    if (v29)
      goto LABEL_30;
LABEL_50:
    swift_bridgeObjectRelease_n(v27, 2);
    v30 = 0;
LABEL_51:
    if (v28)
    {
      if (v27 < 0)
        v40 = v27;
      else
        v40 = v27 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v27);
      v37 = _CocoaArrayWrapper.endIndex.getter(v40);
      swift_bridgeObjectRelease(v27);
    }
    else
    {
      v37 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v31 = v37 > 1;
    goto LABEL_54;
  }
LABEL_35:
  if (v27 < 0)
    v32 = v27;
  else
    v32 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v27, 2);
  v29 = _CocoaArrayWrapper.endIndex.getter(v32);
  if (!v29)
    goto LABEL_50;
LABEL_30:
  if ((v27 & 0xC000000000000001) != 0)
  {
    v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
    if ((*(_BYTE *)(v30 + 48) & 1) != 0)
      goto LABEL_32;
LABEL_41:
    swift_release(v30);
    if (v29 != 1)
    {
      v33 = 5;
      while (1)
      {
        v34 = v33 - 4;
        if ((v27 & 0xC000000000000001) != 0)
        {
          v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(v33 - 4, v27);
          v35 = __OFADD__(v34, 1);
          v36 = v33 - 3;
          if (v35)
            goto LABEL_58;
        }
        else
        {
          v30 = *(_QWORD *)(v27 + 8 * v33);
          swift_retain(v30);
          v35 = __OFADD__(v34, 1);
          v36 = v33 - 3;
          if (v35)
          {
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
        }
        if ((*(_BYTE *)(v30 + 48) & 1) != 0)
          goto LABEL_32;
        swift_release(v30);
        ++v33;
        if (v36 == v29)
          goto LABEL_50;
      }
    }
    goto LABEL_50;
  }
  v30 = *(_QWORD *)(v27 + 32);
  swift_retain(v30);
  if ((*(_BYTE *)(v30 + 48) & 1) == 0)
    goto LABEL_41;
LABEL_32:
  swift_bridgeObjectRelease_n(v27, 2);
  if ((*(_BYTE *)(v30 + 48) & 1) == 0)
    goto LABEL_51;
  v31 = 1;
LABEL_54:
  *(_BYTE *)(v3 + 16) = v31;
  if (v27 < 0 || (v27 & 0x4000000000000000) != 0)
  {
LABEL_59:
    swift_bridgeObjectRetain_n(v27, 2);
    v38 = (uint64_t)sub_1000A2C60(v27);
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v38 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v27, 2);
  }
  *(_QWORD *)&v43 = v38;
  sub_1000880B8((uint64_t *)&v43);
  swift_bridgeObjectRelease(v27);
  swift_release(v30);
  v39 = v43;
  swift_bridgeObjectRelease(v27);
  *(_QWORD *)(v3 + 24) = v39;
  return v3;
}

void *sub_100087D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v12[2];
  __int128 v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 24);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (void *)swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
    if (v2)
      goto LABEL_3;
LABEL_18:
    v5 = _swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease(v1);
    v14 = sub_100007D40(&qword_1000ED040);
    *(_QWORD *)&v13 = v5;
    sub_100009CF0(&v13, v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_10003A658(v12, 0x736E6F6974636573, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);
    return &_swiftEmptyDictionarySingleton;
  }
  if (v1 < 0)
    v10 = *(_QWORD *)(v0 + 24);
  else
    v10 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  result = (void *)_CocoaArrayWrapper.endIndex.getter(v10);
  v2 = (uint64_t)result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = _swiftEmptyArrayStorage;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      }
      else
      {
        v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
        swift_retain(v6);
      }
      v7 = sub_100055968();
      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
        v5 = sub_100038784(0, v5[2] + 1, 1, v5);
      v9 = v5[2];
      v8 = v5[3];
      if (v9 >= v8 >> 1)
        v5 = sub_100038784((_QWORD *)(v8 > 1), v9 + 1, 1, v5);
      ++v4;
      v5[2] = v9 + 1;
      v5[v9 + 4] = v7;
      swift_release(v6);
    }
    while (v2 != v4);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_100087F1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for IMBListRequest()
{
  return objc_opt_self(_TtC8Business14IMBListRequest);
}

uint64_t sub_100087F60()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void *object;
  Swift::String v10;

  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (*(_BYTE *)(v0 + 16))
    v1 = 1702195828;
  else
    v1 = 0x65736C6166;
  if (*(_BYTE *)(v0 + 16))
    v2 = 0xE400000000000000;
  else
    v2 = 0xE500000000000000;
  v3 = v2;
  String.append(_:)(*(Swift::String *)&v1);
  swift_bridgeObjectRelease(v2);
  v4._countAndFlagsBits = 0xD00000000000001BLL;
  v4._object = (void *)0x80000001000BAF40;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(0x80000001000BAF40);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = type metadata accessor for IMBListSection();
  v7 = swift_bridgeObjectRetain(v5);
  v8._countAndFlagsBits = Array.description.getter(v7, v6);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 0x6E6F697463657320;
  v10._object = (void *)0xEB00000000203A73;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(0xEB00000000203A73);
  return 0;
}

uint64_t sub_100088098()
{
  return sub_100087F60();
}

uint64_t sub_1000880B8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  Swift::Int v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1000A62B4(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  v5 = sub_100088130(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

Swift::Int sub_100088130(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int result;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  Swift::Int v21;
  Swift::Int v22;
  uint64_t *v23;
  uint64_t v24;
  Swift::Int v25;
  _QWORD *v26;
  uint64_t v27;
  Swift::Int v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  Swift::Int v93;
  Swift::Int v94;
  uint64_t v95;
  char *__dst;
  uint64_t v97;

  v2 = v1;
  v4 = a1[1];
  result = _minimumMergeRunLength(_:)(v4);
  if (result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        return sub_1000887A0(0, v4, 1, a1);
      return result;
    }
    goto LABEL_131;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
  {
LABEL_139:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  v7 = result;
  v91 = a1;
  if (v4 < 2)
  {
    v11 = (char *)_swiftEmptyArrayStorage;
    v97 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
      goto LABEL_97;
    }
  }
  else
  {
    v8 = v6 >> 1;
    v9 = type metadata accessor for IMBListSection();
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v97 = v10;
  }
  v12 = 0;
  v13 = *a1;
  v92 = *a1 - 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v93 = v7;
  v94 = v4;
  v95 = *a1;
  while (1)
  {
    v15 = v12++;
    if (v12 < v4)
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v13 + 8 * v12) + 32);
      v17 = *(_QWORD *)(*(_QWORD *)(v13 + 8 * v15) + 32);
      v12 = v15 + 2;
      if (v15 + 2 < v4)
      {
        v18 = v16;
        while (1)
        {
          v19 = *(_QWORD *)(*(_QWORD *)(v13 + 8 * v12) + 32);
          if (v16 < v17 == v19 >= v18)
            break;
          ++v12;
          v18 = v19;
          if (v4 == v12)
          {
            v12 = v4;
            break;
          }
        }
      }
      if (v16 < v17)
      {
        if (v12 < v15)
          goto LABEL_132;
        if (v15 < v12)
        {
          v20 = (uint64_t *)(v92 + 8 * v12);
          v21 = v12;
          v22 = v15;
          v23 = (uint64_t *)(v13 + 8 * v15);
          do
          {
            if (v22 != --v21)
            {
              if (!v13)
                goto LABEL_137;
              v24 = *v23;
              *v23 = *v20;
              *v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v12 < v4)
    {
      if (__OFSUB__(v12, v15))
        goto LABEL_130;
      if (v12 - v15 < v7)
      {
        v25 = v15 + v7;
        if (__OFADD__(v15, v7))
          goto LABEL_133;
        if (v25 >= v4)
          v25 = v4;
        if (v25 < v15)
          goto LABEL_134;
        if (v12 != v25)
        {
          v26 = (_QWORD *)(v92 + 8 * v12);
          do
          {
            v27 = *(_QWORD *)(v13 + 8 * v12);
            v28 = v15;
            v29 = v26;
            do
            {
              v30 = *v29;
              if (*(_QWORD *)(v27 + 32) >= *(_QWORD *)(*v29 + 32))
                break;
              if (!v13)
                goto LABEL_135;
              *v29 = v27;
              v29[1] = v30;
              --v29;
              ++v28;
            }
            while (v12 != v28);
            ++v12;
            ++v26;
          }
          while (v12 != v25);
          v12 = v25;
        }
      }
    }
    if (v12 < v15)
    {
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1000A4058(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v32 = *((_QWORD *)v11 + 2);
    v31 = *((_QWORD *)v11 + 3);
    v14 = v32 + 1;
    v13 = v95;
    if (v32 >= v31 >> 1)
    {
      v81 = sub_1000A4058((char *)(v31 > 1), v32 + 1, 1, v11);
      v13 = v95;
      v11 = v81;
    }
    *((_QWORD *)v11 + 2) = v14;
    v33 = v11 + 32;
    v34 = &v11[16 * v32 + 32];
    *(_QWORD *)v34 = v15;
    *((_QWORD *)v34 + 1) = v12;
    if (v32)
      break;
    v14 = 1;
LABEL_14:
    v7 = v93;
    v4 = v94;
    if (v12 >= v94)
    {
      v2 = v1;
LABEL_97:
      v83 = v11;
      if (v14 < 2)
        goto LABEL_94;
      v85 = *v91;
      while (1)
      {
        v86 = v14 - 2;
        if (v14 < 2)
          break;
        if (!v85)
          goto LABEL_138;
        v82 = v83;
        v87 = *(_QWORD *)&v83[16 * v86 + 32];
        v88 = *(_QWORD *)&v83[16 * v14 + 24];
        sub_100088808((char *)(v85 + 8 * v87), (char *)(v85 + 8 * *(_QWORD *)&v83[16 * v14 + 16]), v85 + 8 * v88, __dst);
        if (v2)
          goto LABEL_93;
        if (v88 < v87)
          goto LABEL_127;
        if ((swift_isUniquelyReferenced_nonNull_native(v82) & 1) == 0)
          v82 = sub_1000A4308((uint64_t)v82);
        if (v86 >= *((_QWORD *)v82 + 2))
          goto LABEL_128;
        v89 = &v82[16 * v86 + 32];
        *(_QWORD *)v89 = v87;
        *((_QWORD *)v89 + 1) = v88;
        v90 = *((_QWORD *)v82 + 2);
        if (v14 > v90)
          goto LABEL_129;
        memmove(&v82[16 * v14 + 16], &v82[16 * v14 + 32], 16 * (v90 - v14));
        v83 = v82;
        *((_QWORD *)v82 + 2) = v90 - 1;
        v14 = v90 - 1;
        if (v90 <= 2)
          goto LABEL_94;
      }
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
  }
  while (1)
  {
    v35 = v14 - 1;
    if (v14 >= 4)
    {
      v40 = &v33[16 * v14];
      v41 = *((_QWORD *)v40 - 8);
      v42 = *((_QWORD *)v40 - 7);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_114;
      v45 = *((_QWORD *)v40 - 6);
      v44 = *((_QWORD *)v40 - 5);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_115;
      v47 = v14 - 2;
      v48 = &v33[16 * v14 - 32];
      v50 = *(_QWORD *)v48;
      v49 = *((_QWORD *)v48 + 1);
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_117;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_120;
      if (v52 >= v43)
      {
        v70 = &v33[16 * v35];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_124;
        v63 = v38 < v73;
        goto LABEL_82;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v64 = *((_QWORD *)v11 + 4);
        v65 = *((_QWORD *)v11 + 5);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_76;
      }
      v37 = *((_QWORD *)v11 + 4);
      v36 = *((_QWORD *)v11 + 5);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_116;
    v47 = v14 - 2;
    v53 = &v33[16 * v14 - 32];
    v55 = *(_QWORD *)v53;
    v54 = *((_QWORD *)v53 + 1);
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_119;
    v59 = &v33[16 * v35];
    v61 = *(_QWORD *)v59;
    v60 = *((_QWORD *)v59 + 1);
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_122;
    if (__OFADD__(v57, v62))
      goto LABEL_123;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_82:
      if (v63)
        v35 = v47;
      goto LABEL_84;
    }
LABEL_76:
    if ((v58 & 1) != 0)
      goto LABEL_118;
    v66 = &v33[16 * v35];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_121;
    if (v69 < v57)
      goto LABEL_14;
LABEL_84:
    v74 = v35 - 1;
    if (v35 - 1 >= v14)
    {
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
      goto LABEL_125;
    }
    if (!v13)
      goto LABEL_136;
    v75 = v11;
    v76 = &v33[16 * v74];
    v77 = *(_QWORD *)v76;
    v78 = &v33[16 * v35];
    v79 = *((_QWORD *)v78 + 1);
    sub_100088808((char *)(v13 + 8 * *(_QWORD *)v76), (char *)(v13 + 8 * *(_QWORD *)v78), v13 + 8 * v79, __dst);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_111;
    if (v35 > *((_QWORD *)v75 + 2))
      goto LABEL_112;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v33[16 * v74 + 8] = v79;
    v80 = *((_QWORD *)v75 + 2);
    if (v35 >= v80)
      goto LABEL_113;
    v11 = v75;
    v14 = v80 - 1;
    memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
    *((_QWORD *)v75 + 2) = v80 - 1;
    v13 = v95;
    if (v80 <= 2)
      goto LABEL_14;
  }
  v82 = v75;
LABEL_93:
  v83 = v82;
LABEL_94:
  v84 = swift_bridgeObjectRelease(v83);
  *(_QWORD *)((v97 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()(v84);
  return swift_bridgeObjectRelease(v97);
}

uint64_t sub_1000887A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(_QWORD *)(v4 + 8 * a3);
    v7 = result;
    v8 = (_QWORD *)v5;
    while (1)
    {
      v9 = *v8;
      if (*(_QWORD *)(v6 + 32) >= *(_QWORD *)(*v8 + 32))
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100088808(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*(_QWORD *)(*((_QWORD *)v16 - 1) + 32) >= *(_QWORD *)(v20 + 32))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)(*(_QWORD *)v6 + 32) >= *(_QWORD *)(*(_QWORD *)v4 + 32))
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1000A4150(&v24, &v23, &v22);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100088A84()
{
  return sub_100088DD8((uint64_t)&unk_1000B3238, (uint64_t)&unk_1000B3260);
}

uint64_t sub_100088A98()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1000B31C0);
  v2 = swift_getKeyPath(&unk_1000B31E8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t (*sub_100088B08())()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  KeyPath = swift_getKeyPath(&unk_1000B3280);
  v2 = swift_getKeyPath(&unk_1000B32A8);
  static Published.subscript.getter(v7, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v7[0];
  if (!v7[0])
    return 0;
  v4 = v7[1];
  v5 = swift_allocObject(&unk_1000D9FB0, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  return sub_100071368;
}

uint64_t sub_100088BB0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000B31C0);
  v5 = swift_getKeyPath(&unk_1000B31E8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100088C2C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000B31C0);
  v5 = swift_getKeyPath(&unk_1000B31E8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100088C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtCCV8Business34NotificationOptionsMacCatalystView9ViewModel6Option__label;
  v2 = sub_100007D40(&qword_1000EFFC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCCV8Business34NotificationOptionsMacCatalystView9ViewModel6Option__enabled;
  v4 = sub_100007D40(&qword_1000EEFF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCCV8Business34NotificationOptionsMacCatalystView9ViewModel6Option__onSelect;
  v6 = sub_100007D40(&qword_1000EFFD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100088D48@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for NotificationOptionsMacCatalystView.ViewModel.Option(0);
  result = Identifiable<>.id.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100088D88@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for NotificationOptionsMacCatalystView.ViewModel.Option(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100088DC4()
{
  return sub_100088DD8((uint64_t)&unk_1000B3130, (uint64_t)&unk_1000B3158);
}

uint64_t sub_100088DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_100088E40()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1000B3178);
  v2 = swift_getKeyPath(&unk_1000B31A0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100088EB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _QWORD v11[2];

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(v11, v6, KeyPath, v8);
  swift_release(KeyPath);
  result = swift_release(v8);
  v10 = v11[1];
  *a4 = v11[0];
  a4[1] = v10;
  return result;
}

uint64_t sub_100088F28(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  _QWORD v13[2];

  v8 = *a1;
  v7 = a1[1];
  v9 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v11 = swift_getKeyPath(a6);
  v13[0] = v8;
  v13[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_retain(v9);
  return static Published.subscript.setter(v13, v9, KeyPath, v11);
}

uint64_t sub_100088FA4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000B3178);
  v5 = swift_getKeyPath(&unk_1000B31A0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100089020(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000B3178);
  v5 = swift_getKeyPath(&unk_1000B31A0);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100089098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCV8Business34NotificationOptionsMacCatalystView9ViewModel__label;
  v2 = sub_100007D40(&qword_1000EFFC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV8Business34NotificationOptionsMacCatalystView9ViewModel__options;
  v4 = sub_100007D40(&qword_1000EFFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100089118()
{
  return type metadata accessor for NotificationOptionsMacCatalystView.ViewModel(0);
}

uint64_t type metadata accessor for NotificationOptionsMacCatalystView.ViewModel(uint64_t a1)
{
  return sub_100057C70(a1, (uint64_t *)&unk_1000EFCE8, (uint64_t)&nominal type descriptor for NotificationOptionsMacCatalystView.ViewModel);
}

void sub_100089134(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_1000892C8(319, &qword_1000EFCF8, (uint64_t)&type metadata for String);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10008930C(319, &qword_1000EFD00, (uint64_t *)&unk_1000EFD08);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 80);
    }
  }
}

uint64_t sub_1000891DC()
{
  return type metadata accessor for NotificationOptionsMacCatalystView.ViewModel.Option(0);
}

uint64_t type metadata accessor for NotificationOptionsMacCatalystView.ViewModel.Option(uint64_t a1)
{
  return sub_100057C70(a1, (uint64_t *)&unk_1000EFE30, (uint64_t)&nominal type descriptor for NotificationOptionsMacCatalystView.ViewModel.Option);
}

void sub_1000891F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_1000892C8(319, &qword_1000EFCF8, (uint64_t)&type metadata for String);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000892C8(319, (unint64_t *)&qword_1000EF4C0, (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10008930C(319, &qword_1000EFE40, (uint64_t *)&unk_1000EFE48);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 3, v8, a1 + 80);
      }
    }
  }
}

void sub_1000892C8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = type metadata accessor for Published(0, a3);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_10008930C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_100007DCC(a3);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for NotificationOptionsMacCatalystView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for NotificationOptionsMacCatalystView(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for NotificationOptionsMacCatalystView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

_QWORD *assignWithTake for NotificationOptionsMacCatalystView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationOptionsMacCatalystView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationOptionsMacCatalystView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationOptionsMacCatalystView()
{
  return &type metadata for NotificationOptionsMacCatalystView;
}

uint64_t sub_100089490(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000C8534, 1);
}

uint64_t sub_1000894A0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for NotificationOptionsMacCatalystView.ViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000894DC(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  KeyPath = swift_getKeyPath(&unk_1000B3178);
  v4 = swift_getKeyPath(&unk_1000B31A0);
  swift_retain(a2);
  static Published.subscript.getter(&v12, v5, KeyPath, v4);
  swift_release(a2);
  swift_release(KeyPath);
  swift_release(v4);
  v6 = sub_100007D40((uint64_t *)&unk_1000EFD08);
  v7 = sub_100007D40(&qword_1000EFF88);
  v8 = sub_10002D41C(&qword_1000EFFB8, (uint64_t *)&unk_1000EFD08, (uint64_t)&protocol conformance descriptor for [A]);
  v9 = sub_100089D74();
  v10 = sub_100089E70();
  return ForEach<>.init(_:content:)(&v12, sub_1000895EC, 0, v6, &type metadata for ObjectIdentifier, v7, v8, v9, v10);
}

uint64_t sub_1000895EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_100007D40(&qword_1000EFF98);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = swift_retain(v9);
  Button.init(action:label:)(sub_100089EB8, v9, sub_100089EC0, v9, &type metadata for Text, &protocol witness table for Text, v10);
  KeyPath = swift_getKeyPath(&unk_1000B31C0);
  v12 = swift_getKeyPath(&unk_1000B31E8);
  static Published.subscript.getter(&v18, v9, KeyPath, v12);
  swift_release(KeyPath);
  swift_release(v12);
  LOBYTE(v12) = v18;
  v13 = swift_getKeyPath(&unk_1000B3208);
  v14 = swift_allocObject(&unk_1000D9F38, 17, 7);
  *(_BYTE *)(v14 + 16) = (v12 & 1) == 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v8, v4);
  v15 = (uint64_t *)(a2 + *(int *)(sub_100007D40(&qword_1000EFF88) + 36));
  *v15 = v13;
  v15[1] = (uint64_t)sub_10008A0A0;
  v15[2] = v14;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_100089768(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  KeyPath = swift_getKeyPath(&unk_1000B3280);
  v3 = swift_getKeyPath(&unk_1000B32A8);
  static Published.subscript.getter(v7, a1, KeyPath, v3);
  swift_release(KeyPath);
  result = swift_release(v3);
  v5 = v7[0];
  if (v7[0])
  {
    v6 = v7[1];
    ((void (*)(uint64_t))v7[0])(result);
    return sub_100028980(v5, v6);
  }
  return result;
}

uint64_t sub_1000897F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  KeyPath = swift_getKeyPath(&unk_1000B3238);
  v5 = swift_getKeyPath(&unk_1000B3260);
  static Published.subscript.getter(&v11, a1, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = sub_10002CDE8();
  result = Text.init<A>(_:)(&v11, &type metadata for String, v6);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 16) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v10;
  return result;
}

uint64_t sub_100089898@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  KeyPath = swift_getKeyPath(&unk_1000B3130);
  v5 = swift_getKeyPath(&unk_1000B3158);
  swift_retain(a1);
  static Published.subscript.getter(&v25, v6, KeyPath, v5);
  swift_release(a1);
  swift_release(KeyPath);
  swift_release(v5);
  v7 = sub_10002CDE8();
  v8 = Text.init<A>(_:)(&v25, &type metadata for String, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  if (qword_1000EBC30 != -1)
    swift_once(&qword_1000EBC30, sub_10002D774);
  v15 = v12 & 1;
  v16 = Font.init(_:)((id)qword_1000F89B0);
  v17 = Text.font(_:)(v16, v8, v10, v15, v14);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_release(v16);
  sub_100089E58(v8, v10, v15);
  result = swift_bridgeObjectRelease(v14);
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v19;
  *(_BYTE *)(a2 + 16) = v21 & 1;
  *(_QWORD *)(a2 + 24) = v23;
  return result;
}

__n128 sub_1000899F4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __n128 result;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter();
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v40;
    a1 = v41;
    v20 = a10;
    a3 = v42;
    v19 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  v35 = sub_100007D40(&qword_1000EFF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a9, v16, v35);
  v36 = a9 + *(int *)(sub_100007D40(&qword_1000EFFB0) + 36);
  v37 = v45[5];
  *(_OWORD *)(v36 + 64) = v45[4];
  *(_OWORD *)(v36 + 80) = v37;
  *(_OWORD *)(v36 + 96) = v45[6];
  v38 = v45[1];
  *(_OWORD *)v36 = v45[0];
  *(_OWORD *)(v36 + 16) = v38;
  result = (__n128)v45[3];
  *(_OWORD *)(v36 + 32) = v45[2];
  *(__n128 *)(v36 + 48) = result;
  return result;
}

uint64_t sub_100089BC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;

  v3 = sub_100007D40(&qword_1000EFF68);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v1[1];
  v20 = *v1;
  v21 = v8;
  v17 = v20;
  v18 = v8;
  v9 = sub_100007D40(&qword_1000EFF70);
  v10 = sub_100089D10();
  v11 = Menu.init(content:label:)(sub_100089D00, v19, sub_100089D08, v16, &type metadata for Text, v9, &protocol witness table for Text, v10);
  v12 = static Alignment.bottomTrailing.getter(v11);
  v14 = sub_1000899F4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v12, v13);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v4 + 8))(v7, v3, v14);
}

void *sub_100089CE8()
{
  return &protocol witness table for ObservableObjectPublisher;
}

void *sub_100089CF4()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_100089D00()
{
  uint64_t v0;

  return sub_1000894DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100089D08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100089898(*(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_100089D10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EFF78;
  if (!qword_1000EFF78)
  {
    v1 = sub_100007DCC(&qword_1000EFF70);
    sub_100089D74();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1000EFF78);
  }
  return result;
}

unint64_t sub_100089D74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EFF80;
  if (!qword_1000EFF80)
  {
    v1 = sub_100007DCC(&qword_1000EFF88);
    sub_10002D41C(&qword_1000EFF90, &qword_1000EFF98, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_10002D41C(&qword_1000EFFA0, &qword_1000EFFA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000EFF80);
  }
  return result;
}

uint64_t sub_100089E10@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_100088EB0(a1, (uint64_t)&unk_1000B3130, (uint64_t)&unk_1000B3158, a2);
}

uint64_t sub_100089E34(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100088F28(a1, a2, a3, a4, (uint64_t)&unk_1000B3130, (uint64_t)&unk_1000B3158);
}

uint64_t sub_100089E58(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

unint64_t sub_100089E70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EFFC0;
  if (!qword_1000EFFC0)
  {
    v1 = type metadata accessor for NotificationOptionsMacCatalystView.ViewModel.Option(255);
    result = swift_getWitnessTable(&unk_1000B30BC, v1);
    atomic_store(result, (unint64_t *)&qword_1000EFFC0);
  }
  return result;
}

uint64_t sub_100089EB8()
{
  uint64_t v0;

  return sub_100089768(v0);
}

uint64_t sub_100089EC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000897F4(v1, a1);
}

double sub_100089ED0@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000B3280);
  v5 = swift_getKeyPath(&unk_1000B32A8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_100089F4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  _QWORD v13[2];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_1000D9F88, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_100071300;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000B3280);
  v9 = swift_getKeyPath(&unk_1000B32A8);
  if (v3)
  {
    v10 = swift_allocObject(&unk_1000D9F60, 32, 7);
    *(_QWORD *)(v10 + 16) = v6;
    *(_QWORD *)(v10 + 24) = v5;
    v11 = sub_100071300;
  }
  else
  {
    v11 = 0;
    v10 = 0;
  }
  v13[0] = v11;
  v13[1] = v10;
  sub_10002B604(v3, v4);
  swift_retain(v7);
  return static Published.subscript.setter(v13, v7, KeyPath, v9);
}

uint64_t sub_10008A040@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10008A06C(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_10008A090()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_10008A0A0(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_10008A0B8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_100088EB0(a1, (uint64_t)&unk_1000B3238, (uint64_t)&unk_1000B3260, a2);
}

uint64_t sub_10008A0DC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100088F28(a1, a2, a3, a4, (uint64_t)&unk_1000B3238, (uint64_t)&unk_1000B3260);
}

uint64_t sub_10008A108()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10008A130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EFFE0;
  if (!qword_1000EFFE0)
  {
    v1 = sub_100007DCC(&qword_1000EFFB0);
    sub_10002D41C(&qword_1000EFFE8, &qword_1000EFF68, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000EFFE0);
  }
  return result;
}

uint64_t *sub_10008A1C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    swift_bridgeObjectRetain(v5);
    v7 = *(int *)(sub_100007D40(&qword_1000ED028) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_10008A254(_QWORD *a1)
{
  char *v2;
  uint64_t v3;

  swift_bridgeObjectRelease(*a1);
  v2 = (char *)a1 + *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v3 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t *sub_10008A2A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  v5 = *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

uint64_t *sub_10008A314(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_10008A390(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_10008A3FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(int *)(sub_100007D40(&qword_1000ED028) + 48);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t sub_10008A470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000ED028);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10008A4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100007D40(&qword_1000ED028);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t type metadata accessor for Endpoint(uint64_t a1)
{
  return sub_100057C70(a1, (uint64_t *)&unk_1000F0060, (uint64_t)&nominal type descriptor for Endpoint);
}

uint64_t sub_10008A514(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _DWORD v4[8];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, (char *)&value witness table for Builtin.BridgeObject + 64, *(_QWORD *)(result - 8) + 64);
    swift_initEnumMetadataSingleCase(a1, 256, v4);
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4[5];
  }
  return result;
}

void sub_10008A590()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSURL *v3;
  void *v4;
  void *v5;

  v1 = v0;
  type metadata accessor for Request(0);
  v2 = objc_allocWithZone((Class)NSMutableURLRequest);
  URL._bridgeToObjectiveC()(v3);
  v5 = v4;
  objc_msgSend(v2, "initWithURL:", v4);

  __asm { BR              X10 }
}

void *sub_10008A630()
{
  void *v0;
  NSString v1;
  NSString v2;
  NSString v3;
  NSString v4;
  NSString v5;
  void *v6;
  Class isa;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Class v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[3];
  uint64_t v42;
  id v43;
  unint64_t v44;

  v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xE400000000000000);
  objc_msgSend(v0, "setHTTPMethod:", v1);

  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setValue:forHTTPHeaderField:", v2, v3);

  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setValue:forHTTPHeaderField:", v4, v5);

  v6 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v43 = 0;
  v8 = objc_msgSend(v6, "dataWithJSONObject:options:error:", isa, 0, &v43);

  v9 = v43;
  if (v8)
  {
    v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    v13 = Data._bridgeToObjectiveC()().super.isa;
    sub_100010BFC(v10, v12);
    objc_msgSend(v0, "setHTTPBody:", v13);

    if (qword_1000EBCB8 != -1)
      v14 = swift_once(&qword_1000EBCB8, sub_100082798);
    v15 = qword_1000F8A90;
    v16 = static os_log_type_t.info.getter(v14);
    v17 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v18 = swift_allocObject(v17, 72, 7);
    *(_OWORD *)(v18 + 16) = xmmword_1000AF070;
    v19 = objc_msgSend(v0, "HTTPBody");
    if (v19)
    {
      v20 = v19;
      v21 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v23 = v22;

    }
    else
    {
      v21 = 0;
      v23 = 0xF000000000000000;
    }
    v43 = v21;
    v44 = v23;
    v36 = sub_100007D40(&qword_1000ED588);
    v37 = String.init<A>(describing:)(&v43, v36);
    v39 = v38;
    *(_QWORD *)(v18 + 56) = &type metadata for String;
    *(_QWORD *)(v18 + 64) = sub_100009084();
    *(_QWORD *)(v18 + 32) = v37;
    *(_QWORD *)(v18 + 40) = v39;
    os_log(_:dso:log:type:_:)("Created request body with parameters: %@", 40, 2, &_mh_execute_header, v15, v16, v18);
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v24 = v9;
    v25 = _convertNSErrorToError(_:)(v9);

    v27 = swift_willThrow(v26);
    if (qword_1000EBCB8 != -1)
      v27 = swift_once(&qword_1000EBCB8, sub_100082798);
    v28 = qword_1000F8A90;
    v29 = static os_log_type_t.error.getter(v27);
    v30 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v31 = swift_allocObject(v30, 72, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1000AF070;
    swift_getErrorValue(v25, &v42, v41);
    v43 = (id)Error.localizedDescription.getter(v41[1], v41[2]);
    v44 = v32;
    v33 = ((uint64_t (*)(id *, void *, void *, void *))String.init<A>(_:))(&v43, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    v35 = v34;
    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_QWORD *)(v31 + 64) = sub_100009084();
    *(_QWORD *)(v31 + 32) = v33;
    *(_QWORD *)(v31 + 40) = v35;
    os_log(_:dso:log:type:_:)("Error creating request body %@", 30, 2, &_mh_execute_header, v28, v29, v31);
    swift_bridgeObjectRelease(v31);
    swift_errorRelease(v25);

    return 0;
  }
  return v0;
}

uint64_t type metadata accessor for Request(uint64_t a1)
{
  return sub_100057C70(a1, qword_1000F00C8, (uint64_t)&nominal type descriptor for Request);
}

void sub_10008AA6C(char *a1)
{
  sub_10004FB98(*a1);
}

void sub_10008AA78()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_10008AABC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 1414745936, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

void sub_10008AB14()
{
  __asm { BR              X10 }
}

uint64_t sub_10008AB48(uint64_t a1)
{
  String.hash(into:)(a1, 1414745936, 0xE400000000000000);
  return swift_bridgeObjectRelease(0xE400000000000000);
}

void sub_10008AB8C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_10008ABCC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 1414745936, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

unint64_t sub_10008AC24@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10008B254(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10008AC50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10008AC78 + 4 * byte_1000B32D4[*v0]))();
}

void sub_10008AC78(_QWORD *a1@<X8>)
{
  *a1 = 1414745936;
  a1[1] = 0xE400000000000000;
}

void sub_10008AC8C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 5526864;
  a1[1] = v1;
}

void sub_10008AC9C(_QWORD *a1@<X8>)
{
  *a1 = 0x4554454C4544;
  a1[1] = 0xE600000000000000;
}

uint64_t *sub_10008ACB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(a3 + 24);
    v12 = *(uint64_t *)((char *)a2 + v11);
    *(uint64_t *)((char *)v4 + v11) = v12;
    swift_bridgeObjectRetain(v12);
  }
  return v4;
}

uint64_t sub_10008AD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

_BYTE *sub_10008ADB0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(_QWORD *)&a2[v10];
  *(_QWORD *)&a1[v10] = v11;
  swift_bridgeObjectRetain(v11);
  return a1;
}

_BYTE *sub_10008AE2C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(_QWORD *)&a2[v10];
  v12 = *(_QWORD *)&a1[v10];
  *(_QWORD *)&a1[v10] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  return a1;
}

_BYTE *sub_10008AEB4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_10008AF2C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(_QWORD *)&a1[v10];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t sub_10008AFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008AFB8);
}

uint64_t sub_10008AFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10008B038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008B044);
}

uint64_t sub_10008B044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_10008B0C0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_1000B32F8;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Request.Method(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10008B18C + 4 * byte_1000B32DD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10008B1C0 + 4 * byte_1000B32D8[v4]))();
}

uint64_t sub_10008B1C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10008B1C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10008B1D0);
  return result;
}

uint64_t sub_10008B1DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10008B1E4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10008B1E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10008B1F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Request.Method()
{
  return &type metadata for Request.Method;
}

unint64_t sub_10008B210()
{
  unint64_t result;

  result = qword_1000F0108;
  if (!qword_1000F0108)
  {
    result = swift_getWitnessTable(&unk_1000B3390, &type metadata for Request.Method);
    atomic_store(result, (unint64_t *)&qword_1000F0108);
  }
  return result;
}

unint64_t sub_10008B254(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000D6128, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t sub_10008B29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;

  v4 = v3;
  *(_OWORD *)(v4 + 16) = xmmword_1000B33C0;
  *(_QWORD *)(v4 + 32) = 0xA600000000000000;
  *(_QWORD *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0xE000000000000000;
  *(_QWORD *)(v4 + 56) = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 0xE000000000000000;
  *(_QWORD *)(v4 + 96) = 0;
  v8 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v4 + 16) = a1;
  swift_retain(a1);
  swift_release(v8);
  if (!a3)
  {
    v9 = type metadata accessor for IMBApplePayViewModel();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9);
    v11 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v12 = String._bridgeToObjectiveC()();
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

    a2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    a3 = v15;

  }
  v16 = *(_QWORD *)(v4 + 48);
  *(_QWORD *)(v4 + 40) = a2;
  *(_QWORD *)(v4 + 48) = a3;
  swift_bridgeObjectRelease(v16);
  if (a1 && (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState + 8) & 1) == 0)
  {
    v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentState);
    v28 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v29 = swift_allocObject(v28, 72, 7);
    *(_OWORD *)(v29 + 16) = xmmword_1000AF070;
    v30 = sub_100060F1C(v27);
    v32 = v31;
    *(_QWORD *)(v29 + 56) = &type metadata for String;
    *(_QWORD *)(v29 + 64) = sub_100009084();
    *(_QWORD *)(v29 + 32) = v30;
    *(_QWORD *)(v29 + 40) = v32;
    sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
    swift_retain(a1);
    v34 = (void *)static OS_os_log.default.getter(v33);
    v35 = static os_log_type_t.default.getter(v34);
    os_log(_:dso:log:type:_:)("BusinessChat: IMBApplePayViewModel creating title/subtitle with state = %@", 74, 2, &_mh_execute_header, v34, v35, v29);
    swift_bridgeObjectRelease(v29);

    sub_10008B5A8(v27);
    swift_release_n(a1, 2);
  }
  else
  {
    v17 = type metadata accessor for IMBApplePayViewModel();
    v18 = swift_getObjCClassFromMetadata(v17);
    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v18);
    v20 = String._bridgeToObjectiveC()();
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;
    swift_release(a1);

    v26 = *(_QWORD *)(v4 + 48);
    *(_QWORD *)(v4 + 40) = v23;
    *(_QWORD *)(v4 + 48) = v25;
    swift_bridgeObjectRelease(v26);
  }
  return v4;
}

void sub_10008B5A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjCClassFromMetadata;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  NSString v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;

  v3 = v1[9];
  v1[8] = 0;
  v1[9] = 0;
  swift_bridgeObjectRelease(v3);
  v4 = sub_10008BE8C();
  if (v5)
  {
    v6 = v4;
    v7 = v5;
    switch(a1)
    {
      case 0:
      case 5:
        swift_bridgeObjectRelease(v5);
        v8 = sub_10008C150();
        if (!v8)
          v8 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
        goto LABEL_7;
      case 1:
        swift_bridgeObjectRelease(v5);
        v16 = sub_10008CDB8();
        goto LABEL_10;
      case 2:
        swift_bridgeObjectRelease(v5);
        v16 = sub_10008BCA8();
LABEL_10:
        v19 = v18;
        v20 = v1[6];
        v1[5] = v16;
        v1[6] = v17;
        swift_bridgeObjectRelease(v20);
        goto LABEL_17;
      case 3:
        swift_bridgeObjectRelease(v5);
        v8 = sub_10008C414();
LABEL_7:
        v15 = (void *)v1[7];
        v1[7] = v8;
        break;
      case 4:
        v30 = type metadata accessor for IMBApplePayViewModel();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v30);
        v32 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
        v33 = String._bridgeToObjectiveC()();
        v34 = String._bridgeToObjectiveC()();
        v35 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, v34, 0);

        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
        v29 = v36;

        goto LABEL_13;
      case 6:
        swift_bridgeObjectRelease(v5);
        sub_10008BE8C();
        if (v47)
        {
          v48 = v47;
          v49 = objc_allocWithZone((Class)NSAttributedString);
          v50 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v48);
          v19 = objc_msgSend(v49, "initWithString:", v50);

        }
        else
        {
          v19 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
        }
LABEL_17:
        v15 = (void *)v1[7];
        v1[7] = v19;
        break;
      case 7:
        v21 = type metadata accessor for IMBApplePayViewModel();
        v22 = swift_getObjCClassFromMetadata(v21);
        v23 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v22);
        v24 = String._bridgeToObjectiveC()();
        v25 = String._bridgeToObjectiveC()();
        v26 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, v25, 0);

        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;

LABEL_13:
        v37 = sub_100007D40((uint64_t *)&unk_1000ECE50);
        v38 = swift_allocObject(v37, 72, 7);
        *(_OWORD *)(v38 + 16) = xmmword_1000AF070;
        *(_QWORD *)(v38 + 56) = &type metadata for String;
        *(_QWORD *)(v38 + 64) = sub_100009084();
        *(_QWORD *)(v38 + 32) = v6;
        *(_QWORD *)(v38 + 40) = v7;
        v39 = static String.localizedStringWithFormat(_:_:)(v27, v29, v38);
        v41 = v40;
        swift_bridgeObjectRelease(v29);
        swift_bridgeObjectRelease(v38);
        v42 = v1[11];
        v1[10] = v39;
        v1[11] = v41;
        swift_bridgeObjectRelease(v42);
        v43 = v1[11];
        v44 = objc_allocWithZone((Class)NSAttributedString);
        swift_bridgeObjectRetain(v43);
        v45 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v43);
        v46 = objc_msgSend(v44, "initWithString:", v45);

        v15 = (void *)v1[7];
        v1[7] = v46;
        break;
      default:
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Business/IMBApplePayViewModel.swift", 35, 2, 66, 0);
        __break(1u);
        JUMPOUT(0x10008BAA0);
    }

    v51 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v52 = swift_allocObject(v51, 112, 7);
    *(_OWORD *)(v52 + 16) = xmmword_1000ADFC0;
    v54 = v1[5];
    v53 = v1[6];
    *(_QWORD *)(v52 + 56) = &type metadata for String;
    v55 = sub_100009084();
    *(_QWORD *)(v52 + 64) = v55;
    *(_QWORD *)(v52 + 32) = v54;
    *(_QWORD *)(v52 + 40) = v53;
    v56 = (void *)v1[7];
    swift_bridgeObjectRetain(v53);
    v57 = objc_msgSend(v56, "debugDescription");
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
    v60 = v59;

    *(_QWORD *)(v52 + 96) = &type metadata for String;
    *(_QWORD *)(v52 + 104) = v55;
    *(_QWORD *)(v52 + 72) = v58;
    *(_QWORD *)(v52 + 80) = v60;
    v61 = sub_1000090C8(0, (unint64_t *)&qword_1000ECE70, OS_os_log_ptr);
    v63 = (id)static OS_os_log.default.getter(v61);
    v62 = static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)("BusinessChat: IMBApplePayViewModel returning title = %@\tsubtitle = %@", 69, 2, &_mh_execute_header, v63, v62, v52);
    swift_bridgeObjectRelease(v52);
    v14 = v63;
  }
  else
  {
    v9 = sub_10008CDB8();
    v11 = v10;
    v12 = v1[6];
    v1[5] = v9;
    v1[6] = v13;
    swift_bridgeObjectRelease(v12);
    v14 = (void *)v1[7];
    v1[7] = v11;
  }

}

uint64_t sub_10008BAC0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  _BYTE v27[24];

  v1 = v0;
  v2 = sub_100007D40(&qword_1000ED070);
  __chkstk_darwin(v2, v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = __chkstk_darwin(v6, v8);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9, v12);
  v14 = &v27[-v13 - 8];
  v15 = v0[2];
  if (v15)
  {
    swift_retain(v0[2]);
    if (sub_10000D654())
    {
      v16 = v15 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate;
      swift_beginAccess(v15 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_merchantSessionExpireDate, v27, 0, 0);
      sub_10008CD30(v16, (uint64_t)v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_10008CD78((uint64_t)v5);
      }
      else
      {
        v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v14, v5, v6);
        Date.init()(v17);
        v18 = static Date.> infix(_:_:)(v11, v14);
        v19 = *(void (**)(char *, uint64_t))(v7 + 8);
        v19(v11, v6);
        v19(v14, v6);
        if ((v18 & 1) != 0)
        {
          v20 = 2;
LABEL_10:
          sub_10008B5A8(v20);
          swift_release(v15);
          goto LABEL_11;
        }
      }
      v20 = 1;
      goto LABEL_10;
    }
    swift_release(v15);
  }
  sub_10008B5A8(1);
LABEL_11:
  v21 = v1[5];
  v22 = v1[6];
  v23 = (void *)v1[7];
  swift_bridgeObjectRetain(v22);
  v24 = v23;
  return v21;
}

uint64_t sub_10008BCA8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;

  v1 = sub_10008BE8C();
  if (v2)
  {
    v3 = v1;
    v4 = v2;
    v5 = type metadata accessor for IMBApplePayViewModel();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v8 = String._bridgeToObjectiveC()();
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v14 = sub_100007D40((uint64_t *)&unk_1000ECE50);
    v15 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1000AF070;
    *(_QWORD *)(v15 + 56) = &type metadata for String;
    *(_QWORD *)(v15 + 64) = sub_100009084();
    *(_QWORD *)(v15 + 32) = v3;
    *(_QWORD *)(v15 + 40) = v4;
    static String.localizedStringWithFormat(_:_:)(v11, v13, v15);
    v17 = v16;
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v15);
    v18 = objc_allocWithZone((Class)NSAttributedString);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v20 = objc_msgSend(v18, "initWithString:", v19);

    v21 = (void *)v0[7];
    v0[7] = v20;

  }
  v22 = v0[5];
  v23 = v0[6];
  v24 = (void *)v0[7];
  swift_bridgeObjectRetain(v23);
  v25 = v24;
  return v22;
}

unint64_t sub_10008BE8C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  float v15;
  float v16;
  float v17;
  float v18;
  id v19;
  void *v20;
  NSString v21;
  id v22;
  void *v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 16);
  if (!v1)
    return v1;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest);
  if (v2)
  {
    swift_retain(*(_QWORD *)(v0 + 16));
    v3 = objc_msgSend(v2, "paymentSummaryItems");
    v4 = sub_1000090C8(0, (unint64_t *)&unk_1000ED010, PKPaymentSummaryItem_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);
    swift_release(v1);

    if (!((unint64_t)v5 >> 62))
      goto LABEL_4;
  }
  else
  {
    v5 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_4:
      v1 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v1)
        goto LABEL_5;
LABEL_22:
      swift_bridgeObjectRelease(v5);
      return v1;
    }
  }
  if (v5 < 0)
    v24 = v5;
  else
    v24 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v1 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v5);
  if (!v1)
    goto LABEL_22;
LABEL_5:
  result = v1 - 1;
  if (__OFSUB__(v1, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_28:
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v5);
LABEL_10:
    v8 = v7;
    swift_bridgeObjectRelease(v5);
    v9 = objc_msgSend(v8, "amount");

    if (v9)
    {
      v10 = *(_QWORD *)(v0 + 16);
      if (v10 && (v11 = *(void **)(v10 + OBJC_IVAR____TtC8Business17IMBPaymentRequest_paymentRequest)) != 0)
      {
        v12 = objc_msgSend(v11, "currencyCode");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v14 = v13;

        objc_msgSend(v9, "floatValue");
        v16 = roundf(v15);
        objc_msgSend(v9, "floatValue");
        v18 = v17;
        v19 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
        v20 = v19;
        if (v16 == v18)
        {
          objc_msgSend(v19, "setMinimumFractionDigits:", 0);
          objc_msgSend(v20, "setMaximumFractionDigits:", 0);
        }
        v21 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v14);
        objc_msgSend(v20, "setCurrencyCode:", v21);

        objc_msgSend(v20, "setNumberStyle:", 10);
        v22 = objc_msgSend(v20, "stringFromNumber:", v9);
        if (v22)
        {
          v23 = v22;
          v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);

          return v1;
        }

      }
      else
      {

      }
    }
    return 0;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v5 + 8 * result + 32);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

id sub_10008C150()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v37;

  v1 = sub_10008BE8C();
  if (!v2)
    return 0;
  v3 = v1;
  v4 = v2;
  v5 = type metadata accessor for IMBApplePayViewModel();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "bundleForClass:", ObjCClassFromMetadata);
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  v17 = sub_100009084();
  *(_QWORD *)(v16 + 64) = v17;
  *(_QWORD *)(v16 + 32) = v3;
  *(_QWORD *)(v16 + 40) = v4;
  swift_bridgeObjectRetain(v4);
  v18 = static String.localizedStringWithFormat(_:_:)(v12, v14, v16);
  v37 = v3;
  v20 = v19;
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v16);
  v21 = v0[9];
  v0[8] = v18;
  v0[9] = v20;
  swift_bridgeObjectRelease(v21);
  v22 = objc_msgSend(v7, "bundleForClass:", ObjCClassFromMetadata);
  v23 = String._bridgeToObjectiveC()();
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v29 = swift_allocObject(v15, 112, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1000ADFC0;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  *(_QWORD *)(v29 + 64) = v17;
  *(_QWORD *)(v29 + 32) = v37;
  *(_QWORD *)(v29 + 40) = v4;
  v31 = v0[3];
  v30 = v0[4];
  *(_QWORD *)(v29 + 96) = &type metadata for String;
  *(_QWORD *)(v29 + 104) = v17;
  *(_QWORD *)(v29 + 72) = v31;
  *(_QWORD *)(v29 + 80) = v30;
  swift_bridgeObjectRetain(v30);
  v32 = static String.localizedStringWithFormat(_:_:)(v26, v28, v29);
  v34 = v33;
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v29);
  v35 = sub_10008C6F4(v32, v34);
  swift_bridgeObjectRelease(v34);
  return v35;
}

id sub_10008C414()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v37;

  v1 = sub_10008BE8C();
  if (!v2)
    return *(id *)(v0 + 56);
  v3 = v1;
  v4 = v2;
  v5 = type metadata accessor for IMBApplePayViewModel();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "bundleForClass:", ObjCClassFromMetadata);
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15 = sub_100007D40((uint64_t *)&unk_1000ECE50);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1000AF070;
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  v17 = sub_100009084();
  *(_QWORD *)(v16 + 64) = v17;
  *(_QWORD *)(v16 + 32) = v3;
  *(_QWORD *)(v16 + 40) = v4;
  swift_bridgeObjectRetain(v4);
  v18 = static String.localizedStringWithFormat(_:_:)(v12, v14, v16);
  v37 = v3;
  v20 = v19;
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v16);
  v21 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 64) = v18;
  *(_QWORD *)(v0 + 72) = v20;
  swift_bridgeObjectRelease(v21);
  v22 = objc_msgSend(v7, "bundleForClass:", ObjCClassFromMetadata);
  v23 = String._bridgeToObjectiveC()();
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v29 = swift_allocObject(v15, 112, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1000ADFC0;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  *(_QWORD *)(v29 + 64) = v17;
  *(_QWORD *)(v29 + 32) = v37;
  *(_QWORD *)(v29 + 40) = v4;
  v31 = *(_QWORD *)(v0 + 24);
  v30 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v29 + 96) = &type metadata for String;
  *(_QWORD *)(v29 + 104) = v17;
  *(_QWORD *)(v29 + 72) = v31;
  *(_QWORD *)(v29 + 80) = v30;
  swift_bridgeObjectRetain(v30);
  v32 = static String.localizedStringWithFormat(_:_:)(v26, v28, v29);
  v34 = v33;
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v29);
  v35 = sub_10008C6F4(v32, v34);
  swift_bridgeObjectRelease(v34);
  return v35;
}

id sub_10008C6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id result;
  id v5;
  int IsAccessibilityContentSizeCategory;
  NSString v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;

  v3 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v3);
  result = (id)UIApp;
  if (UIApp)
  {
    v5 = objc_msgSend(UIApp, "preferredContentSizeCategory");
    IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory();

    if (IsAccessibilityContentSizeCategory)
    {
      v7 = String._bridgeToObjectiveC()();
      v8 = String._bridgeToObjectiveC()();
      v9 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend(v7, "stringByReplacingOccurrencesOfString:withString:", v8, v9);

      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      v14 = *(_QWORD *)(v2 + 88);
      *(_QWORD *)(v2 + 80) = v11;
      *(_QWORD *)(v2 + 88) = v13;
      swift_bridgeObjectRelease(v14);
    }
    v15 = *(_QWORD *)(v2 + 88);
    v16 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain(v15);
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
    v18 = objc_msgSend(v16, "initWithString:", v17);

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10008C84C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));

  return v0;
}

uint64_t sub_10008C898()
{
  uint64_t v0;

  sub_10008C84C();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for IMBApplePayViewModel()
{
  return objc_opt_self(_TtC8Business20IMBApplePayViewModel);
}

void sub_10008C8D8(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  void *v8;
  id v17;
  void *v18;
  id v19;
  id v20;
  objc_super v21;

  objc_msgSend(v8, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 1);
  v21.receiver = v8;
  v21.super_class = (Class)type metadata accessor for WinterpegTextAttachment();
  objc_msgSendSuper2(&v21, "attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:", a1, a2, a3, a4, a5, a6, a7, a8);
  v17 = objc_msgSend(v8, "image");
  if (v17)
  {
    v18 = v17;
    if (UIApp)
    {
      v19 = objc_msgSend(UIApp, "preferredContentSizeCategory");
      v20 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v19);

      _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v20);
      objc_msgSend(v18, "size");
      objc_msgSend(v18, "size");

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_10008CB1C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  Class isa;
  NSString v9;
  id v10;
  objc_super v12;

  isa = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8BusinessP33_F1257CEC6FBB055D52A44E01318C013B23WinterpegTextAttachment_fontDescender] = 0;
  if (a2 >> 60 != 15)
    isa = Data._bridgeToObjectiveC()().super.isa;
  if (a4)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for WinterpegTextAttachment();
  v10 = objc_msgSendSuper2(&v12, "initWithData:ofType:", isa, v9);
  sub_100010BE8(a1, a2);

  return v10;
}

id sub_10008CCDC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WinterpegTextAttachment();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WinterpegTextAttachment()
{
  return objc_opt_self(_TtC8BusinessP33_F1257CEC6FBB055D52A44E01318C013B23WinterpegTextAttachment);
}

uint64_t sub_10008CD30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007D40(&qword_1000ED070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008CD78(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007D40(&qword_1000ED070);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008CDB8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;

  v0 = type metadata accessor for IMBApplePayViewModel();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  return v6;
}

void sub_10008CEB0(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for IMBApplePayViewModel();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2);
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "bundleForClass:", ObjCClassFromMetadata);
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_msgSend(v4, "bundleForClass:", ObjCClassFromMetadata);
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = objc_msgSend(v4, "bundleForClass:", ObjCClassFromMetadata);
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  *a1 = v9;
  a1[1] = v11;
  a1[2] = v16;
  a1[3] = v18;
  a1[4] = v23;
  a1[5] = v25;
}

void sub_10008D0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  const __CFString *v8;
  const __CFString *v9;
  const __CFString *v10;
  unint64_t v11;
  const __CFDictionary *isa;
  uint64_t v13[6];
  _BYTE v14[104];

  sub_10008CEB0(v13);
  v0 = v13[0];
  v1 = v13[1];
  v2 = v13[2];
  v3 = v13[3];
  v4 = v13[4];
  v5 = v13[5];
  v6 = sub_100007D40(&qword_1000F02F8);
  inited = swift_initStackObject(v6, v14);
  *(_QWORD *)(inited + 32) = kCFUserNotificationAlertHeaderKey;
  *(_QWORD *)(inited + 40) = v0;
  *(_OWORD *)(inited + 16) = xmmword_1000AF280;
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = kCFUserNotificationAlertMessageKey;
  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 80) = kCFUserNotificationDefaultButtonTitleKey;
  *(_QWORD *)(inited + 88) = v4;
  *(_QWORD *)(inited + 96) = v5;
  v8 = (id)kCFUserNotificationDefaultButtonTitleKey;
  v9 = (id)kCFUserNotificationAlertHeaderKey;
  v10 = (id)kCFUserNotificationAlertMessageKey;
  v11 = sub_10004E16C(inited);
  LODWORD(v13[0]) = -1;
  sub_100007D40(&qword_1000F0300);
  sub_10008D22C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);

}

unint64_t sub_10008D22C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000F0308;
  if (!qword_1000F0308)
  {
    v1 = sub_100007DCC(&qword_1000F0300);
    sub_10008D290();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1000F0308);
  }
  return result;
}

unint64_t sub_10008D290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000EBF50;
  if (!qword_1000EBF50)
  {
    type metadata accessor for CFString(255);
    result = swift_getWitnessTable(&unk_1000AEF70, v1);
    atomic_store(result, (unint64_t *)&qword_1000EBF50);
  }
  return result;
}

char *sub_10008D2E8(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  NSString v7;
  char *v8;
  void *v9;
  char *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  objc_super v20;

  v4 = OBJC_IVAR____TtC8Business23IMBDefaultSectionHeader_headerLabel;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v2;
  *(_QWORD *)&v2[v4] = objc_msgSend(v5, "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Business23IMBDefaultSectionHeader____lazy_storage___separatorView] = 0;

  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v20.receiver = v6;
  v20.super_class = (Class)type metadata accessor for IMBDefaultSectionHeader();
  v8 = (char *)objc_msgSendSuper2(&v20, "initWithReuseIdentifier:", v7);

  v9 = *(void **)&v8[OBJC_IVAR____TtC8Business23IMBDefaultSectionHeader_headerLabel];
  v10 = v8;
  if (sub_10002DA10() >= 2u)
    v11 = sub_1000907D4((uint64_t)UIFontTextStyleSubheadline, 0, *(uint64_t *)&UIFontWeightSemibold, 0, 1, 11.0);
  else
    v11 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v12 = v11;
  objc_msgSend(v9, "setFont:", v11);

  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "secondaryLabelColor");
  objc_msgSend(v9, "setTextColor:", v14);

  objc_msgSend(v9, "setNumberOfLines:", 0);
  v15 = objc_msgSend(v10, "contentView");
  if (sub_10002DA10() >= 2u)
  {
    if (qword_1000EBBF8 != -1)
      swift_once(&qword_1000EBBF8, sub_10002D65C);
    v16 = (id)qword_1000F8978;
  }
  else
  {
    v16 = objc_msgSend(v13, "systemGroupedBackgroundColor");
  }
  v17 = v16;
  objc_msgSend(v15, "setBackgroundColor:", v16);

  objc_msgSend(v10, "addSubview:", v9);
  v18 = sub_10008DA74();
  objc_msgSend(v10, "addSubview:", v18);

  sub_10008D658();
  return v10;
}

void sub_10008D658()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  char v4;
  double v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  char v22;
  char *v23;
  double v24;
  double v25;
  char *v26;
  id v27;
  id v28;
  id v29;
  double v30;
  id v31;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Business23IMBDefaultSectionHeader_headerLabel];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v1, "topAnchor");
  v3 = objc_msgSend(v0, "topAnchor");
  v4 = sub_10002DA10();
  v5 = 12.0;
  if ((v4 & 0xFE) == 0)
    v5 = 30.0;
  v6 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v3, v5);

  objc_msgSend(v6, "setActive:", 1);
  if (sub_10002DA10() == 2)
  {
    v7 = objc_msgSend(v1, "leadingAnchor");
    v8 = objc_msgSend(v0, "leadingAnchor");
    v9 = 0.0;
    if ((sub_10002DA10() & 0xFE) != 0)
      v10 = 16.0;
    else
      v10 = 0.0;
    v11 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v8, v10);

    objc_msgSend(v11, "setActive:", 1);
    v12 = objc_msgSend(v1, "trailingAnchor");
    v13 = objc_msgSend(v0, "trailingAnchor");
    if (sub_10002DA10() >= 2u)
    {
      if ((sub_10002DA10() & 0xFE) != 0)
        v9 = 16.0;
      else
        v9 = 0.0;
    }
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, -v9);
  }
  else
  {
    v15 = objc_msgSend(v1, "leftAnchor");
    v16 = objc_msgSend(v0, "layoutMarginsGuide");
    v17 = objc_msgSend(v16, "leftAnchor");

    sub_10002DA10();
    v18 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v17, 0.0);

    objc_msgSend(v18, "setActive:", 1);
    v12 = objc_msgSend(v1, "rightAnchor");
    v19 = objc_msgSend(v0, "layoutMarginsGuide");
    v13 = objc_msgSend(v19, "rightAnchor");

    v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);
  }
  v20 = v14;

  objc_msgSend(v20, "setActive:", 1);
  v21 = v0;
  v22 = sub_10002DA10();
  v23 = v21;
  v24 = 0.0;
  v25 = 0.0;
  if (sub_10002DA10() >= 2u)
  {
    if ((sub_10002DA10() & 0xFE) != 0)
      v25 = 16.0;
    else
      v25 = 0.0;
  }
  if ((v22 & 0xFE) != 0)
    v24 = 16.0;
  v26 = v23;
  sub_10008DB70(1, v26, v26, v26, v26, 0.0, v24, v25);

  v27 = sub_10008DA74();
  v28 = objc_msgSend(v27, "topAnchor");

  v29 = objc_msgSend(v1, "bottomAnchor");
  v31 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, 8.0);

  LODWORD(v30) = 1144750080;
  objc_msgSend(v31, "setPriority:", v30);
  objc_msgSend(v31, "setActive:", 1);

}

id sub_10008DA74()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8Business23IMBDefaultSectionHeader____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Business23IMBDefaultSectionHeader____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Business23IMBDefaultSectionHeader____lazy_storage___separatorView);
  }
  else
  {
    v4 = type metadata accessor for SeparatorView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_10008DAE8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IMBDefaultSectionHeader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IMBDefaultSectionHeader()
{
  return objc_opt_self(_TtC8Business23IMBDefaultSectionHeader);
}

void sub_10008DB70(char a1, void *a2, void *a3, void *a4, void *a5, double a6, double a7, double a8)
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  double v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;

  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = sub_10008DA74();

  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = v18;
  v21 = sub_10008DA74();

  v22 = objc_msgSend(v21, "heightAnchor");
  v23 = objc_msgSend(v20, "traitCollection");
  objc_msgSend(v23, "displayScale");
  v25 = v24;

  if (v25 <= 0.0)
  {
    v26 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v26, "scale");
    v25 = v27;

    if (v25 <= 0.0)
      v25 = 1.0;
  }
  v28 = objc_msgSend(v22, "constraintEqualToConstant:", 1.0 / v25);

  objc_msgSend(v28, "setActive:", 1);
  v29 = v20;
  v30 = sub_10008DA74();

  if ((a1 & 1) != 0)
  {
    v31 = objc_msgSend(v30, "bottomAnchor");

    v32 = objc_msgSend(v15, "bottomAnchor");
  }
  else
  {
    v31 = objc_msgSend(v30, "topAnchor");

    v32 = objc_msgSend(v15, "topAnchor");
  }
  v33 = v32;
  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, a6);

  objc_msgSend(v34, "setActive:", 1);
  v35 = v29;
  v36 = sub_10008DA74();

  v37 = objc_msgSend(v36, "leadingAnchor");
  v38 = objc_msgSend(v16, "leadingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, a7);

  objc_msgSend(v39, "setActive:", 1);
  v40 = v35;
  v41 = sub_10008DA74();

  v42 = objc_msgSend(v41, "trailingAnchor");
  v43 = objc_msgSend(v17, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, -a8);

  objc_msgSend(v44, "setActive:", 1);
}

id sub_10008DEEC()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for IMBTimeSelectionTableViewController();
  objc_msgSendSuper2(&v7, "viewDidLoad");
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message], "rootObject");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for IMBProposedEvent();
    v4 = swift_dynamicCastClass(v2, v3);
    if (v4)
    {
      v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_proposedEvent];
      *(_QWORD *)&v0[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_proposedEvent] = v4;
      swift_release(v5);
    }
    else
    {
      swift_unknownObjectRelease(v2);
    }
  }
  sub_10008FEA8();
  sub_10008F1D4();
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView], "setSeparatorStyle:", 0);
}

void sub_10008DFE8(char a1)
{
  char *v1;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  NSString v11;
  uint64_t v12;
  _BYTE v13[24];
  objc_super v14;
  Swift::String v15;

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for IMBTimeSelectionTableViewController();
  objc_msgSendSuper2(&v14, "viewWillAppear:", a1 & 1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_nothingAvailableLabel];
  v4 = (uint64_t *)&v1[OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_dates];
  swift_beginAccess(v4, v13, 0, 0);
  v5 = *v4;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v12 = v5;
    else
      v12 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  objc_msgSend(v3, "setHidden:", v6 != 0);
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001000BB600;
  v8._countAndFlagsBits = 0xD000000000000016;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v15)._object;

  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v3, "setText:", v11);

}

void sub_10008E1B0()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  char *v10;

  sub_100082930();
  if (sub_10002DA10() != 2)
  {
LABEL_6:
    v3 = *(void **)&v0[OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView];
    objc_msgSend(v3, "setEstimatedRowHeight:", UITableViewAutomaticDimension);
    v4 = type metadata accessor for IMBDateTableViewCell();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v6);

    v10 = sub_100082DDC();
    v8 = v7;
    ObjectType = swift_getObjectType(v10);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 48))(0, ObjectType, v8);

    return;
  }
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    if (qword_1000EBBF8 != -1)
      swift_once(&qword_1000EBBF8, sub_10002D65C);
    objc_msgSend(v2, "setBackgroundColor:", qword_1000F8978);

    goto LABEL_6;
  }
  __break(1u);
}

char *sub_10008E2F4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  Swift::String v20;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Business32IMBDetailedMessageViewController_message);
  v2 = objc_msgSend(v1, "receivedMessage");
  if (v2 && (v3 = v2, v4 = objc_msgSend(v2, "title"), v3, v4))
  {
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v20._object = (void *)0xE000000000000000;
    v7._object = (void *)0x80000001000BB5E0;
    v7._countAndFlagsBits = 0xD000000000000019;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0;
    v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v4, v8, v20);
    object = v9._object;
    countAndFlagsBits = v9._countAndFlagsBits;
  }
  v10 = countAndFlagsBits;
  v11 = (uint64_t)object;

  v12 = objc_msgSend(v1, "receivedMessage");
  v13 = v12;
  if (!v12)
    goto LABEL_9;
  v14 = objc_msgSend(v12, "subtitle");

  if (!v14)
  {
    v13 = 0;
LABEL_9:
    v16 = 0;
    goto LABEL_10;
  }
  v13 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

LABEL_10:
  v17 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView), "separatorColor");
  v18 = objc_allocWithZone((Class)type metadata accessor for IMBTableHeaderView());
  return sub_10009102C(v10, v11, (uint64_t)v13, v16, v17);
}

uint64_t sub_10008E4A0()
{
  int v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v12;
  uint64_t result;
  Swift::String v14;
  Swift::String v15;

  v0 = sub_10002DA10();
  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v14._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 1145980243;
  v3._object = (void *)0xE400000000000000;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v14);

  if (v0 == 2)
  {
    v6 = objc_msgSend(v1, "mainBundle");
    v15._object = (void *)0xE000000000000000;
    v7._countAndFlagsBits = 0x4C45434E4143;
    v7._object = (void *)0xE600000000000000;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v15._countAndFlagsBits = 0;
    v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v15);
    countAndFlagsBits = v9._countAndFlagsBits;
    object = v9._object;

  }
  else
  {
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  v12 = type metadata accessor for FooterToolbarModel();
  result = swift_allocObject(v12, 97, 7);
  *(_QWORD *)(result + 80) = 0;
  *(_QWORD *)(result + 88) = 0;
  *(_BYTE *)(result + 96) = 1;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0xE000000000000000;
  *(_QWORD *)(result + 32) = 0;
  *(Swift::String *)(result + 40) = v5;
  *(_QWORD *)(result + 56) = 2;
  *(_QWORD *)(result + 64) = countAndFlagsBits;
  *(_QWORD *)(result + 72) = object;
  return result;
}

void sub_10008E74C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t i;
  id v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  char v25[24];

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  v5 = (uint64_t)objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v4);

  if (!v5)
    goto LABEL_25;
  v6 = type metadata accessor for IMBDateTableViewCell();
  v7 = (char *)swift_dynamicCastClassUnconditional(v5, v6, 0, 0, 0);
  v8 = IndexPath.row.getter(v7);
  v9 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_dates);
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_dates, v25, 0, 0);
  v11 = *v9;
  if ((*v9 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v10 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8 < v10)
      {
        v12 = *(_QWORD *)(v11 + 8 * v8 + 32);
        swift_retain(v12);
        goto LABEL_6;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain(*v9);
  v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v11);
  swift_bridgeObjectRelease(v11);
LABEL_6:
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData];
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_cellData] = v12;
  swift_retain(v12);
  swift_release(v13);
  sub_10006EDFC();
  sub_10006F69C();
  swift_release(v12);
  v14 = &v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeSelectionDelegate];
  *((_QWORD *)v14 + 1) = &off_1000DA190;
  swift_unknownObjectWeakAssign(v14, v2);
  v15 = *(void **)((char *)v2 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView);
  v16 = (id)v5;
  v17 = objc_msgSend(v15, "separatorColor");
  objc_msgSend(v7, "setSeparatorColor:", v17);

  v2 = *(_QWORD **)((char *)v2 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedTimeslot);
  v18 = (uint64_t *)(*(_QWORD *)&v7[OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotContainerView]
                  + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews);
  swift_beginAccess(v18, &v24, 0, 0);
  v5 = *v18;
  if (!*v18)
    return;
  v10 = v5 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v5 >> 62)
  {
LABEL_18:
    if (v5 >= 0)
      v23 = v10;
    else
      v23 = v5;
    swift_retain(v2);
    swift_bridgeObjectRetain(v5);
    v19 = _CocoaArrayWrapper.endIndex.getter(v23);
    if (v19)
      goto LABEL_9;
    goto LABEL_22;
  }
  v19 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain(v2);
  swift_bridgeObjectRetain(v5);
  if (v19)
  {
LABEL_9:
    if (v19 >= 1)
    {
      for (i = 0; i != v19; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0)
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
        else
          v21 = *(id *)(v5 + 8 * i + 32);
        v22 = v21;
        sub_10007A218(v2);

      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_release(v2);
}

uint64_t sub_10008EAE0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t j;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t i;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];
  _BYTE v58[40];

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_proposedEvent);
  if (v2)
  {
    v3 = result;
    v55 = OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedTimeslot;
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedTimeslot);
    if (v4)
    {
      v5 = *(_QWORD *)(result + 16);
      v6 = *(_QWORD *)(v3 + 24);
      v7 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      v9 = v5 == v7 && v6 == v8;
      if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v7, v8, 0) & 1) != 0)
      {
        swift_retain(v2);
        sub_10008F11C();
        return swift_release(v2);
      }
    }
    swift_retain(v2);
    v56 = v1;
    v10 = sub_10008F7CC(v3);
    v12 = v11;
    v13 = sub_100007D40((uint64_t *)&unk_1000ED490);
    inited = swift_initStackObject(v13, v58);
    *(_OWORD *)(inited + 16) = xmmword_1000AF120;
    *(_QWORD *)(inited + 32) = v3;
    v57[0] = inited;
    specialized Array._endMutation()(inited);
    swift_retain(v3);
    v15 = sub_10001255C(v57[0]);
    swift_bridgeObjectRelease(v57[0]);
    v16 = *(_QWORD *)(v2 + 80);
    *(_QWORD *)(v2 + 80) = v15;
    swift_bridgeObjectRelease(v16);
    v17 = *(_QWORD *)(v56 + v55);
    *(_QWORD *)(v56 + v55) = v3;
    swift_retain(v2);
    swift_retain(v3);
    swift_release(v17);
    v18 = *(_QWORD *)(v56 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedEvent);
    *(_QWORD *)(v56 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedEvent) = v2;
    v51 = v2;
    swift_retain(v2);
    swift_release(v18);
    v19 = *(void **)(v56 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedMessage);
    *(_QWORD *)(v56 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedMessage) = v10;
    v50 = v10;

    v20 = *(void **)(v56 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedMessageInfo);
    *(_QWORD *)(v56 + OBJC_IVAR____TtC8Business35IMBTimeSelectionTableViewController_selectedMessageInfo) = v12;
    v49 = v12;

    v21 = sub_100082DDC();
    v23 = v22;
    ObjectType = swift_getObjectType(v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(1, ObjectType, v23);

    v25 = v56;
    v26 = objc_msgSend(*(id *)(v56 + OBJC_IVAR____TtC8Business37IMBDetailedMessageTableViewController_tableView), "visibleCells");
    v27 = sub_1000090C8(0, &qword_1000F03B0, UITableViewCell_ptr);
    v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

    if ((unint64_t)v28 >> 62)
      goto LABEL_40;
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    v30 = v55;
    if (v29)
    {
LABEL_11:
      v31 = 0;
      v32 = v28 & 0xC000000000000001;
      v52 = v28 + 32;
      v53 = v28 & 0xFFFFFFFFFFFFFF8;
      for (i = v29; i != v31; v29 = i)
      {
        while (1)
        {
          if (v32)
          {
            v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v28);
          }
          else
          {
            if (v31 >= *(_QWORD *)(v53 + 16))
              goto LABEL_38;
            v33 = *(id *)(v52 + 8 * v31);
          }
          v34 = v33;
          if (__OFADD__(v31++, 1))
          {
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
LABEL_40:
            if (v28 < 0)
              v48 = v28;
            else
              v48 = v28 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v28);
            v29 = _CocoaArrayWrapper.endIndex.getter(v48);
            swift_bridgeObjectRelease(v28);
            v30 = v55;
            if (!v29)
              goto LABEL_35;
            goto LABEL_11;
          }
          v36 = type metadata accessor for IMBDateTableViewCell();
          v37 = swift_dynamicCastClass(v34, v36);
          if (v37)
          {
            v38 = *(_QWORD **)(v25 + v30);
            v39 = (uint64_t *)(*(_QWORD *)(v37 + OBJC_IVAR____TtC8Business20IMBDateTableViewCell_timeslotContainerView)
                            + OBJC_IVAR____TtC8Business25IMBTimeslotsContainerView_timeslotViews);
            swift_beginAccess(v39, v57, 0, 0);
            v40 = *v39;
            if (*v39)
              break;
          }

          if (v31 == v29)
            goto LABEL_35;
        }
        v41 = v28;
        if ((unint64_t)v40 >> 62)
        {
          if (v40 >= 0)
            v46 = v40 & 0xFFFFFFFFFFFFFF8;
          else
            v46 = *v39;
          swift_retain(v38);
          swift_bridgeObjectRetain(v40);
          v47 = v34;
          v28 = _CocoaArrayWrapper.endIndex.getter(v46);
          if (!v28)
          {
LABEL_33:

            swift_bridgeObjectRelease(v40);
            swift_release(v38);
            goto LABEL_34;
          }
        }
        else
        {
          v28 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain(v38);
          swift_bridgeObjectRetain(v40);
          v42 = v34;
          if (!v28)
            goto LABEL_33;
        }
        if (v28 < 1)
          goto LABEL_39;
        for (j = 0; j != v28; ++j)
        {
          if ((v40 & 0xC000000000000001) != 0)
            v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v40);
          else
            v44 = *(id *)(v40 + 8 * j + 32);
          v45 = v44;
          sub_10007A218(v38);

        }
        swift_bridgeObjectRelease(v40);
        swift_release(v38);
        v30 = v55;
        v25 = v56;
LABEL_34:
        v28 = v41;
      }
    }
LABEL_35:
    swift_bridgeObjectRelease(v28);

    return swift_release_n(v51, 2);
  }
  return result;
}

